// Copyright 2010 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module = typeof Module !== 'undefined' ? Module : {};

// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
// {{PRE_JSES}}

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
var key;
for (key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

Module['arguments'] = [];
Module['thisProgram'] = './this.program';
Module['quit'] = function(status, toThrow) {
  throw toThrow;
};
Module['preRun'] = [];
Module['postRun'] = [];

// Determine the runtime environment we are in. You can customize this by
// setting the ENVIRONMENT setting at compile time (see settings.js).

var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;
ENVIRONMENT_IS_WEB = typeof window === 'object';
ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

if (Module['ENVIRONMENT']) {
  throw new Error('Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -s ENVIRONMENT=web or -s ENVIRONMENT=node)');
}


// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)




// `/` should be present at the end if `scriptDirectory` is not empty
var scriptDirectory = '';
function locateFile(path) {
  if (Module['locateFile']) {
    return Module['locateFile'](path, scriptDirectory);
  } else {
    return scriptDirectory + path;
  }
}

if (ENVIRONMENT_IS_NODE) {
  scriptDirectory = __dirname + '/';

  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  var nodeFS;
  var nodePath;

  Module['read'] = function shell_read(filename, binary) {
    var ret;
    ret = tryParseAsDataURI(filename);
    if (!ret) {
      if (!nodeFS) nodeFS = require('fs');
      if (!nodePath) nodePath = require('path');
      filename = nodePath['normalize'](filename);
      ret = nodeFS['readFileSync'](filename);
    }
    return binary ? ret : ret.toString();
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  if (process['argv'].length > 1) {
    Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });
  // Currently node will swallow unhandled rejections, but this behavior is
  // deprecated, and in the future it will exit with error status.
  process['on']('unhandledRejection', abort);

  Module['quit'] = function(status) {
    process['exit'](status);
  };

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
} else
if (ENVIRONMENT_IS_SHELL) {


  if (typeof read != 'undefined') {
    Module['read'] = function shell_read(f) {
      var data = tryParseAsDataURI(f);
      if (data) {
        return intArrayToString(data);
      }
      return read(f);
    };
  }

  Module['readBinary'] = function readBinary(f) {
    var data;
    data = tryParseAsDataURI(f);
    if (data) {
      return data;
    }
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof quit === 'function') {
    Module['quit'] = function(status) {
      quit(status);
    }
  }
} else
if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  if (ENVIRONMENT_IS_WORKER) { // Check worker, not web, since window could be polyfilled
    scriptDirectory = self.location.href;
  } else if (document.currentScript) { // web
    scriptDirectory = document.currentScript.src;
  }
  // blob urls look like blob:http://site.com/etc/etc and we cannot infer anything from them.
  // otherwise, slice off the final part of the url to find the script directory.
  // if scriptDirectory does not contain a slash, lastIndexOf will return -1,
  // and scriptDirectory will correctly be replaced with an empty string.
  if (scriptDirectory.indexOf('blob:') !== 0) {
    scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf('/')+1);
  } else {
    scriptDirectory = '';
  }


  Module['read'] = function shell_read(url) {
    try {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.send(null);
      return xhr.responseText;
    } catch (err) {
      var data = tryParseAsDataURI(url);
      if (data) {
        return intArrayToString(data);
      }
      throw err;
    }
  };

  if (ENVIRONMENT_IS_WORKER) {
    Module['readBinary'] = function readBinary(url) {
      try {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, false);
        xhr.responseType = 'arraybuffer';
        xhr.send(null);
        return new Uint8Array(xhr.response);
      } catch (err) {
        var data = tryParseAsDataURI(url);
        if (data) {
          return data;
        }
        throw err;
      }
    };
  }

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
        return;
      }
      var data = tryParseAsDataURI(url);
      if (data) {
        onload(data.buffer);
        return;
      }
      onerror();
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  Module['setWindowTitle'] = function(title) { document.title = title };
} else
{
  throw new Error('environment detection error');
}

// Set up the out() and err() hooks, which are how we can print to stdout or
// stderr, respectively.
// If the user provided Module.print or printErr, use that. Otherwise,
// console.log is checked first, as 'print' on the web will open a print dialogue
// printErr is preferable to console.warn (works better in shells)
// bind(console) is necessary to fix IE/Edge closed dev tools panel behavior.
var out = Module['print'] || (typeof console !== 'undefined' ? console.log.bind(console) : (typeof print !== 'undefined' ? print : null));
var err = Module['printErr'] || (typeof printErr !== 'undefined' ? printErr : ((typeof console !== 'undefined' && console.warn.bind(console)) || out));

// Merge back in the overrides
for (key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;

// perform assertions in shell.js after we set up out() and err(), as otherwise if an assertion fails it cannot print the message
assert(typeof Module['memoryInitializerPrefixURL'] === 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['pthreadMainPrefixURL'] === 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['cdInitializerPrefixURL'] === 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');
assert(typeof Module['filePackagePrefixURL'] === 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');



// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// {{PREAMBLE_ADDITIONS}}

var STACK_ALIGN = 16;

// stack management, and other functionality that is provided by the compiled code,
// should not be used before it is ready
stackSave = stackRestore = stackAlloc = function() {
  abort('cannot use the stack before compiled code is ready to run, and has provided stack access');
};

function staticAlloc(size) {
  abort('staticAlloc is no longer available at runtime; instead, perform static allocations at compile time (using makeStaticAlloc)');
}

function dynamicAlloc(size) {
  assert(DYNAMICTOP_PTR);
  var ret = HEAP32[DYNAMICTOP_PTR>>2];
  var end = (ret + size + 15) & -16;
  if (end <= _emscripten_get_heap_size()) {
    HEAP32[DYNAMICTOP_PTR>>2] = end;
  } else {
    var success = _emscripten_resize_heap(end);
    if (!success) return 0;
  }
  return ret;
}

function alignMemory(size, factor) {
  if (!factor) factor = STACK_ALIGN; // stack alignment (16-byte) by default
  return Math.ceil(size / factor) * factor;
}

function getNativeTypeSize(type) {
  switch (type) {
    case 'i1': case 'i8': return 1;
    case 'i16': return 2;
    case 'i32': return 4;
    case 'i64': return 8;
    case 'float': return 4;
    case 'double': return 8;
    default: {
      if (type[type.length-1] === '*') {
        return 4; // A pointer
      } else if (type[0] === 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 === 0, 'getNativeTypeSize invalid bits ' + bits + ', type ' + type);
        return bits / 8;
      } else {
        return 0;
      }
    }
  }
}

function warnOnce(text) {
  if (!warnOnce.shown) warnOnce.shown = {};
  if (!warnOnce.shown[text]) {
    warnOnce.shown[text] = 1;
    err(text);
  }
}

var asm2wasmImports = { // special asm2wasm imports
    "f64-rem": function(x, y) {
        return x % y;
    },
    "debugger": function() {
        debugger;
    }
};



var jsCallStartIndex = 1;
var functionPointers = new Array(0);


// 'sig' parameter is required for the llvm backend but only when func is not
// already a WebAssembly function.
function addFunction(func, sig) {


  var base = 0;
  for (var i = base; i < base + 0; i++) {
    if (!functionPointers[i]) {
      functionPointers[i] = func;
      return jsCallStartIndex + i;
    }
  }
  throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';

}

function removeFunction(index) {

  functionPointers[index-jsCallStartIndex] = null;
}

var funcWrappers = {};

function getFuncWrapper(func, sig) {
  if (!func) return; // on null pointer, return undefined
  assert(sig);
  if (!funcWrappers[sig]) {
    funcWrappers[sig] = {};
  }
  var sigCache = funcWrappers[sig];
  if (!sigCache[func]) {
    // optimize away arguments usage in common cases
    if (sig.length === 1) {
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func);
      };
    } else if (sig.length === 2) {
      sigCache[func] = function dynCall_wrapper(arg) {
        return dynCall(sig, func, [arg]);
      };
    } else {
      // general case
      sigCache[func] = function dynCall_wrapper() {
        return dynCall(sig, func, Array.prototype.slice.call(arguments));
      };
    }
  }
  return sigCache[func];
}


function makeBigInt(low, high, unsigned) {
  return unsigned ? ((+((low>>>0)))+((+((high>>>0)))*4294967296.0)) : ((+((low>>>0)))+((+((high|0)))*4294967296.0));
}

function dynCall(sig, ptr, args) {
  if (args && args.length) {
    assert(args.length == sig.length-1);
    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
    return Module['dynCall_' + sig].apply(null, [ptr].concat(args));
  } else {
    assert(sig.length == 1);
    assert(('dynCall_' + sig) in Module, 'bad function pointer type - no table for sig \'' + sig + '\'');
    return Module['dynCall_' + sig].call(null, ptr);
  }
}

var tempRet0 = 0;

var setTempRet0 = function(value) {
  tempRet0 = value;
}

var getTempRet0 = function() {
  return tempRet0;
}

function getCompilerSetting(name) {
  throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for getCompilerSetting or emscripten_get_compiler_setting to work';
}

var Runtime = {
  // helpful errors
  getTempRet0: function() { abort('getTempRet0() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
  staticAlloc: function() { abort('staticAlloc() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
  stackAlloc: function() { abort('stackAlloc() is now a top-level function, after removing the Runtime object. Remove "Runtime."') },
};

// The address globals begin at. Very low in memory, for code size and optimization opportunities.
// Above 0 is static memory, starting with globals.
// Then the stack.
// Then 'dynamic' memory for sbrk.
var GLOBAL_BASE = 8;




// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html




/** @type {function(number, string, boolean=)} */
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for getValue: ' + type);
    }
  return null;
}




// Wasm globals

var wasmMemory;

// Potentially used for direct table calls.
var wasmTable;


//========================================
// Runtime essentials
//========================================

// whether we are quitting the application. no code should run after this.
// set in exit() and abort()
var ABORT = false;

// set by exit() and abort().  Passed to 'onExit' handler.
// NOTE: This is also used as the process return code code in shell environments
// but only when noExitRuntime is false.
var EXITSTATUS = 0;

/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
  return func;
}

// C calling interface.
function ccall(ident, returnType, argTypes, args, opts) {
  // For fast lookup of conversion functions
  var toC = {
    'string': function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        var len = (str.length << 2) + 1;
        ret = stackAlloc(len);
        stringToUTF8(str, ret, len);
      }
      return ret;
    },
    'array': function(arr) {
      var ret = stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    }
  };

  function convertReturnValue(ret) {
    if (returnType === 'string') return UTF8ToString(ret);
    if (returnType === 'boolean') return Boolean(ret);
    return ret;
  }

  var func = getCFunc(ident);
  var cArgs = [];
  var stack = 0;
  assert(returnType !== 'array', 'Return type should not be "array".');
  if (args) {
    for (var i = 0; i < args.length; i++) {
      var converter = toC[argTypes[i]];
      if (converter) {
        if (stack === 0) stack = stackSave();
        cArgs[i] = converter(args[i]);
      } else {
        cArgs[i] = args[i];
      }
    }
  }
  var ret = func.apply(null, cArgs);
  ret = convertReturnValue(ret);
  if (stack !== 0) stackRestore(stack);
  return ret;
}

function cwrap(ident, returnType, argTypes, opts) {
  return function() {
    return ccall(ident, returnType, argTypes, arguments, opts);
  }
}

/** @type {function(number, number, string, boolean=)} */
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_DYNAMIC = 2; // Cannot be freed except through sbrk
var ALLOC_NONE = 3; // Do not allocate

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
/** @type {function((TypedArray|Array<number>|number), string, number, number=)} */
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc,
    stackAlloc,
    dynamicAlloc][allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var stop;
    ptr = ret;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(/** @type {!Uint8Array} */ (slab), ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    assert(type, 'Must know what type to store in allocate!');

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!runtimeInitialized) return dynamicAlloc(size);
  return _malloc(size);
}




/** @type {function(number, number=)} */
function Pointer_stringify(ptr, length) {
  abort("this function has been removed - you should use UTF8ToString(ptr, maxBytesToRead) instead!");
}

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAPU8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}


// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

var UTF8Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf8') : undefined;

/**
 * @param {number} idx
 * @param {number=} maxBytesToRead
 * @return {string}
 */
function UTF8ArrayToString(u8Array, idx, maxBytesToRead) {
  var endIdx = idx + maxBytesToRead;
  var endPtr = idx;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  // (As a tiny code save trick, compare endPtr against endIdx using a negation, so that undefined means Infinity)
  while (u8Array[endPtr] && !(endPtr >= endIdx)) ++endPtr;

  if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
    return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
  } else {
    var str = '';
    // If building with TextDecoder, we have already computed the string length above, so test loop end condition against that
    while (idx < endPtr) {
      // For UTF8 byte structure, see:
      // http://en.wikipedia.org/wiki/UTF-8#Description
      // https://www.ietf.org/rfc/rfc2279.txt
      // https://tools.ietf.org/html/rfc3629
      var u0 = u8Array[idx++];
      if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
      var u1 = u8Array[idx++] & 63;
      if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
      var u2 = u8Array[idx++] & 63;
      if ((u0 & 0xF0) == 0xE0) {
        u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
      } else {
        if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte 0x' + u0.toString(16) + ' encountered when deserializing a UTF-8 string on the asm.js/wasm heap to a JS string!');
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (u8Array[idx++] & 63);
      }

      if (u0 < 0x10000) {
        str += String.fromCharCode(u0);
      } else {
        var ch = u0 - 0x10000;
        str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
      }
    }
  }
  return str;
}

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns a
// copy of that string as a Javascript String object.
// maxBytesToRead: an optional length that specifies the maximum number of bytes to read. You can omit
//                 this parameter to scan the string until the first \0 byte. If maxBytesToRead is
//                 passed, and the string at [ptr, ptr+maxBytesToReadr[ contains a null byte in the
//                 middle, then the string will cut short at that byte index (i.e. maxBytesToRead will
//                 not produce a string of exact length [ptr, ptr+maxBytesToRead[)
//                 N.B. mixing frequent uses of UTF8ToString() with and without maxBytesToRead may
//                 throw JS JIT optimizations off, so it is worth to consider consistently using one
//                 style or the other.
/**
 * @param {number} ptr
 * @param {number=} maxBytesToRead
 * @return {string}
 */
function UTF8ToString(ptr, maxBytesToRead) {
  return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';
}

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array.
//                    This count should include the null terminator,
//                    i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) {
      var u1 = str.charCodeAt(++i);
      u = 0x10000 + ((u & 0x3FF) << 10) | (u1 & 0x3FF);
    }
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 3 >= endIdx) break;
      if (u >= 0x200000) warnOnce('Invalid Unicode code point 0x' + u.toString(16) + ' encountered when serializing a JS string to an UTF-8 string on the asm.js/wasm heap! (Valid unicode code points should be in range 0-0x1FFFFF).');
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8 to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.
function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) ++len;
    else if (u <= 0x7FF) len += 2;
    else if (u <= 0xFFFF) len += 3;
    else len += 4;
  }
  return len;
}


// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

var UTF16Decoder = typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-16le') : undefined;
function UTF16ToString(ptr) {
  assert(ptr % 2 == 0, 'Pointer passed to UTF16ToString must be aligned to two bytes!');
  var endPtr = ptr;
  // TextDecoder needs to know the byte length in advance, it doesn't stop on null terminator by itself.
  // Also, use the length info to avoid running tiny strings through TextDecoder, since .subarray() allocates garbage.
  var idx = endPtr >> 1;
  while (HEAP16[idx]) ++idx;
  endPtr = idx << 1;

  if (endPtr - ptr > 32 && UTF16Decoder) {
    return UTF16Decoder.decode(HEAPU8.subarray(ptr, endPtr));
  } else {
    var i = 0;

    var str = '';
    while (1) {
      var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
      if (codeUnit == 0) return str;
      ++i;
      // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
      str += String.fromCharCode(codeUnit);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 2 == 0, 'Pointer passed to stringToUTF16 must be aligned to two bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF16(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}

function UTF32ToString(ptr) {
  assert(ptr % 4 == 0, 'Pointer passed to UTF32ToString must be aligned to four bytes!');
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  assert(outPtr % 4 == 0, 'Pointer passed to stringToUTF32 must be aligned to four bytes!');
  assert(typeof maxBytesToWrite == 'number', 'stringToUTF32(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}

// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}

// Allocate heap space for a JS string, and write it there.
// It is the responsibility of the caller to free() that memory.
function allocateUTF8(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = _malloc(size);
  if (ret) stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Allocate stack space for a JS string, and write it there.
function allocateUTF8OnStack(str) {
  var size = lengthBytesUTF8(str) + 1;
  var ret = stackAlloc(size);
  stringToUTF8Array(str, HEAP8, ret, size);
  return ret;
}

// Deprecated: This function should not be called because it is unsafe and does not provide
// a maximum length limit of how many bytes it is allowed to write. Prefer calling the
// function stringToUTF8Array() instead, which takes in a maximum length that can be used
// to be secure from out of bounds writes.
/** @deprecated */
function writeStringToMemory(string, buffer, dontAddNull) {
  warnOnce('writeStringToMemory is deprecated and should not be called! Use stringToUTF8() instead!');

  var /** @type {number} */ lastChar, /** @type {number} */ end;
  if (dontAddNull) {
    // stringToUTF8Array always appends null. If we don't want to do that, remember the
    // character that existed at the location where the null will be placed, and restore
    // that after the write (below).
    end = buffer + lengthBytesUTF8(string);
    lastChar = HEAP8[end];
  }
  stringToUTF8(string, buffer, Infinity);
  if (dontAddNull) HEAP8[end] = lastChar; // Restore the value under the null character.
}

function writeArrayToMemory(array, buffer) {
  assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
  HEAP8.set(array, buffer);
}

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    assert(str.charCodeAt(i) === str.charCodeAt(i)&0xff);
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}





function demangle(func) {
  var __cxa_demangle_func = Module['___cxa_demangle'] || Module['__cxa_demangle'];
  assert(__cxa_demangle_func);
  try {
    var s = func;
    if (s.startsWith('__Z'))
      s = s.substr(1);
    var len = lengthBytesUTF8(s)+1;
    var buf = _malloc(len);
    stringToUTF8(s, buf, len);
    var status = _malloc(4);
    var ret = __cxa_demangle_func(buf, 0, 0, status);
    if (HEAP32[((status)>>2)] === 0 && ret) {
      return UTF8ToString(ret);
    }
    // otherwise, libcxxabi failed
  } catch(e) {
    // ignore problems here
  } finally {
    if (buf) _free(buf);
    if (status) _free(status);
    if (ret) _free(ret);
  }
  // failure when using libcxxabi, don't demangle
  return func;
}

function demangleAll(text) {
  var regex =
    /__Z[\w\d_]+/g;
  return text.replace(regex,
    function(x) {
      var y = demangle(x);
      return x === y ? x : (y + ' [' + x + ']');
    });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  var js = jsStackTrace();
  if (Module['extraStackTrace']) js += '\n' + Module['extraStackTrace']();
  return demangleAll(js);
}



// Memory management

var PAGE_SIZE = 16384;
var WASM_PAGE_SIZE = 65536;
var ASMJS_PAGE_SIZE = 16777216;

function alignUp(x, multiple) {
  if (x % multiple > 0) {
    x += multiple - (x % multiple);
  }
  return x;
}

var HEAP,
/** @type {ArrayBuffer} */
  buffer,
/** @type {Int8Array} */
  HEAP8,
/** @type {Uint8Array} */
  HEAPU8,
/** @type {Int16Array} */
  HEAP16,
/** @type {Uint16Array} */
  HEAPU16,
/** @type {Int32Array} */
  HEAP32,
/** @type {Uint32Array} */
  HEAPU32,
/** @type {Float32Array} */
  HEAPF32,
/** @type {Float64Array} */
  HEAPF64;

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}


var STATIC_BASE = 8,
    STACK_BASE = 58560,
    STACKTOP = STACK_BASE,
    STACK_MAX = 5301440,
    DYNAMIC_BASE = 5301440,
    DYNAMICTOP_PTR = 58528;

assert(STACK_BASE % 16 === 0, 'stack must start aligned');
assert(DYNAMIC_BASE % 16 === 0, 'heap must start aligned');



var TOTAL_STACK = 5242880;
if (Module['TOTAL_STACK']) assert(TOTAL_STACK === Module['TOTAL_STACK'], 'the stack size can no longer be determined at runtime')

var INITIAL_TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 268435456;
if (INITIAL_TOTAL_MEMORY < TOTAL_STACK) err('TOTAL_MEMORY should be larger than TOTAL_STACK, was ' + INITIAL_TOTAL_MEMORY + '! (TOTAL_STACK=' + TOTAL_STACK + ')');

// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(typeof Int32Array !== 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray !== undefined && Int32Array.prototype.set !== undefined,
       'JS engine does not provide full typed array support');







// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
  assert(buffer.byteLength === INITIAL_TOTAL_MEMORY, 'provided buffer should be ' + INITIAL_TOTAL_MEMORY + ' bytes, but it is ' + buffer.byteLength);
} else {
  // Use a WebAssembly memory where available
  {
    buffer = new ArrayBuffer(INITIAL_TOTAL_MEMORY);
  }
  assert(buffer.byteLength === INITIAL_TOTAL_MEMORY);
}
updateGlobalBufferViews();


HEAP32[DYNAMICTOP_PTR>>2] = DYNAMIC_BASE;


// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  assert((STACK_MAX & 3) == 0);
  HEAPU32[(STACK_MAX >> 2)-1] = 0x02135467;
  HEAPU32[(STACK_MAX >> 2)-2] = 0x89BACDFE;
}

function checkStackCookie() {
  if (HEAPU32[(STACK_MAX >> 2)-1] != 0x02135467 || HEAPU32[(STACK_MAX >> 2)-2] != 0x89BACDFE) {
    abort('Stack overflow! Stack cookie has been overwritten, expected hex dwords 0x89BACDFE and 0x02135467, but received 0x' + HEAPU32[(STACK_MAX >> 2)-2].toString(16) + ' ' + HEAPU32[(STACK_MAX >> 2)-1].toString(16));
  }
  // Also test the global address 0 for integrity.
  if (HEAP32[0] !== 0x63736d65 /* 'emsc' */) throw 'Runtime error: The application has corrupted its heap memory area (address zero)!';
}

function abortStackOverflow(allocSize) {
  abort('Stack overflow! Attempted to allocate ' + allocSize + ' bytes on the stack, but stack has only ' + (STACK_MAX - stackSave() + allocSize) + ' bytes available!');
}


  HEAP32[0] = 0x63736d65; /* 'emsc' */



// Endianness check (note: assumes compiler arch was little-endian)
HEAP16[1] = 0x6373;
if (HEAPU8[2] !== 0x73 || HEAPU8[3] !== 0x63) throw 'Runtime error: expected the system to be little-endian!';

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Module['dynCall_v'](func);
      } else {
        Module['dynCall_vi'](func, callback.arg);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the main() is called

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  checkStackCookie();
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
TTY.init();
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  checkStackCookie();
  FS.ignorePermissions = false;
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  checkStackCookie();
  runtimeExited = true;
}

function postRun() {
  checkStackCookie();
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}

function addOnExit(cb) {
}

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


assert(Math.imul, 'This browser does not support Math.imul(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.fround, 'This browser does not support Math.fround(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.clz32, 'This browser does not support Math.clz32(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');
assert(Math.trunc, 'This browser does not support Math.trunc(), build with LEGACY_VM_SUPPORT or POLYFILL_OLD_MATH_FUNCTIONS to add in a polyfill');

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_round = Math.round;
var Math_min = Math.min;
var Math_max = Math.max;
var Math_clz32 = Math.clz32;
var Math_trunc = Math.trunc;



// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// Module.preRun (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};

function getUniqueRunDependency(id) {
  var orig = id;
  while (1) {
    if (!runDependencyTracking[id]) return id;
    id = orig + Math.random();
  }
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval !== 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(function() {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            err('still waiting on run dependencies:');
          }
          err('dependency: ' + dep);
        }
        if (shown) {
          err('(end of list)');
        }
      }, 10000);
    }
  } else {
    err('warning: run dependency added without ID');
  }
}

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    err('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data


var memoryInitializer = null;






// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

// Prefix of data URIs emitted by SINGLE_FILE and related options.
var dataURIPrefix = 'data:application/octet-stream;base64,';

// Indicates whether filename is a base64 data URI.
function isDataURI(filename) {
  return String.prototype.startsWith ?
      filename.startsWith(dataURIPrefix) :
      filename.indexOf(dataURIPrefix) === 0;
}





// === Body ===

var ASM_CONSTS = [function($0, $1, $2, $3, $4, $5) { if (!artoolkit["frameMalloc"]) { artoolkit["frameMalloc"] = ({}); } var frameMalloc = artoolkit["frameMalloc"]; frameMalloc["framepointer"] = $1; frameMalloc["framesize"] = $2; frameMalloc["camera"] = $3; frameMalloc["transform"] = $4; },
 function($0, $1, $2, $3) { if (!artoolkit["multiEachMarkerInfo"]) { artoolkit["multiEachMarkerInfo"] = ({}); } var multiEachMarker = artoolkit["multiEachMarkerInfo"]; multiEachMarker['visible'] = $0; multiEachMarker['pattId'] = $1; multiEachMarker['pattType'] = $2; multiEachMarker['width'] = $3; },
 function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18, $19, $20, $21, $22, $23, $24, $25, $26, $27, $28, $29, $30, $31, $32) { var $a = arguments; var i = 12; if (!artoolkit["markerInfo"]) { artoolkit["markerInfo"] = ({ pos: [0,0], line: [[0,0,0], [0,0,0], [0,0,0], [0,0,0]], vertex: [[0,0], [0,0], [0,0], [0,0]] }); } var markerInfo = artoolkit["markerInfo"]; markerInfo["area"] = $0; markerInfo["id"] = $1; markerInfo["idPatt"] = $2; markerInfo["idMatrix"] = $3; markerInfo["dir"] = $4; markerInfo["dirPatt"] = $5; markerInfo["dirMatrix"] = $6; markerInfo["cf"] = $7; markerInfo["cfPatt"] = $8; markerInfo["cfMatrix"] = $9; markerInfo["pos"][0] = $10; markerInfo["pos"][1] = $11; markerInfo["line"][0][0] = $a[i++]; markerInfo["line"][0][1] = $a[i++]; markerInfo["line"][0][2] = $a[i++]; markerInfo["line"][1][0] = $a[i++]; markerInfo["line"][1][1] = $a[i++]; markerInfo["line"][1][2] = $a[i++]; markerInfo["line"][2][0] = $a[i++]; markerInfo["line"][2][1] = $a[i++]; markerInfo["line"][2][2] = $a[i++]; markerInfo["line"][3][0] = $a[i++]; markerInfo["line"][3][1] = $a[i++]; markerInfo["line"][3][2] = $a[i++]; markerInfo["vertex"][0][0] = $a[i++]; markerInfo["vertex"][0][1] = $a[i++]; markerInfo["vertex"][1][0] = $a[i++]; markerInfo["vertex"][1][1] = $a[i++]; markerInfo["vertex"][2][0] = $a[i++]; markerInfo["vertex"][2][1] = $a[i++]; markerInfo["vertex"][3][0] = $a[i++]; markerInfo["vertex"][3][1] = $a[i++]; markerInfo["errorCorrected"] = $a[i++]; },
 function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13) { var $a = arguments; var i = 0; if (!artoolkit["NFTMarkerInfo"]) { artoolkit["NFTMarkerInfo"] = ({ id: 0, error: -1, found: 0, pose: [0,0,0,0, 0,0,0,0, 0,0,0,0] }); } var markerInfo = artoolkit["NFTMarkerInfo"]; markerInfo["id"] = $a[i++]; markerInfo["error"] = $a[i++]; markerInfo["found"] = 1; markerInfo["pose"][0] = $a[i++]; markerInfo["pose"][1] = $a[i++]; markerInfo["pose"][2] = $a[i++]; markerInfo["pose"][3] = $a[i++]; markerInfo["pose"][4] = $a[i++]; markerInfo["pose"][5] = $a[i++]; markerInfo["pose"][6] = $a[i++]; markerInfo["pose"][7] = $a[i++]; markerInfo["pose"][8] = $a[i++]; markerInfo["pose"][9] = $a[i++]; markerInfo["pose"][10] = $a[i++]; markerInfo["pose"][11] = $a[i++]; },
 function($0) { var $a = arguments; var i = 0; if (!artoolkit["NFTMarkerInfo"]) { artoolkit["NFTMarkerInfo"] = ({ id: 0, error: -1, found: 0, pose: [0,0,0,0, 0,0,0,0, 0,0,0,0] }); } var markerInfo = artoolkit["NFTMarkerInfo"]; markerInfo["id"] = $a[i++]; markerInfo["error"] = -1; markerInfo["found"] = 0; markerInfo["pose"][0] = 0; markerInfo["pose"][1] = 0; markerInfo["pose"][2] = 0; markerInfo["pose"][3] = 0; markerInfo["pose"][4] = 0; markerInfo["pose"][5] = 0; markerInfo["pose"][6] = 0; markerInfo["pose"][7] = 0; markerInfo["pose"][8] = 0; markerInfo["pose"][9] = 0; markerInfo["pose"][10] = 0; markerInfo["pose"][11] = 0; }];

function _emscripten_asm_const_iiiiiii(code, a0, a1, a2, a3, a4, a5) {
  return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5);
}

function _emscripten_asm_const_iiiid(code, a0, a1, a2, a3) {
  return ASM_CONSTS[code](a0, a1, a2, a3);
}

function _emscripten_asm_const_iiddddddddddddd(code, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13) {
  return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

function _emscripten_asm_const_ii(code, a0) {
  return ASM_CONSTS[code](a0);
}

function _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi(code, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32) {
  return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a30, a31, a32);
}




// STATICTOP = STATIC_BASE + 58552;
/* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__I_000101() } }, { func: function() { __GLOBAL__sub_I_ARToolKitJS_cpp() } }, { func: function() { __GLOBAL__sub_I_bind_cpp() } }, { func: function() { ___emscripten_environ_constructor() } }, { func: function() { __GLOBAL__sub_I_iostream_cpp() } });


memoryInitializer = "data:application/octet-stream;base64,";





/* no memory initializer */
var tempDoublePtr = 58544
assert(tempDoublePtr % 8 == 0);

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}

function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}

// {{PRE_LIBRARY}}


  
  var ENV={};function ___buildEnvironment(environ) {
      // WARNING: Arbitrary limit!
      var MAX_ENV_VALUES = 64;
      var TOTAL_ENV_SIZE = 1024;
  
      // Statically allocate memory for the environment.
      var poolPtr;
      var envPtr;
      if (!___buildEnvironment.called) {
        ___buildEnvironment.called = true;
        // Set default values. Use string keys for Closure Compiler compatibility.
        ENV['USER'] = ENV['LOGNAME'] = 'web_user';
        ENV['PATH'] = '/';
        ENV['PWD'] = '/';
        ENV['HOME'] = '/home/web_user';
        ENV['LANG'] = 'C.UTF-8';
        ENV['_'] = Module['thisProgram'];
        // Allocate memory.
        poolPtr = getMemory(TOTAL_ENV_SIZE);
        envPtr = getMemory(MAX_ENV_VALUES * 4);
        HEAP32[((envPtr)>>2)]=poolPtr;
        HEAP32[((environ)>>2)]=envPtr;
      } else {
        envPtr = HEAP32[((environ)>>2)];
        poolPtr = HEAP32[((envPtr)>>2)];
      }
  
      // Collect key=value lines.
      var strings = [];
      var totalSize = 0;
      for (var key in ENV) {
        if (typeof ENV[key] === 'string') {
          var line = key + '=' + ENV[key];
          strings.push(line);
          totalSize += line.length;
        }
      }
      if (totalSize > TOTAL_ENV_SIZE) {
        throw new Error('Environment size exceeded TOTAL_ENV_SIZE!');
      }
  
      // Make new.
      var ptrSize = 4;
      for (var i = 0; i < strings.length; i++) {
        var line = strings[i];
        writeAsciiToMemory(line, poolPtr);
        HEAP32[(((envPtr)+(i * ptrSize))>>2)]=poolPtr;
        poolPtr += line.length + 1;
      }
      HEAP32[(((envPtr)+(strings.length * ptrSize))>>2)]=0;
    }

  
  
  function _emscripten_get_now() { abort() }
  
  function _emscripten_get_now_is_monotonic() {
      // return whether emscripten_get_now is guaranteed monotonic; the Date.now
      // implementation is not :(
      return (0
        || ENVIRONMENT_IS_NODE
        || (typeof dateNow !== 'undefined')
        || (typeof performance === 'object' && performance && typeof performance['now'] === 'function')
        );
    }
  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      else err('failed to set errno from JS');
      return value;
    }function _clock_gettime(clk_id, tp) {
      // int clock_gettime(clockid_t clk_id, struct timespec *tp);
      var now;
      if (clk_id === 0) {
        now = Date.now();
      } else if (clk_id === 1 && _emscripten_get_now_is_monotonic()) {
        now = _emscripten_get_now();
      } else {
        ___setErrNo(22);
        return -1;
      }
      HEAP32[((tp)>>2)]=(now/1000)|0; // seconds
      HEAP32[(((tp)+(4))>>2)]=((now % 1000)*1000*1000)|0; // nanoseconds
      return 0;
    }function ___clock_gettime(a0,a1
  /*``*/) {
  return _clock_gettime(a0,a1);
  }

  function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  
  
  function ___cxa_free_exception(ptr) {
      try {
        return _free(ptr);
      } catch(e) { // XXX FIXME
        err('exception during cxa_free_exception: ' + e);
      }
    }var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var key in EXCEPTIONS.infos) {
          var ptr = +key; // the iteration key is a string, and if we throw this, it must be an integer as that is what we look for
          var adj = EXCEPTIONS.infos[ptr].adjusted;
          var len = adj.length;
          for (var i = 0; i < len; i++) {
            if (adj[i] === adjusted) {
              return ptr;
            }
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        // A rethrown exception can reach refcount 0; it must not be discarded
        // Its next handler will clear the rethrown flag and addRef it, prior to
        // final decRef and destruction here
        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Module['dynCall_vi'](info.destructor, ptr);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};function ___cxa_begin_catch(ptr) {
      var info = EXCEPTIONS.infos[ptr];
      if (info && !info.caught) {
        info.caught = true;
        __ZSt18uncaught_exceptionv.uncaught_exception--;
      }
      if (info) info.rethrown = false;
      EXCEPTIONS.caught.push(ptr);
      EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
      return ptr;
    }

  
  
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((setTempRet0(0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((setTempRet0(0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted.push(thrown);
          return ((setTempRet0(typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((setTempRet0(throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: [ptr],
        type: type,
        destructor: destructor,
        refcount: 0,
        caught: false,
        rethrown: false
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

  function ___cxa_uncaught_exception() {
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }

  function ___gxx_personality_v0() {
    }

  function ___lock() {}

  function ___map_file(pathname, size) {
      ___setErrNo(1);
      return -1;
    }

  
    

  
  
  
  var PATH={splitPath:function (filename) {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },normalizeArray:function (parts, allowAboveRoot) {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up; up--) {
            parts.unshift('..');
          }
        }
        return parts;
      },normalize:function (path) {
        var isAbsolute = path.charAt(0) === '/',
            trailingSlash = path.substr(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },dirname:function (path) {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.substr(0, dir.length - 1);
        }
        return root + dir;
      },basename:function (path) {
        // EMSCRIPTEN return '/'' for '/', not an empty string
        if (path === '/') return '/';
        var lastSlash = path.lastIndexOf('/');
        if (lastSlash === -1) return path;
        return path.substr(lastSlash+1);
      },extname:function (path) {
        return PATH.splitPath(path)[3];
      },join:function () {
        var paths = Array.prototype.slice.call(arguments, 0);
        return PATH.normalize(paths.join('/'));
      },join2:function (l, r) {
        return PATH.normalize(l + '/' + r);
      },resolve:function () {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? arguments[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path !== 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = path.charAt(0) === '/';
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter(function(p) {
          return !!p;
        }), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },relative:function (from, to) {
        from = PATH.resolve(from).substr(1);
        to = PATH.resolve(to).substr(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      }};
  
  var TTY={ttys:[],init:function () {
        // https://github.com/emscripten-core/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process['stdin']['setEncoding']('utf8');
        // }
      },shutdown:function () {
        // https://github.com/emscripten-core/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process['stdin']['pause']();
        // }
      },register:function (dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },stream_ops:{open:function (stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(19);
          }
          stream.tty = tty;
          stream.seekable = false;
        },close:function (stream) {
          // flush any pending line data
          stream.tty.ops.flush(stream.tty);
        },flush:function (stream) {
          stream.tty.ops.flush(stream.tty);
        },read:function (stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(6);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(5);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(11);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.timestamp = Date.now();
          }
          return bytesRead;
        },write:function (stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(6);
          }
          try {
            for (var i = 0; i < length; i++) {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            }
          } catch (e) {
            throw new FS.ErrnoError(5);
          }
          if (length) {
            stream.node.timestamp = Date.now();
          }
          return i;
        }},default_tty_ops:{get_char:function (tty) {
          if (!tty.input.length) {
            var result = null;
            if (ENVIRONMENT_IS_NODE) {
              // we will read data by chunks of BUFSIZE
              var BUFSIZE = 256;
              var buf = new Buffer(BUFSIZE);
              var bytesRead = 0;
  
              var isPosixPlatform = (process.platform != 'win32'); // Node doesn't offer a direct check, so test by exclusion
  
              var fd = process.stdin.fd;
              if (isPosixPlatform) {
                // Linux and Mac cannot use process.stdin.fd (which isn't set up as sync)
                var usingDevice = false;
                try {
                  fd = fs.openSync('/dev/stdin', 'r');
                  usingDevice = true;
                } catch (e) {}
              }
  
              try {
                bytesRead = fs.readSync(fd, buf, 0, BUFSIZE, null);
              } catch(e) {
                // Cross-platform differences: on Windows, reading EOF throws an exception, but on other OSes,
                // reading EOF returns 0. Uniformize behavior by treating the EOF exception to return 0.
                if (e.toString().indexOf('EOF') != -1) bytesRead = 0;
                else throw e;
              }
  
              if (usingDevice) { fs.closeSync(fd); }
              if (bytesRead > 0) {
                result = buf.slice(0, bytesRead).toString('utf-8');
              } else {
                result = null;
              }
            } else
            if (typeof window != 'undefined' &&
              typeof window.prompt == 'function') {
              // Browser.
              result = window.prompt('Input: ');  // returns null on cancel
              if (result !== null) {
                result += '\n';
              }
            } else if (typeof readline == 'function') {
              // Command line.
              result = readline();
              if (result !== null) {
                result += '\n';
              }
            }
            if (!result) {
              return null;
            }
            tty.input = intArrayFromString(result, true);
          }
          return tty.input.shift();
        },put_char:function (tty, val) {
          if (val === null || val === 10) {
            out(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            out(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }},default_tty1_ops:{put_char:function (tty, val) {
          if (val === null || val === 10) {
            err(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },flush:function (tty) {
          if (tty.output && tty.output.length > 0) {
            err(UTF8ArrayToString(tty.output, 0));
            tty.output = [];
          }
        }}};
  
  var MEMFS={ops_table:null,mount:function (mount) {
        return MEMFS.createNode(null, '/', 16384 | 511 /* 0777 */, 0);
      },createNode:function (parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(1);
        }
        if (!MEMFS.ops_table) {
          MEMFS.ops_table = {
            dir: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                lookup: MEMFS.node_ops.lookup,
                mknod: MEMFS.node_ops.mknod,
                rename: MEMFS.node_ops.rename,
                unlink: MEMFS.node_ops.unlink,
                rmdir: MEMFS.node_ops.rmdir,
                readdir: MEMFS.node_ops.readdir,
                symlink: MEMFS.node_ops.symlink
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek
              }
            },
            file: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: {
                llseek: MEMFS.stream_ops.llseek,
                read: MEMFS.stream_ops.read,
                write: MEMFS.stream_ops.write,
                allocate: MEMFS.stream_ops.allocate,
                mmap: MEMFS.stream_ops.mmap,
                msync: MEMFS.stream_ops.msync
              }
            },
            link: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr,
                readlink: MEMFS.node_ops.readlink
              },
              stream: {}
            },
            chrdev: {
              node: {
                getattr: MEMFS.node_ops.getattr,
                setattr: MEMFS.node_ops.setattr
              },
              stream: FS.chrdev_stream_ops
            }
          };
        }
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.timestamp = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },getFileDataAsRegularArray:function (node) {
        if (node.contents && node.contents.subarray) {
          var arr = [];
          for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);
          return arr; // Returns a copy of the original data.
        }
        return node.contents; // No-op, the file contents are already in a JS array. Return as-is.
      },getFileDataAsTypedArray:function (node) {
        if (!node.contents) return new Uint8Array;
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },expandFileStorage:function (node, newCapacity) {
        var prevCapacity = node.contents ? node.contents.length : 0;
        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
        // avoid overshooting the allocation cap by a very large margin.
        var CAPACITY_DOUBLING_MAX = 1024 * 1024;
        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) | 0);
        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
        var oldContents = node.contents;
        node.contents = new Uint8Array(newCapacity); // Allocate new storage.
        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
        return;
      },resizeFileStorage:function (node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
          return;
        }
        if (!node.contents || node.contents.subarray) { // Resize a typed array if that is being used as the backing store.
          var oldContents = node.contents;
          node.contents = new Uint8Array(new ArrayBuffer(newSize)); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
          return;
        }
        // Backing with a JS array.
        if (!node.contents) node.contents = [];
        if (node.contents.length > newSize) node.contents.length = newSize;
        else while (node.contents.length < newSize) node.contents.push(0);
        node.usedBytes = newSize;
      },node_ops:{getattr:function (node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.timestamp);
          attr.mtime = new Date(node.timestamp);
          attr.ctime = new Date(node.timestamp);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },lookup:function (parent, name) {
          throw FS.genericErrors[2];
        },mknod:function (parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },rename:function (old_node, new_dir, new_name) {
          // if we're overwriting a directory at new_name, make sure it's empty.
          if (FS.isDir(old_node.mode)) {
            var new_node;
            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {
            }
            if (new_node) {
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(39);
              }
            }
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          old_node.name = new_name;
          new_dir.contents[new_name] = old_node;
          old_node.parent = new_dir;
        },unlink:function (parent, name) {
          delete parent.contents[name];
        },rmdir:function (parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(39);
          }
          delete parent.contents[name];
        },readdir:function (node) {
          var entries = ['.', '..']
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 511 /* 0777 */ | 40960, 0);
          node.link = oldpath;
          return node;
        },readlink:function (node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(22);
          }
          return node.link;
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },write:function (stream, buffer, offset, length, position, canOwn) {
          // If memory can grow, we don't want to hold on to references of
          // the memory Buffer, as they may get invalidated. That means
          // we need to do a copy here.
          // FIXME: this is inefficient as the file packager may have
          //        copied the data into memory already - we may want to
          //        integrate more there and let the file packager loading
          //        code be able to query if memory growth is on or off.
          if (canOwn) {
            warnOnce('file packager has copied file data into memory, but in memory growth we are forced to copy it again (see --no-heap-copy)');
          }
          canOwn = false;
  
          if (!length) return 0;
          var node = stream.node;
          node.timestamp = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) {
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = new Uint8Array(buffer.subarray(offset, offset + length));
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) node.contents.set(buffer.subarray(offset, offset + length), position); // Use typed array write if available.
          else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position+length);
          return length;
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(22);
          }
          return position;
        },allocate:function (stream, offset, length) {
          MEMFS.expandFileStorage(stream.node, offset + length);
          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
        },mmap:function (stream, buffer, offset, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(19);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if ( !(flags & 2) &&
                (contents.buffer === buffer || contents.buffer === buffer.buffer) ) {
            // We can't emulate MAP_SHARED when the file is not backed by the buffer
            // we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            // Try to avoid unnecessary slices.
            if (position > 0 || position + length < stream.node.usedBytes) {
              if (contents.subarray) {
                contents = contents.subarray(position, position + length);
              } else {
                contents = Array.prototype.slice.call(contents, position, position + length);
              }
            }
            allocated = true;
            ptr = _malloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(12);
            }
            buffer.set(contents, ptr);
          }
          return { ptr: ptr, allocated: allocated };
        },msync:function (stream, buffer, offset, length, mmapFlags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(19);
          }
          if (mmapFlags & 2) {
            // MAP_PRIVATE calls need not to be synced back to underlying fs
            return 0;
          }
  
          var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        }}};
  
  var IDBFS={dbs:{},indexedDB:function () {
        if (typeof indexedDB !== 'undefined') return indexedDB;
        var ret = null;
        if (typeof window === 'object') ret = window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
        assert(ret, 'IDBFS used, but indexedDB not supported');
        return ret;
      },DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:function (mount) {
        // reuse all of the core MEMFS functionality
        return MEMFS.mount.apply(null, arguments);
      },syncfs:function (mount, populate, callback) {
        IDBFS.getLocalSet(mount, function(err, local) {
          if (err) return callback(err);
  
          IDBFS.getRemoteSet(mount, function(err, remote) {
            if (err) return callback(err);
  
            var src = populate ? remote : local;
            var dst = populate ? local : remote;
  
            IDBFS.reconcile(src, dst, callback);
          });
        });
      },getDB:function (name, callback) {
        // check the cache first
        var db = IDBFS.dbs[name];
        if (db) {
          return callback(null, db);
        }
  
        var req;
        try {
          req = IDBFS.indexedDB().open(name, IDBFS.DB_VERSION);
        } catch (e) {
          return callback(e);
        }
        if (!req) {
          return callback("Unable to connect to IndexedDB");
        }
        req.onupgradeneeded = function(e) {
          var db = e.target.result;
          var transaction = e.target.transaction;
  
          var fileStore;
  
          if (db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)) {
            fileStore = transaction.objectStore(IDBFS.DB_STORE_NAME);
          } else {
            fileStore = db.createObjectStore(IDBFS.DB_STORE_NAME);
          }
  
          if (!fileStore.indexNames.contains('timestamp')) {
            fileStore.createIndex('timestamp', 'timestamp', { unique: false });
          }
        };
        req.onsuccess = function() {
          db = req.result;
  
          // add to the cache
          IDBFS.dbs[name] = db;
          callback(null, db);
        };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },getLocalSet:function (mount, callback) {
        var entries = {};
  
        function isRealDir(p) {
          return p !== '.' && p !== '..';
        };
        function toAbsolute(root) {
          return function(p) {
            return PATH.join2(root, p);
          }
        };
  
        var check = FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));
  
        while (check.length) {
          var path = check.pop();
          var stat;
  
          try {
            stat = FS.stat(path);
          } catch (e) {
            return callback(e);
          }
  
          if (FS.isDir(stat.mode)) {
            check.push.apply(check, FS.readdir(path).filter(isRealDir).map(toAbsolute(path)));
          }
  
          entries[path] = { timestamp: stat.mtime };
        }
  
        return callback(null, { type: 'local', entries: entries });
      },getRemoteSet:function (mount, callback) {
        var entries = {};
  
        IDBFS.getDB(mount.mountpoint, function(err, db) {
          if (err) return callback(err);
  
          try {
            var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readonly');
            transaction.onerror = function(e) {
              callback(this.error);
              e.preventDefault();
            };
  
            var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
            var index = store.index('timestamp');
  
            index.openKeyCursor().onsuccess = function(event) {
              var cursor = event.target.result;
  
              if (!cursor) {
                return callback(null, { type: 'remote', db: db, entries: entries });
              }
  
              entries[cursor.primaryKey] = { timestamp: cursor.key };
  
              cursor.continue();
            };
          } catch (e) {
            return callback(e);
          }
        });
      },loadLocalEntry:function (path, callback) {
        var stat, node;
  
        try {
          var lookup = FS.lookupPath(path);
          node = lookup.node;
          stat = FS.stat(path);
        } catch (e) {
          return callback(e);
        }
  
        if (FS.isDir(stat.mode)) {
          return callback(null, { timestamp: stat.mtime, mode: stat.mode });
        } else if (FS.isFile(stat.mode)) {
          // Performance consideration: storing a normal JavaScript array to a IndexedDB is much slower than storing a typed array.
          // Therefore always convert the file contents to a typed array first before writing the data to IndexedDB.
          node.contents = MEMFS.getFileDataAsTypedArray(node);
          return callback(null, { timestamp: stat.mtime, mode: stat.mode, contents: node.contents });
        } else {
          return callback(new Error('node type not supported'));
        }
      },storeLocalEntry:function (path, entry, callback) {
        try {
          if (FS.isDir(entry.mode)) {
            FS.mkdir(path, entry.mode);
          } else if (FS.isFile(entry.mode)) {
            FS.writeFile(path, entry.contents, { canOwn: true });
          } else {
            return callback(new Error('node type not supported'));
          }
  
          FS.chmod(path, entry.mode);
          FS.utime(path, entry.timestamp, entry.timestamp);
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },removeLocalEntry:function (path, callback) {
        try {
          var lookup = FS.lookupPath(path);
          var stat = FS.stat(path);
  
          if (FS.isDir(stat.mode)) {
            FS.rmdir(path);
          } else if (FS.isFile(stat.mode)) {
            FS.unlink(path);
          }
        } catch (e) {
          return callback(e);
        }
  
        callback(null);
      },loadRemoteEntry:function (store, path, callback) {
        var req = store.get(path);
        req.onsuccess = function(event) { callback(null, event.target.result); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },storeRemoteEntry:function (store, path, entry, callback) {
        var req = store.put(entry, path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },removeRemoteEntry:function (store, path, callback) {
        var req = store.delete(path);
        req.onsuccess = function() { callback(null); };
        req.onerror = function(e) {
          callback(this.error);
          e.preventDefault();
        };
      },reconcile:function (src, dst, callback) {
        var total = 0;
  
        var create = [];
        Object.keys(src.entries).forEach(function (key) {
          var e = src.entries[key];
          var e2 = dst.entries[key];
          if (!e2 || e.timestamp > e2.timestamp) {
            create.push(key);
            total++;
          }
        });
  
        var remove = [];
        Object.keys(dst.entries).forEach(function (key) {
          var e = dst.entries[key];
          var e2 = src.entries[key];
          if (!e2) {
            remove.push(key);
            total++;
          }
        });
  
        if (!total) {
          return callback(null);
        }
  
        var errored = false;
        var completed = 0;
        var db = src.type === 'remote' ? src.db : dst.db;
        var transaction = db.transaction([IDBFS.DB_STORE_NAME], 'readwrite');
        var store = transaction.objectStore(IDBFS.DB_STORE_NAME);
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return callback(err);
            }
            return;
          }
          if (++completed >= total) {
            return callback(null);
          }
        };
  
        transaction.onerror = function(e) {
          done(this.error);
          e.preventDefault();
        };
  
        // sort paths in ascending order so directory entries are created
        // before the files inside them
        create.sort().forEach(function (path) {
          if (dst.type === 'local') {
            IDBFS.loadRemoteEntry(store, path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeLocalEntry(path, entry, done);
            });
          } else {
            IDBFS.loadLocalEntry(path, function (err, entry) {
              if (err) return done(err);
              IDBFS.storeRemoteEntry(store, path, entry, done);
            });
          }
        });
  
        // sort paths in descending order so files are deleted before their
        // parent directories
        remove.sort().reverse().forEach(function(path) {
          if (dst.type === 'local') {
            IDBFS.removeLocalEntry(path, done);
          } else {
            IDBFS.removeRemoteEntry(store, path, done);
          }
        });
      }};
  
  var NODEFS={isWindows:false,staticInit:function () {
        NODEFS.isWindows = !!process.platform.match(/^win/);
        var flags = process["binding"]("constants");
        // Node.js 4 compatibility: it has no namespaces for constants
        if (flags["fs"]) {
          flags = flags["fs"];
        }
        NODEFS.flagsForNodeMap = {
          "1024": flags["O_APPEND"],
          "64": flags["O_CREAT"],
          "128": flags["O_EXCL"],
          "0": flags["O_RDONLY"],
          "2": flags["O_RDWR"],
          "4096": flags["O_SYNC"],
          "512": flags["O_TRUNC"],
          "1": flags["O_WRONLY"]
        };
      },bufferFrom:function (arrayBuffer) {
        // Node.js < 4.5 compatibility: Buffer.from does not support ArrayBuffer
        // Buffer.from before 4.5 was just a method inherited from Uint8Array
        // Buffer.alloc has been added with Buffer.from together, so check it instead
        return Buffer.alloc ? Buffer.from(arrayBuffer) : new Buffer(arrayBuffer);
      },mount:function (mount) {
        assert(ENVIRONMENT_IS_NODE);
        return NODEFS.createNode(null, '/', NODEFS.getMode(mount.opts.root), 0);
      },createNode:function (parent, name, mode, dev) {
        if (!FS.isDir(mode) && !FS.isFile(mode) && !FS.isLink(mode)) {
          throw new FS.ErrnoError(22);
        }
        var node = FS.createNode(parent, name, mode);
        node.node_ops = NODEFS.node_ops;
        node.stream_ops = NODEFS.stream_ops;
        return node;
      },getMode:function (path) {
        var stat;
        try {
          stat = fs.lstatSync(path);
          if (NODEFS.isWindows) {
            // Node.js on Windows never represents permission bit 'x', so
            // propagate read bits to execute bits
            stat.mode = stat.mode | ((stat.mode & 292) >> 2);
          }
        } catch (e) {
          if (!e.code) throw e;
          throw new FS.ErrnoError(-e.errno); // syscall errnos are negated, node's are not
        }
        return stat.mode;
      },realPath:function (node) {
        var parts = [];
        while (node.parent !== node) {
          parts.push(node.name);
          node = node.parent;
        }
        parts.push(node.mount.opts.root);
        parts.reverse();
        return PATH.join.apply(null, parts);
      },flagsForNode:function (flags) {
        flags &= ~0x200000 /*O_PATH*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x800 /*O_NONBLOCK*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x8000 /*O_LARGEFILE*/; // Ignore this flag from musl, otherwise node.js fails to open the file.
        flags &= ~0x80000 /*O_CLOEXEC*/; // Some applications may pass it; it makes no sense for a single process.
        var newFlags = 0;
        for (var k in NODEFS.flagsForNodeMap) {
          if (flags & k) {
            newFlags |= NODEFS.flagsForNodeMap[k];
            flags ^= k;
          }
        }
  
        if (!flags) {
          return newFlags;
        } else {
          throw new FS.ErrnoError(22);
        }
      },node_ops:{getattr:function (node) {
          var path = NODEFS.realPath(node);
          var stat;
          try {
            stat = fs.lstatSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
          // node.js v0.10.20 doesn't report blksize and blocks on Windows. Fake them with default blksize of 4096.
          // See http://support.microsoft.com/kb/140365
          if (NODEFS.isWindows && !stat.blksize) {
            stat.blksize = 4096;
          }
          if (NODEFS.isWindows && !stat.blocks) {
            stat.blocks = (stat.size+stat.blksize-1)/stat.blksize|0;
          }
          return {
            dev: stat.dev,
            ino: stat.ino,
            mode: stat.mode,
            nlink: stat.nlink,
            uid: stat.uid,
            gid: stat.gid,
            rdev: stat.rdev,
            size: stat.size,
            atime: stat.atime,
            mtime: stat.mtime,
            ctime: stat.ctime,
            blksize: stat.blksize,
            blocks: stat.blocks
          };
        },setattr:function (node, attr) {
          var path = NODEFS.realPath(node);
          try {
            if (attr.mode !== undefined) {
              fs.chmodSync(path, attr.mode);
              // update the common node structure mode as well
              node.mode = attr.mode;
            }
            if (attr.timestamp !== undefined) {
              var date = new Date(attr.timestamp);
              fs.utimesSync(path, date, date);
            }
            if (attr.size !== undefined) {
              fs.truncateSync(path, attr.size);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },lookup:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          var mode = NODEFS.getMode(path);
          return NODEFS.createNode(parent, name, mode);
        },mknod:function (parent, name, mode, dev) {
          var node = NODEFS.createNode(parent, name, mode, dev);
          // create the backing node for this in the fs root as well
          var path = NODEFS.realPath(node);
          try {
            if (FS.isDir(node.mode)) {
              fs.mkdirSync(path, node.mode);
            } else {
              fs.writeFileSync(path, '', { mode: node.mode });
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
          return node;
        },rename:function (oldNode, newDir, newName) {
          var oldPath = NODEFS.realPath(oldNode);
          var newPath = PATH.join2(NODEFS.realPath(newDir), newName);
          try {
            fs.renameSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },unlink:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.unlinkSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },rmdir:function (parent, name) {
          var path = PATH.join2(NODEFS.realPath(parent), name);
          try {
            fs.rmdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },readdir:function (node) {
          var path = NODEFS.realPath(node);
          try {
            return fs.readdirSync(path);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },symlink:function (parent, newName, oldPath) {
          var newPath = PATH.join2(NODEFS.realPath(parent), newName);
          try {
            fs.symlinkSync(oldPath, newPath);
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },readlink:function (node) {
          var path = NODEFS.realPath(node);
          try {
            path = fs.readlinkSync(path);
            path = NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root), path);
            return path;
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        }},stream_ops:{open:function (stream) {
          var path = NODEFS.realPath(stream.node);
          try {
            if (FS.isFile(stream.node.mode)) {
              stream.nfd = fs.openSync(path, NODEFS.flagsForNode(stream.flags));
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },close:function (stream) {
          try {
            if (FS.isFile(stream.node.mode) && stream.nfd) {
              fs.closeSync(stream.nfd);
            }
          } catch (e) {
            if (!e.code) throw e;
            throw new FS.ErrnoError(-e.errno);
          }
        },read:function (stream, buffer, offset, length, position) {
          // Node.js < 6 compatibility: node errors on 0 length reads
          if (length === 0) return 0;
          try {
            return fs.readSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
          } catch (e) {
            throw new FS.ErrnoError(-e.errno);
          }
        },write:function (stream, buffer, offset, length, position) {
          try {
            return fs.writeSync(stream.nfd, NODEFS.bufferFrom(buffer.buffer), offset, length, position);
          } catch (e) {
            throw new FS.ErrnoError(-e.errno);
          }
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              try {
                var stat = fs.fstatSync(stream.nfd);
                position += stat.size;
              } catch (e) {
                throw new FS.ErrnoError(-e.errno);
              }
            }
          }
  
          if (position < 0) {
            throw new FS.ErrnoError(22);
          }
  
          return position;
        }}};
  
  var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:function (mount) {
        assert(ENVIRONMENT_IS_WORKER);
        if (!WORKERFS.reader) WORKERFS.reader = new FileReaderSync();
        var root = WORKERFS.createNode(null, '/', WORKERFS.DIR_MODE, 0);
        var createdParents = {};
        function ensureParent(path) {
          // return the parent node, creating subdirs as necessary
          var parts = path.split('/');
          var parent = root;
          for (var i = 0; i < parts.length-1; i++) {
            var curr = parts.slice(0, i+1).join('/');
            // Issue 4254: Using curr as a node name will prevent the node
            // from being found in FS.nameTable when FS.open is called on
            // a path which holds a child of this node,
            // given that all FS functions assume node names
            // are just their corresponding parts within their given path,
            // rather than incremental aggregates which include their parent's
            // directories.
            if (!createdParents[curr]) {
              createdParents[curr] = WORKERFS.createNode(parent, parts[i], WORKERFS.DIR_MODE, 0);
            }
            parent = createdParents[curr];
          }
          return parent;
        }
        function base(path) {
          var parts = path.split('/');
          return parts[parts.length-1];
        }
        // We also accept FileList here, by using Array.prototype
        Array.prototype.forEach.call(mount.opts["files"] || [], function(file) {
          WORKERFS.createNode(ensureParent(file.name), base(file.name), WORKERFS.FILE_MODE, 0, file, file.lastModifiedDate);
        });
        (mount.opts["blobs"] || []).forEach(function(obj) {
          WORKERFS.createNode(ensureParent(obj["name"]), base(obj["name"]), WORKERFS.FILE_MODE, 0, obj["data"]);
        });
        (mount.opts["packages"] || []).forEach(function(pack) {
          pack['metadata'].files.forEach(function(file) {
            var name = file.filename.substr(1); // remove initial slash
            WORKERFS.createNode(ensureParent(name), base(name), WORKERFS.FILE_MODE, 0, pack['blob'].slice(file.start, file.end));
          });
        });
        return root;
      },createNode:function (parent, name, mode, dev, contents, mtime) {
        var node = FS.createNode(parent, name, mode);
        node.mode = mode;
        node.node_ops = WORKERFS.node_ops;
        node.stream_ops = WORKERFS.stream_ops;
        node.timestamp = (mtime || new Date).getTime();
        assert(WORKERFS.FILE_MODE !== WORKERFS.DIR_MODE);
        if (mode === WORKERFS.FILE_MODE) {
          node.size = contents.size;
          node.contents = contents;
        } else {
          node.size = 4096;
          node.contents = {};
        }
        if (parent) {
          parent.contents[name] = node;
        }
        return node;
      },node_ops:{getattr:function (node) {
          return {
            dev: 1,
            ino: undefined,
            mode: node.mode,
            nlink: 1,
            uid: 0,
            gid: 0,
            rdev: undefined,
            size: node.size,
            atime: new Date(node.timestamp),
            mtime: new Date(node.timestamp),
            ctime: new Date(node.timestamp),
            blksize: 4096,
            blocks: Math.ceil(node.size / 4096),
          };
        },setattr:function (node, attr) {
          if (attr.mode !== undefined) {
            node.mode = attr.mode;
          }
          if (attr.timestamp !== undefined) {
            node.timestamp = attr.timestamp;
          }
        },lookup:function (parent, name) {
          throw new FS.ErrnoError(2);
        },mknod:function (parent, name, mode, dev) {
          throw new FS.ErrnoError(1);
        },rename:function (oldNode, newDir, newName) {
          throw new FS.ErrnoError(1);
        },unlink:function (parent, name) {
          throw new FS.ErrnoError(1);
        },rmdir:function (parent, name) {
          throw new FS.ErrnoError(1);
        },readdir:function (node) {
          var entries = ['.', '..'];
          for (var key in node.contents) {
            if (!node.contents.hasOwnProperty(key)) {
              continue;
            }
            entries.push(key);
          }
          return entries;
        },symlink:function (parent, newName, oldPath) {
          throw new FS.ErrnoError(1);
        },readlink:function (node) {
          throw new FS.ErrnoError(1);
        }},stream_ops:{read:function (stream, buffer, offset, length, position) {
          if (position >= stream.node.size) return 0;
          var chunk = stream.node.contents.slice(position, position + length);
          var ab = WORKERFS.reader.readAsArrayBuffer(chunk);
          buffer.set(new Uint8Array(ab), offset);
          return chunk.size;
        },write:function (stream, buffer, offset, length, position) {
          throw new FS.ErrnoError(5);
        },llseek:function (stream, offset, whence) {
          var position = offset;
          if (whence === 1) {  // SEEK_CUR.
            position += stream.position;
          } else if (whence === 2) {  // SEEK_END.
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.size;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(22);
          }
          return position;
        }}};
  
  var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:function (e) {
        if (!(e instanceof FS.ErrnoError)) throw e + ' : ' + stackTrace();
        return ___setErrNo(e.errno);
      },lookupPath:function (path, opts) {
        path = PATH.resolve(FS.cwd(), path);
        opts = opts || {};
  
        if (!path) return { path: '', node: null };
  
        var defaults = {
          follow_mount: true,
          recurse_count: 0
        };
        for (var key in defaults) {
          if (opts[key] === undefined) {
            opts[key] = defaults[key];
          }
        }
  
        if (opts.recurse_count > 8) {  // max recursive lookup of 8
          throw new FS.ErrnoError(40);
        }
  
        // split the path
        var parts = PATH.normalizeArray(path.split('/').filter(function(p) {
          return !!p;
        }), false);
  
        // start at the root
        var current = FS.root;
        var current_path = '/';
  
        for (var i = 0; i < parts.length; i++) {
          var islast = (i === parts.length-1);
          if (islast && opts.parent) {
            // stop resolving
            break;
          }
  
          current = FS.lookupNode(current, parts[i]);
          current_path = PATH.join2(current_path, parts[i]);
  
          // jump to the mount's root node if this is a mountpoint
          if (FS.isMountpoint(current)) {
            if (!islast || (islast && opts.follow_mount)) {
              current = current.mounted.root;
            }
          }
  
          // by default, lookupPath will not follow a symlink if it is the final path component.
          // setting opts.follow = true will override this behavior.
          if (!islast || opts.follow) {
            var count = 0;
            while (FS.isLink(current.mode)) {
              var link = FS.readlink(current_path);
              current_path = PATH.resolve(PATH.dirname(current_path), link);
  
              var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });
              current = lookup.node;
  
              if (count++ > 40) {  // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
                throw new FS.ErrnoError(40);
              }
            }
          }
        }
  
        return { path: current_path, node: current };
      },getPath:function (node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? mount + '/' + path : mount + path;
          }
          path = path ? node.name + '/' + path : node.name;
          node = node.parent;
        }
      },hashName:function (parentid, name) {
        var hash = 0;
  
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },hashAddNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },hashRemoveNode:function (node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },lookupNode:function (parent, name) {
        var err = FS.mayLookup(parent);
        if (err) {
          throw new FS.ErrnoError(err, parent);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },createNode:function (parent, name, mode, rdev) {
        if (!FS.FSNode) {
          FS.FSNode = function(parent, name, mode, rdev) {
            if (!parent) {
              parent = this;  // root node sets parent to itself
            }
            this.parent = parent;
            this.mount = parent.mount;
            this.mounted = null;
            this.id = FS.nextInode++;
            this.name = name;
            this.mode = mode;
            this.node_ops = {};
            this.stream_ops = {};
            this.rdev = rdev;
          };
  
          FS.FSNode.prototype = {};
  
          // compatibility
          var readMode = 292 | 73;
          var writeMode = 146;
  
          // NOTE we must use Object.defineProperties instead of individual calls to
          // Object.defineProperty in order to make closure compiler happy
          Object.defineProperties(FS.FSNode.prototype, {
            read: {
              get: function() { return (this.mode & readMode) === readMode; },
              set: function(val) { val ? this.mode |= readMode : this.mode &= ~readMode; }
            },
            write: {
              get: function() { return (this.mode & writeMode) === writeMode; },
              set: function(val) { val ? this.mode |= writeMode : this.mode &= ~writeMode; }
            },
            isFolder: {
              get: function() { return FS.isDir(this.mode); }
            },
            isDevice: {
              get: function() { return FS.isChrdev(this.mode); }
            }
          });
        }
  
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },destroyNode:function (node) {
        FS.hashRemoveNode(node);
      },isRoot:function (node) {
        return node === node.parent;
      },isMountpoint:function (node) {
        return !!node.mounted;
      },isFile:function (mode) {
        return (mode & 61440) === 32768;
      },isDir:function (mode) {
        return (mode & 61440) === 16384;
      },isLink:function (mode) {
        return (mode & 61440) === 40960;
      },isChrdev:function (mode) {
        return (mode & 61440) === 8192;
      },isBlkdev:function (mode) {
        return (mode & 61440) === 24576;
      },isFIFO:function (mode) {
        return (mode & 61440) === 4096;
      },isSocket:function (mode) {
        return (mode & 49152) === 49152;
      },flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:function (str) {
        var flags = FS.flagModes[str];
        if (typeof flags === 'undefined') {
          throw new Error('Unknown file open mode: ' + str);
        }
        return flags;
      },flagsToPermissionString:function (flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },nodePermissions:function (node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.indexOf('r') !== -1 && !(node.mode & 292)) {
          return 13;
        } else if (perms.indexOf('w') !== -1 && !(node.mode & 146)) {
          return 13;
        } else if (perms.indexOf('x') !== -1 && !(node.mode & 73)) {
          return 13;
        }
        return 0;
      },mayLookup:function (dir) {
        var err = FS.nodePermissions(dir, 'x');
        if (err) return err;
        if (!dir.node_ops.lookup) return 13;
        return 0;
      },mayCreate:function (dir, name) {
        try {
          var node = FS.lookupNode(dir, name);
          return 17;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },mayDelete:function (dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var err = FS.nodePermissions(dir, 'wx');
        if (err) {
          return err;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return 20;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return 16;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return 21;
          }
        }
        return 0;
      },mayOpen:function (node, flags) {
        if (!node) {
          return 2;
        }
        if (FS.isLink(node.mode)) {
          return 40;
        } else if (FS.isDir(node.mode)) {
          if (FS.flagsToPermissionString(flags) !== 'r' || // opening for write
              (flags & 512)) { // TODO: check for O_SEARCH? (== search for dir only)
            return 21;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },MAX_OPEN_FDS:4096,nextfd:function (fd_start, fd_end) {
        fd_start = fd_start || 0;
        fd_end = fd_end || FS.MAX_OPEN_FDS;
        for (var fd = fd_start; fd <= fd_end; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(24);
      },getStream:function (fd) {
        return FS.streams[fd];
      },createStream:function (stream, fd_start, fd_end) {
        if (!FS.FSStream) {
          FS.FSStream = function(){};
          FS.FSStream.prototype = {};
          // compatibility
          Object.defineProperties(FS.FSStream.prototype, {
            object: {
              get: function() { return this.node; },
              set: function(val) { this.node = val; }
            },
            isRead: {
              get: function() { return (this.flags & 2097155) !== 1; }
            },
            isWrite: {
              get: function() { return (this.flags & 2097155) !== 0; }
            },
            isAppend: {
              get: function() { return (this.flags & 1024); }
            }
          });
        }
        // clone it, so we can return an instance of FSStream
        var newStream = new FS.FSStream();
        for (var p in stream) {
          newStream[p] = stream[p];
        }
        stream = newStream;
        var fd = FS.nextfd(fd_start, fd_end);
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },closeStream:function (fd) {
        FS.streams[fd] = null;
      },chrdev_stream_ops:{open:function (stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          if (stream.stream_ops.open) {
            stream.stream_ops.open(stream);
          }
        },llseek:function () {
          throw new FS.ErrnoError(29);
        }},major:function (dev) {
        return ((dev) >> 8);
      },minor:function (dev) {
        return ((dev) & 0xff);
      },makedev:function (ma, mi) {
        return ((ma) << 8 | (mi));
      },registerDevice:function (dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },getDevice:function (dev) {
        return FS.devices[dev];
      },getMounts:function (mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push.apply(check, m.mounts);
        }
  
        return mounts;
      },syncfs:function (populate, callback) {
        if (typeof(populate) === 'function') {
          callback = populate;
          populate = false;
        }
  
        FS.syncFSRequests++;
  
        if (FS.syncFSRequests > 1) {
          console.log('warning: ' + FS.syncFSRequests + ' FS.syncfs operations in flight at once, probably just doing extra work');
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function doCallback(err) {
          assert(FS.syncFSRequests > 0);
          FS.syncFSRequests--;
          return callback(err);
        }
  
        function done(err) {
          if (err) {
            if (!done.errored) {
              done.errored = true;
              return doCallback(err);
            }
            return;
          }
          if (++completed >= mounts.length) {
            doCallback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach(function (mount) {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },mount:function (type, opts, mountpoint) {
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(16);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(16);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(20);
          }
        }
  
        var mount = {
          type: type,
          opts: opts,
          mountpoint: mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },unmount:function (mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(22);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach(function (hash) {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.indexOf(current.mount) !== -1) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },lookup:function (parent, name) {
        return parent.node_ops.lookup(parent, name);
      },mknod:function (path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name || name === '.' || name === '..') {
          throw new FS.ErrnoError(22);
        }
        var err = FS.mayCreate(parent, name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(1);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },create:function (path, mode) {
        mode = mode !== undefined ? mode : 438 /* 0666 */;
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },mkdir:function (path, mode) {
        mode = mode !== undefined ? mode : 511 /* 0777 */;
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },mkdirTree:function (path, mode) {
        var dirs = path.split('/');
        var d = '';
        for (var i = 0; i < dirs.length; ++i) {
          if (!dirs[i]) continue;
          d += '/' + dirs[i];
          try {
            FS.mkdir(d, mode);
          } catch(e) {
            if (e.errno != 17) throw e;
          }
        }
      },mkdev:function (path, mode, dev) {
        if (typeof(dev) === 'undefined') {
          dev = mode;
          mode = 438 /* 0666 */;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },symlink:function (oldpath, newpath) {
        if (!PATH.resolve(oldpath)) {
          throw new FS.ErrnoError(2);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(2);
        }
        var newname = PATH.basename(newpath);
        var err = FS.mayCreate(parent, newname);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(1);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },rename:function (old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
        try {
          lookup = FS.lookupPath(old_path, { parent: true });
          old_dir = lookup.node;
          lookup = FS.lookupPath(new_path, { parent: true });
          new_dir = lookup.node;
        } catch (e) {
          throw new FS.ErrnoError(16);
        }
        if (!old_dir || !new_dir) throw new FS.ErrnoError(2);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(18);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(22);
        }
        // new path should not be an ancestor of the old path
        relative = PATH.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(39);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var err = FS.mayDelete(old_dir, old_name, isdir);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        err = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(16);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          err = FS.nodePermissions(old_dir, 'w');
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        try {
          if (FS.trackingDelegate['willMovePath']) {
            FS.trackingDelegate['willMovePath'](old_path, new_path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
        try {
          if (FS.trackingDelegate['onMovePath']) FS.trackingDelegate['onMovePath'](old_path, new_path);
        } catch(e) {
          console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: " + e.message);
        }
      },rmdir:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, true);
        if (err) {
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(16);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        if (!node.node_ops.readdir) {
          throw new FS.ErrnoError(20);
        }
        return node.node_ops.readdir(node);
      },unlink:function (path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var err = FS.mayDelete(parent, name, false);
        if (err) {
          // According to POSIX, we should map EISDIR to EPERM, but
          // we instead do what Linux does (and we must, as we use
          // the musl linux libc).
          throw new FS.ErrnoError(err);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(16);
        }
        try {
          if (FS.trackingDelegate['willDeletePath']) {
            FS.trackingDelegate['willDeletePath'](path);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: " + e.message);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
        try {
          if (FS.trackingDelegate['onDeletePath']) FS.trackingDelegate['onDeletePath'](path);
        } catch(e) {
          console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: " + e.message);
        }
      },readlink:function (path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(2);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(22);
        }
        return PATH.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
      },stat:function (path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        if (!node) {
          throw new FS.ErrnoError(2);
        }
        if (!node.node_ops.getattr) {
          throw new FS.ErrnoError(1);
        }
        return node.node_ops.getattr(node);
      },lstat:function (path) {
        return FS.stat(path, true);
      },chmod:function (path, mode, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(1);
        }
        node.node_ops.setattr(node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          timestamp: Date.now()
        });
      },lchmod:function (path, mode) {
        FS.chmod(path, mode, true);
      },fchmod:function (fd, mode) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(9);
        }
        FS.chmod(stream.node, mode);
      },chown:function (path, uid, gid, dontFollow) {
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(1);
        }
        node.node_ops.setattr(node, {
          timestamp: Date.now()
          // we ignore the uid / gid for now
        });
      },lchown:function (path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },fchown:function (fd, uid, gid) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(9);
        }
        FS.chown(stream.node, uid, gid);
      },truncate:function (path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(22);
        }
        var node;
        if (typeof path === 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        if (!node.node_ops.setattr) {
          throw new FS.ErrnoError(1);
        }
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(21);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(22);
        }
        var err = FS.nodePermissions(node, 'w');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        node.node_ops.setattr(node, {
          size: len,
          timestamp: Date.now()
        });
      },ftruncate:function (fd, len) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(9);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(22);
        }
        FS.truncate(stream.node, len);
      },utime:function (path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        node.node_ops.setattr(node, {
          timestamp: Math.max(atime, mtime)
        });
      },open:function (path, flags, mode, fd_start, fd_end) {
        if (path === "") {
          throw new FS.ErrnoError(2);
        }
        flags = typeof flags === 'string' ? FS.modeStringToFlags(flags) : flags;
        mode = typeof mode === 'undefined' ? 438 /* 0666 */ : mode;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        if (typeof path === 'object') {
          node = path;
        } else {
          path = PATH.normalize(path);
          try {
            var lookup = FS.lookupPath(path, {
              follow: !(flags & 131072)
            });
            node = lookup.node;
          } catch (e) {
            // ignore
          }
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(17);
            }
          } else {
            // node doesn't exist, try to create it
            node = FS.mknod(path, mode, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(2);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(20);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var err = FS.mayOpen(node, flags);
          if (err) {
            throw new FS.ErrnoError(err);
          }
        }
        // do truncation if necessary
        if ((flags & 512)) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node: node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags: flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        }, fd_start, fd_end);
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!FS.readFiles) FS.readFiles = {};
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
            console.log("FS.trackingDelegate error on read file: " + path);
          }
        }
        try {
          if (FS.trackingDelegate['onOpenFile']) {
            var trackingFlags = 0;
            if ((flags & 2097155) !== 1) {
              trackingFlags |= FS.tracking.openFlags.READ;
            }
            if ((flags & 2097155) !== 0) {
              trackingFlags |= FS.tracking.openFlags.WRITE;
            }
            FS.trackingDelegate['onOpenFile'](path, trackingFlags);
          }
        } catch(e) {
          console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: " + e.message);
        }
        return stream;
      },close:function (stream) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
        stream.fd = null;
      },isClosed:function (stream) {
        return stream.fd === null;
      },llseek:function (stream, offset, whence) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(29);
        }
        if (whence != 0 /* SEEK_SET */ && whence != 1 /* SEEK_CUR */ && whence != 2 /* SEEK_END */) {
          throw new FS.ErrnoError(22);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },read:function (stream, buffer, offset, length, position) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(22);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(9);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(21);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(22);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(29);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },write:function (stream, buffer, offset, length, position, canOwn) {
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(22);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(9);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(21);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(22);
        }
        if (stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = typeof position !== 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(29);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        try {
          if (stream.path && FS.trackingDelegate['onWriteToFile']) FS.trackingDelegate['onWriteToFile'](stream.path);
        } catch(e) {
          console.log("FS.trackingDelegate['onWriteToFile']('"+stream.path+"') threw an exception: " + e.message);
        }
        return bytesWritten;
      },allocate:function (stream, offset, length) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(9);
        }
        if (offset < 0 || length <= 0) {
          throw new FS.ErrnoError(22);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(9);
        }
        if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(19);
        }
        if (!stream.stream_ops.allocate) {
          throw new FS.ErrnoError(95);
        }
        stream.stream_ops.allocate(stream, offset, length);
      },mmap:function (stream, buffer, offset, length, position, prot, flags) {
        // TODO if PROT is PROT_WRITE, make sure we have write access
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(13);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(19);
        }
        return stream.stream_ops.mmap(stream, buffer, offset, length, position, prot, flags);
      },msync:function (stream, buffer, offset, length, mmapFlags) {
        if (!stream || !stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },munmap:function (stream) {
        return 0;
      },ioctl:function (stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(25);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },readFile:function (path, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'r';
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error('Invalid encoding type "' + opts.encoding + '"');
        }
        var ret;
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          ret = UTF8ArrayToString(buf, 0);
        } else if (opts.encoding === 'binary') {
          ret = buf;
        }
        FS.close(stream);
        return ret;
      },writeFile:function (path, data, opts) {
        opts = opts || {};
        opts.flags = opts.flags || 'w';
        var stream = FS.open(path, opts.flags, opts.mode);
        if (typeof data === 'string') {
          var buf = new Uint8Array(lengthBytesUTF8(data)+1);
          var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
          FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
        } else if (ArrayBuffer.isView(data)) {
          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
        } else {
          throw new Error('Unsupported data type');
        }
        FS.close(stream);
      },cwd:function () {
        return FS.currentPath;
      },chdir:function (path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (lookup.node === null) {
          throw new FS.ErrnoError(2);
        }
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(20);
        }
        var err = FS.nodePermissions(lookup.node, 'x');
        if (err) {
          throw new FS.ErrnoError(err);
        }
        FS.currentPath = lookup.path;
      },createDefaultDirectories:function () {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },createDefaultDevices:function () {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: function() { return 0; },
          write: function(stream, buffer, offset, length, pos) { return length; }
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using Module['printErr']
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        var random_device;
        if (typeof crypto === 'object' && typeof crypto['getRandomValues'] === 'function') {
          // for modern web browsers
          var randomBuffer = new Uint8Array(1);
          random_device = function() { crypto.getRandomValues(randomBuffer); return randomBuffer[0]; };
        } else
        if (ENVIRONMENT_IS_NODE) {
          // for nodejs with or without crypto support included
          try {
            var crypto_module = require('crypto');
            // nodejs has crypto support
            random_device = function() { return crypto_module['randomBytes'](1)[0]; };
          } catch (e) {
            // nodejs doesn't have crypto support
          }
        } else
        {}
        if (!random_device) {
          // we couldn't find a proper implementation, as Math.random() is not suitable for /dev/random, see emscripten-core/emscripten/pull/7096
          random_device = function() { abort("no cryptographic support found for random_device. consider polyfilling it if you want to use something insecure like Math.random(), e.g. put this in a --pre-js: var crypto = { getRandomValues: function(array) { for (var i = 0; i < array.length; i++) array[i] = (Math.random()*256)|0 } };"); };
        }
        FS.createDevice('/dev', 'random', random_device);
        FS.createDevice('/dev', 'urandom', random_device);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },createSpecialDirectories:function () {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount: function() {
            var node = FS.createNode('/proc/self', 'fd', 16384 | 511 /* 0777 */, 73);
            node.node_ops = {
              lookup: function(parent, name) {
                var fd = +name;
                var stream = FS.getStream(fd);
                if (!stream) throw new FS.ErrnoError(9);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: function() { return stream.path } }
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },createStandardStreams:function () {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (Module['stdin']) {
          FS.createDevice('/dev', 'stdin', Module['stdin']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (Module['stdout']) {
          FS.createDevice('/dev', 'stdout', null, Module['stdout']);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (Module['stderr']) {
          FS.createDevice('/dev', 'stderr', null, Module['stderr']);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 'r');
        var stdout = FS.open('/dev/stdout', 'w');
        var stderr = FS.open('/dev/stderr', 'w');
        assert(stdin.fd === 0, 'invalid handle for stdin (' + stdin.fd + ')');
        assert(stdout.fd === 1, 'invalid handle for stdout (' + stdout.fd + ')');
        assert(stderr.fd === 2, 'invalid handle for stderr (' + stderr.fd + ')');
      },ensureErrnoError:function () {
        if (FS.ErrnoError) return;
        FS.ErrnoError = function ErrnoError(errno, node) {
          this.node = node;
          this.setErrno = function(errno) {
            this.errno = errno;
            for (var key in ERRNO_CODES) {
              if (ERRNO_CODES[key] === errno) {
                this.code = key;
                break;
              }
            }
          };
          this.setErrno(errno);
          this.message = ERRNO_MESSAGES[errno];
          // Node.js compatibility: assigning on this.stack fails on Node 4 (but fixed on Node 8)
          if (this.stack) Object.defineProperty(this, "stack", { value: (new Error).stack, writable: true });
          if (this.stack) this.stack = demangleAll(this.stack);
        };
        FS.ErrnoError.prototype = new Error();
        FS.ErrnoError.prototype.constructor = FS.ErrnoError;
        // Some errors may happen quite a bit, to avoid overhead we reuse them (and suffer a lack of stack info)
        [2].forEach(function(code) {
          FS.genericErrors[code] = new FS.ErrnoError(code);
          FS.genericErrors[code].stack = '<generic error, no stack>';
        });
      },staticInit:function () {
        FS.ensureErrnoError();
  
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
          'IDBFS': IDBFS,
          'NODEFS': NODEFS,
          'WORKERFS': WORKERFS,
        };
      },init:function (input, output, error) {
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
  
        FS.ensureErrnoError();
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        Module['stdin'] = input || Module['stdin'];
        Module['stdout'] = output || Module['stdout'];
        Module['stderr'] = error || Module['stderr'];
  
        FS.createStandardStreams();
      },quit:function () {
        FS.init.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        var fflush = Module['_fflush'];
        if (fflush) fflush(0);
        // close all of our streams
        for (var i = 0; i < FS.streams.length; i++) {
          var stream = FS.streams[i];
          if (!stream) {
            continue;
          }
          FS.close(stream);
        }
      },getMode:function (canRead, canWrite) {
        var mode = 0;
        if (canRead) mode |= 292 | 73;
        if (canWrite) mode |= 146;
        return mode;
      },joinPath:function (parts, forceRelative) {
        var path = PATH.join.apply(null, parts);
        if (forceRelative && path[0] == '/') path = path.substr(1);
        return path;
      },absolutePath:function (relative, base) {
        return PATH.resolve(base, relative);
      },standardizePath:function (path) {
        return PATH.normalize(path);
      },findObject:function (path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },analyzePath:function (path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },createFolder:function (parent, name, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.mkdir(path, mode);
      },createPath:function (parent, path, canRead, canWrite) {
        parent = typeof parent === 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            // ignore EEXIST
          }
          parent = current;
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(canRead, canWrite);
        return FS.create(path, mode);
      },createDataFile:function (parent, name, data, canRead, canWrite, canOwn) {
        var path = name ? PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name) : parent;
        var mode = FS.getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data === 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 'w');
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
        return node;
      },createDevice:function (parent, name, input, output) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        var mode = FS.getMode(!!input, !!output);
        if (!FS.createDevice.major) FS.createDevice.major = 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open: function(stream) {
            stream.seekable = false;
          },
          close: function(stream) {
            // flush any pending line data
            if (output && output.buffer && output.buffer.length) {
              output(10);
            }
          },
          read: function(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(5);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(11);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.timestamp = Date.now();
            }
            return bytesRead;
          },
          write: function(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(5);
              }
            }
            if (length) {
              stream.node.timestamp = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },createLink:function (parent, name, target, canRead, canWrite) {
        var path = PATH.join2(typeof parent === 'string' ? parent : FS.getPath(parent), name);
        return FS.symlink(target, path);
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(5);
        return success;
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
        function LazyUint8Array() {
          this.lengthKnown = false;
          this.chunks = []; // Loaded chunks. Index is the chunk number
        }
        LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
          if (idx > this.length-1 || idx < 0) {
            return undefined;
          }
          var chunkOffset = idx % this.chunkSize;
          var chunkNum = (idx / this.chunkSize)|0;
          return this.getter(chunkNum)[chunkOffset];
        }
        LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
          this.getter = getter;
        }
        LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
          // Find length
          var xhr = new XMLHttpRequest();
          xhr.open('HEAD', url, false);
          xhr.send(null);
          if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
          var datalength = Number(xhr.getResponseHeader("Content-length"));
          var header;
          var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
          var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
  
          var chunkSize = 1024*1024; // Chunk size in bytes
  
          if (!hasByteServing) chunkSize = datalength;
  
          // Function to get a range from the remote URL.
          var doXHR = (function(from, to) {
            if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
            if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
            // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
            var xhr = new XMLHttpRequest();
            xhr.open('GET', url, false);
            if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
            // Some hints to the browser that we want binary data.
            if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
            if (xhr.overrideMimeType) {
              xhr.overrideMimeType('text/plain; charset=x-user-defined');
            }
  
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            if (xhr.response !== undefined) {
              return new Uint8Array(xhr.response || []);
            } else {
              return intArrayFromString(xhr.responseText || '', true);
            }
          });
          var lazyArray = this;
          lazyArray.setDataGetter(function(chunkNum) {
            var start = chunkNum * chunkSize;
            var end = (chunkNum+1) * chunkSize - 1; // including this byte
            end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
              lazyArray.chunks[chunkNum] = doXHR(start, end);
            }
            if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
            return lazyArray.chunks[chunkNum];
          });
  
          if (usesGzip || !datalength) {
            // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
            chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
            datalength = this.getter(0).length;
            chunkSize = datalength;
            console.log("LazyFiles on gzip forces download of the whole file when length is accessed");
          }
  
          this._length = datalength;
          this._chunkSize = chunkSize;
          this.lengthKnown = true;
        }
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          Object.defineProperties(lazyArray, {
            length: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._length;
              }
            },
            chunkSize: {
              get: function() {
                if(!this.lengthKnown) {
                  this.cacheLength();
                }
                return this._chunkSize;
              }
            }
          });
  
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperties(node, {
          usedBytes: {
            get: function() { return this.contents.length; }
          }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach(function(key) {
          var fn = node.stream_ops[key];
          stream_ops[key] = function forceLoadLazyFile() {
            if (!FS.forceLoadFile(node)) {
              throw new FS.ErrnoError(5);
            }
            return fn.apply(null, arguments);
          };
        });
        // use a custom read function
        stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
          if (!FS.forceLoadFile(node)) {
            throw new FS.ErrnoError(5);
          }
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        };
        node.stream_ops = stream_ops;
        return node;
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
        Browser.init(); // XXX perhaps this method should move onto Browser?
        // TODO we should allow people to just pass in a complete filename instead
        // of parent and name being that we just join them anyways
        var fullname = name ? PATH.resolve(PATH.join2(parent, name)) : parent;
        var dep = getUniqueRunDependency('cp ' + fullname); // might have several active requests for the same fullname
        function processData(byteArray) {
          function finish(byteArray) {
            if (preFinish) preFinish();
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
            }
            if (onload) onload();
            removeRunDependency(dep);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency(dep);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency(dep);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },indexedDB:function () {
        return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
      },DB_NAME:function () {
        return 'EM_FS_' + window.location.pathname;
      },DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
          console.log('creating db');
          var db = openRequest.result;
          db.createObjectStore(FS.DB_STORE_NAME);
        };
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          var transaction = db.transaction([FS.DB_STORE_NAME], 'readwrite');
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var putRequest = files.put(FS.analyzePath(path).object.contents, path);
            putRequest.onsuccess = function putRequest_onsuccess() { ok++; if (ok + fail == total) finish() };
            putRequest.onerror = function putRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      },loadFilesFromDB:function (paths, onload, onerror) {
        onload = onload || function(){};
        onerror = onerror || function(){};
        var indexedDB = FS.indexedDB();
        try {
          var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
        } catch (e) {
          return onerror(e);
        }
        openRequest.onupgradeneeded = onerror; // no database to load from
        openRequest.onsuccess = function openRequest_onsuccess() {
          var db = openRequest.result;
          try {
            var transaction = db.transaction([FS.DB_STORE_NAME], 'readonly');
          } catch(e) {
            onerror(e);
            return;
          }
          var files = transaction.objectStore(FS.DB_STORE_NAME);
          var ok = 0, fail = 0, total = paths.length;
          function finish() {
            if (fail == 0) onload(); else onerror();
          }
          paths.forEach(function(path) {
            var getRequest = files.get(path);
            getRequest.onsuccess = function getRequest_onsuccess() {
              if (FS.analyzePath(path).exists) {
                FS.unlink(path);
              }
              FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
              ok++;
              if (ok + fail == total) finish();
            };
            getRequest.onerror = function getRequest_onerror() { fail++; if (ok + fail == total) finish() };
          });
          transaction.onerror = onerror;
        };
        openRequest.onerror = onerror;
      }};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:function (dirfd, path) {
        if (path[0] !== '/') {
          // relative path
          var dir;
          if (dirfd === -100) {
            dir = FS.cwd();
          } else {
            var dirstream = FS.getStream(dirfd);
            if (!dirstream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
            dir = dirstream.path;
          }
          path = PATH.join2(dir, path);
        }
        return path;
      },doStat:function (func, path, buf) {
        try {
          var stat = func(path);
        } catch (e) {
          if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
            // an error occurred while trying to look up the path; we should just report ENOTDIR
            return -ERRNO_CODES.ENOTDIR;
          }
          throw e;
        }
        HEAP32[((buf)>>2)]=stat.dev;
        HEAP32[(((buf)+(4))>>2)]=0;
        HEAP32[(((buf)+(8))>>2)]=stat.ino;
        HEAP32[(((buf)+(12))>>2)]=stat.mode;
        HEAP32[(((buf)+(16))>>2)]=stat.nlink;
        HEAP32[(((buf)+(20))>>2)]=stat.uid;
        HEAP32[(((buf)+(24))>>2)]=stat.gid;
        HEAP32[(((buf)+(28))>>2)]=stat.rdev;
        HEAP32[(((buf)+(32))>>2)]=0;
        (tempI64 = [stat.size>>>0,(tempDouble=stat.size,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[(((buf)+(40))>>2)]=tempI64[0],HEAP32[(((buf)+(44))>>2)]=tempI64[1]);
        HEAP32[(((buf)+(48))>>2)]=4096;
        HEAP32[(((buf)+(52))>>2)]=stat.blocks;
        HEAP32[(((buf)+(56))>>2)]=(stat.atime.getTime() / 1000)|0;
        HEAP32[(((buf)+(60))>>2)]=0;
        HEAP32[(((buf)+(64))>>2)]=(stat.mtime.getTime() / 1000)|0;
        HEAP32[(((buf)+(68))>>2)]=0;
        HEAP32[(((buf)+(72))>>2)]=(stat.ctime.getTime() / 1000)|0;
        HEAP32[(((buf)+(76))>>2)]=0;
        (tempI64 = [stat.ino>>>0,(tempDouble=stat.ino,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[(((buf)+(80))>>2)]=tempI64[0],HEAP32[(((buf)+(84))>>2)]=tempI64[1]);
        return 0;
      },doMsync:function (addr, stream, len, flags) {
        var buffer = new Uint8Array(HEAPU8.subarray(addr, addr + len));
        FS.msync(stream, buffer, 0, len, flags);
      },doMkdir:function (path, mode) {
        // remove a trailing slash, if one - /a/b/ has basename of '', but
        // we want to create b in the context of this function
        path = PATH.normalize(path);
        if (path[path.length-1] === '/') path = path.substr(0, path.length-1);
        FS.mkdir(path, mode, 0);
        return 0;
      },doMknod:function (path, mode, dev) {
        // we don't want this in the JS API as it uses mknod to create all nodes.
        switch (mode & 61440) {
          case 32768:
          case 8192:
          case 24576:
          case 4096:
          case 49152:
            break;
          default: return -ERRNO_CODES.EINVAL;
        }
        FS.mknod(path, mode, dev);
        return 0;
      },doReadlink:function (path, buf, bufsize) {
        if (bufsize <= 0) return -ERRNO_CODES.EINVAL;
        var ret = FS.readlink(path);
  
        var len = Math.min(bufsize, lengthBytesUTF8(ret));
        var endChar = HEAP8[buf+len];
        stringToUTF8(ret, buf, bufsize+1);
        // readlink is one of the rare functions that write out a C string, but does never append a null to the output buffer(!)
        // stringToUTF8() always appends a null byte, so restore the character under the null byte after the write.
        HEAP8[buf+len] = endChar;
  
        return len;
      },doAccess:function (path, amode) {
        if (amode & ~7) {
          // need a valid mode
          return -ERRNO_CODES.EINVAL;
        }
        var node;
        var lookup = FS.lookupPath(path, { follow: true });
        node = lookup.node;
        var perms = '';
        if (amode & 4) perms += 'r';
        if (amode & 2) perms += 'w';
        if (amode & 1) perms += 'x';
        if (perms /* otherwise, they've just passed F_OK */ && FS.nodePermissions(node, perms)) {
          return -ERRNO_CODES.EACCES;
        }
        return 0;
      },doDup:function (path, flags, suggestFD) {
        var suggest = FS.getStream(suggestFD);
        if (suggest) FS.close(suggest);
        return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
      },doReadv:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.read(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
          if (curr < len) break; // nothing more to read
        }
        return ret;
      },doWritev:function (stream, iov, iovcnt, offset) {
        var ret = 0;
        for (var i = 0; i < iovcnt; i++) {
          var ptr = HEAP32[(((iov)+(i*8))>>2)];
          var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
          var curr = FS.write(stream, HEAP8,ptr, len, offset);
          if (curr < 0) return -1;
          ret += curr;
        }
        return ret;
      },varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = UTF8ToString(SYSCALLS.get());
        return ret;
      },getStreamFromFD:function () {
        var stream = FS.getStream(SYSCALLS.get());
        if (!stream) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return stream;
      },getSocketFromFD:function () {
        var socket = SOCKFS.getSocket(SYSCALLS.get());
        if (!socket) throw new FS.ErrnoError(ERRNO_CODES.EBADF);
        return socket;
      },getSocketAddress:function (allowNull) {
        var addrp = SYSCALLS.get(), addrlen = SYSCALLS.get();
        if (allowNull && addrp === 0) return null;
        var info = __read_sockaddr(addrp, addrlen);
        if (info.errno) throw new FS.ErrnoError(info.errno);
        info.addr = DNS.lookup_addr(info.addr) || info.addr;
        return info;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall10(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // unlink
      var path = SYSCALLS.getStr();
      FS.unlink(path);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      // Can't handle 64-bit integers
      if (!(offset_high == -1 && offset_low < 0) &&
          !(offset_high == 0 && offset_low >= 0)) {
        return -ERRNO_CODES.EOVERFLOW;
      }
      var offset = offset_low;
      FS.llseek(stream, offset, whence);
      (tempI64 = [stream.position>>>0,(tempDouble=stream.position,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((result)>>2)]=tempI64[0],HEAP32[(((result)+(4))>>2)]=tempI64[1]);
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall145(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // readv
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doReadv(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      var stream = SYSCALLS.getStreamFromFD(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      return SYSCALLS.doWritev(stream, iov, iovcnt);
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall221(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // fcntl64
      var stream = SYSCALLS.getStreamFromFD(), cmd = SYSCALLS.get();
      switch (cmd) {
        case 0: {
          var arg = SYSCALLS.get();
          if (arg < 0) {
            return -ERRNO_CODES.EINVAL;
          }
          var newStream;
          newStream = FS.open(stream.path, stream.flags, 0, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = SYSCALLS.get();
          stream.flags |= arg;
          return 0;
        }
        case 12:
        /* case 12: Currently in musl F_GETLK64 has same value as F_GETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */ {
          
          var arg = SYSCALLS.get();
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=2;
          return 0;
        }
        case 13:
        case 14:
        /* case 13: Currently in musl F_SETLK64 has same value as F_SETLK, so omitted to avoid duplicate case blocks. If that changes, uncomment this */
        /* case 14: Currently in musl F_SETLKW64 has same value as F_SETLKW, so omitted to avoid duplicate case blocks. If that changes, uncomment this */
          
          
          return 0; // Pretend that the locking is successful.
        case 16:
        case 8:
          return -ERRNO_CODES.EINVAL; // These are for sockets. We don't have them fully implemented yet.
        case 9:
          // musl trusts getown return values, due to a bug where they must be, as they overlap with errors. just return -1 here, so fnctl() returns that, and we set errno ourselves.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default: {
          return -ERRNO_CODES.EINVAL;
        }
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall5(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // open
      var pathname = SYSCALLS.getStr(), flags = SYSCALLS.get(), mode = SYSCALLS.get() // optional TODO
      var stream = FS.open(pathname, flags, mode);
      return stream.fd;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      var stream = SYSCALLS.getStreamFromFD(), op = SYSCALLS.get();
      switch (op) {
        case 21509:
        case 21505: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21510:
        case 21511:
        case 21512:
        case 21506:
        case 21507:
        case 21508: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          var argp = SYSCALLS.get();
          HEAP32[((argp)>>2)]=0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return -ERRNO_CODES.EINVAL; // not supported
        }
        case 21531: {
          var argp = SYSCALLS.get();
          return FS.ioctl(stream, op, argp);
        }
        case 21523: {
          // TODO: in theory we should write to the winsize struct that gets
          // passed in, but for now musl doesn't read anything on it
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        case 21524: {
          // TODO: technically, this ioctl call should change the window size.
          // but, since emscripten doesn't have any concept of a terminal window
          // yet, we'll just silently throw it away as we do TIOCGWINSZ
          if (!stream.tty) return -ERRNO_CODES.ENOTTY;
          return 0;
        }
        default: abort('bad ioctl syscall ' + op);
      }
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function ___syscall91(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // munmap
      var addr = SYSCALLS.get(), len = SYSCALLS.get();
      // TODO: support unmmap'ing parts of allocations
      var info = SYSCALLS.mappings[addr];
      if (!info) return 0;
      if (len === info.len) {
        var stream = FS.getStream(info.fd);
        SYSCALLS.doMsync(addr, stream, len, info.flags)
        FS.munmap(stream);
        SYSCALLS.mappings[addr] = null;
        if (info.allocated) {
          _free(info.malloc);
        }
      }
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  
   
  
   
  
     

  function ___unlock() {}

  
  function getShiftFromSize(size) {
      switch (size) {
          case 1: return 0;
          case 2: return 1;
          case 4: return 2;
          case 8: return 3;
          default:
              throw new TypeError('Unknown type size: ' + size);
      }
    }
  
  
  
  function embind_init_charCodes() {
      var codes = new Array(256);
      for (var i = 0; i < 256; ++i) {
          codes[i] = String.fromCharCode(i);
      }
      embind_charCodes = codes;
    }var embind_charCodes=undefined;function readLatin1String(ptr) {
      var ret = "";
      var c = ptr;
      while (HEAPU8[c]) {
          ret += embind_charCodes[HEAPU8[c++]];
      }
      return ret;
    }
  
  
  var awaitingDependencies={};
  
  var registeredTypes={};
  
  var typeDependencies={};
  
  
  
  
  
  
  var char_0=48;
  
  var char_9=57;function makeLegalFunctionName(name) {
      if (undefined === name) {
          return '_unknown';
      }
      name = name.replace(/[^a-zA-Z0-9_]/g, '$');
      var f = name.charCodeAt(0);
      if (f >= char_0 && f <= char_9) {
          return '_' + name;
      } else {
          return name;
      }
    }function createNamedFunction(name, body) {
      name = makeLegalFunctionName(name);
      /*jshint evil:true*/
      return new Function(
          "body",
          "return function " + name + "() {\n" +
          "    \"use strict\";" +
          "    return body.apply(this, arguments);\n" +
          "};\n"
      )(body);
    }function extendError(baseErrorType, errorName) {
      var errorClass = createNamedFunction(errorName, function(message) {
          this.name = errorName;
          this.message = message;
  
          var stack = (new Error(message)).stack;
          if (stack !== undefined) {
              this.stack = this.toString() + '\n' +
                  stack.replace(/^Error(:[^\n]*)?\n/, '');
          }
      });
      errorClass.prototype = Object.create(baseErrorType.prototype);
      errorClass.prototype.constructor = errorClass;
      errorClass.prototype.toString = function() {
          if (this.message === undefined) {
              return this.name;
          } else {
              return this.name + ': ' + this.message;
          }
      };
  
      return errorClass;
    }var BindingError=undefined;function throwBindingError(message) {
      throw new BindingError(message);
    }
  
  
  
  var InternalError=undefined;function throwInternalError(message) {
      throw new InternalError(message);
    }function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {
      myTypes.forEach(function(type) {
          typeDependencies[type] = dependentTypes;
      });
  
      function onComplete(typeConverters) {
          var myTypeConverters = getTypeConverters(typeConverters);
          if (myTypeConverters.length !== myTypes.length) {
              throwInternalError('Mismatched type converter count');
          }
          for (var i = 0; i < myTypes.length; ++i) {
              registerType(myTypes[i], myTypeConverters[i]);
          }
      }
  
      var typeConverters = new Array(dependentTypes.length);
      var unregisteredTypes = [];
      var registered = 0;
      dependentTypes.forEach(function(dt, i) {
          if (registeredTypes.hasOwnProperty(dt)) {
              typeConverters[i] = registeredTypes[dt];
          } else {
              unregisteredTypes.push(dt);
              if (!awaitingDependencies.hasOwnProperty(dt)) {
                  awaitingDependencies[dt] = [];
              }
              awaitingDependencies[dt].push(function() {
                  typeConverters[i] = registeredTypes[dt];
                  ++registered;
                  if (registered === unregisteredTypes.length) {
                      onComplete(typeConverters);
                  }
              });
          }
      });
      if (0 === unregisteredTypes.length) {
          onComplete(typeConverters);
      }
    }function registerType(rawType, registeredInstance, options) {
      options = options || {};
  
      if (!('argPackAdvance' in registeredInstance)) {
          throw new TypeError('registerType registeredInstance requires argPackAdvance');
      }
  
      var name = registeredInstance.name;
      if (!rawType) {
          throwBindingError('type "' + name + '" must have a positive integer typeid pointer');
      }
      if (registeredTypes.hasOwnProperty(rawType)) {
          if (options.ignoreDuplicateRegistrations) {
              return;
          } else {
              throwBindingError("Cannot register type '" + name + "' twice");
          }
      }
  
      registeredTypes[rawType] = registeredInstance;
      delete typeDependencies[rawType];
  
      if (awaitingDependencies.hasOwnProperty(rawType)) {
          var callbacks = awaitingDependencies[rawType];
          delete awaitingDependencies[rawType];
          callbacks.forEach(function(cb) {
              cb();
          });
      }
    }function __embind_register_bool(rawType, name, size, trueValue, falseValue) {
      var shift = getShiftFromSize(size);
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(wt) {
              // ambiguous emscripten ABI: sometimes return values are
              // true or false, and sometimes integers (0 or 1)
              return !!wt;
          },
          'toWireType': function(destructors, o) {
              return o ? trueValue : falseValue;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': function(pointer) {
              // TODO: if heap is fixed (like in asm.js) this could be executed outside
              var heap;
              if (size === 1) {
                  heap = HEAP8;
              } else if (size === 2) {
                  heap = HEAP16;
              } else if (size === 4) {
                  heap = HEAP32;
              } else {
                  throw new TypeError("Unknown boolean type size: " + name);
              }
              return this['fromWireType'](heap[pointer >> shift]);
          },
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function __embind_register_constant(name, type, value) {
      name = readLatin1String(name);
      whenDependentTypesAreResolved([], [type], function(type) {
          type = type[0];
          Module[name] = type['fromWireType'](value);
          return [];
      });
    }

  
  
  var emval_free_list=[];
  
  var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle) {
      if (handle > 4 && 0 === --emval_handle_array[handle].refcount) {
          emval_handle_array[handle] = undefined;
          emval_free_list.push(handle);
      }
    }
  
  
  
  function count_emval_handles() {
      var count = 0;
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              ++count;
          }
      }
      return count;
    }
  
  function get_first_emval() {
      for (var i = 5; i < emval_handle_array.length; ++i) {
          if (emval_handle_array[i] !== undefined) {
              return emval_handle_array[i];
          }
      }
      return null;
    }function init_emval() {
      Module['count_emval_handles'] = count_emval_handles;
      Module['get_first_emval'] = get_first_emval;
    }function __emval_register(value) {
  
      switch(value){
        case undefined :{ return 1; }
        case null :{ return 2; }
        case true :{ return 3; }
        case false :{ return 4; }
        default:{
          var handle = emval_free_list.length ?
              emval_free_list.pop() :
              emval_handle_array.length;
  
          emval_handle_array[handle] = {refcount: 1, value: value};
          return handle;
          }
        }
    }
  
  function simpleReadValueFromPointer(pointer) {
      return this['fromWireType'](HEAPU32[pointer >> 2]);
    }function __embind_register_emval(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(handle) {
              var rv = emval_handle_array[handle].value;
              __emval_decref(handle);
              return rv;
          },
          'toWireType': function(destructors, value) {
              return __emval_register(value);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: null, // This type does not need a destructor
  
          // TODO: do we need a deleteObject here?  write a test where
          // emval is passed into JS via an interface
      });
    }

  
  function _embind_repr(v) {
      if (v === null) {
          return 'null';
      }
      var t = typeof v;
      if (t === 'object' || t === 'array' || t === 'function') {
          return v.toString();
      } else {
          return '' + v;
      }
    }
  
  function floatReadValueFromPointer(name, shift) {
      switch (shift) {
          case 2: return function(pointer) {
              return this['fromWireType'](HEAPF32[pointer >> 2]);
          };
          case 3: return function(pointer) {
              return this['fromWireType'](HEAPF64[pointer >> 3]);
          };
          default:
              throw new TypeError("Unknown float type: " + name);
      }
    }function __embind_register_float(rawType, name, size) {
      var shift = getShiftFromSize(size);
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              return value;
          },
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following if() and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              return value;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': floatReadValueFromPointer(name, shift),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  
  
  function new_(constructor, argumentList) {
      if (!(constructor instanceof Function)) {
          throw new TypeError('new_ called with constructor type ' + typeof(constructor) + " which is not a function");
      }
  
      /*
       * Previously, the following line was just:
  
       function dummy() {};
  
       * Unfortunately, Chrome was preserving 'dummy' as the object's name, even though at creation, the 'dummy' has the
       * correct constructor name.  Thus, objects created with IMVU.new would show up in the debugger as 'dummy', which
       * isn't very helpful.  Using IMVU.createNamedFunction addresses the issue.  Doublely-unfortunately, there's no way
       * to write a test for this behavior.  -NRD 2013.02.22
       */
      var dummy = createNamedFunction(constructor.name || 'unknownFunctionName', function(){});
      dummy.prototype = constructor.prototype;
      var obj = new dummy;
  
      var r = constructor.apply(obj, argumentList);
      return (r instanceof Object) ? r : obj;
    }
  
  function runDestructors(destructors) {
      while (destructors.length) {
          var ptr = destructors.pop();
          var del = destructors.pop();
          del(ptr);
      }
    }function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {
      // humanName: a human-readable string name for the function to be generated.
      // argTypes: An array that contains the embind type objects for all types in the function signature.
      //    argTypes[0] is the type object for the function return value.
      //    argTypes[1] is the type object for function this object/class type, or null if not crafting an invoker for a class method.
      //    argTypes[2...] are the actual function parameters.
      // classType: The embind type object for the class to be bound, or null if this is not a method of a class.
      // cppInvokerFunc: JS Function object to the C++-side function that interops into C++ code.
      // cppTargetFunc: Function pointer (an integer to FUNCTION_TABLE) to the target C++ function the cppInvokerFunc will end up calling.
      var argCount = argTypes.length;
  
      if (argCount < 2) {
          throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!");
      }
  
      var isClassMethodFunc = (argTypes[1] !== null && classType !== null);
  
      // Free functions with signature "void function()" do not need an invoker that marshalls between wire types.
  // TODO: This omits argument count check - enable only at -O3 or similar.
  //    if (ENABLE_UNSAFE_OPTS && argCount == 2 && argTypes[0].name == "void" && !isClassMethodFunc) {
  //       return FUNCTION_TABLE[fn];
  //    }
  
  
      // Determine if we need to use a dynamic stack to store the destructors for the function parameters.
      // TODO: Remove this completely once all function invokers are being dynamically generated.
      var needsDestructorStack = false;
  
      for(var i = 1; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here.
          if (argTypes[i] !== null && argTypes[i].destructorFunction === undefined) { // The type does not define a destructor function - must use dynamic stack
              needsDestructorStack = true;
              break;
          }
      }
  
      var returns = (argTypes[0].name !== "void");
  
      var argsList = "";
      var argsListWired = "";
      for(var i = 0; i < argCount - 2; ++i) {
          argsList += (i!==0?", ":"")+"arg"+i;
          argsListWired += (i!==0?", ":"")+"arg"+i+"Wired";
      }
  
      var invokerFnBody =
          "return function "+makeLegalFunctionName(humanName)+"("+argsList+") {\n" +
          "if (arguments.length !== "+(argCount - 2)+") {\n" +
              "throwBindingError('function "+humanName+" called with ' + arguments.length + ' arguments, expected "+(argCount - 2)+" args!');\n" +
          "}\n";
  
  
      if (needsDestructorStack) {
          invokerFnBody +=
              "var destructors = [];\n";
      }
  
      var dtorStack = needsDestructorStack ? "destructors" : "null";
      var args1 = ["throwBindingError", "invoker", "fn", "runDestructors", "retType", "classParam"];
      var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];
  
  
      if (isClassMethodFunc) {
          invokerFnBody += "var thisWired = classParam.toWireType("+dtorStack+", this);\n";
      }
  
      for(var i = 0; i < argCount - 2; ++i) {
          invokerFnBody += "var arg"+i+"Wired = argType"+i+".toWireType("+dtorStack+", arg"+i+"); // "+argTypes[i+2].name+"\n";
          args1.push("argType"+i);
          args2.push(argTypes[i+2]);
      }
  
      if (isClassMethodFunc) {
          argsListWired = "thisWired" + (argsListWired.length > 0 ? ", " : "") + argsListWired;
      }
  
      invokerFnBody +=
          (returns?"var rv = ":"") + "invoker(fn"+(argsListWired.length>0?", ":"")+argsListWired+");\n";
  
      if (needsDestructorStack) {
          invokerFnBody += "runDestructors(destructors);\n";
      } else {
          for(var i = isClassMethodFunc?1:2; i < argTypes.length; ++i) { // Skip return value at index 0 - it's not deleted here. Also skip class type if not a method.
              var paramName = (i === 1 ? "thisWired" : ("arg"+(i - 2)+"Wired"));
              if (argTypes[i].destructorFunction !== null) {
                  invokerFnBody += paramName+"_dtor("+paramName+"); // "+argTypes[i].name+"\n";
                  args1.push(paramName+"_dtor");
                  args2.push(argTypes[i].destructorFunction);
              }
          }
      }
  
      if (returns) {
          invokerFnBody += "var ret = retType.fromWireType(rv);\n" +
                           "return ret;\n";
      } else {
      }
      invokerFnBody += "}\n";
  
      args1.push(invokerFnBody);
  
      var invokerFunction = new_(Function, args1).apply(null, args2);
      return invokerFunction;
    }
  
  
  function ensureOverloadTable(proto, methodName, humanName) {
      if (undefined === proto[methodName].overloadTable) {
          var prevFunc = proto[methodName];
          // Inject an overload resolver function that routes to the appropriate overload based on the number of arguments.
          proto[methodName] = function() {
              // TODO This check can be removed in -O3 level "unsafe" optimizations.
              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {
                  throwBindingError("Function '" + humanName + "' called with an invalid number of arguments (" + arguments.length + ") - expects one of (" + proto[methodName].overloadTable + ")!");
              }
              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);
          };
          // Move the previous function into the overload table.
          proto[methodName].overloadTable = [];
          proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;
      }
    }function exposePublicSymbol(name, value, numArguments) {
      if (Module.hasOwnProperty(name)) {
          if (undefined === numArguments || (undefined !== Module[name].overloadTable && undefined !== Module[name].overloadTable[numArguments])) {
              throwBindingError("Cannot register public name '" + name + "' twice");
          }
  
          // We are exposing a function with the same name as an existing function. Create an overload table and a function selector
          // that routes between the two.
          ensureOverloadTable(Module, name, name);
          if (Module.hasOwnProperty(numArguments)) {
              throwBindingError("Cannot register multiple overloads of a function with the same number of arguments (" + numArguments + ")!");
          }
          // Add the new function into the overload table.
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          if (undefined !== numArguments) {
              Module[name].numArguments = numArguments;
          }
      }
    }
  
  function heap32VectorToArray(count, firstElement) {
      var array = [];
      for (var i = 0; i < count; i++) {
          array.push(HEAP32[(firstElement >> 2) + i]);
      }
      return array;
    }
  
  function replacePublicSymbol(name, value, numArguments) {
      if (!Module.hasOwnProperty(name)) {
          throwInternalError('Replacing nonexistant public symbol');
      }
      // If there's an overload table for this symbol, replace the symbol in the overload table instead.
      if (undefined !== Module[name].overloadTable && undefined !== numArguments) {
          Module[name].overloadTable[numArguments] = value;
      }
      else {
          Module[name] = value;
          Module[name].argCount = numArguments;
      }
    }
  
  function embind__requireFunction(signature, rawFunction) {
      signature = readLatin1String(signature);
  
      function makeDynCaller(dynCall) {
          var args = [];
          for (var i = 1; i < signature.length; ++i) {
              args.push('a' + i);
          }
  
          var name = 'dynCall_' + signature + '_' + rawFunction;
          var body = 'return function ' + name + '(' + args.join(', ') + ') {\n';
          body    += '    return dynCall(rawFunction' + (args.length ? ', ' : '') + args.join(', ') + ');\n';
          body    += '};\n';
  
          return (new Function('dynCall', 'rawFunction', body))(dynCall, rawFunction);
      }
  
      var fp;
      if (Module['FUNCTION_TABLE_' + signature] !== undefined) {
          fp = Module['FUNCTION_TABLE_' + signature][rawFunction];
      } else if (typeof FUNCTION_TABLE !== "undefined") {
          fp = FUNCTION_TABLE[rawFunction];
      } else {
          // asm.js does not give direct access to the function tables,
          // and thus we must go through the dynCall interface which allows
          // calling into a signature's function table by pointer value.
          //
          // https://github.com/dherman/asm.js/issues/83
          //
          // This has three main penalties:
          // - dynCall is another function call in the path from JavaScript to C++.
          // - JITs may not predict through the function table indirection at runtime.
          var dc = Module['dynCall_' + signature];
          if (dc === undefined) {
              // We will always enter this branch if the signature
              // contains 'f' and PRECISE_F32 is not enabled.
              //
              // Try again, replacing 'f' with 'd'.
              dc = Module['dynCall_' + signature.replace(/f/g, 'd')];
              if (dc === undefined) {
                  throwBindingError("No dynCall invoker for signature: " + signature);
              }
          }
          fp = makeDynCaller(dc);
      }
  
      if (typeof fp !== "function") {
          throwBindingError("unknown function pointer with signature " + signature + ": " + rawFunction);
      }
      return fp;
    }
  
  
  var UnboundTypeError=undefined;
  
  function getTypeName(type) {
      var ptr = ___getTypeName(type);
      var rv = readLatin1String(ptr);
      _free(ptr);
      return rv;
    }function throwUnboundTypeError(message, types) {
      var unboundTypes = [];
      var seen = {};
      function visit(type) {
          if (seen[type]) {
              return;
          }
          if (registeredTypes[type]) {
              return;
          }
          if (typeDependencies[type]) {
              typeDependencies[type].forEach(visit);
              return;
          }
          unboundTypes.push(type);
          seen[type] = true;
      }
      types.forEach(visit);
  
      throw new UnboundTypeError(message + ': ' + unboundTypes.map(getTypeName).join([', ']));
    }function __embind_register_function(name, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {
      var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);
      name = readLatin1String(name);
  
      rawInvoker = embind__requireFunction(signature, rawInvoker);
  
      exposePublicSymbol(name, function() {
          throwUnboundTypeError('Cannot call ' + name + ' due to unbound types', argTypes);
      }, argCount - 1);
  
      whenDependentTypesAreResolved([], argTypes, function(argTypes) {
          var invokerArgsArray = [argTypes[0] /* return value */, null /* no class 'this'*/].concat(argTypes.slice(1) /* actual params */);
          replacePublicSymbol(name, craftInvokerFunction(name, invokerArgsArray, null /* no class 'this'*/, rawInvoker, fn), argCount - 1);
          return [];
      });
    }

  
  function integerReadValueFromPointer(name, shift, signed) {
      // integers are quite common, so generate very specialized functions
      switch (shift) {
          case 0: return signed ?
              function readS8FromPointer(pointer) { return HEAP8[pointer]; } :
              function readU8FromPointer(pointer) { return HEAPU8[pointer]; };
          case 1: return signed ?
              function readS16FromPointer(pointer) { return HEAP16[pointer >> 1]; } :
              function readU16FromPointer(pointer) { return HEAPU16[pointer >> 1]; };
          case 2: return signed ?
              function readS32FromPointer(pointer) { return HEAP32[pointer >> 2]; } :
              function readU32FromPointer(pointer) { return HEAPU32[pointer >> 2]; };
          default:
              throw new TypeError("Unknown integer type: " + name);
      }
    }function __embind_register_integer(primitiveType, name, size, minRange, maxRange) {
      name = readLatin1String(name);
      if (maxRange === -1) { // LLVM doesn't have signed and unsigned 32-bit types, so u32 literals come out as 'i32 -1'. Always treat those as max u32.
          maxRange = 4294967295;
      }
  
      var shift = getShiftFromSize(size);
  
      var fromWireType = function(value) {
          return value;
      };
  
      if (minRange === 0) {
          var bitshift = 32 - 8*size;
          fromWireType = function(value) {
              return (value << bitshift) >>> bitshift;
          };
      }
  
      var isUnsignedType = (name.indexOf('unsigned') != -1);
  
      registerType(primitiveType, {
          name: name,
          'fromWireType': fromWireType,
          'toWireType': function(destructors, value) {
              // todo: Here we have an opportunity for -O3 level "unsafe" optimizations: we could
              // avoid the following two if()s and assume value is of proper type.
              if (typeof value !== "number" && typeof value !== "boolean") {
                  throw new TypeError('Cannot convert "' + _embind_repr(value) + '" to ' + this.name);
              }
              if (value < minRange || value > maxRange) {
                  throw new TypeError('Passing a number "' + _embind_repr(value) + '" from JS side to C/C++ side to an argument of type "' + name + '", which is outside the valid range [' + minRange + ', ' + maxRange + ']!');
              }
              return isUnsignedType ? (value >>> 0) : (value | 0);
          },
          'argPackAdvance': 8,
          'readValueFromPointer': integerReadValueFromPointer(name, shift, minRange !== 0),
          destructorFunction: null, // This type does not need a destructor
      });
    }

  function __embind_register_memory_view(rawType, dataTypeIndex, name) {
      var typeMapping = [
          Int8Array,
          Uint8Array,
          Int16Array,
          Uint16Array,
          Int32Array,
          Uint32Array,
          Float32Array,
          Float64Array,
      ];
  
      var TA = typeMapping[dataTypeIndex];
  
      function decodeMemoryView(handle) {
          handle = handle >> 2;
          var heap = HEAPU32;
          var size = heap[handle]; // in elements
          var data = heap[handle + 1]; // byte offset into emscripten heap
          return new TA(heap['buffer'], data, size);
      }
  
      name = readLatin1String(name);
      registerType(rawType, {
          name: name,
          'fromWireType': decodeMemoryView,
          'argPackAdvance': 8,
          'readValueFromPointer': decodeMemoryView,
      }, {
          ignoreDuplicateRegistrations: true,
      });
    }

  function __embind_register_std_string(rawType, name) {
      name = readLatin1String(name);
      var stdStringIsUTF8
      //process only std::string bindings with UTF8 support, in contrast to e.g. std::basic_string<unsigned char>
      = (name === "std::string");
  
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var length = HEAPU32[value >> 2];
  
              var str;
              if(stdStringIsUTF8) {
                  //ensure null termination at one-past-end byte if not present yet
                  var endChar = HEAPU8[value + 4 + length];
                  var endCharSwap = 0;
                  if(endChar != 0)
                  {
                    endCharSwap = endChar;
                    HEAPU8[value + 4 + length] = 0;
                  }
  
                  var decodeStartPtr = value + 4;
                  //looping here to support possible embedded '0' bytes
                  for (var i = 0; i <= length; ++i) {
                    var currentBytePtr = value + 4 + i;
                    if(HEAPU8[currentBytePtr] == 0)
                    {
                      var stringSegment = UTF8ToString(decodeStartPtr);
                      if(str === undefined)
                        str = stringSegment;
                      else
                      {
                        str += String.fromCharCode(0);
                        str += stringSegment;
                      }
                      decodeStartPtr = currentBytePtr + 1;
                    }
                  }
  
                  if(endCharSwap != 0)
                    HEAPU8[value + 4 + length] = endCharSwap;
              } else {
                  var a = new Array(length);
                  for (var i = 0; i < length; ++i) {
                      a[i] = String.fromCharCode(HEAPU8[value + 4 + i]);
                  }
                  str = a.join('');
              }
  
              _free(value);
              
              return str;
          },
          'toWireType': function(destructors, value) {
              if (value instanceof ArrayBuffer) {
                  value = new Uint8Array(value);
              }
              
              var getLength;
              var valueIsOfTypeString = (typeof value === 'string');
  
              if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {
                  throwBindingError('Cannot pass non-string to std::string');
              }
              if (stdStringIsUTF8 && valueIsOfTypeString) {
                  getLength = function() {return lengthBytesUTF8(value);};
              } else {
                  getLength = function() {return value.length;};
              }
              
              // assumes 4-byte alignment
              var length = getLength();
              var ptr = _malloc(4 + length + 1);
              HEAPU32[ptr >> 2] = length;
  
              if (stdStringIsUTF8 && valueIsOfTypeString) {
                  stringToUTF8(value, ptr + 4, length + 1);
              } else {
                  if(valueIsOfTypeString) {
                      for (var i = 0; i < length; ++i) {
                          var charCode = value.charCodeAt(i);
                          if (charCode > 255) {
                              _free(ptr);
                              throwBindingError('String has UTF-16 code units that do not fit in 8 bits');
                          }
                          HEAPU8[ptr + 4 + i] = charCode;
                      }
                  } else {
                      for (var i = 0; i < length; ++i) {
                          HEAPU8[ptr + 4 + i] = value[i];
                      }
                  }
              }
  
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_std_wstring(rawType, charSize, name) {
      // nb. do not cache HEAPU16 and HEAPU32, they may be destroyed by emscripten_resize_heap().
      name = readLatin1String(name);
      var getHeap, shift;
      if (charSize === 2) {
          getHeap = function() { return HEAPU16; };
          shift = 1;
      } else if (charSize === 4) {
          getHeap = function() { return HEAPU32; };
          shift = 2;
      }
      registerType(rawType, {
          name: name,
          'fromWireType': function(value) {
              var HEAP = getHeap();
              var length = HEAPU32[value >> 2];
              var a = new Array(length);
              var start = (value + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  a[i] = String.fromCharCode(HEAP[start + i]);
              }
              _free(value);
              return a.join('');
          },
          'toWireType': function(destructors, value) {
              // assumes 4-byte alignment
              var HEAP = getHeap();
              var length = value.length;
              var ptr = _malloc(4 + length * charSize);
              HEAPU32[ptr >> 2] = length;
              var start = (ptr + 4) >> shift;
              for (var i = 0; i < length; ++i) {
                  HEAP[start + i] = value.charCodeAt(i);
              }
              if (destructors !== null) {
                  destructors.push(_free, ptr);
              }
              return ptr;
          },
          'argPackAdvance': 8,
          'readValueFromPointer': simpleReadValueFromPointer,
          destructorFunction: function(ptr) { _free(ptr); },
      });
    }

  function __embind_register_void(rawType, name) {
      name = readLatin1String(name);
      registerType(rawType, {
          isVoid: true, // void return values can be optimized out sometimes
          name: name,
          'argPackAdvance': 0,
          'fromWireType': function() {
              return undefined;
          },
          'toWireType': function(destructors, o) {
              // TODO: assert if anything else is given?
              return undefined;
          },
      });
    }

  function _abort() {
      Module['abort']();
    }

   

   

  var _emscripten_asm_const_int=true;

  function _emscripten_get_heap_size() {
      return HEAP8.length;
    }

  
  function abortOnCannotGrowMemory(requestedSize) {
      abort('Cannot enlarge memory arrays to size ' + requestedSize + ' bytes (OOM). Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + HEAP8.length + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or (4) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
    }
  
  function emscripten_realloc_buffer(size) {
      try {
        var newBuffer = new ArrayBuffer(size);
        if (newBuffer.byteLength != size) return false;
        new Int8Array(newBuffer).set(HEAP8);
      } catch(e) {
        return false;
      }
      buffer = newBuffer;
      Module['_emscripten_replace_memory'](newBuffer);
      return true;
    }function _emscripten_resize_heap(requestedSize) {
      var oldSize = _emscripten_get_heap_size();
      // With pthreads, races can happen (another thread might increase the size in between), so return a failure, and let the caller retry.
      assert(requestedSize > oldSize);
  
  
      var PAGE_MULTIPLE = 16777216;
      var LIMIT = 2147483648 - PAGE_MULTIPLE; // We can do one page short of 2GB as theoretical maximum.
  
      if (requestedSize > LIMIT) {
        err('Cannot enlarge memory, asked to go up to ' + requestedSize + ' bytes, but the limit is ' + LIMIT + ' bytes!');
        return false;
      }
  
      var MIN_TOTAL_MEMORY = 16777216;
      var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY); // So the loop below will not be infinite, and minimum asm.js memory size is 16MB.
  
      // TODO: see realloc_buffer - for PTHREADS we may want to decrease these jumps
      while (newSize < requestedSize) { // Keep incrementing the heap size as long as it's less than what is requested.
        if (newSize <= 536870912) {
          newSize = alignUp(2 * newSize, PAGE_MULTIPLE); // Simple heuristic: double until 1GB...
        } else {
          // ..., but after that, add smaller increments towards 2GB, which we cannot reach
          newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);
          if (newSize === oldSize) {
            warnOnce('Cannot ask for more memory since we reached the practical limit in browsers (which is just below 2GB), so the request would have failed. Requesting only ' + HEAP8.length);
          }
        }
      }
  
  
      var start = Date.now();
  
      if (!emscripten_realloc_buffer(newSize)) {
        err('Failed to grow the heap from ' + oldSize + ' bytes to ' + newSize + ' bytes, not enough memory!');
        return false;
      }
  
      updateGlobalBufferViews();
  
      err('Warning: Enlarging memory arrays, this is not fast! ' + [oldSize, newSize]);
  
  
      return true;
    }

  function _exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      exit(status);
    }

  function _getenv(name) {
      // char *getenv(const char *name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/getenv.html
      if (name === 0) return 0;
      name = UTF8ToString(name);
      if (!ENV.hasOwnProperty(name)) return 0;
  
      if (_getenv.ret) _free(_getenv.ret);
      _getenv.ret = allocateUTF8(ENV[name]);
      return _getenv.ret;
    }

  function _gettimeofday(ptr) {
      var now = Date.now();
      HEAP32[((ptr)>>2)]=(now/1000)|0; // seconds
      HEAP32[(((ptr)+(4))>>2)]=((now % 1000)*1000)|0; // microseconds
      return 0;
    }



   

  function _llvm_exp2_f32(x) {
      return Math.pow(2, x);
    }

  function _llvm_stackrestore(p) {
      var self = _llvm_stacksave;
      var ret = self.LLVM_SAVEDSTACKS[p];
      self.LLVM_SAVEDSTACKS.splice(p, 1);
      stackRestore(ret);
    }

  function _llvm_stacksave() {
      var self = _llvm_stacksave;
      if (!self.LLVM_SAVEDSTACKS) {
        self.LLVM_SAVEDSTACKS = [];
      }
      self.LLVM_SAVEDSTACKS.push(stackSave());
      return self.LLVM_SAVEDSTACKS.length-1;
    }

  
  var ___tm_current=58384;
  
  
  var ___tm_timezone=(stringToUTF8("GMT", 58432, 4), 58432);
  
  function _tzset() {
      // TODO: Use (malleable) environment variables instead of system settings.
      if (_tzset.called) return;
      _tzset.called = true;
  
      // timezone is specified as seconds west of UTC ("The external variable
      // `timezone` shall be set to the difference, in seconds, between
      // Coordinated Universal Time (UTC) and local standard time."), the same
      // as returned by getTimezoneOffset().
      // See http://pubs.opengroup.org/onlinepubs/009695399/functions/tzset.html
      HEAP32[((__get_timezone())>>2)]=(new Date()).getTimezoneOffset() * 60;
  
      var winter = new Date(2000, 0, 1);
      var summer = new Date(2000, 6, 1);
      HEAP32[((__get_daylight())>>2)]=Number(winter.getTimezoneOffset() != summer.getTimezoneOffset());
  
      function extractZone(date) {
        var match = date.toTimeString().match(/\(([A-Za-z ]+)\)$/);
        return match ? match[1] : "GMT";
      };
      var winterName = extractZone(winter);
      var summerName = extractZone(summer);
      var winterNamePtr = allocate(intArrayFromString(winterName), 'i8', ALLOC_NORMAL);
      var summerNamePtr = allocate(intArrayFromString(summerName), 'i8', ALLOC_NORMAL);
      if (summer.getTimezoneOffset() < winter.getTimezoneOffset()) {
        // Northern hemisphere
        HEAP32[((__get_tzname())>>2)]=winterNamePtr;
        HEAP32[(((__get_tzname())+(4))>>2)]=summerNamePtr;
      } else {
        HEAP32[((__get_tzname())>>2)]=summerNamePtr;
        HEAP32[(((__get_tzname())+(4))>>2)]=winterNamePtr;
      }
    }function _localtime_r(time, tmPtr) {
      _tzset();
      var date = new Date(HEAP32[((time)>>2)]*1000);
      HEAP32[((tmPtr)>>2)]=date.getSeconds();
      HEAP32[(((tmPtr)+(4))>>2)]=date.getMinutes();
      HEAP32[(((tmPtr)+(8))>>2)]=date.getHours();
      HEAP32[(((tmPtr)+(12))>>2)]=date.getDate();
      HEAP32[(((tmPtr)+(16))>>2)]=date.getMonth();
      HEAP32[(((tmPtr)+(20))>>2)]=date.getFullYear()-1900;
      HEAP32[(((tmPtr)+(24))>>2)]=date.getDay();
  
      var start = new Date(date.getFullYear(), 0, 1);
      var yday = ((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24))|0;
      HEAP32[(((tmPtr)+(28))>>2)]=yday;
      HEAP32[(((tmPtr)+(36))>>2)]=-(date.getTimezoneOffset() * 60);
  
      // Attention: DST is in December in South, and some regions don't have DST at all.
      var summerOffset = new Date(2000, 6, 1).getTimezoneOffset();
      var winterOffset = start.getTimezoneOffset();
      var dst = (summerOffset != winterOffset && date.getTimezoneOffset() == Math.min(winterOffset, summerOffset))|0;
      HEAP32[(((tmPtr)+(32))>>2)]=dst;
  
      var zonePtr = HEAP32[(((__get_tzname())+(dst ? 4 : 0))>>2)];
      HEAP32[(((tmPtr)+(40))>>2)]=zonePtr;
  
      return tmPtr;
    }function _localtime(time) {
      return _localtime_r(time, ___tm_current);
    }

  
   
  
   
  
   function _longjmp(env, value) {
      _setThrew(env, value || 1);
      throw 'longjmp';
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
    }
  
   

   

   

   

  function _pthread_cond_wait() { return 0; }

  
   


   

  
  function __isLeapYear(year) {
        return year%4 === 0 && (year%100 !== 0 || year%400 === 0);
    }
  
  function __arraySum(array, index) {
      var sum = 0;
      for (var i = 0; i <= index; sum += array[i++]);
      return sum;
    }
  
  
  var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];
  
  var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date, days) {
      var newDate = new Date(date.getTime());
      while(days > 0) {
        var leap = __isLeapYear(newDate.getFullYear());
        var currentMonth = newDate.getMonth();
        var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];
  
        if (days > daysInCurrentMonth-newDate.getDate()) {
          // we spill over to next month
          days -= (daysInCurrentMonth-newDate.getDate()+1);
          newDate.setDate(1);
          if (currentMonth < 11) {
            newDate.setMonth(currentMonth+1)
          } else {
            newDate.setMonth(0);
            newDate.setFullYear(newDate.getFullYear()+1);
          }
        } else {
          // we stay in current month
          newDate.setDate(newDate.getDate()+days);
          return newDate;
        }
      }
  
      return newDate;
    }function _strftime(s, maxsize, format, tm) {
      // size_t strftime(char *restrict s, size_t maxsize, const char *restrict format, const struct tm *restrict timeptr);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
  
      var tm_zone = HEAP32[(((tm)+(40))>>2)];
  
      var date = {
        tm_sec: HEAP32[((tm)>>2)],
        tm_min: HEAP32[(((tm)+(4))>>2)],
        tm_hour: HEAP32[(((tm)+(8))>>2)],
        tm_mday: HEAP32[(((tm)+(12))>>2)],
        tm_mon: HEAP32[(((tm)+(16))>>2)],
        tm_year: HEAP32[(((tm)+(20))>>2)],
        tm_wday: HEAP32[(((tm)+(24))>>2)],
        tm_yday: HEAP32[(((tm)+(28))>>2)],
        tm_isdst: HEAP32[(((tm)+(32))>>2)],
        tm_gmtoff: HEAP32[(((tm)+(36))>>2)],
        tm_zone: tm_zone ? UTF8ToString(tm_zone) : ''
      };
  
      var pattern = UTF8ToString(format);
  
      // expand format
      var EXPANSION_RULES_1 = {
        '%c': '%a %b %d %H:%M:%S %Y',     // Replaced by the locale's appropriate date and time representation - e.g., Mon Aug  3 14:02:01 2013
        '%D': '%m/%d/%y',                 // Equivalent to %m / %d / %y
        '%F': '%Y-%m-%d',                 // Equivalent to %Y - %m - %d
        '%h': '%b',                       // Equivalent to %b
        '%r': '%I:%M:%S %p',              // Replaced by the time in a.m. and p.m. notation
        '%R': '%H:%M',                    // Replaced by the time in 24-hour notation
        '%T': '%H:%M:%S',                 // Replaced by the time
        '%x': '%m/%d/%y',                 // Replaced by the locale's appropriate date representation
        '%X': '%H:%M:%S'                  // Replaced by the locale's appropriate date representation
      };
      for (var rule in EXPANSION_RULES_1) {
        pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_1[rule]);
      }
  
      var WEEKDAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
      var MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
  
      function leadingSomething(value, digits, character) {
        var str = typeof value === 'number' ? value.toString() : (value || '');
        while (str.length < digits) {
          str = character[0]+str;
        }
        return str;
      };
  
      function leadingNulls(value, digits) {
        return leadingSomething(value, digits, '0');
      };
  
      function compareByDay(date1, date2) {
        function sgn(value) {
          return value < 0 ? -1 : (value > 0 ? 1 : 0);
        };
  
        var compare;
        if ((compare = sgn(date1.getFullYear()-date2.getFullYear())) === 0) {
          if ((compare = sgn(date1.getMonth()-date2.getMonth())) === 0) {
            compare = sgn(date1.getDate()-date2.getDate());
          }
        }
        return compare;
      };
  
      function getFirstWeekStartDate(janFourth) {
          switch (janFourth.getDay()) {
            case 0: // Sunday
              return new Date(janFourth.getFullYear()-1, 11, 29);
            case 1: // Monday
              return janFourth;
            case 2: // Tuesday
              return new Date(janFourth.getFullYear(), 0, 3);
            case 3: // Wednesday
              return new Date(janFourth.getFullYear(), 0, 2);
            case 4: // Thursday
              return new Date(janFourth.getFullYear(), 0, 1);
            case 5: // Friday
              return new Date(janFourth.getFullYear()-1, 11, 31);
            case 6: // Saturday
              return new Date(janFourth.getFullYear()-1, 11, 30);
          }
      };
  
      function getWeekBasedYear(date) {
          var thisDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
          var janFourthNextYear = new Date(thisDate.getFullYear()+1, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
            // this date is after the start of the first week of this year
            if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
              return thisDate.getFullYear()+1;
            } else {
              return thisDate.getFullYear();
            }
          } else {
            return thisDate.getFullYear()-1;
          }
      };
  
      var EXPANSION_RULES_2 = {
        '%a': function(date) {
          return WEEKDAYS[date.tm_wday].substring(0,3);
        },
        '%A': function(date) {
          return WEEKDAYS[date.tm_wday];
        },
        '%b': function(date) {
          return MONTHS[date.tm_mon].substring(0,3);
        },
        '%B': function(date) {
          return MONTHS[date.tm_mon];
        },
        '%C': function(date) {
          var year = date.tm_year+1900;
          return leadingNulls((year/100)|0,2);
        },
        '%d': function(date) {
          return leadingNulls(date.tm_mday, 2);
        },
        '%e': function(date) {
          return leadingSomething(date.tm_mday, 2, ' ');
        },
        '%g': function(date) {
          // %g, %G, and %V give values according to the ISO 8601:2000 standard week-based year.
          // In this system, weeks begin on a Monday and week 1 of the year is the week that includes
          // January 4th, which is also the week that includes the first Thursday of the year, and
          // is also the first week that contains at least four days in the year.
          // If the first Monday of January is the 2nd, 3rd, or 4th, the preceding days are part of
          // the last week of the preceding year; thus, for Saturday 2nd January 1999,
          // %G is replaced by 1998 and %V is replaced by 53. If December 29th, 30th,
          // or 31st is a Monday, it and any following days are part of week 1 of the following year.
          // Thus, for Tuesday 30th December 1997, %G is replaced by 1998 and %V is replaced by 01.
  
          return getWeekBasedYear(date).toString().substring(2);
        },
        '%G': function(date) {
          return getWeekBasedYear(date);
        },
        '%H': function(date) {
          return leadingNulls(date.tm_hour, 2);
        },
        '%I': function(date) {
          var twelveHour = date.tm_hour;
          if (twelveHour == 0) twelveHour = 12;
          else if (twelveHour > 12) twelveHour -= 12;
          return leadingNulls(twelveHour, 2);
        },
        '%j': function(date) {
          // Day of the year (001-366)
          return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon-1), 3);
        },
        '%m': function(date) {
          return leadingNulls(date.tm_mon+1, 2);
        },
        '%M': function(date) {
          return leadingNulls(date.tm_min, 2);
        },
        '%n': function() {
          return '\n';
        },
        '%p': function(date) {
          if (date.tm_hour >= 0 && date.tm_hour < 12) {
            return 'AM';
          } else {
            return 'PM';
          }
        },
        '%S': function(date) {
          return leadingNulls(date.tm_sec, 2);
        },
        '%t': function() {
          return '\t';
        },
        '%u': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay() || 7;
        },
        '%U': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53].
          // The first Sunday of January is the first day of week 1;
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year+1900, 0, 1);
          var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7-janFirst.getDay());
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Sunday?
          if (compareByDay(firstSunday, endDate) < 0) {
            // calculate difference in days between first Sunday and endDate
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstSundayUntilEndJanuary = 31-firstSunday.getDate();
            var days = firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
  
          return compareByDay(firstSunday, janFirst) === 0 ? '01': '00';
        },
        '%V': function(date) {
          // Replaced by the week number of the year (Monday as the first day of the week)
          // as a decimal number [01,53]. If the week containing 1 January has four
          // or more days in the new year, then it is considered week 1.
          // Otherwise, it is the last week of the previous year, and the next week is week 1.
          // Both January 4th and the first Thursday of January are always in week 1. [ tm_year, tm_wday, tm_yday]
          var janFourthThisYear = new Date(date.tm_year+1900, 0, 4);
          var janFourthNextYear = new Date(date.tm_year+1901, 0, 4);
  
          var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
          var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);
  
          var endDate = __addDays(new Date(date.tm_year+1900, 0, 1), date.tm_yday);
  
          if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
            // if given date is before this years first week, then it belongs to the 53rd week of last year
            return '53';
          }
  
          if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
            // if given date is after next years first week, then it belongs to the 01th week of next year
            return '01';
          }
  
          // given date is in between CW 01..53 of this calendar year
          var daysDifference;
          if (firstWeekStartThisYear.getFullYear() < date.tm_year+1900) {
            // first CW of this year starts last year
            daysDifference = date.tm_yday+32-firstWeekStartThisYear.getDate()
          } else {
            // first CW of this year starts this year
            daysDifference = date.tm_yday+1-firstWeekStartThisYear.getDate();
          }
          return leadingNulls(Math.ceil(daysDifference/7), 2);
        },
        '%w': function(date) {
          var day = new Date(date.tm_year+1900, date.tm_mon+1, date.tm_mday, 0, 0, 0, 0);
          return day.getDay();
        },
        '%W': function(date) {
          // Replaced by the week number of the year as a decimal number [00,53].
          // The first Monday of January is the first day of week 1;
          // days in the new year before this are in week 0. [ tm_year, tm_wday, tm_yday]
          var janFirst = new Date(date.tm_year, 0, 1);
          var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7-janFirst.getDay()+1);
          var endDate = new Date(date.tm_year+1900, date.tm_mon, date.tm_mday);
  
          // is target date after the first Monday?
          if (compareByDay(firstMonday, endDate) < 0) {
            var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth()-1)-31;
            var firstMondayUntilEndJanuary = 31-firstMonday.getDate();
            var days = firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();
            return leadingNulls(Math.ceil(days/7), 2);
          }
          return compareByDay(firstMonday, janFirst) === 0 ? '01': '00';
        },
        '%y': function(date) {
          // Replaced by the last two digits of the year as a decimal number [00,99]. [ tm_year]
          return (date.tm_year+1900).toString().substring(2);
        },
        '%Y': function(date) {
          // Replaced by the year as a decimal number (for example, 1997). [ tm_year]
          return date.tm_year+1900;
        },
        '%z': function(date) {
          // Replaced by the offset from UTC in the ISO 8601:2000 standard format ( +hhmm or -hhmm ).
          // For example, "-0430" means 4 hours 30 minutes behind UTC (west of Greenwich).
          var off = date.tm_gmtoff;
          var ahead = off >= 0;
          off = Math.abs(off) / 60;
          // convert from minutes into hhmm format (which means 60 minutes = 100 units)
          off = (off / 60)*100 + (off % 60);
          return (ahead ? '+' : '-') + String("0000" + off).slice(-4);
        },
        '%Z': function(date) {
          return date.tm_zone;
        },
        '%%': function() {
          return '%';
        }
      };
      for (var rule in EXPANSION_RULES_2) {
        if (pattern.indexOf(rule) >= 0) {
          pattern = pattern.replace(new RegExp(rule, 'g'), EXPANSION_RULES_2[rule](date));
        }
      }
  
      var bytes = intArrayFromString(pattern, false);
      if (bytes.length > maxsize) {
        return 0;
      }
  
      writeArrayToMemory(bytes, s);
      return bytes.length-1;
    }

  function _strftime_l(s, maxsize, format, tm) {
      return _strftime(s, maxsize, format, tm); // no locale support yet
    }


  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }
if (ENVIRONMENT_IS_NODE) {
    _emscripten_get_now = function _emscripten_get_now_actual() {
      var t = process['hrtime']();
      return t[0] * 1e3 + t[1] / 1e6;
    };
  } else if (typeof dateNow !== 'undefined') {
    _emscripten_get_now = dateNow;
  } else if (typeof performance === 'object' && performance && typeof performance['now'] === 'function') {
    _emscripten_get_now = function() { return performance['now'](); };
  } else {
    _emscripten_get_now = Date.now;
  };
FS.staticInit();;
if (ENVIRONMENT_IS_NODE) { var fs = require("fs"); var NODEJS_PATH = require("path"); NODEFS.staticInit(); };
embind_init_charCodes();
BindingError = Module['BindingError'] = extendError(Error, 'BindingError');;
InternalError = Module['InternalError'] = extendError(Error, 'InternalError');;
init_emval();;
UnboundTypeError = Module['UnboundTypeError'] = extendError(Error, 'UnboundTypeError');;
var ASSERTIONS = true;

// Copyright 2017 The Emscripten Authors.  All rights reserved.
// Emscripten is available under two separate licenses, the MIT license and the
// University of Illinois/NCSA Open Source License.  Both these licenses can be
// found in the LICENSE file.

/** @type {function(string, boolean=, number=)} */
function intArrayFromString(stringy, dontAddNull, length) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      if (ASSERTIONS) {
        assert(false, 'Character code ' + chr + ' (' + String.fromCharCode(chr) + ')  at offset ' + i + ' not in 0x00-0xFF.');
      }
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}


// Copied from https://github.com/strophe/strophejs/blob/e06d027/src/polyfills.js#L149

// This code was written by Tyler Akins and has been placed in the
// public domain.  It would be nice if you left this header intact.
// Base64 code from Tyler Akins -- http://rumkin.com

/**
 * Decodes a base64 string.
 * @param {String} input The string to decode.
 */
var decodeBase64 = typeof atob === 'function' ? atob : function (input) {
  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

  var output = '';
  var chr1, chr2, chr3;
  var enc1, enc2, enc3, enc4;
  var i = 0;
  // remove all characters that are not A-Z, a-z, 0-9, +, /, or =
  input = input.replace(/[^A-Za-z0-9\+\/\=]/g, '');
  do {
    enc1 = keyStr.indexOf(input.charAt(i++));
    enc2 = keyStr.indexOf(input.charAt(i++));
    enc3 = keyStr.indexOf(input.charAt(i++));
    enc4 = keyStr.indexOf(input.charAt(i++));

    chr1 = (enc1 << 2) | (enc2 >> 4);
    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);
    chr3 = ((enc3 & 3) << 6) | enc4;

    output = output + String.fromCharCode(chr1);

    if (enc3 !== 64) {
      output = output + String.fromCharCode(chr2);
    }
    if (enc4 !== 64) {
      output = output + String.fromCharCode(chr3);
    }
  } while (i < input.length);
  return output;
};

// Converts a string of base64 into a byte array.
// Throws error on invalid input.
function intArrayFromBase64(s) {
  if (typeof ENVIRONMENT_IS_NODE === 'boolean' && ENVIRONMENT_IS_NODE) {
    var buf;
    try {
      buf = Buffer.from(s, 'base64');
    } catch (_) {
      buf = new Buffer(s, 'base64');
    }
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }

  try {
    var decoded = decodeBase64(s);
    var bytes = new Uint8Array(decoded.length);
    for (var i = 0 ; i < decoded.length ; ++i) {
      bytes[i] = decoded.charCodeAt(i);
    }
    return bytes;
  } catch (_) {
    throw new Error('Converting base64 string to bytes failed.');
  }
}

// If filename is a base64 data URI, parses and returns data (Buffer on node,
// Uint8Array otherwise). If filename is not a base64 data URI, returns undefined.
function tryParseAsDataURI(filename) {
  if (!isDataURI(filename)) {
    return;
  }

  return intArrayFromBase64(filename.slice(dataURIPrefix.length));
}


// ASM_LIBRARY EXTERN PRIMITIVES: Math_imul,Math_clz32,Int8Array,Int32Array,Math_floor,Math_ceil


function nullFunc_di(x) { err("Invalid function pointer called with signature 'di'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_dii(x) { err("Invalid function pointer called with signature 'dii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_i(x) { err("Invalid function pointer called with signature 'i'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_ii(x) { err("Invalid function pointer called with signature 'ii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iidiiii(x) { err("Invalid function pointer called with signature 'iidiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iii(x) { err("Invalid function pointer called with signature 'iii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiii(x) { err("Invalid function pointer called with signature 'iiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiii(x) { err("Invalid function pointer called with signature 'iiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiid(x) { err("Invalid function pointer called with signature 'iiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiii(x) { err("Invalid function pointer called with signature 'iiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiid(x) { err("Invalid function pointer called with signature 'iiiiiid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiii(x) { err("Invalid function pointer called with signature 'iiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiii(x) { err("Invalid function pointer called with signature 'iiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_iiiiiiiii(x) { err("Invalid function pointer called with signature 'iiiiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_v(x) { err("Invalid function pointer called with signature 'v'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vi(x) { err("Invalid function pointer called with signature 'vi'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vid(x) { err("Invalid function pointer called with signature 'vid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_vii(x) { err("Invalid function pointer called with signature 'vii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viid(x) { err("Invalid function pointer called with signature 'viid'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viii(x) { err("Invalid function pointer called with signature 'viii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiii(x) { err("Invalid function pointer called with signature 'viiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiii(x) { err("Invalid function pointer called with signature 'viiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiii(x) { err("Invalid function pointer called with signature 'viiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function nullFunc_viiiiiii(x) { err("Invalid function pointer called with signature 'viiiiiii'. Perhaps this is an invalid value (e.g. caused by calling a virtual method on a NULL pointer)? Or calling a function with an incorrect type, which will fail? (it is worth building your source files with -Werror (warnings are errors), as warnings can indicate undefined behavior which can cause this)");  err("Build with ASSERTIONS=2 for more info.");abort(x) }

function invoke_ii(index,a1) {
  var sp = stackSave();
  try {
    return dynCall_ii(index,a1);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  var sp = stackSave();
  try {
    return dynCall_iii(index,a1,a2);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    return dynCall_iiii(index,a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_vi(index,a1) {
  var sp = stackSave();
  try {
    dynCall_vi(index,a1);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  var sp = stackSave();
  try {
    dynCall_vii(index,a1,a2);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    dynCall_viii(index,a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  var sp = stackSave();
  try {
    dynCall_viiii(index,a1,a2,a3,a4);
  } catch(e) {
    stackRestore(sp);
    if (e !== e+0 && e !== 'longjmp') throw e;
    _setThrew(1, 0);
  }
}

var asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity }

var asmLibraryArg = {
  "abort": abort,
  "setTempRet0": setTempRet0,
  "getTempRet0": getTempRet0,
  "abortStackOverflow": abortStackOverflow,
  "nullFunc_di": nullFunc_di,
  "nullFunc_dii": nullFunc_dii,
  "nullFunc_i": nullFunc_i,
  "nullFunc_ii": nullFunc_ii,
  "nullFunc_iidiiii": nullFunc_iidiiii,
  "nullFunc_iii": nullFunc_iii,
  "nullFunc_iiii": nullFunc_iiii,
  "nullFunc_iiiii": nullFunc_iiiii,
  "nullFunc_iiiiid": nullFunc_iiiiid,
  "nullFunc_iiiiii": nullFunc_iiiiii,
  "nullFunc_iiiiiid": nullFunc_iiiiiid,
  "nullFunc_iiiiiii": nullFunc_iiiiiii,
  "nullFunc_iiiiiiii": nullFunc_iiiiiiii,
  "nullFunc_iiiiiiiii": nullFunc_iiiiiiiii,
  "nullFunc_v": nullFunc_v,
  "nullFunc_vi": nullFunc_vi,
  "nullFunc_vid": nullFunc_vid,
  "nullFunc_vii": nullFunc_vii,
  "nullFunc_viid": nullFunc_viid,
  "nullFunc_viii": nullFunc_viii,
  "nullFunc_viiii": nullFunc_viiii,
  "nullFunc_viiiii": nullFunc_viiiii,
  "nullFunc_viiiiii": nullFunc_viiiiii,
  "nullFunc_viiiiiii": nullFunc_viiiiiii,
  "invoke_ii": invoke_ii,
  "invoke_iii": invoke_iii,
  "invoke_iiii": invoke_iiii,
  "invoke_vi": invoke_vi,
  "invoke_vii": invoke_vii,
  "invoke_viii": invoke_viii,
  "invoke_viiii": invoke_viiii,
  "___buildEnvironment": ___buildEnvironment,
  "___clock_gettime": ___clock_gettime,
  "___cxa_allocate_exception": ___cxa_allocate_exception,
  "___cxa_begin_catch": ___cxa_begin_catch,
  "___cxa_find_matching_catch": ___cxa_find_matching_catch,
  "___cxa_free_exception": ___cxa_free_exception,
  "___cxa_throw": ___cxa_throw,
  "___cxa_uncaught_exception": ___cxa_uncaught_exception,
  "___gxx_personality_v0": ___gxx_personality_v0,
  "___lock": ___lock,
  "___map_file": ___map_file,
  "___resumeException": ___resumeException,
  "___setErrNo": ___setErrNo,
  "___syscall10": ___syscall10,
  "___syscall140": ___syscall140,
  "___syscall145": ___syscall145,
  "___syscall146": ___syscall146,
  "___syscall221": ___syscall221,
  "___syscall5": ___syscall5,
  "___syscall54": ___syscall54,
  "___syscall6": ___syscall6,
  "___syscall91": ___syscall91,
  "___unlock": ___unlock,
  "__addDays": __addDays,
  "__arraySum": __arraySum,
  "__embind_register_bool": __embind_register_bool,
  "__embind_register_constant": __embind_register_constant,
  "__embind_register_emval": __embind_register_emval,
  "__embind_register_float": __embind_register_float,
  "__embind_register_function": __embind_register_function,
  "__embind_register_integer": __embind_register_integer,
  "__embind_register_memory_view": __embind_register_memory_view,
  "__embind_register_std_string": __embind_register_std_string,
  "__embind_register_std_wstring": __embind_register_std_wstring,
  "__embind_register_void": __embind_register_void,
  "__emval_decref": __emval_decref,
  "__emval_register": __emval_register,
  "__isLeapYear": __isLeapYear,
  "_abort": _abort,
  "_clock_gettime": _clock_gettime,
  "_embind_repr": _embind_repr,
  "_emscripten_asm_const_ii": _emscripten_asm_const_ii,
  "_emscripten_asm_const_iiddddddddddddd": _emscripten_asm_const_iiddddddddddddd,
  "_emscripten_asm_const_iiiid": _emscripten_asm_const_iiiid,
  "_emscripten_asm_const_iiiiiii": _emscripten_asm_const_iiiiiii,
  "_emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi": _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi,
  "_emscripten_get_heap_size": _emscripten_get_heap_size,
  "_emscripten_get_now": _emscripten_get_now,
  "_emscripten_get_now_is_monotonic": _emscripten_get_now_is_monotonic,
  "_emscripten_memcpy_big": _emscripten_memcpy_big,
  "_emscripten_resize_heap": _emscripten_resize_heap,
  "_exit": _exit,
  "_getenv": _getenv,
  "_gettimeofday": _gettimeofday,
  "_llvm_exp2_f32": _llvm_exp2_f32,
  "_llvm_stackrestore": _llvm_stackrestore,
  "_llvm_stacksave": _llvm_stacksave,
  "_localtime": _localtime,
  "_localtime_r": _localtime_r,
  "_longjmp": _longjmp,
  "_pthread_cond_wait": _pthread_cond_wait,
  "_strftime": _strftime,
  "_strftime_l": _strftime_l,
  "_time": _time,
  "_tzset": _tzset,
  "abortOnCannotGrowMemory": abortOnCannotGrowMemory,
  "count_emval_handles": count_emval_handles,
  "craftInvokerFunction": craftInvokerFunction,
  "createNamedFunction": createNamedFunction,
  "embind__requireFunction": embind__requireFunction,
  "embind_init_charCodes": embind_init_charCodes,
  "emscripten_realloc_buffer": emscripten_realloc_buffer,
  "ensureOverloadTable": ensureOverloadTable,
  "exposePublicSymbol": exposePublicSymbol,
  "extendError": extendError,
  "floatReadValueFromPointer": floatReadValueFromPointer,
  "getShiftFromSize": getShiftFromSize,
  "getTypeName": getTypeName,
  "get_first_emval": get_first_emval,
  "heap32VectorToArray": heap32VectorToArray,
  "init_emval": init_emval,
  "integerReadValueFromPointer": integerReadValueFromPointer,
  "makeLegalFunctionName": makeLegalFunctionName,
  "new_": new_,
  "readLatin1String": readLatin1String,
  "registerType": registerType,
  "replacePublicSymbol": replacePublicSymbol,
  "runDestructors": runDestructors,
  "simpleReadValueFromPointer": simpleReadValueFromPointer,
  "throwBindingError": throwBindingError,
  "throwInternalError": throwInternalError,
  "throwUnboundTypeError": throwUnboundTypeError,
  "whenDependentTypesAreResolved": whenDependentTypesAreResolved,
  "tempDoublePtr": tempDoublePtr,
  "DYNAMICTOP_PTR": DYNAMICTOP_PTR
}
// EMSCRIPTEN_START_ASM
var asm = (/** @suppress {uselessCode} */ function(global, env, buffer) {
'almost asm';

  var HEAP8 = new global.Int8Array(buffer),
  HEAP16 = new global.Int16Array(buffer),
  HEAP32 = new global.Int32Array(buffer),
  HEAPU8 = new global.Uint8Array(buffer),
  HEAPU16 = new global.Uint16Array(buffer),
  HEAPF32 = new global.Float32Array(buffer),
  HEAPF64 = new global.Float64Array(buffer),
  tempDoublePtr=env.tempDoublePtr|0,
  DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0,
  __THREW__ = 0,
  threwValue = 0,
  setjmpId = 0,
  tempInt = 0,
  tempBigInt = 0,
  tempBigIntS = 0,
  tempValue = 0,
  tempDouble = 0.0,
  nan = global.NaN,
  inf = global.Infinity,
  Math_floor=global.Math.floor,
  Math_abs=global.Math.abs,
  Math_sqrt=global.Math.sqrt,
  Math_pow=global.Math.pow,
  Math_cos=global.Math.cos,
  Math_sin=global.Math.sin,
  Math_atan2=global.Math.atan2,
  Math_log=global.Math.log,
  Math_ceil=global.Math.ceil,
  Math_imul=global.Math.imul,
  Math_clz32=global.Math.clz32,
  abort=env.abort,
  setTempRet0=env.setTempRet0,
  getTempRet0=env.getTempRet0,
  abortStackOverflow=env.abortStackOverflow,
  nullFunc_di=env.nullFunc_di,
  nullFunc_dii=env.nullFunc_dii,
  nullFunc_i=env.nullFunc_i,
  nullFunc_ii=env.nullFunc_ii,
  nullFunc_iidiiii=env.nullFunc_iidiiii,
  nullFunc_iii=env.nullFunc_iii,
  nullFunc_iiii=env.nullFunc_iiii,
  nullFunc_iiiii=env.nullFunc_iiiii,
  nullFunc_iiiiid=env.nullFunc_iiiiid,
  nullFunc_iiiiii=env.nullFunc_iiiiii,
  nullFunc_iiiiiid=env.nullFunc_iiiiiid,
  nullFunc_iiiiiii=env.nullFunc_iiiiiii,
  nullFunc_iiiiiiii=env.nullFunc_iiiiiiii,
  nullFunc_iiiiiiiii=env.nullFunc_iiiiiiiii,
  nullFunc_v=env.nullFunc_v,
  nullFunc_vi=env.nullFunc_vi,
  nullFunc_vid=env.nullFunc_vid,
  nullFunc_vii=env.nullFunc_vii,
  nullFunc_viid=env.nullFunc_viid,
  nullFunc_viii=env.nullFunc_viii,
  nullFunc_viiii=env.nullFunc_viiii,
  nullFunc_viiiii=env.nullFunc_viiiii,
  nullFunc_viiiiii=env.nullFunc_viiiiii,
  nullFunc_viiiiiii=env.nullFunc_viiiiiii,
  invoke_ii=env.invoke_ii,
  invoke_iii=env.invoke_iii,
  invoke_iiii=env.invoke_iiii,
  invoke_vi=env.invoke_vi,
  invoke_vii=env.invoke_vii,
  invoke_viii=env.invoke_viii,
  invoke_viiii=env.invoke_viiii,
  ___buildEnvironment=env.___buildEnvironment,
  ___clock_gettime=env.___clock_gettime,
  ___cxa_allocate_exception=env.___cxa_allocate_exception,
  ___cxa_begin_catch=env.___cxa_begin_catch,
  ___cxa_find_matching_catch=env.___cxa_find_matching_catch,
  ___cxa_free_exception=env.___cxa_free_exception,
  ___cxa_throw=env.___cxa_throw,
  ___cxa_uncaught_exception=env.___cxa_uncaught_exception,
  ___gxx_personality_v0=env.___gxx_personality_v0,
  ___lock=env.___lock,
  ___map_file=env.___map_file,
  ___resumeException=env.___resumeException,
  ___setErrNo=env.___setErrNo,
  ___syscall10=env.___syscall10,
  ___syscall140=env.___syscall140,
  ___syscall145=env.___syscall145,
  ___syscall146=env.___syscall146,
  ___syscall221=env.___syscall221,
  ___syscall5=env.___syscall5,
  ___syscall54=env.___syscall54,
  ___syscall6=env.___syscall6,
  ___syscall91=env.___syscall91,
  ___unlock=env.___unlock,
  __addDays=env.__addDays,
  __arraySum=env.__arraySum,
  __embind_register_bool=env.__embind_register_bool,
  __embind_register_constant=env.__embind_register_constant,
  __embind_register_emval=env.__embind_register_emval,
  __embind_register_float=env.__embind_register_float,
  __embind_register_function=env.__embind_register_function,
  __embind_register_integer=env.__embind_register_integer,
  __embind_register_memory_view=env.__embind_register_memory_view,
  __embind_register_std_string=env.__embind_register_std_string,
  __embind_register_std_wstring=env.__embind_register_std_wstring,
  __embind_register_void=env.__embind_register_void,
  __emval_decref=env.__emval_decref,
  __emval_register=env.__emval_register,
  __isLeapYear=env.__isLeapYear,
  _abort=env._abort,
  _clock_gettime=env._clock_gettime,
  _embind_repr=env._embind_repr,
  _emscripten_asm_const_ii=env._emscripten_asm_const_ii,
  _emscripten_asm_const_iiddddddddddddd=env._emscripten_asm_const_iiddddddddddddd,
  _emscripten_asm_const_iiiid=env._emscripten_asm_const_iiiid,
  _emscripten_asm_const_iiiiiii=env._emscripten_asm_const_iiiiiii,
  _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi=env._emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi,
  _emscripten_get_heap_size=env._emscripten_get_heap_size,
  _emscripten_get_now=env._emscripten_get_now,
  _emscripten_get_now_is_monotonic=env._emscripten_get_now_is_monotonic,
  _emscripten_memcpy_big=env._emscripten_memcpy_big,
  _emscripten_resize_heap=env._emscripten_resize_heap,
  _exit=env._exit,
  _getenv=env._getenv,
  _gettimeofday=env._gettimeofday,
  _llvm_exp2_f32=env._llvm_exp2_f32,
  _llvm_stackrestore=env._llvm_stackrestore,
  _llvm_stacksave=env._llvm_stacksave,
  _localtime=env._localtime,
  _localtime_r=env._localtime_r,
  _longjmp=env._longjmp,
  _pthread_cond_wait=env._pthread_cond_wait,
  _strftime=env._strftime,
  _strftime_l=env._strftime_l,
  _time=env._time,
  _tzset=env._tzset,
  abortOnCannotGrowMemory=env.abortOnCannotGrowMemory,
  count_emval_handles=env.count_emval_handles,
  craftInvokerFunction=env.craftInvokerFunction,
  createNamedFunction=env.createNamedFunction,
  embind__requireFunction=env.embind__requireFunction,
  embind_init_charCodes=env.embind_init_charCodes,
  emscripten_realloc_buffer=env.emscripten_realloc_buffer,
  ensureOverloadTable=env.ensureOverloadTable,
  exposePublicSymbol=env.exposePublicSymbol,
  extendError=env.extendError,
  floatReadValueFromPointer=env.floatReadValueFromPointer,
  getShiftFromSize=env.getShiftFromSize,
  getTypeName=env.getTypeName,
  get_first_emval=env.get_first_emval,
  heap32VectorToArray=env.heap32VectorToArray,
  init_emval=env.init_emval,
  integerReadValueFromPointer=env.integerReadValueFromPointer,
  makeLegalFunctionName=env.makeLegalFunctionName,
  new_=env.new_,
  readLatin1String=env.readLatin1String,
  registerType=env.registerType,
  replacePublicSymbol=env.replacePublicSymbol,
  runDestructors=env.runDestructors,
  simpleReadValueFromPointer=env.simpleReadValueFromPointer,
  throwBindingError=env.throwBindingError,
  throwInternalError=env.throwInternalError,
  throwUnboundTypeError=env.throwUnboundTypeError,
  whenDependentTypesAreResolved=env.whenDependentTypesAreResolved,
  STACKTOP = 58560,
  STACK_MAX = 5301440,
  tempFloat = 0.0;

function _emscripten_replace_memory(newBuffer) {
  HEAP8 = new Int8Array(newBuffer);
  HEAPU8 = new Uint8Array(newBuffer);
  HEAP16 = new Int16Array(newBuffer);
  HEAPU16 = new Uint16Array(newBuffer);
  HEAP32 = new Int32Array(newBuffer);
  HEAPF32 = new Float32Array(newBuffer);
  HEAPF64 = new Float64Array(newBuffer);

  buffer = newBuffer;
  return true;
}

// EMSCRIPTEN_START_FUNCS

function _arPattGetImage2($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = +$10;
 $11 = $11 | 0;
 var $$0 = 0, $$01442 = 0, $$01443 = 0, $$01464 = 0, $$01468 = 0, $$01474 = 0, $$01495 = 0, $$1 = 0, $$10 = 0, $$101453 = 0, $$101484 = 0, $$101505 = 0, $$11 = 0, $$111454 = 0, $$111485 = 0, $$111506 = 0, $$11444 = 0, $$11465 = 0, $$11469 = 0, $$11475 = 0, $$11496 = 0, $$12 = 0, $$121455 = 0, $$121486 = 0, $$121507 = 0, $$13 = 0, $$131456 = 0, $$131487 = 0, $$131508 = 0, $$14 = 0, $$141457 = 0, $$141488 = 0, $$141509 = 0, $$15 = 0, $$151458 = 0, $$151489 = 0, $$151510 = 0, $$16 = 0, $$161459 = 0, $$161490 = 0, $$161511 = 0, $$17 = 0, $$171460 = 0, $$171491 = 0, $$171512 = 0, $$18 = 0, $$181461 = 0, $$181492 = 0, $$181513 = 0, $$19 = 0, $$191462 = 0, $$191493 = 0, $$191514 = 0, $$2 = 0, $$20 = 0, $$201463 = 0, $$201494 = 0, $$201515 = 0, $$21 = 0, $$21445 = 0, $$21466 = 0, $$21470 = 0, $$21476 = 0, $$21497 = 0, $$22 = 0, $$23 = 0, $$3 = 0, $$31446 = 0, $$31471 = 0, $$31477 = 0, $$31498 = 0, $$4 = 0, $$41447 = 0, $$41478 = 0, $$41499 = 0, $$5 = 0, $$51448 = 0, $$51479 = 0, $$51500 = 0, $$6 = 0, $$61449 = 0, $$61480 = 0, $$61501 = 0, $$7 = 0, $$71450 = 0, $$71481 = 0, $$71502 = 0, $$8 = 0, $$81451 = 0, $$81482 = 0, $$81503 = 0, $$9 = 0, $$91452 = 0, $$91483 = 0, $$91504 = 0, $101 = 0, $1016 = 0, $102 = 0, $1026 = 0, $1032 = 0.0, $1038 = 0.0, $1039 = 0.0, $1043 = 0, $1049 = 0, $105 = 0.0, $1053 = 0, $1055 = 0, $106 = 0.0, $1061 = 0, $1062 = 0, $1066 = 0, $1070 = 0, $1074 = 0, $1077 = 0, $108 = 0, $1082 = 0.0, $1083 = 0.0, $1084 = 0.0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1099 = 0.0, $110 = 0, $1105 = 0.0, $1112 = 0.0, $112 = 0.0, $1122 = 0.0, $113 = 0.0, $1131 = 0.0, $1132 = 0.0, $114 = 0.0, $115 = 0, $1153 = 0, $1156 = 0, $116 = 0, $1164 = 0, $1165 = 0, $1169 = 0, $117 = 0, $1178 = 0, $118 = 0, $1185 = 0, $119 = 0, $1190 = 0.0, $1191 = 0.0, $1192 = 0.0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1207 = 0.0, $121 = 0, $1213 = 0.0, $122 = 0, $1220 = 0.0, $123 = 0, $1230 = 0.0, $1239 = 0.0, $1240 = 0.0, $1261 = 0, $1264 = 0, $1272 = 0, $1273 = 0, $1277 = 0, $1286 = 0, $129 = 0.0, $1293 = 0, $1298 = 0.0, $1299 = 0.0, $13 = 0, $1300 = 0.0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $1315 = 0.0, $1321 = 0.0, $1328 = 0.0, $1338 = 0.0, $1347 = 0.0, $1348 = 0.0, $135 = 0.0, $1369 = 0, $1380 = 0, $1381 = 0, $1385 = 0, $1390 = 0, $1397 = 0, $14 = 0, $1402 = 0, $1409 = 0, $1412 = 0.0, $1413 = 0.0, $1414 = 0.0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0.0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1429 = 0.0, $1435 = 0.0, $1442 = 0.0, $1452 = 0.0, $1461 = 0.0, $1462 = 0.0, $1483 = 0, $15 = 0, $1502 = 0, $1509 = 0.0, $1510 = 0.0, $1511 = 0.0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0.0, $1520 = 0, $1526 = 0.0, $1532 = 0.0, $1539 = 0.0, $1549 = 0.0, $1558 = 0.0, $1559 = 0.0, $1580 = 0, $1599 = 0, $16 = 0, $1606 = 0.0, $1607 = 0.0, $1608 = 0.0, $1609 = 0, $161 = 0.0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $162 = 0.0, $1623 = 0.0, $1629 = 0.0, $1636 = 0.0, $1646 = 0.0, $1655 = 0.0, $1656 = 0.0, $1677 = 0, $1697 = 0, $1702 = 0.0, $1703 = 0.0, $1704 = 0.0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1719 = 0.0, $1725 = 0.0, $1732 = 0.0, $1742 = 0.0, $1751 = 0.0, $1752 = 0.0, $1773 = 0, $1780 = 0, $1785 = 0.0, $1786 = 0.0, $1787 = 0.0, $1788 = 0, $1789 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1802 = 0.0, $1808 = 0.0, $1815 = 0.0, $1825 = 0.0, $183 = 0, $1834 = 0.0, $1835 = 0.0, $1858 = 0, $1865 = 0, $1870 = 0.0, $1871 = 0.0, $1872 = 0.0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $1880 = 0, $1881 = 0, $1887 = 0.0, $1893 = 0.0, $1900 = 0.0, $1910 = 0.0, $1919 = 0.0, $192 = 0, $1920 = 0.0, $193 = 0, $1942 = 0, $1949 = 0, $1954 = 0.0, $1955 = 0.0, $1956 = 0.0, $1957 = 0, $1958 = 0, $1959 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1971 = 0.0, $1977 = 0.0, $1984 = 0.0, $1994 = 0.0, $2003 = 0.0, $2004 = 0.0, $201 = 0, $2025 = 0, $2028 = 0, $2036 = 0, $2051 = 0, $2056 = 0.0, $2057 = 0.0, $2058 = 0.0, $2059 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0, $2073 = 0.0, $2079 = 0.0, $208 = 0, $2086 = 0.0, $2096 = 0.0, $2105 = 0.0, $2106 = 0.0, $2127 = 0, $213 = 0.0, $2130 = 0, $2138 = 0, $214 = 0.0, $215 = 0.0, $2153 = 0, $2158 = 0.0, $2159 = 0.0, $216 = 0, $2160 = 0.0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0, $2175 = 0.0, $218 = 0, $2181 = 0.0, $2188 = 0.0, $219 = 0, $2198 = 0.0, $220 = 0, $2207 = 0.0, $2208 = 0.0, $221 = 0, $222 = 0, $2229 = 0, $223 = 0, $2232 = 0, $224 = 0, $2251 = 0, $2256 = 0, $2263 = 0, $230 = 0.0, $236 = 0.0, $243 = 0.0, $253 = 0.0, $262 = 0.0, $263 = 0.0, $284 = 0, $292 = 0, $293 = 0, $301 = 0, $309 = 0, $31 = 0.0, $314 = 0.0, $315 = 0.0, $316 = 0.0, $317 = 0, $318 = 0, $319 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $33 = 0.0, $331 = 0.0, $337 = 0.0, $34 = 0.0, $344 = 0.0, $354 = 0.0, $363 = 0.0, $364 = 0.0, $37 = 0.0, $385 = 0, $39 = 0.0, $394 = 0, $395 = 0, $40 = 0.0, $403 = 0, $410 = 0, $415 = 0.0, $416 = 0.0, $417 = 0.0, $418 = 0, $419 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $43 = 0, $432 = 0.0, $438 = 0.0, $445 = 0.0, $45 = 0.0, $455 = 0.0, $464 = 0.0, $465 = 0.0, $47 = 0.0, $48 = 0.0, $486 = 0, $494 = 0, $495 = 0, $503 = 0, $51 = 0.0, $511 = 0, $516 = 0.0, $517 = 0.0, $518 = 0.0, $519 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $53 = 0.0, $533 = 0.0, $539 = 0.0, $54 = 0.0, $546 = 0.0, $556 = 0.0, $565 = 0.0, $566 = 0.0, $57 = 0, $58 = 0.0, $587 = 0, $596 = 0, $597 = 0, $60 = 0.0, $605 = 0, $613 = 0, $618 = 0.0, $619 = 0.0, $620 = 0.0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $635 = 0.0, $64 = 0.0, $641 = 0.0, $648 = 0.0, $658 = 0.0, $66 = 0.0, $667 = 0.0, $668 = 0.0, $689 = 0, $69 = 0, $691 = 0, $696 = 0, $697 = 0, $701 = 0, $705 = 0, $710 = 0.0, $711 = 0.0, $712 = 0.0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $720 = 0, $721 = 0, $727 = 0.0, $733 = 0.0, $740 = 0.0, $75 = 0, $750 = 0.0, $759 = 0.0, $760 = 0.0, $781 = 0, $79 = 0, $790 = 0, $791 = 0, $799 = 0, $807 = 0, $812 = 0.0, $813 = 0.0, $814 = 0.0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $829 = 0.0, $835 = 0.0, $842 = 0.0, $852 = 0.0, $861 = 0.0, $862 = 0.0, $881 = 0, $884 = 0, $889 = 0.0, $903 = 0.0, $904 = 0.0, $908 = 0, $914 = 0, $918 = 0, $920 = 0, $926 = 0, $927 = 0, $931 = 0, $935 = 0, $939 = 0, $942 = 0, $947 = 0.0, $948 = 0.0, $949 = 0.0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $964 = 0.0, $970 = 0.0, $977 = 0.0, $987 = 0.0, $996 = 0.0, $997 = 0.0, $spec$select1520 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $vararg_buffer5 = sp + 232 | 0;
 $vararg_buffer3 = sp + 224 | 0;
 $vararg_buffer1 = sp + 216 | 0;
 $vararg_buffer = sp + 208 | 0;
 $12 = sp + 144 | 0;
 $13 = sp + 80 | 0;
 $14 = sp;
 $15 = sp + 240 | 0;
 $16 = sp + 236 | 0;
 HEAPF64[$12 >> 3] = 100.0;
 HEAPF64[$12 + 8 >> 3] = 100.0;
 HEAPF64[$12 + 16 >> 3] = 110.0;
 HEAPF64[$12 + 24 >> 3] = 100.0;
 HEAPF64[$12 + 32 >> 3] = 110.0;
 HEAPF64[$12 + 40 >> 3] = 110.0;
 HEAPF64[$12 + 48 >> 3] = 100.0;
 HEAPF64[$12 + 56 >> 3] = 110.0;
 $$01474 = 0;
 while (1) {
  if (($$01474 | 0) == 4) break;
  HEAPF64[$13 + ($$01474 << 4) >> 3] = +HEAPF64[$9 + ($$01474 << 4) >> 3];
  HEAPF64[$13 + ($$01474 << 4) + 8 >> 3] = +HEAPF64[$9 + ($$01474 << 4) + 8 >> 3];
  $$01474 = $$01474 + 1 | 0;
 }
 _get_cpara($12, $13, $14);
 $31 = +HEAPF64[$13 >> 3];
 $33 = +HEAPF64[$13 + 16 >> 3];
 $34 = $31 - $33;
 $37 = +HEAPF64[$13 + 8 >> 3];
 $39 = +HEAPF64[$13 + 24 >> 3];
 $40 = $37 - $39;
 $43 = ~~($34 * $34 + $40 * $40);
 $45 = +HEAPF64[$13 + 32 >> 3];
 $47 = +HEAPF64[$13 + 48 >> 3];
 $48 = $45 - $47;
 $51 = +HEAPF64[$13 + 40 >> 3];
 $53 = +HEAPF64[$13 + 56 >> 3];
 $54 = $51 - $53;
 $57 = ~~($48 * $48 + $54 * $54);
 $58 = $33 - $45;
 $60 = $39 - $51;
 $63 = ~~($58 * $58 + $60 * $60);
 $64 = $47 - $31;
 $66 = $53 - $37;
 $69 = ~~($64 * $64 + $66 * $66);
 $75 = ~~(+((($57 | 0) > ($43 | 0) ? $57 : $43) | 0) * $10 * $10);
 $79 = ~~(+((($69 | 0) > ($63 | 0) ? $69 : $63) | 0) * $10 * $10);
 if (!$0) {
  $$01464 = $2;
  while (1) if (($$01464 | 0) < ($3 | 0) & (Math_imul($$01464, $$01464) | 0) < ($75 | 0)) $$01464 = $$01464 << 1; else break;
  $$01468 = $2;
  while (1) if (($$01468 | 0) < ($3 | 0) & (Math_imul($$01468, $$01468) | 0) < ($79 | 0)) $$01468 = $$01468 << 1; else {
   $$21466 = $$01464;
   $$21470 = $$01468;
   break;
  }
 } else {
  $$11465 = $2;
  while (1) if (($$11465 | 0) < ($3 | 0) & (Math_imul($$11465 << 2, $$11465) | 0) < ($75 | 0)) $$11465 = $$11465 << 1; else break;
  $$11469 = $2;
  while (1) if (($$11469 | 0) < ($3 | 0) & (Math_imul($$11469 << 2, $$11469) | 0) < ($79 | 0)) $$11469 = $$11469 << 1; else {
   $$21466 = $$11465;
   $$21470 = $$11469;
   break;
  }
 }
 $spec$select1520 = ($$21466 | 0) > ($3 | 0) ? $3 : $$21466;
 $$31471 = ($$21470 | 0) > ($3 | 0) ? $3 : $$21470;
 $101 = ($spec$select1520 | 0) / ($2 | 0) | 0;
 $102 = ($$31471 | 0) / ($2 | 0) | 0;
 $105 = (1.0 - $10) * .5 * 10.0;
 $106 = $10 * 10.0;
 $108 = Math_imul($2, $2) | 0;
 L19 : do if (!$1) {
  $109 = $108 * 3 | 0;
  $110 = _calloc($109, 4) | 0;
  if (!$110) {
   _arLog(0, 3, 20454, $vararg_buffer);
   _exit(1);
  }
  L24 : do switch ($7 | 0) {
  case 0:
   {
    $112 = $105 + 100.0;
    $113 = +($$31471 | 0);
    $114 = +($spec$select1520 | 0);
    $115 = $14 + 48 | 0;
    $116 = $14 + 56 | 0;
    $117 = $14 + 64 | 0;
    $118 = $14 + 8 | 0;
    $119 = $14 + 16 | 0;
    $120 = $14 + 24 | 0;
    $121 = $14 + 32 | 0;
    $122 = $14 + 40 | 0;
    $123 = ($0 | 0) == 1;
    $$01495 = 0;
    while (1) {
     if (($$01495 | 0) >= ($$31471 | 0)) break L24;
     $129 = $112 + $106 * (+($$01495 | 0) + .5) / $113;
     $$11475 = 0;
     while (1) {
      if (($$11475 | 0) >= ($spec$select1520 | 0)) break;
      $135 = $112 + $106 * (+($$11475 | 0) + .5) / $114;
      $142 = +HEAPF64[$117 >> 3] + ($135 * +HEAPF64[$115 >> 3] + $129 * +HEAPF64[$116 >> 3]);
      if ($142 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $152 = (+HEAPF64[$119 >> 3] + ($135 * +HEAPF64[$14 >> 3] + $129 * +HEAPF64[$118 >> 3])) / $142;
      HEAPF32[$15 >> 2] = $152;
      $161 = (+HEAPF64[$122 >> 3] + ($135 * +HEAPF64[$120 >> 3] + $129 * +HEAPF64[$121 >> 3])) / $142;
      HEAPF32[$16 >> 2] = $161;
      _arParamIdeal2ObservLTf($8, $152, $161, $15, $16) | 0;
      $162 = +HEAPF32[$15 >> 2];
      if ($123) {
       $$01442 = ((~~($162 + 1.0) | 0) / 2 | 0) << 1;
       $$01443 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$01442 = ~~($162 + .5);
       $$01443 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$01442 | 0) > -1) if (($$01443 | 0) < ($6 | 0) & (($$01443 | 0) > -1 & ($$01442 | 0) < ($5 | 0))) {
       $183 = ((Math_imul($$01443, $5) | 0) + $$01442 | 0) * 3 | 0;
       $192 = ((Math_imul(($$01495 | 0) / ($102 | 0) | 0, $2) | 0) + (($$11475 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $193 = $110 + ($192 << 2) | 0;
       HEAP32[$193 >> 2] = (HEAP32[$193 >> 2] | 0) + (HEAPU8[$4 + ($183 + 2) >> 0] | 0);
       $201 = $110 + ($192 + 1 << 2) | 0;
       HEAP32[$201 >> 2] = (HEAP32[$201 >> 2] | 0) + (HEAPU8[$4 + ($183 + 1) >> 0] | 0);
       $208 = $110 + ($192 + 2 << 2) | 0;
       HEAP32[$208 >> 2] = (HEAP32[$208 >> 2] | 0) + (HEAPU8[$4 + $183 >> 0] | 0);
      }
      $$11475 = $$11475 + 1 | 0;
     }
     $$01495 = $$01495 + 1 | 0;
    }
    break;
   }
  case 1:
   {
    $213 = $105 + 100.0;
    $214 = +($$31471 | 0);
    $215 = +($spec$select1520 | 0);
    $216 = $14 + 48 | 0;
    $217 = $14 + 56 | 0;
    $218 = $14 + 64 | 0;
    $219 = $14 + 8 | 0;
    $220 = $14 + 16 | 0;
    $221 = $14 + 24 | 0;
    $222 = $14 + 32 | 0;
    $223 = $14 + 40 | 0;
    $224 = ($0 | 0) == 1;
    $$11496 = 0;
    while (1) {
     if (($$11496 | 0) >= ($$31471 | 0)) break L24;
     $230 = $213 + $106 * (+($$11496 | 0) + .5) / $214;
     $$21476 = 0;
     while (1) {
      if (($$21476 | 0) >= ($spec$select1520 | 0)) break;
      $236 = $213 + $106 * (+($$21476 | 0) + .5) / $215;
      $243 = +HEAPF64[$218 >> 3] + ($236 * +HEAPF64[$216 >> 3] + $230 * +HEAPF64[$217 >> 3]);
      if ($243 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $253 = (+HEAPF64[$220 >> 3] + ($236 * +HEAPF64[$14 >> 3] + $230 * +HEAPF64[$219 >> 3])) / $243;
      HEAPF32[$15 >> 2] = $253;
      $262 = (+HEAPF64[$223 >> 3] + ($236 * +HEAPF64[$221 >> 3] + $230 * +HEAPF64[$222 >> 3])) / $243;
      HEAPF32[$16 >> 2] = $262;
      _arParamIdeal2ObservLTf($8, $253, $262, $15, $16) | 0;
      $263 = +HEAPF32[$15 >> 2];
      if ($224) {
       $$1 = ((~~($263 + 1.0) | 0) / 2 | 0) << 1;
       $$11444 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$1 = ~~($263 + .5);
       $$11444 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$1 | 0) > -1) if (($$11444 | 0) < ($6 | 0) & (($$11444 | 0) > -1 & ($$1 | 0) < ($5 | 0))) {
       $284 = ((Math_imul($$11444, $5) | 0) + $$1 | 0) * 3 | 0;
       $292 = ((Math_imul(($$11496 | 0) / ($102 | 0) | 0, $2) | 0) + (($$21476 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $293 = $110 + ($292 << 2) | 0;
       HEAP32[$293 >> 2] = (HEAP32[$293 >> 2] | 0) + (HEAPU8[$4 + $284 >> 0] | 0);
       $301 = $110 + ($292 + 1 << 2) | 0;
       HEAP32[$301 >> 2] = (HEAP32[$301 >> 2] | 0) + (HEAPU8[$4 + ($284 + 1) >> 0] | 0);
       $309 = $110 + ($292 + 2 << 2) | 0;
       HEAP32[$309 >> 2] = (HEAP32[$309 >> 2] | 0) + (HEAPU8[$4 + ($284 + 2) >> 0] | 0);
      }
      $$21476 = $$21476 + 1 | 0;
     }
     $$11496 = $$11496 + 1 | 0;
    }
    break;
   }
  case 2:
   {
    $314 = $105 + 100.0;
    $315 = +($$31471 | 0);
    $316 = +($spec$select1520 | 0);
    $317 = $14 + 48 | 0;
    $318 = $14 + 56 | 0;
    $319 = $14 + 64 | 0;
    $320 = $14 + 8 | 0;
    $321 = $14 + 16 | 0;
    $322 = $14 + 24 | 0;
    $323 = $14 + 32 | 0;
    $324 = $14 + 40 | 0;
    $325 = ($0 | 0) == 1;
    $$21497 = 0;
    while (1) {
     if (($$21497 | 0) >= ($$31471 | 0)) break L24;
     $331 = $314 + $106 * (+($$21497 | 0) + .5) / $315;
     $$31477 = 0;
     while (1) {
      if (($$31477 | 0) >= ($spec$select1520 | 0)) break;
      $337 = $314 + $106 * (+($$31477 | 0) + .5) / $316;
      $344 = +HEAPF64[$319 >> 3] + ($337 * +HEAPF64[$317 >> 3] + $331 * +HEAPF64[$318 >> 3]);
      if ($344 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $354 = (+HEAPF64[$321 >> 3] + ($337 * +HEAPF64[$14 >> 3] + $331 * +HEAPF64[$320 >> 3])) / $344;
      HEAPF32[$15 >> 2] = $354;
      $363 = (+HEAPF64[$324 >> 3] + ($337 * +HEAPF64[$322 >> 3] + $331 * +HEAPF64[$323 >> 3])) / $344;
      HEAPF32[$16 >> 2] = $363;
      _arParamIdeal2ObservLTf($8, $354, $363, $15, $16) | 0;
      $364 = +HEAPF32[$15 >> 2];
      if ($325) {
       $$2 = ((~~($364 + 1.0) | 0) / 2 | 0) << 1;
       $$21445 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$2 = ~~($364 + .5);
       $$21445 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$2 | 0) > -1) if (($$21445 | 0) < ($6 | 0) & (($$21445 | 0) > -1 & ($$2 | 0) < ($5 | 0))) {
       $385 = (Math_imul($$21445, $5) | 0) + $$2 << 2;
       $394 = ((Math_imul(($$21497 | 0) / ($102 | 0) | 0, $2) | 0) + (($$31477 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $395 = $110 + ($394 << 2) | 0;
       HEAP32[$395 >> 2] = (HEAP32[$395 >> 2] | 0) + (HEAPU8[$4 + ($385 | 2) >> 0] | 0);
       $403 = $110 + ($394 + 1 << 2) | 0;
       HEAP32[$403 >> 2] = (HEAP32[$403 >> 2] | 0) + (HEAPU8[$4 + ($385 | 1) >> 0] | 0);
       $410 = $110 + ($394 + 2 << 2) | 0;
       HEAP32[$410 >> 2] = (HEAP32[$410 >> 2] | 0) + (HEAPU8[$4 + $385 >> 0] | 0);
      }
      $$31477 = $$31477 + 1 | 0;
     }
     $$21497 = $$21497 + 1 | 0;
    }
    break;
   }
  case 3:
   {
    $415 = $105 + 100.0;
    $416 = +($$31471 | 0);
    $417 = +($spec$select1520 | 0);
    $418 = $14 + 48 | 0;
    $419 = $14 + 56 | 0;
    $420 = $14 + 64 | 0;
    $421 = $14 + 8 | 0;
    $422 = $14 + 16 | 0;
    $423 = $14 + 24 | 0;
    $424 = $14 + 32 | 0;
    $425 = $14 + 40 | 0;
    $426 = ($0 | 0) == 1;
    $$31498 = 0;
    while (1) {
     if (($$31498 | 0) >= ($$31471 | 0)) break L24;
     $432 = $415 + $106 * (+($$31498 | 0) + .5) / $416;
     $$41478 = 0;
     while (1) {
      if (($$41478 | 0) >= ($spec$select1520 | 0)) break;
      $438 = $415 + $106 * (+($$41478 | 0) + .5) / $417;
      $445 = +HEAPF64[$420 >> 3] + ($438 * +HEAPF64[$418 >> 3] + $432 * +HEAPF64[$419 >> 3]);
      if ($445 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $455 = (+HEAPF64[$422 >> 3] + ($438 * +HEAPF64[$14 >> 3] + $432 * +HEAPF64[$421 >> 3])) / $445;
      HEAPF32[$15 >> 2] = $455;
      $464 = (+HEAPF64[$425 >> 3] + ($438 * +HEAPF64[$423 >> 3] + $432 * +HEAPF64[$424 >> 3])) / $445;
      HEAPF32[$16 >> 2] = $464;
      _arParamIdeal2ObservLTf($8, $455, $464, $15, $16) | 0;
      $465 = +HEAPF32[$15 >> 2];
      if ($426) {
       $$3 = ((~~($465 + 1.0) | 0) / 2 | 0) << 1;
       $$31446 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$3 = ~~($465 + .5);
       $$31446 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$3 | 0) > -1) if (($$31446 | 0) < ($6 | 0) & (($$31446 | 0) > -1 & ($$3 | 0) < ($5 | 0))) {
       $486 = (Math_imul($$31446, $5) | 0) + $$3 << 2;
       $494 = ((Math_imul(($$31498 | 0) / ($102 | 0) | 0, $2) | 0) + (($$41478 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $495 = $110 + ($494 << 2) | 0;
       HEAP32[$495 >> 2] = (HEAP32[$495 >> 2] | 0) + (HEAPU8[$4 + $486 >> 0] | 0);
       $503 = $110 + ($494 + 1 << 2) | 0;
       HEAP32[$503 >> 2] = (HEAP32[$503 >> 2] | 0) + (HEAPU8[$4 + ($486 | 1) >> 0] | 0);
       $511 = $110 + ($494 + 2 << 2) | 0;
       HEAP32[$511 >> 2] = (HEAP32[$511 >> 2] | 0) + (HEAPU8[$4 + ($486 | 2) >> 0] | 0);
      }
      $$41478 = $$41478 + 1 | 0;
     }
     $$31498 = $$31498 + 1 | 0;
    }
    break;
   }
  case 4:
   {
    $516 = $105 + 100.0;
    $517 = +($$31471 | 0);
    $518 = +($spec$select1520 | 0);
    $519 = $14 + 48 | 0;
    $520 = $14 + 56 | 0;
    $521 = $14 + 64 | 0;
    $522 = $14 + 8 | 0;
    $523 = $14 + 16 | 0;
    $524 = $14 + 24 | 0;
    $525 = $14 + 32 | 0;
    $526 = $14 + 40 | 0;
    $527 = ($0 | 0) == 1;
    $$41499 = 0;
    while (1) {
     if (($$41499 | 0) >= ($$31471 | 0)) break L24;
     $533 = $516 + $106 * (+($$41499 | 0) + .5) / $517;
     $$51479 = 0;
     while (1) {
      if (($$51479 | 0) >= ($spec$select1520 | 0)) break;
      $539 = $516 + $106 * (+($$51479 | 0) + .5) / $518;
      $546 = +HEAPF64[$521 >> 3] + ($539 * +HEAPF64[$519 >> 3] + $533 * +HEAPF64[$520 >> 3]);
      if ($546 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $556 = (+HEAPF64[$523 >> 3] + ($539 * +HEAPF64[$14 >> 3] + $533 * +HEAPF64[$522 >> 3])) / $546;
      HEAPF32[$15 >> 2] = $556;
      $565 = (+HEAPF64[$526 >> 3] + ($539 * +HEAPF64[$524 >> 3] + $533 * +HEAPF64[$525 >> 3])) / $546;
      HEAPF32[$16 >> 2] = $565;
      _arParamIdeal2ObservLTf($8, $556, $565, $15, $16) | 0;
      $566 = +HEAPF32[$15 >> 2];
      if ($527) {
       $$4 = ((~~($566 + 1.0) | 0) / 2 | 0) << 1;
       $$41447 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$4 = ~~($566 + .5);
       $$41447 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$4 | 0) > -1) if (($$41447 | 0) < ($6 | 0) & (($$41447 | 0) > -1 & ($$4 | 0) < ($5 | 0))) {
       $587 = (Math_imul($$41447, $5) | 0) + $$4 << 2;
       $596 = ((Math_imul(($$41499 | 0) / ($102 | 0) | 0, $2) | 0) + (($$51479 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $597 = $110 + ($596 << 2) | 0;
       HEAP32[$597 >> 2] = (HEAP32[$597 >> 2] | 0) + (HEAPU8[$4 + ($587 | 1) >> 0] | 0);
       $605 = $110 + ($596 + 1 << 2) | 0;
       HEAP32[$605 >> 2] = (HEAP32[$605 >> 2] | 0) + (HEAPU8[$4 + ($587 | 2) >> 0] | 0);
       $613 = $110 + ($596 + 2 << 2) | 0;
       HEAP32[$613 >> 2] = (HEAP32[$613 >> 2] | 0) + (HEAPU8[$4 + ($587 | 3) >> 0] | 0);
      }
      $$51479 = $$51479 + 1 | 0;
     }
     $$41499 = $$41499 + 1 | 0;
    }
    break;
   }
  case 5:
  case 12:
  case 13:
  case 14:
   {
    $618 = $105 + 100.0;
    $619 = +($$31471 | 0);
    $620 = +($spec$select1520 | 0);
    $621 = $14 + 48 | 0;
    $622 = $14 + 56 | 0;
    $623 = $14 + 64 | 0;
    $624 = $14 + 8 | 0;
    $625 = $14 + 16 | 0;
    $626 = $14 + 24 | 0;
    $627 = $14 + 32 | 0;
    $628 = $14 + 40 | 0;
    $629 = ($0 | 0) == 1;
    $$51500 = 0;
    while (1) {
     if (($$51500 | 0) >= ($$31471 | 0)) break L24;
     $635 = $618 + $106 * (+($$51500 | 0) + .5) / $619;
     $$61480 = 0;
     while (1) {
      if (($$61480 | 0) >= ($spec$select1520 | 0)) break;
      $641 = $618 + $106 * (+($$61480 | 0) + .5) / $620;
      $648 = +HEAPF64[$623 >> 3] + ($641 * +HEAPF64[$621 >> 3] + $635 * +HEAPF64[$622 >> 3]);
      if ($648 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $658 = (+HEAPF64[$625 >> 3] + ($641 * +HEAPF64[$14 >> 3] + $635 * +HEAPF64[$624 >> 3])) / $648;
      HEAPF32[$15 >> 2] = $658;
      $667 = (+HEAPF64[$628 >> 3] + ($641 * +HEAPF64[$626 >> 3] + $635 * +HEAPF64[$627 >> 3])) / $648;
      HEAPF32[$16 >> 2] = $667;
      _arParamIdeal2ObservLTf($8, $658, $667, $15, $16) | 0;
      $668 = +HEAPF32[$15 >> 2];
      if ($629) {
       $$5 = ((~~($668 + 1.0) | 0) / 2 | 0) << 1;
       $$51448 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$5 = ~~($668 + .5);
       $$51448 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$5 | 0) > -1) if (($$51448 | 0) < ($6 | 0) & (($$51448 | 0) > -1 & ($$5 | 0) < ($5 | 0))) {
       $689 = $4 + ((Math_imul($$51448, $5) | 0) + $$5) | 0;
       $691 = HEAPU8[$689 >> 0] | 0;
       $696 = ((Math_imul(($$51500 | 0) / ($102 | 0) | 0, $2) | 0) + (($$61480 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $697 = $110 + ($696 << 2) | 0;
       HEAP32[$697 >> 2] = (HEAP32[$697 >> 2] | 0) + $691;
       $701 = $110 + ($696 + 1 << 2) | 0;
       HEAP32[$701 >> 2] = (HEAP32[$701 >> 2] | 0) + $691;
       $705 = $110 + ($696 + 2 << 2) | 0;
       HEAP32[$705 >> 2] = (HEAP32[$705 >> 2] | 0) + $691;
      }
      $$61480 = $$61480 + 1 | 0;
     }
     $$51500 = $$51500 + 1 | 0;
    }
    break;
   }
  case 6:
   {
    $710 = $105 + 100.0;
    $711 = +($$31471 | 0);
    $712 = +($spec$select1520 | 0);
    $713 = $14 + 48 | 0;
    $714 = $14 + 56 | 0;
    $715 = $14 + 64 | 0;
    $716 = $14 + 8 | 0;
    $717 = $14 + 16 | 0;
    $718 = $14 + 24 | 0;
    $719 = $14 + 32 | 0;
    $720 = $14 + 40 | 0;
    $721 = ($0 | 0) == 1;
    $$61501 = 0;
    while (1) {
     if (($$61501 | 0) >= ($$31471 | 0)) break L24;
     $727 = $710 + $106 * (+($$61501 | 0) + .5) / $711;
     $$71481 = 0;
     while (1) {
      if (($$71481 | 0) >= ($spec$select1520 | 0)) break;
      $733 = $710 + $106 * (+($$71481 | 0) + .5) / $712;
      $740 = +HEAPF64[$715 >> 3] + ($733 * +HEAPF64[$713 >> 3] + $727 * +HEAPF64[$714 >> 3]);
      if ($740 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $750 = (+HEAPF64[$717 >> 3] + ($733 * +HEAPF64[$14 >> 3] + $727 * +HEAPF64[$716 >> 3])) / $740;
      HEAPF32[$15 >> 2] = $750;
      $759 = (+HEAPF64[$720 >> 3] + ($733 * +HEAPF64[$718 >> 3] + $727 * +HEAPF64[$719 >> 3])) / $740;
      HEAPF32[$16 >> 2] = $759;
      _arParamIdeal2ObservLTf($8, $750, $759, $15, $16) | 0;
      $760 = +HEAPF32[$15 >> 2];
      if ($721) {
       $$6 = ((~~($760 + 1.0) | 0) / 2 | 0) << 1;
       $$61449 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$6 = ~~($760 + .5);
       $$61449 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$6 | 0) > -1) if (($$61449 | 0) < ($6 | 0) & (($$61449 | 0) > -1 & ($$6 | 0) < ($5 | 0))) {
       $781 = (Math_imul($$61449, $5) | 0) + $$6 << 2;
       $790 = ((Math_imul(($$61501 | 0) / ($102 | 0) | 0, $2) | 0) + (($$71481 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $791 = $110 + ($790 << 2) | 0;
       HEAP32[$791 >> 2] = (HEAP32[$791 >> 2] | 0) + (HEAPU8[$4 + ($781 | 3) >> 0] | 0);
       $799 = $110 + ($790 + 1 << 2) | 0;
       HEAP32[$799 >> 2] = (HEAP32[$799 >> 2] | 0) + (HEAPU8[$4 + ($781 | 2) >> 0] | 0);
       $807 = $110 + ($790 + 2 << 2) | 0;
       HEAP32[$807 >> 2] = (HEAP32[$807 >> 2] | 0) + (HEAPU8[$4 + ($781 | 1) >> 0] | 0);
      }
      $$71481 = $$71481 + 1 | 0;
     }
     $$61501 = $$61501 + 1 | 0;
    }
    break;
   }
  case 7:
   {
    $812 = $105 + 100.0;
    $813 = +($$31471 | 0);
    $814 = +($spec$select1520 | 0);
    $815 = $14 + 48 | 0;
    $816 = $14 + 56 | 0;
    $817 = $14 + 64 | 0;
    $818 = $14 + 8 | 0;
    $819 = $14 + 16 | 0;
    $820 = $14 + 24 | 0;
    $821 = $14 + 32 | 0;
    $822 = $14 + 40 | 0;
    $823 = ($0 | 0) == 1;
    $$71502 = 0;
    while (1) {
     if (($$71502 | 0) >= ($$31471 | 0)) break L24;
     $829 = $812 + $106 * (+($$71502 | 0) + .5) / $813;
     $$81482 = 0;
     while (1) {
      if (($$81482 | 0) >= ($spec$select1520 | 0)) break;
      $835 = $812 + $106 * (+($$81482 | 0) + .5) / $814;
      $842 = +HEAPF64[$817 >> 3] + ($835 * +HEAPF64[$815 >> 3] + $829 * +HEAPF64[$816 >> 3]);
      if ($842 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $852 = (+HEAPF64[$819 >> 3] + ($835 * +HEAPF64[$14 >> 3] + $829 * +HEAPF64[$818 >> 3])) / $842;
      HEAPF32[$15 >> 2] = $852;
      $861 = (+HEAPF64[$822 >> 3] + ($835 * +HEAPF64[$820 >> 3] + $829 * +HEAPF64[$821 >> 3])) / $842;
      HEAPF32[$16 >> 2] = $861;
      _arParamIdeal2ObservLTf($8, $852, $861, $15, $16) | 0;
      $862 = +HEAPF32[$15 >> 2];
      if ($823) {
       $$7 = ((~~($862 + 1.0) | 0) / 2 | 0) << 1;
       $$71450 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$7 = ~~($862 + .5);
       $$71450 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$7 | 0) > -1) if (($$71450 | 0) < ($6 | 0) & (($$71450 | 0) > -1 & ($$7 | 0) < ($5 | 0))) {
       $881 = Math_imul($$71450, $5) | 0;
       $884 = ($$7 & 65534) + $881 << 1;
       $889 = +((HEAPU8[$4 + $884 >> 0] | 0) + -128 | 0);
       $903 = +((HEAPU8[$4 + ($884 + 2) >> 0] | 0) + -128 | 0);
       $904 = +((HEAPU8[$4 + ($881 + $$7 << 1 | 1) >> 0] | 0) + -16 | 0) * 298.0820007324219;
       $908 = ~~($889 * 516.4110107421875 + $904) >> 8;
       $914 = ~~($904 - $889 * 100.29100036621094 - $903 * 208.1199951171875) >> 8;
       $918 = ~~($904 + $903 * 408.5830078125) >> 8;
       $920 = ($908 | 0) > 0 ? $908 : 0;
       $926 = ((Math_imul(($$71502 | 0) / ($102 | 0) | 0, $2) | 0) + (($$81482 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $927 = $110 + ($926 << 2) | 0;
       HEAP32[$927 >> 2] = (($920 | 0) < 255 ? $920 : 255) + (HEAP32[$927 >> 2] | 0);
       $931 = ($914 | 0) > 0 ? $914 : 0;
       $935 = $110 + ($926 + 1 << 2) | 0;
       HEAP32[$935 >> 2] = (($931 | 0) < 255 ? $931 : 255) + (HEAP32[$935 >> 2] | 0);
       $939 = ($918 | 0) > 0 ? $918 : 0;
       $942 = $110 + ($926 + 2 << 2) | 0;
       HEAP32[$942 >> 2] = (($939 | 0) < 255 ? $939 : 255) + (HEAP32[$942 >> 2] | 0);
      }
      $$81482 = $$81482 + 1 | 0;
     }
     $$71502 = $$71502 + 1 | 0;
    }
    break;
   }
  case 8:
   {
    $947 = $105 + 100.0;
    $948 = +($$31471 | 0);
    $949 = +($spec$select1520 | 0);
    $950 = $14 + 48 | 0;
    $951 = $14 + 56 | 0;
    $952 = $14 + 64 | 0;
    $953 = $14 + 8 | 0;
    $954 = $14 + 16 | 0;
    $955 = $14 + 24 | 0;
    $956 = $14 + 32 | 0;
    $957 = $14 + 40 | 0;
    $958 = ($0 | 0) == 1;
    $$81503 = 0;
    while (1) {
     if (($$81503 | 0) >= ($$31471 | 0)) break L24;
     $964 = $947 + $106 * (+($$81503 | 0) + .5) / $948;
     $$91483 = 0;
     while (1) {
      if (($$91483 | 0) >= ($spec$select1520 | 0)) break;
      $970 = $947 + $106 * (+($$91483 | 0) + .5) / $949;
      $977 = +HEAPF64[$952 >> 3] + ($970 * +HEAPF64[$950 >> 3] + $964 * +HEAPF64[$951 >> 3]);
      if ($977 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $987 = (+HEAPF64[$954 >> 3] + ($970 * +HEAPF64[$14 >> 3] + $964 * +HEAPF64[$953 >> 3])) / $977;
      HEAPF32[$15 >> 2] = $987;
      $996 = (+HEAPF64[$957 >> 3] + ($970 * +HEAPF64[$955 >> 3] + $964 * +HEAPF64[$956 >> 3])) / $977;
      HEAPF32[$16 >> 2] = $996;
      _arParamIdeal2ObservLTf($8, $987, $996, $15, $16) | 0;
      $997 = +HEAPF32[$15 >> 2];
      if ($958) {
       $$8 = ((~~($997 + 1.0) | 0) / 2 | 0) << 1;
       $$81451 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$8 = ~~($997 + .5);
       $$81451 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$8 | 0) > -1) if (($$81451 | 0) < ($6 | 0) & (($$81451 | 0) > -1 & ($$8 | 0) < ($5 | 0))) {
       $1016 = Math_imul($$81451, $5) | 0;
       $1026 = ($$8 & 65534) + $1016 << 1;
       $1032 = +((HEAPU8[$4 + ($1026 | 1) >> 0] | 0) + -128 | 0);
       $1038 = +((HEAPU8[$4 + ($1026 + 3) >> 0] | 0) + -128 | 0);
       $1039 = +((HEAPU8[$4 + ($1016 + $$8 << 1) >> 0] | 0) + -16 | 0) * 298.0820007324219;
       $1043 = ~~($1039 + $1032 * 516.4110107421875) >> 8;
       $1049 = ~~($1039 - $1032 * 100.29100036621094 - $1038 * 208.1199951171875) >> 8;
       $1053 = ~~($1039 + $1038 * 408.5830078125) >> 8;
       $1055 = ($1043 | 0) > 0 ? $1043 : 0;
       $1061 = ((Math_imul(($$81503 | 0) / ($102 | 0) | 0, $2) | 0) + (($$91483 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $1062 = $110 + ($1061 << 2) | 0;
       HEAP32[$1062 >> 2] = (($1055 | 0) < 255 ? $1055 : 255) + (HEAP32[$1062 >> 2] | 0);
       $1066 = ($1049 | 0) > 0 ? $1049 : 0;
       $1070 = $110 + ($1061 + 1 << 2) | 0;
       HEAP32[$1070 >> 2] = (($1066 | 0) < 255 ? $1066 : 255) + (HEAP32[$1070 >> 2] | 0);
       $1074 = ($1053 | 0) > 0 ? $1053 : 0;
       $1077 = $110 + ($1061 + 2 << 2) | 0;
       HEAP32[$1077 >> 2] = (($1074 | 0) < 255 ? $1074 : 255) + (HEAP32[$1077 >> 2] | 0);
      }
      $$91483 = $$91483 + 1 | 0;
     }
     $$81503 = $$81503 + 1 | 0;
    }
    break;
   }
  case 9:
   {
    $1082 = $105 + 100.0;
    $1083 = +($$31471 | 0);
    $1084 = +($spec$select1520 | 0);
    $1085 = $14 + 48 | 0;
    $1086 = $14 + 56 | 0;
    $1087 = $14 + 64 | 0;
    $1088 = $14 + 8 | 0;
    $1089 = $14 + 16 | 0;
    $1090 = $14 + 24 | 0;
    $1091 = $14 + 32 | 0;
    $1092 = $14 + 40 | 0;
    $1093 = ($0 | 0) == 1;
    $$91504 = 0;
    while (1) {
     if (($$91504 | 0) >= ($$31471 | 0)) break L24;
     $1099 = $1082 + $106 * (+($$91504 | 0) + .5) / $1083;
     $$101484 = 0;
     while (1) {
      if (($$101484 | 0) >= ($spec$select1520 | 0)) break;
      $1105 = $1082 + $106 * (+($$101484 | 0) + .5) / $1084;
      $1112 = +HEAPF64[$1087 >> 3] + ($1105 * +HEAPF64[$1085 >> 3] + $1099 * +HEAPF64[$1086 >> 3]);
      if ($1112 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $1122 = (+HEAPF64[$1089 >> 3] + ($1105 * +HEAPF64[$14 >> 3] + $1099 * +HEAPF64[$1088 >> 3])) / $1112;
      HEAPF32[$15 >> 2] = $1122;
      $1131 = (+HEAPF64[$1092 >> 3] + ($1105 * +HEAPF64[$1090 >> 3] + $1099 * +HEAPF64[$1091 >> 3])) / $1112;
      HEAPF32[$16 >> 2] = $1131;
      _arParamIdeal2ObservLTf($8, $1122, $1131, $15, $16) | 0;
      $1132 = +HEAPF32[$15 >> 2];
      if ($1093) {
       $$9 = ((~~($1132 + 1.0) | 0) / 2 | 0) << 1;
       $$91452 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$9 = ~~($1132 + .5);
       $$91452 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$9 | 0) > -1) if (($$91452 | 0) < ($6 | 0) & (($$91452 | 0) > -1 & ($$9 | 0) < ($5 | 0))) {
       $1153 = (Math_imul($$91452, $5) | 0) + $$9 << 1;
       $1156 = HEAP8[$4 + ($1153 | 1) >> 0] | 0;
       $1164 = ((Math_imul(($$91504 | 0) / ($102 | 0) | 0, $2) | 0) + (($$101484 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $1165 = $110 + ($1164 << 2) | 0;
       HEAP32[$1165 >> 2] = (HEAP32[$1165 >> 2] | 0) + (($1156 << 3 & 255 | 4) & 255);
       $1169 = HEAP8[$4 + $1153 >> 0] | 0;
       $1178 = $110 + ($1164 + 1 << 2) | 0;
       HEAP32[$1178 >> 2] = (($1156 & -32 & 255) >>> 3 | $1169 << 5 & 255 | 2) + (HEAP32[$1178 >> 2] | 0);
       $1185 = $110 + ($1164 + 2 << 2) | 0;
       HEAP32[$1185 >> 2] = (HEAP32[$1185 >> 2] | 0) + (($1169 & -8 | 4) & 255);
      }
      $$101484 = $$101484 + 1 | 0;
     }
     $$91504 = $$91504 + 1 | 0;
    }
    break;
   }
  case 10:
   {
    $1190 = $105 + 100.0;
    $1191 = +($$31471 | 0);
    $1192 = +($spec$select1520 | 0);
    $1193 = $14 + 48 | 0;
    $1194 = $14 + 56 | 0;
    $1195 = $14 + 64 | 0;
    $1196 = $14 + 8 | 0;
    $1197 = $14 + 16 | 0;
    $1198 = $14 + 24 | 0;
    $1199 = $14 + 32 | 0;
    $1200 = $14 + 40 | 0;
    $1201 = ($0 | 0) == 1;
    $$101505 = 0;
    while (1) {
     if (($$101505 | 0) >= ($$31471 | 0)) break L24;
     $1207 = $1190 + $106 * (+($$101505 | 0) + .5) / $1191;
     $$111485 = 0;
     while (1) {
      if (($$111485 | 0) >= ($spec$select1520 | 0)) break;
      $1213 = $1190 + $106 * (+($$111485 | 0) + .5) / $1192;
      $1220 = +HEAPF64[$1195 >> 3] + ($1213 * +HEAPF64[$1193 >> 3] + $1207 * +HEAPF64[$1194 >> 3]);
      if ($1220 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $1230 = (+HEAPF64[$1197 >> 3] + ($1213 * +HEAPF64[$14 >> 3] + $1207 * +HEAPF64[$1196 >> 3])) / $1220;
      HEAPF32[$15 >> 2] = $1230;
      $1239 = (+HEAPF64[$1200 >> 3] + ($1213 * +HEAPF64[$1198 >> 3] + $1207 * +HEAPF64[$1199 >> 3])) / $1220;
      HEAPF32[$16 >> 2] = $1239;
      _arParamIdeal2ObservLTf($8, $1230, $1239, $15, $16) | 0;
      $1240 = +HEAPF32[$15 >> 2];
      if ($1201) {
       $$10 = ((~~($1240 + 1.0) | 0) / 2 | 0) << 1;
       $$101453 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$10 = ~~($1240 + .5);
       $$101453 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$10 | 0) > -1) if (($$101453 | 0) < ($6 | 0) & (($$101453 | 0) > -1 & ($$10 | 0) < ($5 | 0))) {
       $1261 = (Math_imul($$101453, $5) | 0) + $$10 << 1;
       $1264 = HEAP8[$4 + ($1261 | 1) >> 0] | 0;
       $1272 = ((Math_imul(($$101505 | 0) / ($102 | 0) | 0, $2) | 0) + (($$111485 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $1273 = $110 + ($1272 << 2) | 0;
       HEAP32[$1273 >> 2] = (HEAP32[$1273 >> 2] | 0) + (($1264 << 2 & 255 | 4) & 255);
       $1277 = HEAP8[$4 + $1261 >> 0] | 0;
       $1286 = $110 + ($1272 + 1 << 2) | 0;
       HEAP32[$1286 >> 2] = (($1264 & -64 & 255) >>> 3 | $1277 << 5 & 255 | 4) + (HEAP32[$1286 >> 2] | 0);
       $1293 = $110 + ($1272 + 2 << 2) | 0;
       HEAP32[$1293 >> 2] = (HEAP32[$1293 >> 2] | 0) + (($1277 & -8 | 4) & 255);
      }
      $$111485 = $$111485 + 1 | 0;
     }
     $$101505 = $$101505 + 1 | 0;
    }
    break;
   }
  case 11:
   {
    $1298 = $105 + 100.0;
    $1299 = +($$31471 | 0);
    $1300 = +($spec$select1520 | 0);
    $1301 = $14 + 48 | 0;
    $1302 = $14 + 56 | 0;
    $1303 = $14 + 64 | 0;
    $1304 = $14 + 8 | 0;
    $1305 = $14 + 16 | 0;
    $1306 = $14 + 24 | 0;
    $1307 = $14 + 32 | 0;
    $1308 = $14 + 40 | 0;
    $1309 = ($0 | 0) == 1;
    $$111506 = 0;
    while (1) {
     if (($$111506 | 0) >= ($$31471 | 0)) break L24;
     $1315 = $1298 + $106 * (+($$111506 | 0) + .5) / $1299;
     $$121486 = 0;
     while (1) {
      if (($$121486 | 0) >= ($spec$select1520 | 0)) break;
      $1321 = $1298 + $106 * (+($$121486 | 0) + .5) / $1300;
      $1328 = +HEAPF64[$1303 >> 3] + ($1321 * +HEAPF64[$1301 >> 3] + $1315 * +HEAPF64[$1302 >> 3]);
      if ($1328 == 0.0) {
       $2263 = $110;
       label = 306;
       break L19;
      }
      $1338 = (+HEAPF64[$1305 >> 3] + ($1321 * +HEAPF64[$14 >> 3] + $1315 * +HEAPF64[$1304 >> 3])) / $1328;
      HEAPF32[$15 >> 2] = $1338;
      $1347 = (+HEAPF64[$1308 >> 3] + ($1321 * +HEAPF64[$1306 >> 3] + $1315 * +HEAPF64[$1307 >> 3])) / $1328;
      HEAPF32[$16 >> 2] = $1347;
      _arParamIdeal2ObservLTf($8, $1338, $1347, $15, $16) | 0;
      $1348 = +HEAPF32[$15 >> 2];
      if ($1309) {
       $$11 = ((~~($1348 + 1.0) | 0) / 2 | 0) << 1;
       $$111454 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$11 = ~~($1348 + .5);
       $$111454 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$11 | 0) > -1) if (($$111454 | 0) < ($6 | 0) & (($$111454 | 0) > -1 & ($$11 | 0) < ($5 | 0))) {
       $1369 = (Math_imul($$111454, $5) | 0) + $$11 << 1;
       $1380 = ((Math_imul(($$111506 | 0) / ($102 | 0) | 0, $2) | 0) + (($$121486 | 0) / ($101 | 0) | 0) | 0) * 3 | 0;
       $1381 = $110 + ($1380 << 2) | 0;
       HEAP32[$1381 >> 2] = (HEAP32[$1381 >> 2] | 0) + ((HEAP8[$4 + ($1369 | 1) >> 0] & -16 | 8) & 255);
       $1385 = HEAP8[$4 + $1369 >> 0] | 0;
       $1390 = $110 + ($1380 + 1 << 2) | 0;
       HEAP32[$1390 >> 2] = (HEAP32[$1390 >> 2] | 0) + (($1385 << 4 & 255 | 8) & 255);
       $1397 = $110 + ($1380 + 2 << 2) | 0;
       HEAP32[$1397 >> 2] = (HEAP32[$1397 >> 2] | 0) + (($1385 & -16 | 8) & 255);
      }
      $$121486 = $$121486 + 1 | 0;
     }
     $$111506 = $$111506 + 1 | 0;
    }
    break;
   }
  default:
   {
    _arLog(0, 3, 17978, $vararg_buffer1);
    $2263 = $110;
    label = 306;
    break L19;
   }
  } while (0);
  $1402 = Math_imul($102, $101) | 0;
  $$131487 = 0;
  while (1) {
   if (($$131487 | 0) == ($109 | 0)) break;
   HEAP8[$11 + $$131487 >> 0] = ((HEAP32[$110 + ($$131487 << 2) >> 2] | 0) >>> 0) / ($1402 >>> 0) | 0;
   $$131487 = $$131487 + 1 | 0;
  }
  _free($110);
  $$0 = 0;
 } else {
  $1409 = _calloc($108, 4) | 0;
  if (!$1409) {
   _arLog(0, 3, 20454, $vararg_buffer3);
   _exit(1);
  }
  L239 : do if ($7 >>> 0 < 2) {
   $1412 = $105 + 100.0;
   $1413 = +($$31471 | 0);
   $1414 = +($spec$select1520 | 0);
   $1415 = $14 + 48 | 0;
   $1416 = $14 + 56 | 0;
   $1417 = $14 + 64 | 0;
   $1418 = $14 + 8 | 0;
   $1419 = $14 + 16 | 0;
   $1420 = $14 + 24 | 0;
   $1421 = $14 + 32 | 0;
   $1422 = $14 + 40 | 0;
   $1423 = ($0 | 0) == 1;
   $$121507 = 0;
   while (1) {
    if (($$121507 | 0) >= ($$31471 | 0)) break L239;
    $1429 = $1412 + $106 * (+($$121507 | 0) + .5) / $1413;
    $$141488 = 0;
    while (1) {
     if (($$141488 | 0) >= ($spec$select1520 | 0)) break;
     $1435 = $1412 + $106 * (+($$141488 | 0) + .5) / $1414;
     $1442 = +HEAPF64[$1417 >> 3] + ($1435 * +HEAPF64[$1415 >> 3] + $1429 * +HEAPF64[$1416 >> 3]);
     if ($1442 == 0.0) {
      $2263 = $1409;
      label = 306;
      break L19;
     }
     $1452 = (+HEAPF64[$1419 >> 3] + ($1435 * +HEAPF64[$14 >> 3] + $1429 * +HEAPF64[$1418 >> 3])) / $1442;
     HEAPF32[$15 >> 2] = $1452;
     $1461 = (+HEAPF64[$1422 >> 3] + ($1435 * +HEAPF64[$1420 >> 3] + $1429 * +HEAPF64[$1421 >> 3])) / $1442;
     HEAPF32[$16 >> 2] = $1461;
     _arParamIdeal2ObservLTf($8, $1452, $1461, $15, $16) | 0;
     $1462 = +HEAPF32[$15 >> 2];
     if ($1423) {
      $$12 = ((~~($1462 + 1.0) | 0) / 2 | 0) << 1;
      $$121455 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
     } else {
      $$12 = ~~($1462 + .5);
      $$121455 = ~~(+HEAPF32[$16 >> 2] + .5);
     }
     if (($$12 | 0) > -1) if (($$121455 | 0) < ($6 | 0) & (($$121455 | 0) > -1 & ($$12 | 0) < ($5 | 0))) {
      $1483 = ((Math_imul($$121455, $5) | 0) + $$12 | 0) * 3 | 0;
      $1502 = $1409 + ((Math_imul(($$121507 | 0) / ($102 | 0) | 0, $2) | 0) + (($$141488 | 0) / ($101 | 0) | 0) << 2) | 0;
      HEAP32[$1502 >> 2] = (HEAP32[$1502 >> 2] | 0) + ((((HEAPU8[$4 + ($1483 + 1) >> 0] | 0) + (HEAPU8[$4 + $1483 >> 0] | 0) + (HEAPU8[$4 + ($1483 + 2) >> 0] | 0) | 0) >>> 0) / 3 | 0);
     }
     $$141488 = $$141488 + 1 | 0;
    }
    $$121507 = $$121507 + 1 | 0;
   }
  } else {
   if (($7 | 1 | 0) == 3) {
    $1509 = $105 + 100.0;
    $1510 = +($$31471 | 0);
    $1511 = +($spec$select1520 | 0);
    $1512 = $14 + 48 | 0;
    $1513 = $14 + 56 | 0;
    $1514 = $14 + 64 | 0;
    $1515 = $14 + 8 | 0;
    $1516 = $14 + 16 | 0;
    $1517 = $14 + 24 | 0;
    $1518 = $14 + 32 | 0;
    $1519 = $14 + 40 | 0;
    $1520 = ($0 | 0) == 1;
    $$131508 = 0;
    while (1) {
     if (($$131508 | 0) >= ($$31471 | 0)) break L239;
     $1526 = $1509 + $106 * (+($$131508 | 0) + .5) / $1510;
     $$151489 = 0;
     while (1) {
      if (($$151489 | 0) >= ($spec$select1520 | 0)) break;
      $1532 = $1509 + $106 * (+($$151489 | 0) + .5) / $1511;
      $1539 = +HEAPF64[$1514 >> 3] + ($1532 * +HEAPF64[$1512 >> 3] + $1526 * +HEAPF64[$1513 >> 3]);
      if ($1539 == 0.0) {
       $2263 = $1409;
       label = 306;
       break L19;
      }
      $1549 = (+HEAPF64[$1516 >> 3] + ($1532 * +HEAPF64[$14 >> 3] + $1526 * +HEAPF64[$1515 >> 3])) / $1539;
      HEAPF32[$15 >> 2] = $1549;
      $1558 = (+HEAPF64[$1519 >> 3] + ($1532 * +HEAPF64[$1517 >> 3] + $1526 * +HEAPF64[$1518 >> 3])) / $1539;
      HEAPF32[$16 >> 2] = $1558;
      _arParamIdeal2ObservLTf($8, $1549, $1558, $15, $16) | 0;
      $1559 = +HEAPF32[$15 >> 2];
      if ($1520) {
       $$13 = ((~~($1559 + 1.0) | 0) / 2 | 0) << 1;
       $$131456 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$13 = ~~($1559 + .5);
       $$131456 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$13 | 0) > -1) if (($$131456 | 0) < ($6 | 0) & (($$131456 | 0) > -1 & ($$13 | 0) < ($5 | 0))) {
       $1580 = (Math_imul($$131456, $5) | 0) + $$13 << 2;
       $1599 = $1409 + ((Math_imul(($$131508 | 0) / ($102 | 0) | 0, $2) | 0) + (($$151489 | 0) / ($101 | 0) | 0) << 2) | 0;
       HEAP32[$1599 >> 2] = (HEAP32[$1599 >> 2] | 0) + ((((HEAPU8[$4 + ($1580 | 1) >> 0] | 0) + (HEAPU8[$4 + $1580 >> 0] | 0) + (HEAPU8[$4 + ($1580 | 2) >> 0] | 0) | 0) >>> 0) / 3 | 0);
      }
      $$151489 = $$151489 + 1 | 0;
     }
     $$131508 = $$131508 + 1 | 0;
    }
   }
   if (($7 | 2 | 0) == 6) {
    $1606 = $105 + 100.0;
    $1607 = +($$31471 | 0);
    $1608 = +($spec$select1520 | 0);
    $1609 = $14 + 48 | 0;
    $1610 = $14 + 56 | 0;
    $1611 = $14 + 64 | 0;
    $1612 = $14 + 8 | 0;
    $1613 = $14 + 16 | 0;
    $1614 = $14 + 24 | 0;
    $1615 = $14 + 32 | 0;
    $1616 = $14 + 40 | 0;
    $1617 = ($0 | 0) == 1;
    $$141509 = 0;
    while (1) {
     if (($$141509 | 0) >= ($$31471 | 0)) break L239;
     $1623 = $1606 + $106 * (+($$141509 | 0) + .5) / $1607;
     $$161490 = 0;
     while (1) {
      if (($$161490 | 0) >= ($spec$select1520 | 0)) break;
      $1629 = $1606 + $106 * (+($$161490 | 0) + .5) / $1608;
      $1636 = +HEAPF64[$1611 >> 3] + ($1629 * +HEAPF64[$1609 >> 3] + $1623 * +HEAPF64[$1610 >> 3]);
      if ($1636 == 0.0) {
       $2263 = $1409;
       label = 306;
       break L19;
      }
      $1646 = (+HEAPF64[$1613 >> 3] + ($1629 * +HEAPF64[$14 >> 3] + $1623 * +HEAPF64[$1612 >> 3])) / $1636;
      HEAPF32[$15 >> 2] = $1646;
      $1655 = (+HEAPF64[$1616 >> 3] + ($1629 * +HEAPF64[$1614 >> 3] + $1623 * +HEAPF64[$1615 >> 3])) / $1636;
      HEAPF32[$16 >> 2] = $1655;
      _arParamIdeal2ObservLTf($8, $1646, $1655, $15, $16) | 0;
      $1656 = +HEAPF32[$15 >> 2];
      if ($1617) {
       $$14 = ((~~($1656 + 1.0) | 0) / 2 | 0) << 1;
       $$141457 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
      } else {
       $$14 = ~~($1656 + .5);
       $$141457 = ~~(+HEAPF32[$16 >> 2] + .5);
      }
      if (($$14 | 0) > -1) if (($$141457 | 0) < ($6 | 0) & (($$141457 | 0) > -1 & ($$14 | 0) < ($5 | 0))) {
       $1677 = (Math_imul($$141457, $5) | 0) + $$14 << 2;
       $1697 = $1409 + ((Math_imul(($$141509 | 0) / ($102 | 0) | 0, $2) | 0) + (($$161490 | 0) / ($101 | 0) | 0) << 2) | 0;
       HEAP32[$1697 >> 2] = (HEAP32[$1697 >> 2] | 0) + ((((HEAPU8[$4 + ($1677 | 2) >> 0] | 0) + (HEAPU8[$4 + ($1677 | 1) >> 0] | 0) + (HEAPU8[$4 + ($1677 | 3) >> 0] | 0) | 0) >>> 0) / 3 | 0);
      }
      $$161490 = $$161490 + 1 | 0;
     }
     $$141509 = $$141509 + 1 | 0;
    }
   }
   switch ($7 | 0) {
   case 5:
   case 12:
   case 13:
   case 14:
    {
     $1702 = $105 + 100.0;
     $1703 = +($$31471 | 0);
     $1704 = +($spec$select1520 | 0);
     $1705 = $14 + 48 | 0;
     $1706 = $14 + 56 | 0;
     $1707 = $14 + 64 | 0;
     $1708 = $14 + 8 | 0;
     $1709 = $14 + 16 | 0;
     $1710 = $14 + 24 | 0;
     $1711 = $14 + 32 | 0;
     $1712 = $14 + 40 | 0;
     $1713 = ($0 | 0) == 1;
     $$151510 = 0;
     while (1) {
      if (($$151510 | 0) >= ($$31471 | 0)) break L239;
      $1719 = $1702 + $106 * (+($$151510 | 0) + .5) / $1703;
      $$171491 = 0;
      while (1) {
       if (($$171491 | 0) >= ($spec$select1520 | 0)) break;
       $1725 = $1702 + $106 * (+($$171491 | 0) + .5) / $1704;
       $1732 = +HEAPF64[$1707 >> 3] + ($1725 * +HEAPF64[$1705 >> 3] + $1719 * +HEAPF64[$1706 >> 3]);
       if ($1732 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $1742 = (+HEAPF64[$1709 >> 3] + ($1725 * +HEAPF64[$14 >> 3] + $1719 * +HEAPF64[$1708 >> 3])) / $1732;
       HEAPF32[$15 >> 2] = $1742;
       $1751 = (+HEAPF64[$1712 >> 3] + ($1725 * +HEAPF64[$1710 >> 3] + $1719 * +HEAPF64[$1711 >> 3])) / $1732;
       HEAPF32[$16 >> 2] = $1751;
       _arParamIdeal2ObservLTf($8, $1742, $1751, $15, $16) | 0;
       $1752 = +HEAPF32[$15 >> 2];
       if ($1713) {
        $$15 = ((~~($1752 + 1.0) | 0) / 2 | 0) << 1;
        $$151458 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$15 = ~~($1752 + .5);
        $$151458 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$15 | 0) > -1) if (($$151458 | 0) < ($6 | 0) & (($$151458 | 0) > -1 & ($$15 | 0) < ($5 | 0))) {
        $1773 = $4 + ((Math_imul($$151458, $5) | 0) + $$15) | 0;
        $1780 = $1409 + ((Math_imul(($$151510 | 0) / ($102 | 0) | 0, $2) | 0) + (($$171491 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$1780 >> 2] = (HEAP32[$1780 >> 2] | 0) + (HEAPU8[$1773 >> 0] | 0);
       }
       $$171491 = $$171491 + 1 | 0;
      }
      $$151510 = $$151510 + 1 | 0;
     }
     break;
    }
   case 7:
    {
     $1785 = $105 + 100.0;
     $1786 = +($$31471 | 0);
     $1787 = +($spec$select1520 | 0);
     $1788 = $14 + 48 | 0;
     $1789 = $14 + 56 | 0;
     $1790 = $14 + 64 | 0;
     $1791 = $14 + 8 | 0;
     $1792 = $14 + 16 | 0;
     $1793 = $14 + 24 | 0;
     $1794 = $14 + 32 | 0;
     $1795 = $14 + 40 | 0;
     $1796 = ($0 | 0) == 1;
     $$161511 = 0;
     while (1) {
      if (($$161511 | 0) >= ($$31471 | 0)) break L239;
      $1802 = $1785 + $106 * (+($$161511 | 0) + .5) / $1786;
      $$181492 = 0;
      while (1) {
       if (($$181492 | 0) >= ($spec$select1520 | 0)) break;
       $1808 = $1785 + $106 * (+($$181492 | 0) + .5) / $1787;
       $1815 = +HEAPF64[$1790 >> 3] + ($1808 * +HEAPF64[$1788 >> 3] + $1802 * +HEAPF64[$1789 >> 3]);
       if ($1815 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $1825 = (+HEAPF64[$1792 >> 3] + ($1808 * +HEAPF64[$14 >> 3] + $1802 * +HEAPF64[$1791 >> 3])) / $1815;
       HEAPF32[$15 >> 2] = $1825;
       $1834 = (+HEAPF64[$1795 >> 3] + ($1808 * +HEAPF64[$1793 >> 3] + $1802 * +HEAPF64[$1794 >> 3])) / $1815;
       HEAPF32[$16 >> 2] = $1834;
       _arParamIdeal2ObservLTf($8, $1825, $1834, $15, $16) | 0;
       $1835 = +HEAPF32[$15 >> 2];
       if ($1796) {
        $$16 = ((~~($1835 + 1.0) | 0) / 2 | 0) << 1;
        $$161459 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$16 = ~~($1835 + .5);
        $$161459 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$16 | 0) > -1) if (($$161459 | 0) < ($6 | 0) & (($$161459 | 0) > -1 & ($$16 | 0) < ($5 | 0))) {
        $1858 = $4 + ((Math_imul($$161459, $5) | 0) + $$16 << 1 | 1) | 0;
        $1865 = $1409 + ((Math_imul(($$161511 | 0) / ($102 | 0) | 0, $2) | 0) + (($$181492 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$1865 >> 2] = (HEAP32[$1865 >> 2] | 0) + (HEAPU8[$1858 >> 0] | 0);
       }
       $$181492 = $$181492 + 1 | 0;
      }
      $$161511 = $$161511 + 1 | 0;
     }
     break;
    }
   case 8:
    {
     $1870 = $105 + 100.0;
     $1871 = +($$31471 | 0);
     $1872 = +($spec$select1520 | 0);
     $1873 = $14 + 48 | 0;
     $1874 = $14 + 56 | 0;
     $1875 = $14 + 64 | 0;
     $1876 = $14 + 8 | 0;
     $1877 = $14 + 16 | 0;
     $1878 = $14 + 24 | 0;
     $1879 = $14 + 32 | 0;
     $1880 = $14 + 40 | 0;
     $1881 = ($0 | 0) == 1;
     $$171512 = 0;
     while (1) {
      if (($$171512 | 0) >= ($$31471 | 0)) break L239;
      $1887 = $1870 + $106 * (+($$171512 | 0) + .5) / $1871;
      $$191493 = 0;
      while (1) {
       if (($$191493 | 0) >= ($spec$select1520 | 0)) break;
       $1893 = $1870 + $106 * (+($$191493 | 0) + .5) / $1872;
       $1900 = +HEAPF64[$1875 >> 3] + ($1893 * +HEAPF64[$1873 >> 3] + $1887 * +HEAPF64[$1874 >> 3]);
       if ($1900 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $1910 = (+HEAPF64[$1877 >> 3] + ($1893 * +HEAPF64[$14 >> 3] + $1887 * +HEAPF64[$1876 >> 3])) / $1900;
       HEAPF32[$15 >> 2] = $1910;
       $1919 = (+HEAPF64[$1880 >> 3] + ($1893 * +HEAPF64[$1878 >> 3] + $1887 * +HEAPF64[$1879 >> 3])) / $1900;
       HEAPF32[$16 >> 2] = $1919;
       _arParamIdeal2ObservLTf($8, $1910, $1919, $15, $16) | 0;
       $1920 = +HEAPF32[$15 >> 2];
       if ($1881) {
        $$17 = ((~~($1920 + 1.0) | 0) / 2 | 0) << 1;
        $$171460 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$17 = ~~($1920 + .5);
        $$171460 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$17 | 0) > -1) if (($$171460 | 0) < ($6 | 0) & (($$171460 | 0) > -1 & ($$17 | 0) < ($5 | 0))) {
        $1942 = $4 + ((Math_imul($$171460, $5) | 0) + $$17 << 1) | 0;
        $1949 = $1409 + ((Math_imul(($$171512 | 0) / ($102 | 0) | 0, $2) | 0) + (($$191493 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$1949 >> 2] = (HEAP32[$1949 >> 2] | 0) + (HEAPU8[$1942 >> 0] | 0);
       }
       $$191493 = $$191493 + 1 | 0;
      }
      $$171512 = $$171512 + 1 | 0;
     }
     break;
    }
   case 9:
    {
     $1954 = $105 + 100.0;
     $1955 = +($$31471 | 0);
     $1956 = +($spec$select1520 | 0);
     $1957 = $14 + 48 | 0;
     $1958 = $14 + 56 | 0;
     $1959 = $14 + 64 | 0;
     $1960 = $14 + 8 | 0;
     $1961 = $14 + 16 | 0;
     $1962 = $14 + 24 | 0;
     $1963 = $14 + 32 | 0;
     $1964 = $14 + 40 | 0;
     $1965 = ($0 | 0) == 1;
     $$181513 = 0;
     while (1) {
      if (($$181513 | 0) >= ($$31471 | 0)) break L239;
      $1971 = $1954 + $106 * (+($$181513 | 0) + .5) / $1955;
      $$201494 = 0;
      while (1) {
       if (($$201494 | 0) >= ($spec$select1520 | 0)) break;
       $1977 = $1954 + $106 * (+($$201494 | 0) + .5) / $1956;
       $1984 = +HEAPF64[$1959 >> 3] + ($1977 * +HEAPF64[$1957 >> 3] + $1971 * +HEAPF64[$1958 >> 3]);
       if ($1984 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $1994 = (+HEAPF64[$1961 >> 3] + ($1977 * +HEAPF64[$14 >> 3] + $1971 * +HEAPF64[$1960 >> 3])) / $1984;
       HEAPF32[$15 >> 2] = $1994;
       $2003 = (+HEAPF64[$1964 >> 3] + ($1977 * +HEAPF64[$1962 >> 3] + $1971 * +HEAPF64[$1963 >> 3])) / $1984;
       HEAPF32[$16 >> 2] = $2003;
       _arParamIdeal2ObservLTf($8, $1994, $2003, $15, $16) | 0;
       $2004 = +HEAPF32[$15 >> 2];
       if ($1965) {
        $$18 = ((~~($2004 + 1.0) | 0) / 2 | 0) << 1;
        $$181461 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$18 = ~~($2004 + .5);
        $$181461 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$18 | 0) > -1) if (($$181461 | 0) < ($6 | 0) & (($$181461 | 0) > -1 & ($$18 | 0) < ($5 | 0))) {
        $2025 = (Math_imul($$181461, $5) | 0) + $$18 << 1;
        $2028 = HEAPU8[$4 + $2025 >> 0] | 0;
        $2036 = HEAPU8[$4 + ($2025 | 1) >> 0] | 0;
        $2051 = $1409 + ((Math_imul(($$181513 | 0) / ($102 | 0) | 0, $2) | 0) + (($$201494 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$2051 >> 2] = (((($2028 << 5 & 224 | $2036 >>> 3 & 28 | 2) + ($2028 & 248 | 4) + ($2036 << 3 & 248 | 4) | 0) >>> 0) / 3 | 0) + (HEAP32[$2051 >> 2] | 0);
       }
       $$201494 = $$201494 + 1 | 0;
      }
      $$181513 = $$181513 + 1 | 0;
     }
     break;
    }
   case 10:
    {
     $2056 = $105 + 100.0;
     $2057 = +($$31471 | 0);
     $2058 = +($spec$select1520 | 0);
     $2059 = $14 + 48 | 0;
     $2060 = $14 + 56 | 0;
     $2061 = $14 + 64 | 0;
     $2062 = $14 + 8 | 0;
     $2063 = $14 + 16 | 0;
     $2064 = $14 + 24 | 0;
     $2065 = $14 + 32 | 0;
     $2066 = $14 + 40 | 0;
     $2067 = ($0 | 0) == 1;
     $$191514 = 0;
     while (1) {
      if (($$191514 | 0) >= ($$31471 | 0)) break L239;
      $2073 = $2056 + $106 * (+($$191514 | 0) + .5) / $2057;
      $$21 = 0;
      while (1) {
       if (($$21 | 0) >= ($spec$select1520 | 0)) break;
       $2079 = $2056 + $106 * (+($$21 | 0) + .5) / $2058;
       $2086 = +HEAPF64[$2061 >> 3] + ($2079 * +HEAPF64[$2059 >> 3] + $2073 * +HEAPF64[$2060 >> 3]);
       if ($2086 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $2096 = (+HEAPF64[$2063 >> 3] + ($2079 * +HEAPF64[$14 >> 3] + $2073 * +HEAPF64[$2062 >> 3])) / $2086;
       HEAPF32[$15 >> 2] = $2096;
       $2105 = (+HEAPF64[$2066 >> 3] + ($2079 * +HEAPF64[$2064 >> 3] + $2073 * +HEAPF64[$2065 >> 3])) / $2086;
       HEAPF32[$16 >> 2] = $2105;
       _arParamIdeal2ObservLTf($8, $2096, $2105, $15, $16) | 0;
       $2106 = +HEAPF32[$15 >> 2];
       if ($2067) {
        $$19 = ((~~($2106 + 1.0) | 0) / 2 | 0) << 1;
        $$191462 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$19 = ~~($2106 + .5);
        $$191462 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$19 | 0) > -1) if (($$191462 | 0) < ($6 | 0) & (($$191462 | 0) > -1 & ($$19 | 0) < ($5 | 0))) {
        $2127 = (Math_imul($$191462, $5) | 0) + $$19 << 1;
        $2130 = HEAPU8[$4 + $2127 >> 0] | 0;
        $2138 = HEAPU8[$4 + ($2127 | 1) >> 0] | 0;
        $2153 = $1409 + ((Math_imul(($$191514 | 0) / ($102 | 0) | 0, $2) | 0) + (($$21 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$2153 >> 2] = (((($2130 << 5 & 224 | $2138 >>> 3 & 24 | 4) + ($2130 & 248 | 4) + ($2138 << 2 & 248 | 4) | 0) >>> 0) / 3 | 0) + (HEAP32[$2153 >> 2] | 0);
       }
       $$21 = $$21 + 1 | 0;
      }
      $$191514 = $$191514 + 1 | 0;
     }
     break;
    }
   case 11:
    {
     $2158 = $105 + 100.0;
     $2159 = +($$31471 | 0);
     $2160 = +($spec$select1520 | 0);
     $2161 = $14 + 48 | 0;
     $2162 = $14 + 56 | 0;
     $2163 = $14 + 64 | 0;
     $2164 = $14 + 8 | 0;
     $2165 = $14 + 16 | 0;
     $2166 = $14 + 24 | 0;
     $2167 = $14 + 32 | 0;
     $2168 = $14 + 40 | 0;
     $2169 = ($0 | 0) == 1;
     $$201515 = 0;
     while (1) {
      if (($$201515 | 0) >= ($$31471 | 0)) break L239;
      $2175 = $2158 + $106 * (+($$201515 | 0) + .5) / $2159;
      $$22 = 0;
      while (1) {
       if (($$22 | 0) >= ($spec$select1520 | 0)) break;
       $2181 = $2158 + $106 * (+($$22 | 0) + .5) / $2160;
       $2188 = +HEAPF64[$2163 >> 3] + ($2181 * +HEAPF64[$2161 >> 3] + $2175 * +HEAPF64[$2162 >> 3]);
       if ($2188 == 0.0) {
        $2263 = $1409;
        label = 306;
        break L19;
       }
       $2198 = (+HEAPF64[$2165 >> 3] + ($2181 * +HEAPF64[$14 >> 3] + $2175 * +HEAPF64[$2164 >> 3])) / $2188;
       HEAPF32[$15 >> 2] = $2198;
       $2207 = (+HEAPF64[$2168 >> 3] + ($2181 * +HEAPF64[$2166 >> 3] + $2175 * +HEAPF64[$2167 >> 3])) / $2188;
       HEAPF32[$16 >> 2] = $2207;
       _arParamIdeal2ObservLTf($8, $2198, $2207, $15, $16) | 0;
       $2208 = +HEAPF32[$15 >> 2];
       if ($2169) {
        $$20 = ((~~($2208 + 1.0) | 0) / 2 | 0) << 1;
        $$201463 = ((~~(+HEAPF32[$16 >> 2] + 1.0) | 0) / 2 | 0) << 1;
       } else {
        $$20 = ~~($2208 + .5);
        $$201463 = ~~(+HEAPF32[$16 >> 2] + .5);
       }
       if (($$20 | 0) > -1) if (($$201463 | 0) < ($6 | 0) & (($$201463 | 0) > -1 & ($$20 | 0) < ($5 | 0))) {
        $2229 = (Math_imul($$201463, $5) | 0) + $$20 << 1;
        $2232 = HEAPU8[$4 + $2229 >> 0] | 0;
        $2251 = $1409 + ((Math_imul(($$201515 | 0) / ($102 | 0) | 0, $2) | 0) + (($$22 | 0) / ($101 | 0) | 0) << 2) | 0;
        HEAP32[$2251 >> 2] = (((($2232 << 4 & 240 | 8) + ($2232 & 240 | 8) + ((HEAP8[$4 + ($2229 | 1) >> 0] & -16 | 8) & 255) | 0) >>> 0) / 3 | 0) + (HEAP32[$2251 >> 2] | 0);
       }
       $$22 = $$22 + 1 | 0;
      }
      $$201515 = $$201515 + 1 | 0;
     }
     break;
    }
   default:
    {
     _arLog(0, 3, 17978, $vararg_buffer5);
     $2263 = $1409;
     label = 306;
     break L19;
    }
   }
  } while (0);
  $2256 = Math_imul($102, $101) | 0;
  $$23 = 0;
  while (1) {
   if (($$23 | 0) == ($108 | 0)) break;
   HEAP8[$11 + $$23 >> 0] = ((HEAP32[$1409 + ($$23 << 2) >> 2] | 0) >>> 0) / ($2256 >>> 0) | 0;
   $$23 = $$23 + 1 | 0;
  }
  _free($1409);
  $$0 = 0;
 } while (0);
 if ((label | 0) == 306) {
  _free($2263);
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i630 = 0, $$0$i$i$add$i649 = 0, $$0$i$i$add$i653 = 0, $$0$i$i$add$i677 = 0, $$0$i$i$add$i681 = 0, $$0$i$i$add$i685 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i615 = 0, $$0$i$i$i599 = 0, $$0$i$i$i605 = 0, $$0$i$i$i609 = 0, $$0$i$i$i618 = 0, $$0$i$i$i622 = 0, $$0$i$i$i625 = 0, $$0$i$i$i633 = 0, $$0$i$i$i636 = 0, $$0$i$i$i640 = 0, $$0$i$i$i644 = 0, $$0$i$i$i656 = 0, $$0$i$i$i660 = 0, $$0$i$i$i664 = 0, $$0$i$i$i668 = 0, $$0$i$i$i672 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i629 = 0, $$0$i$i$idx$i648 = 0, $$0$i$i$idx$i652 = 0, $$0$i$i$idx$i676 = 0, $$0$i$i$idx$i680 = 0, $$0$i$i$idx$i684 = 0, $$0$i$i602 = 0, $$0503 = 0, $$0504$off0 = 0, $$14 = 0, $10 = 0, $101 = 0, $102 = 0, $103 = 0, $106 = 0, $11 = 0, $111 = 0, $113 = 0, $115 = 0, $116 = 0, $119 = 0, $12 = 0, $13 = 0, $131 = 0, $132 = 0, $14 = 0, $142 = 0, $143 = 0, $144 = 0, $147 = 0, $15 = 0, $154 = 0, $156 = 0, $158 = 0, $16 = 0, $160 = 0, $165 = 0, $167 = 0, $169 = 0, $171 = 0, $173 = 0, $175 = 0, $18 = 0, $180 = 0, $182 = 0, $184 = 0, $186 = 0, $191 = 0, $192 = 0, $194 = 0, $196 = 0, $197 = 0, $204 = 0, $212 = 0, $213 = 0, $228 = 0, $234 = 0, $236 = 0, $238 = 0, $240 = 0, $242 = 0, $244 = 0, $246 = 0, $248 = 0, $25 = 0, $253 = 0, $255 = 0, $257 = 0, $259 = 0, $261 = 0, $263 = 0, $265 = 0, $267 = 0, $269 = 0, $273 = 0, $275 = 0, $277 = 0, $280 = 0, $281 = 0, $296 = 0, $298 = 0, $3 = 0, $300 = 0, $302 = 0, $304 = 0, $306 = 0, $308 = 0, $309 = 0, $315 = 0, $317 = 0, $319 = 0, $321 = 0, $323 = 0, $325 = 0, $330 = 0, $332 = 0, $334 = 0, $336 = 0, $338 = 0, $340 = 0, $342 = 0, $346 = 0, $348 = 0, $35 = 0, $350 = 0, $353 = 0, $354 = 0, $365 = 0, $367 = 0, $37 = 0, $373 = 0, $374 = 0, $376 = 0, $378 = 0, $380 = 0, $381 = 0, $388 = 0, $39 = 0, $392 = 0, $4 = 0, $400 = 0, $401 = 0, $41 = 0, $415 = 0, $416 = 0, $43 = 0, $431 = 0, $433 = 0, $436 = 0, $437 = 0, $444 = 0, $446 = 0, $448 = 0, $45 = 0, $450 = 0, $452 = 0, $454 = 0, $456 = 0, $458 = 0, $47 = 0, $480 = 0, $481 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $6 = 0, $62 = 0, $64 = 0, $66 = 0, $68 = 0, $7 = 0, $74 = 0, $75 = 0, $78 = 0, $8 = 0, $9 = 0, $90 = 0, $91 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 $3 = sp + 176 | 0;
 $4 = sp + 112 | 0;
 $5 = sp + 88 | 0;
 $6 = sp + 64 | 0;
 $7 = sp + 48 | 0;
 $8 = sp + 160 | 0;
 $9 = sp + 36 | 0;
 $10 = sp + 148 | 0;
 $11 = sp + 136 | 0;
 $12 = sp + 124 | 0;
 $13 = sp + 24 | 0;
 $14 = sp + 12 | 0;
 $15 = sp;
 $16 = $1;
 $18 = $16 - $0 | 0;
 L1 : do if (($18 | 0) > 1) {
  if (($18 | 0) > 3) if ((HEAP8[$0 >> 0] | 0) == 103) {
   $25 = (HEAP8[$0 + 1 >> 0] | 0) == 115;
   $$0503 = $25 ? $0 + 2 | 0 : $0;
   $$0504$off0 = $25;
  } else {
   $$0503 = $0;
   $$0504$off0 = 0;
  } else {
   $$0503 = $0;
   $$0504$off0 = 0;
  }
  do switch (HEAP8[$$0503 >> 0] | 0) {
  case 76:
   {
    $$14 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    break L1;
    break;
   }
  case 84:
   {
    $$14 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    break L1;
    break;
   }
  case 102:
   {
    $$14 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    break L1;
    break;
   }
  case 97:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 97:
     {
      $35 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49633, __ZNSt3__211char_traitsIcE6lengthEPKc(49633) | 0);
      $37 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($35, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($37 | 0) == ($35 | 0) ? $0 : $37;
      break L1;
      break;
     }
    case 100:
     {
      $39 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49651, __ZNSt3__211char_traitsIcE6lengthEPKc(49651) | 0);
      $41 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($39, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($41 | 0) == ($39 | 0) ? $0 : $41;
      break L1;
      break;
     }
    case 110:
     {
      $43 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49651, __ZNSt3__211char_traitsIcE6lengthEPKc(49651) | 0);
      $45 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($43, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($45 | 0) == ($43 | 0) ? $0 : $45;
      break L1;
      break;
     }
    case 78:
     {
      $47 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49694, __ZNSt3__211char_traitsIcE6lengthEPKc(49694) | 0);
      $49 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($47, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($49 | 0) == ($47 | 0) ? $0 : $49;
      break L1;
      break;
     }
    case 83:
     {
      $51 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49697, __ZNSt3__211char_traitsIcE6lengthEPKc(49697) | 0);
      $53 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($51, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($53 | 0) == ($51 | 0) ? $0 : $53;
      break L1;
      break;
     }
    case 116:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 122:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 99:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 99:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_const_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 108:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_115parse_call_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 109:
     {
      $62 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49699, __ZNSt3__211char_traitsIcE6lengthEPKc(49699) | 0);
      $64 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($62, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($64 | 0) == ($62 | 0) ? $0 : $64;
      break L1;
      break;
     }
    case 111:
     {
      $66 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49701, __ZNSt3__211char_traitsIcE6lengthEPKc(49701) | 0);
      $68 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($66, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($68 | 0) == ($66 | 0) ? $0 : $68;
      break L1;
      break;
     }
    case 118:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_conversion_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 100:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 97:
     {
      $74 = $$0503 + 2 | 0;
      $75 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($74, $1, $2) | 0;
      if (($75 | 0) == ($74 | 0)) {
       $$14 = $0;
       break L1;
      }
      $78 = $2 + 4 | 0;
      if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$78 >> 2] | 0)) {
       $$14 = $0;
       break L1;
      };
      HEAP32[$6 >> 2] = 0;
      HEAP32[$6 + 4 >> 2] = 0;
      HEAP32[$6 + 8 >> 2] = 0;
      L32 : do if ($$0504$off0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($6, 49703, __ZNSt3__211char_traitsIcE6lengthEPKc(49703) | 0); else {
       $$0$i$i = 0;
       while (1) {
        if (($$0$i$i | 0) == 3) break L32;
        HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
        $$0$i$i = $$0$i$i + 1 | 0;
       }
      } while (0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 49706) | 0;
      HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i = $$0$i$i$i + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, (HEAP32[$78 >> 2] | 0) + -24 | 0);
      $90 = HEAP8[$7 + 11 >> 0] | 0;
      $91 = $90 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($5, $91 ? HEAP32[$7 >> 2] | 0 : $7, $91 ? HEAP32[$7 + 4 >> 2] | 0 : $90 & 255) | 0;
      HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i599 = 0;
      while (1) {
       if (($$0$i$i$i599 | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i599 << 2) >> 2] = 0;
       $$0$i$i$i599 = $$0$i$i$i599 + 1 | 0;
      }
      $101 = HEAP32[$78 >> 2] | 0;
      $102 = $101 + -24 | 0;
      $103 = $102 + 11 | 0;
      if ((HEAP8[$103 >> 0] | 0) < 0) {
       $106 = HEAP32[$102 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($106, $3);
       HEAP32[$101 + -20 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($102, $3);
       HEAP8[$103 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($102);
      HEAP32[$102 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$102 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$102 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i$i | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      $$14 = $75;
      break L1;
      break;
     }
    case 99:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_123parse_dynamic_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 101:
     {
      $111 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49649, __ZNSt3__211char_traitsIcE6lengthEPKc(49649) | 0);
      $113 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($111, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($113 | 0) == ($111 | 0) ? $0 : $113;
      break L1;
      break;
     }
    case 108:
     {
      $115 = $$0503 + 2 | 0;
      $116 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($115, $1, $2) | 0;
      if (($116 | 0) == ($115 | 0)) {
       $$14 = $0;
       break L1;
      }
      $119 = $2 + 4 | 0;
      if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$119 >> 2] | 0)) {
       $$14 = $0;
       break L1;
      };
      HEAP32[$6 >> 2] = 0;
      HEAP32[$6 + 4 >> 2] = 0;
      HEAP32[$6 + 8 >> 2] = 0;
      L60 : do if ($$0504$off0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($6, 49703, __ZNSt3__211char_traitsIcE6lengthEPKc(49703) | 0); else {
       $$0$i$i602 = 0;
       while (1) {
        if (($$0$i$i602 | 0) == 3) break L60;
        HEAP32[$6 + ($$0$i$i602 << 2) >> 2] = 0;
        $$0$i$i602 = $$0$i$i602 + 1 | 0;
       }
      } while (0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 49716) | 0;
      HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i605 = 0;
      while (1) {
       if (($$0$i$i$i605 | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i605 << 2) >> 2] = 0;
       $$0$i$i$i605 = $$0$i$i$i605 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, (HEAP32[$119 >> 2] | 0) + -24 | 0);
      $131 = HEAP8[$7 + 11 >> 0] | 0;
      $132 = $131 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($5, $132 ? HEAP32[$7 >> 2] | 0 : $7, $132 ? HEAP32[$7 + 4 >> 2] | 0 : $131 & 255) | 0;
      HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i609 = 0;
      while (1) {
       if (($$0$i$i$i609 | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i609 << 2) >> 2] = 0;
       $$0$i$i$i609 = $$0$i$i$i609 + 1 | 0;
      }
      $142 = HEAP32[$119 >> 2] | 0;
      $143 = $142 + -24 | 0;
      $144 = $143 + 11 | 0;
      if ((HEAP8[$144 >> 0] | 0) < 0) {
       $147 = HEAP32[$143 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($147, $3);
       HEAP32[$142 + -20 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($143, $3);
       HEAP8[$144 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($143);
      HEAP32[$143 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$143 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$143 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i$i615 = 0;
      while (1) {
       if (($$0$i$i$i$i615 | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i$i615 << 2) >> 2] = 0;
       $$0$i$i$i$i615 = $$0$i$i$i$i615 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      $$14 = $116;
      break L1;
      break;
     }
    case 110:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 115:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_119parse_dot_star_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 116:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_114parse_dot_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 118:
     {
      $154 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49724, __ZNSt3__211char_traitsIcE6lengthEPKc(49724) | 0);
      $156 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($154, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($156 | 0) == ($154 | 0) ? $0 : $156;
      break L1;
      break;
     }
    case 86:
     {
      $158 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49726, __ZNSt3__211char_traitsIcE6lengthEPKc(49726) | 0);
      $160 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($158, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($160 | 0) == ($158 | 0) ? $0 : $160;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 101:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 111:
     {
      $165 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49729, __ZNSt3__211char_traitsIcE6lengthEPKc(49729) | 0);
      $167 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($165, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($167 | 0) == ($165 | 0) ? $0 : $167;
      break L1;
      break;
     }
    case 79:
     {
      $169 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49731, __ZNSt3__211char_traitsIcE6lengthEPKc(49731) | 0);
      $171 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($169, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($171 | 0) == ($169 | 0) ? $0 : $171;
      break L1;
      break;
     }
    case 113:
     {
      $173 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49734, __ZNSt3__211char_traitsIcE6lengthEPKc(49734) | 0);
      $175 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($173, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($175 | 0) == ($173 | 0) ? $0 : $175;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 103:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 101:
     {
      $180 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49737, __ZNSt3__211char_traitsIcE6lengthEPKc(49737) | 0);
      $182 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($180, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($182 | 0) == ($180 | 0) ? $0 : $182;
      break L1;
      break;
     }
    case 116:
     {
      $184 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49667, __ZNSt3__211char_traitsIcE6lengthEPKc(49667) | 0);
      $186 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($184, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($186 | 0) == ($184 | 0) ? $0 : $186;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 105:
   {
    if ((HEAP8[$$0503 + 1 >> 0] | 0) != 120) {
     $$14 = $0;
     break L1;
    }
    $191 = $0 + 2 | 0;
    $192 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($191, $1, $2) | 0;
    if (($192 | 0) == ($191 | 0)) {
     $$14 = $0;
     break L1;
    }
    $194 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($192, $1, $2) | 0;
    $196 = $2 + 4 | 0;
    if (($194 | 0) == ($192 | 0)) {
     $228 = HEAP32[$196 >> 2] | 0;
     $$0$i$i$idx$i629 = 0;
     while (1) {
      if (($$0$i$i$idx$i629 | 0) == -1) break;
      $$0$i$i$add$i630 = $$0$i$i$idx$i629 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($228 + ($$0$i$i$add$i630 * 24 | 0) | 0);
      $$0$i$i$idx$i629 = $$0$i$i$add$i630;
     }
     HEAP32[$196 >> 2] = $228 + -24;
     $$14 = $0;
     break L1;
    }
    $197 = HEAP32[$196 >> 2] | 0;
    if ((($197 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$14 = $0;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $197 + -24 | 0);
    $204 = HEAP32[$196 >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($204 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$196 >> 2] = $204 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, $204 + -48 | 0);
    __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($9, 49631, $4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($9, 49740) | 0;
    HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    $$0$i$i$i618 = 0;
    while (1) {
     if (($$0$i$i$i618 | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i618 << 2) >> 2] = 0;
     $$0$i$i$i618 = $$0$i$i$i618 + 1 | 0;
    }
    $212 = HEAP8[$3 + 11 >> 0] | 0;
    $213 = $212 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($7, $213 ? HEAP32[$3 >> 2] | 0 : $3, $213 ? HEAP32[$3 + 4 >> 2] | 0 : $212 & 255) | 0;
    HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    $$0$i$i$i622 = 0;
    while (1) {
     if (($$0$i$i$i622 | 0) == 3) break;
     HEAP32[$7 + ($$0$i$i$i622 << 2) >> 2] = 0;
     $$0$i$i$i622 = $$0$i$i$i622 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 49678) | 0;
    HEAP32[$8 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$8 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$8 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i625 = 0;
    while (1) {
     if (($$0$i$i$i625 | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i625 << 2) >> 2] = 0;
     $$0$i$i$i625 = $$0$i$i$i625 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($5, $8);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$196 >> 2] | 0) + -24 | 0, $5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$14 = $194;
    break L1;
    break;
   }
  case 108:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 101:
     {
      $234 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49743, __ZNSt3__211char_traitsIcE6lengthEPKc(49743) | 0);
      $236 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($234, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($236 | 0) == ($234 | 0) ? $0 : $236;
      break L1;
      break;
     }
    case 115:
     {
      $238 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49746, __ZNSt3__211char_traitsIcE6lengthEPKc(49746) | 0);
      $240 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($238, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($240 | 0) == ($238 | 0) ? $0 : $240;
      break L1;
      break;
     }
    case 83:
     {
      $242 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49749, __ZNSt3__211char_traitsIcE6lengthEPKc(49749) | 0);
      $244 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($242, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($244 | 0) == ($242 | 0) ? $0 : $244;
      break L1;
      break;
     }
    case 116:
     {
      $246 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49665, __ZNSt3__211char_traitsIcE6lengthEPKc(49665) | 0);
      $248 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($246, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($248 | 0) == ($246 | 0) ? $0 : $248;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 109:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 105:
     {
      $253 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49753, __ZNSt3__211char_traitsIcE6lengthEPKc(49753) | 0);
      $255 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($253, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($255 | 0) == ($253 | 0) ? $0 : $255;
      break L1;
      break;
     }
    case 73:
     {
      $257 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49755, __ZNSt3__211char_traitsIcE6lengthEPKc(49755) | 0);
      $259 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($257, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($259 | 0) == ($257 | 0) ? $0 : $259;
      break L1;
      break;
     }
    case 108:
     {
      $261 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49649, __ZNSt3__211char_traitsIcE6lengthEPKc(49649) | 0);
      $263 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($261, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($263 | 0) == ($261 | 0) ? $0 : $263;
      break L1;
      break;
     }
    case 76:
     {
      $265 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49758, __ZNSt3__211char_traitsIcE6lengthEPKc(49758) | 0);
      $267 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($265, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($267 | 0) == ($265 | 0) ? $0 : $267;
      break L1;
      break;
     }
    case 109:
     {
      $269 = $0 + 2 | 0;
      if (($269 | 0) != ($1 | 0)) if ((HEAP8[$269 >> 0] | 0) == 95) {
       $273 = $0 + 3 | 0;
       HEAP32[$3 >> 2] = 0;
       HEAP32[$3 + 4 >> 2] = 0;
       HEAP32[$3 + 8 >> 2] = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49761, __ZNSt3__211char_traitsIcE6lengthEPKc(49761) | 0);
       $275 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($273, $1, $3, $2) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       $$14 = ($275 | 0) == ($273 | 0) ? $0 : $275;
       break L1;
      }
      $277 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($269, $1, $2) | 0;
      if (($277 | 0) == ($269 | 0)) {
       $$14 = $0;
       break L1;
      }
      $280 = $2 + 4 | 0;
      $281 = HEAP32[$280 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($281 | 0)) {
       $$14 = $0;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $281 + -24 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($5, 0, 49631) | 0;
      HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i633 = 0;
      while (1) {
       if (($$0$i$i$i633 | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i633 << 2) >> 2] = 0;
       $$0$i$i$i633 = $$0$i$i$i633 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 49764) | 0;
      HEAP32[$10 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$10 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$10 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i636 = 0;
      while (1) {
       if (($$0$i$i$i636 | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i636 << 2) >> 2] = 0;
       $$0$i$i$i636 = $$0$i$i$i636 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $10);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$280 >> 2] | 0) + -24 | 0, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($10);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $$14 = $277;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 110:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 119:
    case 97:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_114parse_new_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 101:
     {
      $296 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49768, __ZNSt3__211char_traitsIcE6lengthEPKc(49768) | 0);
      $298 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($296, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($298 | 0) == ($296 | 0) ? $0 : $298;
      break L1;
      break;
     }
    case 103:
     {
      $300 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49753, __ZNSt3__211char_traitsIcE6lengthEPKc(49753) | 0);
      $302 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($300, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($302 | 0) == ($300 | 0) ? $0 : $302;
      break L1;
      break;
     }
    case 116:
     {
      $304 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49771, __ZNSt3__211char_traitsIcE6lengthEPKc(49771) | 0);
      $306 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($304, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($306 | 0) == ($304 | 0) ? $0 : $306;
      break L1;
      break;
     }
    case 120:
     {
      $308 = $0 + 2 | 0;
      $309 = __ZN10__cxxabiv112_GLOBAL__N_125parse_noexcept_expressionINS0_2DbEEEPKcS4_S4_RT_($308, $1, $2) | 0;
      $$14 = ($309 | 0) == ($308 | 0) ? $0 : $309;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 111:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 110:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 111:
     {
      $315 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49773, __ZNSt3__211char_traitsIcE6lengthEPKc(49773) | 0);
      $317 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($315, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($317 | 0) == ($315 | 0) ? $0 : $317;
      break L1;
      break;
     }
    case 114:
     {
      $319 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49776, __ZNSt3__211char_traitsIcE6lengthEPKc(49776) | 0);
      $321 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($319, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($321 | 0) == ($319 | 0) ? $0 : $321;
      break L1;
      break;
     }
    case 82:
     {
      $323 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49778, __ZNSt3__211char_traitsIcE6lengthEPKc(49778) | 0);
      $325 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($323, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($325 | 0) == ($323 | 0) ? $0 : $325;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 112:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 109:
     {
      $330 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49781, __ZNSt3__211char_traitsIcE6lengthEPKc(49781) | 0);
      $332 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($330, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($332 | 0) == ($330 | 0) ? $0 : $332;
      break L1;
      break;
     }
    case 108:
     {
      $334 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49785, __ZNSt3__211char_traitsIcE6lengthEPKc(49785) | 0);
      $336 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($334, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($336 | 0) == ($334 | 0) ? $0 : $336;
      break L1;
      break;
     }
    case 76:
     {
      $338 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49787, __ZNSt3__211char_traitsIcE6lengthEPKc(49787) | 0);
      $340 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($338, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($340 | 0) == ($338 | 0) ? $0 : $340;
      break L1;
      break;
     }
    case 112:
     {
      $342 = $0 + 2 | 0;
      if (($342 | 0) != ($1 | 0)) if ((HEAP8[$342 >> 0] | 0) == 95) {
       $346 = $0 + 3 | 0;
       HEAP32[$3 >> 2] = 0;
       HEAP32[$3 + 4 >> 2] = 0;
       HEAP32[$3 + 8 >> 2] = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49790, __ZNSt3__211char_traitsIcE6lengthEPKc(49790) | 0);
       $348 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($346, $1, $3, $2) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       $$14 = ($348 | 0) == ($346 | 0) ? $0 : $348;
       break L1;
      }
      $350 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($342, $1, $2) | 0;
      if (($350 | 0) == ($342 | 0)) {
       $$14 = $0;
       break L1;
      }
      $353 = $2 + 4 | 0;
      $354 = HEAP32[$353 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($354 | 0)) {
       $$14 = $0;
       break L1;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $354 + -24 | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($5, 0, 49631) | 0;
      HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i640 = 0;
      while (1) {
       if (($$0$i$i$i640 | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i640 << 2) >> 2] = 0;
       $$0$i$i$i640 = $$0$i$i$i640 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 49793) | 0;
      HEAP32[$11 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$11 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$11 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i644 = 0;
      while (1) {
       if (($$0$i$i$i644 | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i644 << 2) >> 2] = 0;
       $$0$i$i$i644 = $$0$i$i$i644 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $11);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$353 >> 2] | 0) + -24 | 0, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $$14 = $350;
      break L1;
      break;
     }
    case 115:
     {
      $365 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49785, __ZNSt3__211char_traitsIcE6lengthEPKc(49785) | 0);
      $367 = __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($365, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($367 | 0) == ($365 | 0) ? $0 : $367;
      break L1;
      break;
     }
    case 116:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_116parse_arrow_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 113:
   {
    if ((HEAP8[$$0503 + 1 >> 0] | 0) != 117) {
     $$14 = $0;
     break L1;
    }
    $373 = $0 + 2 | 0;
    $374 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($373, $1, $2) | 0;
    if (($374 | 0) == ($373 | 0)) {
     $$14 = $0;
     break L1;
    }
    $376 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($374, $1, $2) | 0;
    if (($376 | 0) == ($374 | 0)) {
     $436 = $2 + 4 | 0;
     $437 = HEAP32[$436 >> 2] | 0;
     $$0$i$i$idx$i684 = 0;
     while (1) {
      if (($$0$i$i$idx$i684 | 0) == -1) break;
      $$0$i$i$add$i685 = $$0$i$i$idx$i684 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($437 + ($$0$i$i$add$i685 * 24 | 0) | 0);
      $$0$i$i$idx$i684 = $$0$i$i$add$i685;
     }
     HEAP32[$436 >> 2] = $437 + -24;
     $$14 = $0;
     break L1;
    }
    $378 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($376, $1, $2) | 0;
    $380 = $2 + 4 | 0;
    if (($378 | 0) == ($376 | 0)) {
     $431 = HEAP32[$380 >> 2] | 0;
     $$0$i$i$idx$i676 = 0;
     while (1) {
      if (($$0$i$i$idx$i676 | 0) == -1) break;
      $$0$i$i$add$i677 = $$0$i$i$idx$i676 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($431 + ($$0$i$i$add$i677 * 24 | 0) | 0);
      $$0$i$i$idx$i676 = $$0$i$i$add$i677;
     }
     $433 = $431 + -24 | 0;
     HEAP32[$380 >> 2] = $433;
     $$0$i$i$idx$i680 = 0;
     while (1) {
      if (($$0$i$i$idx$i680 | 0) == -1) break;
      $$0$i$i$add$i681 = $$0$i$i$idx$i680 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($433 + ($$0$i$i$add$i681 * 24 | 0) | 0);
      $$0$i$i$idx$i680 = $$0$i$i$add$i681;
     }
     HEAP32[$380 >> 2] = $431 + -48;
     $$14 = $0;
     break L1;
    }
    $381 = HEAP32[$380 >> 2] | 0;
    if ((($381 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 3) {
     $$14 = $0;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $381 + -24 | 0);
    $388 = HEAP32[$380 >> 2] | 0;
    $$0$i$i$idx$i648 = 0;
    while (1) {
     if (($$0$i$i$idx$i648 | 0) == -1) break;
     $$0$i$i$add$i649 = $$0$i$i$idx$i648 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($388 + ($$0$i$i$add$i649 * 24 | 0) | 0);
     $$0$i$i$idx$i648 = $$0$i$i$add$i649;
    }
    HEAP32[$380 >> 2] = $388 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, $388 + -48 | 0);
    $392 = HEAP32[$380 >> 2] | 0;
    $$0$i$i$idx$i652 = 0;
    while (1) {
     if (($$0$i$i$idx$i652 | 0) == -1) break;
     $$0$i$i$add$i653 = $$0$i$i$idx$i652 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($392 + ($$0$i$i$add$i653 * 24 | 0) | 0);
     $$0$i$i$idx$i652 = $$0$i$i$add$i653;
    }
    HEAP32[$380 >> 2] = $392 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $392 + -48 | 0);
    __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($15, 49631, $5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($15, 49797) | 0;
    HEAP32[$14 >> 2] = HEAP32[$15 >> 2];
    HEAP32[$14 + 4 >> 2] = HEAP32[$15 + 4 >> 2];
    HEAP32[$14 + 8 >> 2] = HEAP32[$15 + 8 >> 2];
    $$0$i$i$i656 = 0;
    while (1) {
     if (($$0$i$i$i656 | 0) == 3) break;
     HEAP32[$15 + ($$0$i$i$i656 << 2) >> 2] = 0;
     $$0$i$i$i656 = $$0$i$i$i656 + 1 | 0;
    }
    $400 = HEAP8[$4 + 11 >> 0] | 0;
    $401 = $400 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($14, $401 ? HEAP32[$4 >> 2] | 0 : $4, $401 ? HEAP32[$4 + 4 >> 2] | 0 : $400 & 255) | 0;
    HEAP32[$13 >> 2] = HEAP32[$14 >> 2];
    HEAP32[$13 + 4 >> 2] = HEAP32[$14 + 4 >> 2];
    HEAP32[$13 + 8 >> 2] = HEAP32[$14 + 8 >> 2];
    $$0$i$i$i660 = 0;
    while (1) {
     if (($$0$i$i$i660 | 0) == 3) break;
     HEAP32[$14 + ($$0$i$i$i660 << 2) >> 2] = 0;
     $$0$i$i$i660 = $$0$i$i$i660 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($13, 49803) | 0;
    HEAP32[$9 >> 2] = HEAP32[$13 >> 2];
    HEAP32[$9 + 4 >> 2] = HEAP32[$13 + 4 >> 2];
    HEAP32[$9 + 8 >> 2] = HEAP32[$13 + 8 >> 2];
    $$0$i$i$i664 = 0;
    while (1) {
     if (($$0$i$i$i664 | 0) == 3) break;
     HEAP32[$13 + ($$0$i$i$i664 << 2) >> 2] = 0;
     $$0$i$i$i664 = $$0$i$i$i664 + 1 | 0;
    }
    $415 = HEAP8[$3 + 11 >> 0] | 0;
    $416 = $415 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($9, $416 ? HEAP32[$3 >> 2] | 0 : $3, $416 ? HEAP32[$3 + 4 >> 2] | 0 : $415 & 255) | 0;
    HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    $$0$i$i$i668 = 0;
    while (1) {
     if (($$0$i$i$i668 | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i668 << 2) >> 2] = 0;
     $$0$i$i$i668 = $$0$i$i$i668 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 49629) | 0;
    HEAP32[$12 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$12 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$12 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    $$0$i$i$i672 = 0;
    while (1) {
     if (($$0$i$i$i672 | 0) == 3) break;
     HEAP32[$7 + ($$0$i$i$i672 << 2) >> 2] = 0;
     $$0$i$i$i672 = $$0$i$i$i672 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($6, $12);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$380 >> 2] | 0) + -24 | 0, $6);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($12);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($13);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($14);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($15);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$14 = $378;
    break L1;
    break;
   }
  case 114:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 99:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_127parse_reinterpret_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 109:
     {
      $444 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49809, __ZNSt3__211char_traitsIcE6lengthEPKc(49809) | 0);
      $446 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($444, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($446 | 0) == ($444 | 0) ? $0 : $446;
      break L1;
      break;
     }
    case 77:
     {
      $448 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49811, __ZNSt3__211char_traitsIcE6lengthEPKc(49811) | 0);
      $450 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($448, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($450 | 0) == ($448 | 0) ? $0 : $450;
      break L1;
      break;
     }
    case 115:
     {
      $452 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49814, __ZNSt3__211char_traitsIcE6lengthEPKc(49814) | 0);
      $454 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($452, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($454 | 0) == ($452 | 0) ? $0 : $454;
      break L1;
      break;
     }
    case 83:
     {
      $456 = $0 + 2 | 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$3 + 4 >> 2] = 0;
      HEAP32[$3 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49817, __ZNSt3__211char_traitsIcE6lengthEPKc(49817) | 0);
      $458 = __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($456, $1, $3, $2) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$14 = ($458 | 0) == ($456 | 0) ? $0 : $458;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 115:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 99:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_122parse_static_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 112:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_120parse_pack_expansionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 114:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 116:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_type_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 122:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_expr_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 90:
     {
      if (($16 - $$0503 | 0) <= 2) {
       $$14 = $0;
       break L1;
      }
      switch (HEAP8[$$0503 + 2 >> 0] | 0) {
      case 84:
       {
        $$14 = __ZN10__cxxabiv112_GLOBAL__N_128parse_sizeof_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
        break L1;
        break;
       }
      case 102:
       {
        $$14 = __ZN10__cxxabiv112_GLOBAL__N_137parse_sizeof_function_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
        break L1;
        break;
       }
      default:
       {
        $$14 = $0;
        break L1;
       }
      }
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 116:
   {
    switch (HEAP8[$$0503 + 1 >> 0] | 0) {
    case 105:
    case 101:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_117parse_typeid_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    case 114:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc($3, 49821);
      $480 = $2 + 4 | 0;
      $481 = HEAP32[$480 >> 2] | 0;
      if ($481 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($481, $3);
       HEAP32[$480 >> 2] = (HEAP32[$480 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      $$14 = $0 + 2 | 0;
      break L1;
      break;
     }
    case 119:
     {
      $$14 = __ZN10__cxxabiv112_GLOBAL__N_116parse_throw_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      break L1;
      break;
     }
    default:
     {
      $$14 = $0;
      break L1;
     }
    }
    break;
   }
  case 57:
  case 56:
  case 55:
  case 54:
  case 53:
  case 52:
  case 51:
  case 50:
  case 49:
   {
    $$14 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    break L1;
    break;
   }
  default:
   {
    $$14 = $0;
    break L1;
   }
  } while (0);
 } else $$14 = $0; while (0);
 STACKTOP = sp;
 return $$14 | 0;
}
function __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i497 = 0, $$0$i$i$add$i549 = 0, $$0$i$i$add$i561 = 0, $$0$i$i$add$i569 = 0, $$0$i$i$i = 0, $$0$i$i$i575 = 0, $$0$i$i$i579 = 0, $$0$i$i$i582 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i496 = 0, $$0$i$i$idx$i548 = 0, $$0$i$i$idx$i560 = 0, $$0$i$i$idx$i568 = 0, $$0$i533 = 0, $$0$i540 = 0, $$0434 = 0, $$0435 = 0, $$0438 = 0, $$0444 = 0, $$0478 = 0, $$0479 = 0, $$1429 = 0, $$1436 = 0, $$2437 = 0, $$5 = 0, $$in = 0, $$ph = 0, $$sroa$0$0$$sroa_idx$i544 = 0, $$sroa$0$0$copyload$i490598 = 0, $$sroa$0$0$copyload$i499594 = 0, $$sroa$0$0$copyload$i527606 = 0, $$sroa$0$0$copyload$i531605 = 0, $$sroa$0$0$copyload$i538604 = 0, $$sroa$0$0$copyload$i545602 = 0, $10 = 0, $102 = 0, $106 = 0, $11 = 0, $110 = 0, $113 = 0, $114 = 0, $119 = 0, $120 = 0, $124 = 0, $126 = 0, $131 = 0, $132 = 0, $135 = 0, $136 = 0, $140 = 0, $141 = 0, $142 = 0, $147 = 0, $148 = 0, $15 = 0, $152 = 0, $154 = 0, $159 = 0, $163 = 0, $166 = 0, $167 = 0, $172 = 0, $173 = 0, $177 = 0, $179 = 0, $18 = 0, $184 = 0, $185 = 0, $188 = 0, $189 = 0, $19 = 0, $193 = 0, $194 = 0, $195 = 0, $200 = 0, $201 = 0, $205 = 0, $207 = 0, $212 = 0, $216 = 0, $219 = 0, $220 = 0, $225 = 0, $226 = 0, $23 = 0, $230 = 0, $232 = 0, $237 = 0, $24 = 0, $241 = 0, $242 = 0, $243 = 0, $247 = 0, $249 = 0, $250 = 0, $260 = 0, $261 = 0, $265 = 0, $266 = 0, $274 = 0, $275 = 0, $278 = 0, $28 = 0, $284 = 0, $290 = 0, $292 = 0, $293 = 0, $294 = 0, $3 = 0, $30 = 0, $302 = 0, $306 = 0, $307 = 0, $308 = 0, $31 = 0, $312 = 0, $314 = 0, $315 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $332 = 0, $333 = 0, $34 = 0, $341 = 0, $342 = 0, $345 = 0, $351 = 0, $361 = 0, $362 = 0, $37 = 0, $371 = 0, $372 = 0, $373 = 0, $375 = 0, $376 = 0, $377 = 0, $385 = 0, $389 = 0, $390 = 0, $391 = 0, $395 = 0, $397 = 0, $398 = 0, $4 = 0, $408 = 0, $409 = 0, $413 = 0, $414 = 0, $422 = 0, $423 = 0, $426 = 0, $432 = 0, $438 = 0, $440 = 0, $441 = 0, $442 = 0, $45 = 0, $450 = 0, $454 = 0, $455 = 0, $459 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $47 = 0, $478 = 0, $480 = 0, $481 = 0, $482 = 0, $49 = 0, $490 = 0, $494 = 0, $499 = 0, $5 = 0, $500 = 0, $508 = 0, $509 = 0, $51 = 0, $513 = 0, $514 = 0, $518 = 0, $520 = 0, $524 = 0, $526 = 0, $528 = 0, $53 = 0, $530 = 0, $531 = 0, $538 = 0, $54 = 0, $542 = 0, $544 = 0, $552 = 0, $556 = 0, $557 = 0, $56 = 0, $57 = 0, $571 = 0, $574 = 0, $575 = 0, $576 = 0, $578 = 0, $581 = 0, $585 = 0, $595 = 0, $596 = 0, $6 = 0, $611 = 0, $612 = 0, $62 = 0, $621 = 0, $628 = 0, $629 = 0, $630 = 0, $635 = 0, $636 = 0, $64 = 0, $640 = 0, $642 = 0, $647 = 0, $651 = 0, $655 = 0, $658 = 0, $659 = 0, $664 = 0, $665 = 0, $669 = 0, $671 = 0, $676 = 0, $678 = 0, $680 = 0, $681 = 0, $688 = 0, $693 = 0, $694 = 0, $7 = 0, $702 = 0, $703 = 0, $704 = 0, $709 = 0, $710 = 0, $714 = 0, $716 = 0, $721 = 0, $725 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $735 = 0, $737 = 0, $738 = 0, $74 = 0, $749 = 0, $751 = 0, $752 = 0, $753 = 0, $761 = 0, $765 = 0, $768 = 0, $769 = 0, $774 = 0, $775 = 0, $779 = 0, $781 = 0, $786 = 0, $790 = 0, $793 = 0, $794 = 0, $799 = 0, $8 = 0, $800 = 0, $804 = 0, $806 = 0, $811 = 0, $813 = 0, $817 = 0, $820 = 0, $821 = 0, $826 = 0, $827 = 0, $831 = 0, $833 = 0, $9 = 0, $90 = 0, $92 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 $3 = sp + 128 | 0;
 $4 = sp + 104 | 0;
 $5 = sp + 40 | 0;
 $6 = sp + 88 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 76 | 0;
 $9 = sp + 12 | 0;
 $10 = sp;
 $11 = sp + 64 | 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$5 = $0; else {
  switch (HEAP8[$0 >> 0] | 0) {
  case 75:
  case 86:
  case 114:
   {
    HEAP32[$3 >> 2] = 0;
    $15 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($0, $1, $3) | 0;
    L5 : do if (($15 | 0) == ($0 | 0)) $$1429 = $0; else {
     $18 = (HEAP8[$15 >> 0] | 0) == 70;
     $19 = $2 + 4 | 0;
     $23 = ((HEAP32[$19 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     $24 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($15, $1, $2) | 0;
     $28 = ((HEAP32[$19 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     if (($24 | 0) == ($15 | 0)) $$1429 = $0; else {
      $30 = $2 + 20 | 0;
      $31 = HEAP32[$30 >> 2] | 0;
      if ($18) {
       $$0$i$i$idx$i496 = 0;
       while (1) {
        if (($$0$i$i$idx$i496 | 0) == -1) break;
        $$0$i$i$add$i497 = $$0$i$i$idx$i496 + -1 | 0;
        __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($31 + ($$0$i$i$add$i497 << 4) | 0);
        $$0$i$i$idx$i496 = $$0$i$i$add$i497;
       }
       $34 = $31 + -16 | 0;
       HEAP32[$30 >> 2] = $34;
       $37 = $34;
      } else $37 = $31;
      $$sroa$0$0$copyload$i499594 = HEAP32[$2 + 12 >> 2] | 0;
      HEAP32[$4 >> 2] = $$sroa$0$0$copyload$i499594;
      if ($37 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
       HEAP32[$37 >> 2] = 0;
       HEAP32[$37 + 4 >> 2] = 0;
       HEAP32[$37 + 8 >> 2] = 0;
       HEAP32[$37 + 12 >> 2] = $$sroa$0$0$copyload$i499594;
       HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($2 + 16 | 0, $4);
      $45 = HEAP32[$3 >> 2] | 0;
      $47 = ($45 & 1 | 0) == 0;
      $49 = ($45 & 2 | 0) == 0;
      $51 = ($45 & 4 | 0) == 0;
      $$0434 = $23;
      while (1) {
       if ($$0434 >>> 0 >= $28 >>> 0) {
        $$1429 = $24;
        break L5;
       }
       if ($18) {
        $53 = HEAP32[$2 >> 2] | 0;
        $54 = $53 + ($$0434 * 24 | 0) + 12 | 0;
        $56 = HEAP8[$54 + 11 >> 0] | 0;
        $57 = $56 << 24 >> 24 < 0;
        if ($57) {
         $$in = HEAP32[$53 + ($$0434 * 24 | 0) + 16 >> 2] | 0;
         $64 = HEAP32[$54 >> 2] | 0;
        } else {
         $$in = $56 & 255;
         $64 = $54;
        }
        $62 = $$in + -2 | 0;
        if ((HEAP8[$64 + $62 >> 0] | 0) == 38) $$0435 = $$in + -3 | 0; else {
         if ($57) {
          $73 = HEAP32[$54 >> 2] | 0;
          $74 = HEAP32[$53 + ($$0434 * 24 | 0) + 16 >> 2] | 0;
         } else {
          $73 = $54;
          $74 = $56 & 255;
         }
         $$0435 = (HEAP8[$73 + $74 + -1 >> 0] | 0) == 38 ? $62 : $$in;
        }
        if ($47) $$1436 = $$0435; else {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($54, $$0435, 49576) | 0;
         $$1436 = $$0435 + 6 | 0;
        }
        if ($49) $$2437 = $$1436; else {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) + 12 | 0, $$1436, 49583) | 0;
         $$2437 = $$1436 + 9 | 0;
        }
        if (!$51) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) + 12 | 0, $$2437, 49593) | 0;
       } else {
        if (!$47) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) | 0, 49576) | 0;
        if (!$49) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) | 0, 49583) | 0;
        if (!$51) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) | 0, 49593) | 0;
       }
       $90 = HEAP32[$30 >> 2] | 0;
       $92 = (HEAP32[$2 >> 2] | 0) + ($$0434 * 24 | 0) | 0;
       $93 = $90 + -12 | 0;
       $94 = HEAP32[$93 >> 2] | 0;
       if (($94 | 0) == (HEAP32[$90 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($90 + -16 | 0, $92); else {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($94, $92);
        HEAP32[$93 >> 2] = (HEAP32[$93 >> 2] | 0) + 24;
       }
       $$0434 = $$0434 + 1 | 0;
      }
     }
    } while (0);
    $$5 = $$1429;
    break L1;
    break;
   }
  default:
   {}
  }
  $102 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
  if (($102 | 0) == ($0 | 0)) {
   L59 : do switch (HEAP8[$0 >> 0] | 0) {
   case 65:
    {
     $106 = __ZN10__cxxabiv112_GLOBAL__N_116parse_array_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
     if (($106 | 0) == ($0 | 0)) {
      $$5 = $0;
      break L1;
     }
     $110 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($110 | 0)) {
      $$5 = $0;
      break L1;
     }
     HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $110 + -24 | 0, $4);
     $113 = $2 + 20 | 0;
     $114 = HEAP32[$113 >> 2] | 0;
     if ($114 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$114 >> 2] = 0;
      $119 = $114 + 4 | 0;
      HEAP32[$119 >> 2] = 0;
      $120 = $114 + 8 | 0;
      HEAP32[$120 >> 2] = 0;
      HEAP32[$114 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
      HEAP32[$114 >> 2] = HEAP32[$3 >> 2];
      $124 = $3 + 4 | 0;
      HEAP32[$119 >> 2] = HEAP32[$124 >> 2];
      $126 = $3 + 8 | 0;
      HEAP32[$120 >> 2] = HEAP32[$126 >> 2];
      HEAP32[$126 >> 2] = 0;
      HEAP32[$124 >> 2] = 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$113 >> 2] = (HEAP32[$113 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
     $$5 = $106;
     break L1;
     break;
    }
   case 67:
    {
     $131 = $0 + 1 | 0;
     $132 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($131, $1, $2) | 0;
     if (($132 | 0) == ($131 | 0)) {
      $$5 = $0;
      break L1;
     }
     $135 = $2 + 4 | 0;
     $136 = HEAP32[$135 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($136 | 0)) {
      $$5 = $0;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($136 + -24 | 0, 49603) | 0;
     $140 = (HEAP32[$135 >> 2] | 0) + -24 | 0;
     HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $140, $4);
     $141 = $2 + 20 | 0;
     $142 = HEAP32[$141 >> 2] | 0;
     if ($142 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$142 >> 2] = 0;
      $147 = $142 + 4 | 0;
      HEAP32[$147 >> 2] = 0;
      $148 = $142 + 8 | 0;
      HEAP32[$148 >> 2] = 0;
      HEAP32[$142 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
      HEAP32[$142 >> 2] = HEAP32[$3 >> 2];
      $152 = $3 + 4 | 0;
      HEAP32[$147 >> 2] = HEAP32[$152 >> 2];
      $154 = $3 + 8 | 0;
      HEAP32[$148 >> 2] = HEAP32[$154 >> 2];
      HEAP32[$154 >> 2] = 0;
      HEAP32[$152 >> 2] = 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$141 >> 2] = (HEAP32[$141 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
     $$5 = $132;
     break L1;
     break;
    }
   case 70:
    {
     $159 = __ZN10__cxxabiv112_GLOBAL__N_119parse_function_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
     if (($159 | 0) == ($0 | 0)) {
      $$5 = $0;
      break L1;
     }
     $163 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($163 | 0)) {
      $$5 = $0;
      break L1;
     }
     HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $163 + -24 | 0, $4);
     $166 = $2 + 20 | 0;
     $167 = HEAP32[$166 >> 2] | 0;
     if ($167 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$167 >> 2] = 0;
      $172 = $167 + 4 | 0;
      HEAP32[$172 >> 2] = 0;
      $173 = $167 + 8 | 0;
      HEAP32[$173 >> 2] = 0;
      HEAP32[$167 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
      HEAP32[$167 >> 2] = HEAP32[$3 >> 2];
      $177 = $3 + 4 | 0;
      HEAP32[$172 >> 2] = HEAP32[$177 >> 2];
      $179 = $3 + 8 | 0;
      HEAP32[$173 >> 2] = HEAP32[$179 >> 2];
      HEAP32[$179 >> 2] = 0;
      HEAP32[$177 >> 2] = 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$166 >> 2] = (HEAP32[$166 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
     $$5 = $159;
     break L1;
     break;
    }
   case 71:
    {
     $184 = $0 + 1 | 0;
     $185 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($184, $1, $2) | 0;
     if (($185 | 0) == ($184 | 0)) {
      $$5 = $0;
      break L1;
     }
     $188 = $2 + 4 | 0;
     $189 = HEAP32[$188 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($189 | 0)) {
      $$5 = $0;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($189 + -24 | 0, 49612) | 0;
     $193 = (HEAP32[$188 >> 2] | 0) + -24 | 0;
     HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $193, $4);
     $194 = $2 + 20 | 0;
     $195 = HEAP32[$194 >> 2] | 0;
     if ($195 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$195 >> 2] = 0;
      $200 = $195 + 4 | 0;
      HEAP32[$200 >> 2] = 0;
      $201 = $195 + 8 | 0;
      HEAP32[$201 >> 2] = 0;
      HEAP32[$195 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
      HEAP32[$195 >> 2] = HEAP32[$3 >> 2];
      $205 = $3 + 4 | 0;
      HEAP32[$200 >> 2] = HEAP32[$205 >> 2];
      $207 = $3 + 8 | 0;
      HEAP32[$201 >> 2] = HEAP32[$207 >> 2];
      HEAP32[$207 >> 2] = 0;
      HEAP32[$205 >> 2] = 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$194 >> 2] = (HEAP32[$194 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
     $$5 = $185;
     break L1;
     break;
    }
   case 77:
    {
     $212 = __ZN10__cxxabiv112_GLOBAL__N_128parse_pointer_to_member_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
     if (($212 | 0) == ($0 | 0)) {
      $$5 = $0;
      break L1;
     }
     $216 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($216 | 0)) {
      $$5 = $0;
      break L1;
     }
     HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $216 + -24 | 0, $4);
     $219 = $2 + 20 | 0;
     $220 = HEAP32[$219 >> 2] | 0;
     if ($220 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$220 >> 2] = 0;
      $225 = $220 + 4 | 0;
      HEAP32[$225 >> 2] = 0;
      $226 = $220 + 8 | 0;
      HEAP32[$226 >> 2] = 0;
      HEAP32[$220 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
      HEAP32[$220 >> 2] = HEAP32[$3 >> 2];
      $230 = $3 + 4 | 0;
      HEAP32[$225 >> 2] = HEAP32[$230 >> 2];
      $232 = $3 + 8 | 0;
      HEAP32[$226 >> 2] = HEAP32[$232 >> 2];
      HEAP32[$232 >> 2] = 0;
      HEAP32[$230 >> 2] = 0;
      HEAP32[$3 >> 2] = 0;
      HEAP32[$219 >> 2] = (HEAP32[$219 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
     $$5 = $212;
     break L1;
     break;
    }
   case 79:
    {
     $237 = $2 + 4 | 0;
     $241 = ((HEAP32[$237 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     $242 = $0 + 1 | 0;
     $243 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($242, $1, $2) | 0;
     $247 = ((HEAP32[$237 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     if (($243 | 0) == ($242 | 0)) {
      $$5 = $0;
      break L1;
     }
     $$sroa$0$0$copyload$i527606 = HEAP32[$2 + 12 >> 2] | 0;
     HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i527606;
     $249 = $2 + 20 | 0;
     $250 = HEAP32[$249 >> 2] | 0;
     if ($250 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$250 >> 2] = 0;
      HEAP32[$250 + 4 >> 2] = 0;
      HEAP32[$250 + 8 >> 2] = 0;
      HEAP32[$250 + 12 >> 2] = $$sroa$0$0$copyload$i527606;
      HEAP32[$249 >> 2] = (HEAP32[$249 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($2 + 16 | 0, $3);
     $260 = $3 + 11 | 0;
     $261 = $3 + 4 | 0;
     $$0479 = $241;
     while (1) {
      if ($$0479 >>> 0 >= $247 >>> 0) {
       $$5 = $243;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_($3, (HEAP32[$2 >> 2] | 0) + ($$0479 * 24 | 0) + 12 | 0, 2);
      $265 = __ZNSt3__211char_traitsIcE6lengthEPKc(49623) | 0;
      $266 = HEAP8[$260 >> 0] | 0;
      if (($265 | 0) == (($266 << 24 >> 24 < 0 ? HEAP32[$261 >> 2] | 0 : $266 & 255) | 0)) $$0$i = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($3, 49623, $265) | 0) == 0; else $$0$i = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $274 = HEAP32[$2 >> 2] | 0;
      $275 = $274 + ($$0479 * 24 | 0) | 0;
      if ($$0$i) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($275, 49626) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[$2 >> 2] | 0) + ($$0479 * 24 | 0) + 12 | 0, 0, 49629) | 0;
      } else {
       $278 = $274 + ($$0479 * 24 | 0) + 12 | 0;
       if ((HEAP8[$278 + 11 >> 0] | 0) < 0) $284 = HEAP32[$278 >> 2] | 0; else $284 = $278;
       if ((HEAP8[$284 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($275, 49631) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[$2 >> 2] | 0) + ($$0479 * 24 | 0) + 12 | 0, 0, 49629) | 0;
       }
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$2 >> 2] | 0) + ($$0479 * 24 | 0) | 0, 49633) | 0;
      $290 = HEAP32[$249 >> 2] | 0;
      $292 = (HEAP32[$2 >> 2] | 0) + ($$0479 * 24 | 0) | 0;
      $293 = $290 + -12 | 0;
      $294 = HEAP32[$293 >> 2] | 0;
      if (($294 | 0) == (HEAP32[$290 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($290 + -16 | 0, $292); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($294, $292);
       HEAP32[$293 >> 2] = (HEAP32[$293 >> 2] | 0) + 24;
      }
      $$0479 = $$0479 + 1 | 0;
     }
     break;
    }
   case 80:
    {
     $302 = $2 + 4 | 0;
     $306 = ((HEAP32[$302 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     $307 = $0 + 1 | 0;
     $308 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($307, $1, $2) | 0;
     $312 = ((HEAP32[$302 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     if (($308 | 0) == ($307 | 0)) {
      $$5 = $0;
      break L1;
     }
     $$sroa$0$0$copyload$i531605 = HEAP32[$2 + 12 >> 2] | 0;
     HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i531605;
     $314 = $2 + 20 | 0;
     $315 = HEAP32[$314 >> 2] | 0;
     if ($315 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$315 >> 2] = 0;
      HEAP32[$315 + 4 >> 2] = 0;
      HEAP32[$315 + 8 >> 2] = 0;
      HEAP32[$315 + 12 >> 2] = $$sroa$0$0$copyload$i531605;
      HEAP32[$314 >> 2] = (HEAP32[$314 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($2 + 16 | 0, $3);
     $325 = $3 + 11 | 0;
     $326 = $3 + 4 | 0;
     $327 = $3 + 11 | 0;
     $328 = $3 + 4 | 0;
     $$0478 = $306;
     while (1) {
      if ($$0478 >>> 0 >= $312 >>> 0) {
       $$5 = $308;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_($3, (HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) + 12 | 0, 2);
      $332 = __ZNSt3__211char_traitsIcE6lengthEPKc(49623) | 0;
      $333 = HEAP8[$325 >> 0] | 0;
      if (($332 | 0) == (($333 << 24 >> 24 < 0 ? HEAP32[$326 >> 2] | 0 : $333 & 255) | 0)) $$0$i533 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($3, 49623, $332) | 0) == 0; else $$0$i533 = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $341 = HEAP32[$2 >> 2] | 0;
      $342 = $341 + ($$0478 * 24 | 0) | 0;
      if ($$0$i533) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($342, 49626) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) + 12 | 0, 0, 49629) | 0;
      } else {
       $345 = $341 + ($$0478 * 24 | 0) + 12 | 0;
       if ((HEAP8[$345 + 11 >> 0] | 0) < 0) $351 = HEAP32[$345 >> 2] | 0; else $351 = $345;
       if ((HEAP8[$351 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($342, 49631) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) + 12 | 0, 0, 49629) | 0;
       }
      }
      if ((HEAP8[$307 >> 0] | 0) == 85) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_($3, (HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) | 0, 12);
       $361 = __ZNSt3__211char_traitsIcE6lengthEPKc(49636) | 0;
       $362 = HEAP8[$327 >> 0] | 0;
       if (($361 | 0) == (($362 << 24 >> 24 < 0 ? HEAP32[$328 >> 2] | 0 : $362 & 255) | 0)) $$ph = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($3, 49636, $361) | 0) != 0; else $$ph = 1;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       $371 = (HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) | 0;
       if ($$ph) {
        $372 = $371;
        label = 113;
       } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKc($371);
      } else {
       $372 = (HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) | 0;
       label = 113;
      }
      if ((label | 0) == 113) {
       label = 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($372, 49649) | 0;
      }
      $373 = HEAP32[$314 >> 2] | 0;
      $375 = (HEAP32[$2 >> 2] | 0) + ($$0478 * 24 | 0) | 0;
      $376 = $373 + -12 | 0;
      $377 = HEAP32[$376 >> 2] | 0;
      if (($377 | 0) == (HEAP32[$373 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($373 + -16 | 0, $375); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($377, $375);
       HEAP32[$376 >> 2] = (HEAP32[$376 >> 2] | 0) + 24;
      }
      $$0478 = $$0478 + 1 | 0;
     }
     break;
    }
   case 82:
    {
     $385 = $2 + 4 | 0;
     $389 = ((HEAP32[$385 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     $390 = $0 + 1 | 0;
     $391 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($390, $1, $2) | 0;
     $395 = ((HEAP32[$385 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     if (($391 | 0) == ($390 | 0)) {
      $$5 = $0;
      break L1;
     }
     $$sroa$0$0$copyload$i538604 = HEAP32[$2 + 12 >> 2] | 0;
     HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i538604;
     $397 = $2 + 20 | 0;
     $398 = HEAP32[$397 >> 2] | 0;
     if ($398 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$398 >> 2] = 0;
      HEAP32[$398 + 4 >> 2] = 0;
      HEAP32[$398 + 8 >> 2] = 0;
      HEAP32[$398 + 12 >> 2] = $$sroa$0$0$copyload$i538604;
      HEAP32[$397 >> 2] = (HEAP32[$397 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($2 + 16 | 0, $3);
     $408 = $3 + 11 | 0;
     $409 = $3 + 4 | 0;
     $$0444 = $389;
     while (1) {
      if ($$0444 >>> 0 >= $395 >>> 0) {
       $$5 = $391;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_($3, (HEAP32[$2 >> 2] | 0) + ($$0444 * 24 | 0) + 12 | 0, 2);
      $413 = __ZNSt3__211char_traitsIcE6lengthEPKc(49623) | 0;
      $414 = HEAP8[$408 >> 0] | 0;
      if (($413 | 0) == (($414 << 24 >> 24 < 0 ? HEAP32[$409 >> 2] | 0 : $414 & 255) | 0)) $$0$i540 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($3, 49623, $413) | 0) == 0; else $$0$i540 = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $422 = HEAP32[$2 >> 2] | 0;
      $423 = $422 + ($$0444 * 24 | 0) | 0;
      if ($$0$i540) {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($423, 49626) | 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[$2 >> 2] | 0) + ($$0444 * 24 | 0) + 12 | 0, 0, 49629) | 0;
      } else {
       $426 = $422 + ($$0444 * 24 | 0) + 12 | 0;
       if ((HEAP8[$426 + 11 >> 0] | 0) < 0) $432 = HEAP32[$426 >> 2] | 0; else $432 = $426;
       if ((HEAP8[$432 >> 0] | 0) == 40) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($423, 49631) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[$2 >> 2] | 0) + ($$0444 * 24 | 0) + 12 | 0, 0, 49629) | 0;
       }
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$2 >> 2] | 0) + ($$0444 * 24 | 0) | 0, 49651) | 0;
      $438 = HEAP32[$397 >> 2] | 0;
      $440 = (HEAP32[$2 >> 2] | 0) + ($$0444 * 24 | 0) | 0;
      $441 = $438 + -12 | 0;
      $442 = HEAP32[$441 >> 2] | 0;
      if (($442 | 0) == (HEAP32[$438 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($438 + -16 | 0, $440); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($442, $440);
       HEAP32[$441 >> 2] = (HEAP32[$441 >> 2] | 0) + 24;
      }
      $$0444 = $$0444 + 1 | 0;
     }
     break;
    }
   case 84:
    {
     $450 = $2 + 4 | 0;
     $454 = ((HEAP32[$450 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     $455 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
     $459 = ((HEAP32[$450 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
     if (($455 | 0) == ($0 | 0)) {
      $$5 = $0;
      break L1;
     }
     $461 = $2 + 16 | 0;
     $$sroa$0$0$$sroa_idx$i544 = $2 + 12 | 0;
     $$sroa$0$0$copyload$i545602 = HEAP32[$$sroa$0$0$$sroa_idx$i544 >> 2] | 0;
     HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i545602;
     $462 = $2 + 20 | 0;
     $463 = HEAP32[$462 >> 2] | 0;
     $464 = $2 + 24 | 0;
     if ($463 >>> 0 < (HEAP32[$464 >> 2] | 0) >>> 0) {
      HEAP32[$463 >> 2] = 0;
      HEAP32[$463 + 4 >> 2] = 0;
      HEAP32[$463 + 8 >> 2] = 0;
      HEAP32[$463 + 12 >> 2] = $$sroa$0$0$copyload$i545602;
      HEAP32[$462 >> 2] = (HEAP32[$462 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($461, $3);
     $$0438 = $454;
     while (1) {
      if ($$0438 >>> 0 >= $459 >>> 0) break;
      $478 = HEAP32[$462 >> 2] | 0;
      $480 = (HEAP32[$2 >> 2] | 0) + ($$0438 * 24 | 0) | 0;
      $481 = $478 + -12 | 0;
      $482 = HEAP32[$481 >> 2] | 0;
      if (($482 | 0) == (HEAP32[$478 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($478 + -16 | 0, $480); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($482, $480);
       HEAP32[$481 >> 2] = (HEAP32[$481 >> 2] | 0) + 24;
      }
      $$0438 = $$0438 + 1 | 0;
     }
     if (!(($459 | 0) == ($454 + 1 | 0) & (HEAP8[$2 + 63 >> 0] | 0) != 0)) {
      $$5 = $455;
      break L1;
     }
     $490 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($455, $1, $2) | 0;
     if (($490 | 0) == ($455 | 0)) {
      $$5 = $455;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, (HEAP32[$450 >> 2] | 0) + -24 | 0);
     $494 = HEAP32[$450 >> 2] | 0;
     $$0$i$i$idx$i548 = 0;
     while (1) {
      if (($$0$i$i$idx$i548 | 0) == -1) break;
      $$0$i$i$add$i549 = $$0$i$i$idx$i548 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($494 + ($$0$i$i$add$i549 * 24 | 0) | 0);
      $$0$i$i$idx$i548 = $$0$i$i$add$i549;
     }
     HEAP32[$450 >> 2] = $494 + -24;
     $499 = HEAP8[$3 + 11 >> 0] | 0;
     $500 = $499 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($494 + -48 | 0, $500 ? HEAP32[$3 >> 2] | 0 : $3, $500 ? HEAP32[$3 + 4 >> 2] | 0 : $499 & 255) | 0;
     $508 = (HEAP32[$450 >> 2] | 0) + -24 | 0;
     HEAP32[$5 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i544 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($4, $508, $5);
     $509 = HEAP32[$462 >> 2] | 0;
     if ($509 >>> 0 < (HEAP32[$464 >> 2] | 0) >>> 0) {
      HEAP32[$509 >> 2] = 0;
      $513 = $509 + 4 | 0;
      HEAP32[$513 >> 2] = 0;
      $514 = $509 + 8 | 0;
      HEAP32[$514 >> 2] = 0;
      HEAP32[$509 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
      HEAP32[$509 >> 2] = HEAP32[$4 >> 2];
      $518 = $4 + 4 | 0;
      HEAP32[$513 >> 2] = HEAP32[$518 >> 2];
      $520 = $4 + 8 | 0;
      HEAP32[$514 >> 2] = HEAP32[$520 >> 2];
      HEAP32[$520 >> 2] = 0;
      HEAP32[$518 >> 2] = 0;
      HEAP32[$4 >> 2] = 0;
      HEAP32[$462 >> 2] = (HEAP32[$462 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($461, $4);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$5 = $490;
     break L1;
     break;
    }
   case 85:
    {
     $524 = $0 + 1 | 0;
     if (($524 | 0) == ($1 | 0)) {
      $$5 = $0;
      break L1;
     }
     $526 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($524, $1, $2) | 0;
     if (($526 | 0) == ($524 | 0)) {
      $$5 = $0;
      break L1;
     }
     $528 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($526, $1, $2) | 0;
     if (($528 | 0) == ($526 | 0)) {
      $$5 = $0;
      break L1;
     }
     $530 = $2 + 4 | 0;
     $531 = HEAP32[$530 >> 2] | 0;
     if ((($531 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$5 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $531 + -24 | 0);
     $538 = HEAP32[$530 >> 2] | 0;
     $$0$i$i$idx$i560 = 0;
     while (1) {
      if (($$0$i$i$idx$i560 | 0) == -1) break;
      $$0$i$i$add$i561 = $$0$i$i$idx$i560 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($538 + ($$0$i$i$add$i561 * 24 | 0) | 0);
      $$0$i$i$idx$i560 = $$0$i$i$add$i561;
     }
     HEAP32[$530 >> 2] = $538 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_($4, $538 + -48 | 0, 9);
     $542 = __ZNSt3__211char_traitsIcE6lengthEPKc(49653) | 0;
     $544 = HEAP8[$4 + 11 >> 0] | 0;
     if (($542 | 0) == (($544 << 24 >> 24 < 0 ? HEAP32[$4 + 4 >> 2] | 0 : $544 & 255) | 0)) {
      $552 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($4, 49653, $542) | 0) == 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      if ($552) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$530 >> 2] | 0) + -24 | 0);
       $571 = HEAP32[$530 >> 2] | 0;
       $$0$i$i$idx$i568 = 0;
       while (1) {
        if (($$0$i$i$idx$i568 | 0) == -1) break;
        $$0$i$i$add$i569 = $$0$i$i$idx$i568 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($571 + ($$0$i$i$add$i569 * 24 | 0) | 0);
        $$0$i$i$idx$i568 = $$0$i$i$add$i569;
       }
       HEAP32[$530 >> 2] = $571 + -24;
       $574 = $4 + 11 | 0;
       $575 = HEAP8[$574 >> 0] | 0;
       $576 = $575 << 24 >> 24 < 0;
       $578 = $4 + 4 | 0;
       $581 = $576 ? HEAP32[$4 >> 2] | 0 : $4;
       $585 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($581 + 9 | 0, $581 + ($576 ? HEAP32[$578 >> 2] | 0 : $575 & 255) | 0, $2) | 0;
       if (($585 | 0) == (((HEAP8[$574 >> 0] | 0) < 0 ? HEAP32[$4 >> 2] | 0 : $4) + 9 | 0)) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($7, $3, 49663);
        $611 = HEAP8[$574 >> 0] | 0;
        $612 = $611 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($7, $612 ? HEAP32[$4 >> 2] | 0 : $4, $612 ? HEAP32[$578 >> 2] | 0 : $611 & 255) | 0;
        HEAP32[$11 >> 2] = HEAP32[$7 >> 2];
        HEAP32[$11 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
        HEAP32[$11 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
        $$0$i$i$i582 = 0;
        while (1) {
         if (($$0$i$i$i582 | 0) == 3) break;
         HEAP32[$7 + ($$0$i$i$i582 << 2) >> 2] = 0;
         $$0$i$i$i582 = $$0$i$i$i582 + 1 | 0;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($5, $11);
        $621 = HEAP32[$530 >> 2] | 0;
        if ($621 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($621, $5);
         HEAP32[$530 >> 2] = (HEAP32[$530 >> 2] | 0) + 24;
        } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $5);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
       } else {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($9, $3, 49665);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($10, (HEAP32[$530 >> 2] | 0) + -24 | 0);
        $595 = HEAP8[$10 + 11 >> 0] | 0;
        $596 = $595 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($9, $596 ? HEAP32[$10 >> 2] | 0 : $10, $596 ? HEAP32[$10 + 4 >> 2] | 0 : $595 & 255) | 0;
        HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
        $$0$i$i$i575 = 0;
        while (1) {
         if (($$0$i$i$i575 | 0) == 3) break;
         HEAP32[$9 + ($$0$i$i$i575 << 2) >> 2] = 0;
         $$0$i$i$i575 = $$0$i$i$i575 + 1 | 0;
        }
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 49667) | 0;
        HEAP32[$8 >> 2] = HEAP32[$7 >> 2];
        HEAP32[$8 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
        HEAP32[$8 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
        $$0$i$i$i579 = 0;
        while (1) {
         if (($$0$i$i$i579 | 0) == 3) break;
         HEAP32[$7 + ($$0$i$i$i579 << 2) >> 2] = 0;
         $$0$i$i$i579 = $$0$i$i$i579 + 1 | 0;
        }
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($5, $8);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$530 >> 2] | 0) + -24 | 0, $5);
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($10);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      } else label = 167;
     } else {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      label = 167;
     }
     if ((label | 0) == 167) {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($5, $3, 49663);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, (HEAP32[$530 >> 2] | 0) + -24 | 0);
      $556 = HEAP8[$7 + 11 >> 0] | 0;
      $557 = $556 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($5, $557 ? HEAP32[$7 >> 2] | 0 : $7, $557 ? HEAP32[$7 + 4 >> 2] | 0 : $556 & 255) | 0;
      HEAP32[$6 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$6 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$6 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i = $$0$i$i$i + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $6);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$530 >> 2] | 0) + -24 | 0, $4);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     }
     $628 = (HEAP32[$530 >> 2] | 0) + -24 | 0;
     HEAP32[$5 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($4, $628, $5);
     $629 = $2 + 20 | 0;
     $630 = HEAP32[$629 >> 2] | 0;
     if ($630 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$630 >> 2] = 0;
      $635 = $630 + 4 | 0;
      HEAP32[$635 >> 2] = 0;
      $636 = $630 + 8 | 0;
      HEAP32[$636 >> 2] = 0;
      HEAP32[$630 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
      HEAP32[$630 >> 2] = HEAP32[$4 >> 2];
      $640 = $4 + 4 | 0;
      HEAP32[$635 >> 2] = HEAP32[$640 >> 2];
      $642 = $4 + 8 | 0;
      HEAP32[$636 >> 2] = HEAP32[$642 >> 2];
      HEAP32[$642 >> 2] = 0;
      HEAP32[$640 >> 2] = 0;
      HEAP32[$4 >> 2] = 0;
      HEAP32[$629 >> 2] = (HEAP32[$629 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $4);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$5 = $528;
     break L1;
     break;
    }
   case 83:
    {
     $647 = $0 + 1 | 0;
     if (($647 | 0) != ($1 | 0)) if ((HEAP8[$647 >> 0] | 0) == 116) {
      $651 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
      if (($651 | 0) == ($0 | 0)) {
       $$5 = $0;
       break L1;
      }
      $655 = HEAP32[$2 + 4 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($655 | 0)) {
       $$5 = $0;
       break L1;
      }
      HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $655 + -24 | 0, $4);
      $658 = $2 + 20 | 0;
      $659 = HEAP32[$658 >> 2] | 0;
      if ($659 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
       HEAP32[$659 >> 2] = 0;
       $664 = $659 + 4 | 0;
       HEAP32[$664 >> 2] = 0;
       $665 = $659 + 8 | 0;
       HEAP32[$665 >> 2] = 0;
       HEAP32[$659 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
       HEAP32[$659 >> 2] = HEAP32[$3 >> 2];
       $669 = $3 + 4 | 0;
       HEAP32[$664 >> 2] = HEAP32[$669 >> 2];
       $671 = $3 + 8 | 0;
       HEAP32[$665 >> 2] = HEAP32[$671 >> 2];
       HEAP32[$671 >> 2] = 0;
       HEAP32[$669 >> 2] = 0;
       HEAP32[$3 >> 2] = 0;
       HEAP32[$658 >> 2] = (HEAP32[$658 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
      $$5 = $651;
      break L1;
     }
     $676 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
     if (($676 | 0) == ($0 | 0)) {
      $$5 = $0;
      break L1;
     }
     $678 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($676, $1, $2) | 0;
     if (($678 | 0) == ($676 | 0)) {
      $$5 = $676;
      break L1;
     }
     $680 = $2 + 4 | 0;
     $681 = HEAP32[$680 >> 2] | 0;
     if ((($681 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$5 = $676;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $681 + -24 | 0);
     $688 = HEAP32[$680 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($688 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$680 >> 2] = $688 + -24;
     $693 = HEAP8[$3 + 11 >> 0] | 0;
     $694 = $693 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($688 + -48 | 0, $694 ? HEAP32[$3 >> 2] | 0 : $3, $694 ? HEAP32[$3 + 4 >> 2] | 0 : $693 & 255) | 0;
     $702 = (HEAP32[$680 >> 2] | 0) + -24 | 0;
     HEAP32[$5 >> 2] = HEAP32[$2 + 12 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($4, $702, $5);
     $703 = $2 + 20 | 0;
     $704 = HEAP32[$703 >> 2] | 0;
     if ($704 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
      HEAP32[$704 >> 2] = 0;
      $709 = $704 + 4 | 0;
      HEAP32[$709 >> 2] = 0;
      $710 = $704 + 8 | 0;
      HEAP32[$710 >> 2] = 0;
      HEAP32[$704 + 12 >> 2] = HEAP32[$4 + 12 >> 2];
      HEAP32[$704 >> 2] = HEAP32[$4 >> 2];
      $714 = $4 + 4 | 0;
      HEAP32[$709 >> 2] = HEAP32[$714 >> 2];
      $716 = $4 + 8 | 0;
      HEAP32[$710 >> 2] = HEAP32[$716 >> 2];
      HEAP32[$716 >> 2] = 0;
      HEAP32[$714 >> 2] = 0;
      HEAP32[$4 >> 2] = 0;
      HEAP32[$703 >> 2] = (HEAP32[$703 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $4);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$5 = $678;
     break L1;
     break;
    }
   case 68:
    {
     $721 = $0 + 1 | 0;
     if (($721 | 0) != ($1 | 0)) switch (HEAP8[$721 >> 0] | 0) {
     case 112:
      {
       $725 = $2 + 4 | 0;
       $729 = ((HEAP32[$725 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
       $730 = $0 + 2 | 0;
       $731 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($730, $1, $2) | 0;
       $735 = ((HEAP32[$725 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
       if (($731 | 0) == ($730 | 0)) break L59;
       $$sroa$0$0$copyload$i490598 = HEAP32[$2 + 12 >> 2] | 0;
       HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i490598;
       $737 = $2 + 20 | 0;
       $738 = HEAP32[$737 >> 2] | 0;
       if ($738 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
        HEAP32[$738 >> 2] = 0;
        HEAP32[$738 + 4 >> 2] = 0;
        HEAP32[$738 + 8 >> 2] = 0;
        HEAP32[$738 + 12 >> 2] = $$sroa$0$0$copyload$i490598;
        HEAP32[$737 >> 2] = (HEAP32[$737 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($2 + 16 | 0, $3);
       $$0 = $729;
       while (1) {
        if ($$0 >>> 0 >= $735 >>> 0) {
         $$5 = $731;
         break L1;
        }
        $749 = HEAP32[$737 >> 2] | 0;
        $751 = (HEAP32[$2 >> 2] | 0) + ($$0 * 24 | 0) | 0;
        $752 = $749 + -12 | 0;
        $753 = HEAP32[$752 >> 2] | 0;
        if (($753 | 0) == (HEAP32[$749 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($749 + -16 | 0, $751); else {
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($753, $751);
         HEAP32[$752 >> 2] = (HEAP32[$752 >> 2] | 0) + 24;
        }
        $$0 = $$0 + 1 | 0;
       }
       break;
      }
     case 84:
     case 116:
      {
       $761 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
       if (($761 | 0) == ($0 | 0)) break L59;
       $765 = HEAP32[$2 + 4 >> 2] | 0;
       if ((HEAP32[$2 >> 2] | 0) == ($765 | 0)) {
        $$5 = $0;
        break L1;
       }
       HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $765 + -24 | 0, $4);
       $768 = $2 + 20 | 0;
       $769 = HEAP32[$768 >> 2] | 0;
       if ($769 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
        HEAP32[$769 >> 2] = 0;
        $774 = $769 + 4 | 0;
        HEAP32[$774 >> 2] = 0;
        $775 = $769 + 8 | 0;
        HEAP32[$775 >> 2] = 0;
        HEAP32[$769 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
        HEAP32[$769 >> 2] = HEAP32[$3 >> 2];
        $779 = $3 + 4 | 0;
        HEAP32[$774 >> 2] = HEAP32[$779 >> 2];
        $781 = $3 + 8 | 0;
        HEAP32[$775 >> 2] = HEAP32[$781 >> 2];
        HEAP32[$781 >> 2] = 0;
        HEAP32[$779 >> 2] = 0;
        HEAP32[$3 >> 2] = 0;
        HEAP32[$768 >> 2] = (HEAP32[$768 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
       $$5 = $761;
       break L1;
       break;
      }
     case 118:
      {
       $786 = __ZN10__cxxabiv112_GLOBAL__N_117parse_vector_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
       if (($786 | 0) == ($0 | 0)) break L59;
       $790 = HEAP32[$2 + 4 >> 2] | 0;
       if ((HEAP32[$2 >> 2] | 0) == ($790 | 0)) {
        $$5 = $0;
        break L1;
       }
       HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $790 + -24 | 0, $4);
       $793 = $2 + 20 | 0;
       $794 = HEAP32[$793 >> 2] | 0;
       if ($794 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
        HEAP32[$794 >> 2] = 0;
        $799 = $794 + 4 | 0;
        HEAP32[$799 >> 2] = 0;
        $800 = $794 + 8 | 0;
        HEAP32[$800 >> 2] = 0;
        HEAP32[$794 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
        HEAP32[$794 >> 2] = HEAP32[$3 >> 2];
        $804 = $3 + 4 | 0;
        HEAP32[$799 >> 2] = HEAP32[$804 >> 2];
        $806 = $3 + 8 | 0;
        HEAP32[$800 >> 2] = HEAP32[$806 >> 2];
        HEAP32[$806 >> 2] = 0;
        HEAP32[$804 >> 2] = 0;
        HEAP32[$3 >> 2] = 0;
        HEAP32[$793 >> 2] = (HEAP32[$793 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
       $$5 = $786;
       break L1;
       break;
      }
     default:
      break L59;
     }
     break;
    }
   default:
    {}
   } while (0);
   $811 = __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   if (($811 | 0) == ($0 | 0)) {
    $813 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    if (($813 | 0) == ($0 | 0)) $$5 = $0; else {
     $817 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($817 | 0)) $$5 = $0; else {
      HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $817 + -24 | 0, $4);
      $820 = $2 + 20 | 0;
      $821 = HEAP32[$820 >> 2] | 0;
      if ($821 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
       HEAP32[$821 >> 2] = 0;
       $826 = $821 + 4 | 0;
       HEAP32[$826 >> 2] = 0;
       $827 = $821 + 8 | 0;
       HEAP32[$827 >> 2] = 0;
       HEAP32[$821 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
       HEAP32[$821 >> 2] = HEAP32[$3 >> 2];
       $831 = $3 + 4 | 0;
       HEAP32[$826 >> 2] = HEAP32[$831 >> 2];
       $833 = $3 + 8 | 0;
       HEAP32[$827 >> 2] = HEAP32[$833 >> 2];
       HEAP32[$833 >> 2] = 0;
       HEAP32[$831 >> 2] = 0;
       HEAP32[$3 >> 2] = 0;
       HEAP32[$820 >> 2] = (HEAP32[$820 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
      $$5 = $813;
     }
    }
   } else $$5 = $811;
  } else $$5 = $102;
 } while (0);
 STACKTOP = sp;
 return $$5 | 0;
}

function _malloc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i16$i = 0, $$0187$i = 0, $$0189$i = 0, $$0190$i = 0, $$0191$i = 0, $$0197 = 0, $$0199 = 0, $$02065$i$i = 0, $$0207$lcssa$i$i = 0, $$02074$i$i = 0, $$0211$i$i = 0, $$0212$i$i = 0, $$024372$i = 0, $$0286$i$i = 0, $$028711$i$i = 0, $$0288$lcssa$i$i = 0, $$028810$i$i = 0, $$0294$i$i = 0, $$0295$i$i = 0, $$0340$i = 0, $$034217$i = 0, $$0343$lcssa$i = 0, $$034316$i = 0, $$0345$i = 0, $$0351$i = 0, $$0357$i = 0, $$0358$i = 0, $$0360$i = 0, $$0361$i = 0, $$0367$i = 0, $$1194$i = 0, $$1194$i$be = 0, $$1194$i$ph = 0, $$1196$i = 0, $$1196$i$be = 0, $$1196$i$ph = 0, $$124471$i = 0, $$1290$i$i = 0, $$1290$i$i$be = 0, $$1290$i$i$ph = 0, $$1292$i$i = 0, $$1292$i$i$be = 0, $$1292$i$i$ph = 0, $$1341$i = 0, $$1346$i = 0, $$1362$i = 0, $$1369$i = 0, $$1369$i$be = 0, $$1369$i$ph = 0, $$1373$i = 0, $$1373$i$be = 0, $$1373$i$ph = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2353$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i203 = 0, $$3$i203218 = 0, $$3348$i = 0, $$3371$i = 0, $$4$lcssa$i = 0, $$420$i = 0, $$420$i$ph = 0, $$4236$i = 0, $$4349$lcssa$i = 0, $$434919$i = 0, $$434919$i$ph = 0, $$4355$i = 0, $$535618$i = 0, $$535618$i$ph = 0, $$723947$i = 0, $$748$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i18$iZ2D = 0, $$pre$phi$i209Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi17$i$iZ2D = 0, $$pre$phiZ2D = 0, $1 = 0, $1000 = 0, $1003 = 0, $1008 = 0, $101 = 0, $1014 = 0, $1017 = 0, $1018 = 0, $102 = 0, $1025 = 0, $1037 = 0, $1042 = 0, $1049 = 0, $1050 = 0, $1051 = 0, $1060 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1070 = 0, $108 = 0, $112 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $121 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $134 = 0, $14 = 0, $140 = 0, $143 = 0, $146 = 0, $149 = 0, $150 = 0, $151 = 0, $153 = 0, $156 = 0, $158 = 0, $16 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $17 = 0, $170 = 0, $172 = 0, $173 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $18 = 0, $184 = 0, $185 = 0, $19 = 0, $193 = 0, $198 = 0, $20 = 0, $202 = 0, $208 = 0, $215 = 0, $219 = 0, $228 = 0, $229 = 0, $231 = 0, $232 = 0, $236 = 0, $237 = 0, $245 = 0, $246 = 0, $247 = 0, $249 = 0, $250 = 0, $255 = 0, $256 = 0, $259 = 0, $261 = 0, $264 = 0, $269 = 0, $27 = 0, $276 = 0, $286 = 0, $290 = 0, $299 = 0, $30 = 0, $302 = 0, $306 = 0, $308 = 0, $309 = 0, $311 = 0, $313 = 0, $315 = 0, $317 = 0, $319 = 0, $321 = 0, $323 = 0, $333 = 0, $334 = 0, $336 = 0, $34 = 0, $340 = 0, $346 = 0, $348 = 0, $351 = 0, $353 = 0, $356 = 0, $358 = 0, $361 = 0, $364 = 0, $365 = 0, $367 = 0, $368 = 0, $37 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $379 = 0, $380 = 0, $385 = 0, $388 = 0, $393 = 0, $397 = 0, $403 = 0, $41 = 0, $410 = 0, $414 = 0, $422 = 0, $425 = 0, $426 = 0, $427 = 0, $431 = 0, $432 = 0, $438 = 0, $44 = 0, $443 = 0, $444 = 0, $447 = 0, $449 = 0, $452 = 0, $457 = 0, $463 = 0, $465 = 0, $467 = 0, $469 = 0, $47 = 0, $475 = 0, $487 = 0, $49 = 0, $492 = 0, $499 = 0, $50 = 0, $500 = 0, $501 = 0, $510 = 0, $512 = 0, $513 = 0, $515 = 0, $52 = 0, $524 = 0, $528 = 0, $530 = 0, $531 = 0, $532 = 0, $54 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $550 = 0, $552 = 0, $553 = 0, $559 = 0, $56 = 0, $561 = 0, $568 = 0, $570 = 0, $572 = 0, $573 = 0, $574 = 0, $58 = 0, $582 = 0, $583 = 0, $586 = 0, $590 = 0, $593 = 0, $596 = 0, $6 = 0, $60 = 0, $602 = 0, $606 = 0, $610 = 0, $619 = 0, $62 = 0, $620 = 0, $626 = 0, $628 = 0, $632 = 0, $635 = 0, $637 = 0, $64 = 0, $641 = 0, $643 = 0, $648 = 0, $649 = 0, $650 = 0, $656 = 0, $658 = 0, $662 = 0, $664 = 0, $67 = 0, $673 = 0, $675 = 0, $680 = 0, $681 = 0, $682 = 0, $688 = 0, $69 = 0, $690 = 0, $694 = 0, $7 = 0, $70 = 0, $700 = 0, $704 = 0, $71 = 0, $710 = 0, $712 = 0, $718 = 0, $72 = 0, $722 = 0, $723 = 0, $728 = 0, $73 = 0, $734 = 0, $739 = 0, $742 = 0, $743 = 0, $746 = 0, $748 = 0, $750 = 0, $752 = 0, $764 = 0, $769 = 0, $77 = 0, $771 = 0, $774 = 0, $776 = 0, $779 = 0, $782 = 0, $783 = 0, $784 = 0, $786 = 0, $788 = 0, $789 = 0, $791 = 0, $792 = 0, $797 = 0, $798 = 0, $8 = 0, $80 = 0, $807 = 0, $812 = 0, $815 = 0, $816 = 0, $822 = 0, $83 = 0, $830 = 0, $836 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $845 = 0, $846 = 0, $852 = 0, $857 = 0, $858 = 0, $861 = 0, $863 = 0, $866 = 0, $87 = 0, $871 = 0, $877 = 0, $879 = 0, $881 = 0, $882 = 0, $889 = 0, $9 = 0, $901 = 0, $906 = 0, $913 = 0, $914 = 0, $915 = 0, $92 = 0, $923 = 0, $927 = 0, $93 = 0, $931 = 0, $933 = 0, $939 = 0, $940 = 0, $942 = 0, $943 = 0, $945 = 0, $947 = 0, $95 = 0, $952 = 0, $953 = 0, $954 = 0, $96 = 0, $960 = 0, $962 = 0, $968 = 0, $973 = 0, $976 = 0, $977 = 0, $978 = 0, $98 = 0, $982 = 0, $983 = 0, $989 = 0, $994 = 0, $995 = 0, $998 = 0, $spec$select$i205 = 0, $spec$select3$i = 0, $spec$select49$i = 0, label = 0, sp = 0, $962$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 do if ($0 >>> 0 < 245) {
  $6 = $0 >>> 0 < 11 ? 16 : $0 + 11 & -8;
  $7 = $6 >>> 3;
  $8 = HEAP32[14080] | 0;
  $9 = $8 >>> $7;
  if ($9 & 3 | 0) {
   $14 = ($9 & 1 ^ 1) + $7 | 0;
   $16 = 56360 + ($14 << 1 << 2) | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   $19 = $18 + 8 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   do if (($20 | 0) == ($16 | 0)) HEAP32[14080] = $8 & ~(1 << $14); else {
    if ((HEAP32[14084] | 0) >>> 0 > $20 >>> 0) _abort();
    $27 = $20 + 12 | 0;
    if ((HEAP32[$27 >> 2] | 0) == ($18 | 0)) {
     HEAP32[$27 >> 2] = $16;
     HEAP32[$17 >> 2] = $20;
     break;
    } else _abort();
   } while (0);
   $30 = $14 << 3;
   HEAP32[$18 + 4 >> 2] = $30 | 3;
   $34 = $18 + $30 + 4 | 0;
   HEAP32[$34 >> 2] = HEAP32[$34 >> 2] | 1;
   $$0 = $19;
   STACKTOP = sp;
   return $$0 | 0;
  }
  $37 = HEAP32[14082] | 0;
  if ($6 >>> 0 > $37 >>> 0) {
   if ($9 | 0) {
    $41 = 2 << $7;
    $44 = $9 << $7 & ($41 | 0 - $41);
    $47 = ($44 & 0 - $44) + -1 | 0;
    $49 = $47 >>> 12 & 16;
    $50 = $47 >>> $49;
    $52 = $50 >>> 5 & 8;
    $54 = $50 >>> $52;
    $56 = $54 >>> 2 & 4;
    $58 = $54 >>> $56;
    $60 = $58 >>> 1 & 2;
    $62 = $58 >>> $60;
    $64 = $62 >>> 1 & 1;
    $67 = ($52 | $49 | $56 | $60 | $64) + ($62 >>> $64) | 0;
    $69 = 56360 + ($67 << 1 << 2) | 0;
    $70 = $69 + 8 | 0;
    $71 = HEAP32[$70 >> 2] | 0;
    $72 = $71 + 8 | 0;
    $73 = HEAP32[$72 >> 2] | 0;
    do if (($73 | 0) == ($69 | 0)) {
     $77 = $8 & ~(1 << $67);
     HEAP32[14080] = $77;
     $98 = $77;
    } else {
     if ((HEAP32[14084] | 0) >>> 0 > $73 >>> 0) _abort();
     $80 = $73 + 12 | 0;
     if ((HEAP32[$80 >> 2] | 0) == ($71 | 0)) {
      HEAP32[$80 >> 2] = $69;
      HEAP32[$70 >> 2] = $73;
      $98 = $8;
      break;
     } else _abort();
    } while (0);
    $83 = $67 << 3;
    $84 = $83 - $6 | 0;
    HEAP32[$71 + 4 >> 2] = $6 | 3;
    $87 = $71 + $6 | 0;
    HEAP32[$87 + 4 >> 2] = $84 | 1;
    HEAP32[$71 + $83 >> 2] = $84;
    if ($37 | 0) {
     $92 = HEAP32[14085] | 0;
     $93 = $37 >>> 3;
     $95 = 56360 + ($93 << 1 << 2) | 0;
     $96 = 1 << $93;
     if (!($98 & $96)) {
      HEAP32[14080] = $98 | $96;
      $$0199 = $95;
      $$pre$phiZ2D = $95 + 8 | 0;
     } else {
      $101 = $95 + 8 | 0;
      $102 = HEAP32[$101 >> 2] | 0;
      if ((HEAP32[14084] | 0) >>> 0 > $102 >>> 0) _abort(); else {
       $$0199 = $102;
       $$pre$phiZ2D = $101;
      }
     }
     HEAP32[$$pre$phiZ2D >> 2] = $92;
     HEAP32[$$0199 + 12 >> 2] = $92;
     HEAP32[$92 + 8 >> 2] = $$0199;
     HEAP32[$92 + 12 >> 2] = $95;
    }
    HEAP32[14082] = $84;
    HEAP32[14085] = $87;
    $$0 = $72;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $108 = HEAP32[14081] | 0;
   if (!$108) $$0197 = $6; else {
    $112 = ($108 & 0 - $108) + -1 | 0;
    $114 = $112 >>> 12 & 16;
    $115 = $112 >>> $114;
    $117 = $115 >>> 5 & 8;
    $119 = $115 >>> $117;
    $121 = $119 >>> 2 & 4;
    $123 = $119 >>> $121;
    $125 = $123 >>> 1 & 2;
    $127 = $123 >>> $125;
    $129 = $127 >>> 1 & 1;
    $134 = HEAP32[56624 + (($117 | $114 | $121 | $125 | $129) + ($127 >>> $129) << 2) >> 2] | 0;
    $$0189$i = $134;
    $$0190$i = $134;
    $$0191$i = (HEAP32[$134 + 4 >> 2] & -8) - $6 | 0;
    while (1) {
     $140 = HEAP32[$$0189$i + 16 >> 2] | 0;
     if (!$140) {
      $143 = HEAP32[$$0189$i + 20 >> 2] | 0;
      if (!$143) break; else $146 = $143;
     } else $146 = $140;
     $149 = (HEAP32[$146 + 4 >> 2] & -8) - $6 | 0;
     $150 = $149 >>> 0 < $$0191$i >>> 0;
     $$0189$i = $146;
     $$0190$i = $150 ? $146 : $$0190$i;
     $$0191$i = $150 ? $149 : $$0191$i;
    }
    $151 = HEAP32[14084] | 0;
    if ($151 >>> 0 > $$0190$i >>> 0) _abort();
    $153 = $$0190$i + $6 | 0;
    if ($153 >>> 0 <= $$0190$i >>> 0) _abort();
    $156 = HEAP32[$$0190$i + 24 >> 2] | 0;
    $158 = HEAP32[$$0190$i + 12 >> 2] | 0;
    do if (($158 | 0) == ($$0190$i | 0)) {
     $169 = $$0190$i + 20 | 0;
     $170 = HEAP32[$169 >> 2] | 0;
     if (!$170) {
      $172 = $$0190$i + 16 | 0;
      $173 = HEAP32[$172 >> 2] | 0;
      if (!$173) {
       $$3$i = 0;
       break;
      } else {
       $$1194$i$ph = $173;
       $$1196$i$ph = $172;
      }
     } else {
      $$1194$i$ph = $170;
      $$1196$i$ph = $169;
     }
     $$1194$i = $$1194$i$ph;
     $$1196$i = $$1196$i$ph;
     while (1) {
      $175 = $$1194$i + 20 | 0;
      $176 = HEAP32[$175 >> 2] | 0;
      if (!$176) {
       $178 = $$1194$i + 16 | 0;
       $179 = HEAP32[$178 >> 2] | 0;
       if (!$179) break; else {
        $$1194$i$be = $179;
        $$1196$i$be = $178;
       }
      } else {
       $$1194$i$be = $176;
       $$1196$i$be = $175;
      }
      $$1194$i = $$1194$i$be;
      $$1196$i = $$1196$i$be;
     }
     if ($151 >>> 0 > $$1196$i >>> 0) _abort(); else {
      HEAP32[$$1196$i >> 2] = 0;
      $$3$i = $$1194$i;
      break;
     }
    } else {
     $161 = HEAP32[$$0190$i + 8 >> 2] | 0;
     if ($151 >>> 0 > $161 >>> 0) _abort();
     $163 = $161 + 12 | 0;
     if ((HEAP32[$163 >> 2] | 0) != ($$0190$i | 0)) _abort();
     $166 = $158 + 8 | 0;
     if ((HEAP32[$166 >> 2] | 0) == ($$0190$i | 0)) {
      HEAP32[$163 >> 2] = $158;
      HEAP32[$166 >> 2] = $161;
      $$3$i = $158;
      break;
     } else _abort();
    } while (0);
    L78 : do if ($156 | 0) {
     $184 = HEAP32[$$0190$i + 28 >> 2] | 0;
     $185 = 56624 + ($184 << 2) | 0;
     do if (($$0190$i | 0) == (HEAP32[$185 >> 2] | 0)) {
      HEAP32[$185 >> 2] = $$3$i;
      if (!$$3$i) {
       HEAP32[14081] = $108 & ~(1 << $184);
       break L78;
      }
     } else if ((HEAP32[14084] | 0) >>> 0 > $156 >>> 0) _abort(); else {
      $193 = $156 + 16 | 0;
      HEAP32[((HEAP32[$193 >> 2] | 0) == ($$0190$i | 0) ? $193 : $156 + 20 | 0) >> 2] = $$3$i;
      if (!$$3$i) break L78; else break;
     } while (0);
     $198 = HEAP32[14084] | 0;
     if ($198 >>> 0 > $$3$i >>> 0) _abort();
     HEAP32[$$3$i + 24 >> 2] = $156;
     $202 = HEAP32[$$0190$i + 16 >> 2] | 0;
     do if ($202 | 0) if ($198 >>> 0 > $202 >>> 0) _abort(); else {
      HEAP32[$$3$i + 16 >> 2] = $202;
      HEAP32[$202 + 24 >> 2] = $$3$i;
      break;
     } while (0);
     $208 = HEAP32[$$0190$i + 20 >> 2] | 0;
     if ($208 | 0) if ((HEAP32[14084] | 0) >>> 0 > $208 >>> 0) _abort(); else {
      HEAP32[$$3$i + 20 >> 2] = $208;
      HEAP32[$208 + 24 >> 2] = $$3$i;
      break;
     }
    } while (0);
    if ($$0191$i >>> 0 < 16) {
     $215 = $$0191$i + $6 | 0;
     HEAP32[$$0190$i + 4 >> 2] = $215 | 3;
     $219 = $$0190$i + $215 + 4 | 0;
     HEAP32[$219 >> 2] = HEAP32[$219 >> 2] | 1;
    } else {
     HEAP32[$$0190$i + 4 >> 2] = $6 | 3;
     HEAP32[$153 + 4 >> 2] = $$0191$i | 1;
     HEAP32[$153 + $$0191$i >> 2] = $$0191$i;
     if ($37 | 0) {
      $228 = HEAP32[14085] | 0;
      $229 = $37 >>> 3;
      $231 = 56360 + ($229 << 1 << 2) | 0;
      $232 = 1 << $229;
      if (!($232 & $8)) {
       HEAP32[14080] = $232 | $8;
       $$0187$i = $231;
       $$pre$phi$iZ2D = $231 + 8 | 0;
      } else {
       $236 = $231 + 8 | 0;
       $237 = HEAP32[$236 >> 2] | 0;
       if ((HEAP32[14084] | 0) >>> 0 > $237 >>> 0) _abort(); else {
        $$0187$i = $237;
        $$pre$phi$iZ2D = $236;
       }
      }
      HEAP32[$$pre$phi$iZ2D >> 2] = $228;
      HEAP32[$$0187$i + 12 >> 2] = $228;
      HEAP32[$228 + 8 >> 2] = $$0187$i;
      HEAP32[$228 + 12 >> 2] = $231;
     }
     HEAP32[14082] = $$0191$i;
     HEAP32[14085] = $153;
    }
    $$0 = $$0190$i + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
  } else $$0197 = $6;
 } else if ($0 >>> 0 > 4294967231) $$0197 = -1; else {
  $245 = $0 + 11 | 0;
  $246 = $245 & -8;
  $247 = HEAP32[14081] | 0;
  if (!$247) $$0197 = $246; else {
   $249 = 0 - $246 | 0;
   $250 = $245 >>> 8;
   if (!$250) $$0357$i = 0; else if ($246 >>> 0 > 16777215) $$0357$i = 31; else {
    $255 = ($250 + 1048320 | 0) >>> 16 & 8;
    $256 = $250 << $255;
    $259 = ($256 + 520192 | 0) >>> 16 & 4;
    $261 = $256 << $259;
    $264 = ($261 + 245760 | 0) >>> 16 & 2;
    $269 = 14 - ($259 | $255 | $264) + ($261 << $264 >>> 15) | 0;
    $$0357$i = $246 >>> ($269 + 7 | 0) & 1 | $269 << 1;
   }
   $276 = HEAP32[56624 + ($$0357$i << 2) >> 2] | 0;
   L122 : do if (!$276) {
    $$2353$i = 0;
    $$3$i203 = 0;
    $$3348$i = $249;
    label = 85;
   } else {
    $$0340$i = 0;
    $$0345$i = $249;
    $$0351$i = $276;
    $$0358$i = $246 << (($$0357$i | 0) == 31 ? 0 : 25 - ($$0357$i >>> 1) | 0);
    $$0361$i = 0;
    while (1) {
     $286 = (HEAP32[$$0351$i + 4 >> 2] & -8) - $246 | 0;
     if ($286 >>> 0 < $$0345$i >>> 0) if (!$286) {
      $$420$i$ph = $$0351$i;
      $$434919$i$ph = 0;
      $$535618$i$ph = $$0351$i;
      label = 89;
      break L122;
     } else {
      $$1341$i = $$0351$i;
      $$1346$i = $286;
     } else {
      $$1341$i = $$0340$i;
      $$1346$i = $$0345$i;
     }
     $290 = HEAP32[$$0351$i + 20 >> 2] | 0;
     $$0351$i = HEAP32[$$0351$i + 16 + ($$0358$i >>> 31 << 2) >> 2] | 0;
     $$1362$i = ($290 | 0) == 0 | ($290 | 0) == ($$0351$i | 0) ? $$0361$i : $290;
     if (!$$0351$i) {
      $$2353$i = $$1362$i;
      $$3$i203 = $$1341$i;
      $$3348$i = $$1346$i;
      label = 85;
      break;
     } else {
      $$0340$i = $$1341$i;
      $$0345$i = $$1346$i;
      $$0358$i = $$0358$i << 1;
      $$0361$i = $$1362$i;
     }
    }
   } while (0);
   if ((label | 0) == 85) {
    if (($$2353$i | 0) == 0 & ($$3$i203 | 0) == 0) {
     $299 = 2 << $$0357$i;
     $302 = ($299 | 0 - $299) & $247;
     if (!$302) {
      $$0197 = $246;
      break;
     }
     $306 = ($302 & 0 - $302) + -1 | 0;
     $308 = $306 >>> 12 & 16;
     $309 = $306 >>> $308;
     $311 = $309 >>> 5 & 8;
     $313 = $309 >>> $311;
     $315 = $313 >>> 2 & 4;
     $317 = $313 >>> $315;
     $319 = $317 >>> 1 & 2;
     $321 = $317 >>> $319;
     $323 = $321 >>> 1 & 1;
     $$3$i203218 = 0;
     $$4355$i = HEAP32[56624 + (($311 | $308 | $315 | $319 | $323) + ($321 >>> $323) << 2) >> 2] | 0;
    } else {
     $$3$i203218 = $$3$i203;
     $$4355$i = $$2353$i;
    }
    if (!$$4355$i) {
     $$4$lcssa$i = $$3$i203218;
     $$4349$lcssa$i = $$3348$i;
    } else {
     $$420$i$ph = $$3$i203218;
     $$434919$i$ph = $$3348$i;
     $$535618$i$ph = $$4355$i;
     label = 89;
    }
   }
   if ((label | 0) == 89) {
    $$420$i = $$420$i$ph;
    $$434919$i = $$434919$i$ph;
    $$535618$i = $$535618$i$ph;
    while (1) {
     $333 = (HEAP32[$$535618$i + 4 >> 2] & -8) - $246 | 0;
     $334 = $333 >>> 0 < $$434919$i >>> 0;
     $spec$select$i205 = $334 ? $333 : $$434919$i;
     $spec$select3$i = $334 ? $$535618$i : $$420$i;
     $336 = HEAP32[$$535618$i + 16 >> 2] | 0;
     if (!$336) $340 = HEAP32[$$535618$i + 20 >> 2] | 0; else $340 = $336;
     if (!$340) {
      $$4$lcssa$i = $spec$select3$i;
      $$4349$lcssa$i = $spec$select$i205;
      break;
     } else {
      $$420$i = $spec$select3$i;
      $$434919$i = $spec$select$i205;
      $$535618$i = $340;
     }
    }
   }
   if (!$$4$lcssa$i) $$0197 = $246; else if ($$4349$lcssa$i >>> 0 < ((HEAP32[14082] | 0) - $246 | 0) >>> 0) {
    $346 = HEAP32[14084] | 0;
    if ($346 >>> 0 > $$4$lcssa$i >>> 0) _abort();
    $348 = $$4$lcssa$i + $246 | 0;
    if ($348 >>> 0 <= $$4$lcssa$i >>> 0) _abort();
    $351 = HEAP32[$$4$lcssa$i + 24 >> 2] | 0;
    $353 = HEAP32[$$4$lcssa$i + 12 >> 2] | 0;
    do if (($353 | 0) == ($$4$lcssa$i | 0)) {
     $364 = $$4$lcssa$i + 20 | 0;
     $365 = HEAP32[$364 >> 2] | 0;
     if (!$365) {
      $367 = $$4$lcssa$i + 16 | 0;
      $368 = HEAP32[$367 >> 2] | 0;
      if (!$368) {
       $$3371$i = 0;
       break;
      } else {
       $$1369$i$ph = $368;
       $$1373$i$ph = $367;
      }
     } else {
      $$1369$i$ph = $365;
      $$1373$i$ph = $364;
     }
     $$1369$i = $$1369$i$ph;
     $$1373$i = $$1373$i$ph;
     while (1) {
      $370 = $$1369$i + 20 | 0;
      $371 = HEAP32[$370 >> 2] | 0;
      if (!$371) {
       $373 = $$1369$i + 16 | 0;
       $374 = HEAP32[$373 >> 2] | 0;
       if (!$374) break; else {
        $$1369$i$be = $374;
        $$1373$i$be = $373;
       }
      } else {
       $$1369$i$be = $371;
       $$1373$i$be = $370;
      }
      $$1369$i = $$1369$i$be;
      $$1373$i = $$1373$i$be;
     }
     if ($346 >>> 0 > $$1373$i >>> 0) _abort(); else {
      HEAP32[$$1373$i >> 2] = 0;
      $$3371$i = $$1369$i;
      break;
     }
    } else {
     $356 = HEAP32[$$4$lcssa$i + 8 >> 2] | 0;
     if ($346 >>> 0 > $356 >>> 0) _abort();
     $358 = $356 + 12 | 0;
     if ((HEAP32[$358 >> 2] | 0) != ($$4$lcssa$i | 0)) _abort();
     $361 = $353 + 8 | 0;
     if ((HEAP32[$361 >> 2] | 0) == ($$4$lcssa$i | 0)) {
      HEAP32[$358 >> 2] = $353;
      HEAP32[$361 >> 2] = $356;
      $$3371$i = $353;
      break;
     } else _abort();
    } while (0);
    L176 : do if (!$351) $469 = $247; else {
     $379 = HEAP32[$$4$lcssa$i + 28 >> 2] | 0;
     $380 = 56624 + ($379 << 2) | 0;
     do if (($$4$lcssa$i | 0) == (HEAP32[$380 >> 2] | 0)) {
      HEAP32[$380 >> 2] = $$3371$i;
      if (!$$3371$i) {
       $385 = $247 & ~(1 << $379);
       HEAP32[14081] = $385;
       $469 = $385;
       break L176;
      }
     } else if ((HEAP32[14084] | 0) >>> 0 > $351 >>> 0) _abort(); else {
      $388 = $351 + 16 | 0;
      HEAP32[((HEAP32[$388 >> 2] | 0) == ($$4$lcssa$i | 0) ? $388 : $351 + 20 | 0) >> 2] = $$3371$i;
      if (!$$3371$i) {
       $469 = $247;
       break L176;
      } else break;
     } while (0);
     $393 = HEAP32[14084] | 0;
     if ($393 >>> 0 > $$3371$i >>> 0) _abort();
     HEAP32[$$3371$i + 24 >> 2] = $351;
     $397 = HEAP32[$$4$lcssa$i + 16 >> 2] | 0;
     do if ($397 | 0) if ($393 >>> 0 > $397 >>> 0) _abort(); else {
      HEAP32[$$3371$i + 16 >> 2] = $397;
      HEAP32[$397 + 24 >> 2] = $$3371$i;
      break;
     } while (0);
     $403 = HEAP32[$$4$lcssa$i + 20 >> 2] | 0;
     if (!$403) $469 = $247; else if ((HEAP32[14084] | 0) >>> 0 > $403 >>> 0) _abort(); else {
      HEAP32[$$3371$i + 20 >> 2] = $403;
      HEAP32[$403 + 24 >> 2] = $$3371$i;
      $469 = $247;
      break;
     }
    } while (0);
    L200 : do if ($$4349$lcssa$i >>> 0 < 16) {
     $410 = $$4349$lcssa$i + $246 | 0;
     HEAP32[$$4$lcssa$i + 4 >> 2] = $410 | 3;
     $414 = $$4$lcssa$i + $410 + 4 | 0;
     HEAP32[$414 >> 2] = HEAP32[$414 >> 2] | 1;
    } else {
     HEAP32[$$4$lcssa$i + 4 >> 2] = $246 | 3;
     HEAP32[$348 + 4 >> 2] = $$4349$lcssa$i | 1;
     HEAP32[$348 + $$4349$lcssa$i >> 2] = $$4349$lcssa$i;
     $422 = $$4349$lcssa$i >>> 3;
     if ($$4349$lcssa$i >>> 0 < 256) {
      $425 = 56360 + ($422 << 1 << 2) | 0;
      $426 = HEAP32[14080] | 0;
      $427 = 1 << $422;
      if (!($426 & $427)) {
       HEAP32[14080] = $426 | $427;
       $$0367$i = $425;
       $$pre$phi$i209Z2D = $425 + 8 | 0;
      } else {
       $431 = $425 + 8 | 0;
       $432 = HEAP32[$431 >> 2] | 0;
       if ((HEAP32[14084] | 0) >>> 0 > $432 >>> 0) _abort(); else {
        $$0367$i = $432;
        $$pre$phi$i209Z2D = $431;
       }
      }
      HEAP32[$$pre$phi$i209Z2D >> 2] = $348;
      HEAP32[$$0367$i + 12 >> 2] = $348;
      HEAP32[$348 + 8 >> 2] = $$0367$i;
      HEAP32[$348 + 12 >> 2] = $425;
      break;
     }
     $438 = $$4349$lcssa$i >>> 8;
     if (!$438) $$0360$i = 0; else if ($$4349$lcssa$i >>> 0 > 16777215) $$0360$i = 31; else {
      $443 = ($438 + 1048320 | 0) >>> 16 & 8;
      $444 = $438 << $443;
      $447 = ($444 + 520192 | 0) >>> 16 & 4;
      $449 = $444 << $447;
      $452 = ($449 + 245760 | 0) >>> 16 & 2;
      $457 = 14 - ($447 | $443 | $452) + ($449 << $452 >>> 15) | 0;
      $$0360$i = $$4349$lcssa$i >>> ($457 + 7 | 0) & 1 | $457 << 1;
     }
     $463 = 56624 + ($$0360$i << 2) | 0;
     HEAP32[$348 + 28 >> 2] = $$0360$i;
     $465 = $348 + 16 | 0;
     HEAP32[$465 + 4 >> 2] = 0;
     HEAP32[$465 >> 2] = 0;
     $467 = 1 << $$0360$i;
     if (!($469 & $467)) {
      HEAP32[14081] = $469 | $467;
      HEAP32[$463 >> 2] = $348;
      HEAP32[$348 + 24 >> 2] = $463;
      HEAP32[$348 + 12 >> 2] = $348;
      HEAP32[$348 + 8 >> 2] = $348;
      break;
     }
     $475 = HEAP32[$463 >> 2] | 0;
     L218 : do if ((HEAP32[$475 + 4 >> 2] & -8 | 0) == ($$4349$lcssa$i | 0)) $$0343$lcssa$i = $475; else {
      $$034217$i = $$4349$lcssa$i << (($$0360$i | 0) == 31 ? 0 : 25 - ($$0360$i >>> 1) | 0);
      $$034316$i = $475;
      while (1) {
       $492 = $$034316$i + 16 + ($$034217$i >>> 31 << 2) | 0;
       $487 = HEAP32[$492 >> 2] | 0;
       if (!$487) break;
       if ((HEAP32[$487 + 4 >> 2] & -8 | 0) == ($$4349$lcssa$i | 0)) {
        $$0343$lcssa$i = $487;
        break L218;
       } else {
        $$034217$i = $$034217$i << 1;
        $$034316$i = $487;
       }
      }
      if ((HEAP32[14084] | 0) >>> 0 > $492 >>> 0) _abort(); else {
       HEAP32[$492 >> 2] = $348;
       HEAP32[$348 + 24 >> 2] = $$034316$i;
       HEAP32[$348 + 12 >> 2] = $348;
       HEAP32[$348 + 8 >> 2] = $348;
       break L200;
      }
     } while (0);
     $499 = $$0343$lcssa$i + 8 | 0;
     $500 = HEAP32[$499 >> 2] | 0;
     $501 = HEAP32[14084] | 0;
     if ($501 >>> 0 <= $500 >>> 0 & $501 >>> 0 <= $$0343$lcssa$i >>> 0) {
      HEAP32[$500 + 12 >> 2] = $348;
      HEAP32[$499 >> 2] = $348;
      HEAP32[$348 + 8 >> 2] = $500;
      HEAP32[$348 + 12 >> 2] = $$0343$lcssa$i;
      HEAP32[$348 + 24 >> 2] = 0;
      break;
     } else _abort();
    } while (0);
    $$0 = $$4$lcssa$i + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   } else $$0197 = $246;
  }
 } while (0);
 $510 = HEAP32[14082] | 0;
 if ($510 >>> 0 >= $$0197 >>> 0) {
  $512 = $510 - $$0197 | 0;
  $513 = HEAP32[14085] | 0;
  if ($512 >>> 0 > 15) {
   $515 = $513 + $$0197 | 0;
   HEAP32[14085] = $515;
   HEAP32[14082] = $512;
   HEAP32[$515 + 4 >> 2] = $512 | 1;
   HEAP32[$513 + $510 >> 2] = $512;
   HEAP32[$513 + 4 >> 2] = $$0197 | 3;
  } else {
   HEAP32[14082] = 0;
   HEAP32[14085] = 0;
   HEAP32[$513 + 4 >> 2] = $510 | 3;
   $524 = $513 + $510 + 4 | 0;
   HEAP32[$524 >> 2] = HEAP32[$524 >> 2] | 1;
  }
  $$0 = $513 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $528 = HEAP32[14083] | 0;
 if ($528 >>> 0 > $$0197 >>> 0) {
  $530 = $528 - $$0197 | 0;
  HEAP32[14083] = $530;
  $531 = HEAP32[14086] | 0;
  $532 = $531 + $$0197 | 0;
  HEAP32[14086] = $532;
  HEAP32[$532 + 4 >> 2] = $530 | 1;
  HEAP32[$531 + 4 >> 2] = $$0197 | 3;
  $$0 = $531 + 8 | 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 if (!(HEAP32[14198] | 0)) {
  HEAP32[14200] = 4096;
  HEAP32[14199] = 4096;
  HEAP32[14201] = -1;
  HEAP32[14202] = -1;
  HEAP32[14203] = 0;
  HEAP32[14191] = 0;
  HEAP32[14198] = $1 & -16 ^ 1431655768;
  $546 = 4096;
 } else $546 = HEAP32[14200] | 0;
 $543 = $$0197 + 48 | 0;
 $544 = $$0197 + 47 | 0;
 $545 = $546 + $544 | 0;
 $547 = 0 - $546 | 0;
 $548 = $545 & $547;
 if ($548 >>> 0 <= $$0197 >>> 0) {
  $$0 = 0;
  STACKTOP = sp;
  return $$0 | 0;
 }
 $550 = HEAP32[14190] | 0;
 if ($550 | 0) {
  $552 = HEAP32[14188] | 0;
  $553 = $552 + $548 | 0;
  if ($553 >>> 0 <= $552 >>> 0 | $553 >>> 0 > $550 >>> 0) {
   $$0 = 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 L257 : do if (!(HEAP32[14191] & 4)) {
  $559 = HEAP32[14086] | 0;
  L259 : do if (!$559) label = 173; else {
   $$0$i$i = 56768;
   while (1) {
    $561 = HEAP32[$$0$i$i >> 2] | 0;
    if ($561 >>> 0 <= $559 >>> 0) if (($561 + (HEAP32[$$0$i$i + 4 >> 2] | 0) | 0) >>> 0 > $559 >>> 0) break;
    $568 = HEAP32[$$0$i$i + 8 >> 2] | 0;
    if (!$568) {
     label = 173;
     break L259;
    } else $$0$i$i = $568;
   }
   $593 = $545 - $528 & $547;
   if ($593 >>> 0 < 2147483647) {
    $596 = _sbrk($593 | 0) | 0;
    if (($596 | 0) == ((HEAP32[$$0$i$i >> 2] | 0) + (HEAP32[$$0$i$i + 4 >> 2] | 0) | 0)) if (($596 | 0) == (-1 | 0)) $$2234243136$i = $593; else {
     $$723947$i = $593;
     $$748$i = $596;
     label = 190;
     break L257;
    } else {
     $$2247$ph$i = $596;
     $$2253$ph$i = $593;
     label = 181;
    }
   } else $$2234243136$i = 0;
  } while (0);
  do if ((label | 0) == 173) {
   $570 = _sbrk(0) | 0;
   if (($570 | 0) == (-1 | 0)) $$2234243136$i = 0; else {
    $572 = $570;
    $573 = HEAP32[14199] | 0;
    $574 = $573 + -1 | 0;
    $spec$select49$i = (($574 & $572 | 0) == 0 ? 0 : ($574 + $572 & 0 - $573) - $572 | 0) + $548 | 0;
    $582 = HEAP32[14188] | 0;
    $583 = $spec$select49$i + $582 | 0;
    if ($spec$select49$i >>> 0 > $$0197 >>> 0 & $spec$select49$i >>> 0 < 2147483647) {
     $586 = HEAP32[14190] | 0;
     if ($586 | 0) if ($583 >>> 0 <= $582 >>> 0 | $583 >>> 0 > $586 >>> 0) {
      $$2234243136$i = 0;
      break;
     }
     $590 = _sbrk($spec$select49$i | 0) | 0;
     if (($590 | 0) == ($570 | 0)) {
      $$723947$i = $spec$select49$i;
      $$748$i = $570;
      label = 190;
      break L257;
     } else {
      $$2247$ph$i = $590;
      $$2253$ph$i = $spec$select49$i;
      label = 181;
     }
    } else $$2234243136$i = 0;
   }
  } while (0);
  do if ((label | 0) == 181) {
   $602 = 0 - $$2253$ph$i | 0;
   if (!($543 >>> 0 > $$2253$ph$i >>> 0 & ($$2253$ph$i >>> 0 < 2147483647 & ($$2247$ph$i | 0) != (-1 | 0)))) if (($$2247$ph$i | 0) == (-1 | 0)) {
    $$2234243136$i = 0;
    break;
   } else {
    $$723947$i = $$2253$ph$i;
    $$748$i = $$2247$ph$i;
    label = 190;
    break L257;
   }
   $606 = HEAP32[14200] | 0;
   $610 = $544 - $$2253$ph$i + $606 & 0 - $606;
   if ($610 >>> 0 >= 2147483647) {
    $$723947$i = $$2253$ph$i;
    $$748$i = $$2247$ph$i;
    label = 190;
    break L257;
   }
   if ((_sbrk($610 | 0) | 0) == (-1 | 0)) {
    _sbrk($602 | 0) | 0;
    $$2234243136$i = 0;
    break;
   } else {
    $$723947$i = $610 + $$2253$ph$i | 0;
    $$748$i = $$2247$ph$i;
    label = 190;
    break L257;
   }
  } while (0);
  HEAP32[14191] = HEAP32[14191] | 4;
  $$4236$i = $$2234243136$i;
  label = 188;
 } else {
  $$4236$i = 0;
  label = 188;
 } while (0);
 if ((label | 0) == 188) if ($548 >>> 0 < 2147483647) {
  $619 = _sbrk($548 | 0) | 0;
  $620 = _sbrk(0) | 0;
  $626 = $620 - $619 | 0;
  $628 = $626 >>> 0 > ($$0197 + 40 | 0) >>> 0;
  if (!(($619 | 0) == (-1 | 0) | $628 ^ 1 | $619 >>> 0 < $620 >>> 0 & (($619 | 0) != (-1 | 0) & ($620 | 0) != (-1 | 0)) ^ 1)) {
   $$723947$i = $628 ? $626 : $$4236$i;
   $$748$i = $619;
   label = 190;
  }
 }
 if ((label | 0) == 190) {
  $632 = (HEAP32[14188] | 0) + $$723947$i | 0;
  HEAP32[14188] = $632;
  if ($632 >>> 0 > (HEAP32[14189] | 0) >>> 0) HEAP32[14189] = $632;
  $635 = HEAP32[14086] | 0;
  L294 : do if (!$635) {
   $637 = HEAP32[14084] | 0;
   if (($637 | 0) == 0 | $$748$i >>> 0 < $637 >>> 0) HEAP32[14084] = $$748$i;
   HEAP32[14192] = $$748$i;
   HEAP32[14193] = $$723947$i;
   HEAP32[14195] = 0;
   HEAP32[14089] = HEAP32[14198];
   HEAP32[14088] = -1;
   HEAP32[14093] = 56360;
   HEAP32[14092] = 56360;
   HEAP32[14095] = 56368;
   HEAP32[14094] = 56368;
   HEAP32[14097] = 56376;
   HEAP32[14096] = 56376;
   HEAP32[14099] = 56384;
   HEAP32[14098] = 56384;
   HEAP32[14101] = 56392;
   HEAP32[14100] = 56392;
   HEAP32[14103] = 56400;
   HEAP32[14102] = 56400;
   HEAP32[14105] = 56408;
   HEAP32[14104] = 56408;
   HEAP32[14107] = 56416;
   HEAP32[14106] = 56416;
   HEAP32[14109] = 56424;
   HEAP32[14108] = 56424;
   HEAP32[14111] = 56432;
   HEAP32[14110] = 56432;
   HEAP32[14113] = 56440;
   HEAP32[14112] = 56440;
   HEAP32[14115] = 56448;
   HEAP32[14114] = 56448;
   HEAP32[14117] = 56456;
   HEAP32[14116] = 56456;
   HEAP32[14119] = 56464;
   HEAP32[14118] = 56464;
   HEAP32[14121] = 56472;
   HEAP32[14120] = 56472;
   HEAP32[14123] = 56480;
   HEAP32[14122] = 56480;
   HEAP32[14125] = 56488;
   HEAP32[14124] = 56488;
   HEAP32[14127] = 56496;
   HEAP32[14126] = 56496;
   HEAP32[14129] = 56504;
   HEAP32[14128] = 56504;
   HEAP32[14131] = 56512;
   HEAP32[14130] = 56512;
   HEAP32[14133] = 56520;
   HEAP32[14132] = 56520;
   HEAP32[14135] = 56528;
   HEAP32[14134] = 56528;
   HEAP32[14137] = 56536;
   HEAP32[14136] = 56536;
   HEAP32[14139] = 56544;
   HEAP32[14138] = 56544;
   HEAP32[14141] = 56552;
   HEAP32[14140] = 56552;
   HEAP32[14143] = 56560;
   HEAP32[14142] = 56560;
   HEAP32[14145] = 56568;
   HEAP32[14144] = 56568;
   HEAP32[14147] = 56576;
   HEAP32[14146] = 56576;
   HEAP32[14149] = 56584;
   HEAP32[14148] = 56584;
   HEAP32[14151] = 56592;
   HEAP32[14150] = 56592;
   HEAP32[14153] = 56600;
   HEAP32[14152] = 56600;
   HEAP32[14155] = 56608;
   HEAP32[14154] = 56608;
   $641 = $$723947$i + -40 | 0;
   $643 = $$748$i + 8 | 0;
   $648 = ($643 & 7 | 0) == 0 ? 0 : 0 - $643 & 7;
   $649 = $$748$i + $648 | 0;
   $650 = $641 - $648 | 0;
   HEAP32[14086] = $649;
   HEAP32[14083] = $650;
   HEAP32[$649 + 4 >> 2] = $650 | 1;
   HEAP32[$$748$i + $641 + 4 >> 2] = 40;
   HEAP32[14087] = HEAP32[14202];
  } else {
   $$024372$i = 56768;
   while (1) {
    $656 = HEAP32[$$024372$i >> 2] | 0;
    $658 = HEAP32[$$024372$i + 4 >> 2] | 0;
    if (($$748$i | 0) == ($656 + $658 | 0)) {
     label = 199;
     break;
    }
    $662 = HEAP32[$$024372$i + 8 >> 2] | 0;
    if (!$662) break; else $$024372$i = $662;
   }
   if ((label | 0) == 199) {
    $664 = $$024372$i + 4 | 0;
    if (!(HEAP32[$$024372$i + 12 >> 2] & 8)) if ($$748$i >>> 0 > $635 >>> 0 & $656 >>> 0 <= $635 >>> 0) {
     HEAP32[$664 >> 2] = $658 + $$723947$i;
     $673 = (HEAP32[14083] | 0) + $$723947$i | 0;
     $675 = $635 + 8 | 0;
     $680 = ($675 & 7 | 0) == 0 ? 0 : 0 - $675 & 7;
     $681 = $635 + $680 | 0;
     $682 = $673 - $680 | 0;
     HEAP32[14086] = $681;
     HEAP32[14083] = $682;
     HEAP32[$681 + 4 >> 2] = $682 | 1;
     HEAP32[$635 + $673 + 4 >> 2] = 40;
     HEAP32[14087] = HEAP32[14202];
     break;
    }
   }
   $688 = HEAP32[14084] | 0;
   if ($$748$i >>> 0 < $688 >>> 0) {
    HEAP32[14084] = $$748$i;
    $752 = $$748$i;
   } else $752 = $688;
   $690 = $$748$i + $$723947$i | 0;
   $$124471$i = 56768;
   while (1) {
    if ((HEAP32[$$124471$i >> 2] | 0) == ($690 | 0)) {
     label = 207;
     break;
    }
    $694 = HEAP32[$$124471$i + 8 >> 2] | 0;
    if (!$694) break; else $$124471$i = $694;
   }
   if ((label | 0) == 207) if (!(HEAP32[$$124471$i + 12 >> 2] & 8)) {
    HEAP32[$$124471$i >> 2] = $$748$i;
    $700 = $$124471$i + 4 | 0;
    HEAP32[$700 >> 2] = (HEAP32[$700 >> 2] | 0) + $$723947$i;
    $704 = $$748$i + 8 | 0;
    $710 = $$748$i + (($704 & 7 | 0) == 0 ? 0 : 0 - $704 & 7) | 0;
    $712 = $690 + 8 | 0;
    $718 = $690 + (($712 & 7 | 0) == 0 ? 0 : 0 - $712 & 7) | 0;
    $722 = $710 + $$0197 | 0;
    $723 = $718 - $710 - $$0197 | 0;
    HEAP32[$710 + 4 >> 2] = $$0197 | 3;
    L317 : do if (($635 | 0) == ($718 | 0)) {
     $728 = (HEAP32[14083] | 0) + $723 | 0;
     HEAP32[14083] = $728;
     HEAP32[14086] = $722;
     HEAP32[$722 + 4 >> 2] = $728 | 1;
    } else {
     if ((HEAP32[14085] | 0) == ($718 | 0)) {
      $734 = (HEAP32[14082] | 0) + $723 | 0;
      HEAP32[14082] = $734;
      HEAP32[14085] = $722;
      HEAP32[$722 + 4 >> 2] = $734 | 1;
      HEAP32[$722 + $734 >> 2] = $734;
      break;
     }
     $739 = HEAP32[$718 + 4 >> 2] | 0;
     if (($739 & 3 | 0) == 1) {
      $742 = $739 & -8;
      $743 = $739 >>> 3;
      L325 : do if ($739 >>> 0 < 256) {
       $746 = HEAP32[$718 + 8 >> 2] | 0;
       $748 = HEAP32[$718 + 12 >> 2] | 0;
       $750 = 56360 + ($743 << 1 << 2) | 0;
       do if (($746 | 0) != ($750 | 0)) {
        if ($752 >>> 0 > $746 >>> 0) _abort();
        if ((HEAP32[$746 + 12 >> 2] | 0) == ($718 | 0)) break;
        _abort();
       } while (0);
       if (($748 | 0) == ($746 | 0)) {
        HEAP32[14080] = HEAP32[14080] & ~(1 << $743);
        break;
       }
       do if (($748 | 0) == ($750 | 0)) $$pre$phi17$i$iZ2D = $748 + 8 | 0; else {
        if ($752 >>> 0 > $748 >>> 0) _abort();
        $764 = $748 + 8 | 0;
        if ((HEAP32[$764 >> 2] | 0) == ($718 | 0)) {
         $$pre$phi17$i$iZ2D = $764;
         break;
        }
        _abort();
       } while (0);
       HEAP32[$746 + 12 >> 2] = $748;
       HEAP32[$$pre$phi17$i$iZ2D >> 2] = $746;
      } else {
       $769 = HEAP32[$718 + 24 >> 2] | 0;
       $771 = HEAP32[$718 + 12 >> 2] | 0;
       do if (($771 | 0) == ($718 | 0)) {
        $782 = $718 + 16 | 0;
        $783 = $782 + 4 | 0;
        $784 = HEAP32[$783 >> 2] | 0;
        if (!$784) {
         $786 = HEAP32[$782 >> 2] | 0;
         if (!$786) {
          $$3$i$i = 0;
          break;
         } else {
          $$1290$i$i$ph = $786;
          $$1292$i$i$ph = $782;
         }
        } else {
         $$1290$i$i$ph = $784;
         $$1292$i$i$ph = $783;
        }
        $$1290$i$i = $$1290$i$i$ph;
        $$1292$i$i = $$1292$i$i$ph;
        while (1) {
         $788 = $$1290$i$i + 20 | 0;
         $789 = HEAP32[$788 >> 2] | 0;
         if (!$789) {
          $791 = $$1290$i$i + 16 | 0;
          $792 = HEAP32[$791 >> 2] | 0;
          if (!$792) break; else {
           $$1290$i$i$be = $792;
           $$1292$i$i$be = $791;
          }
         } else {
          $$1290$i$i$be = $789;
          $$1292$i$i$be = $788;
         }
         $$1290$i$i = $$1290$i$i$be;
         $$1292$i$i = $$1292$i$i$be;
        }
        if ($752 >>> 0 > $$1292$i$i >>> 0) _abort(); else {
         HEAP32[$$1292$i$i >> 2] = 0;
         $$3$i$i = $$1290$i$i;
         break;
        }
       } else {
        $774 = HEAP32[$718 + 8 >> 2] | 0;
        if ($752 >>> 0 > $774 >>> 0) _abort();
        $776 = $774 + 12 | 0;
        if ((HEAP32[$776 >> 2] | 0) != ($718 | 0)) _abort();
        $779 = $771 + 8 | 0;
        if ((HEAP32[$779 >> 2] | 0) == ($718 | 0)) {
         HEAP32[$776 >> 2] = $771;
         HEAP32[$779 >> 2] = $774;
         $$3$i$i = $771;
         break;
        } else _abort();
       } while (0);
       if (!$769) break;
       $797 = HEAP32[$718 + 28 >> 2] | 0;
       $798 = 56624 + ($797 << 2) | 0;
       do if ((HEAP32[$798 >> 2] | 0) == ($718 | 0)) {
        HEAP32[$798 >> 2] = $$3$i$i;
        if ($$3$i$i | 0) break;
        HEAP32[14081] = HEAP32[14081] & ~(1 << $797);
        break L325;
       } else if ((HEAP32[14084] | 0) >>> 0 > $769 >>> 0) _abort(); else {
        $807 = $769 + 16 | 0;
        HEAP32[((HEAP32[$807 >> 2] | 0) == ($718 | 0) ? $807 : $769 + 20 | 0) >> 2] = $$3$i$i;
        if (!$$3$i$i) break L325; else break;
       } while (0);
       $812 = HEAP32[14084] | 0;
       if ($812 >>> 0 > $$3$i$i >>> 0) _abort();
       HEAP32[$$3$i$i + 24 >> 2] = $769;
       $815 = $718 + 16 | 0;
       $816 = HEAP32[$815 >> 2] | 0;
       do if ($816 | 0) if ($812 >>> 0 > $816 >>> 0) _abort(); else {
        HEAP32[$$3$i$i + 16 >> 2] = $816;
        HEAP32[$816 + 24 >> 2] = $$3$i$i;
        break;
       } while (0);
       $822 = HEAP32[$815 + 4 >> 2] | 0;
       if (!$822) break;
       if ((HEAP32[14084] | 0) >>> 0 > $822 >>> 0) _abort(); else {
        HEAP32[$$3$i$i + 20 >> 2] = $822;
        HEAP32[$822 + 24 >> 2] = $$3$i$i;
        break;
       }
      } while (0);
      $$0$i16$i = $718 + $742 | 0;
      $$0286$i$i = $742 + $723 | 0;
     } else {
      $$0$i16$i = $718;
      $$0286$i$i = $723;
     }
     $830 = $$0$i16$i + 4 | 0;
     HEAP32[$830 >> 2] = HEAP32[$830 >> 2] & -2;
     HEAP32[$722 + 4 >> 2] = $$0286$i$i | 1;
     HEAP32[$722 + $$0286$i$i >> 2] = $$0286$i$i;
     $836 = $$0286$i$i >>> 3;
     if ($$0286$i$i >>> 0 < 256) {
      $839 = 56360 + ($836 << 1 << 2) | 0;
      $840 = HEAP32[14080] | 0;
      $841 = 1 << $836;
      do if (!($840 & $841)) {
       HEAP32[14080] = $840 | $841;
       $$0294$i$i = $839;
       $$pre$phi$i18$iZ2D = $839 + 8 | 0;
      } else {
       $845 = $839 + 8 | 0;
       $846 = HEAP32[$845 >> 2] | 0;
       if ((HEAP32[14084] | 0) >>> 0 <= $846 >>> 0) {
        $$0294$i$i = $846;
        $$pre$phi$i18$iZ2D = $845;
        break;
       }
       _abort();
      } while (0);
      HEAP32[$$pre$phi$i18$iZ2D >> 2] = $722;
      HEAP32[$$0294$i$i + 12 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $$0294$i$i;
      HEAP32[$722 + 12 >> 2] = $839;
      break;
     }
     $852 = $$0286$i$i >>> 8;
     do if (!$852) $$0295$i$i = 0; else {
      if ($$0286$i$i >>> 0 > 16777215) {
       $$0295$i$i = 31;
       break;
      }
      $857 = ($852 + 1048320 | 0) >>> 16 & 8;
      $858 = $852 << $857;
      $861 = ($858 + 520192 | 0) >>> 16 & 4;
      $863 = $858 << $861;
      $866 = ($863 + 245760 | 0) >>> 16 & 2;
      $871 = 14 - ($861 | $857 | $866) + ($863 << $866 >>> 15) | 0;
      $$0295$i$i = $$0286$i$i >>> ($871 + 7 | 0) & 1 | $871 << 1;
     } while (0);
     $877 = 56624 + ($$0295$i$i << 2) | 0;
     HEAP32[$722 + 28 >> 2] = $$0295$i$i;
     $879 = $722 + 16 | 0;
     HEAP32[$879 + 4 >> 2] = 0;
     HEAP32[$879 >> 2] = 0;
     $881 = HEAP32[14081] | 0;
     $882 = 1 << $$0295$i$i;
     if (!($881 & $882)) {
      HEAP32[14081] = $881 | $882;
      HEAP32[$877 >> 2] = $722;
      HEAP32[$722 + 24 >> 2] = $877;
      HEAP32[$722 + 12 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $722;
      break;
     }
     $889 = HEAP32[$877 >> 2] | 0;
     L410 : do if ((HEAP32[$889 + 4 >> 2] & -8 | 0) == ($$0286$i$i | 0)) $$0288$lcssa$i$i = $889; else {
      $$028711$i$i = $$0286$i$i << (($$0295$i$i | 0) == 31 ? 0 : 25 - ($$0295$i$i >>> 1) | 0);
      $$028810$i$i = $889;
      while (1) {
       $906 = $$028810$i$i + 16 + ($$028711$i$i >>> 31 << 2) | 0;
       $901 = HEAP32[$906 >> 2] | 0;
       if (!$901) break;
       if ((HEAP32[$901 + 4 >> 2] & -8 | 0) == ($$0286$i$i | 0)) {
        $$0288$lcssa$i$i = $901;
        break L410;
       } else {
        $$028711$i$i = $$028711$i$i << 1;
        $$028810$i$i = $901;
       }
      }
      if ((HEAP32[14084] | 0) >>> 0 > $906 >>> 0) _abort(); else {
       HEAP32[$906 >> 2] = $722;
       HEAP32[$722 + 24 >> 2] = $$028810$i$i;
       HEAP32[$722 + 12 >> 2] = $722;
       HEAP32[$722 + 8 >> 2] = $722;
       break L317;
      }
     } while (0);
     $913 = $$0288$lcssa$i$i + 8 | 0;
     $914 = HEAP32[$913 >> 2] | 0;
     $915 = HEAP32[14084] | 0;
     if ($915 >>> 0 <= $914 >>> 0 & $915 >>> 0 <= $$0288$lcssa$i$i >>> 0) {
      HEAP32[$914 + 12 >> 2] = $722;
      HEAP32[$913 >> 2] = $722;
      HEAP32[$722 + 8 >> 2] = $914;
      HEAP32[$722 + 12 >> 2] = $$0288$lcssa$i$i;
      HEAP32[$722 + 24 >> 2] = 0;
      break;
     } else _abort();
    } while (0);
    $$0 = $710 + 8 | 0;
    STACKTOP = sp;
    return $$0 | 0;
   }
   $$0$i$i$i = 56768;
   while (1) {
    $923 = HEAP32[$$0$i$i$i >> 2] | 0;
    if ($923 >>> 0 <= $635 >>> 0) {
     $927 = $923 + (HEAP32[$$0$i$i$i + 4 >> 2] | 0) | 0;
     if ($927 >>> 0 > $635 >>> 0) break;
    }
    $$0$i$i$i = HEAP32[$$0$i$i$i + 8 >> 2] | 0;
   }
   $931 = $927 + -47 | 0;
   $933 = $931 + 8 | 0;
   $939 = $931 + (($933 & 7 | 0) == 0 ? 0 : 0 - $933 & 7) | 0;
   $940 = $635 + 16 | 0;
   $942 = $939 >>> 0 < $940 >>> 0 ? $635 : $939;
   $943 = $942 + 8 | 0;
   $945 = $$723947$i + -40 | 0;
   $947 = $$748$i + 8 | 0;
   $952 = ($947 & 7 | 0) == 0 ? 0 : 0 - $947 & 7;
   $953 = $$748$i + $952 | 0;
   $954 = $945 - $952 | 0;
   HEAP32[14086] = $953;
   HEAP32[14083] = $954;
   HEAP32[$953 + 4 >> 2] = $954 | 1;
   HEAP32[$$748$i + $945 + 4 >> 2] = 40;
   HEAP32[14087] = HEAP32[14202];
   $960 = $942 + 4 | 0;
   HEAP32[$960 >> 2] = 27;
   HEAP32[$943 >> 2] = HEAP32[14192];
   HEAP32[$943 + 4 >> 2] = HEAP32[14193];
   HEAP32[$943 + 8 >> 2] = HEAP32[14194];
   HEAP32[$943 + 12 >> 2] = HEAP32[14195];
   HEAP32[14192] = $$748$i;
   HEAP32[14193] = $$723947$i;
   HEAP32[14195] = 0;
   HEAP32[14194] = $943;
   $962 = $942 + 24 | 0;
   do {
    $962$looptemp = $962;
    $962 = $962 + 4 | 0;
    HEAP32[$962 >> 2] = 7;
   } while (($962$looptemp + 8 | 0) >>> 0 < $927 >>> 0);
   if (($942 | 0) != ($635 | 0)) {
    $968 = $942 - $635 | 0;
    HEAP32[$960 >> 2] = HEAP32[$960 >> 2] & -2;
    HEAP32[$635 + 4 >> 2] = $968 | 1;
    HEAP32[$942 >> 2] = $968;
    $973 = $968 >>> 3;
    if ($968 >>> 0 < 256) {
     $976 = 56360 + ($973 << 1 << 2) | 0;
     $977 = HEAP32[14080] | 0;
     $978 = 1 << $973;
     if (!($977 & $978)) {
      HEAP32[14080] = $977 | $978;
      $$0211$i$i = $976;
      $$pre$phi$i$iZ2D = $976 + 8 | 0;
     } else {
      $982 = $976 + 8 | 0;
      $983 = HEAP32[$982 >> 2] | 0;
      if ((HEAP32[14084] | 0) >>> 0 > $983 >>> 0) _abort(); else {
       $$0211$i$i = $983;
       $$pre$phi$i$iZ2D = $982;
      }
     }
     HEAP32[$$pre$phi$i$iZ2D >> 2] = $635;
     HEAP32[$$0211$i$i + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $$0211$i$i;
     HEAP32[$635 + 12 >> 2] = $976;
     break;
    }
    $989 = $968 >>> 8;
    if (!$989) $$0212$i$i = 0; else if ($968 >>> 0 > 16777215) $$0212$i$i = 31; else {
     $994 = ($989 + 1048320 | 0) >>> 16 & 8;
     $995 = $989 << $994;
     $998 = ($995 + 520192 | 0) >>> 16 & 4;
     $1000 = $995 << $998;
     $1003 = ($1000 + 245760 | 0) >>> 16 & 2;
     $1008 = 14 - ($998 | $994 | $1003) + ($1000 << $1003 >>> 15) | 0;
     $$0212$i$i = $968 >>> ($1008 + 7 | 0) & 1 | $1008 << 1;
    }
    $1014 = 56624 + ($$0212$i$i << 2) | 0;
    HEAP32[$635 + 28 >> 2] = $$0212$i$i;
    HEAP32[$635 + 20 >> 2] = 0;
    HEAP32[$940 >> 2] = 0;
    $1017 = HEAP32[14081] | 0;
    $1018 = 1 << $$0212$i$i;
    if (!($1017 & $1018)) {
     HEAP32[14081] = $1017 | $1018;
     HEAP32[$1014 >> 2] = $635;
     HEAP32[$635 + 24 >> 2] = $1014;
     HEAP32[$635 + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $635;
     break;
    }
    $1025 = HEAP32[$1014 >> 2] | 0;
    L451 : do if ((HEAP32[$1025 + 4 >> 2] & -8 | 0) == ($968 | 0)) $$0207$lcssa$i$i = $1025; else {
     $$02065$i$i = $968 << (($$0212$i$i | 0) == 31 ? 0 : 25 - ($$0212$i$i >>> 1) | 0);
     $$02074$i$i = $1025;
     while (1) {
      $1042 = $$02074$i$i + 16 + ($$02065$i$i >>> 31 << 2) | 0;
      $1037 = HEAP32[$1042 >> 2] | 0;
      if (!$1037) break;
      if ((HEAP32[$1037 + 4 >> 2] & -8 | 0) == ($968 | 0)) {
       $$0207$lcssa$i$i = $1037;
       break L451;
      } else {
       $$02065$i$i = $$02065$i$i << 1;
       $$02074$i$i = $1037;
      }
     }
     if ((HEAP32[14084] | 0) >>> 0 > $1042 >>> 0) _abort(); else {
      HEAP32[$1042 >> 2] = $635;
      HEAP32[$635 + 24 >> 2] = $$02074$i$i;
      HEAP32[$635 + 12 >> 2] = $635;
      HEAP32[$635 + 8 >> 2] = $635;
      break L294;
     }
    } while (0);
    $1049 = $$0207$lcssa$i$i + 8 | 0;
    $1050 = HEAP32[$1049 >> 2] | 0;
    $1051 = HEAP32[14084] | 0;
    if ($1051 >>> 0 <= $1050 >>> 0 & $1051 >>> 0 <= $$0207$lcssa$i$i >>> 0) {
     HEAP32[$1050 + 12 >> 2] = $635;
     HEAP32[$1049 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $1050;
     HEAP32[$635 + 12 >> 2] = $$0207$lcssa$i$i;
     HEAP32[$635 + 24 >> 2] = 0;
     break;
    } else _abort();
   }
  } while (0);
  $1060 = HEAP32[14083] | 0;
  if ($1060 >>> 0 > $$0197 >>> 0) {
   $1062 = $1060 - $$0197 | 0;
   HEAP32[14083] = $1062;
   $1063 = HEAP32[14086] | 0;
   $1064 = $1063 + $$0197 | 0;
   HEAP32[14086] = $1064;
   HEAP32[$1064 + 4 >> 2] = $1062 | 1;
   HEAP32[$1063 + 4 >> 2] = $$0197 | 3;
   $$0 = $1063 + 8 | 0;
   STACKTOP = sp;
   return $$0 | 0;
  }
 }
 $1070 = ___errno_location() | 0;
 HEAP32[$1070 >> 2] = 12;
 $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision25DoGScaleInvariantDetector15extractFeaturesEPKNS_25GaussianScaleSpacePyramidEPKNS_10DoGPyramidE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0750 = 0, $$0752 = 0, $$0753 = 0, $$0754 = 0, $$0756 = 0, $$0757 = 0, $$0759 = 0, $10 = 0, $102 = 0.0, $103 = 0, $105 = 0.0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $187 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $260 = 0.0, $262 = 0, $268 = 0, $272 = 0, $275 = 0, $283 = 0, $288 = 0, $292 = 0, $294 = 0, $3 = 0, $302 = 0, $307 = 0, $31 = 0, $311 = 0, $319 = 0, $32 = 0, $327 = 0, $328 = 0.0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0.0, $34 = 0, $340 = 0.0, $341 = 0.0, $342 = 0.0, $344 = 0, $348 = 0.0, $35 = 0, $350 = 0.0, $351 = 0.0, $352 = 0, $353 = 0, $359 = 0, $36 = 0, $37 = 0, $4 = 0, $40 = 0, $405 = 0.0, $408 = 0.0, $411 = 0.0, $412 = 0.0, $415 = 0.0, $418 = 0.0, $421 = 0.0, $424 = 0.0, $427 = 0.0, $43 = 0, $430 = 0.0, $433 = 0.0, $439 = 0, $485 = 0.0, $488 = 0.0, $491 = 0.0, $492 = 0.0, $495 = 0.0, $498 = 0.0, $501 = 0.0, $504 = 0.0, $507 = 0.0, $51 = 0, $510 = 0.0, $514 = 0.0, $515 = 0, $522 = 0, $526 = 0, $530 = 0, $538 = 0, $543 = 0, $547 = 0, $549 = 0, $557 = 0, $56 = 0, $562 = 0, $566 = 0, $568 = 0, $570 = 0, $571 = 0.0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $580 = 0, $583 = 0.0, $584 = 0.0, $585 = 0.0, $586 = 0.0, $588 = 0, $594 = 0.0, $595 = 0.0, $596 = 0, $597 = 0, $6 = 0, $60 = 0, $603 = 0, $61 = 0, $649 = 0.0, $652 = 0.0, $655 = 0.0, $656 = 0.0, $659 = 0.0, $662 = 0.0, $665 = 0.0, $668 = 0.0, $671 = 0.0, $674 = 0.0, $677 = 0.0, $683 = 0, $69 = 0, $729 = 0.0, $732 = 0.0, $735 = 0.0, $736 = 0.0, $739 = 0.0, $74 = 0, $742 = 0.0, $745 = 0.0, $748 = 0.0, $751 = 0.0, $754 = 0.0, $758 = 0.0, $760 = 0, $78 = 0, $80 = 0, $82 = 0, $83 = 0.0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0.0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0.0, $98 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp;
 $4 = $0 + 60 | 0;
 $6 = $0 + 64 | 0;
 HEAP32[$6 >> 2] = HEAP32[$4 >> 2];
 $9 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$0 + 52 >> 2]);
 $10 = $0 + 32 | 0;
 $11 = $3 + 12 | 0;
 $12 = $3 + 16 | 0;
 $13 = $3 + 24 | 0;
 $14 = $3 + 28 | 0;
 $15 = $3 + 4 | 0;
 $16 = $0 + 68 | 0;
 $17 = $3 + 12 | 0;
 $18 = $3 + 16 | 0;
 $19 = $3 + 24 | 0;
 $20 = $3 + 28 | 0;
 $21 = $3 + 4 | 0;
 $22 = $3 + 12 | 0;
 $23 = $3 + 16 | 0;
 $24 = $3 + 24 | 0;
 $25 = $3 + 28 | 0;
 $26 = $3 + 4 | 0;
 $$0750 = 1;
 L1 : while (1) {
  if ($$0750 >>> 0 >= ((__ZNK6vision10DoGPyramid4sizeEv($10) | 0) + -1 | 0) >>> 0) {
   label = 3;
   break;
  }
  $31 = __ZNK6vision10DoGPyramid3getEm($2, $$0750 + -1 | 0) | 0;
  $32 = __ZNK6vision10DoGPyramid3getEm($2, $$0750) | 0;
  $33 = $$0750 + 1 | 0;
  $34 = __ZNK6vision10DoGPyramid3getEm($2, $33) | 0;
  $35 = __ZNK6vision10DoGPyramid15octaveFromIndexEi($2, $$0750) | 0;
  $36 = __ZNK6vision10DoGPyramid14scaleFromIndexEi($2, $$0750) | 0;
  $37 = __ZNK6vision5Image5widthEv($31) | 0;
  L4 : do if (($37 | 0) == (__ZNK6vision5Image5widthEv($32) | 0)) {
   $40 = __ZNK6vision5Image5widthEv($31) | 0;
   if (($40 | 0) == (__ZNK6vision5Image5widthEv($34) | 0)) {
    $43 = __ZNK6vision5Image6heightEv($31) | 0;
    if (($43 | 0) != (__ZNK6vision5Image6heightEv($32) | 0)) {
     label = 7;
     break L1;
    }
    $61 = __ZNK6vision5Image6heightEv($31) | 0;
    if (($61 | 0) != (__ZNK6vision5Image6heightEv($34) | 0)) {
     label = 9;
     break L1;
    }
    $80 = (__ZNK6vision5Image5widthEv($32) | 0) + -1 | 0;
    $82 = (__ZNK6vision5Image6heightEv($32) | 0) + -1 | 0;
    $83 = +($36 | 0);
    $$0752 = 1;
    while (1) {
     if ($$0752 >>> 0 >= $82 >>> 0) break L4;
     $85 = $$0752 + -1 | 0;
     $86 = __ZNK6vision5Image3getIfEEPKT_m($31, $85) | 0;
     $87 = __ZNK6vision5Image3getIfEEPKT_m($31, $$0752) | 0;
     $88 = $$0752 + 1 | 0;
     $89 = __ZNK6vision5Image3getIfEEPKT_m($31, $88) | 0;
     $90 = __ZNK6vision5Image3getIfEEPKT_m($32, $85) | 0;
     $91 = __ZNK6vision5Image3getIfEEPKT_m($32, $$0752) | 0;
     $92 = __ZNK6vision5Image3getIfEEPKT_m($32, $88) | 0;
     $93 = __ZNK6vision5Image3getIfEEPKT_m($34, $85) | 0;
     $94 = __ZNK6vision5Image3getIfEEPKT_m($34, $$0752) | 0;
     $95 = __ZNK6vision5Image3getIfEEPKT_m($34, $88) | 0;
     $96 = +($$0752 >>> 0);
     $$0754 = 1;
     while (1) {
      if ($$0754 >>> 0 >= $80 >>> 0) break;
      $98 = $91 + ($$0754 << 2) | 0;
      do if (!(+__ZN6vision3sqrIfEET_S1_(+HEAPF32[$98 >> 2]) < $9)) {
       $102 = +HEAPF32[$98 >> 2];
       $103 = $$0754 + -1 | 0;
       $105 = +HEAPF32[$86 + ($103 << 2) >> 2];
       do if ($102 > $105) if ($102 > +HEAPF32[$86 + ($$0754 << 2) >> 2]) {
        $110 = $$0754 + 1 | 0;
        if ($102 > +HEAPF32[$86 + ($110 << 2) >> 2]) if ($102 > +HEAPF32[$87 + ($103 << 2) >> 2]) if ($102 > +HEAPF32[$87 + ($$0754 << 2) >> 2]) if ($102 > +HEAPF32[$87 + ($110 << 2) >> 2]) {
         if (!($102 > +HEAPF32[$89 + ($103 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$89 + ($$0754 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$89 + ($110 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$90 + ($103 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$90 + ($$0754 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$90 + ($110 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$91 + ($103 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$91 + ($110 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$92 + ($103 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$92 + ($$0754 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$92 + ($110 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$93 + ($103 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$93 + ($$0754 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$93 + ($110 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$94 + ($103 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$94 + ($$0754 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$94 + ($110 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$95 + ($103 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$95 + ($$0754 << 2) >> 2])) {
          label = 42;
          break;
         }
         if (!($102 > +HEAPF32[$95 + ($110 << 2) >> 2])) label = 42;
        } else label = 42; else label = 42; else label = 42; else label = 42;
       } else label = 42; else label = 42; while (0);
       if ((label | 0) == 42) {
        label = 0;
        if (!($102 < $105)) break;
        if (!($102 < +HEAPF32[$86 + ($$0754 << 2) >> 2])) break;
        $187 = $$0754 + 1 | 0;
        if (!($102 < +HEAPF32[$86 + ($187 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$87 + ($103 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$87 + ($$0754 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$87 + ($187 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$89 + ($103 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$89 + ($$0754 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$89 + ($187 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$90 + ($103 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$90 + ($$0754 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$90 + ($187 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$91 + ($103 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$91 + ($187 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$92 + ($103 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$92 + ($$0754 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$92 + ($187 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$93 + ($103 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$93 + ($$0754 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$93 + ($187 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$94 + ($103 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$94 + ($$0754 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$94 + ($187 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$95 + ($103 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$95 + ($$0754 << 2) >> 2])) break;
        if (!($102 < +HEAPF32[$95 + ($187 << 2) >> 2])) break;
       }
       HEAP32[$11 >> 2] = $35;
       HEAP32[$12 >> 2] = $36;
       HEAPF32[$13 >> 2] = $102;
       $260 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf($1, $35, $83);
       HEAPF32[$14 >> 2] = $260;
       __ZN6vision23bilinear_upsample_pointERfS0_ffi($3, $15, +($$0754 >>> 0), $96, $35);
       $262 = HEAP32[$6 >> 2] | 0;
       if (($262 | 0) == (HEAP32[$16 >> 2] | 0)) {
        __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($4, $3);
        break;
       } else {
        dest = $262;
        src = $3;
        stop = dest + 36 | 0;
        do {
         HEAP32[dest >> 2] = HEAP32[src >> 2];
         dest = dest + 4 | 0;
         src = src + 4 | 0;
        } while ((dest | 0) < (stop | 0));
        HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 36;
        break;
       }
      } while (0);
      $$0754 = $$0754 + 1 | 0;
     }
     $$0752 = $88;
    }
   } else label = 72;
  } else label = 72; while (0);
  L76 : do if ((label | 0) == 72) {
   label = 0;
   $268 = __ZNK6vision5Image5widthEv($31) | 0;
   if (($268 | 0) == (__ZNK6vision5Image5widthEv($32) | 0)) {
    $272 = (__ZNK6vision5Image5widthEv($32) | 0) >>> 1;
    if (($272 | 0) == (__ZNK6vision5Image5widthEv($34) | 0)) {
     $275 = __ZNK6vision5Image6heightEv($31) | 0;
     if (($275 | 0) != (__ZNK6vision5Image6heightEv($32) | 0)) {
      label = 75;
      break L1;
     }
     $294 = (__ZNK6vision5Image6heightEv($32) | 0) >>> 1;
     if (($294 | 0) != (__ZNK6vision5Image6heightEv($34) | 0)) {
      label = 77;
      break L1;
     }
     $319 = ~~+Math_floor(+((+(((__ZNK6vision5Image5widthEv($34) | 0) + -1 | 0) >>> 0) + -.5) * 2.0 + .5)) >>> 0;
     $327 = ~~+Math_floor(+((+(((__ZNK6vision5Image6heightEv($34) | 0) + -1 | 0) >>> 0) + -.5) * 2.0 + .5)) >>> 0;
     $328 = +($36 | 0);
     $$0756 = 2;
     while (1) {
      if ($$0756 >>> 0 >= $327 >>> 0) break L76;
      $330 = $$0756 + -1 | 0;
      $331 = __ZNK6vision5Image3getIfEEPKT_m($31, $330) | 0;
      $332 = __ZNK6vision5Image3getIfEEPKT_m($31, $$0756) | 0;
      $333 = $$0756 + 1 | 0;
      $334 = __ZNK6vision5Image3getIfEEPKT_m($31, $333) | 0;
      $335 = __ZNK6vision5Image3getIfEEPKT_m($32, $330) | 0;
      $336 = __ZNK6vision5Image3getIfEEPKT_m($32, $$0756) | 0;
      $337 = __ZNK6vision5Image3getIfEEPKT_m($32, $333) | 0;
      $338 = +($$0756 >>> 0);
      $340 = $338 * .5 + -.25;
      $341 = $340 + -.5;
      $342 = $340 + .5;
      $$0757 = 2;
      while (1) {
       if ($$0757 >>> 0 >= $319 >>> 0) break;
       $344 = $336 + ($$0757 << 2) | 0;
       do if (!(+__ZN6vision3sqrIfEET_S1_(+HEAPF32[$344 >> 2]) < $9)) {
        $348 = +($$0757 >>> 0);
        $350 = $348 * .5 + -.25;
        $351 = +HEAPF32[$344 >> 2];
        $352 = $$0757 + -1 | 0;
        $353 = $331 + ($352 << 2) | 0;
        do if ($351 > +HEAPF32[$353 >> 2]) if ($351 > +HEAPF32[$331 + ($$0757 << 2) >> 2]) {
         $359 = $$0757 + 1 | 0;
         if ($351 > +HEAPF32[$331 + ($359 << 2) >> 2]) if ($351 > +HEAPF32[$332 + ($352 << 2) >> 2]) {
          if (!($351 > +HEAPF32[$332 + ($$0757 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$332 + ($359 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$334 + ($352 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$334 + ($$0757 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$334 + ($359 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$335 + ($352 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$335 + ($$0757 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$335 + ($359 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$336 + ($352 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$336 + ($359 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$337 + ($352 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$337 + ($$0757 << 2) >> 2])) {
           label = 110;
           break;
          }
          if (!($351 > +HEAPF32[$337 + ($359 << 2) >> 2])) {
           label = 110;
           break;
          }
          $405 = $350 + -.5;
          if (!($351 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $405, $341))) {
           label = 110;
           break;
          }
          $408 = +HEAPF32[$344 >> 2];
          if (!($408 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $341))) {
           label = 110;
           break;
          }
          $411 = +HEAPF32[$344 >> 2];
          $412 = $350 + .5;
          if (!($411 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $412, $341))) {
           label = 110;
           break;
          }
          $415 = +HEAPF32[$344 >> 2];
          if (!($415 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $405, $340))) {
           label = 110;
           break;
          }
          $418 = +HEAPF32[$344 >> 2];
          if (!($418 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $340))) {
           label = 110;
           break;
          }
          $421 = +HEAPF32[$344 >> 2];
          if (!($421 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $412, $340))) {
           label = 110;
           break;
          }
          $424 = +HEAPF32[$344 >> 2];
          if (!($424 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $405, $342))) {
           label = 110;
           break;
          }
          $427 = +HEAPF32[$344 >> 2];
          if (!($427 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $342))) {
           label = 110;
           break;
          }
          $430 = +HEAPF32[$344 >> 2];
          if (!($430 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $412, $342))) label = 110;
         } else label = 110; else label = 110;
        } else label = 110; else label = 110; while (0);
        if ((label | 0) == 110) {
         label = 0;
         $433 = +HEAPF32[$344 >> 2];
         if (!($433 < +HEAPF32[$353 >> 2])) break;
         if (!($433 < +HEAPF32[$331 + ($$0757 << 2) >> 2])) break;
         $439 = $$0757 + 1 | 0;
         if (!($433 < +HEAPF32[$331 + ($439 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$332 + ($352 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$332 + ($$0757 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$332 + ($439 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$334 + ($352 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$334 + ($$0757 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$334 + ($439 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$335 + ($352 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$335 + ($$0757 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$335 + ($439 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$336 + ($352 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$336 + ($439 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$337 + ($352 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$337 + ($$0757 << 2) >> 2])) break;
         if (!($433 < +HEAPF32[$337 + ($439 << 2) >> 2])) break;
         $485 = $350 + -.5;
         if (!($433 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $485, $341))) break;
         $488 = +HEAPF32[$344 >> 2];
         if (!($488 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $341))) break;
         $491 = +HEAPF32[$344 >> 2];
         $492 = $350 + .5;
         if (!($491 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $492, $341))) break;
         $495 = +HEAPF32[$344 >> 2];
         if (!($495 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $485, $340))) break;
         $498 = +HEAPF32[$344 >> 2];
         if (!($498 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $340))) break;
         $501 = +HEAPF32[$344 >> 2];
         if (!($501 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $492, $340))) break;
         $504 = +HEAPF32[$344 >> 2];
         if (!($504 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $485, $342))) break;
         $507 = +HEAPF32[$344 >> 2];
         if (!($507 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $350, $342))) break;
         $510 = +HEAPF32[$344 >> 2];
         if (!($510 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($34, $492, $342))) break;
        }
        HEAP32[$17 >> 2] = $35;
        HEAP32[$18 >> 2] = $36;
        HEAP32[$19 >> 2] = HEAP32[$344 >> 2];
        $514 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf($1, $35, $328);
        HEAPF32[$20 >> 2] = $514;
        __ZN6vision23bilinear_upsample_pointERfS0_ffi($3, $21, $348, $338, $35);
        $515 = HEAP32[$6 >> 2] | 0;
        if (($515 | 0) == (HEAP32[$16 >> 2] | 0)) {
         __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($4, $3);
         break;
        } else {
         dest = $515;
         src = $3;
         stop = dest + 36 | 0;
         do {
          HEAP32[dest >> 2] = HEAP32[src >> 2];
          dest = dest + 4 | 0;
          src = src + 4 | 0;
         } while ((dest | 0) < (stop | 0));
         HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 36;
         break;
        }
       } while (0);
       $$0757 = $$0757 + 1 | 0;
      }
      $$0756 = $333;
     }
    }
   }
   $522 = (__ZNK6vision5Image5widthEv($31) | 0) >>> 1;
   if (($522 | 0) == (__ZNK6vision5Image5widthEv($32) | 0)) {
    $526 = (__ZNK6vision5Image5widthEv($31) | 0) >>> 1;
    if (($526 | 0) == (__ZNK6vision5Image5widthEv($34) | 0)) {
     $530 = (__ZNK6vision5Image6heightEv($31) | 0) >>> 1;
     if (($530 | 0) != (__ZNK6vision5Image6heightEv($32) | 0)) {
      label = 144;
      break L1;
     }
     $549 = (__ZNK6vision5Image6heightEv($31) | 0) >>> 1;
     if (($549 | 0) != (__ZNK6vision5Image6heightEv($34) | 0)) {
      label = 146;
      break L1;
     }
     $568 = (__ZNK6vision5Image5widthEv($32) | 0) + -1 | 0;
     $570 = (__ZNK6vision5Image6heightEv($32) | 0) + -1 | 0;
     $571 = +($36 | 0);
     $$0759 = 1;
     while (1) {
      if ($$0759 >>> 0 >= $570 >>> 0) break L76;
      $573 = $$0759 + -1 | 0;
      $574 = __ZNK6vision5Image3getIfEEPKT_m($32, $573) | 0;
      $575 = __ZNK6vision5Image3getIfEEPKT_m($32, $$0759) | 0;
      $576 = $$0759 + 1 | 0;
      $577 = __ZNK6vision5Image3getIfEEPKT_m($32, $576) | 0;
      $578 = __ZNK6vision5Image3getIfEEPKT_m($34, $573) | 0;
      $579 = __ZNK6vision5Image3getIfEEPKT_m($34, $$0759) | 0;
      $580 = __ZNK6vision5Image3getIfEEPKT_m($34, $576) | 0;
      $583 = +($$0759 << 1 >>> 0) + .5;
      $584 = +($$0759 >>> 0);
      $585 = $583 + -2.0;
      $586 = $583 + 2.0;
      $$0753 = 1;
      while (1) {
       if ($$0753 >>> 0 >= $568 >>> 0) break;
       $588 = $575 + ($$0753 << 2) | 0;
       do if (!(+__ZN6vision3sqrIfEET_S1_(+HEAPF32[$588 >> 2]) < $9)) {
        $594 = +($$0753 << 1 >>> 0) + .5;
        $595 = +HEAPF32[$588 >> 2];
        $596 = $$0753 + -1 | 0;
        $597 = $574 + ($596 << 2) | 0;
        do if ($595 > +HEAPF32[$597 >> 2]) if ($595 > +HEAPF32[$574 + ($$0753 << 2) >> 2]) {
         $603 = $$0753 + 1 | 0;
         if ($595 > +HEAPF32[$574 + ($603 << 2) >> 2]) if ($595 > +HEAPF32[$575 + ($596 << 2) >> 2]) {
          if (!($595 > +HEAPF32[$575 + ($603 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$577 + ($596 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$577 + ($$0753 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$577 + ($603 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$578 + ($596 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$578 + ($$0753 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$578 + ($603 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$579 + ($596 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$579 + ($$0753 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$579 + ($603 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$580 + ($596 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$580 + ($$0753 << 2) >> 2])) {
           label = 179;
           break;
          }
          if (!($595 > +HEAPF32[$580 + ($603 << 2) >> 2])) {
           label = 179;
           break;
          }
          $649 = $594 + -2.0;
          if (!($595 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $649, $585))) {
           label = 179;
           break;
          }
          $652 = +HEAPF32[$588 >> 2];
          if (!($652 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $585))) {
           label = 179;
           break;
          }
          $655 = +HEAPF32[$588 >> 2];
          $656 = $594 + 2.0;
          if (!($655 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $656, $585))) {
           label = 179;
           break;
          }
          $659 = +HEAPF32[$588 >> 2];
          if (!($659 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $649, $583))) {
           label = 179;
           break;
          }
          $662 = +HEAPF32[$588 >> 2];
          if (!($662 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $583))) {
           label = 179;
           break;
          }
          $665 = +HEAPF32[$588 >> 2];
          if (!($665 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $656, $583))) {
           label = 179;
           break;
          }
          $668 = +HEAPF32[$588 >> 2];
          if (!($668 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $649, $586))) {
           label = 179;
           break;
          }
          $671 = +HEAPF32[$588 >> 2];
          if (!($671 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $586))) {
           label = 179;
           break;
          }
          $674 = +HEAPF32[$588 >> 2];
          if (!($674 > +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $656, $586))) label = 179;
         } else label = 179; else label = 179;
        } else label = 179; else label = 179; while (0);
        if ((label | 0) == 179) {
         label = 0;
         $677 = +HEAPF32[$588 >> 2];
         if (!($677 < +HEAPF32[$597 >> 2])) break;
         if (!($677 < +HEAPF32[$574 + ($$0753 << 2) >> 2])) break;
         $683 = $$0753 + 1 | 0;
         if (!($677 < +HEAPF32[$574 + ($683 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$575 + ($596 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$575 + ($683 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$577 + ($596 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$577 + ($$0753 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$577 + ($683 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$578 + ($596 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$578 + ($$0753 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$578 + ($683 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$579 + ($596 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$579 + ($$0753 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$579 + ($683 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$580 + ($596 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$580 + ($$0753 << 2) >> 2])) break;
         if (!($677 < +HEAPF32[$580 + ($683 << 2) >> 2])) break;
         $729 = $594 + -2.0;
         if (!($677 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $729, $585))) break;
         $732 = +HEAPF32[$588 >> 2];
         if (!($732 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $585))) break;
         $735 = +HEAPF32[$588 >> 2];
         $736 = $594 + 2.0;
         if (!($735 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $736, $585))) break;
         $739 = +HEAPF32[$588 >> 2];
         if (!($739 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $729, $583))) break;
         $742 = +HEAPF32[$588 >> 2];
         if (!($742 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $583))) break;
         $745 = +HEAPF32[$588 >> 2];
         if (!($745 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $736, $583))) break;
         $748 = +HEAPF32[$588 >> 2];
         if (!($748 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $729, $586))) break;
         $751 = +HEAPF32[$588 >> 2];
         if (!($751 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $594, $586))) break;
         $754 = +HEAPF32[$588 >> 2];
         if (!($754 < +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($31, $736, $586))) break;
        }
        HEAP32[$22 >> 2] = $35;
        HEAP32[$23 >> 2] = $36;
        HEAP32[$24 >> 2] = HEAP32[$588 >> 2];
        $758 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf($1, $35, $571);
        HEAPF32[$25 >> 2] = $758;
        __ZN6vision23bilinear_upsample_pointERfS0_ffi($3, $26, +($$0753 >>> 0), $584, $35);
        $760 = HEAP32[$6 >> 2] | 0;
        if (($760 | 0) == (HEAP32[$16 >> 2] | 0)) {
         __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($4, $3);
         break;
        } else {
         dest = $760;
         src = $3;
         stop = dest + 36 | 0;
         do {
          HEAP32[dest >> 2] = HEAP32[src >> 2];
          dest = dest + 4 | 0;
          src = src + 4 | 0;
         } while ((dest | 0) < (stop | 0));
         HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 36;
         break;
        }
       } while (0);
       $$0753 = $$0753 + 1 | 0;
      }
      $$0759 = $576;
     }
    }
   }
  } while (0);
  $$0750 = $33;
 }
 if ((label | 0) == 3) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 7) {
  $51 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24639) | 0, 20520) | 0, 33528) | 0, 192) | 0, 33535) | 0, 24691) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $51 + (HEAP32[(HEAP32[$51 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $56 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $60 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$56 >> 2] | 0) + 28 >> 2] & 63]($56, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($51, $60) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($51) | 0;
  _abort();
 } else if ((label | 0) == 9) {
  $69 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24714) | 0, 20520) | 0, 33528) | 0, 193) | 0, 33535) | 0, 24691) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $69 + (HEAP32[(HEAP32[$69 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $74 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $78 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$74 >> 2] | 0) + 28 >> 2] & 63]($74, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($69, $78) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($69) | 0;
  _abort();
 } else if ((label | 0) == 75) {
  $283 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24639) | 0, 20520) | 0, 33528) | 0, 277) | 0, 33535) | 0, 24691) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $283 + (HEAP32[(HEAP32[$283 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $288 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $292 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$288 >> 2] | 0) + 28 >> 2] & 63]($288, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($283, $292) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($283) | 0;
  _abort();
 } else if ((label | 0) == 77) {
  $302 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24766) | 0, 20520) | 0, 33528) | 0, 278) | 0, 33535) | 0, 24691) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $302 + (HEAP32[(HEAP32[$302 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $307 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $311 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$307 >> 2] | 0) + 28 >> 2] & 63]($307, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($302, $311) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($302) | 0;
  _abort();
 } else if ((label | 0) == 144) {
  $538 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24823) | 0, 20520) | 0, 33528) | 0, 362) | 0, 33535) | 0, 24691) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $538 + (HEAP32[(HEAP32[$538 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $543 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $547 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$543 >> 2] | 0) + 28 >> 2] & 63]($543, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($538, $547) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($538) | 0;
  _abort();
 } else if ((label | 0) == 146) {
  $557 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24880) | 0, 20520) | 0, 33528) | 0, 363) | 0, 33535) | 0, 24691) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $557 + (HEAP32[(HEAP32[$557 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $562 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $566 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$562 >> 2] | 0) + 28 >> 2] & 63]($562, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($557, $566) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($557) | 0;
  _abort();
 }
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i161 = 0, $$0$i$i$i$i205 = 0, $$0$i$i$i$i221 = 0, $$0$i$i$i$i237 = 0, $$0$i$i$i$i254 = 0, $$0$i$i$i$i269 = 0, $$0$i$i147 = 0, $$0$i$i150 = 0, $$0$i$i153 = 0, $$0$i$i156 = 0, $$0$i$i159 = 0, $$0$i$i160 = 0, $$0$i$i173 = 0, $$0$i$i176 = 0, $$0$i$i182 = 0, $$0$i$i189 = 0, $$0$i$i194 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i167 = 0, $$0$i$i2$i$i211 = 0, $$0$i$i2$i$i227 = 0, $$0$i$i2$i$i243 = 0, $$0$i$i2$i$i260 = 0, $$0$i$i2$i$i275 = 0, $$0$i$i202 = 0, $$0$i$i233 = 0, $$0$i$i249 = 0, $$0$i$i266 = 0, $$0$i$i281 = 0, $$0$i$i284 = 0, $$0124 = 0, $$0129 = 0, $$0131 = 0, $$10 = 0, $$1130 = 0, $$2126$ph = 0, $$pre$phiZ2D = 0, $$sroa$0293$0$ptr = 0, $$sroa$0313$0 = 0, $$sroa$0313$1 = 0, $$sroa$08$0$ptr$i = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $125 = 0, $128 = 0, $13 = 0, $14 = 0, $140 = 0, $143 = 0, $15 = 0, $155 = 0, $157 = 0, $16 = 0, $17 = 0, $175 = 0, $176 = 0, $177 = 0, $18 = 0, $189 = 0, $19 = 0, $193 = 0, $194 = 0, $198 = 0, $20 = 0, $201 = 0, $203 = 0, $205 = 0, $208 = 0, $21 = 0, $215 = 0, $22 = 0, $222 = 0, $223 = 0, $224 = 0, $23 = 0, $233 = 0, $24 = 0, $245 = 0, $246 = 0, $247 = 0, $25 = 0, $256 = 0, $275 = 0, $276 = 0, $277 = 0, $280 = 0, $286 = 0, $305 = 0, $306 = 0, $307 = 0, $316 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $346 = 0, $347 = 0, $349 = 0, $350 = 0, $351 = 0, $353 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $372 = 0, $375 = 0, $379 = 0, $386 = 0, $387 = 0, $390 = 0, $395 = 0, $398 = 0, $40 = 0, $41 = 0, $410 = 0, $413 = 0, $42 = 0, $425 = 0, $427 = 0, $43 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $45 = 0, $452 = 0, $453 = 0, $46 = 0, $463 = 0, $466 = 0, $478 = 0, $48 = 0, $481 = 0, $49 = 0, $493 = 0, $495 = 0, $50 = 0, $505 = 0, $51 = 0, $513 = 0, $517 = 0, $519 = 0, $52 = 0, $528 = 0, $53 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $545 = 0, $55 = 0, $551 = 0, $554 = 0, $557 = 0, $569 = 0, $572 = 0, $58 = 0, $584 = 0, $586 = 0, $601 = 0, $602 = 0, $603 = 0, $614 = 0, $617 = 0, $629 = 0, $632 = 0, $644 = 0, $646 = 0, $669 = 0, $671 = 0, $682 = 0, $686 = 0, $687 = 0, $688 = 0, $70 = 0, $704 = 0, $705 = 0, $706 = 0, $711 = 0, $712 = 0, $715 = 0, $727 = 0, $73 = 0, $730 = 0, $742 = 0, $744 = 0, $759 = 0, $765 = 0, $766 = 0, $767 = 0, $776 = 0, $777 = 0, $783 = 0, $787 = 0, $788 = 0, $789 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $88 = 0, $90 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 $11 = sp + 488 | 0;
 $12 = sp;
 $13 = sp + 480 | 0;
 $14 = sp + 472 | 0;
 $15 = sp + 468 | 0;
 $16 = sp + 496 | 0;
 $17 = sp + 493 | 0;
 $18 = sp + 492 | 0;
 $19 = sp + 456 | 0;
 $20 = sp + 444 | 0;
 $21 = sp + 432 | 0;
 $22 = sp + 420 | 0;
 $23 = sp + 408 | 0;
 $24 = sp + 404 | 0;
 $25 = sp + 400 | 0;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$13 + 4 >> 2] = 143;
 HEAP32[$14 >> 2] = $12;
 HEAP32[$15 >> 2] = $12 + 400;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$19 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 $$0$i$i147 = 0;
 while (1) {
  if (($$0$i$i147 | 0) == 3) break;
  HEAP32[$20 + ($$0$i$i147 << 2) >> 2] = 0;
  $$0$i$i147 = $$0$i$i147 + 1 | 0;
 }
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 $$0$i$i150 = 0;
 while (1) {
  if (($$0$i$i150 | 0) == 3) break;
  HEAP32[$21 + ($$0$i$i150 << 2) >> 2] = 0;
  $$0$i$i150 = $$0$i$i150 + 1 | 0;
 }
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 $$0$i$i153 = 0;
 while (1) {
  if (($$0$i$i153 | 0) == 3) break;
  HEAP32[$22 + ($$0$i$i153 << 2) >> 2] = 0;
  $$0$i$i153 = $$0$i$i153 + 1 | 0;
 }
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 HEAP32[$23 + 8 >> 2] = 0;
 $$0$i$i156 = 0;
 while (1) {
  if (($$0$i$i156 | 0) == 3) break;
  HEAP32[$23 + ($$0$i$i156 << 2) >> 2] = 0;
  $$0$i$i156 = $$0$i$i156 + 1 | 0;
 }
 __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($2, $3, $16, $17, $18, $19, $20, $21, $22, $24);
 HEAP32[$9 >> 2] = HEAP32[$8 >> 2];
 $40 = $7 + 8 | 0;
 $41 = $21 + 11 | 0;
 $42 = $21 + 4 | 0;
 $43 = $22 + 11 | 0;
 $44 = $22 + 4 | 0;
 $45 = $19 + 11 | 0;
 $46 = $19 + 4 | 0;
 $48 = ($4 & 512 | 0) != 0;
 $49 = $20 + 11 | 0;
 $50 = $16 + 3 | 0;
 $51 = $20 + 4 | 0;
 $52 = $23 + 11 | 0;
 $53 = $23 + 4 | 0;
 $$0129 = 0;
 $$0131 = 0;
 L21 : while (1) {
  if ($$0131 >>> 0 >= 4) {
   label = 243;
   break;
  }
  $55 = HEAP32[$0 >> 2] | 0;
  do if (!$55) $787 = 1; else {
   $58 = HEAP32[$55 + 12 >> 2] | 0;
   if (($58 | 0) == (HEAP32[$55 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$55 >> 2] | 0) + 36 >> 2] & 127]($55) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$58 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $787 = 1;
    break;
   } else {
    $787 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $70 = HEAP32[$1 >> 2] | 0;
  do if (!$70) label = 31; else {
   $73 = HEAP32[$70 + 12 >> 2] | 0;
   if (($73 | 0) == (HEAP32[$70 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$70 >> 2] | 0) + 36 >> 2] & 127]($70) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$73 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    label = 31;
    break;
   } else if ($787) {
    $788 = $70;
    break;
   } else {
    label = 243;
    break L21;
   }
  } while (0);
  if ((label | 0) == 31) {
   label = 0;
   if ($787) {
    label = 243;
    break;
   } else $788 = 0;
  }
  L46 : do switch (HEAP8[$16 + $$0131 >> 0] | 0) {
  case 1:
   {
    if (($$0131 | 0) == 3) $$1130 = $$0129; else {
     $88 = HEAP32[$0 >> 2] | 0;
     $90 = HEAP32[$88 + 12 >> 2] | 0;
     if (($90 | 0) == (HEAP32[$88 + 16 >> 2] | 0)) $$0$i$i159 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$88 >> 2] | 0) + 36 >> 2] & 127]($88) | 0; else $$0$i$i159 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$90 >> 0] | 0) | 0;
     if (($$0$i$i159 & 255) << 24 >> 24 <= -1) {
      label = 45;
      break L21;
     }
     if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i159 << 24 >> 24 << 1) >> 1] & 8192)) {
      label = 45;
      break L21;
     }
     $108 = HEAP32[$0 >> 2] | 0;
     $109 = $108 + 12 | 0;
     $110 = HEAP32[$109 >> 2] | 0;
     if (($110 | 0) == (HEAP32[$108 + 16 >> 2] | 0)) $$0$i$i160 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$108 >> 2] | 0) + 40 >> 2] & 127]($108) | 0; else {
      HEAP32[$109 >> 2] = $110 + 1;
      $$0$i$i160 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$110 >> 0] | 0) | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($23, $$0$i$i160 & 255);
     label = 47;
    }
    break;
   }
  case 0:
   {
    if (($$0131 | 0) == 3) $$1130 = $$0129; else label = 47;
    break;
   }
  case 3:
   {
    $189 = HEAP8[$41 >> 0] | 0;
    $193 = $189 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $189 & 255;
    $194 = HEAP8[$43 >> 0] | 0;
    $198 = $194 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $194 & 255;
    if (($193 | 0) == (0 - $198 | 0)) $$1130 = $$0129; else {
     $201 = ($193 | 0) == 0;
     $203 = HEAP32[$0 >> 2] | 0;
     $205 = HEAP32[$203 + 12 >> 2] | 0;
     $208 = ($205 | 0) == (HEAP32[$203 + 16 >> 2] | 0);
     if ($201 | ($198 | 0) == 0) {
      if ($208) $$0$i$i182 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$203 >> 2] | 0) + 36 >> 2] & 127]($203) | 0; else $$0$i$i182 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$205 >> 0] | 0) | 0;
      $215 = $$0$i$i182 & 255;
      if ($201) {
       if ((HEAP8[((HEAP8[$43 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 0] | 0) != $215 << 24 >> 24) {
        $$1130 = $$0129;
        break L46;
       }
       $245 = HEAP32[$0 >> 2] | 0;
       $246 = $245 + 12 | 0;
       $247 = HEAP32[$246 >> 2] | 0;
       if (($247 | 0) == (HEAP32[$245 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$245 >> 2] | 0) + 40 >> 2] & 127]($245) | 0; else {
        HEAP32[$246 >> 2] = $247 + 1;
        __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$247 >> 0] | 0) | 0;
       }
       HEAP8[$6 >> 0] = 1;
       $256 = HEAP8[$43 >> 0] | 0;
       $$1130 = ($256 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $256 & 255) >>> 0 > 1 ? $22 : $$0129;
       break L46;
      }
      if ((HEAP8[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 0] | 0) != $215 << 24 >> 24) {
       HEAP8[$6 >> 0] = 1;
       $$1130 = $$0129;
       break L46;
      }
      $222 = HEAP32[$0 >> 2] | 0;
      $223 = $222 + 12 | 0;
      $224 = HEAP32[$223 >> 2] | 0;
      if (($224 | 0) == (HEAP32[$222 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$222 >> 2] | 0) + 40 >> 2] & 127]($222) | 0; else {
       HEAP32[$223 >> 2] = $224 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$224 >> 0] | 0) | 0;
      }
      $233 = HEAP8[$41 >> 0] | 0;
      $$1130 = ($233 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $233 & 255) >>> 0 > 1 ? $21 : $$0129;
      break L46;
     }
     if ($208) $$0$i$i189 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$203 >> 2] | 0) + 36 >> 2] & 127]($203) | 0; else $$0$i$i189 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$205 >> 0] | 0) | 0;
     $275 = HEAP32[$0 >> 2] | 0;
     $276 = $275 + 12 | 0;
     $277 = HEAP32[$276 >> 2] | 0;
     $280 = ($277 | 0) == (HEAP32[$275 + 16 >> 2] | 0);
     if ((HEAP8[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 0] | 0) == ($$0$i$i189 & 255) << 24 >> 24) {
      if ($280) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$275 >> 2] | 0) + 40 >> 2] & 127]($275) | 0; else {
       HEAP32[$276 >> 2] = $277 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$277 >> 0] | 0) | 0;
      }
      $286 = HEAP8[$41 >> 0] | 0;
      $$1130 = ($286 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $286 & 255) >>> 0 > 1 ? $21 : $$0129;
      break L46;
     }
     if ($280) $$0$i$i194 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$275 >> 2] | 0) + 36 >> 2] & 127]($275) | 0; else $$0$i$i194 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$277 >> 0] | 0) | 0;
     if ((HEAP8[((HEAP8[$43 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 0] | 0) != ($$0$i$i194 & 255) << 24 >> 24) {
      label = 105;
      break L21;
     }
     $305 = HEAP32[$0 >> 2] | 0;
     $306 = $305 + 12 | 0;
     $307 = HEAP32[$306 >> 2] | 0;
     if (($307 | 0) == (HEAP32[$305 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$305 >> 2] | 0) + 40 >> 2] & 127]($305) | 0; else {
      HEAP32[$306 >> 2] = $307 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$307 >> 0] | 0) | 0;
     }
     HEAP8[$6 >> 0] = 1;
     $316 = HEAP8[$43 >> 0] | 0;
     $$1130 = ($316 << 24 >> 24 < 0 ? HEAP32[$44 >> 2] | 0 : $316 & 255) >>> 0 > 1 ? $22 : $$0129;
    }
    break;
   }
  case 2:
   {
    if ($$0131 >>> 0 < 2 | ($$0129 | 0) != 0) {
     $335 = HEAP8[$49 >> 0] | 0;
     $336 = $335 << 24 >> 24 < 0;
     $337 = HEAP32[$20 >> 2] | 0;
     $338 = $336 ? $337 : $20;
     $339 = $338;
     if (!$$0131) {
      $$sroa$0313$1 = $339;
      $793 = $337;
      $794 = $335;
     } else {
      $346 = $335;
      $347 = $336;
      $350 = $338;
      $364 = $339;
      $792 = $337;
      label = 110;
     }
    } else {
     if (!($48 | ($$0131 | 0) == 2 & (HEAP8[$50 >> 0] | 0) != 0)) {
      $$1130 = 0;
      break L46;
     }
     $330 = HEAP8[$49 >> 0] | 0;
     $331 = $330 << 24 >> 24 < 0;
     $332 = HEAP32[$20 >> 2] | 0;
     $333 = $331 ? $332 : $20;
     $346 = $330;
     $347 = $331;
     $350 = $333;
     $364 = $333;
     $792 = $332;
     label = 110;
    }
    L109 : do if ((label | 0) == 110) {
     label = 0;
     if ((HEAPU8[$16 + ($$0131 + -1) >> 0] | 0) < 2) {
      $349 = $350 + ($347 ? HEAP32[$51 >> 2] | 0 : $346 & 255) | 0;
      $$sroa$0313$0 = $364;
      while (1) {
       $351 = $$sroa$0313$0;
       if (($349 | 0) == ($351 | 0)) break;
       $353 = HEAP8[$351 >> 0] | 0;
       if ($353 << 24 >> 24 <= -1) break;
       if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($353 << 24 >> 24 << 1) >> 1] & 8192)) break;
       $$sroa$0313$0 = $351 + 1 | 0;
      }
      $363 = $$sroa$0313$0 - $364 | 0;
      $365 = HEAP8[$52 >> 0] | 0;
      $366 = $365 << 24 >> 24 < 0;
      $367 = HEAP32[$53 >> 2] | 0;
      $368 = $365 & 255;
      if ($363 >>> 0 > ($366 ? $367 : $368) >>> 0) {
       $$sroa$0313$1 = $364;
       $793 = $792;
       $794 = $346;
      } else {
       $372 = (HEAP32[$23 >> 2] | 0) + $367 | 0;
       $375 = $23 + $368 | 0;
       $$pre$phiZ2D = $366 ? $372 : $375;
       $$sroa$08$0$ptr$i = $350;
       $379 = $366 ? $372 + (0 - $363) | 0 : $375 + (0 - $363) | 0;
       while (1) {
        if (($379 | 0) == ($$pre$phiZ2D | 0)) {
         $$sroa$0313$1 = $$sroa$0313$0;
         $793 = $792;
         $794 = $346;
         break L109;
        }
        if ((HEAP8[$379 >> 0] | 0) != (HEAP8[$$sroa$08$0$ptr$i >> 0] | 0)) {
         $$sroa$0313$1 = $364;
         $793 = $792;
         $794 = $346;
         break L109;
        }
        $$sroa$08$0$ptr$i = $$sroa$08$0$ptr$i + 1 | 0;
        $379 = $379 + 1 | 0;
       }
      }
     } else {
      $$sroa$0313$1 = $364;
      $793 = $792;
      $794 = $346;
     }
    } while (0);
    $$sroa$0293$0$ptr = $$sroa$0313$1;
    $386 = $794;
    $390 = $793;
    $410 = $788;
    L124 : while (1) {
     $387 = $386 << 24 >> 24 < 0;
     if (($$sroa$0293$0$ptr | 0) == (($387 ? $390 : $20) + ($387 ? HEAP32[$51 >> 2] | 0 : $386 & 255) | 0)) break;
     $395 = HEAP32[$0 >> 2] | 0;
     do if (!$395) $795 = 1; else {
      $398 = HEAP32[$395 + 12 >> 2] | 0;
      if (($398 | 0) == (HEAP32[$395 + 16 >> 2] | 0)) $$0$i$i$i$i221 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$395 >> 2] | 0) + 36 >> 2] & 127]($395) | 0; else $$0$i$i$i$i221 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$398 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i221, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $795 = 1;
       break;
      } else {
       $795 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$410) label = 136; else {
      $413 = HEAP32[$410 + 12 >> 2] | 0;
      if (($413 | 0) == (HEAP32[$410 + 16 >> 2] | 0)) $$0$i$i2$i$i227 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$410 >> 2] | 0) + 36 >> 2] & 127]($410) | 0; else $$0$i$i2$i$i227 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$413 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i227, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       label = 136;
       break;
      } else if ($795) {
       $796 = $410;
       break;
      } else break L124;
     } while (0);
     if ((label | 0) == 136) {
      label = 0;
      if ($795) break; else $796 = 0;
     }
     $425 = HEAP32[$0 >> 2] | 0;
     $427 = HEAP32[$425 + 12 >> 2] | 0;
     if (($427 | 0) == (HEAP32[$425 + 16 >> 2] | 0)) $$0$i$i233 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$425 >> 2] | 0) + 36 >> 2] & 127]($425) | 0; else $$0$i$i233 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$427 >> 0] | 0) | 0;
     if ((HEAP8[$$sroa$0293$0$ptr >> 0] | 0) != ($$0$i$i233 & 255) << 24 >> 24) break;
     $440 = HEAP32[$0 >> 2] | 0;
     $441 = $440 + 12 | 0;
     $442 = HEAP32[$441 >> 2] | 0;
     if (($442 | 0) == (HEAP32[$440 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$440 >> 2] | 0) + 40 >> 2] & 127]($440) | 0; else {
      HEAP32[$441 >> 2] = $442 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$442 >> 0] | 0) | 0;
     }
     $$sroa$0293$0$ptr = $$sroa$0293$0$ptr + 1 | 0;
     $386 = HEAP8[$49 >> 0] | 0;
     $390 = HEAP32[$20 >> 2] | 0;
     $410 = $796;
    }
    if ($48) {
     $452 = HEAP8[$49 >> 0] | 0;
     $453 = $452 << 24 >> 24 < 0;
     if (($$sroa$0293$0$ptr | 0) == (($453 ? HEAP32[$20 >> 2] | 0 : $20) + ($453 ? HEAP32[$51 >> 2] | 0 : $452 & 255) | 0)) $$1130 = $$0129; else {
      label = 148;
      break L21;
     }
    } else $$1130 = $$0129;
    break;
   }
  case 4:
   {
    $$0124 = 0;
    $478 = $788;
    $789 = $788;
    L161 : while (1) {
     $463 = HEAP32[$0 >> 2] | 0;
     do if (!$463) $797 = 1; else {
      $466 = HEAP32[$463 + 12 >> 2] | 0;
      if (($466 | 0) == (HEAP32[$463 + 16 >> 2] | 0)) $$0$i$i$i$i237 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$463 >> 2] | 0) + 36 >> 2] & 127]($463) | 0; else $$0$i$i$i$i237 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$466 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i237, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $797 = 1;
       break;
      } else {
       $797 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$478) {
      $798 = $789;
      label = 162;
     } else {
      $481 = HEAP32[$478 + 12 >> 2] | 0;
      if (($481 | 0) == (HEAP32[$478 + 16 >> 2] | 0)) $$0$i$i2$i$i243 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$478 >> 2] | 0) + 36 >> 2] & 127]($478) | 0; else $$0$i$i2$i$i243 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$481 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i243, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       $798 = 0;
       label = 162;
       break;
      } else if ($797) {
       $799 = $789;
       $800 = $478;
       break;
      } else {
       $569 = $789;
       break L161;
      }
     } while (0);
     if ((label | 0) == 162) {
      label = 0;
      if ($797) {
       $569 = $798;
       break;
      } else {
       $799 = $798;
       $800 = 0;
      }
     }
     $493 = HEAP32[$0 >> 2] | 0;
     $495 = HEAP32[$493 + 12 >> 2] | 0;
     if (($495 | 0) == (HEAP32[$493 + 16 >> 2] | 0)) $$0$i$i249 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$493 >> 2] | 0) + 36 >> 2] & 127]($493) | 0; else $$0$i$i249 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$495 >> 0] | 0) | 0;
     $505 = $$0$i$i249 & 255;
     if ($505 << 24 >> 24 > -1) if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i249 << 24 >> 24 << 1) >> 1] & 2048)) label = 172; else {
      $513 = HEAP32[$9 >> 2] | 0;
      if (($513 | 0) == (HEAP32[$11 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
       $517 = HEAP32[$9 >> 2] | 0;
      } else $517 = $513;
      HEAP32[$9 >> 2] = $517 + 1;
      HEAP8[$517 >> 0] = $505;
      $$2126$ph = $$0124 + 1 | 0;
     } else label = 172;
     if ((label | 0) == 172) {
      label = 0;
      $519 = HEAP8[$45 >> 0] | 0;
      if (!((HEAP8[$18 >> 0] | 0) == $505 << 24 >> 24 & ($$0124 | 0 ? (($519 << 24 >> 24 < 0 ? HEAP32[$46 >> 2] | 0 : $519 & 255) | 0) != 0 : 0))) {
       $569 = $799;
       break;
      }
      $528 = HEAP32[$14 >> 2] | 0;
      if (($528 | 0) == (HEAP32[$15 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
       $532 = HEAP32[$14 >> 2] | 0;
      } else $532 = $528;
      HEAP32[$14 >> 2] = $532 + 4;
      HEAP32[$532 >> 2] = $$0124;
      $$2126$ph = 0;
     }
     $533 = HEAP32[$0 >> 2] | 0;
     $534 = $533 + 12 | 0;
     $535 = HEAP32[$534 >> 2] | 0;
     if (($535 | 0) == (HEAP32[$533 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$533 >> 2] | 0) + 40 >> 2] & 127]($533) | 0; else {
      HEAP32[$534 >> 2] = $535 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$535 >> 0] | 0) | 0;
     }
     $$0124 = $$2126$ph;
     $478 = $800;
     $789 = $799;
    }
    $545 = HEAP32[$14 >> 2] | 0;
    if ($$0124 | 0 ? (HEAP32[$13 >> 2] | 0) != ($545 | 0) : 0) {
     if (($545 | 0) == (HEAP32[$15 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
      $551 = HEAP32[$14 >> 2] | 0;
     } else $551 = $545;
     HEAP32[$14 >> 2] = $551 + 4;
     HEAP32[$551 >> 2] = $$0124;
    }
    L213 : do if ((HEAP32[$24 >> 2] | 0) > 0) {
     $554 = HEAP32[$0 >> 2] | 0;
     do if (!$554) $801 = 1; else {
      $557 = HEAP32[$554 + 12 >> 2] | 0;
      if (($557 | 0) == (HEAP32[$554 + 16 >> 2] | 0)) $$0$i$i$i$i254 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$554 >> 2] | 0) + 36 >> 2] & 127]($554) | 0; else $$0$i$i$i$i254 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$557 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i254, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $801 = 1;
       break;
      } else {
       $801 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$569) label = 198; else {
      $572 = HEAP32[$569 + 12 >> 2] | 0;
      if (($572 | 0) == (HEAP32[$569 + 16 >> 2] | 0)) $$0$i$i2$i$i260 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$569 >> 2] | 0) + 36 >> 2] & 127]($569) | 0; else $$0$i$i2$i$i260 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$572 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i260, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       label = 198;
       break;
      } else if ($801) {
       $802 = $569;
       break;
      } else {
       label = 204;
       break L21;
      }
     } while (0);
     if ((label | 0) == 198) {
      label = 0;
      if ($801) {
       label = 204;
       break L21;
      } else $802 = 0;
     }
     $584 = HEAP32[$0 >> 2] | 0;
     $586 = HEAP32[$584 + 12 >> 2] | 0;
     if (($586 | 0) == (HEAP32[$584 + 16 >> 2] | 0)) $$0$i$i266 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$584 >> 2] | 0) + 36 >> 2] & 127]($584) | 0; else $$0$i$i266 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$586 >> 0] | 0) | 0;
     if ((HEAP8[$17 >> 0] | 0) != ($$0$i$i266 & 255) << 24 >> 24) {
      label = 204;
      break L21;
     }
     $601 = HEAP32[$0 >> 2] | 0;
     $602 = $601 + 12 | 0;
     $603 = HEAP32[$602 >> 2] | 0;
     if (($603 | 0) == (HEAP32[$601 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$601 >> 2] | 0) + 40 >> 2] & 127]($601) | 0; else {
      HEAP32[$602 >> 2] = $603 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$603 >> 0] | 0) | 0;
     }
     $629 = $802;
     while (1) {
      if ((HEAP32[$24 >> 2] | 0) <= 0) break L213;
      $614 = HEAP32[$0 >> 2] | 0;
      do if (!$614) $803 = 1; else {
       $617 = HEAP32[$614 + 12 >> 2] | 0;
       if (($617 | 0) == (HEAP32[$614 + 16 >> 2] | 0)) $$0$i$i$i$i269 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$614 >> 2] | 0) + 36 >> 2] & 127]($614) | 0; else $$0$i$i$i$i269 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$617 >> 0] | 0) | 0;
       if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i269, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
        HEAP32[$0 >> 2] = 0;
        $803 = 1;
        break;
       } else {
        $803 = (HEAP32[$0 >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$629) label = 223; else {
       $632 = HEAP32[$629 + 12 >> 2] | 0;
       if (($632 | 0) == (HEAP32[$629 + 16 >> 2] | 0)) $$0$i$i2$i$i275 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$629 >> 2] | 0) + 36 >> 2] & 127]($629) | 0; else $$0$i$i2$i$i275 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$632 >> 0] | 0) | 0;
       if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i275, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
        HEAP32[$1 >> 2] = 0;
        label = 223;
        break;
       } else if ($803) {
        $804 = $629;
        break;
       } else {
        label = 230;
        break L21;
       }
      } while (0);
      if ((label | 0) == 223) {
       label = 0;
       if ($803) {
        label = 230;
        break L21;
       } else $804 = 0;
      }
      $644 = HEAP32[$0 >> 2] | 0;
      $646 = HEAP32[$644 + 12 >> 2] | 0;
      if (($646 | 0) == (HEAP32[$644 + 16 >> 2] | 0)) $$0$i$i281 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$644 >> 2] | 0) + 36 >> 2] & 127]($644) | 0; else $$0$i$i281 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$646 >> 0] | 0) | 0;
      if (($$0$i$i281 & 255) << 24 >> 24 <= -1) {
       label = 230;
       break L21;
      }
      if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i281 << 24 >> 24 << 1) >> 1] & 2048)) {
       label = 230;
       break L21;
      }
      if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$11 >> 2] | 0)) __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
      $669 = HEAP32[$0 >> 2] | 0;
      $671 = HEAP32[$669 + 12 >> 2] | 0;
      if (($671 | 0) == (HEAP32[$669 + 16 >> 2] | 0)) $$0$i$i284 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$669 >> 2] | 0) + 36 >> 2] & 127]($669) | 0; else $$0$i$i284 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$671 >> 0] | 0) | 0;
      $682 = HEAP32[$9 >> 2] | 0;
      HEAP32[$9 >> 2] = $682 + 1;
      HEAP8[$682 >> 0] = $$0$i$i284;
      HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -1;
      $686 = HEAP32[$0 >> 2] | 0;
      $687 = $686 + 12 | 0;
      $688 = HEAP32[$687 >> 2] | 0;
      if (($688 | 0) == (HEAP32[$686 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$686 >> 2] | 0) + 40 >> 2] & 127]($686) | 0; else {
       HEAP32[$687 >> 2] = $688 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$688 >> 0] | 0) | 0;
      }
      $629 = $804;
     }
    } while (0);
    if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$8 >> 2] | 0)) {
     label = 241;
     break L21;
    } else $$1130 = $$0129;
    break;
   }
  default:
   $$1130 = $$0129;
  } while (0);
  L289 : do if ((label | 0) == 47) {
   label = 0;
   $140 = $788;
   while (1) {
    $125 = HEAP32[$0 >> 2] | 0;
    do if (!$125) $790 = 1; else {
     $128 = HEAP32[$125 + 12 >> 2] | 0;
     if (($128 | 0) == (HEAP32[$125 + 16 >> 2] | 0)) $$0$i$i$i$i161 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$125 >> 2] | 0) + 36 >> 2] & 127]($125) | 0; else $$0$i$i$i$i161 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$128 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i161, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $790 = 1;
      break;
     } else {
      $790 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } while (0);
    do if (!$140) label = 61; else {
     $143 = HEAP32[$140 + 12 >> 2] | 0;
     if (($143 | 0) == (HEAP32[$140 + 16 >> 2] | 0)) $$0$i$i2$i$i167 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] & 127]($140) | 0; else $$0$i$i2$i$i167 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$143 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i167, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      label = 61;
      break;
     } else if ($790) {
      $791 = $140;
      break;
     } else {
      $$1130 = $$0129;
      break L289;
     }
    } while (0);
    if ((label | 0) == 61) {
     label = 0;
     if ($790) {
      $$1130 = $$0129;
      break L289;
     } else $791 = 0;
    }
    $155 = HEAP32[$0 >> 2] | 0;
    $157 = HEAP32[$155 + 12 >> 2] | 0;
    if (($157 | 0) == (HEAP32[$155 + 16 >> 2] | 0)) $$0$i$i173 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$155 >> 2] | 0) + 36 >> 2] & 127]($155) | 0; else $$0$i$i173 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$157 >> 0] | 0) | 0;
    if (($$0$i$i173 & 255) << 24 >> 24 <= -1) {
     $$1130 = $$0129;
     break L289;
    }
    if (!(HEAP16[(HEAP32[$40 >> 2] | 0) + ($$0$i$i173 << 24 >> 24 << 1) >> 1] & 8192)) {
     $$1130 = $$0129;
     break L289;
    }
    $175 = HEAP32[$0 >> 2] | 0;
    $176 = $175 + 12 | 0;
    $177 = HEAP32[$176 >> 2] | 0;
    if (($177 | 0) == (HEAP32[$175 + 16 >> 2] | 0)) $$0$i$i176 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$175 >> 2] | 0) + 40 >> 2] & 127]($175) | 0; else {
     HEAP32[$176 >> 2] = $177 + 1;
     $$0$i$i176 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$177 >> 0] | 0) | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($23, $$0$i$i176 & 255);
    $140 = $791;
   }
  } while (0);
  $$0129 = $$1130;
  $$0131 = $$0131 + 1 | 0;
 }
 L326 : do if ((label | 0) == 45) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 105) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 148) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 204) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 230) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 241) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 243) {
  L328 : do if ($$0129 | 0) {
   $704 = $$0129 + 11 | 0;
   $705 = $$0129 + 4 | 0;
   $$0 = 1;
   L330 : while (1) {
    $706 = HEAP8[$704 >> 0] | 0;
    if ($706 << 24 >> 24 < 0) $711 = HEAP32[$705 >> 2] | 0; else $711 = $706 & 255;
    if ($$0 >>> 0 >= $711 >>> 0) break L328;
    $712 = HEAP32[$0 >> 2] | 0;
    do if (!$712) $805 = 1; else {
     $715 = HEAP32[$712 + 12 >> 2] | 0;
     if (($715 | 0) == (HEAP32[$712 + 16 >> 2] | 0)) $$0$i$i$i$i205 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$712 >> 2] | 0) + 36 >> 2] & 127]($712) | 0; else $$0$i$i$i$i205 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$715 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i205, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $805 = 1;
      break;
     } else {
      $805 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } while (0);
    $727 = HEAP32[$1 >> 2] | 0;
    do if (!$727) label = 262; else {
     $730 = HEAP32[$727 + 12 >> 2] | 0;
     if (($730 | 0) == (HEAP32[$727 + 16 >> 2] | 0)) $$0$i$i2$i$i211 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$727 >> 2] | 0) + 36 >> 2] & 127]($727) | 0; else $$0$i$i2$i$i211 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$730 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i211, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      label = 262;
      break;
     } else if ($805) break; else break L330;
    } while (0);
    if ((label | 0) == 262) {
     label = 0;
     if ($805) break;
    }
    $742 = HEAP32[$0 >> 2] | 0;
    $744 = HEAP32[$742 + 12 >> 2] | 0;
    if (($744 | 0) == (HEAP32[$742 + 16 >> 2] | 0)) $$0$i$i202 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$742 >> 2] | 0) + 36 >> 2] & 127]($742) | 0; else $$0$i$i202 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$744 >> 0] | 0) | 0;
    if ((HEAP8[$704 >> 0] | 0) < 0) $759 = HEAP32[$$0129 >> 2] | 0; else $759 = $$0129;
    if ((HEAP8[$759 + $$0 >> 0] | 0) != ($$0$i$i202 & 255) << 24 >> 24) break;
    $765 = HEAP32[$0 >> 2] | 0;
    $766 = $765 + 12 | 0;
    $767 = HEAP32[$766 >> 2] | 0;
    if (($767 | 0) == (HEAP32[$765 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$765 >> 2] | 0) + 40 >> 2] & 127]($765) | 0; else {
     HEAP32[$766 >> 2] = $767 + 1;
     __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$767 >> 0] | 0) | 0;
    }
    $$0 = $$0 + 1 | 0;
   }
   HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
   $$10 = 0;
   break L326;
  } while (0);
  $776 = HEAP32[$13 >> 2] | 0;
  $777 = HEAP32[$14 >> 2] | 0;
  if (($776 | 0) == ($777 | 0)) $$10 = 1; else {
   HEAP32[$25 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($19, $776, $777, $25);
   if (!(HEAP32[$25 >> 2] | 0)) {
    $$10 = 1;
    break;
   } else {
    HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
    $$10 = 0;
    break;
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($23);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($22);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($21);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($20);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
 $783 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = 0;
 if ($783 | 0) FUNCTION_TABLE_vi[HEAP32[$13 + 4 >> 2] & 255]($783);
 STACKTOP = sp;
 return $$10 | 0;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i162 = 0, $$0$i$i$i$i207 = 0, $$0$i$i$i$i220 = 0, $$0$i$i$i$i236 = 0, $$0$i$i$i$i251 = 0, $$0$i$i$i$i266 = 0, $$0$i$i149 = 0, $$0$i$i151 = 0, $$0$i$i154 = 0, $$0$i$i157 = 0, $$0$i$i160 = 0, $$0$i$i161 = 0, $$0$i$i174 = 0, $$0$i$i176 = 0, $$0$i$i182 = 0, $$0$i$i189 = 0, $$0$i$i194 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i168 = 0, $$0$i$i2$i$i213 = 0, $$0$i$i2$i$i226 = 0, $$0$i$i2$i$i242 = 0, $$0$i$i2$i$i257 = 0, $$0$i$i2$i$i272 = 0, $$0$i$i203 = 0, $$0$i$i232 = 0, $$0$i$i248 = 0, $$0$i$i263 = 0, $$0$i$i278 = 0, $$0$i$i280 = 0, $$0126 = 0, $$0131 = 0, $$0133 = 0, $$10 = 0, $$1132 = 0, $$2128$ph = 0, $$pre$phiZ2D = 0, $$sroa$0289$0$ptr = 0, $$sroa$0309$0 = 0, $$sroa$0309$1 = 0, $$sroa$08$0$ptr$i = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $12 = 0, $123 = 0, $126 = 0, $13 = 0, $138 = 0, $14 = 0, $141 = 0, $15 = 0, $153 = 0, $155 = 0, $16 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $18 = 0, $182 = 0, $186 = 0, $187 = 0, $19 = 0, $191 = 0, $194 = 0, $196 = 0, $198 = 0, $20 = 0, $201 = 0, $21 = 0, $214 = 0, $215 = 0, $216 = 0, $22 = 0, $225 = 0, $23 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $248 = 0, $25 = 0, $266 = 0, $267 = 0, $268 = 0, $271 = 0, $277 = 0, $295 = 0, $296 = 0, $297 = 0, $306 = 0, $320 = 0, $322 = 0, $325 = 0, $327 = 0, $329 = 0, $334 = 0, $335 = 0, $338 = 0, $342 = 0, $351 = 0, $353 = 0, $354 = 0, $355 = 0, $357 = 0, $358 = 0, $359 = 0, $360 = 0, $361 = 0, $365 = 0, $366 = 0, $369 = 0, $376 = 0, $377 = 0, $380 = 0, $385 = 0, $388 = 0, $400 = 0, $403 = 0, $41 = 0, $415 = 0, $417 = 0, $42 = 0, $429 = 0, $430 = 0, $431 = 0, $44 = 0, $441 = 0, $442 = 0, $45 = 0, $452 = 0, $455 = 0, $46 = 0, $467 = 0, $47 = 0, $470 = 0, $482 = 0, $484 = 0, $49 = 0, $498 = 0, $502 = 0, $504 = 0, $51 = 0, $513 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $53 = 0, $530 = 0, $536 = 0, $539 = 0, $542 = 0, $55 = 0, $554 = 0, $557 = 0, $56 = 0, $569 = 0, $571 = 0, $58 = 0, $585 = 0, $586 = 0, $587 = 0, $598 = 0, $601 = 0, $61 = 0, $613 = 0, $616 = 0, $628 = 0, $630 = 0, $649 = 0, $651 = 0, $661 = 0, $665 = 0, $666 = 0, $667 = 0, $684 = 0, $685 = 0, $686 = 0, $691 = 0, $692 = 0, $695 = 0, $707 = 0, $710 = 0, $722 = 0, $724 = 0, $73 = 0, $738 = 0, $744 = 0, $745 = 0, $746 = 0, $755 = 0, $756 = 0, $76 = 0, $762 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $91 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 $11 = sp + 496 | 0;
 $12 = sp;
 $13 = sp + 488 | 0;
 $14 = sp + 480 | 0;
 $15 = sp + 476 | 0;
 $16 = sp + 500 | 0;
 $17 = sp + 472 | 0;
 $18 = sp + 468 | 0;
 $19 = sp + 456 | 0;
 $20 = sp + 444 | 0;
 $21 = sp + 432 | 0;
 $22 = sp + 420 | 0;
 $23 = sp + 408 | 0;
 $24 = sp + 404 | 0;
 $25 = sp + 400 | 0;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$13 + 4 >> 2] = 143;
 HEAP32[$14 >> 2] = $12;
 HEAP32[$15 >> 2] = $12 + 400;
 HEAP32[$19 >> 2] = 0;
 HEAP32[$19 + 4 >> 2] = 0;
 HEAP32[$19 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$19 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$20 >> 2] = 0;
 HEAP32[$20 + 4 >> 2] = 0;
 HEAP32[$20 + 8 >> 2] = 0;
 $$0$i$i149 = 0;
 while (1) {
  if (($$0$i$i149 | 0) == 3) break;
  HEAP32[$20 + ($$0$i$i149 << 2) >> 2] = 0;
  $$0$i$i149 = $$0$i$i149 + 1 | 0;
 }
 HEAP32[$21 >> 2] = 0;
 HEAP32[$21 + 4 >> 2] = 0;
 HEAP32[$21 + 8 >> 2] = 0;
 $$0$i$i151 = 0;
 while (1) {
  if (($$0$i$i151 | 0) == 3) break;
  HEAP32[$21 + ($$0$i$i151 << 2) >> 2] = 0;
  $$0$i$i151 = $$0$i$i151 + 1 | 0;
 }
 HEAP32[$22 >> 2] = 0;
 HEAP32[$22 + 4 >> 2] = 0;
 HEAP32[$22 + 8 >> 2] = 0;
 $$0$i$i154 = 0;
 while (1) {
  if (($$0$i$i154 | 0) == 3) break;
  HEAP32[$22 + ($$0$i$i154 << 2) >> 2] = 0;
  $$0$i$i154 = $$0$i$i154 + 1 | 0;
 }
 HEAP32[$23 >> 2] = 0;
 HEAP32[$23 + 4 >> 2] = 0;
 HEAP32[$23 + 8 >> 2] = 0;
 $$0$i$i157 = 0;
 while (1) {
  if (($$0$i$i157 | 0) == 3) break;
  HEAP32[$23 + ($$0$i$i157 << 2) >> 2] = 0;
  $$0$i$i157 = $$0$i$i157 + 1 | 0;
 }
 __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($2, $3, $16, $17, $18, $19, $20, $21, $22, $24);
 HEAP32[$9 >> 2] = HEAP32[$8 >> 2];
 $41 = $21 + 8 + 3 | 0;
 $42 = $21 + 4 | 0;
 $44 = $22 + 8 + 3 | 0;
 $45 = $22 + 4 | 0;
 $46 = $19 + 11 | 0;
 $47 = $19 + 4 | 0;
 $49 = ($4 & 512 | 0) != 0;
 $51 = $20 + 8 + 3 | 0;
 $52 = $16 + 3 | 0;
 $53 = $20 + 4 | 0;
 $55 = $23 + 8 + 3 | 0;
 $56 = $23 + 4 | 0;
 $$0131 = 0;
 $$0133 = 0;
 L21 : while (1) {
  if ($$0133 >>> 0 >= 4) {
   label = 239;
   break;
  }
  $58 = HEAP32[$0 >> 2] | 0;
  do if (!$58) $766 = 1; else {
   $61 = HEAP32[$58 + 12 >> 2] | 0;
   if (($61 | 0) == (HEAP32[$58 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$58 >> 2] | 0) + 36 >> 2] & 127]($58) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$61 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $766 = 1;
    break;
   } else {
    $766 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $73 = HEAP32[$1 >> 2] | 0;
  do if (!$73) label = 31; else {
   $76 = HEAP32[$73 + 12 >> 2] | 0;
   if (($76 | 0) == (HEAP32[$73 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 36 >> 2] & 127]($73) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$76 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    label = 31;
    break;
   } else if ($766) {
    $767 = $73;
    break;
   } else {
    label = 239;
    break L21;
   }
  } while (0);
  if ((label | 0) == 31) {
   label = 0;
   if ($766) {
    label = 239;
    break;
   } else $767 = 0;
  }
  L46 : do switch (HEAP8[$16 + $$0133 >> 0] | 0) {
  case 1:
   {
    if (($$0133 | 0) == 3) $$1132 = $$0131; else {
     $91 = HEAP32[$0 >> 2] | 0;
     $93 = HEAP32[$91 + 12 >> 2] | 0;
     if (($93 | 0) == (HEAP32[$91 + 16 >> 2] | 0)) $$0$i$i160 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 36 >> 2] & 127]($91) | 0; else $$0$i$i160 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$93 >> 2] | 0) | 0;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, $$0$i$i160) | 0)) {
      label = 44;
      break L21;
     }
     $107 = HEAP32[$0 >> 2] | 0;
     $108 = $107 + 12 | 0;
     $109 = HEAP32[$108 >> 2] | 0;
     if (($109 | 0) == (HEAP32[$107 + 16 >> 2] | 0)) $$0$i$i161 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$107 >> 2] | 0) + 40 >> 2] & 127]($107) | 0; else {
      HEAP32[$108 >> 2] = $109 + 4;
      $$0$i$i161 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$109 >> 2] | 0) | 0;
     }
     __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($23, $$0$i$i161);
     label = 46;
    }
    break;
   }
  case 0:
   {
    if (($$0133 | 0) == 3) $$1132 = $$0131; else label = 46;
    break;
   }
  case 3:
   {
    $182 = HEAP8[$41 >> 0] | 0;
    $186 = $182 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $182 & 255;
    $187 = HEAP8[$44 >> 0] | 0;
    $191 = $187 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $187 & 255;
    if (($186 | 0) == (0 - $191 | 0)) $$1132 = $$0131; else {
     $194 = ($186 | 0) == 0;
     $196 = HEAP32[$0 >> 2] | 0;
     $198 = HEAP32[$196 + 12 >> 2] | 0;
     $201 = ($198 | 0) == (HEAP32[$196 + 16 >> 2] | 0);
     if ($194 | ($191 | 0) == 0) {
      if ($201) $$0$i$i182 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$196 >> 2] | 0) + 36 >> 2] & 127]($196) | 0; else $$0$i$i182 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$198 >> 2] | 0) | 0;
      if ($194) {
       if (($$0$i$i182 | 0) != (HEAP32[((HEAP8[$44 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 2] | 0)) {
        $$1132 = $$0131;
        break L46;
       }
       $237 = HEAP32[$0 >> 2] | 0;
       $238 = $237 + 12 | 0;
       $239 = HEAP32[$238 >> 2] | 0;
       if (($239 | 0) == (HEAP32[$237 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$237 >> 2] | 0) + 40 >> 2] & 127]($237) | 0; else {
        HEAP32[$238 >> 2] = $239 + 4;
        __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$239 >> 2] | 0) | 0;
       }
       HEAP8[$6 >> 0] = 1;
       $248 = HEAP8[$44 >> 0] | 0;
       $$1132 = ($248 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $248 & 255) >>> 0 > 1 ? $22 : $$0131;
       break L46;
      }
      if (($$0$i$i182 | 0) != (HEAP32[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 2] | 0)) {
       HEAP8[$6 >> 0] = 1;
       $$1132 = $$0131;
       break L46;
      }
      $214 = HEAP32[$0 >> 2] | 0;
      $215 = $214 + 12 | 0;
      $216 = HEAP32[$215 >> 2] | 0;
      if (($216 | 0) == (HEAP32[$214 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$214 >> 2] | 0) + 40 >> 2] & 127]($214) | 0; else {
       HEAP32[$215 >> 2] = $216 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$216 >> 2] | 0) | 0;
      }
      $225 = HEAP8[$41 >> 0] | 0;
      $$1132 = ($225 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $225 & 255) >>> 0 > 1 ? $21 : $$0131;
      break L46;
     }
     if ($201) $$0$i$i189 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$196 >> 2] | 0) + 36 >> 2] & 127]($196) | 0; else $$0$i$i189 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$198 >> 2] | 0) | 0;
     $266 = HEAP32[$0 >> 2] | 0;
     $267 = $266 + 12 | 0;
     $268 = HEAP32[$267 >> 2] | 0;
     $271 = ($268 | 0) == (HEAP32[$266 + 16 >> 2] | 0);
     if (($$0$i$i189 | 0) == (HEAP32[((HEAP8[$41 >> 0] | 0) < 0 ? HEAP32[$21 >> 2] | 0 : $21) >> 2] | 0)) {
      if ($271) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$266 >> 2] | 0) + 40 >> 2] & 127]($266) | 0; else {
       HEAP32[$267 >> 2] = $268 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$268 >> 2] | 0) | 0;
      }
      $277 = HEAP8[$41 >> 0] | 0;
      $$1132 = ($277 << 24 >> 24 < 0 ? HEAP32[$42 >> 2] | 0 : $277 & 255) >>> 0 > 1 ? $21 : $$0131;
      break L46;
     }
     if ($271) $$0$i$i194 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$266 >> 2] | 0) + 36 >> 2] & 127]($266) | 0; else $$0$i$i194 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$268 >> 2] | 0) | 0;
     if (($$0$i$i194 | 0) != (HEAP32[((HEAP8[$44 >> 0] | 0) < 0 ? HEAP32[$22 >> 2] | 0 : $22) >> 2] | 0)) {
      label = 103;
      break L21;
     }
     $295 = HEAP32[$0 >> 2] | 0;
     $296 = $295 + 12 | 0;
     $297 = HEAP32[$296 >> 2] | 0;
     if (($297 | 0) == (HEAP32[$295 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$295 >> 2] | 0) + 40 >> 2] & 127]($295) | 0; else {
      HEAP32[$296 >> 2] = $297 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$297 >> 2] | 0) | 0;
     }
     HEAP8[$6 >> 0] = 1;
     $306 = HEAP8[$44 >> 0] | 0;
     $$1132 = ($306 << 24 >> 24 < 0 ? HEAP32[$45 >> 2] | 0 : $306 & 255) >>> 0 > 1 ? $22 : $$0131;
    }
    break;
   }
  case 2:
   {
    if ($$0133 >>> 0 < 2 | ($$0131 | 0) != 0) {
     $325 = HEAP8[$51 >> 0] | 0;
     $327 = HEAP32[$20 >> 2] | 0;
     $329 = $325 << 24 >> 24 < 0 ? $327 : $20;
     if (!$$0133) {
      $$sroa$0309$1 = $329;
      $774 = $327;
      $775 = $325;
     } else {
      $771 = $329;
      $772 = $327;
      $773 = $325;
      label = 108;
     }
    } else {
     if (!($49 | ($$0133 | 0) == 2 & (HEAP8[$52 >> 0] | 0) != 0)) {
      $$1132 = 0;
      break L46;
     }
     $320 = HEAP8[$51 >> 0] | 0;
     $322 = HEAP32[$20 >> 2] | 0;
     $771 = $320 << 24 >> 24 < 0 ? $322 : $20;
     $772 = $322;
     $773 = $320;
     label = 108;
    }
    L108 : do if ((label | 0) == 108) {
     label = 0;
     if ((HEAPU8[$16 + ($$0133 + -1) >> 0] | 0) < 2) {
      $$sroa$0309$0 = $771;
      $334 = $773;
      $338 = $772;
      while (1) {
       $335 = $334 << 24 >> 24 < 0;
       $342 = $$sroa$0309$0;
       if ((($335 ? $338 : $20) + (($335 ? HEAP32[$53 >> 2] | 0 : $334 & 255) << 2) | 0) == ($342 | 0)) {
        $351 = $334;
        $353 = $338;
        break;
       }
       if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, HEAP32[$342 >> 2] | 0) | 0)) {
        label = 112;
        break;
       }
       $$sroa$0309$0 = $342 + 4 | 0;
       $334 = HEAP8[$51 >> 0] | 0;
       $338 = HEAP32[$20 >> 2] | 0;
      }
      if ((label | 0) == 112) {
       label = 0;
       $351 = HEAP8[$51 >> 0] | 0;
       $353 = HEAP32[$20 >> 2] | 0;
      }
      $354 = $351 << 24 >> 24 < 0 ? $353 : $20;
      $355 = $354;
      $357 = $$sroa$0309$0 - $355 >> 2;
      $358 = HEAP8[$55 >> 0] | 0;
      $359 = $358 << 24 >> 24 < 0;
      $360 = HEAP32[$56 >> 2] | 0;
      $361 = $358 & 255;
      if ($357 >>> 0 > ($359 ? $360 : $361) >>> 0) {
       $$sroa$0309$1 = $355;
       $774 = $353;
       $775 = $351;
      } else {
       $365 = (HEAP32[$23 >> 2] | 0) + ($360 << 2) | 0;
       $366 = $23 + ($361 << 2) | 0;
       $$pre$phiZ2D = $359 ? $365 : $366;
       $$sroa$08$0$ptr$i = $354;
       $369 = ($359 ? $365 : $366) + (0 - $357 << 2) | 0;
       while (1) {
        if (($369 | 0) == ($$pre$phiZ2D | 0)) {
         $$sroa$0309$1 = $$sroa$0309$0;
         $774 = $353;
         $775 = $351;
         break L108;
        }
        if ((HEAP32[$369 >> 2] | 0) != (HEAP32[$$sroa$08$0$ptr$i >> 2] | 0)) {
         $$sroa$0309$1 = $355;
         $774 = $353;
         $775 = $351;
         break L108;
        }
        $$sroa$08$0$ptr$i = $$sroa$08$0$ptr$i + 4 | 0;
        $369 = $369 + 4 | 0;
       }
      }
     } else {
      $$sroa$0309$1 = $771;
      $774 = $772;
      $775 = $773;
     }
    } while (0);
    $$sroa$0289$0$ptr = $$sroa$0309$1;
    $376 = $775;
    $380 = $774;
    $400 = $767;
    L124 : while (1) {
     $377 = $376 << 24 >> 24 < 0;
     if (($$sroa$0289$0$ptr | 0) == (($377 ? $380 : $20) + (($377 ? HEAP32[$53 >> 2] | 0 : $376 & 255) << 2) | 0)) break;
     $385 = HEAP32[$0 >> 2] | 0;
     do if (!$385) $776 = 1; else {
      $388 = HEAP32[$385 + 12 >> 2] | 0;
      if (($388 | 0) == (HEAP32[$385 + 16 >> 2] | 0)) $$0$i$i$i$i220 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$385 >> 2] | 0) + 36 >> 2] & 127]($385) | 0; else $$0$i$i$i$i220 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$388 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i220, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $776 = 1;
       break;
      } else {
       $776 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$400) label = 134; else {
      $403 = HEAP32[$400 + 12 >> 2] | 0;
      if (($403 | 0) == (HEAP32[$400 + 16 >> 2] | 0)) $$0$i$i2$i$i226 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$400 >> 2] | 0) + 36 >> 2] & 127]($400) | 0; else $$0$i$i2$i$i226 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$403 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i226, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       label = 134;
       break;
      } else if ($776) {
       $777 = $400;
       break;
      } else break L124;
     } while (0);
     if ((label | 0) == 134) {
      label = 0;
      if ($776) break; else $777 = 0;
     }
     $415 = HEAP32[$0 >> 2] | 0;
     $417 = HEAP32[$415 + 12 >> 2] | 0;
     if (($417 | 0) == (HEAP32[$415 + 16 >> 2] | 0)) $$0$i$i232 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$415 >> 2] | 0) + 36 >> 2] & 127]($415) | 0; else $$0$i$i232 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$417 >> 2] | 0) | 0;
     if (($$0$i$i232 | 0) != (HEAP32[$$sroa$0289$0$ptr >> 2] | 0)) break;
     $429 = HEAP32[$0 >> 2] | 0;
     $430 = $429 + 12 | 0;
     $431 = HEAP32[$430 >> 2] | 0;
     if (($431 | 0) == (HEAP32[$429 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$429 >> 2] | 0) + 40 >> 2] & 127]($429) | 0; else {
      HEAP32[$430 >> 2] = $431 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$431 >> 2] | 0) | 0;
     }
     $$sroa$0289$0$ptr = $$sroa$0289$0$ptr + 4 | 0;
     $376 = HEAP8[$51 >> 0] | 0;
     $380 = HEAP32[$20 >> 2] | 0;
     $400 = $777;
    }
    if ($49) {
     $441 = HEAP8[$51 >> 0] | 0;
     $442 = $441 << 24 >> 24 < 0;
     if (($$sroa$0289$0$ptr | 0) == (($442 ? HEAP32[$20 >> 2] | 0 : $20) + (($442 ? HEAP32[$53 >> 2] | 0 : $441 & 255) << 2) | 0)) $$1132 = $$0131; else {
      label = 146;
      break L21;
     }
    } else $$1132 = $$0131;
    break;
   }
  case 4:
   {
    $$0126 = 0;
    $467 = $767;
    $768 = $767;
    L161 : while (1) {
     $452 = HEAP32[$0 >> 2] | 0;
     do if (!$452) $778 = 1; else {
      $455 = HEAP32[$452 + 12 >> 2] | 0;
      if (($455 | 0) == (HEAP32[$452 + 16 >> 2] | 0)) $$0$i$i$i$i236 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$452 >> 2] | 0) + 36 >> 2] & 127]($452) | 0; else $$0$i$i$i$i236 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$455 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i236, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $778 = 1;
       break;
      } else {
       $778 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$467) {
      $779 = $768;
      label = 160;
     } else {
      $470 = HEAP32[$467 + 12 >> 2] | 0;
      if (($470 | 0) == (HEAP32[$467 + 16 >> 2] | 0)) $$0$i$i2$i$i242 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$467 >> 2] | 0) + 36 >> 2] & 127]($467) | 0; else $$0$i$i2$i$i242 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$470 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i242, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       $779 = 0;
       label = 160;
       break;
      } else if ($778) {
       $780 = $768;
       $781 = $467;
       break;
      } else {
       $554 = $768;
       break L161;
      }
     } while (0);
     if ((label | 0) == 160) {
      label = 0;
      if ($778) {
       $554 = $779;
       break;
      } else {
       $780 = $779;
       $781 = 0;
      }
     }
     $482 = HEAP32[$0 >> 2] | 0;
     $484 = HEAP32[$482 + 12 >> 2] | 0;
     if (($484 | 0) == (HEAP32[$482 + 16 >> 2] | 0)) $$0$i$i248 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$482 >> 2] | 0) + 36 >> 2] & 127]($482) | 0; else $$0$i$i248 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$484 >> 2] | 0) | 0;
     if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 2048, $$0$i$i248) | 0) {
      $498 = HEAP32[$9 >> 2] | 0;
      if (($498 | 0) == (HEAP32[$11 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
       $502 = HEAP32[$9 >> 2] | 0;
      } else $502 = $498;
      HEAP32[$9 >> 2] = $502 + 4;
      HEAP32[$502 >> 2] = $$0$i$i248;
      $$2128$ph = $$0126 + 1 | 0;
     } else {
      $504 = HEAP8[$46 >> 0] | 0;
      if (!(($$0$i$i248 | 0) == (HEAP32[$18 >> 2] | 0) & ($$0126 | 0 ? (($504 << 24 >> 24 < 0 ? HEAP32[$47 >> 2] | 0 : $504 & 255) | 0) != 0 : 0))) {
       $554 = $780;
       break;
      }
      $513 = HEAP32[$14 >> 2] | 0;
      if (($513 | 0) == (HEAP32[$15 >> 2] | 0)) {
       __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
       $517 = HEAP32[$14 >> 2] | 0;
      } else $517 = $513;
      HEAP32[$14 >> 2] = $517 + 4;
      HEAP32[$517 >> 2] = $$0126;
      $$2128$ph = 0;
     }
     $518 = HEAP32[$0 >> 2] | 0;
     $519 = $518 + 12 | 0;
     $520 = HEAP32[$519 >> 2] | 0;
     if (($520 | 0) == (HEAP32[$518 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$518 >> 2] | 0) + 40 >> 2] & 127]($518) | 0; else {
      HEAP32[$519 >> 2] = $520 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$520 >> 2] | 0) | 0;
     }
     $$0126 = $$2128$ph;
     $467 = $781;
     $768 = $780;
    }
    $530 = HEAP32[$14 >> 2] | 0;
    if ($$0126 | 0 ? (HEAP32[$13 >> 2] | 0) != ($530 | 0) : 0) {
     if (($530 | 0) == (HEAP32[$15 >> 2] | 0)) {
      __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($13, $14, $15);
      $536 = HEAP32[$14 >> 2] | 0;
     } else $536 = $530;
     HEAP32[$14 >> 2] = $536 + 4;
     HEAP32[$536 >> 2] = $$0126;
    }
    L211 : do if ((HEAP32[$24 >> 2] | 0) > 0) {
     $539 = HEAP32[$0 >> 2] | 0;
     do if (!$539) $782 = 1; else {
      $542 = HEAP32[$539 + 12 >> 2] | 0;
      if (($542 | 0) == (HEAP32[$539 + 16 >> 2] | 0)) $$0$i$i$i$i251 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$539 >> 2] | 0) + 36 >> 2] & 127]($539) | 0; else $$0$i$i$i$i251 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$542 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i251, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $782 = 1;
       break;
      } else {
       $782 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     do if (!$554) label = 195; else {
      $557 = HEAP32[$554 + 12 >> 2] | 0;
      if (($557 | 0) == (HEAP32[$554 + 16 >> 2] | 0)) $$0$i$i2$i$i257 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$554 >> 2] | 0) + 36 >> 2] & 127]($554) | 0; else $$0$i$i2$i$i257 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$557 >> 2] | 0) | 0;
      if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i257, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       label = 195;
       break;
      } else if ($782) {
       $783 = $554;
       break;
      } else {
       label = 201;
       break L21;
      }
     } while (0);
     if ((label | 0) == 195) {
      label = 0;
      if ($782) {
       label = 201;
       break L21;
      } else $783 = 0;
     }
     $569 = HEAP32[$0 >> 2] | 0;
     $571 = HEAP32[$569 + 12 >> 2] | 0;
     if (($571 | 0) == (HEAP32[$569 + 16 >> 2] | 0)) $$0$i$i263 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$569 >> 2] | 0) + 36 >> 2] & 127]($569) | 0; else $$0$i$i263 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$571 >> 2] | 0) | 0;
     if (($$0$i$i263 | 0) != (HEAP32[$17 >> 2] | 0)) {
      label = 201;
      break L21;
     }
     $585 = HEAP32[$0 >> 2] | 0;
     $586 = $585 + 12 | 0;
     $587 = HEAP32[$586 >> 2] | 0;
     if (($587 | 0) == (HEAP32[$585 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$585 >> 2] | 0) + 40 >> 2] & 127]($585) | 0; else {
      HEAP32[$586 >> 2] = $587 + 4;
      __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$587 >> 2] | 0) | 0;
     }
     $613 = $783;
     while (1) {
      if ((HEAP32[$24 >> 2] | 0) <= 0) break L211;
      $598 = HEAP32[$0 >> 2] | 0;
      do if (!$598) $784 = 1; else {
       $601 = HEAP32[$598 + 12 >> 2] | 0;
       if (($601 | 0) == (HEAP32[$598 + 16 >> 2] | 0)) $$0$i$i$i$i266 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$598 >> 2] | 0) + 36 >> 2] & 127]($598) | 0; else $$0$i$i$i$i266 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$601 >> 2] | 0) | 0;
       if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i266, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
        HEAP32[$0 >> 2] = 0;
        $784 = 1;
        break;
       } else {
        $784 = (HEAP32[$0 >> 2] | 0) == 0;
        break;
       }
      } while (0);
      do if (!$613) label = 220; else {
       $616 = HEAP32[$613 + 12 >> 2] | 0;
       if (($616 | 0) == (HEAP32[$613 + 16 >> 2] | 0)) $$0$i$i2$i$i272 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$613 >> 2] | 0) + 36 >> 2] & 127]($613) | 0; else $$0$i$i2$i$i272 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$616 >> 2] | 0) | 0;
       if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i272, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
        HEAP32[$1 >> 2] = 0;
        label = 220;
        break;
       } else if ($784) {
        $785 = $613;
        break;
       } else {
        label = 226;
        break L21;
       }
      } while (0);
      if ((label | 0) == 220) {
       label = 0;
       if ($784) {
        label = 226;
        break L21;
       } else $785 = 0;
      }
      $628 = HEAP32[$0 >> 2] | 0;
      $630 = HEAP32[$628 + 12 >> 2] | 0;
      if (($630 | 0) == (HEAP32[$628 + 16 >> 2] | 0)) $$0$i$i278 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$628 >> 2] | 0) + 36 >> 2] & 127]($628) | 0; else $$0$i$i278 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$630 >> 2] | 0) | 0;
      if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 2048, $$0$i$i278) | 0)) {
       label = 226;
       break L21;
      }
      if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$11 >> 2] | 0)) __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($8, $9, $11);
      $649 = HEAP32[$0 >> 2] | 0;
      $651 = HEAP32[$649 + 12 >> 2] | 0;
      if (($651 | 0) == (HEAP32[$649 + 16 >> 2] | 0)) $$0$i$i280 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$649 >> 2] | 0) + 36 >> 2] & 127]($649) | 0; else $$0$i$i280 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$651 >> 2] | 0) | 0;
      $661 = HEAP32[$9 >> 2] | 0;
      HEAP32[$9 >> 2] = $661 + 4;
      HEAP32[$661 >> 2] = $$0$i$i280;
      HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + -1;
      $665 = HEAP32[$0 >> 2] | 0;
      $666 = $665 + 12 | 0;
      $667 = HEAP32[$666 >> 2] | 0;
      if (($667 | 0) == (HEAP32[$665 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$665 >> 2] | 0) + 40 >> 2] & 127]($665) | 0; else {
       HEAP32[$666 >> 2] = $667 + 4;
       __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$667 >> 2] | 0) | 0;
      }
      $613 = $785;
     }
    } while (0);
    if ((HEAP32[$9 >> 2] | 0) == (HEAP32[$8 >> 2] | 0)) {
     label = 237;
     break L21;
    } else $$1132 = $$0131;
    break;
   }
  default:
   $$1132 = $$0131;
  } while (0);
  L286 : do if ((label | 0) == 46) {
   label = 0;
   $138 = $767;
   while (1) {
    $123 = HEAP32[$0 >> 2] | 0;
    do if (!$123) $769 = 1; else {
     $126 = HEAP32[$123 + 12 >> 2] | 0;
     if (($126 | 0) == (HEAP32[$123 + 16 >> 2] | 0)) $$0$i$i$i$i162 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$123 >> 2] | 0) + 36 >> 2] & 127]($123) | 0; else $$0$i$i$i$i162 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$126 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i162, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $769 = 1;
      break;
     } else {
      $769 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } while (0);
    do if (!$138) label = 60; else {
     $141 = HEAP32[$138 + 12 >> 2] | 0;
     if (($141 | 0) == (HEAP32[$138 + 16 >> 2] | 0)) $$0$i$i2$i$i168 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$138 >> 2] | 0) + 36 >> 2] & 127]($138) | 0; else $$0$i$i2$i$i168 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$141 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i168, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      label = 60;
      break;
     } else if ($769) {
      $770 = $138;
      break;
     } else {
      $$1132 = $$0131;
      break L286;
     }
    } while (0);
    if ((label | 0) == 60) {
     label = 0;
     if ($769) {
      $$1132 = $$0131;
      break L286;
     } else $770 = 0;
    }
    $153 = HEAP32[$0 >> 2] | 0;
    $155 = HEAP32[$153 + 12 >> 2] | 0;
    if (($155 | 0) == (HEAP32[$153 + 16 >> 2] | 0)) $$0$i$i174 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$153 >> 2] | 0) + 36 >> 2] & 127]($153) | 0; else $$0$i$i174 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$155 >> 2] | 0) | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 12 >> 2] & 63]($7, 8192, $$0$i$i174) | 0)) {
     $$1132 = $$0131;
     break L286;
    }
    $169 = HEAP32[$0 >> 2] | 0;
    $170 = $169 + 12 | 0;
    $171 = HEAP32[$170 >> 2] | 0;
    if (($171 | 0) == (HEAP32[$169 + 16 >> 2] | 0)) $$0$i$i176 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$169 >> 2] | 0) + 40 >> 2] & 127]($169) | 0; else {
     HEAP32[$170 >> 2] = $171 + 4;
     $$0$i$i176 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$171 >> 2] | 0) | 0;
    }
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($23, $$0$i$i176);
    $138 = $770;
   }
  } while (0);
  $$0131 = $$1132;
  $$0133 = $$0133 + 1 | 0;
 }
 L322 : do if ((label | 0) == 44) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 103) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 146) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 201) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 226) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 237) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$10 = 0;
 } else if ((label | 0) == 239) {
  L324 : do if ($$0131 | 0) {
   $684 = $$0131 + 8 + 3 | 0;
   $685 = $$0131 + 4 | 0;
   $$0 = 1;
   L326 : while (1) {
    $686 = HEAP8[$684 >> 0] | 0;
    if ($686 << 24 >> 24 < 0) $691 = HEAP32[$685 >> 2] | 0; else $691 = $686 & 255;
    if ($$0 >>> 0 >= $691 >>> 0) break L324;
    $692 = HEAP32[$0 >> 2] | 0;
    do if (!$692) $786 = 1; else {
     $695 = HEAP32[$692 + 12 >> 2] | 0;
     if (($695 | 0) == (HEAP32[$692 + 16 >> 2] | 0)) $$0$i$i$i$i207 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$692 >> 2] | 0) + 36 >> 2] & 127]($692) | 0; else $$0$i$i$i$i207 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$695 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i207, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $786 = 1;
      break;
     } else {
      $786 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } while (0);
    $707 = HEAP32[$1 >> 2] | 0;
    do if (!$707) label = 258; else {
     $710 = HEAP32[$707 + 12 >> 2] | 0;
     if (($710 | 0) == (HEAP32[$707 + 16 >> 2] | 0)) $$0$i$i2$i$i213 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$707 >> 2] | 0) + 36 >> 2] & 127]($707) | 0; else $$0$i$i2$i$i213 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$710 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i213, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      label = 258;
      break;
     } else if ($786) break; else break L326;
    } while (0);
    if ((label | 0) == 258) {
     label = 0;
     if ($786) break;
    }
    $722 = HEAP32[$0 >> 2] | 0;
    $724 = HEAP32[$722 + 12 >> 2] | 0;
    if (($724 | 0) == (HEAP32[$722 + 16 >> 2] | 0)) $$0$i$i203 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$722 >> 2] | 0) + 36 >> 2] & 127]($722) | 0; else $$0$i$i203 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$724 >> 2] | 0) | 0;
    if ((HEAP8[$684 >> 0] | 0) < 0) $738 = HEAP32[$$0131 >> 2] | 0; else $738 = $$0131;
    if (($$0$i$i203 | 0) != (HEAP32[$738 + ($$0 << 2) >> 2] | 0)) break;
    $744 = HEAP32[$0 >> 2] | 0;
    $745 = $744 + 12 | 0;
    $746 = HEAP32[$745 >> 2] | 0;
    if (($746 | 0) == (HEAP32[$744 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$744 >> 2] | 0) + 40 >> 2] & 127]($744) | 0; else {
     HEAP32[$745 >> 2] = $746 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$746 >> 2] | 0) | 0;
    }
    $$0 = $$0 + 1 | 0;
   }
   HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
   $$10 = 0;
   break L322;
  } while (0);
  $755 = HEAP32[$13 >> 2] | 0;
  $756 = HEAP32[$14 >> 2] | 0;
  if (($755 | 0) == ($756 | 0)) $$10 = 1; else {
   HEAP32[$25 >> 2] = 0;
   __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($19, $755, $756, $25);
   if (!(HEAP32[$25 >> 2] | 0)) {
    $$10 = 1;
    break;
   } else {
    HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
    $$10 = 0;
    break;
   }
  }
 } while (0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($23);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($22);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($21);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($20);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($19);
 $762 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = 0;
 if ($762 | 0) FUNCTION_TABLE_vi[HEAP32[$13 + 4 >> 2] & 255]($762);
 STACKTOP = sp;
 return $$10 | 0;
}
function __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$3 = 0, $102 = 0, $103 = 0, $110 = 0, $111 = 0, $118 = 0, $119 = 0, $129 = 0, $13 = 0, $130 = 0, $137 = 0, $138 = 0, $14 = 0, $145 = 0, $146 = 0, $156 = 0, $157 = 0, $164 = 0, $165 = 0, $175 = 0, $176 = 0, $186 = 0, $187 = 0, $194 = 0, $195 = 0, $199 = 0, $202 = 0, $203 = 0, $21 = 0, $210 = 0, $211 = 0, $218 = 0, $219 = 0, $22 = 0, $229 = 0, $230 = 0, $237 = 0, $238 = 0, $245 = 0, $246 = 0, $253 = 0, $254 = 0, $261 = 0, $262 = 0, $272 = 0, $273 = 0, $280 = 0, $281 = 0, $288 = 0, $289 = 0, $29 = 0, $296 = 0, $297 = 0, $3 = 0, $30 = 0, $304 = 0, $305 = 0, $315 = 0, $316 = 0, $323 = 0, $324 = 0, $331 = 0, $332 = 0, $342 = 0, $343 = 0, $350 = 0, $351 = 0, $358 = 0, $359 = 0, $366 = 0, $367 = 0, $37 = 0, $374 = 0, $375 = 0, $38 = 0, $382 = 0, $383 = 0, $393 = 0, $394 = 0, $404 = 0, $405 = 0, $412 = 0, $413 = 0, $420 = 0, $421 = 0, $428 = 0, $429 = 0, $439 = 0, $440 = 0, $444 = 0, $48 = 0, $49 = 0, $56 = 0, $57 = 0, $64 = 0, $65 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $79 = 0, $86 = 0, $87 = 0, $94 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp;
 L1 : do if (($1 - $0 | 0) > 1) do switch (HEAP8[$0 >> 0] | 0) {
 case 97:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 49931);
     $13 = $2 + 4 | 0;
     $14 = HEAP32[$13 >> 2] | 0;
     if ($14 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($14, $3);
      HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 110:
   case 100:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 49942);
     $21 = $2 + 4 | 0;
     $22 = HEAP32[$21 >> 2] | 0;
     if ($22 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($22, $3);
      HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 78:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 49952);
     $29 = $2 + 4 | 0;
     $30 = HEAP32[$29 >> 2] | 0;
     if ($30 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($30, $3);
      HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 49963);
     $37 = $2 + 4 | 0;
     $38 = HEAP32[$37 >> 2] | 0;
     if ($38 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($38, $3);
      HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 99:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 49973);
     $48 = $2 + 4 | 0;
     $49 = HEAP32[$48 >> 2] | 0;
     if ($49 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($49, $3);
      HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 49984);
     $56 = $2 + 4 | 0;
     $57 = HEAP32[$56 >> 2] | 0;
     if ($57 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($57, $3);
      HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 49994);
     $64 = $2 + 4 | 0;
     $65 = HEAP32[$64 >> 2] | 0;
     if ($65 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($65, $3);
      HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 118:
    {
     $72 = $2 + 63 | 0;
     $73 = HEAP8[$72 >> 0] | 0;
     HEAP8[$72 >> 0] = 0;
     $74 = $0 + 2 | 0;
     $75 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($74, $1, $2) | 0;
     HEAP8[$72 >> 0] = $73;
     if (($75 | 0) == ($74 | 0)) {
      $$3 = $0;
      break L1;
     }
     $79 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($79 | 0)) {
      $$3 = $0;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($79 + -24 | 0, 0, 50004) | 0;
     HEAP8[$2 + 60 >> 0] = 1;
     $$3 = $75;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 100:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc($3, 50014);
     $86 = $2 + 4 | 0;
     $87 = HEAP32[$86 >> 2] | 0;
     if ($87 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($87, $3);
      HEAP32[$86 >> 2] = (HEAP32[$86 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50032);
     $94 = $2 + 4 | 0;
     $95 = HEAP32[$94 >> 2] | 0;
     if ($95 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($95, $3);
      HEAP32[$94 >> 2] = (HEAP32[$94 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm16EEERAT__Kc($3);
     $102 = $2 + 4 | 0;
     $103 = HEAP32[$102 >> 2] | 0;
     if ($103 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($103, $3);
      HEAP32[$102 >> 2] = (HEAP32[$102 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 118:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50042);
     $110 = $2 + 4 | 0;
     $111 = HEAP32[$110 >> 2] | 0;
     if ($111 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($111, $3);
      HEAP32[$110 >> 2] = (HEAP32[$110 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 86:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50052);
     $118 = $2 + 4 | 0;
     $119 = HEAP32[$118 >> 2] | 0;
     if ($119 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($119, $3);
      HEAP32[$118 >> 2] = (HEAP32[$118 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 101:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50063);
     $129 = $2 + 4 | 0;
     $130 = HEAP32[$129 >> 2] | 0;
     if ($130 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($130, $3);
      HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 79:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50073);
     $137 = $2 + 4 | 0;
     $138 = HEAP32[$137 >> 2] | 0;
     if ($138 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($138, $3);
      HEAP32[$137 >> 2] = (HEAP32[$137 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 113:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50084);
     $145 = $2 + 4 | 0;
     $146 = HEAP32[$145 >> 2] | 0;
     if ($146 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($146, $3);
      HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 103:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50095);
     $156 = $2 + 4 | 0;
     $157 = HEAP32[$156 >> 2] | 0;
     if ($157 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($157, $3);
      HEAP32[$156 >> 2] = (HEAP32[$156 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50106);
     $164 = $2 + 4 | 0;
     $165 = HEAP32[$164 >> 2] | 0;
     if ($165 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($165, $3);
      HEAP32[$164 >> 2] = (HEAP32[$164 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 105:
  {
   if ((HEAP8[$0 + 1 >> 0] | 0) != 120) {
    $$3 = $0;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50116);
   $175 = $2 + 4 | 0;
   $176 = HEAP32[$175 >> 2] | 0;
   if ($176 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($176, $3);
    HEAP32[$175 >> 2] = (HEAP32[$175 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$3 = $0 + 2 | 0;
   break L1;
   break;
  }
 case 108:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50127);
     $186 = $2 + 4 | 0;
     $187 = HEAP32[$186 >> 2] | 0;
     if ($187 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($187, $3);
      HEAP32[$186 >> 2] = (HEAP32[$186 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 105:
    {
     $194 = $0 + 2 | 0;
     $195 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($194, $1, $2) | 0;
     if (($195 | 0) == ($194 | 0)) {
      $$3 = $0;
      break L1;
     }
     $199 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($199 | 0)) {
      $$3 = $0;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($199 + -24 | 0, 0, 50138) | 0;
     $$3 = $195;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50150);
     $202 = $2 + 4 | 0;
     $203 = HEAP32[$202 >> 2] | 0;
     if ($203 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($203, $3);
      HEAP32[$202 >> 2] = (HEAP32[$202 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc($3, 50161);
     $210 = $2 + 4 | 0;
     $211 = HEAP32[$210 >> 2] | 0;
     if ($211 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($211, $3);
      HEAP32[$210 >> 2] = (HEAP32[$210 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50173);
     $218 = $2 + 4 | 0;
     $219 = HEAP32[$218 >> 2] | 0;
     if ($219 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($219, $3);
      HEAP32[$218 >> 2] = (HEAP32[$218 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 109:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 105:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50183);
     $229 = $2 + 4 | 0;
     $230 = HEAP32[$229 >> 2] | 0;
     if ($230 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($230, $3);
      HEAP32[$229 >> 2] = (HEAP32[$229 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 73:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50193);
     $237 = $2 + 4 | 0;
     $238 = HEAP32[$237 >> 2] | 0;
     if ($238 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($238, $3);
      HEAP32[$237 >> 2] = (HEAP32[$237 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50032);
     $245 = $2 + 4 | 0;
     $246 = HEAP32[$245 >> 2] | 0;
     if ($246 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($246, $3);
      HEAP32[$245 >> 2] = (HEAP32[$245 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 76:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50204);
     $253 = $2 + 4 | 0;
     $254 = HEAP32[$253 >> 2] | 0;
     if ($254 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($254, $3);
      HEAP32[$253 >> 2] = (HEAP32[$253 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50215);
     $261 = $2 + 4 | 0;
     $262 = HEAP32[$261 >> 2] | 0;
     if ($262 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($262, $3);
      HEAP32[$261 >> 2] = (HEAP32[$261 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 110:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc($3, 50226);
     $272 = $2 + 4 | 0;
     $273 = HEAP32[$272 >> 2] | 0;
     if ($273 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($273, $3);
      HEAP32[$272 >> 2] = (HEAP32[$272 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50241);
     $280 = $2 + 4 | 0;
     $281 = HEAP32[$280 >> 2] | 0;
     if ($281 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($281, $3);
      HEAP32[$280 >> 2] = (HEAP32[$280 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 103:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50183);
     $288 = $2 + 4 | 0;
     $289 = HEAP32[$288 >> 2] | 0;
     if ($289 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($289, $3);
      HEAP32[$288 >> 2] = (HEAP32[$288 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50252);
     $296 = $2 + 4 | 0;
     $297 = HEAP32[$296 >> 2] | 0;
     if ($297 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($297, $3);
      HEAP32[$296 >> 2] = (HEAP32[$296 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 119:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc($3, 50262);
     $304 = $2 + 4 | 0;
     $305 = HEAP32[$304 >> 2] | 0;
     if ($305 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($305, $3);
      HEAP32[$304 >> 2] = (HEAP32[$304 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 111:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 111:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50275);
     $315 = $2 + 4 | 0;
     $316 = HEAP32[$315 >> 2] | 0;
     if ($316 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($316, $3);
      HEAP32[$315 >> 2] = (HEAP32[$315 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 114:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50286);
     $323 = $2 + 4 | 0;
     $324 = HEAP32[$323 >> 2] | 0;
     if ($324 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($324, $3);
      HEAP32[$323 >> 2] = (HEAP32[$323 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 82:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50296);
     $331 = $2 + 4 | 0;
     $332 = HEAP32[$331 >> 2] | 0;
     if ($332 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($332, $3);
      HEAP32[$331 >> 2] = (HEAP32[$331 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 112:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc($3, 50307);
     $342 = $2 + 4 | 0;
     $343 = HEAP32[$342 >> 2] | 0;
     if ($343 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($343, $3);
      HEAP32[$342 >> 2] = (HEAP32[$342 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 108:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50319);
     $350 = $2 + 4 | 0;
     $351 = HEAP32[$350 >> 2] | 0;
     if ($351 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($351, $3);
      HEAP32[$350 >> 2] = (HEAP32[$350 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 76:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50329);
     $358 = $2 + 4 | 0;
     $359 = HEAP32[$358 >> 2] | 0;
     if ($359 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($359, $3);
      HEAP32[$358 >> 2] = (HEAP32[$358 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 112:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50340);
     $366 = $2 + 4 | 0;
     $367 = HEAP32[$366 >> 2] | 0;
     if ($367 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($367, $3);
      HEAP32[$366 >> 2] = (HEAP32[$366 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50319);
     $374 = $2 + 4 | 0;
     $375 = HEAP32[$374 >> 2] | 0;
     if ($375 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($375, $3);
      HEAP32[$374 >> 2] = (HEAP32[$374 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 116:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50351);
     $382 = $2 + 4 | 0;
     $383 = HEAP32[$382 >> 2] | 0;
     if ($383 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($383, $3);
      HEAP32[$382 >> 2] = (HEAP32[$382 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 113:
  {
   if ((HEAP8[$0 + 1 >> 0] | 0) != 117) {
    $$3 = $0;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50362);
   $393 = $2 + 4 | 0;
   $394 = HEAP32[$393 >> 2] | 0;
   if ($394 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($394, $3);
    HEAP32[$393 >> 2] = (HEAP32[$393 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$3 = $0 + 2 | 0;
   break L1;
   break;
  }
 case 114:
  {
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 109:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 50372);
     $404 = $2 + 4 | 0;
     $405 = HEAP32[$404 >> 2] | 0;
     if ($405 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($405, $3);
      HEAP32[$404 >> 2] = (HEAP32[$404 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 77:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50382);
     $412 = $2 + 4 | 0;
     $413 = HEAP32[$412 >> 2] | 0;
     if ($413 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($413, $3);
      HEAP32[$412 >> 2] = (HEAP32[$412 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 50393);
     $420 = $2 + 4 | 0;
     $421 = HEAP32[$420 >> 2] | 0;
     if ($421 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($421, $3);
      HEAP32[$420 >> 2] = (HEAP32[$420 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 83:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc($3, 50404);
     $428 = $2 + 4 | 0;
     $429 = HEAP32[$428 >> 2] | 0;
     if ($429 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($429, $3);
      HEAP32[$428 >> 2] = (HEAP32[$428 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$3 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$3 = $0;
     break L1;
    }
   }
   break;
  }
 case 118:
  {
   if (((HEAP8[$0 + 1 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
    $$3 = $0;
    break L1;
   }
   $439 = $0 + 2 | 0;
   $440 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($439, $1, $2) | 0;
   if (($440 | 0) == ($439 | 0)) {
    $$3 = $0;
    break L1;
   }
   $444 = HEAP32[$2 + 4 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($444 | 0)) {
    $$3 = $0;
    break L1;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($444 + -24 | 0, 0, 50004) | 0;
   $$3 = $440;
   break L1;
   break;
  }
 default:
  {
   $$3 = $0;
   break L1;
  }
 } while (0); else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function _vfscanf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0266$lcssa = 0, $$0266407 = 0, $$0268 = 0, $$0270 = 0, $$0272 = 0, $$0273418 = 0, $$0276$ph$ph = 0, $$0280$ph = 0, $$0280$ph$ph = 0, $$0288409 = 0, $$0290414 = 0, $$0294 = 0, $$0295 = 0, $$0308412 = 0, $$10 = 0, $$10318 = 0, $$11 = 0, $$12 = 0, $$1267 = 0, $$1271 = 0, $$1274 = 0, $$1281 = 0, $$1291 = 0, $$1309 = 0, $$2 = 0, $$2275 = 0, $$2278$ph = 0, $$2282 = 0, $$2282$ph = 0, $$2292 = 0, $$2310$ph = 0, $$3$lcssa = 0, $$3283 = 0, $$3293 = 0, $$3406 = 0, $$4 = 0, $$4284 = 0, $$5 = 0, $$5313 = 0, $$6 = 0, $$6302 = 0, $$6314 = 0, $$7 = 0, $$7315 = 0, $$8 = 0, $$8316 = 0, $$9 = 0, $$9317 = 0, $$ph$ph = 0, $$pre$phi491Z2D = 0, $$pre$phiZ2D = 0, $$sroa$2$0$$sroa_idx13 = 0, $104 = 0, $105 = 0, $11 = 0, $114 = 0, $115 = 0, $120 = 0, $122 = 0, $125 = 0, $127 = 0, $13 = 0, $130 = 0, $133 = 0, $135 = 0, $138 = 0, $14 = 0, $145 = 0, $15 = 0, $151 = 0, $153 = 0, $16 = 0, $160 = 0, $161 = 0, $164 = 0, $166 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $176 = 0, $18 = 0, $180 = 0, $184 = 0, $186 = 0, $19 = 0, $191 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $199 = 0, $20 = 0, $204 = 0, $208 = 0, $213 = 0, $214 = 0, $215 = 0, $217 = 0, $219 = 0, $22 = 0, $220 = 0, $228 = 0, $240 = 0, $244 = 0, $246 = 0, $25 = 0, $254 = 0, $263 = 0, $266 = 0, $274 = 0, $281 = 0, $289 = 0, $296 = 0, $298 = 0, $3 = 0, $30 = 0, $305 = 0, $306 = 0, $309 = 0, $310 = 0, $321 = 0, $322 = 0, $323 = 0, $325 = 0, $328 = 0, $331 = 0, $334 = 0, $342 = 0.0, $343 = 0, $345 = 0, $348 = 0, $351 = 0, $354 = 0, $361 = 0, $369 = 0, $37 = 0, $372 = 0, $373 = 0, $374 = 0, $376 = 0, $384 = 0, $385 = 0, $387 = 0, $388 = 0, $389 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $4 = 0, $43 = 0, $45 = 0, $5 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $60 = 0, $63 = 0, $64 = 0, $65 = 0, $67 = 0, $68 = 0, $77 = 0, $85 = 0, $spec$select = 0, $spec$select319 = 0, $trunc = 0, label = 0, sp = 0, $$2282$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $3 = sp + 264 | 0;
 $4 = sp;
 $5 = sp + 260 | 0;
 $6 = sp + 272 | 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) $385 = ___lockfile($0) | 0; else $385 = 0;
 $11 = HEAP8[$1 >> 0] | 0;
 L4 : do if (!($11 << 24 >> 24)) $$3293 = 0; else {
  $13 = $0 + 4 | 0;
  $14 = $0 + 104 | 0;
  $15 = $0 + 120 | 0;
  $16 = $0 + 8 | 0;
  $17 = $4 + 10 | 0;
  $18 = $4 + 33 | 0;
  $19 = $4 + 46 | 0;
  $20 = $4 + 94 | 0;
  $$sroa$2$0$$sroa_idx13 = $3 + 4 | 0;
  $$0273418 = $1;
  $$0290414 = 0;
  $$0308412 = 0;
  $22 = $11;
  $387 = 0;
  $56 = 0;
  $57 = 0;
  L6 : while (1) {
   L8 : do if (!(_isspace($22 & 255) | 0)) {
    $63 = (HEAP8[$$0273418 >> 0] | 0) == 37;
    L10 : do if ($63) {
     $64 = $$0273418 + 1 | 0;
     $65 = HEAP8[$64 >> 0] | 0;
     L12 : do switch ($65 << 24 >> 24) {
     case 37:
      {
       break L10;
       break;
      }
     case 42:
      {
       $$0295 = 0;
       $$2275 = $$0273418 + 2 | 0;
       break;
      }
     default:
      {
       if (_isdigit($65 & 255) | 0) if ((HEAP8[$$0273418 + 2 >> 0] | 0) == 36) {
        $$0295 = _arg_n_668($2, (HEAPU8[$64 >> 0] | 0) + -48 | 0) | 0;
        $$2275 = $$0273418 + 3 | 0;
        break L12;
       }
       $104 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
       $105 = HEAP32[$104 >> 2] | 0;
       HEAP32[$2 >> 2] = $104 + 4;
       $$0295 = $105;
       $$2275 = $64;
      }
     } while (0);
     if (!(_isdigit(HEAPU8[$$2275 >> 0] | 0) | 0)) {
      $$0266$lcssa = 0;
      $$3$lcssa = $$2275;
     } else {
      $$0266407 = 0;
      $$3406 = $$2275;
      while (1) {
       $114 = ($$0266407 * 10 | 0) + -48 + (HEAPU8[$$3406 >> 0] | 0) | 0;
       $115 = $$3406 + 1 | 0;
       if (!(_isdigit(HEAPU8[$115 >> 0] | 0) | 0)) {
        $$0266$lcssa = $114;
        $$3$lcssa = $115;
        break;
       } else {
        $$0266407 = $114;
        $$3406 = $115;
       }
      }
     }
     $120 = HEAP8[$$3$lcssa >> 0] | 0;
     $122 = $$3$lcssa + 1 | 0;
     if ($120 << 24 >> 24 == 109) {
      $$0270 = ($$0295 | 0) != 0 & 1;
      $$1309 = 0;
      $$4 = $122;
      $$pre$phiZ2D = $$3$lcssa + 2 | 0;
      $125 = HEAP8[$122 >> 0] | 0;
      $392 = 0;
     } else {
      $$0270 = 0;
      $$1309 = $$0308412;
      $$4 = $$3$lcssa;
      $$pre$phiZ2D = $122;
      $125 = $120;
      $392 = $387;
     }
     switch ($125 << 24 >> 24) {
     case 104:
      {
       $127 = (HEAP8[$$pre$phiZ2D >> 0] | 0) == 104;
       $$0268 = $127 ? -2 : -1;
       $$5 = $127 ? $$4 + 2 | 0 : $$pre$phiZ2D;
       break;
      }
     case 108:
      {
       $130 = (HEAP8[$$pre$phiZ2D >> 0] | 0) == 108;
       $$0268 = $130 ? 3 : 1;
       $$5 = $130 ? $$4 + 2 | 0 : $$pre$phiZ2D;
       break;
      }
     case 106:
      {
       $$0268 = 3;
       $$5 = $$pre$phiZ2D;
       break;
      }
     case 116:
     case 122:
      {
       $$0268 = 1;
       $$5 = $$pre$phiZ2D;
       break;
      }
     case 76:
      {
       $$0268 = 2;
       $$5 = $$pre$phiZ2D;
       break;
      }
     case 110:
     case 112:
     case 67:
     case 83:
     case 91:
     case 99:
     case 115:
     case 88:
     case 71:
     case 70:
     case 69:
     case 65:
     case 103:
     case 102:
     case 101:
     case 97:
     case 120:
     case 117:
     case 111:
     case 105:
     case 100:
      {
       $$0268 = 0;
       $$5 = $$4;
       break;
      }
     default:
      {
       $$8316 = $$1309;
       $393 = $392;
       label = 143;
       break L6;
      }
     }
     $133 = HEAPU8[$$5 >> 0] | 0;
     $135 = ($133 & 47 | 0) == 3;
     $spec$select = $135 ? $133 | 32 : $133;
     $spec$select319 = $135 ? 1 : $$0268;
     $trunc = $spec$select & 255;
     switch ($trunc << 24 >> 24) {
     case 99:
      {
       $$1267 = ($$0266$lcssa | 0) > 1 ? $$0266$lcssa : 1;
       $372 = $56;
       $373 = $57;
       break;
      }
     case 91:
      {
       $$1267 = $$0266$lcssa;
       $372 = $56;
       $373 = $57;
       break;
      }
     case 110:
      {
       _store_int_669($$0295, $spec$select319, $56, $57);
       $$12 = $$5;
       $$1291 = $$0290414;
       $$7315 = $$1309;
       $388 = $392;
       $389 = $56;
       $390 = $57;
       break L8;
       break;
      }
     default:
      {
       ___shlim($0, 0, 0);
       do {
        $138 = HEAP32[$13 >> 2] | 0;
        if ($138 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
         HEAP32[$13 >> 2] = $138 + 1;
         $145 = HEAPU8[$138 >> 0] | 0;
        } else $145 = ___shgetc($0) | 0;
       } while ((_isspace($145) | 0) != 0);
       if (!(HEAP32[$14 >> 2] | 0)) $161 = HEAP32[$13 >> 2] | 0; else {
        $151 = (HEAP32[$13 >> 2] | 0) + -1 | 0;
        HEAP32[$13 >> 2] = $151;
        $161 = $151;
       }
       $153 = $15;
       $160 = $161 - (HEAP32[$16 >> 2] | 0) | 0;
       $164 = _i64Add(HEAP32[$153 >> 2] | 0, HEAP32[$153 + 4 >> 2] | 0, $56 | 0, $57 | 0) | 0;
       $166 = _i64Add($164 | 0, getTempRet0() | 0, $160 | 0, (($160 | 0) < 0) << 31 >> 31 | 0) | 0;
       $$1267 = $$0266$lcssa;
       $372 = $166;
       $373 = getTempRet0() | 0;
      }
     }
     $169 = (($$1267 | 0) < 0) << 31 >> 31;
     ___shlim($0, $$1267, $169);
     $170 = HEAP32[$13 >> 2] | 0;
     $171 = HEAP32[$14 >> 2] | 0;
     if ($170 >>> 0 < $171 >>> 0) {
      HEAP32[$13 >> 2] = $170 + 1;
      $176 = $171;
     } else {
      if ((___shgetc($0) | 0) < 0) {
       $$8316 = $$1309;
       $393 = $392;
       label = 143;
       break L6;
      }
      $176 = HEAP32[$14 >> 2] | 0;
     }
     if ($176 | 0) HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + -1;
     L59 : do switch ($trunc << 24 >> 24) {
     case 91:
     case 99:
     case 115:
      {
       $180 = ($spec$select | 0) == 99;
       L61 : do if (($spec$select | 16 | 0) == 115) {
        _memset($4 | 0, -1, 257) | 0;
        HEAP8[$4 >> 0] = 0;
        if (($spec$select | 0) == 115) {
         HEAP8[$18 >> 0] = 0;
         HEAP16[$17 >> 1] = 0;
         HEAP16[$17 + 2 >> 1] = 0;
         HEAP8[$17 + 4 >> 0] = 0;
         $$10 = $$5;
        } else $$10 = $$5;
       } else {
        $184 = $$5 + 1 | 0;
        $186 = (HEAP8[$184 >> 0] | 0) == 94;
        $$0294 = $186 & 1;
        $$6 = $186 ? $$5 + 2 | 0 : $184;
        _memset($4 | 0, $$0294 | 0, 257) | 0;
        HEAP8[$4 >> 0] = 0;
        switch (HEAP8[$$6 >> 0] | 0) {
        case 45:
         {
          $191 = ($$0294 ^ 1) & 255;
          HEAP8[$19 >> 0] = $191;
          $$7 = $$6 + 1 | 0;
          $$pre$phi491Z2D = $191;
          break;
         }
        case 93:
         {
          $194 = ($$0294 ^ 1) & 255;
          HEAP8[$20 >> 0] = $194;
          $$7 = $$6 + 1 | 0;
          $$pre$phi491Z2D = $194;
          break;
         }
        default:
         {
          $$7 = $$6;
          $$pre$phi491Z2D = ($$0294 ^ 1) & 255;
         }
        }
        $$8 = $$7;
        while (1) {
         $195 = HEAP8[$$8 >> 0] | 0;
         L72 : do switch ($195 << 24 >> 24) {
         case 0:
          {
           $$8316 = $$1309;
           $393 = $392;
           label = 143;
           break L6;
           break;
          }
         case 93:
          {
           $$10 = $$8;
           break L61;
           break;
          }
         case 45:
          {
           $196 = $$8 + 1 | 0;
           $197 = HEAP8[$196 >> 0] | 0;
           switch ($197 << 24 >> 24) {
           case 93:
           case 0:
            {
             $$9 = $$8;
             $208 = 45;
             break L72;
             break;
            }
           default:
            {}
           }
           $199 = HEAP8[$$8 + -1 >> 0] | 0;
           if (($199 & 255) < ($197 & 255)) {
            $$0288409 = $199 & 255;
            do {
             $$0288409 = $$0288409 + 1 | 0;
             HEAP8[$4 + $$0288409 >> 0] = $$pre$phi491Z2D;
             $204 = HEAP8[$196 >> 0] | 0;
            } while ($$0288409 >>> 0 < ($204 & 255) >>> 0);
            $$9 = $196;
            $208 = $204;
           } else {
            $$9 = $196;
            $208 = $197;
           }
           break;
          }
         default:
          {
           $$9 = $$8;
           $208 = $195;
          }
         } while (0);
         HEAP8[$4 + (($208 & 255) + 1) >> 0] = $$pre$phi491Z2D;
         $$8 = $$9 + 1 | 0;
        }
       } while (0);
       $213 = $180 ? $$1267 + 1 | 0 : 31;
       $214 = ($spec$select319 | 0) == 1;
       $215 = ($$0270 | 0) != 0;
       L80 : do if ($214) {
        if ($215) {
         $217 = _malloc($213 << 2) | 0;
         if (!$217) {
          $$8316 = 0;
          $393 = 0;
          label = 143;
          break L6;
         } else $395 = $217;
        } else $395 = $$0295;
        HEAP32[$3 >> 2] = 0;
        HEAP32[$$sroa$2$0$$sroa_idx13 >> 2] = 0;
        $$0276$ph$ph = $213;
        $$0280$ph$ph = 0;
        $$ph$ph = $395;
        L85 : while (1) {
         $219 = ($$ph$ph | 0) == 0;
         $$0280$ph = $$0280$ph$ph;
         while (1) {
          L89 : while (1) {
           $220 = HEAP32[$13 >> 2] | 0;
           if ($220 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
            HEAP32[$13 >> 2] = $220 + 1;
            $228 = HEAPU8[$220 >> 0] | 0;
           } else $228 = ___shgetc($0) | 0;
           if (!(HEAP8[$4 + ($228 + 1) >> 0] | 0)) break L85;
           HEAP8[$6 >> 0] = $228;
           switch (_mbrtowc($5, $6, 1, $3) | 0) {
           case -1:
            {
             $$8316 = 0;
             $393 = $$ph$ph;
             label = 143;
             break L6;
             break;
            }
           case -2:
            break;
           default:
            break L89;
           }
          }
          if ($219) $$1281 = $$0280$ph; else {
           HEAP32[$$ph$ph + ($$0280$ph << 2) >> 2] = HEAP32[$5 >> 2];
           $$1281 = $$0280$ph + 1 | 0;
          }
          if ($215 & ($$1281 | 0) == ($$0276$ph$ph | 0)) break; else $$0280$ph = $$1281;
         }
         $$0276$ph$ph = $$0276$ph$ph << 1 | 1;
         $240 = _realloc($$ph$ph, $$0276$ph$ph << 2) | 0;
         if (!$240) {
          $$8316 = 0;
          $393 = $$ph$ph;
          label = 143;
          break L6;
         } else {
          $$0280$ph$ph = $$1281;
          $$ph$ph = $240;
         }
        }
        if (!(_mbsinit($3) | 0)) {
         $$8316 = 0;
         $393 = $$ph$ph;
         label = 143;
         break L6;
        } else {
         $$4284 = $$0280$ph;
         $$5313 = 0;
         $$6302 = $$ph$ph;
         $396 = $$ph$ph;
        }
       } else {
        if ($215) {
         $244 = _malloc($213) | 0;
         if (!$244) {
          $$8316 = 0;
          $393 = 0;
          label = 143;
          break L6;
         }
         $$2278$ph = $213;
         $$2282$ph = 0;
         $$2310$ph = $244;
         while (1) {
          $$2282 = $$2282$ph;
          do {
           $246 = HEAP32[$13 >> 2] | 0;
           if ($246 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
            HEAP32[$13 >> 2] = $246 + 1;
            $254 = HEAPU8[$246 >> 0] | 0;
           } else $254 = ___shgetc($0) | 0;
           if (!(HEAP8[$4 + ($254 + 1) >> 0] | 0)) {
            $$4284 = $$2282;
            $$5313 = $$2310$ph;
            $$6302 = 0;
            $396 = 0;
            break L80;
           }
           $$2282$looptemp = $$2282;
           $$2282 = $$2282 + 1 | 0;
           HEAP8[$$2310$ph + $$2282$looptemp >> 0] = $254;
          } while (($$2282 | 0) != ($$2278$ph | 0));
          $$2278$ph = $$2278$ph << 1 | 1;
          $263 = _realloc($$2310$ph, $$2278$ph) | 0;
          if (!$263) {
           $$8316 = $$2310$ph;
           $393 = 0;
           label = 143;
           break L6;
          } else {
           $$2282$ph = $$2282;
           $$2310$ph = $263;
          }
         }
        }
        if (!$$0295) while (1) {
         $281 = HEAP32[$13 >> 2] | 0;
         if ($281 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
          HEAP32[$13 >> 2] = $281 + 1;
          $289 = HEAPU8[$281 >> 0] | 0;
         } else $289 = ___shgetc($0) | 0;
         if (!(HEAP8[$4 + ($289 + 1) >> 0] | 0)) {
          $$4284 = 0;
          $$5313 = 0;
          $$6302 = 0;
          $396 = 0;
          break L80;
         }
        }
        $$3283 = 0;
        while (1) {
         $266 = HEAP32[$13 >> 2] | 0;
         if ($266 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
          HEAP32[$13 >> 2] = $266 + 1;
          $274 = HEAPU8[$266 >> 0] | 0;
         } else $274 = ___shgetc($0) | 0;
         if (!(HEAP8[$4 + ($274 + 1) >> 0] | 0)) {
          $$4284 = $$3283;
          $$5313 = $$0295;
          $$6302 = 0;
          $396 = 0;
          break L80;
         }
         HEAP8[$$0295 + $$3283 >> 0] = $274;
         $$3283 = $$3283 + 1 | 0;
        }
       } while (0);
       if (!(HEAP32[$14 >> 2] | 0)) $306 = HEAP32[$13 >> 2] | 0; else {
        $296 = (HEAP32[$13 >> 2] | 0) + -1 | 0;
        HEAP32[$13 >> 2] = $296;
        $306 = $296;
       }
       $298 = $15;
       $305 = $306 - (HEAP32[$16 >> 2] | 0) | 0;
       $309 = _i64Add(HEAP32[$298 >> 2] | 0, HEAP32[$298 + 4 >> 2] | 0, $305 | 0, (($305 | 0) < 0) << 31 >> 31 | 0) | 0;
       $310 = getTempRet0() | 0;
       if (($309 | 0) == 0 & ($310 | 0) == 0) {
        $$10318 = $$5313;
        $$2 = $$0270;
        $$2292 = $$0290414;
        $384 = $396;
        break L6;
       }
       if (!(($309 | 0) == ($$1267 | 0) & ($310 | 0) == ($169 | 0) | $180 ^ 1)) {
        $$10318 = $$5313;
        $$2 = $$0270;
        $$2292 = $$0290414;
        $384 = $396;
        break L6;
       }
       do if ($215) if ($214) {
        HEAP32[$$0295 >> 2] = $$6302;
        break;
       } else {
        HEAP32[$$0295 >> 2] = $$5313;
        break;
       } while (0);
       if ($180) {
        $$11 = $$10;
        $$6314 = $$5313;
        $394 = $396;
       } else {
        if ($$6302 | 0) HEAP32[$$6302 + ($$4284 << 2) >> 2] = 0;
        if (!$$5313) {
         $$11 = $$10;
         $$6314 = 0;
         $394 = $396;
         break L59;
        }
        HEAP8[$$5313 + $$4284 >> 0] = 0;
        $$11 = $$10;
        $$6314 = $$5313;
        $394 = $396;
       }
       break;
      }
     case 120:
     case 88:
     case 112:
      {
       $$0272 = 16;
       label = 131;
       break;
      }
     case 111:
      {
       $$0272 = 8;
       label = 131;
       break;
      }
     case 117:
     case 100:
      {
       $$0272 = 10;
       label = 131;
       break;
      }
     case 105:
      {
       $$0272 = 0;
       label = 131;
       break;
      }
     case 71:
     case 103:
     case 70:
     case 102:
     case 69:
     case 101:
     case 65:
     case 97:
      {
       $342 = +___floatscan($0, $spec$select319, 0);
       $343 = $15;
       $345 = HEAP32[$343 >> 2] | 0;
       $348 = HEAP32[$343 + 4 >> 2] | 0;
       $351 = (HEAP32[$13 >> 2] | 0) - (HEAP32[$16 >> 2] | 0) | 0;
       $354 = _i64Subtract(0, 0, $351 | 0, (($351 | 0) < 0) << 31 >> 31 | 0) | 0;
       if (($345 | 0) == ($354 | 0) & ($348 | 0) == (getTempRet0() | 0)) {
        $$10318 = $$1309;
        $$2 = $$0270;
        $$2292 = $$0290414;
        $384 = $392;
        break L6;
       }
       if (!$$0295) {
        $$11 = $$5;
        $$6314 = $$1309;
        $394 = $392;
       } else switch ($spec$select319 | 0) {
       case 0:
        {
         HEAPF32[$$0295 >> 2] = $342;
         $$11 = $$5;
         $$6314 = $$1309;
         $394 = $392;
         break L59;
         break;
        }
       case 1:
        {
         HEAPF64[$$0295 >> 3] = $342;
         $$11 = $$5;
         $$6314 = $$1309;
         $394 = $392;
         break L59;
         break;
        }
       case 2:
        {
         HEAPF64[$$0295 >> 3] = $342;
         $$11 = $$5;
         $$6314 = $$1309;
         $394 = $392;
         break L59;
         break;
        }
       default:
        {
         $$11 = $$5;
         $$6314 = $$1309;
         $394 = $392;
         break L59;
        }
       }
       break;
      }
     default:
      {
       $$11 = $$5;
       $$6314 = $$1309;
       $394 = $392;
      }
     } while (0);
     do if ((label | 0) == 131) {
      label = 0;
      $321 = ___intscan($0, $$0272, 0, -1, -1) | 0;
      $322 = getTempRet0() | 0;
      $323 = $15;
      $325 = HEAP32[$323 >> 2] | 0;
      $328 = HEAP32[$323 + 4 >> 2] | 0;
      $331 = (HEAP32[$13 >> 2] | 0) - (HEAP32[$16 >> 2] | 0) | 0;
      $334 = _i64Subtract(0, 0, $331 | 0, (($331 | 0) < 0) << 31 >> 31 | 0) | 0;
      if (($325 | 0) == ($334 | 0) & ($328 | 0) == (getTempRet0() | 0)) {
       $$10318 = $$1309;
       $$2 = $$0270;
       $$2292 = $$0290414;
       $384 = $392;
       break L6;
      }
      if (($$0295 | 0) != 0 & ($spec$select | 0) == 112) {
       HEAP32[$$0295 >> 2] = $321;
       $$11 = $$5;
       $$6314 = $$1309;
       $394 = $392;
       break;
      } else {
       _store_int_669($$0295, $spec$select319, $321, $322);
       $$11 = $$5;
       $$6314 = $$1309;
       $394 = $392;
       break;
      }
     } while (0);
     $361 = $15;
     $369 = (HEAP32[$13 >> 2] | 0) - (HEAP32[$16 >> 2] | 0) | 0;
     $374 = _i64Add(HEAP32[$361 >> 2] | 0, HEAP32[$361 + 4 >> 2] | 0, $372 | 0, $373 | 0) | 0;
     $376 = _i64Add($374 | 0, getTempRet0() | 0, $369 | 0, (($369 | 0) < 0) << 31 >> 31 | 0) | 0;
     $$12 = $$11;
     $$1291 = $$0290414 + (($$0295 | 0) != 0 & 1) | 0;
     $$7315 = $$6314;
     $388 = $394;
     $389 = $376;
     $390 = getTempRet0() | 0;
     break L8;
    } while (0);
    $67 = $$0273418 + ($63 & 1) | 0;
    ___shlim($0, 0, 0);
    $68 = HEAP32[$13 >> 2] | 0;
    if ($68 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
     HEAP32[$13 >> 2] = $68 + 1;
     $77 = HEAPU8[$68 >> 0] | 0;
    } else $77 = ___shgetc($0) | 0;
    if (($77 | 0) != (HEAPU8[$67 >> 0] | 0)) {
     label = 23;
     break L6;
    }
    $85 = _i64Add($56 | 0, $57 | 0, 1, 0) | 0;
    $$12 = $67;
    $$1291 = $$0290414;
    $$7315 = $$0308412;
    $388 = $387;
    $389 = $85;
    $390 = getTempRet0() | 0;
   } else {
    $$1274 = $$0273418;
    while (1) {
     $25 = $$1274 + 1 | 0;
     if (!(_isspace(HEAPU8[$25 >> 0] | 0) | 0)) break; else $$1274 = $25;
    }
    ___shlim($0, 0, 0);
    do {
     $30 = HEAP32[$13 >> 2] | 0;
     if ($30 >>> 0 < (HEAP32[$14 >> 2] | 0) >>> 0) {
      HEAP32[$13 >> 2] = $30 + 1;
      $37 = HEAPU8[$30 >> 0] | 0;
     } else $37 = ___shgetc($0) | 0;
    } while ((_isspace($37) | 0) != 0);
    if (!(HEAP32[$14 >> 2] | 0)) $53 = HEAP32[$13 >> 2] | 0; else {
     $43 = (HEAP32[$13 >> 2] | 0) + -1 | 0;
     HEAP32[$13 >> 2] = $43;
     $53 = $43;
    }
    $45 = $15;
    $52 = $53 - (HEAP32[$16 >> 2] | 0) | 0;
    $58 = _i64Add(HEAP32[$45 >> 2] | 0, HEAP32[$45 + 4 >> 2] | 0, $56 | 0, $57 | 0) | 0;
    $60 = _i64Add($58 | 0, getTempRet0() | 0, $52 | 0, (($52 | 0) < 0) << 31 >> 31 | 0) | 0;
    $$12 = $$1274;
    $$1291 = $$0290414;
    $$7315 = $$0308412;
    $388 = $387;
    $389 = $60;
    $390 = getTempRet0() | 0;
   } while (0);
   $$0273418 = $$12 + 1 | 0;
   $22 = HEAP8[$$0273418 >> 0] | 0;
   if (!($22 << 24 >> 24)) {
    $$3293 = $$1291;
    break L4;
   } else {
    $$0290414 = $$1291;
    $$0308412 = $$7315;
    $387 = $388;
    $56 = $389;
    $57 = $390;
   }
  }
  if ((label | 0) == 23) {
   if (HEAP32[$14 >> 2] | 0) HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + -1;
   if (($$0290414 | 0) != 0 | ($77 | 0) > -1) {
    $$3293 = $$0290414;
    break;
   } else {
    $$1271 = 0;
    $$9317 = $$0308412;
    $391 = $387;
    label = 144;
   }
  } else if ((label | 0) == 143) if (!$$0290414) {
   $$1271 = $$0270;
   $$9317 = $$8316;
   $391 = $393;
   label = 144;
  } else {
   $$10318 = $$8316;
   $$2 = $$0270;
   $$2292 = $$0290414;
   $384 = $393;
  }
  if ((label | 0) == 144) {
   $$10318 = $$9317;
   $$2 = $$1271;
   $$2292 = -1;
   $384 = $391;
  }
  if (!$$2) $$3293 = $$2292; else {
   _free($$10318);
   _free($384);
   $$3293 = $$2292;
  }
 } while (0);
 if ($385 | 0) ___unlockfile($0);
 STACKTOP = sp;
 return $$3293 | 0;
}

function __ZNSt3__212__next_primeEm($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0328 = 0, $$0334 = 0, $$0337 = 0, $$1 = 0, $$2332 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$8 = 0, $$sink369 = 0, $1 = 0, $100 = 0, $104 = 0, $105 = 0, $109 = 0, $110 = 0, $114 = 0, $115 = 0, $119 = 0, $120 = 0, $124 = 0, $125 = 0, $129 = 0, $130 = 0, $134 = 0, $135 = 0, $139 = 0, $140 = 0, $144 = 0, $145 = 0, $149 = 0, $150 = 0, $154 = 0, $155 = 0, $159 = 0, $16 = 0, $160 = 0, $164 = 0, $165 = 0, $169 = 0, $170 = 0, $174 = 0, $175 = 0, $179 = 0, $180 = 0, $184 = 0, $185 = 0, $189 = 0, $19 = 0, $190 = 0, $194 = 0, $195 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $204 = 0, $205 = 0, $209 = 0, $210 = 0, $214 = 0, $215 = 0, $219 = 0, $220 = 0, $224 = 0, $225 = 0, $229 = 0, $230 = 0, $234 = 0, $235 = 0, $239 = 0, $240 = 0, $244 = 0, $245 = 0, $249 = 0, $25 = 0, $250 = 0, $254 = 0, $255 = 0, $259 = 0, $260 = 0, $261 = 0, $263 = 0, $266 = 0, $267 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $35 = 0, $39 = 0, $40 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $55 = 0, $59 = 0, $60 = 0, $64 = 0, $65 = 0, $69 = 0, $7 = 0, $70 = 0, $74 = 0, $75 = 0, $79 = 0, $8 = 0, $80 = 0, $84 = 0, $85 = 0, $89 = 0, $90 = 0, $94 = 0, $95 = 0, $99 = 0, $spec$select = 0, $spec$select339$sink = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 $2 = sp + 8 | 0;
 $3 = sp + 4 | 0;
 HEAP32[$2 >> 2] = $0;
 do if ($0 >>> 0 < 212) {
  $5 = __ZNSt3__213__lower_boundIRNS_6__lessIjmEEPKjmEET0_S6_S6_RKT1_T_(10352, 10544, $2, $1) | 0;
  $$8 = HEAP32[$5 >> 2] | 0;
 } else {
  $7 = ($0 >>> 0) / 210 | 0;
  $8 = $7 * 210 | 0;
  HEAP32[$3 >> 2] = $0 - $8;
  $$0328 = 0;
  $$0337 = $7;
  $$sink369 = $8;
  $spec$select339$sink = (__ZNSt3__213__lower_boundIRNS_6__lessIjmEEPKjmEET0_S6_S6_RKT1_T_(10544, 10736, $3, $1) | 0) - 10544 >> 2;
  L4 : while (1) {
   $16 = (HEAP32[10544 + ($spec$select339$sink << 2) >> 2] | 0) + $$sink369 | 0;
   $$0334 = 5;
   while (1) {
    if ($$0334 >>> 0 >= 47) {
     label = 6;
     break;
    }
    $19 = HEAP32[10352 + ($$0334 << 2) >> 2] | 0;
    $20 = ($16 >>> 0) / ($19 >>> 0) | 0;
    if ($20 >>> 0 < $19 >>> 0) {
     label = 107;
     break L4;
    }
    if (($16 | 0) == (Math_imul($20, $19) | 0)) {
     $$6 = $$0328;
     break;
    } else $$0334 = $$0334 + 1 | 0;
   }
   L10 : do if ((label | 0) == 6) {
    label = 0;
    $$0 = 211;
    $$4 = $$0328;
    L12 : while (1) {
     $25 = ($16 >>> 0) / ($$0 >>> 0) | 0;
     do if ($25 >>> 0 < $$0 >>> 0) {
      $$1 = $$0;
      $$2332 = 1;
      $$5 = $16;
     } else if (($16 | 0) == (Math_imul($25, $$0) | 0)) {
      $$1 = $$0;
      $$2332 = 9;
      $$5 = $$4;
     } else {
      $29 = $$0 + 10 | 0;
      $30 = ($16 >>> 0) / ($29 >>> 0) | 0;
      if ($30 >>> 0 < $29 >>> 0) {
       $$1 = $29;
       $$2332 = 1;
       $$5 = $16;
      } else if (($16 | 0) == (Math_imul($30, $29) | 0)) {
       $$1 = $29;
       $$2332 = 9;
       $$5 = $$4;
      } else {
       $34 = $$0 + 12 | 0;
       $35 = ($16 >>> 0) / ($34 >>> 0) | 0;
       if ($35 >>> 0 < $34 >>> 0) {
        $$1 = $34;
        $$2332 = 1;
        $$5 = $16;
       } else if (($16 | 0) == (Math_imul($35, $34) | 0)) {
        $$1 = $34;
        $$2332 = 9;
        $$5 = $$4;
       } else {
        $39 = $$0 + 16 | 0;
        $40 = ($16 >>> 0) / ($39 >>> 0) | 0;
        if ($40 >>> 0 < $39 >>> 0) {
         $$1 = $39;
         $$2332 = 1;
         $$5 = $16;
        } else if (($16 | 0) == (Math_imul($40, $39) | 0)) {
         $$1 = $39;
         $$2332 = 9;
         $$5 = $$4;
        } else {
         $44 = $$0 + 18 | 0;
         $45 = ($16 >>> 0) / ($44 >>> 0) | 0;
         if ($45 >>> 0 < $44 >>> 0) {
          $$1 = $44;
          $$2332 = 1;
          $$5 = $16;
         } else if (($16 | 0) == (Math_imul($45, $44) | 0)) {
          $$1 = $44;
          $$2332 = 9;
          $$5 = $$4;
         } else {
          $49 = $$0 + 22 | 0;
          $50 = ($16 >>> 0) / ($49 >>> 0) | 0;
          if ($50 >>> 0 < $49 >>> 0) {
           $$1 = $49;
           $$2332 = 1;
           $$5 = $16;
          } else if (($16 | 0) == (Math_imul($50, $49) | 0)) {
           $$1 = $49;
           $$2332 = 9;
           $$5 = $$4;
          } else {
           $54 = $$0 + 28 | 0;
           $55 = ($16 >>> 0) / ($54 >>> 0) | 0;
           if ($55 >>> 0 < $54 >>> 0) {
            $$1 = $54;
            $$2332 = 1;
            $$5 = $16;
           } else if (($16 | 0) == (Math_imul($55, $54) | 0)) {
            $$1 = $54;
            $$2332 = 9;
            $$5 = $$4;
           } else {
            $59 = $$0 + 30 | 0;
            $60 = ($16 >>> 0) / ($59 >>> 0) | 0;
            if ($60 >>> 0 < $59 >>> 0) {
             $$1 = $59;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($60, $59) | 0)) {
             $$1 = $59;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $64 = $$0 + 36 | 0;
            $65 = ($16 >>> 0) / ($64 >>> 0) | 0;
            if ($65 >>> 0 < $64 >>> 0) {
             $$1 = $64;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($65, $64) | 0)) {
             $$1 = $64;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $69 = $$0 + 40 | 0;
            $70 = ($16 >>> 0) / ($69 >>> 0) | 0;
            if ($70 >>> 0 < $69 >>> 0) {
             $$1 = $69;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($70, $69) | 0)) {
             $$1 = $69;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $74 = $$0 + 42 | 0;
            $75 = ($16 >>> 0) / ($74 >>> 0) | 0;
            if ($75 >>> 0 < $74 >>> 0) {
             $$1 = $74;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($75, $74) | 0)) {
             $$1 = $74;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $79 = $$0 + 46 | 0;
            $80 = ($16 >>> 0) / ($79 >>> 0) | 0;
            if ($80 >>> 0 < $79 >>> 0) {
             $$1 = $79;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($80, $79) | 0)) {
             $$1 = $79;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $84 = $$0 + 52 | 0;
            $85 = ($16 >>> 0) / ($84 >>> 0) | 0;
            if ($85 >>> 0 < $84 >>> 0) {
             $$1 = $84;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($85, $84) | 0)) {
             $$1 = $84;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $89 = $$0 + 58 | 0;
            $90 = ($16 >>> 0) / ($89 >>> 0) | 0;
            if ($90 >>> 0 < $89 >>> 0) {
             $$1 = $89;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($90, $89) | 0)) {
             $$1 = $89;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $94 = $$0 + 60 | 0;
            $95 = ($16 >>> 0) / ($94 >>> 0) | 0;
            if ($95 >>> 0 < $94 >>> 0) {
             $$1 = $94;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($95, $94) | 0)) {
             $$1 = $94;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $99 = $$0 + 66 | 0;
            $100 = ($16 >>> 0) / ($99 >>> 0) | 0;
            if ($100 >>> 0 < $99 >>> 0) {
             $$1 = $99;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($100, $99) | 0)) {
             $$1 = $99;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $104 = $$0 + 70 | 0;
            $105 = ($16 >>> 0) / ($104 >>> 0) | 0;
            if ($105 >>> 0 < $104 >>> 0) {
             $$1 = $104;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($105, $104) | 0)) {
             $$1 = $104;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $109 = $$0 + 72 | 0;
            $110 = ($16 >>> 0) / ($109 >>> 0) | 0;
            if ($110 >>> 0 < $109 >>> 0) {
             $$1 = $109;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($110, $109) | 0)) {
             $$1 = $109;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $114 = $$0 + 78 | 0;
            $115 = ($16 >>> 0) / ($114 >>> 0) | 0;
            if ($115 >>> 0 < $114 >>> 0) {
             $$1 = $114;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($115, $114) | 0)) {
             $$1 = $114;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $119 = $$0 + 82 | 0;
            $120 = ($16 >>> 0) / ($119 >>> 0) | 0;
            if ($120 >>> 0 < $119 >>> 0) {
             $$1 = $119;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($120, $119) | 0)) {
             $$1 = $119;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $124 = $$0 + 88 | 0;
            $125 = ($16 >>> 0) / ($124 >>> 0) | 0;
            if ($125 >>> 0 < $124 >>> 0) {
             $$1 = $124;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($125, $124) | 0)) {
             $$1 = $124;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $129 = $$0 + 96 | 0;
            $130 = ($16 >>> 0) / ($129 >>> 0) | 0;
            if ($130 >>> 0 < $129 >>> 0) {
             $$1 = $129;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($130, $129) | 0)) {
             $$1 = $129;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $134 = $$0 + 100 | 0;
            $135 = ($16 >>> 0) / ($134 >>> 0) | 0;
            if ($135 >>> 0 < $134 >>> 0) {
             $$1 = $134;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($135, $134) | 0)) {
             $$1 = $134;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $139 = $$0 + 102 | 0;
            $140 = ($16 >>> 0) / ($139 >>> 0) | 0;
            if ($140 >>> 0 < $139 >>> 0) {
             $$1 = $139;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($140, $139) | 0)) {
             $$1 = $139;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $144 = $$0 + 106 | 0;
            $145 = ($16 >>> 0) / ($144 >>> 0) | 0;
            if ($145 >>> 0 < $144 >>> 0) {
             $$1 = $144;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($145, $144) | 0)) {
             $$1 = $144;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $149 = $$0 + 108 | 0;
            $150 = ($16 >>> 0) / ($149 >>> 0) | 0;
            if ($150 >>> 0 < $149 >>> 0) {
             $$1 = $149;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($150, $149) | 0)) {
             $$1 = $149;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $154 = $$0 + 112 | 0;
            $155 = ($16 >>> 0) / ($154 >>> 0) | 0;
            if ($155 >>> 0 < $154 >>> 0) {
             $$1 = $154;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($155, $154) | 0)) {
             $$1 = $154;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $159 = $$0 + 120 | 0;
            $160 = ($16 >>> 0) / ($159 >>> 0) | 0;
            if ($160 >>> 0 < $159 >>> 0) {
             $$1 = $159;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($160, $159) | 0)) {
             $$1 = $159;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $164 = $$0 + 126 | 0;
            $165 = ($16 >>> 0) / ($164 >>> 0) | 0;
            if ($165 >>> 0 < $164 >>> 0) {
             $$1 = $164;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($165, $164) | 0)) {
             $$1 = $164;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $169 = $$0 + 130 | 0;
            $170 = ($16 >>> 0) / ($169 >>> 0) | 0;
            if ($170 >>> 0 < $169 >>> 0) {
             $$1 = $169;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($170, $169) | 0)) {
             $$1 = $169;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $174 = $$0 + 136 | 0;
            $175 = ($16 >>> 0) / ($174 >>> 0) | 0;
            if ($175 >>> 0 < $174 >>> 0) {
             $$1 = $174;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($175, $174) | 0)) {
             $$1 = $174;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $179 = $$0 + 138 | 0;
            $180 = ($16 >>> 0) / ($179 >>> 0) | 0;
            if ($180 >>> 0 < $179 >>> 0) {
             $$1 = $179;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($180, $179) | 0)) {
             $$1 = $179;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $184 = $$0 + 142 | 0;
            $185 = ($16 >>> 0) / ($184 >>> 0) | 0;
            if ($185 >>> 0 < $184 >>> 0) {
             $$1 = $184;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($185, $184) | 0)) {
             $$1 = $184;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $189 = $$0 + 148 | 0;
            $190 = ($16 >>> 0) / ($189 >>> 0) | 0;
            if ($190 >>> 0 < $189 >>> 0) {
             $$1 = $189;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($190, $189) | 0)) {
             $$1 = $189;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $194 = $$0 + 150 | 0;
            $195 = ($16 >>> 0) / ($194 >>> 0) | 0;
            if ($195 >>> 0 < $194 >>> 0) {
             $$1 = $194;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($195, $194) | 0)) {
             $$1 = $194;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $199 = $$0 + 156 | 0;
            $200 = ($16 >>> 0) / ($199 >>> 0) | 0;
            if ($200 >>> 0 < $199 >>> 0) {
             $$1 = $199;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($200, $199) | 0)) {
             $$1 = $199;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $204 = $$0 + 162 | 0;
            $205 = ($16 >>> 0) / ($204 >>> 0) | 0;
            if ($205 >>> 0 < $204 >>> 0) {
             $$1 = $204;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($205, $204) | 0)) {
             $$1 = $204;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $209 = $$0 + 166 | 0;
            $210 = ($16 >>> 0) / ($209 >>> 0) | 0;
            if ($210 >>> 0 < $209 >>> 0) {
             $$1 = $209;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($210, $209) | 0)) {
             $$1 = $209;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $214 = $$0 + 168 | 0;
            $215 = ($16 >>> 0) / ($214 >>> 0) | 0;
            if ($215 >>> 0 < $214 >>> 0) {
             $$1 = $214;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($215, $214) | 0)) {
             $$1 = $214;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $219 = $$0 + 172 | 0;
            $220 = ($16 >>> 0) / ($219 >>> 0) | 0;
            if ($220 >>> 0 < $219 >>> 0) {
             $$1 = $219;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($220, $219) | 0)) {
             $$1 = $219;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $224 = $$0 + 178 | 0;
            $225 = ($16 >>> 0) / ($224 >>> 0) | 0;
            if ($225 >>> 0 < $224 >>> 0) {
             $$1 = $224;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($225, $224) | 0)) {
             $$1 = $224;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $229 = $$0 + 180 | 0;
            $230 = ($16 >>> 0) / ($229 >>> 0) | 0;
            if ($230 >>> 0 < $229 >>> 0) {
             $$1 = $229;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($230, $229) | 0)) {
             $$1 = $229;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $234 = $$0 + 186 | 0;
            $235 = ($16 >>> 0) / ($234 >>> 0) | 0;
            if ($235 >>> 0 < $234 >>> 0) {
             $$1 = $234;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($235, $234) | 0)) {
             $$1 = $234;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $239 = $$0 + 190 | 0;
            $240 = ($16 >>> 0) / ($239 >>> 0) | 0;
            if ($240 >>> 0 < $239 >>> 0) {
             $$1 = $239;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($240, $239) | 0)) {
             $$1 = $239;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $244 = $$0 + 192 | 0;
            $245 = ($16 >>> 0) / ($244 >>> 0) | 0;
            if ($245 >>> 0 < $244 >>> 0) {
             $$1 = $244;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($245, $244) | 0)) {
             $$1 = $244;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $249 = $$0 + 196 | 0;
            $250 = ($16 >>> 0) / ($249 >>> 0) | 0;
            if ($250 >>> 0 < $249 >>> 0) {
             $$1 = $249;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($250, $249) | 0)) {
             $$1 = $249;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $254 = $$0 + 198 | 0;
            $255 = ($16 >>> 0) / ($254 >>> 0) | 0;
            if ($255 >>> 0 < $254 >>> 0) {
             $$1 = $254;
             $$2332 = 1;
             $$5 = $16;
             break;
            }
            if (($16 | 0) == (Math_imul($255, $254) | 0)) {
             $$1 = $254;
             $$2332 = 9;
             $$5 = $$4;
             break;
            }
            $259 = $$0 + 208 | 0;
            $260 = ($16 >>> 0) / ($259 >>> 0) | 0;
            $261 = $260 >>> 0 < $259 >>> 0;
            $263 = ($16 | 0) == (Math_imul($260, $259) | 0);
            $$1 = $261 | $263 ? $259 : $$0 + 210 | 0;
            $$2332 = $261 ? 1 : $263 ? 9 : 0;
            $$5 = $261 ? $16 : $$4;
           }
          }
         }
        }
       }
      }
     } while (0);
     switch ($$2332 & 15) {
     case 9:
      {
       $$6 = $$5;
       break L10;
       break;
      }
     case 0:
      {
       $$0 = $$1;
       $$4 = $$5;
       break;
      }
     default:
      break L12;
     }
    }
    if (!$$2332) $$6 = $$5; else {
     label = 108;
     break L4;
    }
   } while (0);
   $266 = $spec$select339$sink + 1 | 0;
   $267 = ($266 | 0) == 48;
   $spec$select = $$0337 + ($267 & 1) | 0;
   $$0328 = $$6;
   $$0337 = $spec$select;
   $$sink369 = $spec$select * 210 | 0;
   $spec$select339$sink = $267 ? 0 : $266;
  }
  if ((label | 0) == 107) {
   HEAP32[$2 >> 2] = $16;
   $$8 = $16;
   break;
  } else if ((label | 0) == 108) {
   HEAP32[$2 >> 2] = $16;
   $$8 = $$5;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$8 | 0;
}

function _fmt_fp($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0463$lcssa = 0, $$0463588 = 0, $$0464599 = 0, $$0471 = 0.0, $$0479 = 0, $$0487657 = 0, $$0488669 = 0, $$0488671 = 0, $$0497670 = 0, $$0498 = 0, $$0511586 = 0.0, $$0513 = 0, $$0516652 = 0, $$0522 = 0, $$0523 = 0, $$0525 = 0, $$0527 = 0, $$0529$in646 = 0, $$0532651 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0, $$1480 = 0, $$1482$lcssa = 0, $$1482683 = 0, $$1489656 = 0, $$1499 = 0, $$1510587 = 0, $$1514$lcssa = 0, $$1514614 = 0, $$1517 = 0, $$1526 = 0, $$1530621 = 0, $$1533$lcssa = 0, $$1533645 = 0, $$1604 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2483 = 0, $$2490$lcssa = 0, $$2490638 = 0, $$2500$lcssa = 0, $$2500682 = 0, $$2515 = 0, $$2518634 = 0, $$2531 = 0, $$2534633 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484663 = 0, $$3501$lcssa = 0, $$3501676 = 0, $$3535620 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478594 = 0, $$4492 = 0, $$4502$lcssa = 0, $$4502662 = 0, $$4520 = 0, $$5$lcssa = 0, $$5486$lcssa = 0, $$5486639 = 0, $$5493603 = 0, $$5503 = 0, $$5521 = 0, $$5609 = 0, $$6 = 0, $$6494593 = 0, $$7495608 = 0, $$8 = 0, $$8506 = 0, $$9 = 0, $$9507$lcssa = 0, $$9507625 = 0, $$lcssa583 = 0, $$pn = 0, $$pr = 0, $$pr564 = 0, $$pre$phi717Z2D = 0, $$pre$phi718Z2D = 0, $$pre720 = 0, $$sink757 = 0, $10 = 0, $103 = 0, $104 = 0, $108 = 0, $109 = 0, $11 = 0, $113 = 0, $115 = 0, $116 = 0, $12 = 0, $123 = 0, $126 = 0, $13 = 0, $132 = 0, $134 = 0, $136 = 0, $139 = 0, $141 = 0, $142 = 0, $145 = 0, $147 = 0, $15 = 0.0, $151 = 0, $153 = 0, $158 = 0, $16 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $168 = 0, $174 = 0, $175 = 0, $176 = 0, $188 = 0, $202 = 0, $203 = 0, $206 = 0, $211 = 0, $212 = 0, $214 = 0, $222 = 0, $223 = 0, $225 = 0, $227 = 0, $229 = 0, $231 = 0, $232 = 0, $234 = 0, $237 = 0, $240 = 0, $245 = 0, $248 = 0, $25 = 0, $251 = 0, $253 = 0, $255 = 0, $257 = 0, $262 = 0, $263 = 0, $266 = 0, $268 = 0, $270 = 0, $272 = 0, $286 = 0, $291 = 0, $30 = 0, $300 = 0, $301 = 0, $305 = 0, $308 = 0, $310 = 0, $312 = 0, $316 = 0, $319 = 0, $320 = 0, $324 = 0, $334 = 0, $339 = 0, $34 = 0, $342 = 0, $343 = 0, $344 = 0, $346 = 0, $351 = 0, $364 = 0, $368 = 0, $373 = 0, $38 = 0.0, $382 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $389 = 0, $39 = 0, $393 = 0, $395 = 0, $398 = 0, $401 = 0, $412 = 0, $42 = 0, $44 = 0, $47 = 0, $49 = 0, $6 = 0, $63 = 0, $66 = 0, $69 = 0, $7 = 0, $71 = 0, $79 = 0, $8 = 0, $80 = 0, $82 = 0, $83 = 0, $89 = 0, $9 = 0, $spec$select = 0, $spec$select539 = 0, $spec$select540 = 0, $spec$select540723 = 0, $spec$select541 = 0, $spec$select544 = 0.0, $spec$select548 = 0, $spec$select549 = 0, $spec$select551 = 0, $spec$select554 = 0, $spec$select557 = 0, $spec$select567 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(560);
 $6 = sp + 32 | 0;
 $7 = sp + 536 | 0;
 $8 = sp;
 $9 = $8;
 $10 = sp + 540 | 0;
 HEAP32[$7 >> 2] = 0;
 $11 = $10 + 12 | 0;
 $12 = ___DOUBLE_BITS_737($1) | 0;
 $13 = getTempRet0() | 0;
 if (($13 | 0) < 0) {
  $15 = -$1;
  $16 = ___DOUBLE_BITS_737($15) | 0;
  $$0471 = $15;
  $$0522 = 1;
  $$0523 = 46078;
  $25 = getTempRet0() | 0;
  $412 = $16;
 } else {
  $$0471 = $1;
  $$0522 = ($4 & 2049 | 0) != 0 & 1;
  $$0523 = ($4 & 2048 | 0) == 0 ? (($4 & 1 | 0) == 0 ? 46079 : 46084) : 46081;
  $25 = $13;
  $412 = $12;
 }
 do if (0 == 0 & ($25 & 2146435072 | 0) == 2146435072) {
  $30 = ($5 & 32 | 0) != 0;
  $34 = $$0522 + 3 | 0;
  _pad_734($0, 32, $2, $34, $4 & -65537);
  _out_728($0, $$0523, $$0522);
  _out_728($0, $$0471 != $$0471 | 0.0 != 0.0 ? ($30 ? 46118 : 46105) : $30 ? 46097 : 46101, 3);
  _pad_734($0, 32, $2, $34, $4 ^ 8192);
  $$sink757 = $34;
 } else {
  $38 = +_frexp($$0471, $7) * 2.0;
  $39 = $38 != 0.0;
  if ($39) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
  $42 = $5 | 32;
  if (($42 | 0) == 97) {
   $44 = $5 & 32;
   $spec$select = ($44 | 0) == 0 ? $$0523 : $$0523 + 9 | 0;
   $47 = $$0522 | 2;
   $49 = 12 - $3 | 0;
   do if ($3 >>> 0 > 11 | ($49 | 0) == 0) $$1472 = $38; else {
    $$0511586 = 8.0;
    $$1510587 = $49;
    do {
     $$1510587 = $$1510587 + -1 | 0;
     $$0511586 = $$0511586 * 16.0;
    } while (($$1510587 | 0) != 0);
    if ((HEAP8[$spec$select >> 0] | 0) == 45) {
     $$1472 = -($$0511586 + (-$38 - $$0511586));
     break;
    } else {
     $$1472 = $38 + $$0511586 - $$0511586;
     break;
    }
   } while (0);
   $63 = HEAP32[$7 >> 2] | 0;
   $66 = ($63 | 0) < 0 ? 0 - $63 | 0 : $63;
   $69 = _fmt_u($66, (($66 | 0) < 0) << 31 >> 31, $11) | 0;
   if (($69 | 0) == ($11 | 0)) {
    $71 = $10 + 11 | 0;
    HEAP8[$71 >> 0] = 48;
    $$0513 = $71;
   } else $$0513 = $69;
   HEAP8[$$0513 + -1 >> 0] = ($63 >> 31 & 2) + 43;
   $79 = $$0513 + -2 | 0;
   HEAP8[$79 >> 0] = $5 + 15;
   $80 = ($3 | 0) < 1;
   $82 = ($4 & 8 | 0) == 0;
   $$0525 = $8;
   $$2473 = $$1472;
   while (1) {
    $83 = ~~$$2473;
    $89 = $$0525 + 1 | 0;
    HEAP8[$$0525 >> 0] = $44 | HEAPU8[4448 + $83 >> 0];
    $$2473 = ($$2473 - +($83 | 0)) * 16.0;
    if (($89 - $9 | 0) == 1) if ($82 & ($80 & $$2473 == 0.0)) $$1526 = $89; else {
     HEAP8[$89 >> 0] = 46;
     $$1526 = $$0525 + 2 | 0;
    } else $$1526 = $89;
    if (!($$2473 != 0.0)) break; else $$0525 = $$1526;
   }
   $$pre720 = $$1526;
   if (!$3) label = 25; else if ((-2 - $9 + $$pre720 | 0) < ($3 | 0)) {
    $103 = $11;
    $104 = $79;
    $$0527 = $3 + 2 + $103 - $104 | 0;
    $$pre$phi717Z2D = $103;
    $$pre$phi718Z2D = $104;
   } else label = 25;
   if ((label | 0) == 25) {
    $108 = $11;
    $109 = $79;
    $$0527 = $108 - $9 - $109 + $$pre720 | 0;
    $$pre$phi717Z2D = $108;
    $$pre$phi718Z2D = $109;
   }
   $113 = $$0527 + $47 | 0;
   _pad_734($0, 32, $2, $113, $4);
   _out_728($0, $spec$select, $47);
   _pad_734($0, 48, $2, $113, $4 ^ 65536);
   $115 = $$pre720 - $9 | 0;
   _out_728($0, $8, $115);
   $116 = $$pre$phi717Z2D - $$pre$phi718Z2D | 0;
   _pad_734($0, 48, $$0527 - ($115 + $116) | 0, 0, 0);
   _out_728($0, $79, $116);
   _pad_734($0, 32, $2, $113, $4 ^ 8192);
   $$sink757 = $113;
   break;
  }
  $spec$select539 = ($3 | 0) < 0 ? 6 : $3;
  if ($39) {
   $123 = (HEAP32[$7 >> 2] | 0) + -28 | 0;
   HEAP32[$7 >> 2] = $123;
   $$3 = $38 * 268435456.0;
   $$pr = $123;
  } else {
   $$3 = $38;
   $$pr = HEAP32[$7 >> 2] | 0;
  }
  $$0498 = ($$pr | 0) < 0 ? $6 : $6 + 288 | 0;
  $$1499 = $$0498;
  $$4 = $$3;
  do {
   $126 = ~~$$4 >>> 0;
   HEAP32[$$1499 >> 2] = $126;
   $$1499 = $$1499 + 4 | 0;
   $$4 = ($$4 - +($126 >>> 0)) * 1.0e9;
  } while ($$4 != 0.0);
  $132 = $$0498;
  if (($$pr | 0) > 0) {
   $$1482683 = $$0498;
   $$2500682 = $$1499;
   $134 = $$pr;
   while (1) {
    $136 = ($134 | 0) < 29 ? $134 : 29;
    $$0488669 = $$2500682 + -4 | 0;
    if ($$0488669 >>> 0 < $$1482683 >>> 0) $$2483 = $$1482683; else {
     $$0488671 = $$0488669;
     $$0497670 = 0;
     do {
      $139 = _bitshift64Shl(HEAP32[$$0488671 >> 2] | 0, 0, $136 | 0) | 0;
      $141 = _i64Add($139 | 0, getTempRet0() | 0, $$0497670 | 0, 0) | 0;
      $142 = getTempRet0() | 0;
      $$0497670 = ___udivdi3($141 | 0, $142 | 0, 1e9, 0) | 0;
      $145 = ___muldi3($$0497670 | 0, getTempRet0() | 0, 1e9, 0) | 0;
      $147 = _i64Subtract($141 | 0, $142 | 0, $145 | 0, getTempRet0() | 0) | 0;
      getTempRet0() | 0;
      HEAP32[$$0488671 >> 2] = $147;
      $$0488671 = $$0488671 + -4 | 0;
     } while ($$0488671 >>> 0 >= $$1482683 >>> 0);
     if (!$$0497670) $$2483 = $$1482683; else {
      $151 = $$1482683 + -4 | 0;
      HEAP32[$151 >> 2] = $$0497670;
      $$2483 = $151;
     }
    }
    L57 : do if ($$2500682 >>> 0 > $$2483 >>> 0) {
     $$3501676 = $$2500682;
     while (1) {
      $153 = $$3501676 + -4 | 0;
      if (HEAP32[$153 >> 2] | 0) {
       $$3501$lcssa = $$3501676;
       break L57;
      }
      if ($153 >>> 0 > $$2483 >>> 0) $$3501676 = $153; else {
       $$3501$lcssa = $153;
       break;
      }
     }
    } else $$3501$lcssa = $$2500682; while (0);
    $158 = (HEAP32[$7 >> 2] | 0) - $136 | 0;
    HEAP32[$7 >> 2] = $158;
    if (($158 | 0) > 0) {
     $$1482683 = $$2483;
     $$2500682 = $$3501$lcssa;
     $134 = $158;
    } else {
     $$1482$lcssa = $$2483;
     $$2500$lcssa = $$3501$lcssa;
     $$pr564 = $158;
     break;
    }
   }
  } else {
   $$1482$lcssa = $$0498;
   $$2500$lcssa = $$1499;
   $$pr564 = $$pr;
  }
  if (($$pr564 | 0) < 0) {
   $163 = (($spec$select539 + 25 | 0) / 9 | 0) + 1 | 0;
   $164 = ($42 | 0) == 102;
   $$3484663 = $$1482$lcssa;
   $$4502662 = $$2500$lcssa;
   $166 = $$pr564;
   while (1) {
    $165 = 0 - $166 | 0;
    $168 = ($165 | 0) < 9 ? $165 : 9;
    if ($$3484663 >>> 0 < $$4502662 >>> 0) {
     $174 = (1 << $168) + -1 | 0;
     $175 = 1e9 >>> $168;
     $$0487657 = 0;
     $$1489656 = $$3484663;
     do {
      $176 = HEAP32[$$1489656 >> 2] | 0;
      HEAP32[$$1489656 >> 2] = ($176 >>> $168) + $$0487657;
      $$0487657 = Math_imul($176 & $174, $175) | 0;
      $$1489656 = $$1489656 + 4 | 0;
     } while ($$1489656 >>> 0 < $$4502662 >>> 0);
     $spec$select540 = (HEAP32[$$3484663 >> 2] | 0) == 0 ? $$3484663 + 4 | 0 : $$3484663;
     if (!$$0487657) {
      $$5503 = $$4502662;
      $spec$select540723 = $spec$select540;
     } else {
      HEAP32[$$4502662 >> 2] = $$0487657;
      $$5503 = $$4502662 + 4 | 0;
      $spec$select540723 = $spec$select540;
     }
    } else {
     $$5503 = $$4502662;
     $spec$select540723 = (HEAP32[$$3484663 >> 2] | 0) == 0 ? $$3484663 + 4 | 0 : $$3484663;
    }
    $188 = $164 ? $$0498 : $spec$select540723;
    $spec$select541 = ($$5503 - $188 >> 2 | 0) > ($163 | 0) ? $188 + ($163 << 2) | 0 : $$5503;
    $166 = (HEAP32[$7 >> 2] | 0) + $168 | 0;
    HEAP32[$7 >> 2] = $166;
    if (($166 | 0) >= 0) {
     $$3484$lcssa = $spec$select540723;
     $$4502$lcssa = $spec$select541;
     break;
    } else {
     $$3484663 = $spec$select540723;
     $$4502662 = $spec$select541;
    }
   }
  } else {
   $$3484$lcssa = $$1482$lcssa;
   $$4502$lcssa = $$2500$lcssa;
  }
  if ($$3484$lcssa >>> 0 < $$4502$lcssa >>> 0) {
   $202 = ($132 - $$3484$lcssa >> 2) * 9 | 0;
   $203 = HEAP32[$$3484$lcssa >> 2] | 0;
   if ($203 >>> 0 < 10) $$1517 = $202; else {
    $$0516652 = $202;
    $$0532651 = 10;
    while (1) {
     $$0532651 = $$0532651 * 10 | 0;
     $206 = $$0516652 + 1 | 0;
     if ($203 >>> 0 < $$0532651 >>> 0) {
      $$1517 = $206;
      break;
     } else $$0516652 = $206;
    }
   }
  } else $$1517 = 0;
  $211 = ($42 | 0) == 103;
  $212 = ($spec$select539 | 0) != 0;
  $214 = $spec$select539 - (($42 | 0) == 102 ? 0 : $$1517) + (($212 & $211) << 31 >> 31) | 0;
  if (($214 | 0) < ((($$4502$lcssa - $132 >> 2) * 9 | 0) + -9 | 0)) {
   $222 = $214 + 9216 | 0;
   $223 = ($222 | 0) / 9 | 0;
   $225 = $$0498 + 4 + ($223 + -1024 << 2) | 0;
   $227 = $222 - ($223 * 9 | 0) | 0;
   if (($227 | 0) < 8) {
    $$0529$in646 = $227;
    $$1533645 = 10;
    while (1) {
     $229 = $$1533645 * 10 | 0;
     if (($$0529$in646 | 0) < 7) {
      $$0529$in646 = $$0529$in646 + 1 | 0;
      $$1533645 = $229;
     } else {
      $$1533$lcssa = $229;
      break;
     }
    }
   } else $$1533$lcssa = 10;
   $231 = HEAP32[$225 >> 2] | 0;
   $232 = ($231 >>> 0) / ($$1533$lcssa >>> 0) | 0;
   $234 = $231 - (Math_imul($232, $$1533$lcssa) | 0) | 0;
   $237 = ($225 + 4 | 0) == ($$4502$lcssa | 0);
   if ($237 & ($234 | 0) == 0) {
    $$4492 = $225;
    $$4520 = $$1517;
    $$8 = $$3484$lcssa;
   } else {
    $spec$select544 = ($232 & 1 | 0) == 0 ? 9007199254740992.0 : 9007199254740994.0;
    $240 = $$1533$lcssa >>> 1;
    $spec$select567 = $234 >>> 0 < $240 >>> 0 ? .5 : $237 & ($234 | 0) == ($240 | 0) ? 1.0 : 1.5;
    if (!$$0522) {
     $$1467 = $spec$select567;
     $$1469 = $spec$select544;
    } else {
     $245 = (HEAP8[$$0523 >> 0] | 0) == 45;
     $$1467 = $245 ? -$spec$select567 : $spec$select567;
     $$1469 = $245 ? -$spec$select544 : $spec$select544;
    }
    $248 = $231 - $234 | 0;
    HEAP32[$225 >> 2] = $248;
    if ($$1469 + $$1467 != $$1469) {
     $251 = $248 + $$1533$lcssa | 0;
     HEAP32[$225 >> 2] = $251;
     if ($251 >>> 0 > 999999999) {
      $$2490638 = $225;
      $$5486639 = $$3484$lcssa;
      while (1) {
       $253 = $$2490638 + -4 | 0;
       HEAP32[$$2490638 >> 2] = 0;
       if ($253 >>> 0 < $$5486639 >>> 0) {
        $255 = $$5486639 + -4 | 0;
        HEAP32[$255 >> 2] = 0;
        $$6 = $255;
       } else $$6 = $$5486639;
       $257 = (HEAP32[$253 >> 2] | 0) + 1 | 0;
       HEAP32[$253 >> 2] = $257;
       if ($257 >>> 0 > 999999999) {
        $$2490638 = $253;
        $$5486639 = $$6;
       } else {
        $$2490$lcssa = $253;
        $$5486$lcssa = $$6;
        break;
       }
      }
     } else {
      $$2490$lcssa = $225;
      $$5486$lcssa = $$3484$lcssa;
     }
     $262 = ($132 - $$5486$lcssa >> 2) * 9 | 0;
     $263 = HEAP32[$$5486$lcssa >> 2] | 0;
     if ($263 >>> 0 < 10) {
      $$4492 = $$2490$lcssa;
      $$4520 = $262;
      $$8 = $$5486$lcssa;
     } else {
      $$2518634 = $262;
      $$2534633 = 10;
      while (1) {
       $$2534633 = $$2534633 * 10 | 0;
       $266 = $$2518634 + 1 | 0;
       if ($263 >>> 0 < $$2534633 >>> 0) {
        $$4492 = $$2490$lcssa;
        $$4520 = $266;
        $$8 = $$5486$lcssa;
        break;
       } else $$2518634 = $266;
      }
     }
    } else {
     $$4492 = $225;
     $$4520 = $$1517;
     $$8 = $$3484$lcssa;
    }
   }
   $268 = $$4492 + 4 | 0;
   $$5521 = $$4520;
   $$8506 = $$4502$lcssa >>> 0 > $268 >>> 0 ? $268 : $$4502$lcssa;
   $$9 = $$8;
  } else {
   $$5521 = $$1517;
   $$8506 = $$4502$lcssa;
   $$9 = $$3484$lcssa;
  }
  $270 = 0 - $$5521 | 0;
  L109 : do if ($$8506 >>> 0 > $$9 >>> 0) {
   $$9507625 = $$8506;
   while (1) {
    $272 = $$9507625 + -4 | 0;
    if (HEAP32[$272 >> 2] | 0) {
     $$9507$lcssa = $$9507625;
     $$lcssa583 = 1;
     break L109;
    }
    if ($272 >>> 0 > $$9 >>> 0) $$9507625 = $272; else {
     $$9507$lcssa = $272;
     $$lcssa583 = 0;
     break;
    }
   }
  } else {
   $$9507$lcssa = $$8506;
   $$lcssa583 = 0;
  } while (0);
  do if ($211) {
   $spec$select548 = $spec$select539 + (($212 ^ 1) & 1) | 0;
   if (($spec$select548 | 0) > ($$5521 | 0) & ($$5521 | 0) > -5) {
    $$0479 = $5 + -1 | 0;
    $$2476 = $spec$select548 + -1 - $$5521 | 0;
   } else {
    $$0479 = $5 + -2 | 0;
    $$2476 = $spec$select548 + -1 | 0;
   }
   if (!($4 & 8)) {
    if ($$lcssa583) {
     $286 = HEAP32[$$9507$lcssa + -4 >> 2] | 0;
     if (!$286) $$2531 = 9; else if (!(($286 >>> 0) % 10 | 0)) {
      $$1530621 = 0;
      $$3535620 = 10;
      while (1) {
       $$3535620 = $$3535620 * 10 | 0;
       $291 = $$1530621 + 1 | 0;
       if (($286 >>> 0) % ($$3535620 >>> 0) | 0 | 0) {
        $$2531 = $291;
        break;
       } else $$1530621 = $291;
      }
     } else $$2531 = 0;
    } else $$2531 = 9;
    $300 = (($$9507$lcssa - $132 >> 2) * 9 | 0) + -9 | 0;
    if (($$0479 | 32 | 0) == 102) {
     $301 = $300 - $$2531 | 0;
     $spec$select549 = ($301 | 0) > 0 ? $301 : 0;
     $$1480 = $$0479;
     $$3477 = ($$2476 | 0) < ($spec$select549 | 0) ? $$2476 : $spec$select549;
     break;
    } else {
     $305 = $300 + $$5521 - $$2531 | 0;
     $spec$select551 = ($305 | 0) > 0 ? $305 : 0;
     $$1480 = $$0479;
     $$3477 = ($$2476 | 0) < ($spec$select551 | 0) ? $$2476 : $spec$select551;
     break;
    }
   } else {
    $$1480 = $$0479;
    $$3477 = $$2476;
   }
  } else {
   $$1480 = $5;
   $$3477 = $spec$select539;
  } while (0);
  $308 = ($$3477 | 0) != 0;
  $310 = $308 ? 1 : $4 >>> 3 & 1;
  $312 = ($$1480 | 32 | 0) == 102;
  if ($312) {
   $$2515 = 0;
   $$pn = ($$5521 | 0) > 0 ? $$5521 : 0;
  } else {
   $316 = ($$5521 | 0) < 0 ? $270 : $$5521;
   $319 = _fmt_u($316, (($316 | 0) < 0) << 31 >> 31, $11) | 0;
   $320 = $11;
   if (($320 - $319 | 0) < 2) {
    $$1514614 = $319;
    while (1) {
     $324 = $$1514614 + -1 | 0;
     HEAP8[$324 >> 0] = 48;
     if (($320 - $324 | 0) < 2) $$1514614 = $324; else {
      $$1514$lcssa = $324;
      break;
     }
    }
   } else $$1514$lcssa = $319;
   HEAP8[$$1514$lcssa + -1 >> 0] = ($$5521 >> 31 & 2) + 43;
   $334 = $$1514$lcssa + -2 | 0;
   HEAP8[$334 >> 0] = $$1480;
   $$2515 = $334;
   $$pn = $320 - $334 | 0;
  }
  $339 = $$0522 + 1 + $$3477 + $310 + $$pn | 0;
  _pad_734($0, 32, $2, $339, $4);
  _out_728($0, $$0523, $$0522);
  _pad_734($0, 48, $2, $339, $4 ^ 65536);
  if ($312) {
   $spec$select554 = $$9 >>> 0 > $$0498 >>> 0 ? $$0498 : $$9;
   $342 = $8 + 9 | 0;
   $343 = $342;
   $344 = $8 + 8 | 0;
   $$5493603 = $spec$select554;
   do {
    $346 = _fmt_u(HEAP32[$$5493603 >> 2] | 0, 0, $342) | 0;
    if (($$5493603 | 0) == ($spec$select554 | 0)) if (($346 | 0) == ($342 | 0)) {
     HEAP8[$344 >> 0] = 48;
     $$1465 = $344;
    } else $$1465 = $346; else if ($346 >>> 0 > $8 >>> 0) {
     _memset($8 | 0, 48, $346 - $9 | 0) | 0;
     $$0464599 = $346;
     while (1) {
      $351 = $$0464599 + -1 | 0;
      if ($351 >>> 0 > $8 >>> 0) $$0464599 = $351; else {
       $$1465 = $351;
       break;
      }
     }
    } else $$1465 = $346;
    _out_728($0, $$1465, $343 - $$1465 | 0);
    $$5493603 = $$5493603 + 4 | 0;
   } while ($$5493603 >>> 0 <= $$0498 >>> 0);
   if (!(($4 & 8 | 0) == 0 & ($308 ^ 1))) _out_728($0, 49920, 1);
   if ($$5493603 >>> 0 < $$9507$lcssa >>> 0 & ($$3477 | 0) > 0) {
    $$4478594 = $$3477;
    $$6494593 = $$5493603;
    while (1) {
     $364 = _fmt_u(HEAP32[$$6494593 >> 2] | 0, 0, $342) | 0;
     if ($364 >>> 0 > $8 >>> 0) {
      _memset($8 | 0, 48, $364 - $9 | 0) | 0;
      $$0463588 = $364;
      while (1) {
       $368 = $$0463588 + -1 | 0;
       if ($368 >>> 0 > $8 >>> 0) $$0463588 = $368; else {
        $$0463$lcssa = $368;
        break;
       }
      }
     } else $$0463$lcssa = $364;
     _out_728($0, $$0463$lcssa, ($$4478594 | 0) < 9 ? $$4478594 : 9);
     $$6494593 = $$6494593 + 4 | 0;
     $373 = $$4478594 + -9 | 0;
     if (!($$6494593 >>> 0 < $$9507$lcssa >>> 0 & ($$4478594 | 0) > 9)) {
      $$4478$lcssa = $373;
      break;
     } else $$4478594 = $373;
    }
   } else $$4478$lcssa = $$3477;
   _pad_734($0, 48, $$4478$lcssa + 9 | 0, 9, 0);
  } else {
   $spec$select557 = $$lcssa583 ? $$9507$lcssa : $$9 + 4 | 0;
   if ($$9 >>> 0 < $spec$select557 >>> 0 & ($$3477 | 0) > -1) {
    $382 = $8 + 9 | 0;
    $384 = ($4 & 8 | 0) == 0;
    $385 = $382;
    $386 = 0 - $9 | 0;
    $387 = $8 + 8 | 0;
    $$5609 = $$3477;
    $$7495608 = $$9;
    while (1) {
     $389 = _fmt_u(HEAP32[$$7495608 >> 2] | 0, 0, $382) | 0;
     if (($389 | 0) == ($382 | 0)) {
      HEAP8[$387 >> 0] = 48;
      $$0 = $387;
     } else $$0 = $389;
     do if (($$7495608 | 0) == ($$9 | 0)) {
      $395 = $$0 + 1 | 0;
      _out_728($0, $$0, 1);
      if ($384 & ($$5609 | 0) < 1) {
       $$2 = $395;
       break;
      }
      _out_728($0, 49920, 1);
      $$2 = $395;
     } else {
      if ($$0 >>> 0 <= $8 >>> 0) {
       $$2 = $$0;
       break;
      }
      _memset($8 | 0, 48, $$0 + $386 | 0) | 0;
      $$1604 = $$0;
      while (1) {
       $393 = $$1604 + -1 | 0;
       if ($393 >>> 0 > $8 >>> 0) $$1604 = $393; else {
        $$2 = $393;
        break;
       }
      }
     } while (0);
     $398 = $385 - $$2 | 0;
     _out_728($0, $$2, ($$5609 | 0) > ($398 | 0) ? $398 : $$5609);
     $401 = $$5609 - $398 | 0;
     $$7495608 = $$7495608 + 4 | 0;
     if (!($$7495608 >>> 0 < $spec$select557 >>> 0 & ($401 | 0) > -1)) {
      $$5$lcssa = $401;
      break;
     } else $$5609 = $401;
    }
   } else $$5$lcssa = $$3477;
   _pad_734($0, 48, $$5$lcssa + 18 | 0, 18, 0);
   _out_728($0, $$2515, $11 - $$2515 | 0);
  }
  _pad_734($0, 32, $2, $339, $4 ^ 8192);
  $$sink757 = $339;
 } while (0);
 STACKTOP = sp;
 return (($$sink757 | 0) < ($2 | 0) ? $2 : $$sink757) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_nested_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i184 = 0, $$0$i$i$add$i188 = 0, $$0$i$i$add$i199 = 0, $$0$i$i$add$i210 = 0, $$0$i$i$add$i220 = 0, $$0$i$i$add$i231 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i183 = 0, $$0$i$i$idx$i187 = 0, $$0$i$i$idx$i198 = 0, $$0$i$i$idx$i209 = 0, $$0$i$i$idx$i219 = 0, $$0$i$i$idx$i230 = 0, $$0151$off0$ph = 0, $$0157 = 0, $$1158 = 0, $$2159 = 0, $$2159$be = 0, $$2159$ph = 0, $$2159$ph$be = 0, $$4166 = 0, $$sink = 0, $$sroa$0$0$$sroa_idx$i215 = 0, $101 = 0, $102 = 0, $105 = 0, $106 = 0, $11 = 0, $114 = 0, $119 = 0, $122 = 0, $124 = 0, $129 = 0, $13 = 0, $133 = 0, $134 = 0, $141 = 0, $142 = 0, $145 = 0, $146 = 0, $154 = 0, $157 = 0, $16 = 0, $162 = 0, $165 = 0, $167 = 0, $17 = 0, $172 = 0, $176 = 0, $177 = 0, $184 = 0, $185 = 0, $188 = 0, $189 = 0, $197 = 0, $202 = 0, $206 = 0, $207 = 0, $214 = 0, $215 = 0, $218 = 0, $219 = 0, $227 = 0, $229 = 0, $234 = 0, $237 = 0, $239 = 0, $244 = 0, $248 = 0, $249 = 0, $256 = 0, $257 = 0, $260 = 0, $261 = 0, $269 = 0, $274 = 0, $3 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $70 = 0, $74 = 0, $79 = 0, $82 = 0, $84 = 0, $89 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 8 | 0;
 $6 = sp;
 L1 : do if (($0 | 0) == ($1 | 0)) $$4166 = $0; else if ((HEAP8[$0 >> 0] | 0) == 78) {
  $11 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($0 + 1 | 0, $1, $3) | 0;
  L4 : do if (($11 | 0) != ($1 | 0)) {
   $13 = $2 + 52 | 0;
   HEAP32[$13 >> 2] = 0;
   switch (HEAP8[$11 >> 0] | 0) {
   case 82:
    {
     $$sink = 1;
     label = 6;
     break;
    }
   case 79:
    {
     $$sink = 2;
     label = 6;
     break;
    }
   default:
    $$0157 = $11;
   }
   if ((label | 0) == 6) {
    HEAP32[$13 >> 2] = $$sink;
    $$0157 = $11 + 1 | 0;
   }
   $16 = $2 + 4 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if ($17 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    HEAP32[$17 >> 2] = 0;
    HEAP32[$17 + 4 >> 2] = 0;
    HEAP32[$17 + 8 >> 2] = 0;
    HEAP32[$17 + 12 >> 2] = 0;
    HEAP32[$17 + 16 >> 2] = 0;
    HEAP32[$17 + 20 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($17);
    HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($2);
   if (($1 - $$0157 | 0) > 1) if ((HEAP8[$$0157 >> 0] | 0) == 83) if ((HEAP8[$$0157 + 1 >> 0] | 0) == 116) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc((HEAP32[$16 >> 2] | 0) + -24 | 0, 51007);
    $$1158 = $$0157 + 2 | 0;
   } else $$1158 = $$0157; else $$1158 = $$0157; else $$1158 = $$0157;
   if (($$1158 | 0) == ($1 | 0)) {
    $36 = HEAP32[$16 >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($36 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$16 >> 2] = $36 + -24;
    break;
   }
   $39 = $4 + 11 | 0;
   $40 = $4 + 4 | 0;
   $$sroa$0$0$$sroa_idx$i215 = $2 + 12 | 0;
   $41 = $2 + 20 | 0;
   $42 = $2 + 24 | 0;
   $43 = $5 + 11 | 0;
   $44 = $5 + 4 | 0;
   $45 = $5 + 11 | 0;
   $46 = $5 + 4 | 0;
   $47 = $5 + 12 | 0;
   $48 = $5 + 4 | 0;
   $49 = $5 + 8 | 0;
   $50 = $2 + 16 | 0;
   $51 = $5 + 12 | 0;
   $52 = $5 + 4 | 0;
   $53 = $5 + 8 | 0;
   $54 = $5 + 11 | 0;
   $55 = $5 + 4 | 0;
   $56 = $5 + 12 | 0;
   $57 = $5 + 4 | 0;
   $58 = $5 + 8 | 0;
   $59 = $5 + 11 | 0;
   $60 = $5 + 4 | 0;
   $61 = $5 + 12 | 0;
   $62 = $5 + 4 | 0;
   $63 = $5 + 8 | 0;
   $64 = $5 + 12 | 0;
   $65 = $5 + 4 | 0;
   $66 = $5 + 8 | 0;
   $$0151$off0$ph = 0;
   $$2159$ph = $$1158;
   L27 : while (1) {
    $$2159 = $$2159$ph;
    L29 : while (1) {
     $67 = HEAP8[$$2159 >> 0] | 0;
     if ($67 << 24 >> 24 == 69) break L27;
     switch ($67 << 24 >> 24 | 0) {
     case 83:
      {
       label = 23;
       break L29;
       break;
      }
     case 84:
      {
       label = 39;
       break L29;
       break;
      }
     case 68:
      {
       label = 53;
       break L29;
       break;
      }
     case 73:
      {
       $197 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($$2159, $1, $2) | 0;
       if (($197 | 0) == ($$2159 | 0) | ($197 | 0) == ($1 | 0)) break L4;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$16 >> 2] | 0) + -24 | 0);
       $202 = HEAP32[$16 >> 2] | 0;
       $$0$i$i$idx$i209 = 0;
       while (1) {
        if (($$0$i$i$idx$i209 | 0) == -1) break;
        $$0$i$i$add$i210 = $$0$i$i$idx$i209 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($202 + ($$0$i$i$add$i210 * 24 | 0) | 0);
        $$0$i$i$idx$i209 = $$0$i$i$add$i210;
       }
       HEAP32[$16 >> 2] = $202 + -24;
       $206 = HEAP8[$39 >> 0] | 0;
       $207 = $206 << 24 >> 24 < 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($202 + -48 | 0, $207 ? HEAP32[$4 >> 2] | 0 : $4, $207 ? HEAP32[$40 >> 2] | 0 : $206 & 255) | 0;
       $214 = (HEAP32[$16 >> 2] | 0) + -24 | 0;
       HEAP32[$6 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i215 >> 2];
       __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($5, $214, $6);
       $215 = HEAP32[$41 >> 2] | 0;
       if ($215 >>> 0 < (HEAP32[$42 >> 2] | 0) >>> 0) {
        HEAP32[$215 >> 2] = 0;
        $218 = $215 + 4 | 0;
        HEAP32[$218 >> 2] = 0;
        $219 = $215 + 8 | 0;
        HEAP32[$219 >> 2] = 0;
        HEAP32[$215 + 12 >> 2] = HEAP32[$47 >> 2];
        HEAP32[$215 >> 2] = HEAP32[$5 >> 2];
        HEAP32[$218 >> 2] = HEAP32[$48 >> 2];
        HEAP32[$219 >> 2] = HEAP32[$49 >> 2];
        HEAP32[$49 >> 2] = 0;
        HEAP32[$48 >> 2] = 0;
        HEAP32[$5 >> 2] = 0;
        HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 16;
       } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($50, $5);
       __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($5);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
       $$2159$be = $197;
       break;
      }
     case 76:
      {
       $227 = $$2159 + 1 | 0;
       if (($227 | 0) == ($1 | 0)) break L4; else $$2159$be = $227;
       break;
      }
     default:
      {
       label = 79;
       break L29;
      }
     }
     $$2159 = $$2159$be;
    }
    L45 : do if ((label | 0) == 23) {
     label = 0;
     $70 = $$2159 + 1 | 0;
     if (($70 | 0) != ($1 | 0)) if ((HEAP8[$70 >> 0] | 0) == 116) {
      label = 79;
      break;
     }
     $74 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($$2159, $1, $2) | 0;
     if (($74 | 0) == ($$2159 | 0) | ($74 | 0) == ($1 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$16 >> 2] | 0) + -24 | 0);
     $79 = HEAP32[$16 >> 2] | 0;
     $$0$i$i$idx$i183 = 0;
     while (1) {
      if (($$0$i$i$idx$i183 | 0) == -1) break;
      $$0$i$i$add$i184 = $$0$i$i$idx$i183 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($79 + ($$0$i$i$add$i184 * 24 | 0) | 0);
      $$0$i$i$idx$i183 = $$0$i$i$add$i184;
     }
     HEAP32[$16 >> 2] = $79 + -24;
     $82 = $79 + -48 | 0;
     $84 = HEAP8[$82 + 11 >> 0] | 0;
     if ($84 << 24 >> 24 < 0) $89 = HEAP32[$79 + -44 >> 2] | 0; else $89 = $84 & 255;
     if (!$89) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($82, $4); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5, 49703, $4);
      $93 = HEAP8[$54 >> 0] | 0;
      $94 = $93 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$16 >> 2] | 0) + -24 | 0, $94 ? HEAP32[$5 >> 2] | 0 : $5, $94 ? HEAP32[$55 >> 2] | 0 : $93 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $101 = (HEAP32[$16 >> 2] | 0) + -24 | 0;
      HEAP32[$6 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i215 >> 2];
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($5, $101, $6);
      $102 = HEAP32[$41 >> 2] | 0;
      if ($102 >>> 0 < (HEAP32[$42 >> 2] | 0) >>> 0) {
       HEAP32[$102 >> 2] = 0;
       $105 = $102 + 4 | 0;
       HEAP32[$105 >> 2] = 0;
       $106 = $102 + 8 | 0;
       HEAP32[$106 >> 2] = 0;
       HEAP32[$102 + 12 >> 2] = HEAP32[$64 >> 2];
       HEAP32[$102 >> 2] = HEAP32[$5 >> 2];
       HEAP32[$105 >> 2] = HEAP32[$65 >> 2];
       HEAP32[$106 >> 2] = HEAP32[$66 >> 2];
       HEAP32[$66 >> 2] = 0;
       HEAP32[$65 >> 2] = 0;
       HEAP32[$5 >> 2] = 0;
       HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 16;
      } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($50, $5);
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($5);
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     $$2159$ph$be = $74;
    } else if ((label | 0) == 39) {
     label = 0;
     $114 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($$2159, $1, $2) | 0;
     if (($114 | 0) == ($$2159 | 0) | ($114 | 0) == ($1 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$16 >> 2] | 0) + -24 | 0);
     $119 = HEAP32[$16 >> 2] | 0;
     $$0$i$i$idx$i187 = 0;
     while (1) {
      if (($$0$i$i$idx$i187 | 0) == -1) break;
      $$0$i$i$add$i188 = $$0$i$i$idx$i187 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($119 + ($$0$i$i$add$i188 * 24 | 0) | 0);
      $$0$i$i$idx$i187 = $$0$i$i$add$i188;
     }
     HEAP32[$16 >> 2] = $119 + -24;
     $122 = $119 + -48 | 0;
     $124 = HEAP8[$122 + 11 >> 0] | 0;
     if ($124 << 24 >> 24 < 0) $129 = HEAP32[$119 + -44 >> 2] | 0; else $129 = $124 & 255;
     if (!$129) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($122, $4); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5, 49703, $4);
      $133 = HEAP8[$45 >> 0] | 0;
      $134 = $133 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$16 >> 2] | 0) + -24 | 0, $134 ? HEAP32[$5 >> 2] | 0 : $5, $134 ? HEAP32[$46 >> 2] | 0 : $133 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     }
     $141 = (HEAP32[$16 >> 2] | 0) + -24 | 0;
     HEAP32[$6 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i215 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($5, $141, $6);
     $142 = HEAP32[$41 >> 2] | 0;
     if ($142 >>> 0 < (HEAP32[$42 >> 2] | 0) >>> 0) {
      HEAP32[$142 >> 2] = 0;
      $145 = $142 + 4 | 0;
      HEAP32[$145 >> 2] = 0;
      $146 = $142 + 8 | 0;
      HEAP32[$146 >> 2] = 0;
      HEAP32[$142 + 12 >> 2] = HEAP32[$56 >> 2];
      HEAP32[$142 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$145 >> 2] = HEAP32[$57 >> 2];
      HEAP32[$146 >> 2] = HEAP32[$58 >> 2];
      HEAP32[$58 >> 2] = 0;
      HEAP32[$57 >> 2] = 0;
      HEAP32[$5 >> 2] = 0;
      HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($50, $5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     $$2159$ph$be = $114;
    } else if ((label | 0) == 53) {
     label = 0;
     $154 = $$2159 + 1 | 0;
     if (($154 | 0) != ($1 | 0)) switch (HEAP8[$154 >> 0] | 0) {
     case 84:
     case 116:
      break;
     default:
      {
       label = 79;
       break L45;
      }
     }
     $157 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($$2159, $1, $2) | 0;
     if (($157 | 0) == ($$2159 | 0) | ($157 | 0) == ($1 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$16 >> 2] | 0) + -24 | 0);
     $162 = HEAP32[$16 >> 2] | 0;
     $$0$i$i$idx$i198 = 0;
     while (1) {
      if (($$0$i$i$idx$i198 | 0) == -1) break;
      $$0$i$i$add$i199 = $$0$i$i$idx$i198 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($162 + ($$0$i$i$add$i199 * 24 | 0) | 0);
      $$0$i$i$idx$i198 = $$0$i$i$add$i199;
     }
     HEAP32[$16 >> 2] = $162 + -24;
     $165 = $162 + -48 | 0;
     $167 = HEAP8[$165 + 11 >> 0] | 0;
     if ($167 << 24 >> 24 < 0) $172 = HEAP32[$162 + -44 >> 2] | 0; else $172 = $167 & 255;
     if (!$172) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($165, $4); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5, 49703, $4);
      $176 = HEAP8[$59 >> 0] | 0;
      $177 = $176 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$16 >> 2] | 0) + -24 | 0, $177 ? HEAP32[$5 >> 2] | 0 : $5, $177 ? HEAP32[$60 >> 2] | 0 : $176 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     }
     $184 = (HEAP32[$16 >> 2] | 0) + -24 | 0;
     HEAP32[$6 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i215 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($5, $184, $6);
     $185 = HEAP32[$41 >> 2] | 0;
     if ($185 >>> 0 < (HEAP32[$42 >> 2] | 0) >>> 0) {
      HEAP32[$185 >> 2] = 0;
      $188 = $185 + 4 | 0;
      HEAP32[$188 >> 2] = 0;
      $189 = $185 + 8 | 0;
      HEAP32[$189 >> 2] = 0;
      HEAP32[$185 + 12 >> 2] = HEAP32[$61 >> 2];
      HEAP32[$185 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$188 >> 2] = HEAP32[$62 >> 2];
      HEAP32[$189 >> 2] = HEAP32[$63 >> 2];
      HEAP32[$63 >> 2] = 0;
      HEAP32[$62 >> 2] = 0;
      HEAP32[$5 >> 2] = 0;
      HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($50, $5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     $$2159$ph$be = $157;
    } while (0);
    if ((label | 0) == 79) {
     label = 0;
     $229 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($$2159, $1, $2) | 0;
     if (($229 | 0) == ($$2159 | 0) | ($229 | 0) == ($1 | 0)) break L4;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$16 >> 2] | 0) + -24 | 0);
     $234 = HEAP32[$16 >> 2] | 0;
     $$0$i$i$idx$i219 = 0;
     while (1) {
      if (($$0$i$i$idx$i219 | 0) == -1) break;
      $$0$i$i$add$i220 = $$0$i$i$idx$i219 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($234 + ($$0$i$i$add$i220 * 24 | 0) | 0);
      $$0$i$i$idx$i219 = $$0$i$i$add$i220;
     }
     HEAP32[$16 >> 2] = $234 + -24;
     $237 = $234 + -48 | 0;
     $239 = HEAP8[$237 + 11 >> 0] | 0;
     if ($239 << 24 >> 24 < 0) $244 = HEAP32[$234 + -44 >> 2] | 0; else $244 = $239 & 255;
     if (!$244) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($237, $4); else {
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5, 49703, $4);
      $248 = HEAP8[$43 >> 0] | 0;
      $249 = $248 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$16 >> 2] | 0) + -24 | 0, $249 ? HEAP32[$5 >> 2] | 0 : $5, $249 ? HEAP32[$44 >> 2] | 0 : $248 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     }
     $256 = (HEAP32[$16 >> 2] | 0) + -24 | 0;
     HEAP32[$6 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i215 >> 2];
     __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($5, $256, $6);
     $257 = HEAP32[$41 >> 2] | 0;
     if ($257 >>> 0 < (HEAP32[$42 >> 2] | 0) >>> 0) {
      HEAP32[$257 >> 2] = 0;
      $260 = $257 + 4 | 0;
      HEAP32[$260 >> 2] = 0;
      $261 = $257 + 8 | 0;
      HEAP32[$261 >> 2] = 0;
      HEAP32[$257 + 12 >> 2] = HEAP32[$51 >> 2];
      HEAP32[$257 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$260 >> 2] = HEAP32[$52 >> 2];
      HEAP32[$261 >> 2] = HEAP32[$53 >> 2];
      HEAP32[$53 >> 2] = 0;
      HEAP32[$52 >> 2] = 0;
      HEAP32[$5 >> 2] = 0;
      HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 16;
     } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($50, $5);
     __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     $$2159$ph$be = $229;
    }
    $$0151$off0$ph = 1;
    $$2159$ph = $$2159$ph$be;
   }
   $269 = $$2159 + 1 | 0;
   HEAP32[$2 + 48 >> 2] = HEAP32[$3 >> 2];
   if ($$0151$off0$ph) {
    $274 = HEAP32[$41 >> 2] | 0;
    if ((HEAP32[$2 + 16 >> 2] | 0) != ($274 | 0)) {
     $$0$i$i$idx$i230 = 0;
     while (1) {
      if (($$0$i$i$idx$i230 | 0) == -1) break;
      $$0$i$i$add$i231 = $$0$i$i$idx$i230 + -1 | 0;
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($274 + ($$0$i$i$add$i231 << 4) | 0);
      $$0$i$i$idx$i230 = $$0$i$i$add$i231;
     }
     HEAP32[$41 >> 2] = $274 + -16;
    }
   }
   $$4166 = $269;
   break L1;
  } while (0);
  $$4166 = $0;
 } else $$4166 = $0; while (0);
 STACKTOP = sp;
 return $$4166 | 0;
}

function _decfloat($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0324 = 0, $$0324$be = 0, $$0327480 = 0, $$0328 = 0, $$0329 = 0, $$0331476 = 0, $$0335486 = 0, $$0336$lcssa = 0, $$0336453 = 0, $$0336454 = 0, $$0336455 = 0, $$0336503 = 0, $$0340$lcssa = 0, $$0340457 = 0, $$0340458 = 0, $$0340459 = 0, $$0340502 = 0, $$0345$lcssa540 = 0, $$0345484 = 0, $$0355 = 0.0, $$0356 = 0.0, $$0360474 = 0.0, $$0367 = 0, $$0376 = 0, $$0376$ph = 0, $$0381$lcssa539 = 0, $$0381483 = 0, $$0390 = 0, $$0393 = 0, $$0398$lcssa = 0, $$0398463 = 0, $$0398464 = 0, $$0398465 = 0, $$0398499 = 0, $$1 = 0.0, $$10473 = 0, $$11 = 0, $$1330 = 0, $$1357 = 0.0, $$1361 = 0.0, $$1377 = 0, $$1377$ph = 0, $$1377$ph$ph = 0, $$1391$lcssa = 0, $$1391501 = 0, $$2 = 0, $$2338 = 0, $$2342 = 0, $$2362 = 0.0, $$2369 = 0, $$2369$ph = 0, $$2369$ph579 = 0, $$2392 = 0, $$2395 = 0, $$2400 = 0, $$3$lcssa = 0, $$3339493 = 0, $$3343 = 0, $$3348$ph = 0, $$3348$ph580 = 0, $$3359 = 0.0, $$3363 = 0.0, $$3370 = 0, $$3379 = 0, $$3384$ph = 0, $$3384$ph578 = 0, $$3396$lcssa = 0, $$3396500 = 0, $$3504 = 0, $$4344485 = 0, $$4380 = 0, $$4397 = 0, $$4475 = 0, $$5 = 0, $$5$in = 0, $$5350 = 0, $$5350$ph = 0, $$5350$ph$ph = 0, $$5372 = 0, $$5386$ph = 0, $$5386$ph576 = 0, $$5386$ph576$ph = 0, $$6351478 = 0, $$6387477 = 0, $$6479 = 0, $$7374$ph$ph = 0, $$pre = 0, $$sink$off0 = 0, $10 = 0, $104 = 0, $105 = 0, $109 = 0, $11 = 0, $111 = 0, $112 = 0, $114 = 0, $127 = 0, $129 = 0, $135 = 0, $139 = 0, $141 = 0, $147 = 0, $153 = 0, $155 = 0, $177 = 0, $18 = 0, $189 = 0, $193 = 0, $196 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $203 = 0, $204 = 0, $218 = 0, $219 = 0, $220 = 0, $224 = 0, $226 = 0, $228 = 0, $229 = 0, $235 = 0, $237 = 0, $239 = 0, $244 = 0, $247 = 0, $25 = 0, $251 = 0, $254 = 0, $257 = 0, $264 = 0, $267 = 0, $269 = 0, $27 = 0, $274 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $283 = 0, $29 = 0, $294 = 0, $296 = 0, $30 = 0, $302 = 0, $306 = 0, $309 = 0, $31 = 0, $318 = 0.0, $319 = 0.0, $320 = 0, $321 = 0, $322 = 0, $327 = 0.0, $330 = 0.0, $334 = 0, $337 = 0, $361 = 0.0, $366 = 0, $373 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $40 = 0, $42 = 0, $44 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $53 = 0, $58 = 0, $59 = 0, $6 = 0, $63 = 0, $7 = 0, $71 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $85 = 0, $86 = 0, $9 = 0, $95 = 0, $96 = 0, $97 = 0, $or$cond417 = 0, $or$cond421 = 0, $spec$select420 = 0, $spec$select441 = 0, $storemerge446 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 $6 = sp;
 $7 = $3 + $2 | 0;
 $8 = 0 - $7 | 0;
 $9 = $0 + 4 | 0;
 $10 = $0 + 104 | 0;
 $$0324 = $1;
 $$0393 = 0;
 L1 : while (1) {
  switch ($$0324 | 0) {
  case 46:
   {
    label = 7;
    break L1;
    break;
   }
  case 48:
   break;
  default:
   {
    $$0390 = 0;
    $$2 = $$0324;
    $$2395 = $$0393;
    $375 = 0;
    $376 = 0;
    break L1;
   }
  }
  $11 = HEAP32[$9 >> 2] | 0;
  if ($11 >>> 0 < (HEAP32[$10 >> 2] | 0) >>> 0) {
   HEAP32[$9 >> 2] = $11 + 1;
   $$0324$be = HEAPU8[$11 >> 0] | 0;
  } else $$0324$be = ___shgetc($0) | 0;
  $$0324 = $$0324$be;
  $$0393 = 1;
 }
 if ((label | 0) == 7) {
  $18 = HEAP32[$9 >> 2] | 0;
  if ($18 >>> 0 < (HEAP32[$10 >> 2] | 0) >>> 0) {
   HEAP32[$9 >> 2] = $18 + 1;
   $25 = HEAPU8[$18 >> 0] | 0;
  } else $25 = ___shgetc($0) | 0;
  if (($25 | 0) == 48) {
   $27 = 0;
   $28 = 0;
   while (1) {
    $29 = _i64Add($27 | 0, $28 | 0, -1, -1) | 0;
    $30 = getTempRet0() | 0;
    $31 = HEAP32[$9 >> 2] | 0;
    if ($31 >>> 0 < (HEAP32[$10 >> 2] | 0) >>> 0) {
     HEAP32[$9 >> 2] = $31 + 1;
     $38 = HEAPU8[$31 >> 0] | 0;
    } else $38 = ___shgetc($0) | 0;
    if (($38 | 0) == 48) {
     $27 = $29;
     $28 = $30;
    } else {
     $$0390 = 1;
     $$2 = $38;
     $$2395 = 1;
     $375 = $29;
     $376 = $30;
     break;
    }
   }
  } else {
   $$0390 = 1;
   $$2 = $25;
   $$2395 = $$0393;
   $375 = 0;
   $376 = 0;
  }
 }
 HEAP32[$6 >> 2] = 0;
 $40 = $$2 + -48 | 0;
 $42 = ($$2 | 0) == 46;
 L22 : do if ($42 | $40 >>> 0 < 10) {
  $44 = $6 + 496 | 0;
  $$0336503 = 0;
  $$0340502 = 0;
  $$0398499 = 0;
  $$1391501 = $$0390;
  $$3396500 = $$2395;
  $$3504 = $$2;
  $377 = $42;
  $378 = $40;
  $379 = $375;
  $380 = $376;
  $47 = 0;
  $48 = 0;
  L24 : while (1) {
   do if ($377) if (!$$1391501) {
    $$2338 = $$0336503;
    $$2342 = $$0340502;
    $$2392 = 1;
    $$2400 = $$0398499;
    $$4397 = $$3396500;
    $381 = $47;
    $382 = $48;
    $383 = $47;
    $384 = $48;
   } else break L24; else {
    $49 = _i64Add($47 | 0, $48 | 0, 1, 0) | 0;
    $50 = getTempRet0() | 0;
    $51 = ($$3504 | 0) != 48;
    if (($$0340502 | 0) >= 125) {
     if (!$51) {
      $$2338 = $$0336503;
      $$2342 = $$0340502;
      $$2392 = $$1391501;
      $$2400 = $$0398499;
      $$4397 = $$3396500;
      $381 = $379;
      $382 = $380;
      $383 = $49;
      $384 = $50;
      break;
     }
     HEAP32[$44 >> 2] = HEAP32[$44 >> 2] | 1;
     $$2338 = $$0336503;
     $$2342 = $$0340502;
     $$2392 = $$1391501;
     $$2400 = $$0398499;
     $$4397 = $$3396500;
     $381 = $379;
     $382 = $380;
     $383 = $49;
     $384 = $50;
     break;
    }
    $53 = $6 + ($$0340502 << 2) | 0;
    if (!$$0336503) $storemerge446 = $378; else $storemerge446 = $$3504 + -48 + ((HEAP32[$53 >> 2] | 0) * 10 | 0) | 0;
    HEAP32[$53 >> 2] = $storemerge446;
    $58 = $$0336503 + 1 | 0;
    $59 = ($58 | 0) == 9;
    $$2338 = $59 ? 0 : $58;
    $$2342 = $$0340502 + ($59 & 1) | 0;
    $$2392 = $$1391501;
    $$2400 = $51 ? $49 : $$0398499;
    $$4397 = 1;
    $381 = $379;
    $382 = $380;
    $383 = $49;
    $384 = $50;
   } while (0);
   $63 = HEAP32[$9 >> 2] | 0;
   if ($63 >>> 0 < (HEAP32[$10 >> 2] | 0) >>> 0) {
    HEAP32[$9 >> 2] = $63 + 1;
    $71 = HEAPU8[$63 >> 0] | 0;
   } else $71 = ___shgetc($0) | 0;
   $378 = $71 + -48 | 0;
   $377 = ($71 | 0) == 46;
   if (!($377 | $378 >>> 0 < 10)) {
    $$0336$lcssa = $$2338;
    $$0340$lcssa = $$2342;
    $$0398$lcssa = $$2400;
    $$1391$lcssa = $$2392;
    $$3$lcssa = $71;
    $$3396$lcssa = $$4397;
    $76 = $381;
    $77 = $383;
    $79 = $382;
    $80 = $384;
    label = 31;
    break L22;
   } else {
    $$0336503 = $$2338;
    $$0340502 = $$2342;
    $$0398499 = $$2400;
    $$1391501 = $$2392;
    $$3396500 = $$4397;
    $$3504 = $71;
    $379 = $381;
    $380 = $382;
    $47 = $383;
    $48 = $384;
   }
  }
  $$0336455 = $$0336503;
  $$0340459 = $$0340502;
  $$0398465 = $$0398499;
  $385 = $47;
  $386 = $48;
  $387 = $379;
  $388 = $380;
  $389 = ($$3396500 | 0) != 0;
  label = 39;
 } else {
  $$0336$lcssa = 0;
  $$0340$lcssa = 0;
  $$0398$lcssa = 0;
  $$1391$lcssa = $$0390;
  $$3$lcssa = $$2;
  $$3396$lcssa = $$2395;
  $76 = $375;
  $77 = 0;
  $79 = $376;
  $80 = 0;
  label = 31;
 } while (0);
 do if ((label | 0) == 31) {
  $75 = ($$1391$lcssa | 0) == 0;
  $78 = $75 ? $77 : $76;
  $81 = $75 ? $80 : $79;
  $82 = ($$3396$lcssa | 0) != 0;
  if (!($82 & ($$3$lcssa | 32 | 0) == 101)) if (($$3$lcssa | 0) > -1) {
   $$0336455 = $$0336$lcssa;
   $$0340459 = $$0340$lcssa;
   $$0398465 = $$0398$lcssa;
   $385 = $77;
   $386 = $80;
   $387 = $78;
   $388 = $81;
   $389 = $82;
   label = 39;
   break;
  } else {
   $$0336454 = $$0336$lcssa;
   $$0340458 = $$0340$lcssa;
   $$0398464 = $$0398$lcssa;
   $390 = $77;
   $391 = $80;
   $392 = $82;
   $393 = $78;
   $394 = $81;
   label = 41;
   break;
  }
  $85 = _scanexp($0, $5) | 0;
  $86 = getTempRet0() | 0;
  if (($85 | 0) == 0 & ($86 | 0) == -2147483648) {
   if (!$5) {
    ___shlim($0, 0, 0);
    $$1 = 0.0;
    break;
   }
   if (!(HEAP32[$10 >> 2] | 0)) {
    $95 = 0;
    $96 = 0;
   } else {
    HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + -1;
    $95 = 0;
    $96 = 0;
   }
  } else {
   $95 = $85;
   $96 = $86;
  }
  $97 = _i64Add($95 | 0, $96 | 0, $78 | 0, $81 | 0) | 0;
  $$0336453 = $$0336$lcssa;
  $$0340457 = $$0340$lcssa;
  $$0398463 = $$0398$lcssa;
  $109 = $97;
  $111 = $77;
  $112 = getTempRet0() | 0;
  $114 = $80;
  label = 43;
 } while (0);
 if ((label | 0) == 39) if (!(HEAP32[$10 >> 2] | 0)) {
  $$0336454 = $$0336455;
  $$0340458 = $$0340459;
  $$0398464 = $$0398465;
  $390 = $385;
  $391 = $386;
  $392 = $389;
  $393 = $387;
  $394 = $388;
  label = 41;
 } else {
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + -1;
  if ($389) {
   $$0336453 = $$0336455;
   $$0340457 = $$0340459;
   $$0398463 = $$0398465;
   $109 = $387;
   $111 = $385;
   $112 = $388;
   $114 = $386;
   label = 43;
  } else label = 42;
 }
 if ((label | 0) == 41) if ($392) {
  $$0336453 = $$0336454;
  $$0340457 = $$0340458;
  $$0398463 = $$0398464;
  $109 = $393;
  $111 = $390;
  $112 = $394;
  $114 = $391;
  label = 43;
 } else label = 42;
 do if ((label | 0) == 42) {
  $104 = ___errno_location() | 0;
  HEAP32[$104 >> 2] = 22;
  ___shlim($0, 0, 0);
  $$1 = 0.0;
 } else if ((label | 0) == 43) {
  $105 = HEAP32[$6 >> 2] | 0;
  if (!$105) {
   $$1 = +($4 | 0) * 0.0;
   break;
  }
  if ((($114 | 0) < 0 | ($114 | 0) == 0 & $111 >>> 0 < 10) & (($109 | 0) == ($111 | 0) & ($112 | 0) == ($114 | 0))) if (($2 | 0) > 30 | ($105 >>> $2 | 0) == 0) {
   $$1 = +($4 | 0) * +($105 >>> 0);
   break;
  }
  $127 = ($3 | 0) / -2 | 0;
  $129 = (($127 | 0) < 0) << 31 >> 31;
  if (($112 | 0) > ($129 | 0) | ($112 | 0) == ($129 | 0) & $109 >>> 0 > $127 >>> 0) {
   $135 = ___errno_location() | 0;
   HEAP32[$135 >> 2] = 34;
   $$1 = +($4 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  $139 = $3 + -106 | 0;
  $141 = (($139 | 0) < 0) << 31 >> 31;
  if (($112 | 0) < ($141 | 0) | ($112 | 0) == ($141 | 0) & $109 >>> 0 < $139 >>> 0) {
   $147 = ___errno_location() | 0;
   HEAP32[$147 >> 2] = 34;
   $$1 = +($4 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if (!$$0336453) $$3343 = $$0340457; else {
   if (($$0336453 | 0) < 9) {
    $153 = $6 + ($$0340457 << 2) | 0;
    $$3339493 = $$0336453;
    $155 = HEAP32[$153 >> 2] | 0;
    while (1) {
     $155 = $155 * 10 | 0;
     if (($$3339493 | 0) >= 8) break; else $$3339493 = $$3339493 + 1 | 0;
    }
    HEAP32[$153 >> 2] = $155;
   }
   $$3343 = $$0340457 + 1 | 0;
  }
  if (($$0398463 | 0) < 9) if (($$0398463 | 0) <= ($109 | 0) & ($109 | 0) < 18) {
   if (($109 | 0) == 9) {
    $$1 = +($4 | 0) * +((HEAP32[$6 >> 2] | 0) >>> 0);
    break;
   }
   if (($109 | 0) < 9) {
    $$1 = +($4 | 0) * +((HEAP32[$6 >> 2] | 0) >>> 0) / +(HEAP32[4464 + (8 - $109 << 2) >> 2] | 0);
    break;
   }
   $177 = $2 + 27 + (Math_imul($109, -3) | 0) | 0;
   $$pre = HEAP32[$6 >> 2] | 0;
   if (($177 | 0) > 30 | ($$pre >>> $177 | 0) == 0) {
    $$1 = +($4 | 0) * +($$pre >>> 0) * +(HEAP32[4464 + ($109 + -10 << 2) >> 2] | 0);
    break;
   }
  }
  $189 = ($109 | 0) % 9 | 0;
  if (!$189) {
   $$2369$ph = $$3343;
   $$3348$ph = 0;
   $$3384$ph = $109;
  } else {
   $193 = ($109 | 0) > -1 ? $189 : $189 + 9 | 0;
   $196 = HEAP32[4464 + (8 - $193 << 2) >> 2] | 0;
   if (!$$3343) {
    $$0345$lcssa540 = 0;
    $$0367 = 0;
    $$0381$lcssa539 = $109;
   } else {
    $198 = 1e9 / ($196 | 0) | 0;
    $$0335486 = 0;
    $$0345484 = 0;
    $$0381483 = $109;
    $$4344485 = 0;
    do {
     $199 = $6 + ($$4344485 << 2) | 0;
     $200 = HEAP32[$199 >> 2] | 0;
     $201 = ($200 >>> 0) / ($196 >>> 0) | 0;
     $203 = $200 - (Math_imul($201, $196) | 0) | 0;
     $204 = $201 + $$0335486 | 0;
     HEAP32[$199 >> 2] = $204;
     $$0335486 = Math_imul($198, $203) | 0;
     $or$cond417 = ($$4344485 | 0) == ($$0345484 | 0) & ($204 | 0) == 0;
     $$0381483 = $or$cond417 ? $$0381483 + -9 | 0 : $$0381483;
     $$0345484 = $or$cond417 ? $$0345484 + 1 & 127 : $$0345484;
     $$4344485 = $$4344485 + 1 | 0;
    } while (($$4344485 | 0) != ($$3343 | 0));
    if (!$$0335486) {
     $$0345$lcssa540 = $$0345484;
     $$0367 = $$3343;
     $$0381$lcssa539 = $$0381483;
    } else {
     HEAP32[$6 + ($$3343 << 2) >> 2] = $$0335486;
     $$0345$lcssa540 = $$0345484;
     $$0367 = $$3343 + 1 | 0;
     $$0381$lcssa539 = $$0381483;
    }
   }
   $$2369$ph = $$0367;
   $$3348$ph = $$0345$lcssa540;
   $$3384$ph = 9 - $193 + $$0381$lcssa539 | 0;
  }
  $$0376$ph = 0;
  $$2369$ph579 = $$2369$ph;
  $$3348$ph580 = $$3348$ph;
  $$3384$ph578 = $$3384$ph;
  L104 : while (1) {
   $218 = ($$3384$ph578 | 0) < 18;
   $219 = ($$3384$ph578 | 0) == 18;
   $220 = $6 + ($$3348$ph580 << 2) | 0;
   $$0376 = $$0376$ph;
   $$2369 = $$2369$ph579;
   while (1) {
    if (!$218) {
     if (!$219) {
      $$5386$ph = $$3384$ph578;
      break L104;
     }
     if ((HEAP32[$220 >> 2] | 0) >>> 0 >= 9007199) {
      $$5386$ph = 18;
      break L104;
     }
    }
    $$0329 = 0;
    $$3370 = $$2369;
    $$5$in = $$2369 + 127 | 0;
    while (1) {
     $$5 = $$5$in & 127;
     $224 = $6 + ($$5 << 2) | 0;
     $226 = _bitshift64Shl(HEAP32[$224 >> 2] | 0, 0, 29) | 0;
     $228 = _i64Add($226 | 0, getTempRet0() | 0, $$0329 | 0, 0) | 0;
     $229 = getTempRet0() | 0;
     if ($229 >>> 0 > 0 | ($229 | 0) == 0 & $228 >>> 0 > 1e9) {
      $235 = ___udivdi3($228 | 0, $229 | 0, 1e9, 0) | 0;
      $237 = ___muldi3($235 | 0, getTempRet0() | 0, 1e9, 0) | 0;
      $239 = _i64Subtract($228 | 0, $229 | 0, $237 | 0, getTempRet0() | 0) | 0;
      getTempRet0() | 0;
      $$1330 = $235;
      $$sink$off0 = $239;
     } else {
      $$1330 = 0;
      $$sink$off0 = $228;
     }
     HEAP32[$224 >> 2] = $$sink$off0;
     $244 = ($$5 | 0) == ($$3348$ph580 | 0);
     $spec$select441 = ($$5 | 0) != ($$3370 + 127 & 127 | 0) | $244 ? $$3370 : ($$sink$off0 | 0) == 0 ? $$5 : $$3370;
     if ($244) break; else {
      $$0329 = $$1330;
      $$3370 = $spec$select441;
      $$5$in = $$5 + -1 | 0;
     }
    }
    $247 = $$0376 + -29 | 0;
    if (!$$1330) {
     $$0376 = $247;
     $$2369 = $$3370;
    } else break;
   }
   $251 = $$3348$ph580 + 127 & 127;
   $254 = $spec$select441 + 127 & 127;
   $257 = $6 + (($spec$select441 + 126 & 127) << 2) | 0;
   if (($251 | 0) == ($spec$select441 | 0)) {
    HEAP32[$257 >> 2] = HEAP32[$257 >> 2] | HEAP32[$6 + ($254 << 2) >> 2];
    $$5372 = $254;
   } else $$5372 = $$3370;
   HEAP32[$6 + ($251 << 2) >> 2] = $$1330;
   $$0376$ph = $247;
   $$2369$ph579 = $$5372;
   $$3348$ph580 = $251;
   $$3384$ph578 = $$3384$ph578 + 9 | 0;
  }
  $$1377$ph$ph = $$0376;
  $$5350$ph$ph = $$3348$ph580;
  $$5386$ph576$ph = $$5386$ph;
  $$7374$ph$ph = $$2369;
  L123 : while (1) {
   $296 = $$7374$ph$ph + 1 & 127;
   $302 = $6 + (($$7374$ph$ph + 127 & 127) << 2) | 0;
   $$1377$ph = $$1377$ph$ph;
   $$5350$ph = $$5350$ph$ph;
   $$5386$ph576 = $$5386$ph576$ph;
   while (1) {
    $294 = ($$5386$ph576 | 0) == 18;
    $spec$select420 = ($$5386$ph576 | 0) > 27 ? 9 : 1;
    $$1377 = $$1377$ph;
    $$5350 = $$5350$ph;
    while (1) {
     $$0331476 = 0;
     while (1) {
      $264 = $$0331476 + $$5350 & 127;
      if (($264 | 0) == ($$7374$ph$ph | 0)) {
       label = 92;
       break;
      }
      $267 = HEAP32[$6 + ($264 << 2) >> 2] | 0;
      $269 = HEAP32[14072 + ($$0331476 << 2) >> 2] | 0;
      if ($267 >>> 0 < $269 >>> 0) {
       label = 92;
       break;
      }
      if ($267 >>> 0 > $269 >>> 0) break;
      if (($$0331476 + 1 | 0) >>> 0 < 2) $$0331476 = 1; else {
       label = 92;
       break;
      }
     }
     if ((label | 0) == 92) {
      label = 0;
      if ($294) break L123;
     }
     $274 = $spec$select420 + $$1377 | 0;
     if (($$5350 | 0) == ($$7374$ph$ph | 0)) {
      $$1377 = $274;
      $$5350 = $$7374$ph$ph;
     } else break;
    }
    $277 = (1 << $spec$select420) + -1 | 0;
    $278 = 1e9 >>> $spec$select420;
    $$0327480 = 0;
    $$6351478 = $$5350;
    $$6387477 = $$5386$ph576;
    $$6479 = $$5350;
    do {
     $279 = $6 + ($$6479 << 2) | 0;
     $280 = HEAP32[$279 >> 2] | 0;
     $283 = ($280 >>> $spec$select420) + $$0327480 | 0;
     HEAP32[$279 >> 2] = $283;
     $$0327480 = Math_imul($280 & $277, $278) | 0;
     $or$cond421 = ($$6479 | 0) == ($$6351478 | 0) & ($283 | 0) == 0;
     $$6387477 = $or$cond421 ? $$6387477 + -9 | 0 : $$6387477;
     $$6351478 = $or$cond421 ? $$6351478 + 1 & 127 : $$6351478;
     $$6479 = $$6479 + 1 & 127;
    } while (($$6479 | 0) != ($$7374$ph$ph | 0));
    if ($$0327480 | 0) {
     if (($296 | 0) != ($$6351478 | 0)) break;
     HEAP32[$302 >> 2] = HEAP32[$302 >> 2] | 1;
    }
    $$1377$ph = $274;
    $$5350$ph = $$6351478;
    $$5386$ph576 = $$6387477;
   }
   HEAP32[$6 + ($$7374$ph$ph << 2) >> 2] = $$0327480;
   $$1377$ph$ph = $274;
   $$5350$ph$ph = $$6351478;
   $$5386$ph576$ph = $$6387477;
   $$7374$ph$ph = $296;
  }
  $$0360474 = 0.0;
  $$10473 = $$7374$ph$ph;
  $$4475 = 0;
  while (1) {
   $306 = $$4475 + $$5350 & 127;
   $309 = $$10473 + 1 & 127;
   if (($306 | 0) == ($$10473 | 0)) {
    HEAP32[$6 + ($309 + -1 << 2) >> 2] = 0;
    $$11 = $309;
   } else $$11 = $$10473;
   $$0360474 = $$0360474 * 1.0e9 + +((HEAP32[$6 + ($306 << 2) >> 2] | 0) >>> 0);
   $$4475 = $$4475 + 1 | 0;
   if (($$4475 | 0) == 2) break; else $$10473 = $$11;
  }
  $318 = +($4 | 0);
  $319 = $$0360474 * $318;
  $320 = $$1377 + 53 | 0;
  $321 = $320 - $3 | 0;
  $322 = ($321 | 0) < ($2 | 0);
  $$0328 = $322 ? (($321 | 0) > 0 ? $321 : 0) : $2;
  if (($$0328 | 0) < 53) {
   $327 = +_copysignl(+_scalbn(1.0, 105 - $$0328 | 0), $319);
   $330 = +_fmodl($319, +_scalbn(1.0, 53 - $$0328 | 0));
   $$0355 = $327;
   $$0356 = $330;
   $$1361 = $327 + ($319 - $330);
  } else {
   $$0355 = 0.0;
   $$0356 = 0.0;
   $$1361 = $319;
  }
  $334 = $$5350 + 2 & 127;
  if (($334 | 0) == ($$11 | 0)) $$3359 = $$0356; else {
   $337 = HEAP32[$6 + ($334 << 2) >> 2] | 0;
   do if ($337 >>> 0 < 5e8) {
    if (!$337) if (($$5350 + 3 & 127 | 0) == ($$11 | 0)) {
     $$1357 = $$0356;
     break;
    }
    $$1357 = $318 * .25 + $$0356;
   } else {
    if (($337 | 0) != 5e8) {
     $$1357 = $318 * .75 + $$0356;
     break;
    }
    if (($$5350 + 3 & 127 | 0) == ($$11 | 0)) {
     $$1357 = $318 * .5 + $$0356;
     break;
    } else {
     $$1357 = $318 * .75 + $$0356;
     break;
    }
   } while (0);
   if ((53 - $$0328 | 0) > 1) if (+_fmodl($$1357, 1.0) != 0.0) $$3359 = $$1357; else $$3359 = $$1357 + 1.0; else $$3359 = $$1357;
  }
  $361 = $$1361 + $$3359 - $$0355;
  do if (($320 & 2147483647 | 0) > (-2 - $7 | 0)) {
   $366 = !(+Math_abs(+$361) >= 9007199254740992.0);
   $$3379 = $$1377 + (($366 ^ 1) & 1) | 0;
   $$2362 = $366 ? $361 : $361 * .5;
   if (($$3379 + 50 | 0) <= ($8 | 0)) if (!($$3359 != 0.0 & ($322 & (($$0328 | 0) != ($321 | 0) | $366)))) {
    $$3363 = $$2362;
    $$4380 = $$3379;
    break;
   }
   $373 = ___errno_location() | 0;
   HEAP32[$373 >> 2] = 34;
   $$3363 = $$2362;
   $$4380 = $$3379;
  } else {
   $$3363 = $361;
   $$4380 = $$1377;
  } while (0);
  $$1 = +_scalbnl($$3363, $$4380);
 } while (0);
 STACKTOP = sp;
 return +$$1;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_builtin_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1 = 0, $103 = 0, $104 = 0, $111 = 0, $112 = 0, $119 = 0, $120 = 0, $127 = 0, $128 = 0, $135 = 0, $136 = 0, $143 = 0, $144 = 0, $15 = 0, $151 = 0, $152 = 0, $159 = 0, $16 = 0, $160 = 0, $167 = 0, $168 = 0, $175 = 0, $176 = 0, $178 = 0, $182 = 0, $183 = 0, $190 = 0, $191 = 0, $198 = 0, $199 = 0, $206 = 0, $207 = 0, $214 = 0, $215 = 0, $222 = 0, $223 = 0, $23 = 0, $230 = 0, $231 = 0, $238 = 0, $239 = 0, $24 = 0, $3 = 0, $31 = 0, $32 = 0, $39 = 0, $40 = 0, $47 = 0, $48 = 0, $55 = 0, $56 = 0, $63 = 0, $64 = 0, $7 = 0, $71 = 0, $72 = 0, $79 = 0, $8 = 0, $80 = 0, $87 = 0, $88 = 0, $95 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp;
 L1 : do if (($0 | 0) == ($1 | 0)) $$1 = $0; else do switch (HEAP8[$0 >> 0] | 0) {
 case 118:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc($3, 51068);
   $7 = $2 + 4 | 0;
   $8 = HEAP32[$7 >> 2] | 0;
   if ($8 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($8, $3);
    HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 119:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm8EEERAT__Kc($3);
   $15 = $2 + 4 | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   if ($16 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($16, $3);
    HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 98:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc($3, 51073);
   $23 = $2 + 4 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   if ($24 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($24, $3);
    HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 99:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc($3, 50842);
   $31 = $2 + 4 | 0;
   $32 = HEAP32[$31 >> 2] | 0;
   if ($32 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($32, $3);
    HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 97:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc($3, 50847);
   $39 = $2 + 4 | 0;
   $40 = HEAP32[$39 >> 2] | 0;
   if ($40 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($40, $3);
    HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 104:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc($3, 50859);
   $47 = $2 + 4 | 0;
   $48 = HEAP32[$47 >> 2] | 0;
   if ($48 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($48, $3);
    HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 115:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc($3, 50873);
   $55 = $2 + 4 | 0;
   $56 = HEAP32[$55 >> 2] | 0;
   if ($56 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($56, $3);
    HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 116:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc($3, 50879);
   $63 = $2 + 4 | 0;
   $64 = HEAP32[$63 >> 2] | 0;
   if ($64 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($64, $3);
    HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 105:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm4EEERAT__Kc($3, 51078);
   $71 = $2 + 4 | 0;
   $72 = HEAP32[$71 >> 2] | 0;
   if ($72 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($72, $3);
    HEAP32[$71 >> 2] = (HEAP32[$71 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 106:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc($3, 51082);
   $79 = $2 + 4 | 0;
   $80 = HEAP32[$79 >> 2] | 0;
   if ($80 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($80, $3);
    HEAP32[$79 >> 2] = (HEAP32[$79 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 108:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc($3, 51095);
   $87 = $2 + 4 | 0;
   $88 = HEAP32[$87 >> 2] | 0;
   if ($88 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($88, $3);
    HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 109:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc($3, 51100);
   $95 = $2 + 4 | 0;
   $96 = HEAP32[$95 >> 2] | 0;
   if ($96 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($96, $3);
    HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 120:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 51114);
   $103 = $2 + 4 | 0;
   $104 = HEAP32[$103 >> 2] | 0;
   if ($104 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($104, $3);
    HEAP32[$103 >> 2] = (HEAP32[$103 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 121:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm19EEERAT__Kc($3);
   $111 = $2 + 4 | 0;
   $112 = HEAP32[$111 >> 2] | 0;
   if ($112 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($112, $3);
    HEAP32[$111 >> 2] = (HEAP32[$111 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 110:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc($3, 50908);
   $119 = $2 + 4 | 0;
   $120 = HEAP32[$119 >> 2] | 0;
   if ($120 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($120, $3);
    HEAP32[$119 >> 2] = (HEAP32[$119 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 111:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc($3, 50917);
   $127 = $2 + 4 | 0;
   $128 = HEAP32[$127 >> 2] | 0;
   if ($128 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($128, $3);
    HEAP32[$127 >> 2] = (HEAP32[$127 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 102:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc($3, 51124);
   $135 = $2 + 4 | 0;
   $136 = HEAP32[$135 >> 2] | 0;
   if ($136 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($136, $3);
    HEAP32[$135 >> 2] = (HEAP32[$135 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 100:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm7EEERAT__Kc($3);
   $143 = $2 + 4 | 0;
   $144 = HEAP32[$143 >> 2] | 0;
   if ($144 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($144, $3);
    HEAP32[$143 >> 2] = (HEAP32[$143 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 101:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc($3, 51130);
   $151 = $2 + 4 | 0;
   $152 = HEAP32[$151 >> 2] | 0;
   if ($152 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($152, $3);
    HEAP32[$151 >> 2] = (HEAP32[$151 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 103:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 51142);
   $159 = $2 + 4 | 0;
   $160 = HEAP32[$159 >> 2] | 0;
   if ($160 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($160, $3);
    HEAP32[$159 >> 2] = (HEAP32[$159 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 122:
  {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm4EEERAT__Kc($3, 51153);
   $167 = $2 + 4 | 0;
   $168 = HEAP32[$167 >> 2] | 0;
   if ($168 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($168, $3);
    HEAP32[$167 >> 2] = (HEAP32[$167 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   $$1 = $0 + 1 | 0;
   break L1;
   break;
  }
 case 117:
  {
   $175 = $0 + 1 | 0;
   $176 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($175, $1, $2) | 0;
   $$1 = ($176 | 0) == ($175 | 0) ? $0 : $176;
   break L1;
   break;
  }
 case 68:
  {
   $178 = $0 + 1 | 0;
   if (($178 | 0) == ($1 | 0)) {
    $$1 = $0;
    break L1;
   }
   switch (HEAP8[$178 >> 0] | 0) {
   case 100:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 51157);
     $182 = $2 + 4 | 0;
     $183 = HEAP32[$182 >> 2] | 0;
     if ($183 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($183, $3);
      HEAP32[$182 >> 2] = (HEAP32[$182 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 101:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($3, 51167);
     $190 = $2 + 4 | 0;
     $191 = HEAP32[$190 >> 2] | 0;
     if ($191 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($191, $3);
      HEAP32[$190 >> 2] = (HEAP32[$190 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 102:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 51178);
     $198 = $2 + 4 | 0;
     $199 = HEAP32[$198 >> 2] | 0;
     if ($199 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($199, $3);
      HEAP32[$198 >> 2] = (HEAP32[$198 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 104:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($3, 51188);
     $206 = $2 + 4 | 0;
     $207 = HEAP32[$206 >> 2] | 0;
     if ($207 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($207, $3);
      HEAP32[$206 >> 2] = (HEAP32[$206 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 105:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc($3, 51198);
     $214 = $2 + 4 | 0;
     $215 = HEAP32[$214 >> 2] | 0;
     if ($215 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($215, $3);
      HEAP32[$214 >> 2] = (HEAP32[$214 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 115:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc($3, 51207);
     $222 = $2 + 4 | 0;
     $223 = HEAP32[$222 >> 2] | 0;
     if ($223 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($223, $3);
      HEAP32[$222 >> 2] = (HEAP32[$222 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 97:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc($3, 51216);
     $230 = $2 + 4 | 0;
     $231 = HEAP32[$230 >> 2] | 0;
     if ($231 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($231, $3);
      HEAP32[$230 >> 2] = (HEAP32[$230 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 110:
    {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc($3, 51221);
     $238 = $2 + 4 | 0;
     $239 = HEAP32[$238 >> 2] | 0;
     if ($239 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($239, $3);
      HEAP32[$238 >> 2] = (HEAP32[$238 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     $$1 = $0 + 2 | 0;
     break L1;
     break;
    }
   default:
    {
     $$1 = $0;
     break L1;
    }
   }
   break;
  }
 default:
  {
   $$1 = $0;
   break L1;
  }
 } while (0); while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i199 = 0, $$0$i$i$add$i203 = 0, $$0$i$i$add$i209 = 0, $$0$i$i$add$i213 = 0, $$0$i$i$add$i223 = 0, $$0$i$i$add$i229 = 0, $$0$i$i$add$i233 = 0, $$0$i$i$add$i243 = 0, $$0$i$i$add$i253 = 0, $$0$i$i$add$i257 = 0, $$0$i$i$i = 0, $$0$i$i$i216 = 0, $$0$i$i$i236 = 0, $$0$i$i$i246 = 0, $$0$i$i$i260 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i198 = 0, $$0$i$i$idx$i202 = 0, $$0$i$i$idx$i208 = 0, $$0$i$i$idx$i212 = 0, $$0$i$i$idx$i222 = 0, $$0$i$i$idx$i228 = 0, $$0$i$i$idx$i232 = 0, $$0$i$i$idx$i242 = 0, $$0$i$i$idx$i252 = 0, $$0$i$i$idx$i256 = 0, $$0182$off0 = 0, $$0183 = 0, $$1184 = 0, $$2185 = 0, $$3186 = 0, $$4187 = 0, $$6181 = 0, $$pre = 0, $$pre$phi298Z2D = 0, $$pre$phi300Z2D = 0, $100 = 0, $107 = 0, $116 = 0, $117 = 0, $124 = 0, $126 = 0, $128 = 0, $129 = 0, $13 = 0, $136 = 0, $141 = 0, $142 = 0, $149 = 0, $15 = 0, $152 = 0, $153 = 0, $157 = 0, $158 = 0, $165 = 0, $174 = 0, $175 = 0, $182 = 0, $186 = 0, $187 = 0, $19 = 0, $190 = 0, $191 = 0, $194 = 0, $197 = 0, $204 = 0, $212 = 0, $213 = 0, $219 = 0, $220 = 0, $223 = 0, $227 = 0, $234 = 0, $243 = 0, $244 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0, $4 = 0, $46 = 0, $5 = 0, $51 = 0, $52 = 0, $60 = 0, $63 = 0, $64 = 0, $67 = 0, $70 = 0, $77 = 0, $85 = 0, $86 = 0, $92 = 0, $93 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp + 12 | 0;
 $4 = sp;
 $5 = $1;
 L1 : do if (($5 - $0 | 0) > 2) {
  if ((HEAP8[$0 >> 0] | 0) == 103) {
   $13 = (HEAP8[$0 + 1 >> 0] | 0) == 115;
   $$0182$off0 = $13;
   $$0183 = $13 ? $0 + 2 | 0 : $0;
  } else {
   $$0182$off0 = 0;
   $$0183 = $0;
  }
  $15 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($$0183, $1, $2) | 0;
  if (($15 | 0) != ($$0183 | 0)) {
   if (!$$0182$off0) {
    $$6181 = $15;
    break;
   }
   $19 = HEAP32[$2 + 4 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($19 | 0)) {
    $$6181 = $0;
    break;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($19 + -24 | 0, 0, 49703) | 0;
   $$6181 = $15;
   break;
  }
  if (($5 - $$0183 | 0) > 2) if ((HEAP8[$$0183 >> 0] | 0) == 115) if ((HEAP8[$$0183 + 1 >> 0] | 0) == 114) {
   $30 = $$0183 + 2 | 0;
   if ((HEAP8[$30 >> 0] | 0) == 78) {
    $33 = $$0183 + 3 | 0;
    $34 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($33, $1, $2) | 0;
    if (($34 | 0) == ($33 | 0) | ($34 | 0) == ($1 | 0)) {
     $$6181 = $0;
     break;
    }
    $37 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($34, $1, $2) | 0;
    $$pre = $2 + 4 | 0;
    do if (($37 | 0) == ($34 | 0)) {
     $$1184 = $34;
     $$pre$phi298Z2D = $2;
    } else {
     $39 = HEAP32[$$pre >> 2] | 0;
     if ((($39 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$6181 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $39 + -24 | 0);
     $46 = HEAP32[$$pre >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($46 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$$pre >> 2] = $46 + -24;
     $51 = HEAP8[$3 + 11 >> 0] | 0;
     $52 = $51 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($46 + -48 | 0, $52 ? HEAP32[$3 >> 2] | 0 : $3, $52 ? HEAP32[$3 + 4 >> 2] | 0 : $51 & 255) | 0;
     if (($37 | 0) != ($1 | 0)) {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$1184 = $37;
      $$pre$phi298Z2D = $2;
      break;
     }
     $60 = HEAP32[$$pre >> 2] | 0;
     $$0$i$i$idx$i198 = 0;
     while (1) {
      if (($$0$i$i$idx$i198 | 0) == -1) break;
      $$0$i$i$add$i199 = $$0$i$i$idx$i198 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($60 + ($$0$i$i$add$i199 * 24 | 0) | 0);
      $$0$i$i$idx$i198 = $$0$i$i$add$i199;
     }
     HEAP32[$$pre >> 2] = $60 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$6181 = $0;
     break L1;
    } while (0);
    $63 = $4 + 11 | 0;
    $64 = $4 + 4 | 0;
    $$2185 = $$1184;
    while (1) {
     if ((HEAP8[$$2185 >> 0] | 0) == 69) break;
     $67 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($$2185, $1, $2) | 0;
     if (($67 | 0) == ($$2185 | 0) | ($67 | 0) == ($1 | 0)) {
      $$6181 = $0;
      break L1;
     }
     $70 = HEAP32[$$pre >> 2] | 0;
     if ((($70 - (HEAP32[$$pre$phi298Z2D >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$6181 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $70 + -24 | 0);
     $77 = HEAP32[$$pre >> 2] | 0;
     $$0$i$i$idx$i202 = 0;
     while (1) {
      if (($$0$i$i$idx$i202 | 0) == -1) break;
      $$0$i$i$add$i203 = $$0$i$i$idx$i202 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($77 + ($$0$i$i$add$i203 * 24 | 0) | 0);
      $$0$i$i$idx$i202 = $$0$i$i$add$i203;
     }
     HEAP32[$$pre >> 2] = $77 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($3, 0, 49703) | 0;
     HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$3 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     $85 = HEAP8[$63 >> 0] | 0;
     $86 = $85 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$$pre >> 2] | 0) + -24 | 0, $86 ? HEAP32[$4 >> 2] | 0 : $4, $86 ? HEAP32[$64 >> 2] | 0 : $85 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$2185 = $67;
    }
    $92 = $$2185 + 1 | 0;
    $93 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($92, $1, $2) | 0;
    if (($93 | 0) == ($92 | 0)) {
     $96 = HEAP32[$$pre >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($96 | 0)) {
      $$6181 = $0;
      break;
     }
     $$0$i$i$idx$i208 = 0;
     while (1) {
      if (($$0$i$i$idx$i208 | 0) == -1) break;
      $$0$i$i$add$i209 = $$0$i$i$idx$i208 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($96 + ($$0$i$i$add$i209 * 24 | 0) | 0);
      $$0$i$i$idx$i208 = $$0$i$i$add$i209;
     }
     HEAP32[$$pre >> 2] = $96 + -24;
     $$6181 = $0;
     break;
    }
    $100 = HEAP32[$$pre >> 2] | 0;
    if ((($100 - (HEAP32[$$pre$phi298Z2D >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$6181 = $0;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $100 + -24 | 0);
    $107 = HEAP32[$$pre >> 2] | 0;
    $$0$i$i$idx$i212 = 0;
    while (1) {
     if (($$0$i$i$idx$i212 | 0) == -1) break;
     $$0$i$i$add$i213 = $$0$i$i$idx$i212 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($107 + ($$0$i$i$add$i213 * 24 | 0) | 0);
     $$0$i$i$idx$i212 = $$0$i$i$add$i213;
    }
    HEAP32[$$pre >> 2] = $107 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($3, 0, 49703) | 0;
    HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
    $$0$i$i$i216 = 0;
    while (1) {
     if (($$0$i$i$i216 | 0) == 3) break;
     HEAP32[$3 + ($$0$i$i$i216 << 2) >> 2] = 0;
     $$0$i$i$i216 = $$0$i$i$i216 + 1 | 0;
    }
    $116 = HEAP8[$4 + 11 >> 0] | 0;
    $117 = $116 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$$pre >> 2] | 0) + -24 | 0, $117 ? HEAP32[$4 >> 2] | 0 : $4, $117 ? HEAP32[$4 + 4 >> 2] | 0 : $116 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$6181 = $93;
    break;
   }
   $124 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($30, $1, $2) | 0;
   if (($124 | 0) != ($30 | 0)) {
    $126 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($124, $1, $2) | 0;
    if (($126 | 0) == ($124 | 0)) $$3186 = $124; else {
     $128 = $2 + 4 | 0;
     $129 = HEAP32[$128 >> 2] | 0;
     if ((($129 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$6181 = $0;
      break;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $129 + -24 | 0);
     $136 = HEAP32[$128 >> 2] | 0;
     $$0$i$i$idx$i222 = 0;
     while (1) {
      if (($$0$i$i$idx$i222 | 0) == -1) break;
      $$0$i$i$add$i223 = $$0$i$i$idx$i222 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($136 + ($$0$i$i$add$i223 * 24 | 0) | 0);
      $$0$i$i$idx$i222 = $$0$i$i$add$i223;
     }
     HEAP32[$128 >> 2] = $136 + -24;
     $141 = HEAP8[$3 + 11 >> 0] | 0;
     $142 = $141 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($136 + -48 | 0, $142 ? HEAP32[$3 >> 2] | 0 : $3, $142 ? HEAP32[$3 + 4 >> 2] | 0 : $141 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3186 = $126;
    }
    $149 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($$3186, $1, $2) | 0;
    if (($149 | 0) == ($$3186 | 0)) {
     $152 = $2 + 4 | 0;
     $153 = HEAP32[$152 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($153 | 0)) {
      $$6181 = $0;
      break;
     }
     $$0$i$i$idx$i228 = 0;
     while (1) {
      if (($$0$i$i$idx$i228 | 0) == -1) break;
      $$0$i$i$add$i229 = $$0$i$i$idx$i228 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($153 + ($$0$i$i$add$i229 * 24 | 0) | 0);
      $$0$i$i$idx$i228 = $$0$i$i$add$i229;
     }
     HEAP32[$152 >> 2] = $153 + -24;
     $$6181 = $0;
     break;
    }
    $157 = $2 + 4 | 0;
    $158 = HEAP32[$157 >> 2] | 0;
    if ((($158 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$6181 = $0;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $158 + -24 | 0);
    $165 = HEAP32[$157 >> 2] | 0;
    $$0$i$i$idx$i232 = 0;
    while (1) {
     if (($$0$i$i$idx$i232 | 0) == -1) break;
     $$0$i$i$add$i233 = $$0$i$i$idx$i232 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($165 + ($$0$i$i$add$i233 * 24 | 0) | 0);
     $$0$i$i$idx$i232 = $$0$i$i$add$i233;
    }
    HEAP32[$157 >> 2] = $165 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($3, 0, 49703) | 0;
    HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
    $$0$i$i$i236 = 0;
    while (1) {
     if (($$0$i$i$i236 | 0) == 3) break;
     HEAP32[$3 + ($$0$i$i$i236 << 2) >> 2] = 0;
     $$0$i$i$i236 = $$0$i$i$i236 + 1 | 0;
    }
    $174 = HEAP8[$4 + 11 >> 0] | 0;
    $175 = $174 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$157 >> 2] | 0) + -24 | 0, $175 ? HEAP32[$4 >> 2] | 0 : $4, $175 ? HEAP32[$4 + 4 >> 2] | 0 : $174 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$6181 = $149;
    break;
   }
   $182 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($30, $1, $2) | 0;
   if (($182 | 0) == ($30 | 0) | ($182 | 0) == ($1 | 0)) $$6181 = $0; else {
    if ($$0182$off0) {
     $186 = $2 + 4 | 0;
     $187 = HEAP32[$186 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($187 | 0)) {
      $$6181 = $0;
      break;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($187 + -24 | 0, 0, 49703) | 0;
     $$pre$phi300Z2D = $186;
    } else $$pre$phi300Z2D = $2 + 4 | 0;
    $190 = $4 + 11 | 0;
    $191 = $4 + 4 | 0;
    $$4187 = $182;
    while (1) {
     if ((HEAP8[$$4187 >> 0] | 0) == 69) break;
     $194 = __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($$4187, $1, $2) | 0;
     if (($194 | 0) == ($$4187 | 0) | ($194 | 0) == ($1 | 0)) {
      $$6181 = $0;
      break L1;
     }
     $197 = HEAP32[$$pre$phi300Z2D >> 2] | 0;
     if ((($197 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$6181 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $197 + -24 | 0);
     $204 = HEAP32[$$pre$phi300Z2D >> 2] | 0;
     $$0$i$i$idx$i242 = 0;
     while (1) {
      if (($$0$i$i$idx$i242 | 0) == -1) break;
      $$0$i$i$add$i243 = $$0$i$i$idx$i242 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($204 + ($$0$i$i$add$i243 * 24 | 0) | 0);
      $$0$i$i$idx$i242 = $$0$i$i$add$i243;
     }
     HEAP32[$$pre$phi300Z2D >> 2] = $204 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($3, 0, 49703) | 0;
     HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     $$0$i$i$i246 = 0;
     while (1) {
      if (($$0$i$i$i246 | 0) == 3) break;
      HEAP32[$3 + ($$0$i$i$i246 << 2) >> 2] = 0;
      $$0$i$i$i246 = $$0$i$i$i246 + 1 | 0;
     }
     $212 = HEAP8[$190 >> 0] | 0;
     $213 = $212 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$$pre$phi300Z2D >> 2] | 0) + -24 | 0, $213 ? HEAP32[$4 >> 2] | 0 : $4, $213 ? HEAP32[$191 >> 2] | 0 : $212 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$4187 = $194;
    }
    $219 = $$4187 + 1 | 0;
    $220 = __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($219, $1, $2) | 0;
    if (($220 | 0) == ($219 | 0)) {
     $223 = HEAP32[$$pre$phi300Z2D >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($223 | 0)) {
      $$6181 = $0;
      break;
     }
     $$0$i$i$idx$i252 = 0;
     while (1) {
      if (($$0$i$i$idx$i252 | 0) == -1) break;
      $$0$i$i$add$i253 = $$0$i$i$idx$i252 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($223 + ($$0$i$i$add$i253 * 24 | 0) | 0);
      $$0$i$i$idx$i252 = $$0$i$i$add$i253;
     }
     HEAP32[$$pre$phi300Z2D >> 2] = $223 + -24;
     $$6181 = $0;
     break;
    }
    $227 = HEAP32[$$pre$phi300Z2D >> 2] | 0;
    if ((($227 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$6181 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $227 + -24 | 0);
     $234 = HEAP32[$$pre$phi300Z2D >> 2] | 0;
     $$0$i$i$idx$i256 = 0;
     while (1) {
      if (($$0$i$i$idx$i256 | 0) == -1) break;
      $$0$i$i$add$i257 = $$0$i$i$idx$i256 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($234 + ($$0$i$i$add$i257 * 24 | 0) | 0);
      $$0$i$i$idx$i256 = $$0$i$i$add$i257;
     }
     HEAP32[$$pre$phi300Z2D >> 2] = $234 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($3, 0, 49703) | 0;
     HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
     $$0$i$i$i260 = 0;
     while (1) {
      if (($$0$i$i$i260 | 0) == 3) break;
      HEAP32[$3 + ($$0$i$i$i260 << 2) >> 2] = 0;
      $$0$i$i$i260 = $$0$i$i$i260 + 1 | 0;
     }
     $243 = HEAP8[$4 + 11 >> 0] | 0;
     $244 = $243 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$$pre$phi300Z2D >> 2] | 0) + -24 | 0, $244 ? HEAP32[$4 >> 2] | 0 : $4, $244 ? HEAP32[$4 + 4 >> 2] | 0 : $243 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$6181 = $220;
    }
   }
  } else $$6181 = $0; else $$6181 = $0; else $$6181 = $0;
 } else $$6181 = $0; while (0);
 STACKTOP = sp;
 return $$6181 | 0;
}

function _arDetectMarker($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0440 = 0, $$0442 = 0, $$0447 = 0, $$0452 = 0, $$0456 = 0, $$0458 = 0.0, $$0462 = 0.0, $$0464 = 0.0, $$1441 = 0, $$1443 = 0, $$1448 = 0, $$1453 = 0, $$1457 = 0, $$1459 = 0.0, $$1463 = 0.0, $$1465 = 0.0, $$2444 = 0, $$2449 = 0, $$2454 = 0, $$2460 = 0.0, $$3445 = 0, $$3450 = 0, $$3455 = 0, $$4 = 0, $$4446 = 0, $$4451 = 0, $$5 = 0, $$6 = 0, $$pre$phi495Z2D = 0, $$pre$phi501Z2D = 0, $$pre$phi503Z2D = 0, $$pre$phi505Z2D = 0, $$pre$phiZ2D = 0, $$pre486 = 0, $$pre487 = 0, $$pre488 = 0, $10 = 0, $100 = 0, $11 = 0, $111 = 0, $112 = 0, $114 = 0, $116 = 0, $119 = 0, $127 = 0, $129 = 0, $131 = 0, $132 = 0, $137 = 0, $139 = 0, $14 = 0, $145 = 0, $148 = 0, $15 = 0, $159 = 0, $16 = 0, $161 = 0, $168 = 0, $170 = 0, $176 = 0, $177 = 0, $18 = 0, $2 = 0, $20 = 0, $201 = 0, $204 = 0, $205 = 0, $206 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $217 = 0.0, $218 = 0.0, $22 = 0, $224 = 0.0, $229 = 0.0, $232 = 0.0, $236 = 0, $237 = 0, $240 = 0.0, $243 = 0, $245 = 0, $249 = 0, $252 = 0.0, $258 = 0.0, $26 = 0, $27 = 0, $276 = 0, $279 = 0.0, $28 = 0, $281 = 0, $284 = 0.0, $289 = 0.0, $29 = 0, $296 = 0, $299 = 0.0, $3 = 0, $30 = 0, $305 = 0.0, $31 = 0, $310 = 0, $314 = 0, $32 = 0, $326 = 0, $327 = 0, $33 = 0, $336 = 0, $338 = 0, $34 = 0, $341 = 0, $348 = 0, $35 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $36 = 0, $360 = 0, $365 = 0.0, $366 = 0.0, $37 = 0, $372 = 0.0, $377 = 0.0, $38 = 0, $386 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $40 = 0, $6 = 0, $7 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $83 = 0, $85 = 0, $86 = 0, $88 = 0, $91 = 0, $94 = 0, $97 = 0, $99 = 0, $spec$select = 0, $storemerge = 0, $storemerge466 = 0, $vararg_buffer = 0, $vararg_buffer6 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $vararg_buffer9 = sp + 32 | 0;
 $vararg_buffer6 = sp + 24 | 0;
 $vararg_buffer = sp;
 $2 = sp + 52 | 0;
 $3 = sp + 40 | 0;
 L1 : do if (($0 | 0) != 0 & ($1 | 0) != 0) {
  $6 = $0 + 44 | 0;
  HEAP32[$6 >> 2] = 0;
  $7 = $0 + 7062388 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  L3 : do if (($8 | 0) == 4) {
   $10 = $0 + 7062396 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   do if (($11 | 0) > 0) HEAP32[$10 >> 2] = $11 + -1; else {
    $14 = $0 + 16 | 0;
    $15 = HEAP32[$14 >> 2] | 0;
    $16 = $0 + 7062400 | 0;
    $18 = (HEAP32[$16 >> 2] | 0) + $15 | 0;
    $spec$select = ($18 | 0) < 255 ? $18 : 255;
    HEAP32[$2 >> 2] = $spec$select;
    $20 = $0 + 7062404 | 0;
    $22 = $15 - (HEAP32[$20 >> 2] | 0) | 0;
    $storemerge466 = ($22 | 0) > 0 ? $22 : 0;
    HEAP32[$2 + 4 >> 2] = $storemerge466;
    HEAP32[$2 + 8 >> 2] = $15;
    $26 = $1 + 12 | 0;
    $27 = $0 + 36 | 0;
    $28 = $0 + 40 | 0;
    $29 = $0 + 12 | 0;
    $30 = $0 + 20 | 0;
    $31 = $0 + 4834144 | 0;
    $32 = $0 + 15416 | 0;
    $33 = $0 + 15408 | 0;
    $34 = $0 + 4 | 0;
    $35 = $0 + 7062384 | 0;
    $36 = $0 + 24 | 0;
    $37 = $0 + 32 | 0;
    $38 = $0 + 7062416 | 0;
    $39 = $0 + 48 | 0;
    $40 = $0 + 7062424 | 0;
    $$0447 = 0;
    while (1) {
     if ($$0447 >>> 0 >= 3) break;
     if ((_arLabeling(HEAP32[$26 >> 2] | 0, HEAP32[$27 >> 2] | 0, HEAP32[$28 >> 2] | 0, HEAP32[$0 >> 2] | 0, HEAP32[$29 >> 2] | 0, HEAP32[$2 + ($$0447 << 2) >> 2] | 0, HEAP32[$30 >> 2] | 0, $31, 0) | 0) < 0) {
      label = 29;
      break;
     }
     if ((_arDetectMarker2(HEAP32[$27 >> 2] | 0, HEAP32[$28 >> 2] | 0, $31, HEAP32[$30 >> 2] | 0, 1e6, 70, 1.0, $32, $33) | 0) < 0) {
      label = 29;
      break;
     }
     if ((_arGetMarkerInfo(HEAP32[$1 >> 2] | 0, HEAP32[$27 >> 2] | 0, HEAP32[$28 >> 2] | 0, HEAP32[$34 >> 2] | 0, $32, HEAP32[$33 >> 2] | 0, HEAP32[$35 >> 2] | 0, HEAP32[$30 >> 2] | 0, HEAP32[$36 >> 2] | 0, (HEAP32[$37 >> 2] | 0) + 184 | 0, +HEAPF64[$38 >> 3], $39, $6, HEAP32[$40 >> 2] | 0) | 0) < 0) {
      label = 29;
      break;
     }
     HEAP32[$3 + ($$0447 << 2) >> 2] = HEAP32[$6 >> 2];
     $$0447 = $$0447 + 1 | 0;
    }
    if ((label | 0) == 29) {
     $$4 = -1;
     break L1;
    }
    if ((HEAP32[$0 >> 2] | 0) == 1) {
     $77 = HEAP32[$3 + 4 >> 2] | 0;
     $79 = HEAP32[$3 + 8 >> 2] | 0;
     $80 = HEAP32[$3 >> 2] | 0;
     HEAP32[$vararg_buffer >> 2] = $storemerge466;
     HEAP32[$vararg_buffer + 4 >> 2] = $77;
     HEAP32[$vararg_buffer + 8 >> 2] = $15;
     HEAP32[$vararg_buffer + 12 >> 2] = $79;
     HEAP32[$vararg_buffer + 16 >> 2] = $spec$select;
     HEAP32[$vararg_buffer + 20 >> 2] = $80;
     _arLog(0, 3, 17770, $vararg_buffer);
     $81 = $80;
     $83 = $79;
    } else {
     $81 = HEAP32[$3 >> 2] | 0;
     $83 = HEAP32[$3 + 8 >> 2] | 0;
    }
    $$pre486 = HEAP32[$3 + 4 >> 2] | 0;
    if (($81 | 0) > ($83 | 0) | ($$pre486 | 0) > ($83 | 0)) {
     $99 = ($81 | 0) < ($$pre486 | 0) ? $storemerge466 : $spec$select;
     HEAP32[$14 >> 2] = $99;
     $100 = $99 - $15 | 0;
     if (($100 | 0) > 0) {
      HEAP32[$16 >> 2] = $100;
      $storemerge = 1;
     } else {
      HEAP32[$16 >> 2] = 1;
      $storemerge = 0 - $100 | 0;
     }
     HEAP32[$20 >> 2] = $storemerge;
     if ((HEAP32[$0 >> 2] | 0) == 1) {
      HEAP32[$vararg_buffer6 >> 2] = $99;
      _arLog(0, 3, 17846, $vararg_buffer6);
      HEAP32[$10 >> 2] = HEAP32[$0 + 7062392 >> 2];
      break;
     } else {
      HEAP32[$10 >> 2] = HEAP32[$0 + 7062392 >> 2];
      break;
     }
    }
    $85 = HEAP32[$16 >> 2] | 0;
    $86 = HEAP32[$20 >> 2] | 0;
    do if (($85 | 0) < ($86 | 0)) {
     $88 = $85 + 1 | 0;
     HEAP32[$16 >> 2] = $88;
     $94 = $88;
    } else if (($85 | 0) > ($86 | 0)) {
     HEAP32[$20 >> 2] = $86 + 1;
     $94 = $85;
     break;
    } else {
     $91 = $85 + 1 | 0;
     HEAP32[$16 >> 2] = $91;
     HEAP32[$20 >> 2] = $86 + 1;
     $94 = $91;
     break;
    } while (0);
    if (($94 + $15 | 0) > 254) {
     HEAP32[$16 >> 2] = 1;
     $97 = 1;
    } else $97 = $94;
    if (($15 | 0) <= ($97 | 0)) HEAP32[$20 >> 2] = 1;
    HEAP32[$10 >> 2] = HEAP32[$0 + 7062392 >> 2];
    break L3;
   } while (0);
   $111 = HEAP32[$7 >> 2] | 0;
   label = 33;
  } else {
   $111 = $8;
   label = 33;
  } while (0);
  if ((label | 0) == 33) {
   L47 : do switch ($111 | 0) {
   case 3:
    {
     $112 = $0 + 7062408 | 0;
     $114 = $1 + 12 | 0;
     $116 = _arImageProcLumaHistAndBoxFilterWithBias(HEAP32[$112 >> 2] | 0, HEAP32[$114 >> 2] | 0, 9, -7) | 0;
     if (($116 | 0) < 0) {
      $$4 = $116;
      break L1;
     }
     $119 = HEAP32[$112 >> 2] | 0;
     $127 = $0 + 4834144 | 0;
     $129 = _arLabeling(HEAP32[$114 >> 2] | 0, HEAP32[$119 + 4 >> 2] | 0, HEAP32[$119 + 8 >> 2] | 0, HEAP32[$0 >> 2] | 0, HEAP32[$0 + 12 >> 2] | 0, 0, 0, $127, HEAP32[$119 >> 2] | 0) | 0;
     if (($129 | 0) < 0) {
      $$4 = $129;
      break L1;
     }
     $$pre$phi501Z2D = $0 + 36 | 0;
     $$pre$phi503Z2D = $0 + 40 | 0;
     $$pre$phi505Z2D = $0 + 20 | 0;
     $$pre$phiZ2D = $127;
     break;
    }
   case 2:
   case 1:
    {
     $131 = $0 + 7062396 | 0;
     $132 = HEAP32[$131 >> 2] | 0;
     if (($132 | 0) > 0) {
      HEAP32[$131 >> 2] = $132 + -1;
      label = 48;
      break L47;
     }
     $137 = HEAP32[$0 + 7062408 >> 2] | 0;
     $139 = HEAP32[$1 + 12 >> 2] | 0;
     if (($111 | 0) == 1) $$0 = _arImageProcLumaHistAndCDFAndMedian($137, $139, $2) | 0; else $$0 = _arImageProcLumaHistAndOtsu($137, $139, $2) | 0;
     if (($$0 | 0) < 0) {
      $$4 = $$0;
      break L1;
     }
     $145 = $0 + 16 | 0;
     if ((HEAP32[$0 >> 2] | 0) == 1) {
      $148 = HEAPU8[$2 >> 0] | 0;
      if ((HEAP32[$145 >> 2] | 0) != ($148 | 0)) {
       HEAP32[$vararg_buffer9 >> 2] = (HEAP32[$7 >> 2] | 0) == 1 ? 17898 : 17905;
       HEAP32[$vararg_buffer9 + 4 >> 2] = $148;
       _arLog(0, 3, 17910, $vararg_buffer9);
      }
     }
     HEAP32[$145 >> 2] = HEAPU8[$2 >> 0];
     HEAP32[$131 >> 2] = HEAP32[$0 + 7062392 >> 2];
     label = 48;
     break;
    }
   default:
    label = 48;
   } while (0);
   if ((label | 0) == 48) {
    $159 = $0 + 36 | 0;
    $161 = $0 + 40 | 0;
    $168 = $0 + 20 | 0;
    $170 = $0 + 4834144 | 0;
    if ((_arLabeling(HEAP32[$1 + 12 >> 2] | 0, HEAP32[$159 >> 2] | 0, HEAP32[$161 >> 2] | 0, HEAP32[$0 >> 2] | 0, HEAP32[$0 + 12 >> 2] | 0, HEAP32[$0 + 16 >> 2] | 0, HEAP32[$168 >> 2] | 0, $170, 0) | 0) < 0) {
     $$4 = -1;
     break;
    } else {
     $$pre$phi501Z2D = $159;
     $$pre$phi503Z2D = $161;
     $$pre$phi505Z2D = $168;
     $$pre$phiZ2D = $170;
    }
   }
   $176 = $0 + 15416 | 0;
   $177 = $0 + 15408 | 0;
   if ((_arDetectMarker2(HEAP32[$$pre$phi501Z2D >> 2] | 0, HEAP32[$$pre$phi503Z2D >> 2] | 0, $$pre$phiZ2D, HEAP32[$$pre$phi505Z2D >> 2] | 0, 1e6, 70, 1.0, $176, $177) | 0) < 0) {
    $$4 = -1;
    break;
   }
   if ((_arGetMarkerInfo(HEAP32[$1 >> 2] | 0, HEAP32[$$pre$phi501Z2D >> 2] | 0, HEAP32[$$pre$phi503Z2D >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0, $176, HEAP32[$177 >> 2] | 0, HEAP32[$0 + 7062384 >> 2] | 0, HEAP32[$$pre$phi505Z2D >> 2] | 0, HEAP32[$0 + 24 >> 2] | 0, (HEAP32[$0 + 32 >> 2] | 0) + 184 | 0, +HEAPF64[$0 + 7062416 >> 3], $0 + 48 | 0, $6, HEAP32[$0 + 7062424 >> 2] | 0) | 0) < 0) {
    $$4 = -1;
    break;
   }
  }
  $201 = $0 + 28 | 0;
  if ((HEAP32[$201 >> 2] | 0) == 1) {
   _confidenceCutoff($0);
   $$4 = 0;
   break;
  }
  $204 = $0 + 4818296 | 0;
  $205 = HEAP32[$204 >> 2] | 0;
  $206 = $0 + 24 | 0;
  $$1448 = 0;
  while (1) {
   if (($$1448 | 0) >= ($205 | 0)) break;
   $208 = HEAP32[$6 >> 2] | 0;
   $209 = $0 + 4818304 + ($$1448 * 264 | 0) | 0;
   $210 = $0 + 4818304 + ($$1448 * 264 | 0) + 56 | 0;
   $211 = $0 + 4818304 + ($$1448 * 264 | 0) + 64 | 0;
   $$0442 = 0;
   $$0456 = -1;
   $$0464 = .5;
   while (1) {
    if (($$0442 | 0) >= ($208 | 0)) break;
    $217 = +(HEAP32[$0 + 48 + ($$0442 << 8) >> 2] | 0);
    $218 = +(HEAP32[$209 >> 2] | 0) / $217;
    if ($218 < .7 | $218 > 1.43) {
     $$1457 = $$0456;
     $$1465 = $$0464;
    } else {
     $224 = +HEAPF64[$0 + 48 + ($$0442 << 8) + 56 >> 3] - +HEAPF64[$210 >> 3];
     $229 = +HEAPF64[$0 + 48 + ($$0442 << 8) + 64 >> 3] - +HEAPF64[$211 >> 3];
     $232 = ($224 * $224 + $229 * $229) / $217;
     if ($232 < $$0464) {
      $$1457 = $$0442;
      $$1465 = $232;
     } else {
      $$1457 = $$0456;
      $$1465 = $$0464;
     }
    }
    $$0442 = $$0442 + 1 | 0;
    $$0456 = $$1457;
    $$0464 = $$1465;
   }
   L85 : do if (($$0456 | 0) > -1) {
    $236 = HEAP32[$206 >> 2] | 0;
    switch ($236 | 0) {
    case 2:
    case 1:
    case 0:
     break;
    case 4:
    case 3:
     {
      $276 = $0 + 48 + ($$0456 << 8) + 40 | 0;
      $279 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 40 >> 3];
      if (+HEAPF64[$276 >> 3] < $279) {
       $$pre$phi495Z2D = $0 + 48 + ($$0456 << 8) + 48 | 0;
       $289 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 48 >> 3];
      } else {
       $281 = $0 + 48 + ($$0456 << 8) + 48 | 0;
       $284 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 48 >> 3];
       if (+HEAPF64[$281 >> 3] < $284) {
        $$pre$phi495Z2D = $281;
        $289 = $284;
       } else break L85;
      }
      HEAPF64[$276 >> 3] = $279;
      HEAP32[$0 + 48 + ($$0456 << 8) + 8 >> 2] = HEAP32[$0 + 4818304 + ($$1448 * 264 | 0) + 8 >> 2];
      HEAPF64[$$pre$phi495Z2D >> 3] = $289;
      HEAP32[$0 + 48 + ($$0456 << 8) + 12 >> 2] = HEAP32[$0 + 4818304 + ($$1448 * 264 | 0) + 12 >> 2];
      $$2444 = 0;
      $$2454 = -1;
      $$2460 = 1.0e8;
      while (1) {
       if (($$2444 | 0) == 4) break;
       $$1441 = 0;
       $$1463 = 0.0;
       while (1) {
        if (($$1441 | 0) == 4) break;
        $296 = $$1441 + $$2444 & 3;
        $299 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 168 + ($$1441 << 4) >> 3] - +HEAPF64[$0 + 48 + ($$0456 << 8) + 168 + ($296 << 4) >> 3];
        $305 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 168 + ($$1441 << 4) + 8 >> 3] - +HEAPF64[$0 + 48 + ($$0456 << 8) + 168 + ($296 << 4) + 8 >> 3];
        $$1441 = $$1441 + 1 | 0;
        $$1463 = $$1463 + ($299 * $299 + $305 * $305);
       }
       $310 = $$1463 < $$2460;
       $$3455 = $310 ? $$2444 : $$2454;
       $$2444 = $$2444 + 1 | 0;
       $$2454 = $$3455;
       $$2460 = $310 ? $$1463 : $$2460;
      }
      $314 = 4 - $$2454 | 0;
      HEAP32[$0 + 48 + ($$0456 << 8) + 20 >> 2] = ($314 + (HEAP32[$0 + 4818304 + ($$1448 * 264 | 0) + 20 >> 2] | 0) | 0) % 4 | 0;
      HEAP32[$0 + 48 + ($$0456 << 8) + 24 >> 2] = ($314 + (HEAP32[$0 + 4818304 + ($$1448 * 264 | 0) + 24 >> 2] | 0) | 0) % 4 | 0;
      break L85;
      break;
     }
    default:
     {
      $$4 = -1;
      break L1;
     }
    }
    $237 = $0 + 48 + ($$0456 << 8) + 32 | 0;
    $240 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 32 >> 3];
    if (+HEAPF64[$237 >> 3] < $240) {
     HEAPF64[$237 >> 3] = $240;
     $243 = HEAP32[$0 + 4818304 + ($$1448 * 264 | 0) + 4 >> 2] | 0;
     HEAP32[$0 + 48 + ($$0456 << 8) + 4 >> 2] = $243;
     $245 = $0 + 4818304 + ($$1448 * 264 | 0) + 16 | 0;
     $$0452 = -1;
     $$0458 = 1.0e8;
     $$1443 = 0;
     while (1) {
      if (($$1443 | 0) == 4) break;
      $$0440 = 0;
      $$0462 = 0.0;
      while (1) {
       if (($$0440 | 0) == 4) break;
       $249 = $$0440 + $$1443 & 3;
       $252 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 168 + ($$0440 << 4) >> 3] - +HEAPF64[$0 + 48 + ($$0456 << 8) + 168 + ($249 << 4) >> 3];
       $258 = +HEAPF64[$0 + 4818304 + ($$1448 * 264 | 0) + 168 + ($$0440 << 4) + 8 >> 3] - +HEAPF64[$0 + 48 + ($$0456 << 8) + 168 + ($249 << 4) + 8 >> 3];
       $$0440 = $$0440 + 1 | 0;
       $$0462 = $$0462 + ($252 * $252 + $258 * $258);
      }
      if ($$0462 < $$0458) {
       $$1453 = (4 - $$1443 + (HEAP32[$245 >> 2] | 0) | 0) % 4 | 0;
       $$1459 = $$0462;
      } else {
       $$1453 = $$0452;
       $$1459 = $$0458;
      }
      $$0452 = $$1453;
      $$0458 = $$1459;
      $$1443 = $$1443 + 1 | 0;
     }
     HEAP32[$0 + 48 + ($$0456 << 8) + 16 >> 2] = $$0452;
     if ($236 >>> 0 < 2) {
      HEAP32[$0 + 48 + ($$0456 << 8) + 8 >> 2] = $243;
      HEAPF64[$0 + 48 + ($$0456 << 8) + 40 >> 3] = $240;
      HEAP32[$0 + 48 + ($$0456 << 8) + 20 >> 2] = $$0452;
      break;
     } else {
      HEAP32[$0 + 48 + ($$0456 << 8) + 12 >> 2] = $243;
      HEAPF64[$0 + 48 + ($$0456 << 8) + 48 >> 3] = $240;
      HEAP32[$0 + 48 + ($$0456 << 8) + 24 >> 2] = $$0452;
      break;
     }
    }
   } while (0);
   $$1448 = $$1448 + 1 | 0;
  }
  _confidenceCutoff($0);
  $$2449 = 0;
  $$3445 = 0;
  while (1) {
   if (($$2449 | 0) >= (HEAP32[$204 >> 2] | 0)) break;
   $326 = $0 + 4818304 + ($$2449 * 264 | 0) + 256 | 0;
   $327 = HEAP32[$326 >> 2] | 0;
   HEAP32[$326 >> 2] = $327 + 1;
   if (($327 | 0) < 3) {
    if (($$2449 | 0) != ($$3445 | 0)) _memcpy($0 + 4818304 + ($$3445 * 264 | 0) | 0, $0 + 4818304 + ($$2449 * 264 | 0) | 0, 264) | 0;
    $$4446 = $$3445 + 1 | 0;
   } else $$4446 = $$3445;
   $$2449 = $$2449 + 1 | 0;
   $$3445 = $$4446;
  }
  HEAP32[$204 >> 2] = $$3445;
  $$pre487 = HEAP32[$6 >> 2] | 0;
  $$3450 = 0;
  $341 = $$3445;
  while (1) {
   if (($$3450 | 0) >= ($$pre487 | 0)) break;
   $336 = $0 + 48 + ($$3450 << 8) | 0;
   $338 = HEAP32[$0 + 48 + ($$3450 << 8) + 4 >> 2] | 0;
   if (($338 | 0) < 0) $388 = $341; else {
    $$5 = 0;
    while (1) {
     if (($$5 | 0) >= ($341 | 0)) break;
     if ((HEAP32[$0 + 4818304 + ($$5 * 264 | 0) + 4 >> 2] | 0) == ($338 | 0)) break;
     $$5 = $$5 + 1 | 0;
    }
    if (($$5 | 0) == ($341 | 0)) {
     if (($341 | 0) == 60) break;
     $348 = $341 + 1 | 0;
     HEAP32[$204 >> 2] = $348;
     $389 = $348;
    } else $389 = $341;
    _memcpy($0 + 4818304 + ($$5 * 264 | 0) | 0, $336 | 0, 256) | 0;
    HEAP32[$0 + 4818304 + ($$5 * 264 | 0) + 256 >> 2] = 1;
    $388 = $389;
   }
   $$3450 = $$3450 + 1 | 0;
   $341 = $388;
  }
  if ((HEAP32[$201 >> 2] | 0) == 2) $$4 = 0; else {
   $$4451 = 0;
   $355 = $341;
   $360 = $$pre487;
   while (1) {
    if (($$4451 | 0) >= ($355 | 0)) {
     $$4 = 0;
     break L1;
    }
    $356 = $0 + 4818304 + ($$4451 * 264 | 0) | 0;
    $357 = $0 + 4818304 + ($$4451 * 264 | 0) + 56 | 0;
    $358 = $0 + 4818304 + ($$4451 * 264 | 0) + 64 | 0;
    $$6 = 0;
    while (1) {
     if (($$6 | 0) >= ($360 | 0)) break;
     $365 = +(HEAP32[$0 + 48 + ($$6 << 8) >> 2] | 0);
     $366 = +(HEAP32[$356 >> 2] | 0) / $365;
     if (!($366 < .7 | $366 > 1.43)) {
      $372 = +HEAPF64[$0 + 48 + ($$6 << 8) + 56 >> 3] - +HEAPF64[$357 >> 3];
      $377 = +HEAPF64[$0 + 48 + ($$6 << 8) + 64 >> 3] - +HEAPF64[$358 >> 3];
      if (($372 * $372 + $377 * $377) / $365 < .5) break;
     }
     $$6 = $$6 + 1 | 0;
    }
    if (($$6 | 0) == ($360 | 0)) {
     _memcpy($0 + 48 + ($360 << 8) | 0, $0 + 4818304 + ($$4451 * 264 | 0) | 0, 256) | 0;
     $386 = $360 + 1 | 0;
     HEAP32[$6 >> 2] = $386;
     $$pre488 = HEAP32[$204 >> 2] | 0;
     $390 = $386;
    } else {
     $$pre488 = $355;
     $390 = $360;
    }
    $$4451 = $$4451 + 1 | 0;
    $355 = $$pre488;
    $360 = $390;
   }
  }
 } else $$4 = -1; while (0);
 STACKTOP = sp;
 return $$4 | 0;
}

function _printf_core($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0231 = 0, $$0232336 = 0, $$0234 = 0, $$0237 = 0, $$0239 = 0, $$0242315 = 0, $$0242315373 = 0, $$0242335 = 0, $$0245 = 0, $$0245$ph = 0, $$0245$ph$be = 0, $$0249 = 0, $$0249$ph = 0, $$0251$lcssa = 0, $$0251323 = 0, $$0254 = 0, $$0255 = 0, $$0256 = 0, $$0261 = 0, $$0264$lcssa = 0, $$0264330 = 0, $$0271$ph = 0, $$1 = 0, $$1233342 = 0, $$1235 = 0, $$1238 = 0, $$1240 = 0, $$1243341 = 0, $$1250 = 0, $$1257 = 0, $$1262 = 0, $$1265 = 0, $$1272 = 0, $$2236 = 0, $$2241 = 0, $$2244322 = 0, $$2258 = 0, $$2263 = 0, $$2273 = 0, $$3267 = 0, $$3274 = 0, $$3319 = 0, $$4260372 = 0, $$4268 = 0, $$5 = 0, $$6270 = 0, $$lcssa310 = 0, $$pre$phiZ2D = 0, $$pre362 = 0, $$pre365 = 0, $$sink = 0, $10 = 0, $104 = 0, $105 = 0, $108 = 0, $11 = 0, $111 = 0, $114 = 0, $116 = 0, $12 = 0, $124 = 0, $128 = 0, $13 = 0, $139 = 0, $14 = 0, $143 = 0, $15 = 0, $150 = 0, $151 = 0, $153 = 0, $154 = 0, $156 = 0, $16 = 0, $165 = 0, $166 = 0, $171 = 0, $174 = 0, $179 = 0, $180 = 0, $185 = 0, $187 = 0, $194 = 0, $195 = 0, $20 = 0, $206 = 0, $218 = 0, $22 = 0, $225 = 0, $23 = 0, $232 = 0, $233 = 0, $246 = 0, $25 = 0, $252 = 0, $256 = 0, $26 = 0, $260 = 0, $262 = 0, $265 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $279 = 0, $280 = 0, $284 = 0, $29 = 0, $292 = 0, $298 = 0, $307 = 0, $309 = 0, $310 = 0, $311 = 0, $32 = 0, $324 = 0, $326 = 0, $327 = 0, $331 = 0, $335 = 0, $337 = 0, $348 = 0, $350 = 0, $357 = 0, $360 = 0, $367 = 0, $368 = 0, $45 = 0, $53 = 0, $54 = 0, $56 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $7 = 0, $78 = 0, $8 = 0, $82 = 0, $9 = 0, $or$cond = 0, $or$cond280 = 0, $spec$select = 0, $spec$select286 = 0, $storemerge275$lcssa = 0, $storemerge275329 = 0, $storemerge276 = 0, label = 0, sp = 0, $156$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $7 = sp + 56 | 0;
 $8 = sp + 40 | 0;
 $9 = sp;
 $10 = sp + 48 | 0;
 $11 = sp + 60 | 0;
 HEAP32[$7 >> 2] = $1;
 $12 = ($0 | 0) != 0;
 $13 = $9 + 40 | 0;
 $14 = $13;
 $15 = $9 + 39 | 0;
 $16 = $10 + 4 | 0;
 $$0245$ph = 0;
 $$0249$ph = 0;
 $$0271$ph = 0;
 L1 : while (1) {
  $$0245 = $$0245$ph;
  $$0249 = $$0249$ph;
  while (1) {
   do if (($$0249 | 0) > -1) if (($$0245 | 0) > (2147483647 - $$0249 | 0)) {
    $20 = ___errno_location() | 0;
    HEAP32[$20 >> 2] = 75;
    $$1250 = -1;
    break;
   } else {
    $$1250 = $$0245 + $$0249 | 0;
    break;
   } else $$1250 = $$0249; while (0);
   $22 = HEAP32[$7 >> 2] | 0;
   $23 = HEAP8[$22 >> 0] | 0;
   if (!($23 << 24 >> 24)) {
    label = 92;
    break L1;
   }
   $25 = $23;
   $27 = $22;
   L12 : while (1) {
    switch ($25 << 24 >> 24) {
    case 37:
     {
      label = 10;
      break L12;
      break;
     }
    case 0:
     {
      $$0251$lcssa = $27;
      break L12;
      break;
     }
    default:
     {}
    }
    $26 = $27 + 1 | 0;
    HEAP32[$7 >> 2] = $26;
    $25 = HEAP8[$26 >> 0] | 0;
    $27 = $26;
   }
   L15 : do if ((label | 0) == 10) {
    label = 0;
    $$0251323 = $27;
    $29 = $27;
    while (1) {
     if ((HEAP8[$29 + 1 >> 0] | 0) != 37) {
      $$0251$lcssa = $$0251323;
      break L15;
     }
     $32 = $$0251323 + 1 | 0;
     $29 = $29 + 2 | 0;
     HEAP32[$7 >> 2] = $29;
     if ((HEAP8[$29 >> 0] | 0) != 37) {
      $$0251$lcssa = $32;
      break;
     } else $$0251323 = $32;
    }
   } while (0);
   $$0245 = $$0251$lcssa - $22 | 0;
   if ($12) _out_728($0, $22, $$0245);
   if (!$$0245) break; else $$0249 = $$1250;
  }
  $45 = (_isdigit(HEAP8[(HEAP32[$7 >> 2] | 0) + 1 >> 0] | 0) | 0) == 0;
  $$pre362 = HEAP32[$7 >> 2] | 0;
  if ($45) {
   $$0255 = -1;
   $$1272 = $$0271$ph;
   $$sink = 1;
  } else if ((HEAP8[$$pre362 + 2 >> 0] | 0) == 36) {
   $$0255 = (HEAP8[$$pre362 + 1 >> 0] | 0) + -48 | 0;
   $$1272 = 1;
   $$sink = 3;
  } else {
   $$0255 = -1;
   $$1272 = $$0271$ph;
   $$sink = 1;
  }
  $53 = $$pre362 + $$sink | 0;
  HEAP32[$7 >> 2] = $53;
  $54 = HEAP8[$53 >> 0] | 0;
  $56 = ($54 << 24 >> 24) + -32 | 0;
  if ($56 >>> 0 > 31 | (1 << $56 & 75913 | 0) == 0) {
   $$0264$lcssa = 0;
   $$lcssa310 = $54;
   $storemerge275$lcssa = $53;
  } else {
   $$0264330 = 0;
   $62 = $56;
   $storemerge275329 = $53;
   while (1) {
    $63 = 1 << $62 | $$0264330;
    $64 = $storemerge275329 + 1 | 0;
    HEAP32[$7 >> 2] = $64;
    $65 = HEAP8[$64 >> 0] | 0;
    $62 = ($65 << 24 >> 24) + -32 | 0;
    if ($62 >>> 0 > 31 | (1 << $62 & 75913 | 0) == 0) {
     $$0264$lcssa = $63;
     $$lcssa310 = $65;
     $storemerge275$lcssa = $64;
     break;
    } else {
     $$0264330 = $63;
     $storemerge275329 = $64;
    }
   }
  }
  if ($$lcssa310 << 24 >> 24 == 42) {
   if (!(_isdigit(HEAP8[$storemerge275$lcssa + 1 >> 0] | 0) | 0)) label = 27; else {
    $78 = HEAP32[$7 >> 2] | 0;
    if ((HEAP8[$78 + 2 >> 0] | 0) == 36) {
     $82 = $78 + 1 | 0;
     HEAP32[$4 + ((HEAP8[$82 >> 0] | 0) + -48 << 2) >> 2] = 10;
     $$0261 = HEAP32[$3 + ((HEAP8[$82 >> 0] | 0) + -48 << 3) >> 2] | 0;
     $$2273 = 1;
     $storemerge276 = $78 + 3 | 0;
    } else label = 27;
   }
   if ((label | 0) == 27) {
    label = 0;
    if ($$1272 | 0) {
     $$0 = -1;
     break;
    }
    if ($12) {
     $104 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
     $105 = HEAP32[$104 >> 2] | 0;
     HEAP32[$2 >> 2] = $104 + 4;
     $367 = $105;
    } else $367 = 0;
    $$0261 = $367;
    $$2273 = 0;
    $storemerge276 = (HEAP32[$7 >> 2] | 0) + 1 | 0;
   }
   HEAP32[$7 >> 2] = $storemerge276;
   $108 = ($$0261 | 0) < 0;
   $$1262 = $108 ? 0 - $$0261 | 0 : $$0261;
   $$1265 = $108 ? $$0264$lcssa | 8192 : $$0264$lcssa;
   $$3274 = $$2273;
   $114 = $storemerge276;
  } else {
   $111 = _getint_729($7) | 0;
   if (($111 | 0) < 0) {
    $$0 = -1;
    break;
   }
   $$1262 = $111;
   $$1265 = $$0264$lcssa;
   $$3274 = $$1272;
   $114 = HEAP32[$7 >> 2] | 0;
  }
  do if ((HEAP8[$114 >> 0] | 0) == 46) {
   $116 = $114 + 1 | 0;
   if ((HEAP8[$116 >> 0] | 0) != 42) {
    HEAP32[$7 >> 2] = $116;
    $154 = _getint_729($7) | 0;
    $$0256 = $154;
    $$pre365 = HEAP32[$7 >> 2] | 0;
    break;
   }
   if (_isdigit(HEAP8[$114 + 2 >> 0] | 0) | 0) {
    $124 = HEAP32[$7 >> 2] | 0;
    if ((HEAP8[$124 + 3 >> 0] | 0) == 36) {
     $128 = $124 + 2 | 0;
     HEAP32[$4 + ((HEAP8[$128 >> 0] | 0) + -48 << 2) >> 2] = 10;
     $139 = HEAP32[$3 + ((HEAP8[$128 >> 0] | 0) + -48 << 3) >> 2] | 0;
     $143 = $124 + 4 | 0;
     HEAP32[$7 >> 2] = $143;
     $$0256 = $139;
     $$pre365 = $143;
     break;
    }
   }
   if ($$3274 | 0) {
    $$0 = -1;
    break L1;
   }
   if ($12) {
    $150 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $151 = HEAP32[$150 >> 2] | 0;
    HEAP32[$2 >> 2] = $150 + 4;
    $368 = $151;
   } else $368 = 0;
   $153 = (HEAP32[$7 >> 2] | 0) + 2 | 0;
   HEAP32[$7 >> 2] = $153;
   $$0256 = $368;
   $$pre365 = $153;
  } else {
   $$0256 = -1;
   $$pre365 = $114;
  } while (0);
  $$0254 = 0;
  $156 = $$pre365;
  while (1) {
   if (((HEAP8[$156 >> 0] | 0) + -65 | 0) >>> 0 > 57) {
    $$0 = -1;
    break L1;
   }
   $156$looptemp = $156;
   $156 = $156 + 1 | 0;
   HEAP32[$7 >> 2] = $156;
   $165 = HEAP8[(HEAP8[$156$looptemp >> 0] | 0) + -65 + (3984 + ($$0254 * 58 | 0)) >> 0] | 0;
   $166 = $165 & 255;
   if (($166 + -1 | 0) >>> 0 >= 8) break; else $$0254 = $166;
  }
  if (!($165 << 24 >> 24)) {
   $$0 = -1;
   break;
  }
  $171 = ($$0255 | 0) > -1;
  do if ($165 << 24 >> 24 == 19) if ($171) {
   $$0 = -1;
   break L1;
  } else label = 54; else {
   if ($171) {
    HEAP32[$4 + ($$0255 << 2) >> 2] = $166;
    $174 = $3 + ($$0255 << 3) | 0;
    $179 = HEAP32[$174 + 4 >> 2] | 0;
    $180 = $8;
    HEAP32[$180 >> 2] = HEAP32[$174 >> 2];
    HEAP32[$180 + 4 >> 2] = $179;
    label = 54;
    break;
   }
   if (!$12) {
    $$0 = 0;
    break L1;
   }
   _pop_arg_731($8, $166, $2, $6);
   $185 = HEAP32[$7 >> 2] | 0;
   label = 55;
  } while (0);
  if ((label | 0) == 54) {
   label = 0;
   if ($12) {
    $185 = $156;
    label = 55;
   } else $$0245$ph$be = 0;
  }
  L77 : do if ((label | 0) == 55) {
   label = 0;
   $187 = HEAP8[$185 + -1 >> 0] | 0;
   $$0237 = ($$0254 | 0) != 0 & ($187 & 15 | 0) == 3 ? $187 & -33 : $187;
   $194 = $$1265 & -65537;
   $spec$select = ($$1265 & 8192 | 0) == 0 ? $$1265 : $194;
   L79 : do switch ($$0237 | 0) {
   case 110:
    {
     switch (($$0254 & 255) << 24 >> 24) {
     case 0:
      {
       HEAP32[HEAP32[$8 >> 2] >> 2] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 1:
      {
       HEAP32[HEAP32[$8 >> 2] >> 2] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 2:
      {
       $206 = HEAP32[$8 >> 2] | 0;
       HEAP32[$206 >> 2] = $$1250;
       HEAP32[$206 + 4 >> 2] = (($$1250 | 0) < 0) << 31 >> 31;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 3:
      {
       HEAP16[HEAP32[$8 >> 2] >> 1] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 4:
      {
       HEAP8[HEAP32[$8 >> 2] >> 0] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 6:
      {
       HEAP32[HEAP32[$8 >> 2] >> 2] = $$1250;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     case 7:
      {
       $218 = HEAP32[$8 >> 2] | 0;
       HEAP32[$218 >> 2] = $$1250;
       HEAP32[$218 + 4 >> 2] = (($$1250 | 0) < 0) << 31 >> 31;
       $$0245$ph$be = 0;
       break L77;
       break;
      }
     default:
      {
       $$0245$ph$be = 0;
       break L77;
      }
     }
     break;
    }
   case 112:
    {
     $$1238 = 120;
     $$1257 = $$0256 >>> 0 > 8 ? $$0256 : 8;
     $$3267 = $spec$select | 8;
     label = 67;
     break;
    }
   case 88:
   case 120:
    {
     $$1238 = $$0237;
     $$1257 = $$0256;
     $$3267 = $spec$select;
     label = 67;
     break;
    }
   case 111:
    {
     $246 = $8;
     $252 = _fmt_o(HEAP32[$246 >> 2] | 0, HEAP32[$246 + 4 >> 2] | 0, $13) | 0;
     $256 = $14 - $252 | 0;
     $$0231 = $252;
     $$1235 = 0;
     $$1240 = 46061;
     $$2258 = ($spec$select & 8 | 0) == 0 | ($$0256 | 0) > ($256 | 0) ? $$0256 : $256 + 1 | 0;
     $$4268 = $spec$select;
     label = 73;
     break;
    }
   case 105:
   case 100:
    {
     $260 = $8;
     $262 = HEAP32[$260 >> 2] | 0;
     $265 = HEAP32[$260 + 4 >> 2] | 0;
     if (($265 | 0) < 0) {
      $267 = _i64Subtract(0, 0, $262 | 0, $265 | 0) | 0;
      $268 = getTempRet0() | 0;
      $269 = $8;
      HEAP32[$269 >> 2] = $267;
      HEAP32[$269 + 4 >> 2] = $268;
      $$0234 = 1;
      $$0239 = 46061;
      $279 = $267;
      $280 = $268;
      label = 72;
      break L79;
     } else {
      $$0234 = ($spec$select & 2049 | 0) != 0 & 1;
      $$0239 = ($spec$select & 2048 | 0) == 0 ? (($spec$select & 1 | 0) == 0 ? 46061 : 46063) : 46062;
      $279 = $262;
      $280 = $265;
      label = 72;
      break L79;
     }
     break;
    }
   case 117:
    {
     $195 = $8;
     $$0234 = 0;
     $$0239 = 46061;
     $279 = HEAP32[$195 >> 2] | 0;
     $280 = HEAP32[$195 + 4 >> 2] | 0;
     label = 72;
     break;
    }
   case 99:
    {
     HEAP8[$15 >> 0] = HEAP32[$8 >> 2];
     $$1 = $15;
     $$2236 = 0;
     $$2241 = 46061;
     $$5 = 1;
     $$6270 = $194;
     $$pre$phiZ2D = $14;
     break;
    }
   case 115:
    {
     $307 = HEAP32[$8 >> 2] | 0;
     $309 = ($307 | 0) == 0 ? 46071 : $307;
     $310 = _memchr($309, 0, $$0256) | 0;
     $311 = ($310 | 0) == 0;
     $$1 = $309;
     $$2236 = 0;
     $$2241 = 46061;
     $$5 = $311 ? $$0256 : $310 - $309 | 0;
     $$6270 = $194;
     $$pre$phiZ2D = $311 ? $309 + $$0256 | 0 : $310;
     break;
    }
   case 67:
    {
     HEAP32[$10 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$16 >> 2] = 0;
     HEAP32[$8 >> 2] = $10;
     $$4260372 = -1;
     label = 79;
     break;
    }
   case 83:
    {
     if (!$$0256) {
      _pad_734($0, 32, $$1262, 0, $spec$select);
      $$0242315373 = 0;
      label = 89;
     } else {
      $$4260372 = $$0256;
      label = 79;
     }
     break;
    }
   case 65:
   case 71:
   case 70:
   case 69:
   case 97:
   case 103:
   case 102:
   case 101:
    {
     $$0245$ph$be = FUNCTION_TABLE_iidiiii[$5 & 1]($0, +HEAPF64[$8 >> 3], $$1262, $$0256, $spec$select, $$0237) | 0;
     break L77;
     break;
    }
   default:
    {
     $$1 = $22;
     $$2236 = 0;
     $$2241 = 46061;
     $$5 = $$0256;
     $$6270 = $spec$select;
     $$pre$phiZ2D = $14;
    }
   } while (0);
   L102 : do if ((label | 0) == 67) {
    label = 0;
    $225 = $8;
    $232 = _fmt_x(HEAP32[$225 >> 2] | 0, HEAP32[$225 + 4 >> 2] | 0, $13, $$1238 & 32) | 0;
    $233 = $8;
    $or$cond280 = ($$3267 & 8 | 0) == 0 | (HEAP32[$233 >> 2] | 0) == 0 & (HEAP32[$233 + 4 >> 2] | 0) == 0;
    $$0231 = $232;
    $$1235 = $or$cond280 ? 0 : 2;
    $$1240 = $or$cond280 ? 46061 : 46061 + ($$1238 >>> 4) | 0;
    $$2258 = $$1257;
    $$4268 = $$3267;
    label = 73;
   } else if ((label | 0) == 72) {
    label = 0;
    $$0231 = _fmt_u($279, $280, $13) | 0;
    $$1235 = $$0234;
    $$1240 = $$0239;
    $$2258 = $$0256;
    $$4268 = $spec$select;
    label = 73;
   } else if ((label | 0) == 79) {
    label = 0;
    $$0232336 = HEAP32[$8 >> 2] | 0;
    $$0242335 = 0;
    while (1) {
     $324 = HEAP32[$$0232336 >> 2] | 0;
     if (!$324) {
      $$0242315 = $$0242335;
      break;
     }
     $326 = _wctomb($11, $324) | 0;
     $327 = ($326 | 0) < 0;
     if ($327 | $326 >>> 0 > ($$4260372 - $$0242335 | 0) >>> 0) {
      label = 83;
      break;
     }
     $331 = $326 + $$0242335 | 0;
     if ($$4260372 >>> 0 > $331 >>> 0) {
      $$0232336 = $$0232336 + 4 | 0;
      $$0242335 = $331;
     } else {
      $$0242315 = $331;
      break;
     }
    }
    if ((label | 0) == 83) {
     label = 0;
     if ($327) {
      $$0 = -1;
      break L1;
     } else $$0242315 = $$0242335;
    }
    _pad_734($0, 32, $$1262, $$0242315, $spec$select);
    if (!$$0242315) {
     $$0242315373 = 0;
     label = 89;
    } else {
     $$1233342 = HEAP32[$8 >> 2] | 0;
     $$1243341 = 0;
     while (1) {
      $335 = HEAP32[$$1233342 >> 2] | 0;
      if (!$335) {
       $$0242315373 = $$0242315;
       label = 89;
       break L102;
      }
      $337 = _wctomb($11, $335) | 0;
      $$1243341 = $337 + $$1243341 | 0;
      if (($$1243341 | 0) > ($$0242315 | 0)) {
       $$0242315373 = $$0242315;
       label = 89;
       break L102;
      }
      _out_728($0, $11, $337);
      if ($$1243341 >>> 0 >= $$0242315 >>> 0) {
       $$0242315373 = $$0242315;
       label = 89;
       break;
      } else $$1233342 = $$1233342 + 4 | 0;
     }
    }
   } while (0);
   if ((label | 0) == 73) {
    label = 0;
    $284 = $8;
    $292 = (HEAP32[$284 >> 2] | 0) != 0 | (HEAP32[$284 + 4 >> 2] | 0) != 0;
    $or$cond = ($$2258 | 0) != 0 | $292;
    $298 = $14 - $$0231 + (($292 ^ 1) & 1) | 0;
    $$1 = $or$cond ? $$0231 : $13;
    $$2236 = $$1235;
    $$2241 = $$1240;
    $$5 = $or$cond ? (($$2258 | 0) > ($298 | 0) ? $$2258 : $298) : 0;
    $$6270 = ($$2258 | 0) > -1 ? $$4268 & -65537 : $$4268;
    $$pre$phiZ2D = $14;
   } else if ((label | 0) == 89) {
    label = 0;
    _pad_734($0, 32, $$1262, $$0242315373, $spec$select ^ 8192);
    $$0245$ph$be = ($$1262 | 0) > ($$0242315373 | 0) ? $$1262 : $$0242315373;
    break;
   }
   $348 = $$pre$phiZ2D - $$1 | 0;
   $spec$select286 = ($$5 | 0) < ($348 | 0) ? $348 : $$5;
   $350 = $spec$select286 + $$2236 | 0;
   $$2263 = ($$1262 | 0) < ($350 | 0) ? $350 : $$1262;
   _pad_734($0, 32, $$2263, $350, $$6270);
   _out_728($0, $$2241, $$2236);
   _pad_734($0, 48, $$2263, $350, $$6270 ^ 65536);
   _pad_734($0, 48, $spec$select286, $348, 0);
   _out_728($0, $$1, $348);
   _pad_734($0, 32, $$2263, $350, $$6270 ^ 8192);
   $$0245$ph$be = $$2263;
  } while (0);
  $$0245$ph = $$0245$ph$be;
  $$0249$ph = $$1250;
  $$0271$ph = $$3274;
 }
 L123 : do if ((label | 0) == 92) if (!$0) if (!$$0271$ph) $$0 = 0; else {
  $$2244322 = 1;
  while (1) {
   $357 = HEAP32[$4 + ($$2244322 << 2) >> 2] | 0;
   if (!$357) break;
   _pop_arg_731($3 + ($$2244322 << 3) | 0, $357, $2, $6);
   $360 = $$2244322 + 1 | 0;
   if ($360 >>> 0 < 10) $$2244322 = $360; else {
    $$0 = 1;
    break L123;
   }
  }
  $$3319 = $$2244322;
  while (1) {
   if (HEAP32[$4 + ($$3319 << 2) >> 2] | 0) {
    $$0 = -1;
    break L123;
   }
   $$3319 = $$3319 + 1 | 0;
   if ($$3319 >>> 0 >= 10) {
    $$0 = 1;
    break;
   }
  }
 } else $$0 = $$1250; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i246 = 0, $$0$i$i$i250 = 0, $$0208 = 0, $$3 = 0, $100 = 0, $102 = 0, $103 = 0, $108 = 0, $109 = 0, $115 = 0, $121 = 0, $127 = 0, $128 = 0, $138 = 0, $139 = 0, $15 = 0, $18 = 0, $20 = 0, $28 = 0, $29 = 0, $3 = 0, $36 = 0, $37 = 0, $4 = 0, $44 = 0, $46 = 0, $48 = 0, $5 = 0, $50 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $66 = 0, $68 = 0, $7 = 0, $70 = 0, $72 = 0, $74 = 0, $76 = 0, $78 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $86 = 0, $88 = 0, $90 = 0, $92 = 0, $94 = 0, $96 = 0, $97 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $3 = sp + 64 | 0;
 $4 = sp + 48 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 24 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 L1 : do if (($1 - $0 | 0) > 3) if ((HEAP8[$0 >> 0] | 0) == 76) {
  $15 = $0 + 1 | 0;
  do switch (HEAP8[$15 >> 0] | 0) {
  case 84:
   {
    $$3 = $0;
    break L1;
    break;
   }
  case 119:
   {
    $18 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50823, __ZNSt3__211char_traitsIcE6lengthEPKc(50823) | 0);
    $20 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($18, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($20 | 0) == ($18 | 0) ? $0 : $20;
    break L1;
    break;
   }
  case 98:
   {
    if ((HEAP8[$0 + 3 >> 0] | 0) != 69) {
     $$3 = $0;
     break L1;
    }
    switch (HEAP8[$0 + 2 >> 0] | 0) {
    case 48:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc($3, 50831);
      $28 = $2 + 4 | 0;
      $29 = HEAP32[$28 >> 2] | 0;
      if ($29 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($29, $3);
       HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      $$3 = $0 + 4 | 0;
      break L1;
      break;
     }
    case 49:
     {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc($3, 50837);
      $36 = $2 + 4 | 0;
      $37 = HEAP32[$36 >> 2] | 0;
      if ($37 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($37, $3);
       HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      $$3 = $0 + 4 | 0;
      break L1;
      break;
     }
    default:
     {
      $$3 = $0;
      break L1;
     }
    }
    break;
   }
  case 99:
   {
    $44 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50842, __ZNSt3__211char_traitsIcE6lengthEPKc(50842) | 0);
    $46 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($44, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($46 | 0) == ($44 | 0) ? $0 : $46;
    break L1;
    break;
   }
  case 97:
   {
    $48 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50847, __ZNSt3__211char_traitsIcE6lengthEPKc(50847) | 0);
    $50 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($48, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($50 | 0) == ($48 | 0) ? $0 : $50;
    break L1;
    break;
   }
  case 104:
   {
    $52 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50859, __ZNSt3__211char_traitsIcE6lengthEPKc(50859) | 0);
    $54 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($52, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($54 | 0) == ($52 | 0) ? $0 : $54;
    break L1;
    break;
   }
  case 115:
   {
    $56 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50873, __ZNSt3__211char_traitsIcE6lengthEPKc(50873) | 0);
    $58 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($56, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($58 | 0) == ($56 | 0) ? $0 : $58;
    break L1;
    break;
   }
  case 116:
   {
    $60 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50879, __ZNSt3__211char_traitsIcE6lengthEPKc(50879) | 0);
    $62 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($60, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($62 | 0) == ($60 | 0) ? $0 : $62;
    break L1;
    break;
   }
  case 105:
   {
    $64 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 58334, __ZNSt3__211char_traitsIcE6lengthEPKc(58334) | 0);
    $66 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($64, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($66 | 0) == ($64 | 0) ? $0 : $66;
    break L1;
    break;
   }
  case 106:
   {
    $68 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50894, __ZNSt3__211char_traitsIcE6lengthEPKc(50894) | 0);
    $70 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($68, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($70 | 0) == ($68 | 0) ? $0 : $70;
    break L1;
    break;
   }
  case 108:
   {
    $72 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50896, __ZNSt3__211char_traitsIcE6lengthEPKc(50896) | 0);
    $74 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($72, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($74 | 0) == ($72 | 0) ? $0 : $74;
    break L1;
    break;
   }
  case 109:
   {
    $76 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50898, __ZNSt3__211char_traitsIcE6lengthEPKc(50898) | 0);
    $78 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($76, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($78 | 0) == ($76 | 0) ? $0 : $78;
    break L1;
    break;
   }
  case 120:
   {
    $80 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50901, __ZNSt3__211char_traitsIcE6lengthEPKc(50901) | 0);
    $82 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($80, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($82 | 0) == ($80 | 0) ? $0 : $82;
    break L1;
    break;
   }
  case 121:
   {
    $84 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50904, __ZNSt3__211char_traitsIcE6lengthEPKc(50904) | 0);
    $86 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($84, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($86 | 0) == ($84 | 0) ? $0 : $86;
    break L1;
    break;
   }
  case 110:
   {
    $88 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50908, __ZNSt3__211char_traitsIcE6lengthEPKc(50908) | 0);
    $90 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($88, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($90 | 0) == ($88 | 0) ? $0 : $90;
    break L1;
    break;
   }
  case 111:
   {
    $92 = $0 + 2 | 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50917, __ZNSt3__211char_traitsIcE6lengthEPKc(50917) | 0);
    $94 = __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($92, $1, $3, $2) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = ($94 | 0) == ($92 | 0) ? $0 : $94;
    break L1;
    break;
   }
  case 102:
   {
    $96 = $0 + 2 | 0;
    $97 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIfNS0_2DbEEEPKcS4_S4_RT0_($96, $1, $2) | 0;
    $$3 = ($97 | 0) == ($96 | 0) ? $0 : $97;
    break L1;
    break;
   }
  case 100:
   {
    $99 = $0 + 2 | 0;
    $100 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIdNS0_2DbEEEPKcS4_S4_RT0_($99, $1, $2) | 0;
    $$3 = ($100 | 0) == ($99 | 0) ? $0 : $100;
    break L1;
    break;
   }
  case 101:
   {
    $102 = $0 + 2 | 0;
    $103 = __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIeNS0_2DbEEEPKcS4_S4_RT0_($102, $1, $2) | 0;
    $$3 = ($103 | 0) == ($102 | 0) ? $0 : $103;
    break L1;
    break;
   }
  case 95:
   {
    if ((HEAP8[$0 + 2 >> 0] | 0) != 90) {
     $$3 = $0;
     break L1;
    }
    $108 = $0 + 3 | 0;
    $109 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($108, $1, $2) | 0;
    if (($109 | 0) == ($108 | 0) | ($109 | 0) == ($1 | 0)) {
     $$3 = $0;
     break L1;
    }
    $$3 = (HEAP8[$109 >> 0] | 0) == 69 ? $109 + 1 | 0 : $0;
    break L1;
    break;
   }
  default:
   {
    $115 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($15, $1, $2) | 0;
    if (($115 | 0) == ($15 | 0) | ($115 | 0) == ($1 | 0)) {
     $$3 = $0;
     break L1;
    }
    if ((HEAP8[$115 >> 0] | 0) == 69) {
     $$3 = $115 + 1 | 0;
     break L1;
    }
    $$0208 = $115;
    while (1) {
     if (($$0208 | 0) == ($1 | 0)) {
      $$3 = $0;
      break L1;
     }
     $121 = HEAP8[$$0208 >> 0] | 0;
     if ((($121 << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
     $$0208 = $$0208 + 1 | 0;
    }
    if (!(($$0208 | 0) != ($115 | 0) & $121 << 24 >> 24 == 69)) {
     $$3 = $0;
     break L1;
    }
    $127 = $2 + 4 | 0;
    $128 = HEAP32[$127 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($128 | 0)) {
     $$3 = $0;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, $128 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($7, 0, 49631) | 0;
    HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$7 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 49629) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i246 = 0;
    while (1) {
     if (($$0$i$i$i246 | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i246 << 2) >> 2] = 0;
     $$0$i$i$i246 = $$0$i$i$i246 + 1 | 0;
    }
    HEAP32[$8 >> 2] = 0;
    HEAP32[$8 + 4 >> 2] = 0;
    HEAP32[$8 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($8, $115, $$0208);
    $138 = HEAP8[$8 + 11 >> 0] | 0;
    $139 = $138 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($5, $139 ? HEAP32[$8 >> 2] | 0 : $8, $139 ? HEAP32[$8 + 4 >> 2] | 0 : $138 & 255) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i250 = 0;
    while (1) {
     if (($$0$i$i$i250 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i250 << 2) >> 2] = 0;
     $$0$i$i$i250 = $$0$i$i$i250 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$127 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    $$3 = $$0208 + 1 | 0;
    break L1;
   }
  } while (0);
 } else $$3 = $0; else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i188 = 0, $$0$i$i$i$i = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i187 = 0, $$0$i$i193 = 0, $$0$i$i198 = 0, $$0132 = 0, $$0141$off0$ph = 0, $$0168 = 0, $$11 = 0, $$1135 = 0, $$1169 = 0, $$1169$ph = 0, $$2136 = 0, $$3144$off0$ph = 0, $$3171 = 0, $$4158 = 0, $$5139 = 0, $$6140 = 0, $$6160 = 0, $$in = 0, $$in210 = 0, $$pre$phi248Z2D = 0, $$pre$phiZ2D = 0, $$pre242 = 0, $10 = 0, $104 = 0, $105 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $128 = 0, $13 = 0, $134 = 0, $142 = 0, $143 = 0, $151 = 0, $153 = 0, $154 = 0, $157 = 0, $162 = 0, $166 = 0, $167 = 0, $168 = 0, $171 = 0, $175 = 0, $177 = 0, $19 = 0, $198 = 0, $199 = 0, $21 = 0, $23 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $36 = 0, $4 = 0, $40 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $61 = 0, $7 = 0, $70 = 0, $73 = 0, $75 = 0, $8 = 0, $80 = 0, $81 = 0, $84 = 0, $85 = 0, $88 = 0, $92 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 48 | 0;
 $4 = sp + 40 | 0;
 $5 = sp + 32 | 0;
 $6 = sp + 24 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 if (($0 | 0) == ($1 | 0)) {
  $$6140 = $0;
  label = 90;
 } else {
  $10 = $2 + 56 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjEC2ERj($4, $10);
  HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
  $13 = $2 + 61 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb($5, $13);
  if ((HEAP32[$10 >> 2] | 0) >>> 0 > 1) HEAP8[$13 >> 0] = 1;
  L6 : do switch (HEAP8[$0 >> 0] | 0) {
  case 84:
  case 71:
   {
    $$5139 = __ZN10__cxxabiv112_GLOBAL__N_118parse_special_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    $$6160 = 1;
    break;
   }
  default:
   {
    $19 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
    $21 = HEAP32[$2 + 48 >> 2] | 0;
    $23 = HEAP32[$2 + 52 >> 2] | 0;
    L8 : do if (($19 | 0) == ($0 | 0)) $$2136 = $0; else if (($19 | 0) == ($1 | 0)) $$2136 = $1; else {
     switch (HEAP8[$19 >> 0] | 0) {
     case 46:
     case 69:
      {
       $$2136 = $19;
       break L8;
       break;
      }
     default:
      {}
     }
     __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb($6, $13);
     HEAP8[$13 >> 0] = 0;
     HEAP32[$7 >> 2] = 0;
     HEAP32[$7 + 4 >> 2] = 0;
     HEAP32[$7 + 8 >> 2] = 0;
     $$0$i$i198 = 0;
     while (1) {
      if (($$0$i$i198 | 0) == 3) break;
      HEAP32[$7 + ($$0$i$i198 << 2) >> 2] = 0;
      $$0$i$i198 = $$0$i$i198 + 1 | 0;
     }
     $30 = $2 + 4 | 0;
     $31 = HEAP32[$30 >> 2] | 0;
     L16 : do if ((HEAP32[$2 >> 2] | 0) == ($31 | 0)) {
      $$1135 = $0;
      $$4158 = 0;
     } else {
      $33 = $31 + -24 | 0;
      $35 = HEAP8[$33 + 11 >> 0] | 0;
      $36 = $35 << 24 >> 24 < 0;
      if ($36) $40 = HEAP32[$31 + -20 >> 2] | 0; else $40 = $35 & 255;
      if (!$40) {
       $$1135 = $0;
       $$4158 = 0;
      } else {
       if (!(HEAP8[$2 + 60 >> 0] | 0)) {
        if ($36) {
         $50 = HEAP32[$33 >> 2] | 0;
         $51 = HEAP32[$31 + -20 >> 2] | 0;
        } else {
         $50 = $33;
         $51 = $35 & 255;
        }
        if ((HEAP8[$50 + $51 + -1 >> 0] | 0) == 62) {
         if ($36) {
          $$in = HEAP32[$31 + -20 >> 2] | 0;
          $61 = HEAP32[$33 >> 2] | 0;
         } else {
          $$in = $35 & 255;
          $61 = $33;
         }
         if ((HEAP8[$61 + ($$in + -2) >> 0] | 0) == 45) {
          $$0168 = $19;
          $$pre$phiZ2D = $33;
         } else {
          if ($36) {
           $$in210 = HEAP32[$31 + -20 >> 2] | 0;
           $70 = HEAP32[$33 >> 2] | 0;
          } else {
           $$in210 = $35 & 255;
           $70 = $33;
          }
          if ((HEAP8[$70 + ($$in210 + -2) >> 0] | 0) == 62) {
           $$0168 = $19;
           $$pre$phiZ2D = $33;
          } else {
           $73 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($19, $1, $2) | 0;
           if (($73 | 0) == ($19 | 0)) {
            $$1135 = $0;
            $$4158 = 0;
            break;
           }
           $75 = HEAP32[$30 >> 2] | 0;
           $80 = $75;
           if ((($75 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
            $$1135 = $0;
            $$4158 = 0;
            break;
           }
           $81 = $80 + -24 | 0;
           HEAP32[$8 >> 2] = HEAP32[$81 >> 2];
           HEAP32[$8 + 4 >> 2] = HEAP32[$81 + 4 >> 2];
           HEAP32[$8 + 8 >> 2] = HEAP32[$81 + 8 >> 2];
           $$0$i$i193 = 0;
           while (1) {
            if (($$0$i$i193 | 0) == 3) break;
            HEAP32[$81 + ($$0$i$i193 << 2) >> 2] = 0;
            $$0$i$i193 = $$0$i$i193 + 1 | 0;
           }
           $84 = $80 + -12 | 0;
           $85 = $7 + 11 | 0;
           if ((HEAP8[$85 >> 0] | 0) < 0) {
            $88 = HEAP32[$7 >> 2] | 0;
            HEAP8[$3 >> 0] = 0;
            __ZNSt3__211char_traitsIcE6assignERcRKc($88, $3);
            HEAP32[$7 + 4 >> 2] = 0;
           } else {
            HEAP8[$3 >> 0] = 0;
            __ZNSt3__211char_traitsIcE6assignERcRKc($7, $3);
            HEAP8[$85 >> 0] = 0;
           }
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($7);
           HEAP32[$7 >> 2] = HEAP32[$84 >> 2];
           HEAP32[$7 + 4 >> 2] = HEAP32[$84 + 4 >> 2];
           HEAP32[$7 + 8 >> 2] = HEAP32[$84 + 8 >> 2];
           $$0$i$i$i$i = 0;
           while (1) {
            if (($$0$i$i$i$i | 0) == 3) break;
            HEAP32[$84 + ($$0$i$i$i$i << 2) >> 2] = 0;
            $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
           }
           $92 = HEAP8[$85 >> 0] | 0;
           if (!(($92 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $92 & 255) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($8, 32);
           $99 = HEAP32[$30 >> 2] | 0;
           $$0$i$i$idx$i187 = 0;
           while (1) {
            if (($$0$i$i$idx$i187 | 0) == -1) break;
            $$0$i$i$add$i188 = $$0$i$i$idx$i187 + -1 | 0;
            __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($99 + ($$0$i$i$add$i188 * 24 | 0) | 0);
            $$0$i$i$idx$i187 = $$0$i$i$add$i188;
           }
           HEAP32[$30 >> 2] = $99 + -24;
           $104 = HEAP8[$8 + 11 >> 0] | 0;
           $105 = $104 << 24 >> 24 < 0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm($99 + -48 | 0, 0, $105 ? HEAP32[$8 >> 2] | 0 : $8, $105 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0;
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
           $$0168 = $73;
           $$pre$phiZ2D = (HEAP32[$30 >> 2] | 0) + -24 | 0;
          }
         }
        } else {
         $$0168 = $19;
         $$pre$phiZ2D = $33;
        }
       } else {
        $$0168 = $19;
        $$pre$phiZ2D = $33;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($$pre$phiZ2D, 40);
       if (($$0168 | 0) == ($1 | 0)) label = 50; else if ((HEAP8[$$0168 >> 0] | 0) == 118) {
        $$3171 = $$0168 + 1 | 0;
        $175 = HEAP32[$2 >> 2] | 0;
        $177 = HEAP32[$30 >> 2] | 0;
       } else label = 50;
       do if ((label | 0) == 50) {
        $116 = $3 + 11 | 0;
        $117 = $3 + 4 | 0;
        $118 = $8 + 11 | 0;
        $119 = $8 + 4 | 0;
        $$0141$off0$ph = 1;
        $$1169$ph = $$0168;
        L67 : while (1) {
         $$1169 = $$1169$ph;
         while (1) {
          $123 = ((HEAP32[$30 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
          $124 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($$1169, $1, $2) | 0;
          $125 = HEAP32[$30 >> 2] | 0;
          $126 = HEAP32[$2 >> 2] | 0;
          $128 = ($125 - $126 | 0) / 24 | 0;
          if (($124 | 0) == ($$1169 | 0)) {
           label = 74;
           break L67;
          }
          if ($128 >>> 0 > $123 >>> 0) break; else $$1169 = $124;
         }
         HEAP32[$3 >> 2] = 0;
         HEAP32[$3 + 4 >> 2] = 0;
         HEAP32[$3 + 8 >> 2] = 0;
         $$0$i$i = 0;
         while (1) {
          if (($$0$i$i | 0) == 3) break;
          HEAP32[$3 + ($$0$i$i << 2) >> 2] = 0;
          $$0$i$i = $$0$i$i + 1 | 0;
         }
         $$0132 = $123;
         while (1) {
          if ($$0132 >>> 0 >= $128 >>> 0) break;
          $134 = HEAP8[$116 >> 0] | 0;
          if (($134 << 24 >> 24 < 0 ? HEAP32[$117 >> 2] | 0 : $134 & 255) | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 49853) | 0;
          __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($8, (HEAP32[$2 >> 2] | 0) + ($$0132 * 24 | 0) | 0);
          $142 = HEAP8[$118 >> 0] | 0;
          $143 = $142 << 24 >> 24 < 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($3, $143 ? HEAP32[$8 >> 2] | 0 : $8, $143 ? HEAP32[$119 >> 2] | 0 : $142 & 255) | 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
          $$0132 = $$0132 + 1 | 0;
         }
         $$0 = $123;
         while (1) {
          if ($$0 >>> 0 >= $128 >>> 0) break;
          $157 = HEAP32[$30 >> 2] | 0;
          $$0$i$i$idx$i = 0;
          while (1) {
           if (($$0$i$i$idx$i | 0) == -1) break;
           $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
           __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($157 + ($$0$i$i$add$i * 24 | 0) | 0);
           $$0$i$i$idx$i = $$0$i$i$add$i;
          }
          HEAP32[$30 >> 2] = $157 + -24;
          $$0 = $$0 + 1 | 0;
         }
         $151 = HEAP8[$116 >> 0] | 0;
         $153 = HEAP32[$117 >> 2] | 0;
         $154 = $151 & 255;
         if (!(($151 << 24 >> 24 < 0 ? $153 : $154) | 0)) $$3144$off0$ph = $$0141$off0$ph; else {
          $162 = HEAP32[$30 >> 2] | 0;
          if ((HEAP32[$2 >> 2] | 0) == ($162 | 0)) {
           label = 86;
           break;
          }
          if ($$0141$off0$ph) {
           $$pre$phi248Z2D = $154;
           $166 = $162;
           $167 = $151;
           $171 = $153;
          } else {
           __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($162 + -24 | 0, 49853) | 0;
           $$pre242 = HEAP8[$116 >> 0] | 0;
           $$pre$phi248Z2D = $$pre242 & 255;
           $166 = HEAP32[$30 >> 2] | 0;
           $167 = $$pre242;
           $171 = HEAP32[$117 >> 2] | 0;
          }
          $168 = $167 << 24 >> 24 < 0;
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($166 + -24 | 0, $168 ? HEAP32[$3 >> 2] | 0 : $3, $168 ? $171 : $$pre$phi248Z2D) | 0;
          $$3144$off0$ph = 0;
         }
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
         $$0141$off0$ph = $$3144$off0$ph;
         $$1169$ph = $124;
        }
        if ((label | 0) == 74) {
         $$3171 = $$1169;
         $175 = $126;
         $177 = $125;
         break;
        } else if ((label | 0) == 86) {
         __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
         $$1135 = $0;
         $$4158 = 0;
         break L16;
        }
       } while (0);
       if (($175 | 0) == ($177 | 0)) {
        $$1135 = $0;
        $$4158 = 0;
       } else {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($177 + -24 | 0, 41);
        if ($21 & 1 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$30 >> 2] | 0) + -24 | 0, 49576) | 0;
        if ($21 & 2 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$30 >> 2] | 0) + -24 | 0, 49583) | 0;
        if ($21 & 4 | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$30 >> 2] | 0) + -24 | 0, 49593) | 0;
        switch ($23 | 0) {
        case 1:
         {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$30 >> 2] | 0) + -24 | 0, 51057) | 0;
          break;
         }
        case 2:
         {
          __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$30 >> 2] | 0) + -24 | 0, 51060) | 0;
          break;
         }
        default:
         {}
        }
        $198 = HEAP8[$7 + 11 >> 0] | 0;
        $199 = $198 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$30 >> 2] | 0) + -24 | 0, $199 ? HEAP32[$7 >> 2] | 0 : $7, $199 ? HEAP32[$7 + 4 >> 2] | 0 : $198 & 255) | 0;
        $$1135 = $$3171;
        $$4158 = 1;
       }
      }
     } while (0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
     __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev($6);
     if ($$4158) $$2136 = $$1135; else {
      $$5139 = $$1135;
      $$6160 = 0;
      break L6;
     }
    } while (0);
    $$5139 = $$2136;
    $$6160 = 1;
   }
  } while (0);
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev($5);
  __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjED2Ev($4);
  if ($$6160) {
   $$6140 = $$5139;
   label = 90;
  } else $$11 = $0;
 }
 if ((label | 0) == 90) $$11 = $$6140;
 STACKTOP = sp;
 return $$11 | 0;
}

function __ZN6vision20SamplePyramidFREAK84EPfPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = +$9;
 $10 = +$10;
 $11 = +$11;
 $12 = +$12;
 $13 = +$13;
 $14 = +$14;
 $15 = +$15;
 $16 = +$16;
 var $$0 = 0.0, $111 = 0.0, $117 = 0.0, $124 = 0.0, $131 = 0.0, $138 = 0.0, $145 = 0.0, $152 = 0.0, $159 = 0.0, $166 = 0.0, $17 = 0, $173 = 0.0, $18 = 0, $180 = 0.0, $187 = 0.0, $19 = 0, $194 = 0.0, $20 = 0, $201 = 0.0, $208 = 0.0, $21 = 0, $215 = 0.0, $22 = 0, $222 = 0.0, $229 = 0.0, $23 = 0, $236 = 0.0, $24 = 0, $243 = 0.0, $25 = 0, $250 = 0.0, $257 = 0.0, $264 = 0.0, $271 = 0.0, $278 = 0.0, $28 = 0.0, $285 = 0.0, $292 = 0.0, $299 = 0.0, $306 = 0.0, $313 = 0.0, $320 = 0.0, $327 = 0.0, $334 = 0.0, $341 = 0.0, $348 = 0.0, $355 = 0.0, $359 = 0.0, $36 = 0.0, $38 = 0.0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $49 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $61 = 0, $63 = 0, $65 = 0, $67 = 0, $69 = 0, $71 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $81 = 0, $83 = 0, $85 = 0, $87 = 0, $89 = 0, $91 = 0, $93 = 0, $95 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 $17 = sp + 288 | 0;
 $18 = sp + 240 | 0;
 $19 = sp + 192 | 0;
 $20 = sp + 144 | 0;
 $21 = sp + 96 | 0;
 $22 = sp + 48 | 0;
 $23 = sp;
 $24 = sp + 328 | 0;
 $25 = sp + 324 | 0;
 $28 = +HEAPF32[$2 + 12 >> 2] * $16;
 $$0 = $28 < 1.0 ? 1.0 : $28;
 __ZN6vision10SimilarityIfEEvPT_S1_S1_S1_S1_($17, +HEAPF32[$2 >> 2], +HEAPF32[$2 + 4 >> 2], +HEAPF32[$2 + 8 >> 2], $$0);
 $36 = +HEAPF32[$17 + 8 >> 2];
 $38 = +HEAPF32[$17 + 20 >> 2];
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($18, $17, $3);
 $39 = $18 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($39, $17, $3 + 8 | 0);
 $41 = $18 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($41, $17, $3 + 16 | 0);
 $43 = $18 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($43, $17, $3 + 24 | 0);
 $45 = $18 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($45, $17, $3 + 32 | 0);
 $47 = $18 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($47, $17, $3 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($19, $17, $4);
 $49 = $19 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($49, $17, $4 + 8 | 0);
 $51 = $19 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($51, $17, $4 + 16 | 0);
 $53 = $19 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($53, $17, $4 + 24 | 0);
 $55 = $19 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($55, $17, $4 + 32 | 0);
 $57 = $19 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($57, $17, $4 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($20, $17, $5);
 $59 = $20 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($59, $17, $5 + 8 | 0);
 $61 = $20 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($61, $17, $5 + 16 | 0);
 $63 = $20 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($63, $17, $5 + 24 | 0);
 $65 = $20 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($65, $17, $5 + 32 | 0);
 $67 = $20 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($67, $17, $5 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($21, $17, $6);
 $69 = $21 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($69, $17, $6 + 8 | 0);
 $71 = $21 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($71, $17, $6 + 16 | 0);
 $73 = $21 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($73, $17, $6 + 24 | 0);
 $75 = $21 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($75, $17, $6 + 32 | 0);
 $77 = $21 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($77, $17, $6 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($22, $17, $7);
 $79 = $22 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($79, $17, $7 + 8 | 0);
 $81 = $22 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($81, $17, $7 + 16 | 0);
 $83 = $22 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($83, $17, $7 + 24 | 0);
 $85 = $22 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($85, $17, $7 + 32 | 0);
 $87 = $22 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($87, $17, $7 + 40 | 0);
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($23, $17, $8);
 $89 = $23 + 8 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($89, $17, $8 + 8 | 0);
 $91 = $23 + 16 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($91, $17, $8 + 16 | 0);
 $93 = $23 + 24 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($93, $17, $8 + 24 | 0);
 $95 = $23 + 32 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($95, $17, $8 + 32 | 0);
 $97 = $23 + 40 | 0;
 __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($97, $17, $8 + 40 | 0);
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $15);
 $111 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$23 >> 2], +HEAPF32[$23 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 >> 2] = $111;
 $117 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$89 >> 2], +HEAPF32[$23 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 4 >> 2] = $117;
 $124 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$91 >> 2], +HEAPF32[$23 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 8 >> 2] = $124;
 $131 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$93 >> 2], +HEAPF32[$23 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 12 >> 2] = $131;
 $138 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$95 >> 2], +HEAPF32[$23 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 16 >> 2] = $138;
 $145 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$97 >> 2], +HEAPF32[$23 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 20 >> 2] = $145;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $14);
 $152 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$22 >> 2], +HEAPF32[$22 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 24 >> 2] = $152;
 $159 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$79 >> 2], +HEAPF32[$22 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 28 >> 2] = $159;
 $166 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$81 >> 2], +HEAPF32[$22 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 32 >> 2] = $166;
 $173 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$83 >> 2], +HEAPF32[$22 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 36 >> 2] = $173;
 $180 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$85 >> 2], +HEAPF32[$22 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 40 >> 2] = $180;
 $187 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$87 >> 2], +HEAPF32[$22 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 44 >> 2] = $187;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $13);
 $194 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$21 >> 2], +HEAPF32[$21 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 48 >> 2] = $194;
 $201 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$69 >> 2], +HEAPF32[$21 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 52 >> 2] = $201;
 $208 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$71 >> 2], +HEAPF32[$21 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 56 >> 2] = $208;
 $215 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$73 >> 2], +HEAPF32[$21 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 60 >> 2] = $215;
 $222 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$75 >> 2], +HEAPF32[$21 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 64 >> 2] = $222;
 $229 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$77 >> 2], +HEAPF32[$21 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 68 >> 2] = $229;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $12);
 $236 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$20 >> 2], +HEAPF32[$20 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 72 >> 2] = $236;
 $243 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$59 >> 2], +HEAPF32[$20 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 76 >> 2] = $243;
 $250 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$61 >> 2], +HEAPF32[$20 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 80 >> 2] = $250;
 $257 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$63 >> 2], +HEAPF32[$20 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 84 >> 2] = $257;
 $264 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$65 >> 2], +HEAPF32[$20 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 88 >> 2] = $264;
 $271 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$67 >> 2], +HEAPF32[$20 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 92 >> 2] = $271;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $11);
 $278 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$19 >> 2], +HEAPF32[$19 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 96 >> 2] = $278;
 $285 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$49 >> 2], +HEAPF32[$19 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 100 >> 2] = $285;
 $292 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$51 >> 2], +HEAPF32[$19 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 104 >> 2] = $292;
 $299 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$53 >> 2], +HEAPF32[$19 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 108 >> 2] = $299;
 $306 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$55 >> 2], +HEAPF32[$19 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 112 >> 2] = $306;
 $313 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$57 >> 2], +HEAPF32[$19 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 116 >> 2] = $313;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $10);
 $320 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$18 >> 2], +HEAPF32[$18 + 4 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 120 >> 2] = $320;
 $327 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$39 >> 2], +HEAPF32[$18 + 12 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 124 >> 2] = $327;
 $334 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$41 >> 2], +HEAPF32[$18 + 20 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 128 >> 2] = $334;
 $341 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$43 >> 2], +HEAPF32[$18 + 28 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 132 >> 2] = $341;
 $348 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$45 >> 2], +HEAPF32[$18 + 36 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 136 >> 2] = $348;
 $355 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, +HEAPF32[$47 >> 2], +HEAPF32[$18 + 44 >> 2], HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 140 >> 2] = $355;
 __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($1, $24, $25, $$0 * $9);
 $359 = +__ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($1, $36, $38, HEAP32[$24 >> 2] | 0, HEAP32[$25 >> 2] | 0);
 HEAPF32[$0 + 144 >> 2] = $359;
 STACKTOP = sp;
 return 1;
}

function _arGetTransMatMultiSquare2($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0389 = 0, $$0394 = 0, $$0404 = 0.0, $$0405 = 0, $$0407 = 0, $$0410 = 0, $$0413 = 0.0, $$1 = 0, $$10 = 0, $$1390 = 0, $$1395 = 0, $$1406 = 0, $$1408 = 0, $$1411 = 0, $$1414 = 0.0, $$2 = 0, $$2391 = 0, $$2396 = 0, $$2409 = 0, $$2412 = 0, $$2415 = 0.0, $$3 = 0, $$3392 = 0, $$3397 = 0, $$3416 = 0.0, $$4 = 0, $$4393 = 0, $$4398 = 0, $$4417 = 0.0, $$5 = 0, $$5399 = 0, $$5418 = 0.0, $$6 = 0, $$6400 = 0, $$6419 = 0.0, $$7 = 0, $$7401 = 0, $$8 = 0, $$8402 = 0, $$9 = 0, $$9403 = 0, $$pre441 = 0, $10 = 0, $109 = 0, $111 = 0, $114 = 0, $116 = 0, $118 = 0, $12 = 0, $120 = 0, $123 = 0, $125 = 0, $128 = 0, $135 = 0, $145 = 0, $155 = 0, $16 = 0, $166 = 0, $214 = 0, $217 = 0, $218 = 0, $219 = 0.0, $222 = 0.0, $225 = 0.0, $228 = 0.0, $23 = 0.0, $232 = 0.0, $233 = 0, $234 = 0.0, $235 = 0, $243 = 0.0, $244 = 0.0, $253 = 0.0, $254 = 0.0, $263 = 0.0, $264 = 0.0, $273 = 0.0, $274 = 0.0, $287 = 0, $291 = 0, $293 = 0, $36 = 0, $39 = 0, $42 = 0, $44 = 0, $47 = 0, $5 = 0, $51 = 0, $6 = 0, $63 = 0.0, $7 = 0, $78 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $9 = 0, $90 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 $vararg_buffer1 = sp + 200 | 0;
 $vararg_buffer = sp + 192 | 0;
 $5 = sp + 96 | 0;
 $6 = sp;
 $7 = $3 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $3 + 112 | 0;
 $10 = $3 + 120 | 0;
 $$0394 = 0;
 while (1) {
  if (($$0394 | 0) >= ($8 | 0)) break;
  $12 = HEAP32[$3 >> 2] | 0;
  $16 = $12 + ($$0394 * 320 | 0) | 0;
  if (!(HEAP32[$12 + ($$0394 * 320 | 0) + 4 >> 2] | 0)) {
   $$0 = -1;
   $$0389 = 0;
   while (1) {
    if (($$0389 | 0) >= ($2 | 0)) break;
    if ((HEAP32[$1 + ($$0389 << 8) + 8 >> 2] | 0) == (HEAP32[$16 >> 2] | 0)) {
     $23 = +HEAPF64[$1 + ($$0389 << 8) + 40 >> 3];
     if ($23 < +HEAPF64[$9 >> 3]) $$1 = $$0; else if (($$0 | 0) == -1) $$1 = $$0389; else if (+HEAPF64[$1 + ($$0 << 8) + 40 >> 3] < $23) $$1 = $$0389; else $$1 = $$0;
    } else $$1 = $$0;
    $$0 = $$1;
    $$0389 = $$0389 + 1 | 0;
   }
   HEAP32[$12 + ($$0394 * 320 | 0) + 304 >> 2] = $$0;
   if (($$0 | 0) > -1) HEAP32[$1 + ($$0 << 8) + 16 >> 2] = HEAP32[$1 + ($$0 << 8) + 20 >> 2];
  } else {
   $36 = $12 + ($$0394 * 320 | 0) + 312 | 0;
   $$1390 = 0;
   $$2 = -1;
   while (1) {
    if (($$1390 | 0) >= ($2 | 0)) break;
    $39 = HEAP32[$1 + ($$1390 << 8) + 12 >> 2] | 0;
    if (!$39) {
     $42 = $1 + ($$1390 << 8) + 248 | 0;
     $44 = HEAP32[$42 >> 2] | 0;
     $47 = HEAP32[$42 + 4 >> 2] | 0;
     if (($44 | 0) == 0 & ($47 | 0) == 0) label = 19; else {
      $51 = $36;
      if (($44 | 0) == (HEAP32[$51 >> 2] | 0) ? ($47 | 0) == (HEAP32[$51 + 4 >> 2] | 0) : 0) label = 20; else $$3 = $$2;
     }
    } else label = 19;
    if ((label | 0) == 19) {
     label = 0;
     if (($39 | 0) == (HEAP32[$16 >> 2] | 0)) label = 20; else $$3 = $$2;
    }
    if ((label | 0) == 20) {
     label = 0;
     $63 = +HEAPF64[$1 + ($$1390 << 8) + 48 >> 3];
     if ($63 < +HEAPF64[$10 >> 3]) $$3 = $$2; else if (($$2 | 0) == -1) $$3 = $$1390; else if (+HEAPF64[$1 + ($$2 << 8) + 48 >> 3] < $63) $$3 = $$1390; else $$3 = $$2;
    }
    $$1390 = $$1390 + 1 | 0;
    $$2 = $$3;
   }
   HEAP32[$12 + ($$0394 * 320 | 0) + 304 >> 2] = $$2;
   if (($$2 | 0) > -1) HEAP32[$1 + ($$2 << 8) + 16 >> 2] = HEAP32[$1 + ($$2 << 8) + 24 >> 2];
  }
  $$0394 = $$0394 + 1 | 0;
 }
 $$0405 = 0;
 $$0407 = 0;
 $$0410 = 0;
 $$1395 = 0;
 $78 = $8;
 while (1) {
  if (($$1395 | 0) >= ($78 | 0)) break;
  $79 = HEAP32[$3 >> 2] | 0;
  $81 = HEAP32[$79 + ($$1395 * 320 | 0) + 304 >> 2] | 0;
  do if (($81 | 0) < 0) {
   $$1406 = $$0405;
   $$2409 = $$0407;
   $$2412 = $$0410;
  } else {
   $83 = $1 + ($81 << 8) | 0;
   if (+_arGetTransMatSquare($0, $83, +HEAPF64[$79 + ($$1395 * 320 | 0) + 8 >> 3], $6) > 4.0) {
    HEAP32[(HEAP32[$3 >> 2] | 0) + ($$1395 * 320 | 0) + 304 >> 2] = -1;
    $90 = $1 + ($81 << 8) + 236 | 0;
    if (HEAP32[$90 >> 2] | 0) {
     $$1406 = $$0405;
     $$2409 = $$0407;
     $$2412 = $$0410;
     break;
    }
    HEAP32[$90 >> 2] = 7;
    $$1406 = $$0405;
    $$2409 = $$0407;
    $$2412 = $$0410;
    break;
   }
   $$pre441 = HEAP32[$83 >> 2] | 0;
   L45 : do if (($$0405 | 0) == 0 | ($$0407 | 0) < ($$pre441 | 0)) {
    $$2391 = 0;
    while (1) {
     if (($$2391 | 0) == 3) {
      $$1408 = $$pre441;
      $$1411 = $$1395;
      break L45;
     }
     $$4 = 0;
     while (1) {
      if (($$4 | 0) == 4) break;
      HEAPF64[$5 + ($$2391 << 5) + ($$4 << 3) >> 3] = +HEAPF64[$6 + ($$2391 << 5) + ($$4 << 3) >> 3];
      $$4 = $$4 + 1 | 0;
     }
     $$2391 = $$2391 + 1 | 0;
    }
   } else {
    $$1408 = $$0407;
    $$1411 = $$0410;
   } while (0);
   $$1406 = $$0405 + 1 | 0;
   $$2409 = $$1408;
   $$2412 = $$1411;
  } while (0);
  $$0405 = $$1406;
  $$0407 = $$2409;
  $$0410 = $$2412;
  $$1395 = $$1395 + 1 | 0;
  $78 = HEAP32[$7 >> 2] | 0;
 }
 L57 : do if (!$$0405) label = 45; else if (($$0405 | 0) < (HEAP32[$3 + 128 >> 2] | 0)) label = 45; else {
  _arUtilMatMul($5, (HEAP32[$3 >> 2] | 0) + ($$0410 * 320 | 0) + 112 | 0, $6) | 0;
  $109 = $$0405 << 2;
  $111 = _malloc($$0405 << 6) | 0;
  if (!$111) {
   _arLog(0, 3, 20454, $vararg_buffer);
   _exit(1);
  }
  $114 = _malloc($$0405 * 96 | 0) | 0;
  if (!$114) {
   _arLog(0, 3, 20454, $vararg_buffer1);
   _exit(1);
  }
  $116 = HEAP32[$7 >> 2] | 0;
  $$2396 = 0;
  $$3392 = 0;
  while (1) {
   if (($$2396 | 0) >= ($116 | 0)) break;
   $118 = HEAP32[$3 >> 2] | 0;
   $120 = HEAP32[$118 + ($$2396 * 320 | 0) + 304 >> 2] | 0;
   if (($120 | 0) < 0) $$4393 = $$3392; else {
    $123 = HEAP32[$1 + ($120 << 8) + 16 >> 2] | 0;
    $125 = (4 - $123 | 0) % 4 | 0;
    $128 = $$3392 << 3;
    HEAPF64[$111 + ($128 << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($125 << 4) >> 3];
    HEAPF64[$111 + (($128 | 1) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($125 << 4) + 8 >> 3];
    $135 = (5 - $123 | 0) % 4 | 0;
    HEAPF64[$111 + (($128 | 2) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($135 << 4) >> 3];
    HEAPF64[$111 + (($128 | 3) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($135 << 4) + 8 >> 3];
    $145 = (6 - $123 | 0) % 4 | 0;
    HEAPF64[$111 + (($128 | 4) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($145 << 4) >> 3];
    HEAPF64[$111 + (($128 | 5) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($145 << 4) + 8 >> 3];
    $155 = (7 - $123 | 0) % 4 | 0;
    HEAPF64[$111 + (($128 | 6) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($155 << 4) >> 3];
    HEAPF64[$111 + (($128 | 7) << 3) >> 3] = +HEAPF64[$1 + ($120 << 8) + 168 + ($155 << 4) + 8 >> 3];
    $166 = $$3392 * 12 | 0;
    HEAPF64[$114 + ($166 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 208 >> 3];
    HEAPF64[$114 + (($166 | 1) << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 216 >> 3];
    HEAPF64[$114 + (($166 | 2) << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 224 >> 3];
    HEAPF64[$114 + (($166 | 3) << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 232 >> 3];
    HEAPF64[$114 + ($166 + 4 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 240 >> 3];
    HEAPF64[$114 + ($166 + 5 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 248 >> 3];
    HEAPF64[$114 + ($166 + 6 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 256 >> 3];
    HEAPF64[$114 + ($166 + 7 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 264 >> 3];
    HEAPF64[$114 + ($166 + 8 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 272 >> 3];
    HEAPF64[$114 + ($166 + 9 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 280 >> 3];
    HEAPF64[$114 + ($166 + 10 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 288 >> 3];
    HEAPF64[$114 + ($166 + 11 << 3) >> 3] = +HEAPF64[$118 + ($$2396 * 320 | 0) + 296 >> 3];
    $$4393 = $$3392 + 1 | 0;
   }
   $$2396 = $$2396 + 1 | 0;
   $$3392 = $$4393;
  }
  $214 = $3 + 104 | 0;
  $217 = ($4 | 0) != 0;
  if (!(HEAP32[$214 >> 2] | 0)) {
   $218 = $3 + 8 | 0;
   $219 = +_arGetTransMat($0, $6, $111, $114, $109, $218);
   if ($217 & $219 >= 20.0) {
    _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .8) | 0;
    $222 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $218);
    if (!($222 >= 20.0)) $$0413 = $222; else {
     _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .6) | 0;
     $225 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $218);
     if (!($225 >= 20.0)) $$0413 = $225; else {
      _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .4) | 0;
      $228 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $218);
      if (!($228 >= 20.0)) $$0413 = $228; else {
       _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, 0.0) | 0;
       $$0413 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $218);
      }
     }
    }
   } else $$0413 = $219;
   _free($114);
   _free($111);
   $$6419 = $$0413;
  } else {
   $232 = +_arGetTransMat($0, $6, $111, $114, $109, $5);
   $233 = $3 + 8 | 0;
   $234 = +_arGetTransMat($0, $233, $111, $114, $109, $233);
   $235 = $232 < $234;
   L82 : do if ($217) {
    L84 : do if ($235) {
     $$5 = 0;
     while (1) {
      if (($$5 | 0) == 3) {
       $$1414 = $232;
       break L84;
      }
      $$3397 = 0;
      while (1) {
       if (($$3397 | 0) == 4) break;
       HEAPF64[$3 + 8 + ($$5 << 5) + ($$3397 << 3) >> 3] = +HEAPF64[$5 + ($$5 << 5) + ($$3397 << 3) >> 3];
       $$3397 = $$3397 + 1 | 0;
      }
      $$5 = $$5 + 1 | 0;
     }
    } else $$1414 = $234; while (0);
    if (!($$1414 >= 20.0)) $$5418 = $$1414; else {
     _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .8) | 0;
     $243 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $5);
     $244 = +_arGetTransMatRobust($0, $233, $111, $114, $109, $233);
     L95 : do if ($243 < $244) {
      $$6 = 0;
      while (1) {
       if (($$6 | 0) == 3) {
        $$2415 = $243;
        break L95;
       }
       $$4398 = 0;
       while (1) {
        if (($$4398 | 0) == 4) break;
        HEAPF64[$3 + 8 + ($$6 << 5) + ($$4398 << 3) >> 3] = +HEAPF64[$5 + ($$6 << 5) + ($$4398 << 3) >> 3];
        $$4398 = $$4398 + 1 | 0;
       }
       $$6 = $$6 + 1 | 0;
      }
     } else $$2415 = $244; while (0);
     if (!($$2415 >= 20.0)) $$5418 = $$2415; else {
      _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .6) | 0;
      $253 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $5);
      $254 = +_arGetTransMatRobust($0, $233, $111, $114, $109, $233);
      L106 : do if ($253 < $254) {
       $$7 = 0;
       while (1) {
        if (($$7 | 0) == 3) {
         $$3416 = $253;
         break L106;
        }
        $$5399 = 0;
        while (1) {
         if (($$5399 | 0) == 4) break;
         HEAPF64[$3 + 8 + ($$7 << 5) + ($$5399 << 3) >> 3] = +HEAPF64[$5 + ($$7 << 5) + ($$5399 << 3) >> 3];
         $$5399 = $$5399 + 1 | 0;
        }
        $$7 = $$7 + 1 | 0;
       }
      } else $$3416 = $254; while (0);
      if (!($$3416 >= 20.0)) $$5418 = $$3416; else {
       _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, .4) | 0;
       $263 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $5);
       $264 = +_arGetTransMatRobust($0, $233, $111, $114, $109, $233);
       L117 : do if ($263 < $264) {
        $$8 = 0;
        while (1) {
         if (($$8 | 0) == 3) {
          $$4417 = $263;
          break L117;
         }
         $$6400 = 0;
         while (1) {
          if (($$6400 | 0) == 4) break;
          HEAPF64[$3 + 8 + ($$8 << 5) + ($$6400 << 3) >> 3] = +HEAPF64[$5 + ($$8 << 5) + ($$6400 << 3) >> 3];
          $$6400 = $$6400 + 1 | 0;
         }
         $$8 = $$8 + 1 | 0;
        }
       } else $$4417 = $264; while (0);
       if (!($$4417 >= 20.0)) $$5418 = $$4417; else {
        _icpSetInlierProbability(HEAP32[$0 >> 2] | 0, 0.0) | 0;
        $273 = +_arGetTransMatRobust($0, $6, $111, $114, $109, $5);
        $274 = +_arGetTransMatRobust($0, $233, $111, $114, $109, $233);
        if ($273 < $274) {
         $$9 = 0;
         while (1) {
          if (($$9 | 0) == 3) {
           $$5418 = $273;
           break L82;
          }
          $$7401 = 0;
          while (1) {
           if (($$7401 | 0) == 4) break;
           HEAPF64[$3 + 8 + ($$9 << 5) + ($$7401 << 3) >> 3] = +HEAPF64[$5 + ($$9 << 5) + ($$7401 << 3) >> 3];
           $$7401 = $$7401 + 1 | 0;
          }
          $$9 = $$9 + 1 | 0;
         }
        } else $$5418 = $274;
       }
      }
     }
    }
   } else if ($235) {
    $$10 = 0;
    while (1) {
     if (($$10 | 0) == 3) {
      $$5418 = $232;
      break L82;
     }
     $$8402 = 0;
     while (1) {
      if (($$8402 | 0) == 4) break;
      HEAPF64[$3 + 8 + ($$10 << 5) + ($$8402 << 3) >> 3] = +HEAPF64[$5 + ($$10 << 5) + ($$8402 << 3) >> 3];
      $$8402 = $$8402 + 1 | 0;
     }
     $$10 = $$10 + 1 | 0;
    }
   } else $$5418 = $234; while (0);
   _free($114);
   _free($111);
   $$6419 = $$5418;
  }
  if ($$6419 < 20.0) {
   HEAP32[$214 >> 2] = 1;
   $$0404 = $$6419;
   break;
  }
  HEAP32[$214 >> 2] = 0;
  $287 = HEAP32[$7 >> 2] | 0;
  $$9403 = 0;
  while (1) {
   if (($$9403 | 0) >= ($287 | 0)) {
    $$0404 = $$6419;
    break L57;
   }
   $291 = HEAP32[(HEAP32[$3 >> 2] | 0) + ($$9403 * 320 | 0) + 304 >> 2] | 0;
   if (($291 | 0) >= 0) {
    $293 = $1 + ($291 << 8) + 236 | 0;
    if (!(HEAP32[$293 >> 2] | 0)) HEAP32[$293 >> 2] = 8;
   }
   $$9403 = $$9403 + 1 | 0;
  }
 } while (0);
 if ((label | 0) == 45) {
  HEAP32[$3 + 104 >> 2] = 0;
  $$0404 = -1.0;
 }
 STACKTOP = sp;
 return +$$0404;
}

function __ZN6vision36ComputeSubpixelHessianFineOctavePairEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $10 = 0, $104 = 0, $108 = 0, $11 = 0, $110 = 0, $118 = 0, $12 = 0, $123 = 0, $127 = 0, $129 = 0, $13 = 0, $131 = 0, $133 = 0, $135 = 0, $138 = 0.0, $14 = 0, $146 = 0, $151 = 0, $155 = 0, $164 = 0, $169 = 0, $173 = 0, $183 = 0, $188 = 0, $192 = 0, $194 = 0.0, $203 = 0, $208 = 0, $212 = 0, $215 = 0.0, $216 = 0.0, $222 = 0.0, $224 = 0.0, $229 = 0.0, $231 = 0.0, $238 = 0.0, $239 = 0.0, $24 = 0, $244 = 0.0, $245 = 0.0, $252 = 0.0, $254 = 0, $29 = 0, $33 = 0, $34 = 0, $36 = 0, $44 = 0, $49 = 0, $53 = 0, $54 = 0, $62 = 0, $67 = 0, $7 = 0, $71 = 0, $73 = 0, $8 = 0, $81 = 0, $86 = 0, $9 = 0, $90 = 0, $91 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $7 = sp + 28 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 20 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 12 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 if (($5 | 0) > 0) if (($5 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv($3) | 0) >>> 0) {
  $34 = $6 + -1 | 0;
  if (($6 | 0) > 0) {
   $36 = $6 + 1 | 0;
   if ($36 >>> 0 < (__ZNK6vision5Image6heightEv($3) | 0) >>> 0) {
    $54 = __ZNK6vision5Image5widthEv($2) | 0;
    if (($54 | 0) != (__ZNK6vision5Image5widthEv($3) | 0)) {
     $62 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24134) | 0, 22444) | 0, 33528) | 0, 415) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $62 + (HEAP32[(HEAP32[$62 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $67 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $71 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$67 >> 2] | 0) + 28 >> 2] & 63]($67, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($62, $71) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($62) | 0;
     _abort();
    }
    $73 = (__ZNK6vision5Image5widthEv($2) | 0) >>> 1;
    if (($73 | 0) != (__ZNK6vision5Image5widthEv($4) | 0)) {
     $81 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23060) | 0, 22444) | 0, 33528) | 0, 416) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $81 + (HEAP32[(HEAP32[$81 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $86 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $90 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$86 >> 2] | 0) + 28 >> 2] & 63]($86, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($81, $90) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($81) | 0;
     _abort();
    }
    $91 = __ZNK6vision5Image6heightEv($2) | 0;
    if (($91 | 0) != (__ZNK6vision5Image6heightEv($3) | 0)) {
     $99 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24186) | 0, 22444) | 0, 33528) | 0, 417) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $99 + (HEAP32[(HEAP32[$99 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $104 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $108 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$104 >> 2] | 0) + 28 >> 2] & 63]($104, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($99, $108) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($99) | 0;
     _abort();
    }
    $110 = (__ZNK6vision5Image6heightEv($2) | 0) >>> 1;
    if (($110 | 0) != (__ZNK6vision5Image6heightEv($4) | 0)) {
     $118 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23176) | 0, 22444) | 0, 33528) | 0, 418) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $118 + (HEAP32[(HEAP32[$118 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $123 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $127 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$123 >> 2] | 0) + 28 >> 2] & 63]($123, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($118, $127) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($118) | 0;
     _abort();
    }
    $129 = (__ZNK6vision5Image3getIfEEPKT_m($2, $34) | 0) + ($5 << 2) | 0;
    $131 = (__ZNK6vision5Image3getIfEEPKT_m($2, $6) | 0) + ($5 << 2) | 0;
    $133 = (__ZNK6vision5Image3getIfEEPKT_m($2, $36) | 0) + ($5 << 2) | 0;
    $135 = (__ZNK6vision5Image3getIfEEPKT_m($3, $6) | 0) + ($5 << 2) | 0;
    __ZN6vision25bilinear_downsample_pointERfS0_ffi($8, $9, +($5 | 0), +($6 | 0), 1);
    $138 = +HEAPF32[$8 >> 2];
    if (!($138 + -.5 >= 0.0)) {
     $146 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24240) | 0, 22444) | 0, 33528) | 0, 428) | 0, 33535) | 0, 24281) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $146 + (HEAP32[(HEAP32[$146 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $151 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $155 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$151 >> 2] | 0) + 28 >> 2] & 63]($151, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($146, $155) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($146) | 0;
     _abort();
    }
    if (!(+HEAPF32[$9 >> 2] + -.5 >= 0.0)) {
     $164 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24335) | 0, 22444) | 0, 33528) | 0, 429) | 0, 33535) | 0, 24376) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $164 + (HEAP32[(HEAP32[$164 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $169 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $173 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$169 >> 2] | 0) + 28 >> 2] & 63]($169, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($164, $173) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($164) | 0;
     _abort();
    }
    if (!($138 + .5 < +((__ZNK6vision5Image5widthEv($4) | 0) >>> 0))) {
     $183 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24430) | 0, 22444) | 0, 33528) | 0, 430) | 0, 33535) | 0, 24281) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $183 + (HEAP32[(HEAP32[$183 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $188 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $192 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$188 >> 2] | 0) + 28 >> 2] & 63]($188, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($183, $192) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($183) | 0;
     _abort();
    }
    $194 = +HEAPF32[$9 >> 2] + .5;
    if ($194 < +((__ZNK6vision5Image6heightEv($4) | 0) >>> 0)) {
     __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii($10, $11, $12, $13, $14, $3, $5, $6);
     $215 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($4, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2]);
     $216 = +HEAPF32[$131 >> 2];
     $222 = $215 + ($216 - +HEAPF32[$135 >> 2] * 2.0);
     $224 = +HEAPF32[$131 + -4 >> 2];
     $229 = $224 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($4, +HEAPF32[$8 >> 2] + .5, +HEAPF32[$9 >> 2]);
     $231 = +HEAPF32[$131 + 4 >> 2];
     $238 = ($229 - ($231 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($4, +HEAPF32[$8 >> 2] + -.5, +HEAPF32[$9 >> 2]))) * .25;
     $239 = +HEAPF32[$129 >> 2];
     $244 = $239 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($4, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2] + .5);
     $245 = +HEAPF32[$133 >> 2];
     $252 = ($244 - ($245 + +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($4, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2] + -.5))) * .25;
     HEAP32[$0 >> 2] = HEAP32[$12 >> 2];
     $254 = HEAP32[$14 >> 2] | 0;
     HEAP32[$0 + 4 >> 2] = $254;
     HEAPF32[$0 + 8 >> 2] = $238;
     HEAP32[$0 + 12 >> 2] = $254;
     HEAP32[$0 + 16 >> 2] = HEAP32[$13 >> 2];
     HEAPF32[$0 + 20 >> 2] = $252;
     HEAPF32[$0 + 24 >> 2] = $238;
     HEAPF32[$0 + 28 >> 2] = $252;
     HEAPF32[$0 + 32 >> 2] = $222;
     HEAPF32[$1 >> 2] = -+HEAPF32[$10 >> 2];
     HEAPF32[$1 + 4 >> 2] = -+HEAPF32[$11 >> 2];
     HEAPF32[$1 + 8 >> 2] = -(($215 - $216) * .5);
     STACKTOP = sp;
     return;
    } else {
     $203 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24481) | 0, 22444) | 0, 33528) | 0, 431) | 0, 33535) | 0, 24376) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $203 + (HEAP32[(HEAP32[$203 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $208 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $212 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$208 >> 2] | 0) + 28 >> 2] & 63]($208, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($203, $212) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($203) | 0;
     _abort();
    }
   }
  }
  $44 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22898) | 0, 22444) | 0, 33528) | 0, 414) | 0, 33535) | 0, 22957) | 0;
  __ZNKSt3__28ios_base6getlocEv($7, $44 + (HEAP32[(HEAP32[$44 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $49 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
  $53 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$49 >> 2] | 0) + 28 >> 2] & 63]($49, 10) | 0;
  __ZNSt3__26localeD2Ev($7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($44, $53) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($44) | 0;
  _abort();
 }
 $24 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22824) | 0, 22444) | 0, 33528) | 0, 413) | 0, 33535) | 0, 22882) | 0;
 __ZNKSt3__28ios_base6getlocEv($7, $24 + (HEAP32[(HEAP32[$24 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $29 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
 $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$29 >> 2] | 0) + 28 >> 2] & 63]($29, 10) | 0;
 __ZNSt3__26localeD2Ev($7);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($24, $33) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($24) | 0;
 _abort();
}

function __ZN6vision21HoughSimilarityVoting4voteEffff($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = +$3;
 $4 = +$4;
 var $$0 = 0, $10 = 0.0, $102 = 0, $106 = 0, $113 = 0, $118 = 0, $122 = 0, $129 = 0, $13 = 0.0, $134 = 0, $138 = 0, $145 = 0, $150 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $16 = 0.0, $162 = 0, $166 = 0, $170 = 0, $174 = 0, $176 = 0, $178 = 0, $18 = 0.0, $180 = 0, $185 = 0, $190 = 0, $195 = 0, $22 = 0.0, $25 = 0.0, $33 = 0, $38 = 0, $42 = 0, $49 = 0, $5 = 0, $54 = 0, $58 = 0, $65 = 0, $7 = 0.0, $70 = 0, $74 = 0, $81 = 0, $86 = 0, $90 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 $7 = +HEAPF32[$0 + 20 >> 2];
 if ($7 > $1) $$0 = 0; else {
  $10 = +HEAPF32[$0 + 24 >> 2];
  if (!($10 <= $1)) {
   $13 = +HEAPF32[$0 + 28 >> 2];
   if ($13 > $2) $$0 = 0; else {
    $16 = +HEAPF32[$0 + 32 >> 2];
    if (!($16 <= $2)) {
     $18 = $3;
     if ($18 <= -3.141592653589793 | $18 > 3.141592653589793) $$0 = 0; else {
      $22 = +HEAPF32[$0 + 36 >> 2];
      if ($22 > $4) $$0 = 0; else {
       $25 = +HEAPF32[$0 + 40 >> 2];
       if (!($25 <= $4)) {
        if (!($7 <= $1)) {
         $33 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30397) | 0, 30431) | 0, 33528) | 0, 360) | 0, 33535) | 0, 30554) | 0;
         __ZNKSt3__28ios_base6getlocEv($5, $33 + (HEAP32[(HEAP32[$33 >> 2] | 0) + -12 >> 2] | 0) | 0);
         $38 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
         $42 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$38 >> 2] | 0) + 28 >> 2] & 63]($38, 10) | 0;
         __ZNSt3__26localeD2Ev($5);
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($33, $42) | 0;
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($33) | 0;
         _abort();
        }
        if (!($10 > $1)) {
         $49 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30569) | 0, 30431) | 0, 33528) | 0, 361) | 0, 33535) | 0, 30554) | 0;
         __ZNKSt3__28ios_base6getlocEv($5, $49 + (HEAP32[(HEAP32[$49 >> 2] | 0) + -12 >> 2] | 0) | 0);
         $54 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
         $58 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$54 >> 2] | 0) + 28 >> 2] & 63]($54, 10) | 0;
         __ZNSt3__26localeD2Ev($5);
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($49, $58) | 0;
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($49) | 0;
         _abort();
        }
        if (!($13 <= $2)) {
         $65 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30602) | 0, 30431) | 0, 33528) | 0, 362) | 0, 33535) | 0, 30636) | 0;
         __ZNKSt3__28ios_base6getlocEv($5, $65 + (HEAP32[(HEAP32[$65 >> 2] | 0) + -12 >> 2] | 0) | 0);
         $70 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
         $74 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$70 >> 2] | 0) + 28 >> 2] & 63]($70, 10) | 0;
         __ZNSt3__26localeD2Ev($5);
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($65, $74) | 0;
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($65) | 0;
         _abort();
        }
        if (!($16 > $2)) {
         $81 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30651) | 0, 30431) | 0, 33528) | 0, 363) | 0, 33535) | 0, 30636) | 0;
         __ZNKSt3__28ios_base6getlocEv($5, $81 + (HEAP32[(HEAP32[$81 >> 2] | 0) + -12 >> 2] | 0) | 0);
         $86 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
         $90 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$86 >> 2] | 0) + 28 >> 2] & 63]($86, 10) | 0;
         __ZNSt3__26localeD2Ev($5);
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($81, $90) | 0;
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($81) | 0;
         _abort();
        }
        if (!($18 > -3.141592653589793)) {
         $97 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30684) | 0, 30431) | 0, 33528) | 0, 364) | 0, 33535) | 0, 30719) | 0;
         __ZNKSt3__28ios_base6getlocEv($5, $97 + (HEAP32[(HEAP32[$97 >> 2] | 0) + -12 >> 2] | 0) | 0);
         $102 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
         $106 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$102 >> 2] | 0) + 28 >> 2] & 63]($102, 10) | 0;
         __ZNSt3__26localeD2Ev($5);
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($97, $106) | 0;
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($97) | 0;
         _abort();
        }
        if (!($18 <= 3.141592653589793)) {
         $113 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30738) | 0, 30431) | 0, 33528) | 0, 365) | 0, 33535) | 0, 30719) | 0;
         __ZNKSt3__28ios_base6getlocEv($5, $113 + (HEAP32[(HEAP32[$113 >> 2] | 0) + -12 >> 2] | 0) | 0);
         $118 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
         $122 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$118 >> 2] | 0) + 28 >> 2] & 63]($118, 10) | 0;
         __ZNSt3__26localeD2Ev($5);
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($113, $122) | 0;
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($113) | 0;
         _abort();
        }
        if (!($22 <= $4)) {
         $129 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30773) | 0, 30431) | 0, 33528) | 0, 366) | 0, 33535) | 0, 30815) | 0;
         __ZNKSt3__28ios_base6getlocEv($5, $129 + (HEAP32[(HEAP32[$129 >> 2] | 0) + -12 >> 2] | 0) | 0);
         $134 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
         $138 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$134 >> 2] | 0) + 28 >> 2] & 63]($134, 10) | 0;
         __ZNSt3__26localeD2Ev($5);
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($129, $138) | 0;
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($129) | 0;
         _abort();
        }
        if (!($25 > $4)) {
         $145 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30834) | 0, 30431) | 0, 33528) | 0, 367) | 0, 33535) | 0, 30815) | 0;
         __ZNKSt3__28ios_base6getlocEv($5, $145 + (HEAP32[(HEAP32[$145 >> 2] | 0) + -12 >> 2] | 0) | 0);
         $150 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
         $154 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$150 >> 2] | 0) + 28 >> 2] & 63]($150, 10) | 0;
         __ZNSt3__26localeD2Ev($5);
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($145, $154) | 0;
         __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($145) | 0;
         _abort();
        }
        $155 = $0 + 68 | 0;
        $156 = $0 + 72 | 0;
        $157 = $0 + 76 | 0;
        $158 = $0 + 80 | 0;
        __ZNK6vision21HoughSimilarityVoting12mapVoteToBinERfS1_S1_S1_ffff($0, $155, $156, $157, $158, $1, $2, $3, $4);
        $162 = ~~+Math_floor(+(+HEAPF32[$155 >> 2] + -.5));
        $166 = ~~+Math_floor(+(+HEAPF32[$156 >> 2] + -.5));
        $170 = ~~+Math_floor(+(+HEAPF32[$157 >> 2] + -.5));
        $174 = ~~+Math_floor(+(+HEAPF32[$158 >> 2] + -.5));
        $176 = HEAP32[$0 + 60 >> 2] | 0;
        $178 = ($176 + $170 | 0) % ($176 | 0) | 0;
        if (($162 | 0) < 0) $$0 = 0; else {
         $180 = $162 + 1 | 0;
         if (($166 | 0) < 0 ? 1 : ($180 | 0) >= (HEAP32[$0 + 52 >> 2] | 0)) $$0 = 0; else {
          $185 = $166 + 1 | 0;
          if (($174 | 0) < 0 ? 1 : ($185 | 0) >= (HEAP32[$0 + 56 >> 2] | 0)) $$0 = 0; else {
           $190 = $174 + 1 | 0;
           if (($190 | 0) < (HEAP32[$0 + 64 >> 2] | 0)) {
            $195 = ($178 + 1 | 0) % ($176 | 0) | 0;
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $166, $178, $174) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $166, $178, $174) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $185, $178, $174) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $185, $195, $174) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $185, $195, $190) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $185, $178, $190) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $166, $195, $174) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $166, $195, $190) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $180, $166, $178, $190) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $185, $178, $174) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $185, $195, $174) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $185, $195, $190) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $185, $178, $190) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $166, $195, $174) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $166, $195, $190) | 0, 1);
            __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $162, $166, $178, $190) | 0, 1);
            $$0 = 1;
           } else $$0 = 0;
          }
         }
        }
       } else $$0 = 0;
      }
     }
    } else $$0 = 0;
   }
  } else $$0 = 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__213__nth_elementIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_S9_T_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$byval_copy5 = 0, $$byval_copy6 = 0, $$byval_copy7 = 0, $$cast222 = 0, $$phi$trans$insert = 0, $$phi$trans$insert262 = 0, $$phi$trans$insert264 = 0, $$phi$trans$insert266 = 0, $$phi$trans$insert268 = 0, $$pre = 0, $$pre$phi270Z2D = 0, $$pre$phi271Z2D = 0, $$pre$phi272Z2D = 0, $$pre$phi273Z2D = 0, $$pre$phi275Z2D = 0, $$pre$phi279Z2D = 0, $$pre$phiZ2D = 0, $$pre276 = 0, $$sroa$0$0$ptr = 0, $$sroa$0$1 = 0, $$sroa$0$1$ptr = 0, $$sroa$0$2$ptr = 0, $$sroa$0$3$in = 0, $$sroa$0$4 = 0, $$sroa$0$4$ptr = 0, $$sroa$0$5$ptr = 0, $$sroa$0107$0 = 0, $$sroa$0107$2$ptr = 0, $$sroa$0107$3$ptr = 0, $$sroa$0107$4$ptr = 0, $$sroa$068$0$ptr = 0, $$sroa$068$1 = 0, $$sroa$068$2 = 0, $$sroa$068$3 = 0, $$sroa$068$4 = 0, $$sroa$068$5 = 0, $$sroa$068$6 = 0, $$sroa$068$6$ptr = 0, $10 = 0, $103 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $111 = 0, $113 = 0.0, $118 = 0, $12 = 0, $121 = 0, $123 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0.0, $148 = 0, $149 = 0, $15 = 0, $150 = 0.0, $157 = 0, $16 = 0, $160 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $173 = 0.0, $174 = 0.0, $177 = 0, $178 = 0, $179 = 0, $180 = 0, $183 = 0, $185 = 0, $186 = 0, $19 = 0, $191 = 0, $193 = 0.0, $194 = 0.0, $20 = 0, $202 = 0, $204 = 0.0, $205 = 0.0, $21 = 0, $22 = 0.0, $23 = 0, $24 = 0.0, $27 = 0, $28 = 0, $29 = 0, $31 = 0, $32 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $55 = 0.0, $56 = 0.0, $6 = 0, $60 = 0, $64 = 0.0, $68 = 0, $7 = 0, $73 = 0, $79 = 0, $8 = 0, $80 = 0.0, $81 = 0, $82 = 0.0, $9 = 0, $91 = 0, $92 = 0, $93 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy7 = sp + 40 | 0;
 $$byval_copy6 = sp + 36 | 0;
 $$byval_copy5 = sp + 32 | 0;
 $4 = sp + 28 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 20 | 0;
 $7 = sp + 16 | 0;
 $8 = sp + 12 | 0;
 $9 = sp + 8 | 0;
 $10 = sp + 4 | 0;
 $11 = sp;
 $12 = HEAP32[$1 >> 2] | 0;
 L1 : while (1) {
  $13 = HEAP32[$2 >> 2] | 0;
  $$cast222 = $13;
  $15 = $13 + -8 | 0;
  $16 = $15;
  $17 = $13 + -4 | 0;
  if (($12 | 0) == ($13 | 0)) break;
  $$pre = HEAP32[$0 >> 2] | 0;
  $20 = $$pre;
  $23 = $$pre;
  L4 : while (1) {
   $19 = $$cast222 - $20 | 0;
   $21 = $19 >> 3;
   switch ($21 | 0) {
   case 1:
   case 0:
    {
     break L1;
     break;
    }
   case 2:
    {
     label = 5;
     break L1;
     break;
    }
   case 3:
    {
     label = 10;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($19 | 0) < 64) {
    label = 12;
    break L1;
   }
   $38 = $21 >>> 1;
   $39 = $23 + ($38 << 3) | 0;
   HEAP32[$9 >> 2] = $20;
   HEAP32[$10 >> 2] = $39;
   HEAP32[$11 >> 2] = $16;
   HEAP32[$$byval_copy5 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$$byval_copy6 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy7 >> 2] = HEAP32[$11 >> 2];
   $41 = __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_($$byval_copy5, $$byval_copy6, $$byval_copy7, $3) | 0;
   $42 = $20;
   $43 = +HEAPF32[$39 >> 2];
   $44 = +HEAPF32[$42 >> 2];
   if ($43 < $44) {
    label = 53;
    break;
   }
   $$pre276 = $23 + ($38 << 3) + 4 | 0;
   if (!($44 < $43)) if ((HEAP32[$$pre276 >> 2] | 0) >>> 0 < (HEAP32[$42 + 4 >> 2] | 0) >>> 0) {
    label = 53;
    break;
   }
   $$sroa$0$0$ptr = $15;
   while (1) {
    $51 = $$sroa$0$0$ptr + -8 | 0;
    if (($51 | 0) == ($42 | 0)) break;
    $113 = +HEAPF32[$51 >> 2];
    if ($43 < $113) {
     label = 47;
     break L4;
    }
    if (!($113 < $43)) {
     $118 = HEAP32[$$sroa$0$0$ptr + -4 >> 2] | 0;
     if ((HEAP32[$$pre276 >> 2] | 0) >>> 0 < $118 >>> 0) {
      label = 51;
      break L4;
     }
    }
    $$sroa$0$0$ptr = $51;
   }
   $53 = $42 + 8 | 0;
   $54 = $53;
   $55 = +HEAPF32[$15 >> 2];
   $56 = +HEAPF32[$23 >> 2];
   do if ($55 < $56) $$sroa$068$1 = $54; else {
    if ($56 < $55) $$pre$phi279Z2D = $23 + 4 | 0; else {
     $60 = $23 + 4 | 0;
     if ((HEAP32[$17 >> 2] | 0) >>> 0 < (HEAP32[$60 >> 2] | 0) >>> 0) {
      $$sroa$068$1 = $54;
      break;
     } else $$pre$phi279Z2D = $60;
    }
    $$sroa$068$0$ptr = $53;
    while (1) {
     if (($$sroa$068$0$ptr | 0) == ($15 | 0)) break L1;
     $64 = +HEAPF32[$$sroa$068$0$ptr >> 2];
     if ($64 < $56) {
      label = 25;
      break;
     }
     if (!($56 < $64)) {
      $68 = HEAP32[$$sroa$068$0$ptr + 4 >> 2] | 0;
      if ($68 >>> 0 < (HEAP32[$$pre$phi279Z2D >> 2] | 0) >>> 0) {
       label = 28;
       break;
      }
     }
     $$sroa$068$0$ptr = $$sroa$068$0$ptr + 8 | 0;
    }
    if ((label | 0) == 25) {
     label = 0;
     $$phi$trans$insert264 = $$sroa$068$0$ptr + 4 | 0;
     $$pre$phi271Z2D = $$phi$trans$insert264;
     $73 = HEAP32[$$phi$trans$insert264 >> 2] | 0;
    } else if ((label | 0) == 28) {
     label = 0;
     $$pre$phi271Z2D = $$sroa$068$0$ptr + 4 | 0;
     $73 = $68;
    }
    HEAPF32[$$sroa$068$0$ptr >> 2] = $55;
    HEAPF32[$15 >> 2] = $64;
    HEAP32[$$pre$phi271Z2D >> 2] = HEAP32[$17 >> 2];
    HEAP32[$17 >> 2] = $73;
    $$sroa$068$1 = $$sroa$068$0$ptr + 8 | 0;
   } while (0);
   if (($15 | 0) == ($$sroa$068$1 | 0)) break L1;
   $79 = $23 + 4 | 0;
   $$sroa$0$1 = $16;
   $$sroa$068$2 = $$sroa$068$1;
   while (1) {
    $$sroa$0$1$ptr = $$sroa$0$1;
    $80 = +HEAPF32[$23 >> 2];
    $$sroa$068$3 = $$sroa$068$2;
    while (1) {
     $81 = $$sroa$068$3;
     $82 = +HEAPF32[$81 >> 2];
     if ($82 < $80) break;
     if (!($80 < $82)) if ((HEAP32[$81 + 4 >> 2] | 0) >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0) break;
     $$sroa$068$3 = $81 + 8 | 0;
    }
    $91 = $$sroa$068$3;
    $$sroa$0$2$ptr = $$sroa$0$1$ptr;
    while (1) {
     $92 = $$sroa$0$2$ptr + -8 | 0;
     $93 = +HEAPF32[$92 >> 2];
     if (!($93 < $80)) {
      if ($80 < $93) break;
      if ((HEAP32[$$sroa$0$2$ptr + -4 >> 2] | 0) >>> 0 >= (HEAP32[$79 >> 2] | 0) >>> 0) break;
     }
     $$sroa$0$2$ptr = $92;
    }
    if ($92 >>> 0 <= $91 >>> 0) break;
    $103 = HEAP32[$$sroa$068$3 >> 2] | 0;
    HEAPF32[$$sroa$068$3 >> 2] = $93;
    HEAP32[$92 >> 2] = $103;
    $105 = $91 + 4 | 0;
    $106 = $$sroa$0$2$ptr + -4 | 0;
    $107 = HEAP32[$105 >> 2] | 0;
    HEAP32[$105 >> 2] = HEAP32[$106 >> 2];
    HEAP32[$106 >> 2] = $107;
    $$sroa$0$1 = $92;
    $$sroa$068$2 = $91 + 8 | 0;
   }
   $111 = $$sroa$068$3;
   if ($12 >>> 0 < $111 >>> 0) break L1;
   HEAP32[$0 >> 2] = $$sroa$068$3;
   $20 = $$sroa$068$3;
   $23 = $111;
  }
  if ((label | 0) == 47) {
   label = 0;
   $$phi$trans$insert262 = $$sroa$0$0$ptr + -4 | 0;
   $$pre$phi272Z2D = $$phi$trans$insert262;
   $127 = HEAP32[$$phi$trans$insert262 >> 2] | 0;
   label = 52;
  } else if ((label | 0) == 51) {
   label = 0;
   $$pre$phi272Z2D = $$sroa$0$0$ptr + -4 | 0;
   $127 = $118;
   label = 52;
  } else if ((label | 0) == 53) {
   label = 0;
   $$2 = $41;
   $$sroa$0$3$in = $15;
   $131 = $20;
  }
  if ((label | 0) == 52) {
   label = 0;
   $121 = $20;
   $123 = HEAP32[$20 >> 2] | 0;
   HEAPF32[$20 >> 2] = $113;
   HEAP32[$51 >> 2] = $123;
   $125 = $121 + 4 | 0;
   $126 = HEAP32[$125 >> 2] | 0;
   HEAP32[$125 >> 2] = $127;
   HEAP32[$$pre$phi272Z2D >> 2] = $126;
   $$2 = $41 + 1 | 0;
   $$sroa$0$3$in = $51;
   $131 = $121;
  }
  $130 = $131 + 8 | 0;
  $132 = $130;
  if ($130 >>> 0 < $$sroa$0$3$in >>> 0) {
   $$3 = $$2;
   $$sroa$0$4 = $$sroa$0$3$in;
   $$sroa$0107$0 = $39;
   $$sroa$068$4 = $132;
   while (1) {
    $$sroa$0$4$ptr = $$sroa$0$4;
    $135 = $$sroa$0107$0;
    $136 = $135 + 4 | 0;
    $137 = +HEAPF32[$135 >> 2];
    $$sroa$068$5 = $$sroa$068$4;
    while (1) {
     $138 = $$sroa$068$5;
     $139 = +HEAPF32[$138 >> 2];
     if (!($137 < $139)) {
      if ($139 < $137) break;
      if ((HEAP32[$136 >> 2] | 0) >>> 0 >= (HEAP32[$138 + 4 >> 2] | 0) >>> 0) break;
     }
     $$sroa$068$5 = $138 + 8 | 0;
    }
    $148 = $$sroa$068$5;
    $$sroa$0$5$ptr = $$sroa$0$4$ptr;
    while (1) {
     $149 = $$sroa$0$5$ptr + -8 | 0;
     $150 = +HEAPF32[$149 >> 2];
     if ($137 < $150) break;
     if (!($150 < $137)) if ((HEAP32[$136 >> 2] | 0) >>> 0 < (HEAP32[$$sroa$0$5$ptr + -4 >> 2] | 0) >>> 0) break;
     $$sroa$0$5$ptr = $149;
    }
    $157 = $149;
    if ($149 >>> 0 <= $148 >>> 0) break;
    $160 = HEAP32[$$sroa$068$5 >> 2] | 0;
    HEAPF32[$$sroa$068$5 >> 2] = $150;
    HEAP32[$149 >> 2] = $160;
    $162 = $148 + 4 | 0;
    $163 = $$sroa$0$5$ptr + -4 | 0;
    $164 = HEAP32[$162 >> 2] | 0;
    HEAP32[$162 >> 2] = HEAP32[$163 >> 2];
    HEAP32[$163 >> 2] = $164;
    $$3 = $$3 + 1 | 0;
    $$sroa$0$4 = $157;
    $$sroa$0107$0 = ($135 | 0) == ($148 | 0) ? $157 : $$sroa$0107$0;
    $$sroa$068$4 = $148 + 8 | 0;
   }
   $$4 = $$3;
   $$pre$phi275Z2D = $$sroa$068$5;
   $$sroa$0107$2$ptr = $$sroa$0107$0;
   $$sroa$068$6 = $$sroa$068$5;
  } else {
   $$4 = $$2;
   $$pre$phi275Z2D = $130;
   $$sroa$0107$2$ptr = $39;
   $$sroa$068$6 = $132;
  }
  $$sroa$068$6$ptr = $$sroa$068$6;
  do if (($$sroa$0107$2$ptr | 0) == ($$pre$phi275Z2D | 0)) $$5 = $$4; else {
   $173 = +HEAPF32[$$pre$phi275Z2D >> 2];
   $174 = +HEAPF32[$$sroa$0107$2$ptr >> 2];
   if ($173 < $174) {
    $$phi$trans$insert266 = $$pre$phi275Z2D + 4 | 0;
    $$phi$trans$insert268 = $$sroa$0107$2$ptr + 4 | 0;
    $$pre$phi270Z2D = $$phi$trans$insert268;
    $$pre$phiZ2D = $$phi$trans$insert266;
    $185 = HEAP32[$$phi$trans$insert268 >> 2] | 0;
    $186 = HEAP32[$$phi$trans$insert266 >> 2] | 0;
   } else {
    if ($174 < $173) {
     $$5 = $$4;
     break;
    }
    $177 = $$pre$phi275Z2D + 4 | 0;
    $178 = HEAP32[$177 >> 2] | 0;
    $179 = $$sroa$0107$2$ptr + 4 | 0;
    $180 = HEAP32[$179 >> 2] | 0;
    if ($178 >>> 0 < $180 >>> 0) {
     $$pre$phi270Z2D = $179;
     $$pre$phiZ2D = $177;
     $185 = $180;
     $186 = $178;
    } else {
     $$5 = $$4;
     break;
    }
   }
   $183 = HEAP32[$$sroa$068$6 >> 2] | 0;
   HEAPF32[$$sroa$068$6 >> 2] = $174;
   HEAP32[$$sroa$0107$2$ptr >> 2] = $183;
   HEAP32[$$pre$phiZ2D >> 2] = $185;
   HEAP32[$$pre$phi270Z2D >> 2] = $186;
   $$5 = $$4 + 1 | 0;
  } while (0);
  if (($12 | 0) == ($$pre$phi275Z2D | 0)) break;
  L95 : do if (!$$5) if ($12 >>> 0 < $$pre$phi275Z2D >>> 0) {
   $$sroa$0107$3$ptr = $131;
   while (1) {
    $191 = $$sroa$0107$3$ptr + 8 | 0;
    if (($191 | 0) == ($$pre$phi275Z2D | 0)) break L1;
    $193 = +HEAPF32[$$sroa$0107$3$ptr >> 2];
    $194 = +HEAPF32[$191 >> 2];
    if ($193 < $194) break L95;
    if (!($194 < $193)) if ((HEAP32[$$sroa$0107$3$ptr + 4 >> 2] | 0) >>> 0 < (HEAP32[$$sroa$0107$3$ptr + 12 >> 2] | 0) >>> 0) break L95;
    $$sroa$0107$3$ptr = $191;
   }
  } else {
   $$sroa$0107$4$ptr = $$sroa$068$6$ptr;
   while (1) {
    $202 = $$sroa$0107$4$ptr + 8 | 0;
    if (($202 | 0) == ($13 | 0)) break L1;
    $204 = +HEAPF32[$$sroa$0107$4$ptr >> 2];
    $205 = +HEAPF32[$202 >> 2];
    if ($204 < $205) break L95;
    if (!($205 < $204)) if ((HEAP32[$$sroa$0107$4$ptr + 4 >> 2] | 0) >>> 0 < (HEAP32[$$sroa$0107$4$ptr + 12 >> 2] | 0) >>> 0) break L95;
    $$sroa$0107$4$ptr = $202;
   }
  } while (0);
  if ($12 >>> 0 < $$pre$phi275Z2D >>> 0) HEAP32[$2 >> 2] = $$sroa$068$6; else HEAP32[$0 >> 2] = $$pre$phi275Z2D + 8;
 }
 do if ((label | 0) == 5) {
  HEAP32[$2 >> 2] = $15;
  $22 = +HEAPF32[$23 >> 2];
  $24 = +HEAPF32[$15 >> 2];
  if ($22 < $24) {
   $$phi$trans$insert = $23 + 4 | 0;
   $$pre$phi273Z2D = $$phi$trans$insert;
   $31 = HEAP32[$17 >> 2] | 0;
   $32 = HEAP32[$$phi$trans$insert >> 2] | 0;
  } else {
   if ($24 < $22) break;
   $27 = $23 + 4 | 0;
   $28 = HEAP32[$27 >> 2] | 0;
   $29 = HEAP32[$17 >> 2] | 0;
   if ($28 >>> 0 < $29 >>> 0) {
    $$pre$phi273Z2D = $27;
    $31 = $29;
    $32 = $28;
   } else break;
  }
  HEAPF32[$23 >> 2] = $24;
  HEAPF32[$15 >> 2] = $22;
  HEAP32[$$pre$phi273Z2D >> 2] = $31;
  HEAP32[$17 >> 2] = $32;
 } else if ((label | 0) == 10) {
  HEAP32[$4 >> 2] = $20;
  HEAP32[$5 >> 2] = $20 + 8;
  HEAP32[$2 >> 2] = $15;
  HEAP32[$6 >> 2] = $15;
  HEAP32[$$byval_copy5 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$$byval_copy7 >> 2] = HEAP32[$6 >> 2];
  __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_($$byval_copy5, $$byval_copy6, $$byval_copy7, $3) | 0;
 } else if ((label | 0) == 12) {
  HEAP32[$7 >> 2] = $20;
  HEAP32[$8 >> 2] = $13;
  HEAP32[$$byval_copy6 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy7 >> 2] = HEAP32[$8 >> 2];
  __ZNSt3__216__selection_sortIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_T_($$byval_copy6, $$byval_copy7, $3);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_new_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i174 = 0, $$0$i$i$add$i186 = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i182 = 0, $$0$i$i$i196 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i173 = 0, $$0$i$i$idx$i185 = 0, $$0$i$i177 = 0, $$0$i$i189 = 0, $$0$i$i202 = 0, $$0$off0207 = 0, $$0138$off0 = 0, $$0150 = 0, $$0159$off0 = 0, $$0160 = 0, $$1151 = 0, $$1161 = 0, $$16 = 0, $$3143 = 0, $$3163 = 0, $$4144 = 0, $$4164206 = 0, $$phi$trans$insert = 0, $$pre$phi225Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $105 = 0, $106 = 0, $117 = 0, $118 = 0, $127 = 0, $14 = 0, $18 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $29 = 0, $3 = 0, $32 = 0, $33 = 0, $39 = 0, $4 = 0, $5 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $61 = 0, $65 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $74 = 0, $8 = 0, $80 = 0, $83 = 0, $87 = 0, $9 = 0, $96 = 0, $97 = 0, $spec$select = 0, label = 0, sp = 0, $$3163$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $3 = sp + 88 | 0;
 $4 = sp + 76 | 0;
 $5 = sp + 64 | 0;
 $6 = sp + 40 | 0;
 $7 = sp + 16 | 0;
 $8 = sp;
 $9 = sp + 52 | 0;
 $10 = $1;
 L1 : do if (($10 - $0 | 0) > 3) {
  $14 = HEAP8[$0 >> 0] | 0;
  if ($14 << 24 >> 24 == 103) {
   $18 = (HEAP8[$0 + 1 >> 0] | 0) == 115;
   $spec$select = $18 ? $0 + 2 | 0 : $0;
   $$0159$off0 = $18;
   $$0160 = $spec$select;
   $20 = HEAP8[$spec$select >> 0] | 0;
  } else {
   $$0159$off0 = 0;
   $$0160 = $0;
   $20 = $14;
  }
  if ($20 << 24 >> 24 == 110) {
   $23 = HEAP8[$$0160 + 1 >> 0] | 0;
   switch ($23 << 24 >> 24) {
   case 97:
   case 119:
    break;
   default:
    {
     $$16 = $0;
     break L1;
    }
   }
   $24 = $23 << 24 >> 24 == 97;
   $25 = $$0160 + 2 | 0;
   L8 : do if (($25 | 0) != ($1 | 0)) {
    $$0138$off0 = 0;
    $$1161 = $25;
    while (1) {
     if ((HEAP8[$$1161 >> 0] | 0) == 95) break;
     $29 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($$1161, $1, $2) | 0;
     if (($29 | 0) == ($$1161 | 0) | ($29 | 0) == ($1 | 0)) break L8; else {
      $$0138$off0 = 1;
      $$1161 = $29;
     }
    }
    $32 = $$1161 + 1 | 0;
    $33 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($32, $1, $2) | 0;
    if (!(($33 | 0) == ($32 | 0) | ($33 | 0) == ($1 | 0))) {
     $39 = HEAP8[$33 >> 0] | 0;
     L15 : do if (($10 - $33 | 0) > 2 & $39 << 24 >> 24 == 112) {
      if ((HEAP8[$33 + 1 >> 0] | 0) != 105) break L8;
      $$3163 = $33 + 2 | 0;
      while (1) {
       if ((HEAP8[$$3163 >> 0] | 0) == 69) {
        $$0$off0207 = 1;
        $$4164206 = $$3163;
        break L15;
       }
       $$3163$looptemp = $$3163;
       $$3163 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($$3163, $1, $2) | 0;
       if (($$3163 | 0) == ($$3163$looptemp | 0) | ($$3163 | 0) == ($1 | 0)) break L8;
      }
     } else if ($39 << 24 >> 24 == 69) {
      $$0$off0207 = 0;
      $$4164206 = $33;
     } else break L8; while (0);
     HEAP32[$4 >> 2] = 0;
     HEAP32[$4 + 4 >> 2] = 0;
     HEAP32[$4 + 8 >> 2] = 0;
     $$0$i$i = 0;
     while (1) {
      if (($$0$i$i | 0) == 3) break;
      HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
      $$0$i$i = $$0$i$i + 1 | 0;
     }
     if ($$0$off0207) {
      $54 = $2 + 4 | 0;
      $55 = HEAP32[$54 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($55 | 0)) {
       $$1151 = $0;
       $$4144 = 1;
      } else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $55 + -24 | 0);
       $58 = $4 + 11 | 0;
       if ((HEAP8[$58 >> 0] | 0) < 0) {
        $61 = HEAP32[$4 >> 2] | 0;
        HEAP8[$3 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($61, $3);
        HEAP32[$4 + 4 >> 2] = 0;
       } else {
        HEAP8[$3 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($4, $3);
        HEAP8[$58 >> 0] = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($4);
       HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
       HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
       HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
       $$0$i$i$i$i = 0;
       while (1) {
        if (($$0$i$i$i$i | 0) == 3) break;
        HEAP32[$5 + ($$0$i$i$i$i << 2) >> 2] = 0;
        $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
       $65 = HEAP32[$54 >> 2] | 0;
       $$0$i$i$idx$i = 0;
       while (1) {
        if (($$0$i$i$idx$i | 0) == -1) break;
        $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($65 + ($$0$i$i$add$i * 24 | 0) | 0);
        $$0$i$i$idx$i = $$0$i$i$add$i;
       }
       $67 = $65 + -24 | 0;
       HEAP32[$54 >> 2] = $67;
       $$pre$phi225Z2D = $54;
       $$pre$phiZ2D = $2;
       $70 = $67;
       label = 33;
      }
     } else {
      $$phi$trans$insert = $2 + 4 | 0;
      $$pre$phi225Z2D = $$phi$trans$insert;
      $$pre$phiZ2D = $2;
      $70 = HEAP32[$$phi$trans$insert >> 2] | 0;
      label = 33;
     }
     if ((label | 0) == 33) if ((HEAP32[$$pre$phiZ2D >> 2] | 0) == ($70 | 0)) {
      $$1151 = $0;
      $$4144 = 1;
     } else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $70 + -24 | 0);
      $72 = HEAP32[$$pre$phi225Z2D >> 2] | 0;
      $$0$i$i$idx$i173 = 0;
      while (1) {
       if (($$0$i$i$idx$i173 | 0) == -1) break;
       $$0$i$i$add$i174 = $$0$i$i$idx$i173 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($72 + ($$0$i$i$add$i174 * 24 | 0) | 0);
       $$0$i$i$idx$i173 = $$0$i$i$add$i174;
      }
      $74 = $72 + -24 | 0;
      HEAP32[$$pre$phi225Z2D >> 2] = $74;
      HEAP32[$6 >> 2] = 0;
      HEAP32[$6 + 4 >> 2] = 0;
      HEAP32[$6 + 8 >> 2] = 0;
      $$0$i$i177 = 0;
      while (1) {
       if (($$0$i$i177 | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i177 << 2) >> 2] = 0;
       $$0$i$i177 = $$0$i$i177 + 1 | 0;
      }
      if ($$0138$off0) if ((HEAP32[$$pre$phiZ2D >> 2] | 0) == ($74 | 0)) {
       $$0150 = $0;
       $$3143 = 1;
      } else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($7, $72 + -48 | 0);
       $80 = $6 + 11 | 0;
       if ((HEAP8[$80 >> 0] | 0) < 0) {
        $83 = HEAP32[$6 >> 2] | 0;
        HEAP8[$3 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($83, $3);
        HEAP32[$6 + 4 >> 2] = 0;
       } else {
        HEAP8[$3 >> 0] = 0;
        __ZNSt3__211char_traitsIcE6assignERcRKc($6, $3);
        HEAP8[$80 >> 0] = 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($6);
       HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
       HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
       HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
       $$0$i$i$i$i182 = 0;
       while (1) {
        if (($$0$i$i$i$i182 | 0) == 3) break;
        HEAP32[$7 + ($$0$i$i$i$i182 << 2) >> 2] = 0;
        $$0$i$i$i$i182 = $$0$i$i$i$i182 + 1 | 0;
       }
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
       $87 = HEAP32[$$pre$phi225Z2D >> 2] | 0;
       $$0$i$i$idx$i185 = 0;
       while (1) {
        if (($$0$i$i$idx$i185 | 0) == -1) break;
        $$0$i$i$add$i186 = $$0$i$i$idx$i185 + -1 | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($87 + ($$0$i$i$add$i186 * 24 | 0) | 0);
        $$0$i$i$idx$i185 = $$0$i$i$add$i186;
       }
       HEAP32[$$pre$phi225Z2D >> 2] = $87 + -24;
       label = 52;
      } else label = 52;
      if ((label | 0) == 52) {
       HEAP32[$3 >> 2] = 0;
       HEAP32[$3 + 4 >> 2] = 0;
       HEAP32[$3 + 8 >> 2] = 0;
       $$0$i$i189 = 0;
       while (1) {
        if (($$0$i$i189 | 0) == 3) break;
        HEAP32[$3 + ($$0$i$i189 << 2) >> 2] = 0;
        $$0$i$i189 = $$0$i$i189 + 1 | 0;
       }
       if ($$0159$off0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($3, 49703);
       if ($24) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 49913) | 0; else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 49663) | 0;
       if ($$0138$off0) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($8, 49631, $6);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 49917) | 0;
        HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
        $$0$i$i$i = 0;
        while (1) {
         if (($$0$i$i$i | 0) == 3) break;
         HEAP32[$8 + ($$0$i$i$i << 2) >> 2] = 0;
         $$0$i$i$i = $$0$i$i$i + 1 | 0;
        }
        $96 = HEAP8[$7 + 11 >> 0] | 0;
        $97 = $96 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($3, $97 ? HEAP32[$7 >> 2] | 0 : $7, $97 ? HEAP32[$7 + 4 >> 2] | 0 : $96 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
       }
       $105 = HEAP8[$5 + 11 >> 0] | 0;
       $106 = $105 << 24 >> 24 < 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($3, $106 ? HEAP32[$5 >> 2] | 0 : $5, $106 ? HEAP32[$5 + 4 >> 2] | 0 : $105 & 255) | 0;
       if ($$0$off0207) {
        __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($8, 49626, $4);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 49629) | 0;
        HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
        HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
        HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
        $$0$i$i$i196 = 0;
        while (1) {
         if (($$0$i$i$i196 | 0) == 3) break;
         HEAP32[$8 + ($$0$i$i$i196 << 2) >> 2] = 0;
         $$0$i$i$i196 = $$0$i$i$i196 + 1 | 0;
        }
        $117 = HEAP8[$7 + 11 >> 0] | 0;
        $118 = $117 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($3, $118 ? HEAP32[$7 >> 2] | 0 : $7, $118 ? HEAP32[$7 + 4 >> 2] | 0 : $117 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
       };
       HEAP32[$9 >> 2] = HEAP32[$3 >> 2];
       HEAP32[$9 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
       HEAP32[$9 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
       $$0$i$i202 = 0;
       while (1) {
        if (($$0$i$i202 | 0) == 3) break;
        HEAP32[$3 + ($$0$i$i202 << 2) >> 2] = 0;
        $$0$i$i202 = $$0$i$i202 + 1 | 0;
       }
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($7, $9);
       $127 = HEAP32[$$pre$phi225Z2D >> 2] | 0;
       if ($127 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
        __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($127, $7);
        HEAP32[$$pre$phi225Z2D >> 2] = (HEAP32[$$pre$phi225Z2D >> 2] | 0) + 24;
       } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $7);
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($7);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       $$0150 = $$4164206 + 1 | 0;
       $$3143 = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $$1151 = $$0150;
      $$4144 = $$3143;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     if (!$$4144) {
      $$16 = $$1151;
      break L1;
     }
    }
   } while (0);
   $$16 = $0;
  } else $$16 = $0;
 } else $$16 = $0; while (0);
 STACKTOP = sp;
 return $$16 | 0;
}

function _free($0) {
 $0 = $0 | 0;
 var $$0211$i = 0, $$0211$in$i = 0, $$0381438 = 0, $$0382$lcssa = 0, $$0382437 = 0, $$0394 = 0, $$0401 = 0, $$1 = 0, $$1380 = 0, $$1385 = 0, $$1385$be = 0, $$1385$ph = 0, $$1388 = 0, $$1388$be = 0, $$1388$ph = 0, $$1396 = 0, $$1396$be = 0, $$1396$ph = 0, $$1400 = 0, $$1400$be = 0, $$1400$ph = 0, $$2 = 0, $$3 = 0, $$3398 = 0, $$pre$phi444Z2D = 0, $$pre$phi446Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $105 = 0, $106 = 0, $113 = 0, $115 = 0, $116 = 0, $124 = 0, $13 = 0, $132 = 0, $137 = 0, $138 = 0, $141 = 0, $143 = 0, $145 = 0, $16 = 0, $160 = 0, $165 = 0, $167 = 0, $17 = 0, $170 = 0, $173 = 0, $176 = 0, $179 = 0, $180 = 0, $181 = 0, $183 = 0, $185 = 0, $186 = 0, $188 = 0, $189 = 0, $195 = 0, $196 = 0, $2 = 0, $205 = 0, $21 = 0, $210 = 0, $213 = 0, $214 = 0, $220 = 0, $235 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $244 = 0, $245 = 0, $251 = 0, $256 = 0, $257 = 0, $26 = 0, $260 = 0, $262 = 0, $265 = 0, $270 = 0, $276 = 0, $28 = 0, $280 = 0, $281 = 0, $288 = 0, $3 = 0, $300 = 0, $305 = 0, $312 = 0, $313 = 0, $314 = 0, $323 = 0, $41 = 0, $46 = 0, $48 = 0, $51 = 0, $53 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $63 = 0, $65 = 0, $66 = 0, $68 = 0, $69 = 0, $7 = 0, $74 = 0, $75 = 0, $84 = 0, $89 = 0, $9 = 0, $92 = 0, $93 = 0, $99 = 0;
 if (!$0) return;
 $2 = $0 + -8 | 0;
 $3 = HEAP32[14084] | 0;
 if ($2 >>> 0 < $3 >>> 0) _abort();
 $6 = HEAP32[$0 + -4 >> 2] | 0;
 $7 = $6 & 3;
 if (($7 | 0) == 1) _abort();
 $9 = $6 & -8;
 $10 = $2 + $9 | 0;
 L10 : do if (!($6 & 1)) {
  $13 = HEAP32[$2 >> 2] | 0;
  if (!$7) return;
  $16 = $2 + (0 - $13) | 0;
  $17 = $13 + $9 | 0;
  if ($16 >>> 0 < $3 >>> 0) _abort();
  if ((HEAP32[14085] | 0) == ($16 | 0)) {
   $105 = $10 + 4 | 0;
   $106 = HEAP32[$105 >> 2] | 0;
   if (($106 & 3 | 0) != 3) {
    $$1 = $16;
    $$1380 = $17;
    $113 = $16;
    break;
   }
   HEAP32[14082] = $17;
   HEAP32[$105 >> 2] = $106 & -2;
   HEAP32[$16 + 4 >> 2] = $17 | 1;
   HEAP32[$16 + $17 >> 2] = $17;
   return;
  }
  $21 = $13 >>> 3;
  if ($13 >>> 0 < 256) {
   $24 = HEAP32[$16 + 8 >> 2] | 0;
   $26 = HEAP32[$16 + 12 >> 2] | 0;
   $28 = 56360 + ($21 << 1 << 2) | 0;
   if (($24 | 0) != ($28 | 0)) {
    if ($3 >>> 0 > $24 >>> 0) _abort();
    if ((HEAP32[$24 + 12 >> 2] | 0) != ($16 | 0)) _abort();
   }
   if (($26 | 0) == ($24 | 0)) {
    HEAP32[14080] = HEAP32[14080] & ~(1 << $21);
    $$1 = $16;
    $$1380 = $17;
    $113 = $16;
    break;
   }
   if (($26 | 0) == ($28 | 0)) $$pre$phi446Z2D = $26 + 8 | 0; else {
    if ($3 >>> 0 > $26 >>> 0) _abort();
    $41 = $26 + 8 | 0;
    if ((HEAP32[$41 >> 2] | 0) == ($16 | 0)) $$pre$phi446Z2D = $41; else _abort();
   }
   HEAP32[$24 + 12 >> 2] = $26;
   HEAP32[$$pre$phi446Z2D >> 2] = $24;
   $$1 = $16;
   $$1380 = $17;
   $113 = $16;
   break;
  }
  $46 = HEAP32[$16 + 24 >> 2] | 0;
  $48 = HEAP32[$16 + 12 >> 2] | 0;
  do if (($48 | 0) == ($16 | 0)) {
   $59 = $16 + 16 | 0;
   $60 = $59 + 4 | 0;
   $61 = HEAP32[$60 >> 2] | 0;
   if (!$61) {
    $63 = HEAP32[$59 >> 2] | 0;
    if (!$63) {
     $$3 = 0;
     break;
    } else {
     $$1385$ph = $63;
     $$1388$ph = $59;
    }
   } else {
    $$1385$ph = $61;
    $$1388$ph = $60;
   }
   $$1385 = $$1385$ph;
   $$1388 = $$1388$ph;
   while (1) {
    $65 = $$1385 + 20 | 0;
    $66 = HEAP32[$65 >> 2] | 0;
    if (!$66) {
     $68 = $$1385 + 16 | 0;
     $69 = HEAP32[$68 >> 2] | 0;
     if (!$69) break; else {
      $$1385$be = $69;
      $$1388$be = $68;
     }
    } else {
     $$1385$be = $66;
     $$1388$be = $65;
    }
    $$1385 = $$1385$be;
    $$1388 = $$1388$be;
   }
   if ($3 >>> 0 > $$1388 >>> 0) _abort(); else {
    HEAP32[$$1388 >> 2] = 0;
    $$3 = $$1385;
    break;
   }
  } else {
   $51 = HEAP32[$16 + 8 >> 2] | 0;
   if ($3 >>> 0 > $51 >>> 0) _abort();
   $53 = $51 + 12 | 0;
   if ((HEAP32[$53 >> 2] | 0) != ($16 | 0)) _abort();
   $56 = $48 + 8 | 0;
   if ((HEAP32[$56 >> 2] | 0) == ($16 | 0)) {
    HEAP32[$53 >> 2] = $48;
    HEAP32[$56 >> 2] = $51;
    $$3 = $48;
    break;
   } else _abort();
  } while (0);
  if (!$46) {
   $$1 = $16;
   $$1380 = $17;
   $113 = $16;
  } else {
   $74 = HEAP32[$16 + 28 >> 2] | 0;
   $75 = 56624 + ($74 << 2) | 0;
   do if ((HEAP32[$75 >> 2] | 0) == ($16 | 0)) {
    HEAP32[$75 >> 2] = $$3;
    if (!$$3) {
     HEAP32[14081] = HEAP32[14081] & ~(1 << $74);
     $$1 = $16;
     $$1380 = $17;
     $113 = $16;
     break L10;
    }
   } else if ((HEAP32[14084] | 0) >>> 0 > $46 >>> 0) _abort(); else {
    $84 = $46 + 16 | 0;
    HEAP32[((HEAP32[$84 >> 2] | 0) == ($16 | 0) ? $84 : $46 + 20 | 0) >> 2] = $$3;
    if (!$$3) {
     $$1 = $16;
     $$1380 = $17;
     $113 = $16;
     break L10;
    } else break;
   } while (0);
   $89 = HEAP32[14084] | 0;
   if ($89 >>> 0 > $$3 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $46;
   $92 = $16 + 16 | 0;
   $93 = HEAP32[$92 >> 2] | 0;
   do if ($93 | 0) if ($89 >>> 0 > $93 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $93;
    HEAP32[$93 + 24 >> 2] = $$3;
    break;
   } while (0);
   $99 = HEAP32[$92 + 4 >> 2] | 0;
   if (!$99) {
    $$1 = $16;
    $$1380 = $17;
    $113 = $16;
   } else if ((HEAP32[14084] | 0) >>> 0 > $99 >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $99;
    HEAP32[$99 + 24 >> 2] = $$3;
    $$1 = $16;
    $$1380 = $17;
    $113 = $16;
    break;
   }
  }
 } else {
  $$1 = $2;
  $$1380 = $9;
  $113 = $2;
 } while (0);
 if ($113 >>> 0 >= $10 >>> 0) _abort();
 $115 = $10 + 4 | 0;
 $116 = HEAP32[$115 >> 2] | 0;
 if (!($116 & 1)) _abort();
 if (!($116 & 2)) {
  if ((HEAP32[14086] | 0) == ($10 | 0)) {
   $124 = (HEAP32[14083] | 0) + $$1380 | 0;
   HEAP32[14083] = $124;
   HEAP32[14086] = $$1;
   HEAP32[$$1 + 4 >> 2] = $124 | 1;
   if (($$1 | 0) != (HEAP32[14085] | 0)) return;
   HEAP32[14085] = 0;
   HEAP32[14082] = 0;
   return;
  }
  if ((HEAP32[14085] | 0) == ($10 | 0)) {
   $132 = (HEAP32[14082] | 0) + $$1380 | 0;
   HEAP32[14082] = $132;
   HEAP32[14085] = $113;
   HEAP32[$$1 + 4 >> 2] = $132 | 1;
   HEAP32[$113 + $132 >> 2] = $132;
   return;
  }
  $137 = ($116 & -8) + $$1380 | 0;
  $138 = $116 >>> 3;
  L111 : do if ($116 >>> 0 < 256) {
   $141 = HEAP32[$10 + 8 >> 2] | 0;
   $143 = HEAP32[$10 + 12 >> 2] | 0;
   $145 = 56360 + ($138 << 1 << 2) | 0;
   if (($141 | 0) != ($145 | 0)) {
    if ((HEAP32[14084] | 0) >>> 0 > $141 >>> 0) _abort();
    if ((HEAP32[$141 + 12 >> 2] | 0) != ($10 | 0)) _abort();
   }
   if (($143 | 0) == ($141 | 0)) {
    HEAP32[14080] = HEAP32[14080] & ~(1 << $138);
    break;
   }
   if (($143 | 0) == ($145 | 0)) $$pre$phi444Z2D = $143 + 8 | 0; else {
    if ((HEAP32[14084] | 0) >>> 0 > $143 >>> 0) _abort();
    $160 = $143 + 8 | 0;
    if ((HEAP32[$160 >> 2] | 0) == ($10 | 0)) $$pre$phi444Z2D = $160; else _abort();
   }
   HEAP32[$141 + 12 >> 2] = $143;
   HEAP32[$$pre$phi444Z2D >> 2] = $141;
  } else {
   $165 = HEAP32[$10 + 24 >> 2] | 0;
   $167 = HEAP32[$10 + 12 >> 2] | 0;
   do if (($167 | 0) == ($10 | 0)) {
    $179 = $10 + 16 | 0;
    $180 = $179 + 4 | 0;
    $181 = HEAP32[$180 >> 2] | 0;
    if (!$181) {
     $183 = HEAP32[$179 >> 2] | 0;
     if (!$183) {
      $$3398 = 0;
      break;
     } else {
      $$1396$ph = $183;
      $$1400$ph = $179;
     }
    } else {
     $$1396$ph = $181;
     $$1400$ph = $180;
    }
    $$1396 = $$1396$ph;
    $$1400 = $$1400$ph;
    while (1) {
     $185 = $$1396 + 20 | 0;
     $186 = HEAP32[$185 >> 2] | 0;
     if (!$186) {
      $188 = $$1396 + 16 | 0;
      $189 = HEAP32[$188 >> 2] | 0;
      if (!$189) break; else {
       $$1396$be = $189;
       $$1400$be = $188;
      }
     } else {
      $$1396$be = $186;
      $$1400$be = $185;
     }
     $$1396 = $$1396$be;
     $$1400 = $$1400$be;
    }
    if ((HEAP32[14084] | 0) >>> 0 > $$1400 >>> 0) _abort(); else {
     HEAP32[$$1400 >> 2] = 0;
     $$3398 = $$1396;
     break;
    }
   } else {
    $170 = HEAP32[$10 + 8 >> 2] | 0;
    if ((HEAP32[14084] | 0) >>> 0 > $170 >>> 0) _abort();
    $173 = $170 + 12 | 0;
    if ((HEAP32[$173 >> 2] | 0) != ($10 | 0)) _abort();
    $176 = $167 + 8 | 0;
    if ((HEAP32[$176 >> 2] | 0) == ($10 | 0)) {
     HEAP32[$173 >> 2] = $167;
     HEAP32[$176 >> 2] = $170;
     $$3398 = $167;
     break;
    } else _abort();
   } while (0);
   if ($165 | 0) {
    $195 = HEAP32[$10 + 28 >> 2] | 0;
    $196 = 56624 + ($195 << 2) | 0;
    do if ((HEAP32[$196 >> 2] | 0) == ($10 | 0)) {
     HEAP32[$196 >> 2] = $$3398;
     if (!$$3398) {
      HEAP32[14081] = HEAP32[14081] & ~(1 << $195);
      break L111;
     }
    } else if ((HEAP32[14084] | 0) >>> 0 > $165 >>> 0) _abort(); else {
     $205 = $165 + 16 | 0;
     HEAP32[((HEAP32[$205 >> 2] | 0) == ($10 | 0) ? $205 : $165 + 20 | 0) >> 2] = $$3398;
     if (!$$3398) break L111; else break;
    } while (0);
    $210 = HEAP32[14084] | 0;
    if ($210 >>> 0 > $$3398 >>> 0) _abort();
    HEAP32[$$3398 + 24 >> 2] = $165;
    $213 = $10 + 16 | 0;
    $214 = HEAP32[$213 >> 2] | 0;
    do if ($214 | 0) if ($210 >>> 0 > $214 >>> 0) _abort(); else {
     HEAP32[$$3398 + 16 >> 2] = $214;
     HEAP32[$214 + 24 >> 2] = $$3398;
     break;
    } while (0);
    $220 = HEAP32[$213 + 4 >> 2] | 0;
    if ($220 | 0) if ((HEAP32[14084] | 0) >>> 0 > $220 >>> 0) _abort(); else {
     HEAP32[$$3398 + 20 >> 2] = $220;
     HEAP32[$220 + 24 >> 2] = $$3398;
     break;
    }
   }
  } while (0);
  HEAP32[$$1 + 4 >> 2] = $137 | 1;
  HEAP32[$113 + $137 >> 2] = $137;
  if (($$1 | 0) == (HEAP32[14085] | 0)) {
   HEAP32[14082] = $137;
   return;
  } else $$2 = $137;
 } else {
  HEAP32[$115 >> 2] = $116 & -2;
  HEAP32[$$1 + 4 >> 2] = $$1380 | 1;
  HEAP32[$113 + $$1380 >> 2] = $$1380;
  $$2 = $$1380;
 }
 $235 = $$2 >>> 3;
 if ($$2 >>> 0 < 256) {
  $238 = 56360 + ($235 << 1 << 2) | 0;
  $239 = HEAP32[14080] | 0;
  $240 = 1 << $235;
  if (!($239 & $240)) {
   HEAP32[14080] = $239 | $240;
   $$0401 = $238;
   $$pre$phiZ2D = $238 + 8 | 0;
  } else {
   $244 = $238 + 8 | 0;
   $245 = HEAP32[$244 >> 2] | 0;
   if ((HEAP32[14084] | 0) >>> 0 > $245 >>> 0) _abort(); else {
    $$0401 = $245;
    $$pre$phiZ2D = $244;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$$0401 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$0401;
  HEAP32[$$1 + 12 >> 2] = $238;
  return;
 }
 $251 = $$2 >>> 8;
 if (!$251) $$0394 = 0; else if ($$2 >>> 0 > 16777215) $$0394 = 31; else {
  $256 = ($251 + 1048320 | 0) >>> 16 & 8;
  $257 = $251 << $256;
  $260 = ($257 + 520192 | 0) >>> 16 & 4;
  $262 = $257 << $260;
  $265 = ($262 + 245760 | 0) >>> 16 & 2;
  $270 = 14 - ($260 | $256 | $265) + ($262 << $265 >>> 15) | 0;
  $$0394 = $$2 >>> ($270 + 7 | 0) & 1 | $270 << 1;
 }
 $276 = 56624 + ($$0394 << 2) | 0;
 HEAP32[$$1 + 28 >> 2] = $$0394;
 HEAP32[$$1 + 20 >> 2] = 0;
 HEAP32[$$1 + 16 >> 2] = 0;
 $280 = HEAP32[14081] | 0;
 $281 = 1 << $$0394;
 L197 : do if (!($280 & $281)) {
  HEAP32[14081] = $280 | $281;
  HEAP32[$276 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $276;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
 } else {
  $288 = HEAP32[$276 >> 2] | 0;
  L200 : do if ((HEAP32[$288 + 4 >> 2] & -8 | 0) == ($$2 | 0)) $$0382$lcssa = $288; else {
   $$0381438 = $$2 << (($$0394 | 0) == 31 ? 0 : 25 - ($$0394 >>> 1) | 0);
   $$0382437 = $288;
   while (1) {
    $305 = $$0382437 + 16 + ($$0381438 >>> 31 << 2) | 0;
    $300 = HEAP32[$305 >> 2] | 0;
    if (!$300) break;
    if ((HEAP32[$300 + 4 >> 2] & -8 | 0) == ($$2 | 0)) {
     $$0382$lcssa = $300;
     break L200;
    } else {
     $$0381438 = $$0381438 << 1;
     $$0382437 = $300;
    }
   }
   if ((HEAP32[14084] | 0) >>> 0 > $305 >>> 0) _abort(); else {
    HEAP32[$305 >> 2] = $$1;
    HEAP32[$$1 + 24 >> 2] = $$0382437;
    HEAP32[$$1 + 12 >> 2] = $$1;
    HEAP32[$$1 + 8 >> 2] = $$1;
    break L197;
   }
  } while (0);
  $312 = $$0382$lcssa + 8 | 0;
  $313 = HEAP32[$312 >> 2] | 0;
  $314 = HEAP32[14084] | 0;
  if ($314 >>> 0 <= $313 >>> 0 & $314 >>> 0 <= $$0382$lcssa >>> 0) {
   HEAP32[$313 + 12 >> 2] = $$1;
   HEAP32[$312 >> 2] = $$1;
   HEAP32[$$1 + 8 >> 2] = $313;
   HEAP32[$$1 + 12 >> 2] = $$0382$lcssa;
   HEAP32[$$1 + 24 >> 2] = 0;
   break;
  } else _abort();
 } while (0);
 $323 = (HEAP32[14088] | 0) + -1 | 0;
 HEAP32[14088] = $323;
 if ($323 | 0) return;
 $$0211$in$i = 56776;
 while (1) {
  $$0211$i = HEAP32[$$0211$in$i >> 2] | 0;
  if (!$$0211$i) break; else $$0211$in$i = $$0211$i + 8 | 0;
 }
 HEAP32[14088] = -1;
 return;
}

function _arLabelingSubEWZ($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0373 = 0, $$0374 = 0, $$0376 = 0, $$0378 = 0, $$0380 = 0, $$0384 = 0, $$0387 = 0, $$0392 = 0, $$0395 = 0, $$0399 = 0, $$1 = 0, $$1375 = 0, $$1377 = 0, $$1379 = 0, $$1381 = 0, $$1385 = 0, $$1388 = 0, $$1393 = 0, $$1396 = 0, $$1400 = 0, $$2 = 0, $$2382 = 0, $$2386 = 0, $$2389 = 0, $$2394 = 0, $$2397 = 0, $$3 = 0, $$3383 = 0, $$3390 = 0, $$3398 = 0, $$4 = 0, $$4391 = 0, $$5 = 0, $$6 = 0, $103 = 0, $106 = 0, $121 = 0, $123 = 0, $125 = 0, $129 = 0, $13 = 0, $133 = 0, $136 = 0, $138 = 0, $142 = 0, $146 = 0, $150 = 0, $155 = 0, $157 = 0, $161 = 0, $165 = 0, $169 = 0, $175 = 0, $178 = 0, $180 = 0, $184 = 0, $188 = 0, $19 = 0, $192 = 0, $195 = 0, $20 = 0, $200 = 0, $224 = 0, $226 = 0, $232 = 0, $235 = 0, $236 = 0, $242 = 0, $254 = 0, $255 = 0, $258 = 0, $265 = 0, $266 = 0, $27 = 0, $274 = 0, $277 = 0, $278 = 0, $282 = 0, $285 = 0, $289 = 0, $292 = 0, $296 = 0, $299 = 0, $303 = 0, $306 = 0, $310 = 0.0, $311 = 0, $312 = 0, $316 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0, $43 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $65 = 0, $80 = 0, $82 = 0, $84 = 0, $88 = 0, $92 = 0, $98 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0376 = $5;
 $$0387 = 0;
 $$0395 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 while (1) {
  if (($$0387 | 0) >= ($1 | 0)) break;
  HEAP16[$$0395 >> 1] = 0;
  HEAP16[$$0376 >> 1] = 0;
  $$0376 = $$0376 + 2 | 0;
  $$0387 = $$0387 + 1 | 0;
  $$0395 = $$0395 + 2 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1377 = $5;
 $$1388 = 0;
 $$1396 = $5 + ($13 << 1) | 0;
 while (1) {
  if (($$1388 | 0) >= ($2 | 0)) break;
  HEAP16[$$1396 >> 1] = 0;
  HEAP16[$$1377 >> 1] = 0;
  $$1377 = $$1377 + ($1 << 1) | 0;
  $$1388 = $$1388 + 1 | 0;
  $$1396 = $$1396 + ($1 << 1) | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $27 = 0 - $1 | 0;
 $$0373 = $0 + $20 | 0;
 $$0374 = $3 + $20 | 0;
 $$0384 = 1;
 $$0392 = 0;
 $$0399 = (HEAP32[$4 + 4 >> 2] | 0) + $20 | 0;
 $$2397 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0384 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0373;
  $$1375 = $$0374;
  $$1393 = $$0392;
  $$1400 = $$0399;
  $$2389 = 1;
  $$3398 = $$2397;
  while (1) {
   if (($$2389 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0) > (HEAPU8[$$1375 >> 0] | 0)) {
    HEAP8[$$1400 >> 0] = -1;
    $33 = $$3398 + ($27 << 1) | 0;
    $34 = HEAP16[$33 >> 1] | 0;
    if ($34 << 16 >> 16 > 0) {
     HEAP16[$$3398 >> 1] = $34;
     $37 = ($34 << 16 >> 16) * 7 | 0;
     $39 = $4 + 1310736 + ($37 + -7 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 1;
     $43 = $4 + 1310736 + ($37 + -6 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$2389;
     $47 = $4 + 1310736 + ($37 + -5 << 2) | 0;
     HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + $$0384;
     HEAP32[$4 + 1310736 + ($37 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $53 = HEAP16[$33 + 2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $57 = HEAP16[$33 + -2 >> 1] | 0;
    $58 = $57 << 16 >> 16;
    $59 = $57 << 16 >> 16 > 0;
    if ($53 << 16 >> 16 <= 0) {
     if ($59) {
      HEAP16[$$3398 >> 1] = $57;
      $155 = $58 * 7 | 0;
      $157 = $4 + 1310736 + ($155 + -7 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + 1;
      $161 = $4 + 1310736 + ($155 + -6 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$2389;
      $165 = $4 + 1310736 + ($155 + -5 << 2) | 0;
      HEAP32[$165 >> 2] = (HEAP32[$165 >> 2] | 0) + $$0384;
      $169 = $4 + 1310736 + ($155 + -3 << 2) | 0;
      if ((HEAP32[$169 >> 2] | 0) < ($$2389 | 0)) HEAP32[$169 >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($155 + -1 << 2) >> 2] = $$0384;
      $$2394 = $$1393;
      break;
     }
     $175 = HEAP16[$$3398 + -2 >> 1] | 0;
     if ($175 << 16 >> 16 > 0) {
      HEAP16[$$3398 >> 1] = $175;
      $178 = ($175 << 16 >> 16) * 7 | 0;
      $180 = $4 + 1310736 + ($178 + -7 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + 1;
      $184 = $4 + 1310736 + ($178 + -6 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$2389;
      $188 = $4 + 1310736 + ($178 + -5 << 2) | 0;
      HEAP32[$188 >> 2] = (HEAP32[$188 >> 2] | 0) + $$0384;
      $192 = $4 + 1310736 + ($178 + -3 << 2) | 0;
      if ((HEAP32[$192 >> 2] | 0) >= ($$2389 | 0)) {
       $$2394 = $$1393;
       break;
      }
      HEAP32[$192 >> 2] = $$2389;
      $$2394 = $$1393;
      break;
     } else {
      $195 = $$1393 + 1 | 0;
      if (($$1393 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3398 >> 1] = $195;
      HEAP32[$4 + 1179664 + ($$1393 << 2) >> 2] = $195 << 16 >> 16;
      $200 = $$1393 * 7 | 0;
      HEAP32[$4 + 1310736 + ($200 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($200 + 1 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 2 << 2) >> 2] = $$0384;
      HEAP32[$4 + 1310736 + ($200 + 3 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 4 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 5 << 2) >> 2] = $$0384;
      HEAP32[$4 + 1310736 + ($200 + 6 << 2) >> 2] = $$0384;
      $$2394 = $195;
      break;
     }
    }
    if ($59) {
     $62 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     $65 = HEAP32[$4 + 1179664 + ($58 + -1 << 2) >> 2] | 0;
     L36 : do if (($62 | 0) > ($65 | 0)) {
      HEAP16[$$3398 >> 1] = $65;
      $$0378 = $19;
      $$0380 = 0;
      while (1) {
       if (($$0380 | 0) >= ($$1393 | 0)) {
        $80 = $65;
        break L36;
       }
       if ((HEAP32[$$0378 >> 2] | 0) == ($62 | 0)) HEAP32[$$0378 >> 2] = $65;
       $$0378 = $$0378 + 4 | 0;
       $$0380 = $$0380 + 1 | 0;
      }
     } else {
      HEAP16[$$3398 >> 1] = $62;
      if (($62 | 0) < ($65 | 0)) {
       $$1379 = $19;
       $$1381 = 0;
       while (1) {
        if (($$1381 | 0) >= ($$1393 | 0)) {
         $80 = $62;
         break L36;
        }
        if ((HEAP32[$$1379 >> 2] | 0) == ($65 | 0)) HEAP32[$$1379 >> 2] = $62;
        $$1379 = $$1379 + 4 | 0;
        $$1381 = $$1381 + 1 | 0;
       }
      } else $80 = $62;
     } while (0);
     $82 = ($80 << 16 >> 16) * 7 | 0;
     $84 = $4 + 1310736 + ($82 + -7 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
     $88 = $4 + 1310736 + ($82 + -6 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$2389;
     $92 = $4 + 1310736 + ($82 + -5 << 2) | 0;
     HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + $$0384;
     HEAP32[$4 + 1310736 + ($82 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $98 = HEAP16[$$3398 + -2 >> 1] | 0;
    if ($98 << 16 >> 16 <= 0) {
     HEAP16[$$3398 >> 1] = $53;
     $136 = $54 * 7 | 0;
     $138 = $4 + 1310736 + ($136 + -7 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + 1;
     $142 = $4 + 1310736 + ($136 + -6 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$2389;
     $146 = $4 + 1310736 + ($136 + -5 << 2) | 0;
     HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + $$0384;
     $150 = $4 + 1310736 + ($136 + -4 << 2) | 0;
     if ((HEAP32[$150 >> 2] | 0) > ($$2389 | 0)) HEAP32[$150 >> 2] = $$2389;
     HEAP32[$4 + 1310736 + ($136 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $103 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
    $106 = HEAP32[$4 + 1179664 + (($98 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($103 | 0) > ($106 | 0)) {
     HEAP16[$$3398 >> 1] = $106;
     $$2 = $19;
     $$2382 = 0;
     while (1) {
      if (($$2382 | 0) >= ($$1393 | 0)) {
       $121 = $106;
       break L60;
      }
      if ((HEAP32[$$2 >> 2] | 0) == ($103 | 0)) HEAP32[$$2 >> 2] = $106;
      $$2 = $$2 + 4 | 0;
      $$2382 = $$2382 + 1 | 0;
     }
    } else {
     HEAP16[$$3398 >> 1] = $103;
     if (($103 | 0) < ($106 | 0)) {
      $$3 = $19;
      $$3383 = 0;
      while (1) {
       if (($$3383 | 0) >= ($$1393 | 0)) {
        $121 = $103;
        break L60;
       }
       if ((HEAP32[$$3 >> 2] | 0) == ($106 | 0)) HEAP32[$$3 >> 2] = $103;
       $$3 = $$3 + 4 | 0;
       $$3383 = $$3383 + 1 | 0;
      }
     } else $121 = $103;
    } while (0);
    $123 = ($121 << 16 >> 16) * 7 | 0;
    $125 = $4 + 1310736 + ($123 + -7 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + 1;
    $129 = $4 + 1310736 + ($123 + -6 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$2389;
    $133 = $4 + 1310736 + ($123 + -5 << 2) | 0;
    HEAP32[$133 >> 2] = (HEAP32[$133 >> 2] | 0) + $$0384;
    $$2394 = $$1393;
   } else {
    HEAP16[$$3398 >> 1] = 0;
    HEAP8[$$1400 >> 0] = 0;
    $$2394 = $$1393;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1375 = $$1375 + 1 | 0;
   $$1393 = $$2394;
   $$1400 = $$1400 + 1 | 0;
   $$2389 = $$2389 + 1 | 0;
   $$3398 = $$3398 + 2 | 0;
  }
  $$0373 = $$1 + 2 | 0;
  $$0374 = $$1375 + 2 | 0;
  $$0384 = $$0384 + 1 | 0;
  $$0392 = $$1393;
  $$0399 = $$1400 + 2 | 0;
  $$2397 = $$3398 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $224 = $4 + 12 | 0;
  $$1385 = 1;
  $$3390 = 1;
  $$4 = $19;
  while (1) {
   if (($$3390 | 0) > ($$0392 | 0)) break;
   $226 = HEAP32[$$4 >> 2] | 0;
   if (($226 | 0) == ($$3390 | 0)) {
    $$2386 = $$1385 + 1 | 0;
    $232 = $$1385;
   } else {
    $$2386 = $$1385;
    $232 = HEAP32[$4 + 1179664 + ($226 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $232;
   $$1385 = $$2386;
   $$3390 = $$3390 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $235 = $4 + 8 | 0;
  $236 = $$1385 + -1 | 0;
  HEAP32[$235 >> 2] = $236;
  if (!$236) $$0 = 0; else {
   _memset($224 | 0, 0, $236 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $236 << 4 | 0) | 0;
   $$4391 = 0;
   while (1) {
    if (($$4391 | 0) >= ($236 | 0)) break;
    $242 = $$4391 << 2;
    HEAP32[$4 + 131084 + ($242 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($242 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($242 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($242 | 3) << 2) >> 2] = 0;
    $$4391 = $$4391 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0392 | 0)) break;
    $254 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $255 = $$5 * 7 | 0;
    $258 = $4 + 12 + ($254 << 2) | 0;
    HEAP32[$258 >> 2] = (HEAP32[$258 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($255 << 2) >> 2] | 0);
    $265 = $254 << 1;
    $266 = $4 + 655376 + ($265 << 3) | 0;
    HEAPF64[$266 >> 3] = +HEAPF64[$266 >> 3] + +(HEAP32[$4 + 1310736 + ($255 + 1 << 2) >> 2] | 0);
    $274 = $4 + 655376 + (($265 | 1) << 3) | 0;
    HEAPF64[$274 >> 3] = +HEAPF64[$274 >> 3] + +(HEAP32[$4 + 1310736 + ($255 + 2 << 2) >> 2] | 0);
    $277 = $254 << 2;
    $278 = $4 + 131084 + ($277 << 2) | 0;
    $282 = HEAP32[$4 + 1310736 + ($255 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$278 >> 2] | 0) > ($282 | 0)) HEAP32[$278 >> 2] = $282;
    $285 = $4 + 131084 + (($277 | 1) << 2) | 0;
    $289 = HEAP32[$4 + 1310736 + ($255 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$285 >> 2] | 0) < ($289 | 0)) HEAP32[$285 >> 2] = $289;
    $292 = $4 + 131084 + (($277 | 2) << 2) | 0;
    $296 = HEAP32[$4 + 1310736 + ($255 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$292 >> 2] | 0) > ($296 | 0)) HEAP32[$292 >> 2] = $296;
    $299 = $4 + 131084 + (($277 | 3) << 2) | 0;
    $303 = HEAP32[$4 + 1310736 + ($255 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$299 >> 2] | 0) < ($303 | 0)) HEAP32[$299 >> 2] = $303;
    $$5 = $$5 + 1 | 0;
   }
   $306 = HEAP32[$235 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($306 | 0)) {
     $$0 = 0;
     break L80;
    }
    $310 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $311 = $$6 << 1;
    $312 = $4 + 655376 + ($311 << 3) | 0;
    HEAPF64[$312 >> 3] = +HEAPF64[$312 >> 3] / $310;
    $316 = $4 + 655376 + (($311 | 1) << 3) | 0;
    HEAPF64[$316 >> 3] = +HEAPF64[$316 >> 3] / $310;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubEBZ($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0373 = 0, $$0374 = 0, $$0376 = 0, $$0378 = 0, $$0380 = 0, $$0384 = 0, $$0387 = 0, $$0392 = 0, $$0395 = 0, $$0399 = 0, $$1 = 0, $$1375 = 0, $$1377 = 0, $$1379 = 0, $$1381 = 0, $$1385 = 0, $$1388 = 0, $$1393 = 0, $$1396 = 0, $$1400 = 0, $$2 = 0, $$2382 = 0, $$2386 = 0, $$2389 = 0, $$2394 = 0, $$2397 = 0, $$3 = 0, $$3383 = 0, $$3390 = 0, $$3398 = 0, $$4 = 0, $$4391 = 0, $$5 = 0, $$6 = 0, $103 = 0, $106 = 0, $121 = 0, $123 = 0, $125 = 0, $129 = 0, $13 = 0, $133 = 0, $136 = 0, $138 = 0, $142 = 0, $146 = 0, $150 = 0, $155 = 0, $157 = 0, $161 = 0, $165 = 0, $169 = 0, $175 = 0, $178 = 0, $180 = 0, $184 = 0, $188 = 0, $19 = 0, $192 = 0, $195 = 0, $20 = 0, $200 = 0, $224 = 0, $226 = 0, $232 = 0, $235 = 0, $236 = 0, $242 = 0, $254 = 0, $255 = 0, $258 = 0, $265 = 0, $266 = 0, $27 = 0, $274 = 0, $277 = 0, $278 = 0, $282 = 0, $285 = 0, $289 = 0, $292 = 0, $296 = 0, $299 = 0, $303 = 0, $306 = 0, $310 = 0.0, $311 = 0, $312 = 0, $316 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0, $43 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $65 = 0, $80 = 0, $82 = 0, $84 = 0, $88 = 0, $92 = 0, $98 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0376 = $5;
 $$0387 = 0;
 $$0395 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 while (1) {
  if (($$0387 | 0) >= ($1 | 0)) break;
  HEAP16[$$0395 >> 1] = 0;
  HEAP16[$$0376 >> 1] = 0;
  $$0376 = $$0376 + 2 | 0;
  $$0387 = $$0387 + 1 | 0;
  $$0395 = $$0395 + 2 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1377 = $5;
 $$1388 = 0;
 $$1396 = $5 + ($13 << 1) | 0;
 while (1) {
  if (($$1388 | 0) >= ($2 | 0)) break;
  HEAP16[$$1396 >> 1] = 0;
  HEAP16[$$1377 >> 1] = 0;
  $$1377 = $$1377 + ($1 << 1) | 0;
  $$1388 = $$1388 + 1 | 0;
  $$1396 = $$1396 + ($1 << 1) | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $27 = 0 - $1 | 0;
 $$0373 = $0 + $20 | 0;
 $$0374 = $3 + $20 | 0;
 $$0384 = 1;
 $$0392 = 0;
 $$0399 = (HEAP32[$4 + 4 >> 2] | 0) + $20 | 0;
 $$2397 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0384 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0373;
  $$1375 = $$0374;
  $$1393 = $$0392;
  $$1400 = $$0399;
  $$2389 = 1;
  $$3398 = $$2397;
  while (1) {
   if (($$2389 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0) > (HEAPU8[$$1375 >> 0] | 0)) {
    HEAP16[$$3398 >> 1] = 0;
    HEAP8[$$1400 >> 0] = 0;
    $$2394 = $$1393;
   } else {
    HEAP8[$$1400 >> 0] = -1;
    $33 = $$3398 + ($27 << 1) | 0;
    $34 = HEAP16[$33 >> 1] | 0;
    if ($34 << 16 >> 16 > 0) {
     HEAP16[$$3398 >> 1] = $34;
     $37 = ($34 << 16 >> 16) * 7 | 0;
     $39 = $4 + 1310736 + ($37 + -7 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 1;
     $43 = $4 + 1310736 + ($37 + -6 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$2389;
     $47 = $4 + 1310736 + ($37 + -5 << 2) | 0;
     HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + $$0384;
     HEAP32[$4 + 1310736 + ($37 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $53 = HEAP16[$33 + 2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $57 = HEAP16[$33 + -2 >> 1] | 0;
    $58 = $57 << 16 >> 16;
    $59 = $57 << 16 >> 16 > 0;
    if ($53 << 16 >> 16 <= 0) {
     if ($59) {
      HEAP16[$$3398 >> 1] = $57;
      $155 = $58 * 7 | 0;
      $157 = $4 + 1310736 + ($155 + -7 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + 1;
      $161 = $4 + 1310736 + ($155 + -6 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$2389;
      $165 = $4 + 1310736 + ($155 + -5 << 2) | 0;
      HEAP32[$165 >> 2] = (HEAP32[$165 >> 2] | 0) + $$0384;
      $169 = $4 + 1310736 + ($155 + -3 << 2) | 0;
      if ((HEAP32[$169 >> 2] | 0) < ($$2389 | 0)) HEAP32[$169 >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($155 + -1 << 2) >> 2] = $$0384;
      $$2394 = $$1393;
      break;
     }
     $175 = HEAP16[$$3398 + -2 >> 1] | 0;
     if ($175 << 16 >> 16 > 0) {
      HEAP16[$$3398 >> 1] = $175;
      $178 = ($175 << 16 >> 16) * 7 | 0;
      $180 = $4 + 1310736 + ($178 + -7 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + 1;
      $184 = $4 + 1310736 + ($178 + -6 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$2389;
      $188 = $4 + 1310736 + ($178 + -5 << 2) | 0;
      HEAP32[$188 >> 2] = (HEAP32[$188 >> 2] | 0) + $$0384;
      $192 = $4 + 1310736 + ($178 + -3 << 2) | 0;
      if ((HEAP32[$192 >> 2] | 0) >= ($$2389 | 0)) {
       $$2394 = $$1393;
       break;
      }
      HEAP32[$192 >> 2] = $$2389;
      $$2394 = $$1393;
      break;
     } else {
      $195 = $$1393 + 1 | 0;
      if (($$1393 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3398 >> 1] = $195;
      HEAP32[$4 + 1179664 + ($$1393 << 2) >> 2] = $195 << 16 >> 16;
      $200 = $$1393 * 7 | 0;
      HEAP32[$4 + 1310736 + ($200 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($200 + 1 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 2 << 2) >> 2] = $$0384;
      HEAP32[$4 + 1310736 + ($200 + 3 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 4 << 2) >> 2] = $$2389;
      HEAP32[$4 + 1310736 + ($200 + 5 << 2) >> 2] = $$0384;
      HEAP32[$4 + 1310736 + ($200 + 6 << 2) >> 2] = $$0384;
      $$2394 = $195;
      break;
     }
    }
    if ($59) {
     $62 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     $65 = HEAP32[$4 + 1179664 + ($58 + -1 << 2) >> 2] | 0;
     L37 : do if (($62 | 0) > ($65 | 0)) {
      HEAP16[$$3398 >> 1] = $65;
      $$0378 = $19;
      $$0380 = 0;
      while (1) {
       if (($$0380 | 0) >= ($$1393 | 0)) {
        $80 = $65;
        break L37;
       }
       if ((HEAP32[$$0378 >> 2] | 0) == ($62 | 0)) HEAP32[$$0378 >> 2] = $65;
       $$0378 = $$0378 + 4 | 0;
       $$0380 = $$0380 + 1 | 0;
      }
     } else {
      HEAP16[$$3398 >> 1] = $62;
      if (($62 | 0) < ($65 | 0)) {
       $$1379 = $19;
       $$1381 = 0;
       while (1) {
        if (($$1381 | 0) >= ($$1393 | 0)) {
         $80 = $62;
         break L37;
        }
        if ((HEAP32[$$1379 >> 2] | 0) == ($65 | 0)) HEAP32[$$1379 >> 2] = $62;
        $$1379 = $$1379 + 4 | 0;
        $$1381 = $$1381 + 1 | 0;
       }
      } else $80 = $62;
     } while (0);
     $82 = ($80 << 16 >> 16) * 7 | 0;
     $84 = $4 + 1310736 + ($82 + -7 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
     $88 = $4 + 1310736 + ($82 + -6 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$2389;
     $92 = $4 + 1310736 + ($82 + -5 << 2) | 0;
     HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + $$0384;
     HEAP32[$4 + 1310736 + ($82 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $98 = HEAP16[$$3398 + -2 >> 1] | 0;
    if ($98 << 16 >> 16 <= 0) {
     HEAP16[$$3398 >> 1] = $53;
     $136 = $54 * 7 | 0;
     $138 = $4 + 1310736 + ($136 + -7 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + 1;
     $142 = $4 + 1310736 + ($136 + -6 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$2389;
     $146 = $4 + 1310736 + ($136 + -5 << 2) | 0;
     HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + $$0384;
     $150 = $4 + 1310736 + ($136 + -4 << 2) | 0;
     if ((HEAP32[$150 >> 2] | 0) > ($$2389 | 0)) HEAP32[$150 >> 2] = $$2389;
     HEAP32[$4 + 1310736 + ($136 + -1 << 2) >> 2] = $$0384;
     $$2394 = $$1393;
     break;
    }
    $103 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
    $106 = HEAP32[$4 + 1179664 + (($98 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($103 | 0) > ($106 | 0)) {
     HEAP16[$$3398 >> 1] = $106;
     $$2 = $19;
     $$2382 = 0;
     while (1) {
      if (($$2382 | 0) >= ($$1393 | 0)) {
       $121 = $106;
       break L61;
      }
      if ((HEAP32[$$2 >> 2] | 0) == ($103 | 0)) HEAP32[$$2 >> 2] = $106;
      $$2 = $$2 + 4 | 0;
      $$2382 = $$2382 + 1 | 0;
     }
    } else {
     HEAP16[$$3398 >> 1] = $103;
     if (($103 | 0) < ($106 | 0)) {
      $$3 = $19;
      $$3383 = 0;
      while (1) {
       if (($$3383 | 0) >= ($$1393 | 0)) {
        $121 = $103;
        break L61;
       }
       if ((HEAP32[$$3 >> 2] | 0) == ($106 | 0)) HEAP32[$$3 >> 2] = $103;
       $$3 = $$3 + 4 | 0;
       $$3383 = $$3383 + 1 | 0;
      }
     } else $121 = $103;
    } while (0);
    $123 = ($121 << 16 >> 16) * 7 | 0;
    $125 = $4 + 1310736 + ($123 + -7 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + 1;
    $129 = $4 + 1310736 + ($123 + -6 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$2389;
    $133 = $4 + 1310736 + ($123 + -5 << 2) | 0;
    HEAP32[$133 >> 2] = (HEAP32[$133 >> 2] | 0) + $$0384;
    $$2394 = $$1393;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1375 = $$1375 + 1 | 0;
   $$1393 = $$2394;
   $$1400 = $$1400 + 1 | 0;
   $$2389 = $$2389 + 1 | 0;
   $$3398 = $$3398 + 2 | 0;
  }
  $$0373 = $$1 + 2 | 0;
  $$0374 = $$1375 + 2 | 0;
  $$0384 = $$0384 + 1 | 0;
  $$0392 = $$1393;
  $$0399 = $$1400 + 2 | 0;
  $$2397 = $$3398 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $224 = $4 + 12 | 0;
  $$1385 = 1;
  $$3390 = 1;
  $$4 = $19;
  while (1) {
   if (($$3390 | 0) > ($$0392 | 0)) break;
   $226 = HEAP32[$$4 >> 2] | 0;
   if (($226 | 0) == ($$3390 | 0)) {
    $$2386 = $$1385 + 1 | 0;
    $232 = $$1385;
   } else {
    $$2386 = $$1385;
    $232 = HEAP32[$4 + 1179664 + ($226 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $232;
   $$1385 = $$2386;
   $$3390 = $$3390 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $235 = $4 + 8 | 0;
  $236 = $$1385 + -1 | 0;
  HEAP32[$235 >> 2] = $236;
  if (!$236) $$0 = 0; else {
   _memset($224 | 0, 0, $236 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $236 << 4 | 0) | 0;
   $$4391 = 0;
   while (1) {
    if (($$4391 | 0) >= ($236 | 0)) break;
    $242 = $$4391 << 2;
    HEAP32[$4 + 131084 + ($242 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($242 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($242 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($242 | 3) << 2) >> 2] = 0;
    $$4391 = $$4391 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0392 | 0)) break;
    $254 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $255 = $$5 * 7 | 0;
    $258 = $4 + 12 + ($254 << 2) | 0;
    HEAP32[$258 >> 2] = (HEAP32[$258 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($255 << 2) >> 2] | 0);
    $265 = $254 << 1;
    $266 = $4 + 655376 + ($265 << 3) | 0;
    HEAPF64[$266 >> 3] = +HEAPF64[$266 >> 3] + +(HEAP32[$4 + 1310736 + ($255 + 1 << 2) >> 2] | 0);
    $274 = $4 + 655376 + (($265 | 1) << 3) | 0;
    HEAPF64[$274 >> 3] = +HEAPF64[$274 >> 3] + +(HEAP32[$4 + 1310736 + ($255 + 2 << 2) >> 2] | 0);
    $277 = $254 << 2;
    $278 = $4 + 131084 + ($277 << 2) | 0;
    $282 = HEAP32[$4 + 1310736 + ($255 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$278 >> 2] | 0) > ($282 | 0)) HEAP32[$278 >> 2] = $282;
    $285 = $4 + 131084 + (($277 | 1) << 2) | 0;
    $289 = HEAP32[$4 + 1310736 + ($255 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$285 >> 2] | 0) < ($289 | 0)) HEAP32[$285 >> 2] = $289;
    $292 = $4 + 131084 + (($277 | 2) << 2) | 0;
    $296 = HEAP32[$4 + 1310736 + ($255 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$292 >> 2] | 0) > ($296 | 0)) HEAP32[$292 >> 2] = $296;
    $299 = $4 + 131084 + (($277 | 3) << 2) | 0;
    $303 = HEAP32[$4 + 1310736 + ($255 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$299 >> 2] | 0) < ($303 | 0)) HEAP32[$299 >> 2] = $303;
    $$5 = $$5 + 1 | 0;
   }
   $306 = HEAP32[$235 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($306 | 0)) {
     $$0 = 0;
     break L80;
    }
    $310 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $311 = $$6 << 1;
    $312 = $4 + 655376 + ($311 << 3) | 0;
    HEAPF64[$312 >> 3] = +HEAPF64[$312 >> 3] / $310;
    $316 = $4 + 655376 + (($311 | 1) << 3) | 0;
    HEAPF64[$316 >> 3] = +HEAPF64[$316 >> 3] / $310;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubEWIC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0369 = 0, $$0370 = 0, $$0372 = 0, $$0374 = 0, $$0378 = 0, $$0382 = 0, $$0385 = 0, $$0390 = 0, $$0393 = 0, $$1 = 0, $$1371 = 0, $$1373 = 0, $$1375 = 0, $$1379 = 0, $$1383 = 0, $$1386 = 0, $$1391 = 0, $$1394 = 0, $$2 = 0, $$2376 = 0, $$2380 = 0, $$2384 = 0, $$2387 = 0, $$2392 = 0, $$3 = 0, $$3377 = 0, $$3381 = 0, $$3388 = 0, $$4 = 0, $$4389 = 0, $$5 = 0, $$6 = 0, $101 = 0, $106 = 0, $109 = 0, $124 = 0, $126 = 0, $128 = 0, $132 = 0, $136 = 0, $139 = 0, $141 = 0, $145 = 0, $149 = 0, $15 = 0, $153 = 0, $158 = 0, $160 = 0, $164 = 0, $168 = 0, $172 = 0, $178 = 0, $181 = 0, $183 = 0, $187 = 0, $191 = 0, $195 = 0, $198 = 0, $203 = 0, $21 = 0, $22 = 0, $226 = 0, $228 = 0, $234 = 0, $237 = 0, $238 = 0, $244 = 0, $256 = 0, $257 = 0, $260 = 0, $267 = 0, $268 = 0, $276 = 0, $279 = 0, $280 = 0, $284 = 0, $287 = 0, $291 = 0, $294 = 0, $298 = 0, $30 = 0, $301 = 0, $305 = 0, $308 = 0, $312 = 0.0, $313 = 0, $314 = 0, $318 = 0, $36 = 0, $37 = 0, $40 = 0, $42 = 0, $46 = 0, $5 = 0, $50 = 0, $56 = 0, $57 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $68 = 0, $7 = 0, $8 = 0, $83 = 0, $85 = 0, $87 = 0, $91 = 0, $95 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = ($1 | 0) / 2 | 0;
 $6 = ($2 | 0) / 2 | 0;
 $7 = HEAP32[$4 >> 2] | 0;
 $8 = $6 + -1 | 0;
 $$0370 = $7;
 $$0372 = $7 + ((Math_imul($8, $5) | 0) << 1) | 0;
 $$0385 = 0;
 while (1) {
  if (($$0385 | 0) >= ($5 | 0)) break;
  HEAP16[$$0372 >> 1] = 0;
  HEAP16[$$0370 >> 1] = 0;
  $$0370 = $$0370 + 2 | 0;
  $$0372 = $$0372 + 2 | 0;
  $$0385 = $$0385 + 1 | 0;
 }
 $15 = $5 + -1 | 0;
 $$1371 = $7;
 $$1373 = $7 + ($15 << 1) | 0;
 $$1386 = 0;
 while (1) {
  if (($$1386 | 0) >= ($6 | 0)) break;
  HEAP16[$$1373 >> 1] = 0;
  HEAP16[$$1371 >> 1] = 0;
  $$1371 = $$1371 + ($5 << 1) | 0;
  $$1373 = $$1373 + ($5 << 1) | 0;
  $$1386 = $$1386 + 1 | 0;
 }
 $21 = $4 + 1179664 | 0;
 $22 = $5 + 1 | 0;
 $30 = 0 - $5 | 0;
 $$0369 = $0 + (($1 << 1) + 2) | 0;
 $$0382 = 1;
 $$0390 = 0;
 $$0393 = (HEAP32[$4 + 4 >> 2] | 0) + $22 | 0;
 $$2 = $7 + ($22 << 1) | 0;
 L9 : while (1) {
  if (($$0382 | 0) >= ($8 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0369;
  $$1391 = $$0390;
  $$1394 = $$0393;
  $$2387 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2387 | 0) >= ($15 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP8[$$1394 >> 0] = -1;
    $36 = $$3 + ($30 << 1) | 0;
    $37 = HEAP16[$36 >> 1] | 0;
    if ($37 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $37;
     $40 = ($37 << 16 >> 16) * 7 | 0;
     $42 = $4 + 1310736 + ($40 + -7 << 2) | 0;
     HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + 1;
     $46 = $4 + 1310736 + ($40 + -6 << 2) | 0;
     HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + $$2387;
     $50 = $4 + 1310736 + ($40 + -5 << 2) | 0;
     HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + $$0382;
     HEAP32[$4 + 1310736 + ($40 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $56 = HEAP16[$36 + 2 >> 1] | 0;
    $57 = $56 << 16 >> 16;
    $60 = HEAP16[$36 + -2 >> 1] | 0;
    $61 = $60 << 16 >> 16;
    $62 = $60 << 16 >> 16 > 0;
    if ($56 << 16 >> 16 <= 0) {
     if ($62) {
      HEAP16[$$3 >> 1] = $60;
      $158 = $61 * 7 | 0;
      $160 = $4 + 1310736 + ($158 + -7 << 2) | 0;
      HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + 1;
      $164 = $4 + 1310736 + ($158 + -6 << 2) | 0;
      HEAP32[$164 >> 2] = (HEAP32[$164 >> 2] | 0) + $$2387;
      $168 = $4 + 1310736 + ($158 + -5 << 2) | 0;
      HEAP32[$168 >> 2] = (HEAP32[$168 >> 2] | 0) + $$0382;
      $172 = $4 + 1310736 + ($158 + -3 << 2) | 0;
      if ((HEAP32[$172 >> 2] | 0) < ($$2387 | 0)) HEAP32[$172 >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($158 + -1 << 2) >> 2] = $$0382;
      $$2392 = $$1391;
      break;
     }
     $178 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($178 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $178;
      $181 = ($178 << 16 >> 16) * 7 | 0;
      $183 = $4 + 1310736 + ($181 + -7 << 2) | 0;
      HEAP32[$183 >> 2] = (HEAP32[$183 >> 2] | 0) + 1;
      $187 = $4 + 1310736 + ($181 + -6 << 2) | 0;
      HEAP32[$187 >> 2] = (HEAP32[$187 >> 2] | 0) + $$2387;
      $191 = $4 + 1310736 + ($181 + -5 << 2) | 0;
      HEAP32[$191 >> 2] = (HEAP32[$191 >> 2] | 0) + $$0382;
      $195 = $4 + 1310736 + ($181 + -3 << 2) | 0;
      if ((HEAP32[$195 >> 2] | 0) >= ($$2387 | 0)) {
       $$2392 = $$1391;
       break;
      }
      HEAP32[$195 >> 2] = $$2387;
      $$2392 = $$1391;
      break;
     } else {
      $198 = $$1391 + 1 | 0;
      if (($$1391 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $198;
      HEAP32[$4 + 1179664 + ($$1391 << 2) >> 2] = $198 << 16 >> 16;
      $203 = $$1391 * 7 | 0;
      HEAP32[$4 + 1310736 + ($203 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($203 + 1 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 2 << 2) >> 2] = $$0382;
      HEAP32[$4 + 1310736 + ($203 + 3 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 4 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 5 << 2) >> 2] = $$0382;
      HEAP32[$4 + 1310736 + ($203 + 6 << 2) >> 2] = $$0382;
      $$2392 = $198;
      break;
     }
    }
    if ($62) {
     $65 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
     $68 = HEAP32[$4 + 1179664 + ($61 + -1 << 2) >> 2] | 0;
     L36 : do if (($65 | 0) > ($68 | 0)) {
      HEAP16[$$3 >> 1] = $68;
      $$0374 = $21;
      $$0378 = 0;
      while (1) {
       if (($$0378 | 0) >= ($$1391 | 0)) {
        $83 = $68;
        break L36;
       }
       if ((HEAP32[$$0374 >> 2] | 0) == ($65 | 0)) HEAP32[$$0374 >> 2] = $68;
       $$0374 = $$0374 + 4 | 0;
       $$0378 = $$0378 + 1 | 0;
      }
     } else {
      HEAP16[$$3 >> 1] = $65;
      if (($65 | 0) < ($68 | 0)) {
       $$1375 = $21;
       $$1379 = 0;
       while (1) {
        if (($$1379 | 0) >= ($$1391 | 0)) {
         $83 = $65;
         break L36;
        }
        if ((HEAP32[$$1375 >> 2] | 0) == ($68 | 0)) HEAP32[$$1375 >> 2] = $65;
        $$1375 = $$1375 + 4 | 0;
        $$1379 = $$1379 + 1 | 0;
       }
      } else $83 = $65;
     } while (0);
     $85 = ($83 << 16 >> 16) * 7 | 0;
     $87 = $4 + 1310736 + ($85 + -7 << 2) | 0;
     HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + 1;
     $91 = $4 + 1310736 + ($85 + -6 << 2) | 0;
     HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + $$2387;
     $95 = $4 + 1310736 + ($85 + -5 << 2) | 0;
     HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + $$0382;
     HEAP32[$4 + 1310736 + ($85 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $101 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($101 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $56;
     $139 = $57 * 7 | 0;
     $141 = $4 + 1310736 + ($139 + -7 << 2) | 0;
     HEAP32[$141 >> 2] = (HEAP32[$141 >> 2] | 0) + 1;
     $145 = $4 + 1310736 + ($139 + -6 << 2) | 0;
     HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + $$2387;
     $149 = $4 + 1310736 + ($139 + -5 << 2) | 0;
     HEAP32[$149 >> 2] = (HEAP32[$149 >> 2] | 0) + $$0382;
     $153 = $4 + 1310736 + ($139 + -4 << 2) | 0;
     if ((HEAP32[$153 >> 2] | 0) > ($$2387 | 0)) HEAP32[$153 >> 2] = $$2387;
     HEAP32[$4 + 1310736 + ($139 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $106 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
    $109 = HEAP32[$4 + 1179664 + (($101 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($106 | 0) > ($109 | 0)) {
     HEAP16[$$3 >> 1] = $109;
     $$2376 = $21;
     $$2380 = 0;
     while (1) {
      if (($$2380 | 0) >= ($$1391 | 0)) {
       $124 = $109;
       break L60;
      }
      if ((HEAP32[$$2376 >> 2] | 0) == ($106 | 0)) HEAP32[$$2376 >> 2] = $109;
      $$2376 = $$2376 + 4 | 0;
      $$2380 = $$2380 + 1 | 0;
     }
    } else {
     HEAP16[$$3 >> 1] = $106;
     if (($106 | 0) < ($109 | 0)) {
      $$3377 = $21;
      $$3381 = 0;
      while (1) {
       if (($$3381 | 0) >= ($$1391 | 0)) {
        $124 = $106;
        break L60;
       }
       if ((HEAP32[$$3377 >> 2] | 0) == ($109 | 0)) HEAP32[$$3377 >> 2] = $106;
       $$3377 = $$3377 + 4 | 0;
       $$3381 = $$3381 + 1 | 0;
      }
     } else $124 = $106;
    } while (0);
    $126 = ($124 << 16 >> 16) * 7 | 0;
    $128 = $4 + 1310736 + ($126 + -7 << 2) | 0;
    HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + 1;
    $132 = $4 + 1310736 + ($126 + -6 << 2) | 0;
    HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + $$2387;
    $136 = $4 + 1310736 + ($126 + -5 << 2) | 0;
    HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + $$0382;
    $$2392 = $$1391;
   } else {
    HEAP16[$$3 >> 1] = 0;
    HEAP8[$$1394 >> 0] = 0;
    $$2392 = $$1391;
   } while (0);
   $$1 = $$1 + 2 | 0;
   $$1391 = $$2392;
   $$1394 = $$1394 + 1 | 0;
   $$2387 = $$2387 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0369 = $$1 + $1 + 4 | 0;
  $$0382 = $$0382 + 1 | 0;
  $$0390 = $$1391;
  $$0393 = $$1394 + 2 | 0;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $226 = $4 + 12 | 0;
  $$1383 = 1;
  $$3388 = 1;
  $$4 = $21;
  while (1) {
   if (($$3388 | 0) > ($$0390 | 0)) break;
   $228 = HEAP32[$$4 >> 2] | 0;
   if (($228 | 0) == ($$3388 | 0)) {
    $$2384 = $$1383 + 1 | 0;
    $234 = $$1383;
   } else {
    $$2384 = $$1383;
    $234 = HEAP32[$4 + 1179664 + ($228 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $234;
   $$1383 = $$2384;
   $$3388 = $$3388 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $237 = $4 + 8 | 0;
  $238 = $$1383 + -1 | 0;
  HEAP32[$237 >> 2] = $238;
  if (!$238) $$0 = 0; else {
   _memset($226 | 0, 0, $238 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $238 << 4 | 0) | 0;
   $$4389 = 0;
   while (1) {
    if (($$4389 | 0) >= ($238 | 0)) break;
    $244 = $$4389 << 2;
    HEAP32[$4 + 131084 + ($244 << 2) >> 2] = $5;
    HEAP32[$4 + 131084 + (($244 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($244 | 2) << 2) >> 2] = $6;
    HEAP32[$4 + 131084 + (($244 | 3) << 2) >> 2] = 0;
    $$4389 = $$4389 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0390 | 0)) break;
    $256 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $257 = $$5 * 7 | 0;
    $260 = $4 + 12 + ($256 << 2) | 0;
    HEAP32[$260 >> 2] = (HEAP32[$260 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($257 << 2) >> 2] | 0);
    $267 = $256 << 1;
    $268 = $4 + 655376 + ($267 << 3) | 0;
    HEAPF64[$268 >> 3] = +HEAPF64[$268 >> 3] + +(HEAP32[$4 + 1310736 + ($257 + 1 << 2) >> 2] | 0);
    $276 = $4 + 655376 + (($267 | 1) << 3) | 0;
    HEAPF64[$276 >> 3] = +HEAPF64[$276 >> 3] + +(HEAP32[$4 + 1310736 + ($257 + 2 << 2) >> 2] | 0);
    $279 = $256 << 2;
    $280 = $4 + 131084 + ($279 << 2) | 0;
    $284 = HEAP32[$4 + 1310736 + ($257 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$280 >> 2] | 0) > ($284 | 0)) HEAP32[$280 >> 2] = $284;
    $287 = $4 + 131084 + (($279 | 1) << 2) | 0;
    $291 = HEAP32[$4 + 1310736 + ($257 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$287 >> 2] | 0) < ($291 | 0)) HEAP32[$287 >> 2] = $291;
    $294 = $4 + 131084 + (($279 | 2) << 2) | 0;
    $298 = HEAP32[$4 + 1310736 + ($257 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$294 >> 2] | 0) > ($298 | 0)) HEAP32[$294 >> 2] = $298;
    $301 = $4 + 131084 + (($279 | 3) << 2) | 0;
    $305 = HEAP32[$4 + 1310736 + ($257 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$301 >> 2] | 0) < ($305 | 0)) HEAP32[$301 >> 2] = $305;
    $$5 = $$5 + 1 | 0;
   }
   $308 = HEAP32[$237 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($308 | 0)) {
     $$0 = 0;
     break L80;
    }
    $312 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $313 = $$6 << 1;
    $314 = $4 + 655376 + ($313 << 3) | 0;
    HEAPF64[$314 >> 3] = +HEAPF64[$314 >> 3] / $312;
    $318 = $4 + 655376 + (($313 | 1) << 3) | 0;
    HEAPF64[$318 >> 3] = +HEAPF64[$318 >> 3] / $312;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubEBIC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0369 = 0, $$0370 = 0, $$0372 = 0, $$0374 = 0, $$0378 = 0, $$0382 = 0, $$0385 = 0, $$0390 = 0, $$0393 = 0, $$1 = 0, $$1371 = 0, $$1373 = 0, $$1375 = 0, $$1379 = 0, $$1383 = 0, $$1386 = 0, $$1391 = 0, $$1394 = 0, $$2 = 0, $$2376 = 0, $$2380 = 0, $$2384 = 0, $$2387 = 0, $$2392 = 0, $$3 = 0, $$3377 = 0, $$3381 = 0, $$3388 = 0, $$4 = 0, $$4389 = 0, $$5 = 0, $$6 = 0, $101 = 0, $106 = 0, $109 = 0, $124 = 0, $126 = 0, $128 = 0, $132 = 0, $136 = 0, $139 = 0, $141 = 0, $145 = 0, $149 = 0, $15 = 0, $153 = 0, $158 = 0, $160 = 0, $164 = 0, $168 = 0, $172 = 0, $178 = 0, $181 = 0, $183 = 0, $187 = 0, $191 = 0, $195 = 0, $198 = 0, $203 = 0, $21 = 0, $22 = 0, $226 = 0, $228 = 0, $234 = 0, $237 = 0, $238 = 0, $244 = 0, $256 = 0, $257 = 0, $260 = 0, $267 = 0, $268 = 0, $276 = 0, $279 = 0, $280 = 0, $284 = 0, $287 = 0, $291 = 0, $294 = 0, $298 = 0, $30 = 0, $301 = 0, $305 = 0, $308 = 0, $312 = 0.0, $313 = 0, $314 = 0, $318 = 0, $36 = 0, $37 = 0, $40 = 0, $42 = 0, $46 = 0, $5 = 0, $50 = 0, $56 = 0, $57 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $65 = 0, $68 = 0, $7 = 0, $8 = 0, $83 = 0, $85 = 0, $87 = 0, $91 = 0, $95 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = ($1 | 0) / 2 | 0;
 $6 = ($2 | 0) / 2 | 0;
 $7 = HEAP32[$4 >> 2] | 0;
 $8 = $6 + -1 | 0;
 $$0370 = $7;
 $$0372 = $7 + ((Math_imul($8, $5) | 0) << 1) | 0;
 $$0385 = 0;
 while (1) {
  if (($$0385 | 0) >= ($5 | 0)) break;
  HEAP16[$$0372 >> 1] = 0;
  HEAP16[$$0370 >> 1] = 0;
  $$0370 = $$0370 + 2 | 0;
  $$0372 = $$0372 + 2 | 0;
  $$0385 = $$0385 + 1 | 0;
 }
 $15 = $5 + -1 | 0;
 $$1371 = $7;
 $$1373 = $7 + ($15 << 1) | 0;
 $$1386 = 0;
 while (1) {
  if (($$1386 | 0) >= ($6 | 0)) break;
  HEAP16[$$1373 >> 1] = 0;
  HEAP16[$$1371 >> 1] = 0;
  $$1371 = $$1371 + ($5 << 1) | 0;
  $$1373 = $$1373 + ($5 << 1) | 0;
  $$1386 = $$1386 + 1 | 0;
 }
 $21 = $4 + 1179664 | 0;
 $22 = $5 + 1 | 0;
 $30 = 0 - $5 | 0;
 $$0369 = $0 + (($1 << 1) + 2) | 0;
 $$0382 = 1;
 $$0390 = 0;
 $$0393 = (HEAP32[$4 + 4 >> 2] | 0) + $22 | 0;
 $$2 = $7 + ($22 << 1) | 0;
 L9 : while (1) {
  if (($$0382 | 0) >= ($8 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0369;
  $$1391 = $$0390;
  $$1394 = $$0393;
  $$2387 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2387 | 0) >= ($15 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP16[$$3 >> 1] = 0;
    HEAP8[$$1394 >> 0] = 0;
    $$2392 = $$1391;
   } else {
    HEAP8[$$1394 >> 0] = -1;
    $36 = $$3 + ($30 << 1) | 0;
    $37 = HEAP16[$36 >> 1] | 0;
    if ($37 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $37;
     $40 = ($37 << 16 >> 16) * 7 | 0;
     $42 = $4 + 1310736 + ($40 + -7 << 2) | 0;
     HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + 1;
     $46 = $4 + 1310736 + ($40 + -6 << 2) | 0;
     HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + $$2387;
     $50 = $4 + 1310736 + ($40 + -5 << 2) | 0;
     HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + $$0382;
     HEAP32[$4 + 1310736 + ($40 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $56 = HEAP16[$36 + 2 >> 1] | 0;
    $57 = $56 << 16 >> 16;
    $60 = HEAP16[$36 + -2 >> 1] | 0;
    $61 = $60 << 16 >> 16;
    $62 = $60 << 16 >> 16 > 0;
    if ($56 << 16 >> 16 <= 0) {
     if ($62) {
      HEAP16[$$3 >> 1] = $60;
      $158 = $61 * 7 | 0;
      $160 = $4 + 1310736 + ($158 + -7 << 2) | 0;
      HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + 1;
      $164 = $4 + 1310736 + ($158 + -6 << 2) | 0;
      HEAP32[$164 >> 2] = (HEAP32[$164 >> 2] | 0) + $$2387;
      $168 = $4 + 1310736 + ($158 + -5 << 2) | 0;
      HEAP32[$168 >> 2] = (HEAP32[$168 >> 2] | 0) + $$0382;
      $172 = $4 + 1310736 + ($158 + -3 << 2) | 0;
      if ((HEAP32[$172 >> 2] | 0) < ($$2387 | 0)) HEAP32[$172 >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($158 + -1 << 2) >> 2] = $$0382;
      $$2392 = $$1391;
      break;
     }
     $178 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($178 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $178;
      $181 = ($178 << 16 >> 16) * 7 | 0;
      $183 = $4 + 1310736 + ($181 + -7 << 2) | 0;
      HEAP32[$183 >> 2] = (HEAP32[$183 >> 2] | 0) + 1;
      $187 = $4 + 1310736 + ($181 + -6 << 2) | 0;
      HEAP32[$187 >> 2] = (HEAP32[$187 >> 2] | 0) + $$2387;
      $191 = $4 + 1310736 + ($181 + -5 << 2) | 0;
      HEAP32[$191 >> 2] = (HEAP32[$191 >> 2] | 0) + $$0382;
      $195 = $4 + 1310736 + ($181 + -3 << 2) | 0;
      if ((HEAP32[$195 >> 2] | 0) >= ($$2387 | 0)) {
       $$2392 = $$1391;
       break;
      }
      HEAP32[$195 >> 2] = $$2387;
      $$2392 = $$1391;
      break;
     } else {
      $198 = $$1391 + 1 | 0;
      if (($$1391 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $198;
      HEAP32[$4 + 1179664 + ($$1391 << 2) >> 2] = $198 << 16 >> 16;
      $203 = $$1391 * 7 | 0;
      HEAP32[$4 + 1310736 + ($203 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($203 + 1 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 2 << 2) >> 2] = $$0382;
      HEAP32[$4 + 1310736 + ($203 + 3 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 4 << 2) >> 2] = $$2387;
      HEAP32[$4 + 1310736 + ($203 + 5 << 2) >> 2] = $$0382;
      HEAP32[$4 + 1310736 + ($203 + 6 << 2) >> 2] = $$0382;
      $$2392 = $198;
      break;
     }
    }
    if ($62) {
     $65 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
     $68 = HEAP32[$4 + 1179664 + ($61 + -1 << 2) >> 2] | 0;
     L37 : do if (($65 | 0) > ($68 | 0)) {
      HEAP16[$$3 >> 1] = $68;
      $$0374 = $21;
      $$0378 = 0;
      while (1) {
       if (($$0378 | 0) >= ($$1391 | 0)) {
        $83 = $68;
        break L37;
       }
       if ((HEAP32[$$0374 >> 2] | 0) == ($65 | 0)) HEAP32[$$0374 >> 2] = $68;
       $$0374 = $$0374 + 4 | 0;
       $$0378 = $$0378 + 1 | 0;
      }
     } else {
      HEAP16[$$3 >> 1] = $65;
      if (($65 | 0) < ($68 | 0)) {
       $$1375 = $21;
       $$1379 = 0;
       while (1) {
        if (($$1379 | 0) >= ($$1391 | 0)) {
         $83 = $65;
         break L37;
        }
        if ((HEAP32[$$1375 >> 2] | 0) == ($68 | 0)) HEAP32[$$1375 >> 2] = $65;
        $$1375 = $$1375 + 4 | 0;
        $$1379 = $$1379 + 1 | 0;
       }
      } else $83 = $65;
     } while (0);
     $85 = ($83 << 16 >> 16) * 7 | 0;
     $87 = $4 + 1310736 + ($85 + -7 << 2) | 0;
     HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + 1;
     $91 = $4 + 1310736 + ($85 + -6 << 2) | 0;
     HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + $$2387;
     $95 = $4 + 1310736 + ($85 + -5 << 2) | 0;
     HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + $$0382;
     HEAP32[$4 + 1310736 + ($85 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $101 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($101 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $56;
     $139 = $57 * 7 | 0;
     $141 = $4 + 1310736 + ($139 + -7 << 2) | 0;
     HEAP32[$141 >> 2] = (HEAP32[$141 >> 2] | 0) + 1;
     $145 = $4 + 1310736 + ($139 + -6 << 2) | 0;
     HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + $$2387;
     $149 = $4 + 1310736 + ($139 + -5 << 2) | 0;
     HEAP32[$149 >> 2] = (HEAP32[$149 >> 2] | 0) + $$0382;
     $153 = $4 + 1310736 + ($139 + -4 << 2) | 0;
     if ((HEAP32[$153 >> 2] | 0) > ($$2387 | 0)) HEAP32[$153 >> 2] = $$2387;
     HEAP32[$4 + 1310736 + ($139 + -1 << 2) >> 2] = $$0382;
     $$2392 = $$1391;
     break;
    }
    $106 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
    $109 = HEAP32[$4 + 1179664 + (($101 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($106 | 0) > ($109 | 0)) {
     HEAP16[$$3 >> 1] = $109;
     $$2376 = $21;
     $$2380 = 0;
     while (1) {
      if (($$2380 | 0) >= ($$1391 | 0)) {
       $124 = $109;
       break L61;
      }
      if ((HEAP32[$$2376 >> 2] | 0) == ($106 | 0)) HEAP32[$$2376 >> 2] = $109;
      $$2376 = $$2376 + 4 | 0;
      $$2380 = $$2380 + 1 | 0;
     }
    } else {
     HEAP16[$$3 >> 1] = $106;
     if (($106 | 0) < ($109 | 0)) {
      $$3377 = $21;
      $$3381 = 0;
      while (1) {
       if (($$3381 | 0) >= ($$1391 | 0)) {
        $124 = $106;
        break L61;
       }
       if ((HEAP32[$$3377 >> 2] | 0) == ($109 | 0)) HEAP32[$$3377 >> 2] = $106;
       $$3377 = $$3377 + 4 | 0;
       $$3381 = $$3381 + 1 | 0;
      }
     } else $124 = $106;
    } while (0);
    $126 = ($124 << 16 >> 16) * 7 | 0;
    $128 = $4 + 1310736 + ($126 + -7 << 2) | 0;
    HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + 1;
    $132 = $4 + 1310736 + ($126 + -6 << 2) | 0;
    HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + $$2387;
    $136 = $4 + 1310736 + ($126 + -5 << 2) | 0;
    HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + $$0382;
    $$2392 = $$1391;
   } while (0);
   $$1 = $$1 + 2 | 0;
   $$1391 = $$2392;
   $$1394 = $$1394 + 1 | 0;
   $$2387 = $$2387 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0369 = $$1 + $1 + 4 | 0;
  $$0382 = $$0382 + 1 | 0;
  $$0390 = $$1391;
  $$0393 = $$1394 + 2 | 0;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $226 = $4 + 12 | 0;
  $$1383 = 1;
  $$3388 = 1;
  $$4 = $21;
  while (1) {
   if (($$3388 | 0) > ($$0390 | 0)) break;
   $228 = HEAP32[$$4 >> 2] | 0;
   if (($228 | 0) == ($$3388 | 0)) {
    $$2384 = $$1383 + 1 | 0;
    $234 = $$1383;
   } else {
    $$2384 = $$1383;
    $234 = HEAP32[$4 + 1179664 + ($228 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $234;
   $$1383 = $$2384;
   $$3388 = $$3388 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $237 = $4 + 8 | 0;
  $238 = $$1383 + -1 | 0;
  HEAP32[$237 >> 2] = $238;
  if (!$238) $$0 = 0; else {
   _memset($226 | 0, 0, $238 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $238 << 4 | 0) | 0;
   $$4389 = 0;
   while (1) {
    if (($$4389 | 0) >= ($238 | 0)) break;
    $244 = $$4389 << 2;
    HEAP32[$4 + 131084 + ($244 << 2) >> 2] = $5;
    HEAP32[$4 + 131084 + (($244 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($244 | 2) << 2) >> 2] = $6;
    HEAP32[$4 + 131084 + (($244 | 3) << 2) >> 2] = 0;
    $$4389 = $$4389 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0390 | 0)) break;
    $256 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $257 = $$5 * 7 | 0;
    $260 = $4 + 12 + ($256 << 2) | 0;
    HEAP32[$260 >> 2] = (HEAP32[$260 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($257 << 2) >> 2] | 0);
    $267 = $256 << 1;
    $268 = $4 + 655376 + ($267 << 3) | 0;
    HEAPF64[$268 >> 3] = +HEAPF64[$268 >> 3] + +(HEAP32[$4 + 1310736 + ($257 + 1 << 2) >> 2] | 0);
    $276 = $4 + 655376 + (($267 | 1) << 3) | 0;
    HEAPF64[$276 >> 3] = +HEAPF64[$276 >> 3] + +(HEAP32[$4 + 1310736 + ($257 + 2 << 2) >> 2] | 0);
    $279 = $256 << 2;
    $280 = $4 + 131084 + ($279 << 2) | 0;
    $284 = HEAP32[$4 + 1310736 + ($257 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$280 >> 2] | 0) > ($284 | 0)) HEAP32[$280 >> 2] = $284;
    $287 = $4 + 131084 + (($279 | 1) << 2) | 0;
    $291 = HEAP32[$4 + 1310736 + ($257 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$287 >> 2] | 0) < ($291 | 0)) HEAP32[$287 >> 2] = $291;
    $294 = $4 + 131084 + (($279 | 2) << 2) | 0;
    $298 = HEAP32[$4 + 1310736 + ($257 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$294 >> 2] | 0) > ($298 | 0)) HEAP32[$294 >> 2] = $298;
    $301 = $4 + 131084 + (($279 | 3) << 2) | 0;
    $305 = HEAP32[$4 + 1310736 + ($257 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$301 >> 2] | 0) < ($305 | 0)) HEAP32[$301 >> 2] = $305;
    $$5 = $$5 + 1 | 0;
   }
   $308 = HEAP32[$237 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($308 | 0)) {
     $$0 = 0;
     break L80;
    }
    $312 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $313 = $$6 << 1;
    $314 = $4 + 655376 + ($313 << 3) | 0;
    HEAPF64[$314 >> 3] = +HEAPF64[$314 >> 3] / $312;
    $318 = $4 + 655376 + (($313 | 1) << 3) | 0;
    HEAPF64[$318 >> 3] = +HEAPF64[$318 >> 3] / $312;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubEWRC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0367 = 0, $$0368 = 0, $$0370 = 0, $$0372 = 0, $$0376 = 0, $$0380 = 0, $$0383 = 0, $$0388 = 0, $$0391 = 0, $$1 = 0, $$1369 = 0, $$1371 = 0, $$1373 = 0, $$1377 = 0, $$1381 = 0, $$1384 = 0, $$1389 = 0, $$1392 = 0, $$2 = 0, $$2374 = 0, $$2378 = 0, $$2382 = 0, $$2385 = 0, $$2390 = 0, $$3 = 0, $$3375 = 0, $$3379 = 0, $$3386 = 0, $$4 = 0, $$4387 = 0, $$5 = 0, $$6 = 0, $102 = 0, $105 = 0, $120 = 0, $122 = 0, $124 = 0, $128 = 0, $13 = 0, $132 = 0, $135 = 0, $137 = 0, $141 = 0, $145 = 0, $149 = 0, $154 = 0, $156 = 0, $160 = 0, $164 = 0, $168 = 0, $174 = 0, $177 = 0, $179 = 0, $183 = 0, $187 = 0, $19 = 0, $191 = 0, $194 = 0, $199 = 0, $20 = 0, $221 = 0, $223 = 0, $229 = 0, $232 = 0, $233 = 0, $239 = 0, $251 = 0, $252 = 0, $255 = 0, $26 = 0, $262 = 0, $263 = 0, $271 = 0, $274 = 0, $275 = 0, $279 = 0, $282 = 0, $286 = 0, $289 = 0, $293 = 0, $296 = 0, $300 = 0, $303 = 0, $307 = 0.0, $308 = 0, $309 = 0, $313 = 0, $32 = 0, $33 = 0, $36 = 0, $38 = 0, $42 = 0, $46 = 0, $5 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $61 = 0, $64 = 0, $79 = 0, $81 = 0, $83 = 0, $87 = 0, $91 = 0, $97 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0368 = $5;
 $$0370 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 $$0383 = 0;
 while (1) {
  if (($$0383 | 0) >= ($1 | 0)) break;
  HEAP16[$$0370 >> 1] = 0;
  HEAP16[$$0368 >> 1] = 0;
  $$0368 = $$0368 + 2 | 0;
  $$0370 = $$0370 + 2 | 0;
  $$0383 = $$0383 + 1 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1369 = $5;
 $$1371 = $5 + ($13 << 1) | 0;
 $$1384 = 0;
 while (1) {
  if (($$1384 | 0) >= ($2 | 0)) break;
  HEAP16[$$1371 >> 1] = 0;
  HEAP16[$$1369 >> 1] = 0;
  $$1369 = $$1369 + ($1 << 1) | 0;
  $$1371 = $$1371 + ($1 << 1) | 0;
  $$1384 = $$1384 + 1 | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $26 = 0 - $1 | 0;
 $$0367 = $0 + $20 | 0;
 $$0380 = 1;
 $$0388 = 0;
 $$0391 = (HEAP32[$4 + 4 >> 2] | 0) + $20 | 0;
 $$2 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0380 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0367;
  $$1389 = $$0388;
  $$1392 = $$0391;
  $$2385 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2385 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP8[$$1392 >> 0] = -1;
    $32 = $$3 + ($26 << 1) | 0;
    $33 = HEAP16[$32 >> 1] | 0;
    if ($33 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $33;
     $36 = ($33 << 16 >> 16) * 7 | 0;
     $38 = $4 + 1310736 + ($36 + -7 << 2) | 0;
     HEAP32[$38 >> 2] = (HEAP32[$38 >> 2] | 0) + 1;
     $42 = $4 + 1310736 + ($36 + -6 << 2) | 0;
     HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + $$2385;
     $46 = $4 + 1310736 + ($36 + -5 << 2) | 0;
     HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + $$0380;
     HEAP32[$4 + 1310736 + ($36 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $52 = HEAP16[$32 + 2 >> 1] | 0;
    $53 = $52 << 16 >> 16;
    $56 = HEAP16[$32 + -2 >> 1] | 0;
    $57 = $56 << 16 >> 16;
    $58 = $56 << 16 >> 16 > 0;
    if ($52 << 16 >> 16 <= 0) {
     if ($58) {
      HEAP16[$$3 >> 1] = $56;
      $154 = $57 * 7 | 0;
      $156 = $4 + 1310736 + ($154 + -7 << 2) | 0;
      HEAP32[$156 >> 2] = (HEAP32[$156 >> 2] | 0) + 1;
      $160 = $4 + 1310736 + ($154 + -6 << 2) | 0;
      HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + $$2385;
      $164 = $4 + 1310736 + ($154 + -5 << 2) | 0;
      HEAP32[$164 >> 2] = (HEAP32[$164 >> 2] | 0) + $$0380;
      $168 = $4 + 1310736 + ($154 + -3 << 2) | 0;
      if ((HEAP32[$168 >> 2] | 0) < ($$2385 | 0)) HEAP32[$168 >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($154 + -1 << 2) >> 2] = $$0380;
      $$2390 = $$1389;
      break;
     }
     $174 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($174 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $174;
      $177 = ($174 << 16 >> 16) * 7 | 0;
      $179 = $4 + 1310736 + ($177 + -7 << 2) | 0;
      HEAP32[$179 >> 2] = (HEAP32[$179 >> 2] | 0) + 1;
      $183 = $4 + 1310736 + ($177 + -6 << 2) | 0;
      HEAP32[$183 >> 2] = (HEAP32[$183 >> 2] | 0) + $$2385;
      $187 = $4 + 1310736 + ($177 + -5 << 2) | 0;
      HEAP32[$187 >> 2] = (HEAP32[$187 >> 2] | 0) + $$0380;
      $191 = $4 + 1310736 + ($177 + -3 << 2) | 0;
      if ((HEAP32[$191 >> 2] | 0) >= ($$2385 | 0)) {
       $$2390 = $$1389;
       break;
      }
      HEAP32[$191 >> 2] = $$2385;
      $$2390 = $$1389;
      break;
     } else {
      $194 = $$1389 + 1 | 0;
      if (($$1389 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $194;
      HEAP32[$4 + 1179664 + ($$1389 << 2) >> 2] = $194 << 16 >> 16;
      $199 = $$1389 * 7 | 0;
      HEAP32[$4 + 1310736 + ($199 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($199 + 1 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 2 << 2) >> 2] = $$0380;
      HEAP32[$4 + 1310736 + ($199 + 3 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 4 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 5 << 2) >> 2] = $$0380;
      HEAP32[$4 + 1310736 + ($199 + 6 << 2) >> 2] = $$0380;
      $$2390 = $194;
      break;
     }
    }
    if ($58) {
     $61 = HEAP32[$4 + 1179664 + ($53 + -1 << 2) >> 2] | 0;
     $64 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
     L36 : do if (($61 | 0) > ($64 | 0)) {
      HEAP16[$$3 >> 1] = $64;
      $$0372 = $19;
      $$0376 = 0;
      while (1) {
       if (($$0376 | 0) >= ($$1389 | 0)) {
        $79 = $64;
        break L36;
       }
       if ((HEAP32[$$0372 >> 2] | 0) == ($61 | 0)) HEAP32[$$0372 >> 2] = $64;
       $$0372 = $$0372 + 4 | 0;
       $$0376 = $$0376 + 1 | 0;
      }
     } else {
      HEAP16[$$3 >> 1] = $61;
      if (($61 | 0) < ($64 | 0)) {
       $$1373 = $19;
       $$1377 = 0;
       while (1) {
        if (($$1377 | 0) >= ($$1389 | 0)) {
         $79 = $61;
         break L36;
        }
        if ((HEAP32[$$1373 >> 2] | 0) == ($64 | 0)) HEAP32[$$1373 >> 2] = $61;
        $$1373 = $$1373 + 4 | 0;
        $$1377 = $$1377 + 1 | 0;
       }
      } else $79 = $61;
     } while (0);
     $81 = ($79 << 16 >> 16) * 7 | 0;
     $83 = $4 + 1310736 + ($81 + -7 << 2) | 0;
     HEAP32[$83 >> 2] = (HEAP32[$83 >> 2] | 0) + 1;
     $87 = $4 + 1310736 + ($81 + -6 << 2) | 0;
     HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + $$2385;
     $91 = $4 + 1310736 + ($81 + -5 << 2) | 0;
     HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + $$0380;
     HEAP32[$4 + 1310736 + ($81 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $97 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($97 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $52;
     $135 = $53 * 7 | 0;
     $137 = $4 + 1310736 + ($135 + -7 << 2) | 0;
     HEAP32[$137 >> 2] = (HEAP32[$137 >> 2] | 0) + 1;
     $141 = $4 + 1310736 + ($135 + -6 << 2) | 0;
     HEAP32[$141 >> 2] = (HEAP32[$141 >> 2] | 0) + $$2385;
     $145 = $4 + 1310736 + ($135 + -5 << 2) | 0;
     HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + $$0380;
     $149 = $4 + 1310736 + ($135 + -4 << 2) | 0;
     if ((HEAP32[$149 >> 2] | 0) > ($$2385 | 0)) HEAP32[$149 >> 2] = $$2385;
     HEAP32[$4 + 1310736 + ($135 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $102 = HEAP32[$4 + 1179664 + ($53 + -1 << 2) >> 2] | 0;
    $105 = HEAP32[$4 + 1179664 + (($97 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($102 | 0) > ($105 | 0)) {
     HEAP16[$$3 >> 1] = $105;
     $$2374 = $19;
     $$2378 = 0;
     while (1) {
      if (($$2378 | 0) >= ($$1389 | 0)) {
       $120 = $105;
       break L60;
      }
      if ((HEAP32[$$2374 >> 2] | 0) == ($102 | 0)) HEAP32[$$2374 >> 2] = $105;
      $$2374 = $$2374 + 4 | 0;
      $$2378 = $$2378 + 1 | 0;
     }
    } else {
     HEAP16[$$3 >> 1] = $102;
     if (($102 | 0) < ($105 | 0)) {
      $$3375 = $19;
      $$3379 = 0;
      while (1) {
       if (($$3379 | 0) >= ($$1389 | 0)) {
        $120 = $102;
        break L60;
       }
       if ((HEAP32[$$3375 >> 2] | 0) == ($105 | 0)) HEAP32[$$3375 >> 2] = $102;
       $$3375 = $$3375 + 4 | 0;
       $$3379 = $$3379 + 1 | 0;
      }
     } else $120 = $102;
    } while (0);
    $122 = ($120 << 16 >> 16) * 7 | 0;
    $124 = $4 + 1310736 + ($122 + -7 << 2) | 0;
    HEAP32[$124 >> 2] = (HEAP32[$124 >> 2] | 0) + 1;
    $128 = $4 + 1310736 + ($122 + -6 << 2) | 0;
    HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + $$2385;
    $132 = $4 + 1310736 + ($122 + -5 << 2) | 0;
    HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + $$0380;
    $$2390 = $$1389;
   } else {
    HEAP16[$$3 >> 1] = 0;
    HEAP8[$$1392 >> 0] = 0;
    $$2390 = $$1389;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1389 = $$2390;
   $$1392 = $$1392 + 1 | 0;
   $$2385 = $$2385 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0367 = $$1 + 2 | 0;
  $$0380 = $$0380 + 1 | 0;
  $$0388 = $$1389;
  $$0391 = $$1392 + 2 | 0;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $221 = $4 + 12 | 0;
  $$1381 = 1;
  $$3386 = 1;
  $$4 = $19;
  while (1) {
   if (($$3386 | 0) > ($$0388 | 0)) break;
   $223 = HEAP32[$$4 >> 2] | 0;
   if (($223 | 0) == ($$3386 | 0)) {
    $$2382 = $$1381 + 1 | 0;
    $229 = $$1381;
   } else {
    $$2382 = $$1381;
    $229 = HEAP32[$4 + 1179664 + ($223 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $229;
   $$1381 = $$2382;
   $$3386 = $$3386 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $232 = $4 + 8 | 0;
  $233 = $$1381 + -1 | 0;
  HEAP32[$232 >> 2] = $233;
  if (!$233) $$0 = 0; else {
   _memset($221 | 0, 0, $233 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $233 << 4 | 0) | 0;
   $$4387 = 0;
   while (1) {
    if (($$4387 | 0) >= ($233 | 0)) break;
    $239 = $$4387 << 2;
    HEAP32[$4 + 131084 + ($239 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($239 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($239 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($239 | 3) << 2) >> 2] = 0;
    $$4387 = $$4387 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0388 | 0)) break;
    $251 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $252 = $$5 * 7 | 0;
    $255 = $4 + 12 + ($251 << 2) | 0;
    HEAP32[$255 >> 2] = (HEAP32[$255 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($252 << 2) >> 2] | 0);
    $262 = $251 << 1;
    $263 = $4 + 655376 + ($262 << 3) | 0;
    HEAPF64[$263 >> 3] = +HEAPF64[$263 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 1 << 2) >> 2] | 0);
    $271 = $4 + 655376 + (($262 | 1) << 3) | 0;
    HEAPF64[$271 >> 3] = +HEAPF64[$271 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 2 << 2) >> 2] | 0);
    $274 = $251 << 2;
    $275 = $4 + 131084 + ($274 << 2) | 0;
    $279 = HEAP32[$4 + 1310736 + ($252 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$275 >> 2] | 0) > ($279 | 0)) HEAP32[$275 >> 2] = $279;
    $282 = $4 + 131084 + (($274 | 1) << 2) | 0;
    $286 = HEAP32[$4 + 1310736 + ($252 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$282 >> 2] | 0) < ($286 | 0)) HEAP32[$282 >> 2] = $286;
    $289 = $4 + 131084 + (($274 | 2) << 2) | 0;
    $293 = HEAP32[$4 + 1310736 + ($252 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$289 >> 2] | 0) > ($293 | 0)) HEAP32[$289 >> 2] = $293;
    $296 = $4 + 131084 + (($274 | 3) << 2) | 0;
    $300 = HEAP32[$4 + 1310736 + ($252 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$296 >> 2] | 0) < ($300 | 0)) HEAP32[$296 >> 2] = $300;
    $$5 = $$5 + 1 | 0;
   }
   $303 = HEAP32[$232 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($303 | 0)) {
     $$0 = 0;
     break L80;
    }
    $307 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $308 = $$6 << 1;
    $309 = $4 + 655376 + ($308 << 3) | 0;
    HEAPF64[$309 >> 3] = +HEAPF64[$309 >> 3] / $307;
    $313 = $4 + 655376 + (($308 | 1) << 3) | 0;
    HEAPF64[$313 >> 3] = +HEAPF64[$313 >> 3] / $307;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubEBRC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0367 = 0, $$0368 = 0, $$0370 = 0, $$0372 = 0, $$0376 = 0, $$0380 = 0, $$0383 = 0, $$0388 = 0, $$0391 = 0, $$1 = 0, $$1369 = 0, $$1371 = 0, $$1373 = 0, $$1377 = 0, $$1381 = 0, $$1384 = 0, $$1389 = 0, $$1392 = 0, $$2 = 0, $$2374 = 0, $$2378 = 0, $$2382 = 0, $$2385 = 0, $$2390 = 0, $$3 = 0, $$3375 = 0, $$3379 = 0, $$3386 = 0, $$4 = 0, $$4387 = 0, $$5 = 0, $$6 = 0, $102 = 0, $105 = 0, $120 = 0, $122 = 0, $124 = 0, $128 = 0, $13 = 0, $132 = 0, $135 = 0, $137 = 0, $141 = 0, $145 = 0, $149 = 0, $154 = 0, $156 = 0, $160 = 0, $164 = 0, $168 = 0, $174 = 0, $177 = 0, $179 = 0, $183 = 0, $187 = 0, $19 = 0, $191 = 0, $194 = 0, $199 = 0, $20 = 0, $221 = 0, $223 = 0, $229 = 0, $232 = 0, $233 = 0, $239 = 0, $251 = 0, $252 = 0, $255 = 0, $26 = 0, $262 = 0, $263 = 0, $271 = 0, $274 = 0, $275 = 0, $279 = 0, $282 = 0, $286 = 0, $289 = 0, $293 = 0, $296 = 0, $300 = 0, $303 = 0, $307 = 0.0, $308 = 0, $309 = 0, $313 = 0, $32 = 0, $33 = 0, $36 = 0, $38 = 0, $42 = 0, $46 = 0, $5 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $61 = 0, $64 = 0, $79 = 0, $81 = 0, $83 = 0, $87 = 0, $91 = 0, $97 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0368 = $5;
 $$0370 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 $$0383 = 0;
 while (1) {
  if (($$0383 | 0) >= ($1 | 0)) break;
  HEAP16[$$0370 >> 1] = 0;
  HEAP16[$$0368 >> 1] = 0;
  $$0368 = $$0368 + 2 | 0;
  $$0370 = $$0370 + 2 | 0;
  $$0383 = $$0383 + 1 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1369 = $5;
 $$1371 = $5 + ($13 << 1) | 0;
 $$1384 = 0;
 while (1) {
  if (($$1384 | 0) >= ($2 | 0)) break;
  HEAP16[$$1371 >> 1] = 0;
  HEAP16[$$1369 >> 1] = 0;
  $$1369 = $$1369 + ($1 << 1) | 0;
  $$1371 = $$1371 + ($1 << 1) | 0;
  $$1384 = $$1384 + 1 | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $26 = 0 - $1 | 0;
 $$0367 = $0 + $20 | 0;
 $$0380 = 1;
 $$0388 = 0;
 $$0391 = (HEAP32[$4 + 4 >> 2] | 0) + $20 | 0;
 $$2 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0380 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0367;
  $$1389 = $$0388;
  $$1392 = $$0391;
  $$2385 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2385 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP16[$$3 >> 1] = 0;
    HEAP8[$$1392 >> 0] = 0;
    $$2390 = $$1389;
   } else {
    HEAP8[$$1392 >> 0] = -1;
    $32 = $$3 + ($26 << 1) | 0;
    $33 = HEAP16[$32 >> 1] | 0;
    if ($33 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $33;
     $36 = ($33 << 16 >> 16) * 7 | 0;
     $38 = $4 + 1310736 + ($36 + -7 << 2) | 0;
     HEAP32[$38 >> 2] = (HEAP32[$38 >> 2] | 0) + 1;
     $42 = $4 + 1310736 + ($36 + -6 << 2) | 0;
     HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + $$2385;
     $46 = $4 + 1310736 + ($36 + -5 << 2) | 0;
     HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + $$0380;
     HEAP32[$4 + 1310736 + ($36 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $52 = HEAP16[$32 + 2 >> 1] | 0;
    $53 = $52 << 16 >> 16;
    $56 = HEAP16[$32 + -2 >> 1] | 0;
    $57 = $56 << 16 >> 16;
    $58 = $56 << 16 >> 16 > 0;
    if ($52 << 16 >> 16 <= 0) {
     if ($58) {
      HEAP16[$$3 >> 1] = $56;
      $154 = $57 * 7 | 0;
      $156 = $4 + 1310736 + ($154 + -7 << 2) | 0;
      HEAP32[$156 >> 2] = (HEAP32[$156 >> 2] | 0) + 1;
      $160 = $4 + 1310736 + ($154 + -6 << 2) | 0;
      HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + $$2385;
      $164 = $4 + 1310736 + ($154 + -5 << 2) | 0;
      HEAP32[$164 >> 2] = (HEAP32[$164 >> 2] | 0) + $$0380;
      $168 = $4 + 1310736 + ($154 + -3 << 2) | 0;
      if ((HEAP32[$168 >> 2] | 0) < ($$2385 | 0)) HEAP32[$168 >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($154 + -1 << 2) >> 2] = $$0380;
      $$2390 = $$1389;
      break;
     }
     $174 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($174 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $174;
      $177 = ($174 << 16 >> 16) * 7 | 0;
      $179 = $4 + 1310736 + ($177 + -7 << 2) | 0;
      HEAP32[$179 >> 2] = (HEAP32[$179 >> 2] | 0) + 1;
      $183 = $4 + 1310736 + ($177 + -6 << 2) | 0;
      HEAP32[$183 >> 2] = (HEAP32[$183 >> 2] | 0) + $$2385;
      $187 = $4 + 1310736 + ($177 + -5 << 2) | 0;
      HEAP32[$187 >> 2] = (HEAP32[$187 >> 2] | 0) + $$0380;
      $191 = $4 + 1310736 + ($177 + -3 << 2) | 0;
      if ((HEAP32[$191 >> 2] | 0) >= ($$2385 | 0)) {
       $$2390 = $$1389;
       break;
      }
      HEAP32[$191 >> 2] = $$2385;
      $$2390 = $$1389;
      break;
     } else {
      $194 = $$1389 + 1 | 0;
      if (($$1389 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $194;
      HEAP32[$4 + 1179664 + ($$1389 << 2) >> 2] = $194 << 16 >> 16;
      $199 = $$1389 * 7 | 0;
      HEAP32[$4 + 1310736 + ($199 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($199 + 1 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 2 << 2) >> 2] = $$0380;
      HEAP32[$4 + 1310736 + ($199 + 3 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 4 << 2) >> 2] = $$2385;
      HEAP32[$4 + 1310736 + ($199 + 5 << 2) >> 2] = $$0380;
      HEAP32[$4 + 1310736 + ($199 + 6 << 2) >> 2] = $$0380;
      $$2390 = $194;
      break;
     }
    }
    if ($58) {
     $61 = HEAP32[$4 + 1179664 + ($53 + -1 << 2) >> 2] | 0;
     $64 = HEAP32[$4 + 1179664 + ($57 + -1 << 2) >> 2] | 0;
     L37 : do if (($61 | 0) > ($64 | 0)) {
      HEAP16[$$3 >> 1] = $64;
      $$0372 = $19;
      $$0376 = 0;
      while (1) {
       if (($$0376 | 0) >= ($$1389 | 0)) {
        $79 = $64;
        break L37;
       }
       if ((HEAP32[$$0372 >> 2] | 0) == ($61 | 0)) HEAP32[$$0372 >> 2] = $64;
       $$0372 = $$0372 + 4 | 0;
       $$0376 = $$0376 + 1 | 0;
      }
     } else {
      HEAP16[$$3 >> 1] = $61;
      if (($61 | 0) < ($64 | 0)) {
       $$1373 = $19;
       $$1377 = 0;
       while (1) {
        if (($$1377 | 0) >= ($$1389 | 0)) {
         $79 = $61;
         break L37;
        }
        if ((HEAP32[$$1373 >> 2] | 0) == ($64 | 0)) HEAP32[$$1373 >> 2] = $61;
        $$1373 = $$1373 + 4 | 0;
        $$1377 = $$1377 + 1 | 0;
       }
      } else $79 = $61;
     } while (0);
     $81 = ($79 << 16 >> 16) * 7 | 0;
     $83 = $4 + 1310736 + ($81 + -7 << 2) | 0;
     HEAP32[$83 >> 2] = (HEAP32[$83 >> 2] | 0) + 1;
     $87 = $4 + 1310736 + ($81 + -6 << 2) | 0;
     HEAP32[$87 >> 2] = (HEAP32[$87 >> 2] | 0) + $$2385;
     $91 = $4 + 1310736 + ($81 + -5 << 2) | 0;
     HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + $$0380;
     HEAP32[$4 + 1310736 + ($81 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $97 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($97 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $52;
     $135 = $53 * 7 | 0;
     $137 = $4 + 1310736 + ($135 + -7 << 2) | 0;
     HEAP32[$137 >> 2] = (HEAP32[$137 >> 2] | 0) + 1;
     $141 = $4 + 1310736 + ($135 + -6 << 2) | 0;
     HEAP32[$141 >> 2] = (HEAP32[$141 >> 2] | 0) + $$2385;
     $145 = $4 + 1310736 + ($135 + -5 << 2) | 0;
     HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + $$0380;
     $149 = $4 + 1310736 + ($135 + -4 << 2) | 0;
     if ((HEAP32[$149 >> 2] | 0) > ($$2385 | 0)) HEAP32[$149 >> 2] = $$2385;
     HEAP32[$4 + 1310736 + ($135 + -1 << 2) >> 2] = $$0380;
     $$2390 = $$1389;
     break;
    }
    $102 = HEAP32[$4 + 1179664 + ($53 + -1 << 2) >> 2] | 0;
    $105 = HEAP32[$4 + 1179664 + (($97 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($102 | 0) > ($105 | 0)) {
     HEAP16[$$3 >> 1] = $105;
     $$2374 = $19;
     $$2378 = 0;
     while (1) {
      if (($$2378 | 0) >= ($$1389 | 0)) {
       $120 = $105;
       break L61;
      }
      if ((HEAP32[$$2374 >> 2] | 0) == ($102 | 0)) HEAP32[$$2374 >> 2] = $105;
      $$2374 = $$2374 + 4 | 0;
      $$2378 = $$2378 + 1 | 0;
     }
    } else {
     HEAP16[$$3 >> 1] = $102;
     if (($102 | 0) < ($105 | 0)) {
      $$3375 = $19;
      $$3379 = 0;
      while (1) {
       if (($$3379 | 0) >= ($$1389 | 0)) {
        $120 = $102;
        break L61;
       }
       if ((HEAP32[$$3375 >> 2] | 0) == ($105 | 0)) HEAP32[$$3375 >> 2] = $102;
       $$3375 = $$3375 + 4 | 0;
       $$3379 = $$3379 + 1 | 0;
      }
     } else $120 = $102;
    } while (0);
    $122 = ($120 << 16 >> 16) * 7 | 0;
    $124 = $4 + 1310736 + ($122 + -7 << 2) | 0;
    HEAP32[$124 >> 2] = (HEAP32[$124 >> 2] | 0) + 1;
    $128 = $4 + 1310736 + ($122 + -6 << 2) | 0;
    HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + $$2385;
    $132 = $4 + 1310736 + ($122 + -5 << 2) | 0;
    HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + $$0380;
    $$2390 = $$1389;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1389 = $$2390;
   $$1392 = $$1392 + 1 | 0;
   $$2385 = $$2385 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0367 = $$1 + 2 | 0;
  $$0380 = $$0380 + 1 | 0;
  $$0388 = $$1389;
  $$0391 = $$1392 + 2 | 0;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $221 = $4 + 12 | 0;
  $$1381 = 1;
  $$3386 = 1;
  $$4 = $19;
  while (1) {
   if (($$3386 | 0) > ($$0388 | 0)) break;
   $223 = HEAP32[$$4 >> 2] | 0;
   if (($223 | 0) == ($$3386 | 0)) {
    $$2382 = $$1381 + 1 | 0;
    $229 = $$1381;
   } else {
    $$2382 = $$1381;
    $229 = HEAP32[$4 + 1179664 + ($223 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $229;
   $$1381 = $$2382;
   $$3386 = $$3386 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $232 = $4 + 8 | 0;
  $233 = $$1381 + -1 | 0;
  HEAP32[$232 >> 2] = $233;
  if (!$233) $$0 = 0; else {
   _memset($221 | 0, 0, $233 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $233 << 4 | 0) | 0;
   $$4387 = 0;
   while (1) {
    if (($$4387 | 0) >= ($233 | 0)) break;
    $239 = $$4387 << 2;
    HEAP32[$4 + 131084 + ($239 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($239 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($239 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($239 | 3) << 2) >> 2] = 0;
    $$4387 = $$4387 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0388 | 0)) break;
    $251 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $252 = $$5 * 7 | 0;
    $255 = $4 + 12 + ($251 << 2) | 0;
    HEAP32[$255 >> 2] = (HEAP32[$255 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($252 << 2) >> 2] | 0);
    $262 = $251 << 1;
    $263 = $4 + 655376 + ($262 << 3) | 0;
    HEAPF64[$263 >> 3] = +HEAPF64[$263 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 1 << 2) >> 2] | 0);
    $271 = $4 + 655376 + (($262 | 1) << 3) | 0;
    HEAPF64[$271 >> 3] = +HEAPF64[$271 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 2 << 2) >> 2] | 0);
    $274 = $251 << 2;
    $275 = $4 + 131084 + ($274 << 2) | 0;
    $279 = HEAP32[$4 + 1310736 + ($252 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$275 >> 2] | 0) > ($279 | 0)) HEAP32[$275 >> 2] = $279;
    $282 = $4 + 131084 + (($274 | 1) << 2) | 0;
    $286 = HEAP32[$4 + 1310736 + ($252 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$282 >> 2] | 0) < ($286 | 0)) HEAP32[$282 >> 2] = $286;
    $289 = $4 + 131084 + (($274 | 2) << 2) | 0;
    $293 = HEAP32[$4 + 1310736 + ($252 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$289 >> 2] | 0) > ($293 | 0)) HEAP32[$289 >> 2] = $293;
    $296 = $4 + 131084 + (($274 | 3) << 2) | 0;
    $300 = HEAP32[$4 + 1310736 + ($252 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$296 >> 2] | 0) < ($300 | 0)) HEAP32[$296 >> 2] = $300;
    $$5 = $$5 + 1 | 0;
   }
   $303 = HEAP32[$232 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($303 | 0)) {
     $$0 = 0;
     break L80;
    }
    $307 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $308 = $$6 << 1;
    $309 = $4 + 655376 + ($308 << 3) | 0;
    HEAPF64[$309 >> 3] = +HEAPF64[$309 >> 3] / $307;
    $313 = $4 + 655376 + (($308 | 1) << 3) | 0;
    HEAPF64[$313 >> 3] = +HEAPF64[$313 >> 3] / $307;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubDWZ($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0364 = 0, $$0365 = 0, $$0367 = 0, $$0369 = 0, $$0371 = 0, $$0375 = 0, $$0378 = 0, $$0383 = 0, $$0386 = 0, $$1 = 0, $$1366 = 0, $$1368 = 0, $$1370 = 0, $$1372 = 0, $$1376 = 0, $$1379 = 0, $$1384 = 0, $$1387 = 0, $$2 = 0, $$2373 = 0, $$2377 = 0, $$2380 = 0, $$2385 = 0, $$2388 = 0, $$3 = 0, $$3374 = 0, $$3381 = 0, $$3389 = 0, $$4 = 0, $$4382 = 0, $$5 = 0, $$6 = 0, $100 = 0, $103 = 0, $118 = 0, $120 = 0, $122 = 0, $126 = 0, $13 = 0, $130 = 0, $133 = 0, $135 = 0, $139 = 0, $143 = 0, $147 = 0, $152 = 0, $154 = 0, $158 = 0, $162 = 0, $166 = 0, $172 = 0, $175 = 0, $177 = 0, $181 = 0, $185 = 0, $189 = 0, $19 = 0, $192 = 0, $197 = 0, $20 = 0, $219 = 0, $221 = 0, $227 = 0, $230 = 0, $231 = 0, $237 = 0, $24 = 0, $249 = 0, $250 = 0, $253 = 0, $260 = 0, $261 = 0, $269 = 0, $272 = 0, $273 = 0, $277 = 0, $280 = 0, $284 = 0, $287 = 0, $291 = 0, $294 = 0, $298 = 0, $30 = 0, $301 = 0, $305 = 0.0, $306 = 0, $307 = 0, $31 = 0, $311 = 0, $34 = 0, $36 = 0, $40 = 0, $44 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $62 = 0, $77 = 0, $79 = 0, $81 = 0, $85 = 0, $89 = 0, $95 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0367 = $5;
 $$0378 = 0;
 $$0386 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 while (1) {
  if (($$0378 | 0) >= ($1 | 0)) break;
  HEAP16[$$0386 >> 1] = 0;
  HEAP16[$$0367 >> 1] = 0;
  $$0367 = $$0367 + 2 | 0;
  $$0378 = $$0378 + 1 | 0;
  $$0386 = $$0386 + 2 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1368 = $5;
 $$1379 = 0;
 $$1387 = $5 + ($13 << 1) | 0;
 while (1) {
  if (($$1379 | 0) >= ($2 | 0)) break;
  HEAP16[$$1387 >> 1] = 0;
  HEAP16[$$1368 >> 1] = 0;
  $$1368 = $$1368 + ($1 << 1) | 0;
  $$1379 = $$1379 + 1 | 0;
  $$1387 = $$1387 + ($1 << 1) | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $24 = 0 - $1 | 0;
 $$0364 = $0 + $20 | 0;
 $$0365 = $3 + $20 | 0;
 $$0375 = 1;
 $$0383 = 0;
 $$2388 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0375 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0364;
  $$1366 = $$0365;
  $$1384 = $$0383;
  $$2380 = 1;
  $$3389 = $$2388;
  while (1) {
   if (($$2380 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0) > (HEAPU8[$$1366 >> 0] | 0)) {
    $30 = $$3389 + ($24 << 1) | 0;
    $31 = HEAP16[$30 >> 1] | 0;
    if ($31 << 16 >> 16 > 0) {
     HEAP16[$$3389 >> 1] = $31;
     $34 = ($31 << 16 >> 16) * 7 | 0;
     $36 = $4 + 1310736 + ($34 + -7 << 2) | 0;
     HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + 1;
     $40 = $4 + 1310736 + ($34 + -6 << 2) | 0;
     HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + $$2380;
     $44 = $4 + 1310736 + ($34 + -5 << 2) | 0;
     HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + $$0375;
     HEAP32[$4 + 1310736 + ($34 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $50 = HEAP16[$30 + 2 >> 1] | 0;
    $51 = $50 << 16 >> 16;
    $54 = HEAP16[$30 + -2 >> 1] | 0;
    $55 = $54 << 16 >> 16;
    $56 = $54 << 16 >> 16 > 0;
    if ($50 << 16 >> 16 <= 0) {
     if ($56) {
      HEAP16[$$3389 >> 1] = $54;
      $152 = $55 * 7 | 0;
      $154 = $4 + 1310736 + ($152 + -7 << 2) | 0;
      HEAP32[$154 >> 2] = (HEAP32[$154 >> 2] | 0) + 1;
      $158 = $4 + 1310736 + ($152 + -6 << 2) | 0;
      HEAP32[$158 >> 2] = (HEAP32[$158 >> 2] | 0) + $$2380;
      $162 = $4 + 1310736 + ($152 + -5 << 2) | 0;
      HEAP32[$162 >> 2] = (HEAP32[$162 >> 2] | 0) + $$0375;
      $166 = $4 + 1310736 + ($152 + -3 << 2) | 0;
      if ((HEAP32[$166 >> 2] | 0) < ($$2380 | 0)) HEAP32[$166 >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($152 + -1 << 2) >> 2] = $$0375;
      $$2385 = $$1384;
      break;
     }
     $172 = HEAP16[$$3389 + -2 >> 1] | 0;
     if ($172 << 16 >> 16 > 0) {
      HEAP16[$$3389 >> 1] = $172;
      $175 = ($172 << 16 >> 16) * 7 | 0;
      $177 = $4 + 1310736 + ($175 + -7 << 2) | 0;
      HEAP32[$177 >> 2] = (HEAP32[$177 >> 2] | 0) + 1;
      $181 = $4 + 1310736 + ($175 + -6 << 2) | 0;
      HEAP32[$181 >> 2] = (HEAP32[$181 >> 2] | 0) + $$2380;
      $185 = $4 + 1310736 + ($175 + -5 << 2) | 0;
      HEAP32[$185 >> 2] = (HEAP32[$185 >> 2] | 0) + $$0375;
      $189 = $4 + 1310736 + ($175 + -3 << 2) | 0;
      if ((HEAP32[$189 >> 2] | 0) >= ($$2380 | 0)) {
       $$2385 = $$1384;
       break;
      }
      HEAP32[$189 >> 2] = $$2380;
      $$2385 = $$1384;
      break;
     } else {
      $192 = $$1384 + 1 | 0;
      if (($$1384 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3389 >> 1] = $192;
      HEAP32[$4 + 1179664 + ($$1384 << 2) >> 2] = $192 << 16 >> 16;
      $197 = $$1384 * 7 | 0;
      HEAP32[$4 + 1310736 + ($197 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($197 + 1 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 2 << 2) >> 2] = $$0375;
      HEAP32[$4 + 1310736 + ($197 + 3 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 4 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 5 << 2) >> 2] = $$0375;
      HEAP32[$4 + 1310736 + ($197 + 6 << 2) >> 2] = $$0375;
      $$2385 = $192;
      break;
     }
    }
    if ($56) {
     $59 = HEAP32[$4 + 1179664 + ($51 + -1 << 2) >> 2] | 0;
     $62 = HEAP32[$4 + 1179664 + ($55 + -1 << 2) >> 2] | 0;
     L36 : do if (($59 | 0) > ($62 | 0)) {
      HEAP16[$$3389 >> 1] = $62;
      $$0369 = $19;
      $$0371 = 0;
      while (1) {
       if (($$0371 | 0) >= ($$1384 | 0)) {
        $77 = $62;
        break L36;
       }
       if ((HEAP32[$$0369 >> 2] | 0) == ($59 | 0)) HEAP32[$$0369 >> 2] = $62;
       $$0369 = $$0369 + 4 | 0;
       $$0371 = $$0371 + 1 | 0;
      }
     } else {
      HEAP16[$$3389 >> 1] = $59;
      if (($59 | 0) < ($62 | 0)) {
       $$1370 = $19;
       $$1372 = 0;
       while (1) {
        if (($$1372 | 0) >= ($$1384 | 0)) {
         $77 = $59;
         break L36;
        }
        if ((HEAP32[$$1370 >> 2] | 0) == ($62 | 0)) HEAP32[$$1370 >> 2] = $59;
        $$1370 = $$1370 + 4 | 0;
        $$1372 = $$1372 + 1 | 0;
       }
      } else $77 = $59;
     } while (0);
     $79 = ($77 << 16 >> 16) * 7 | 0;
     $81 = $4 + 1310736 + ($79 + -7 << 2) | 0;
     HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 1;
     $85 = $4 + 1310736 + ($79 + -6 << 2) | 0;
     HEAP32[$85 >> 2] = (HEAP32[$85 >> 2] | 0) + $$2380;
     $89 = $4 + 1310736 + ($79 + -5 << 2) | 0;
     HEAP32[$89 >> 2] = (HEAP32[$89 >> 2] | 0) + $$0375;
     HEAP32[$4 + 1310736 + ($79 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $95 = HEAP16[$$3389 + -2 >> 1] | 0;
    if ($95 << 16 >> 16 <= 0) {
     HEAP16[$$3389 >> 1] = $50;
     $133 = $51 * 7 | 0;
     $135 = $4 + 1310736 + ($133 + -7 << 2) | 0;
     HEAP32[$135 >> 2] = (HEAP32[$135 >> 2] | 0) + 1;
     $139 = $4 + 1310736 + ($133 + -6 << 2) | 0;
     HEAP32[$139 >> 2] = (HEAP32[$139 >> 2] | 0) + $$2380;
     $143 = $4 + 1310736 + ($133 + -5 << 2) | 0;
     HEAP32[$143 >> 2] = (HEAP32[$143 >> 2] | 0) + $$0375;
     $147 = $4 + 1310736 + ($133 + -4 << 2) | 0;
     if ((HEAP32[$147 >> 2] | 0) > ($$2380 | 0)) HEAP32[$147 >> 2] = $$2380;
     HEAP32[$4 + 1310736 + ($133 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $100 = HEAP32[$4 + 1179664 + ($51 + -1 << 2) >> 2] | 0;
    $103 = HEAP32[$4 + 1179664 + (($95 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($100 | 0) > ($103 | 0)) {
     HEAP16[$$3389 >> 1] = $103;
     $$2 = $19;
     $$2373 = 0;
     while (1) {
      if (($$2373 | 0) >= ($$1384 | 0)) {
       $118 = $103;
       break L60;
      }
      if ((HEAP32[$$2 >> 2] | 0) == ($100 | 0)) HEAP32[$$2 >> 2] = $103;
      $$2 = $$2 + 4 | 0;
      $$2373 = $$2373 + 1 | 0;
     }
    } else {
     HEAP16[$$3389 >> 1] = $100;
     if (($100 | 0) < ($103 | 0)) {
      $$3 = $19;
      $$3374 = 0;
      while (1) {
       if (($$3374 | 0) >= ($$1384 | 0)) {
        $118 = $100;
        break L60;
       }
       if ((HEAP32[$$3 >> 2] | 0) == ($103 | 0)) HEAP32[$$3 >> 2] = $100;
       $$3 = $$3 + 4 | 0;
       $$3374 = $$3374 + 1 | 0;
      }
     } else $118 = $100;
    } while (0);
    $120 = ($118 << 16 >> 16) * 7 | 0;
    $122 = $4 + 1310736 + ($120 + -7 << 2) | 0;
    HEAP32[$122 >> 2] = (HEAP32[$122 >> 2] | 0) + 1;
    $126 = $4 + 1310736 + ($120 + -6 << 2) | 0;
    HEAP32[$126 >> 2] = (HEAP32[$126 >> 2] | 0) + $$2380;
    $130 = $4 + 1310736 + ($120 + -5 << 2) | 0;
    HEAP32[$130 >> 2] = (HEAP32[$130 >> 2] | 0) + $$0375;
    $$2385 = $$1384;
   } else {
    HEAP16[$$3389 >> 1] = 0;
    $$2385 = $$1384;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1366 = $$1366 + 1 | 0;
   $$1384 = $$2385;
   $$2380 = $$2380 + 1 | 0;
   $$3389 = $$3389 + 2 | 0;
  }
  $$0364 = $$1 + 2 | 0;
  $$0365 = $$1366 + 2 | 0;
  $$0375 = $$0375 + 1 | 0;
  $$0383 = $$1384;
  $$2388 = $$3389 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $219 = $4 + 12 | 0;
  $$1376 = 1;
  $$3381 = 1;
  $$4 = $19;
  while (1) {
   if (($$3381 | 0) > ($$0383 | 0)) break;
   $221 = HEAP32[$$4 >> 2] | 0;
   if (($221 | 0) == ($$3381 | 0)) {
    $$2377 = $$1376 + 1 | 0;
    $227 = $$1376;
   } else {
    $$2377 = $$1376;
    $227 = HEAP32[$4 + 1179664 + ($221 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $227;
   $$1376 = $$2377;
   $$3381 = $$3381 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $230 = $4 + 8 | 0;
  $231 = $$1376 + -1 | 0;
  HEAP32[$230 >> 2] = $231;
  if (!$231) $$0 = 0; else {
   _memset($219 | 0, 0, $231 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $231 << 4 | 0) | 0;
   $$4382 = 0;
   while (1) {
    if (($$4382 | 0) >= ($231 | 0)) break;
    $237 = $$4382 << 2;
    HEAP32[$4 + 131084 + ($237 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($237 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($237 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($237 | 3) << 2) >> 2] = 0;
    $$4382 = $$4382 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0383 | 0)) break;
    $249 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $250 = $$5 * 7 | 0;
    $253 = $4 + 12 + ($249 << 2) | 0;
    HEAP32[$253 >> 2] = (HEAP32[$253 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($250 << 2) >> 2] | 0);
    $260 = $249 << 1;
    $261 = $4 + 655376 + ($260 << 3) | 0;
    HEAPF64[$261 >> 3] = +HEAPF64[$261 >> 3] + +(HEAP32[$4 + 1310736 + ($250 + 1 << 2) >> 2] | 0);
    $269 = $4 + 655376 + (($260 | 1) << 3) | 0;
    HEAPF64[$269 >> 3] = +HEAPF64[$269 >> 3] + +(HEAP32[$4 + 1310736 + ($250 + 2 << 2) >> 2] | 0);
    $272 = $249 << 2;
    $273 = $4 + 131084 + ($272 << 2) | 0;
    $277 = HEAP32[$4 + 1310736 + ($250 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$273 >> 2] | 0) > ($277 | 0)) HEAP32[$273 >> 2] = $277;
    $280 = $4 + 131084 + (($272 | 1) << 2) | 0;
    $284 = HEAP32[$4 + 1310736 + ($250 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$280 >> 2] | 0) < ($284 | 0)) HEAP32[$280 >> 2] = $284;
    $287 = $4 + 131084 + (($272 | 2) << 2) | 0;
    $291 = HEAP32[$4 + 1310736 + ($250 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$287 >> 2] | 0) > ($291 | 0)) HEAP32[$287 >> 2] = $291;
    $294 = $4 + 131084 + (($272 | 3) << 2) | 0;
    $298 = HEAP32[$4 + 1310736 + ($250 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$294 >> 2] | 0) < ($298 | 0)) HEAP32[$294 >> 2] = $298;
    $$5 = $$5 + 1 | 0;
   }
   $301 = HEAP32[$230 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($301 | 0)) {
     $$0 = 0;
     break L80;
    }
    $305 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $306 = $$6 << 1;
    $307 = $4 + 655376 + ($306 << 3) | 0;
    HEAPF64[$307 >> 3] = +HEAPF64[$307 >> 3] / $305;
    $311 = $4 + 655376 + (($306 | 1) << 3) | 0;
    HEAPF64[$311 >> 3] = +HEAPF64[$311 >> 3] / $305;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubDBZ($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0364 = 0, $$0365 = 0, $$0367 = 0, $$0369 = 0, $$0371 = 0, $$0375 = 0, $$0378 = 0, $$0383 = 0, $$0386 = 0, $$1 = 0, $$1366 = 0, $$1368 = 0, $$1370 = 0, $$1372 = 0, $$1376 = 0, $$1379 = 0, $$1384 = 0, $$1387 = 0, $$2 = 0, $$2373 = 0, $$2377 = 0, $$2380 = 0, $$2385 = 0, $$2388 = 0, $$3 = 0, $$3374 = 0, $$3381 = 0, $$3389 = 0, $$4 = 0, $$4382 = 0, $$5 = 0, $$6 = 0, $100 = 0, $103 = 0, $118 = 0, $120 = 0, $122 = 0, $126 = 0, $13 = 0, $130 = 0, $133 = 0, $135 = 0, $139 = 0, $143 = 0, $147 = 0, $152 = 0, $154 = 0, $158 = 0, $162 = 0, $166 = 0, $172 = 0, $175 = 0, $177 = 0, $181 = 0, $185 = 0, $189 = 0, $19 = 0, $192 = 0, $197 = 0, $20 = 0, $219 = 0, $221 = 0, $227 = 0, $230 = 0, $231 = 0, $237 = 0, $24 = 0, $249 = 0, $250 = 0, $253 = 0, $260 = 0, $261 = 0, $269 = 0, $272 = 0, $273 = 0, $277 = 0, $280 = 0, $284 = 0, $287 = 0, $291 = 0, $294 = 0, $298 = 0, $30 = 0, $301 = 0, $305 = 0.0, $306 = 0, $307 = 0, $31 = 0, $311 = 0, $34 = 0, $36 = 0, $40 = 0, $44 = 0, $5 = 0, $50 = 0, $51 = 0, $54 = 0, $55 = 0, $56 = 0, $59 = 0, $6 = 0, $62 = 0, $77 = 0, $79 = 0, $81 = 0, $85 = 0, $89 = 0, $95 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0367 = $5;
 $$0378 = 0;
 $$0386 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 while (1) {
  if (($$0378 | 0) >= ($1 | 0)) break;
  HEAP16[$$0386 >> 1] = 0;
  HEAP16[$$0367 >> 1] = 0;
  $$0367 = $$0367 + 2 | 0;
  $$0378 = $$0378 + 1 | 0;
  $$0386 = $$0386 + 2 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1368 = $5;
 $$1379 = 0;
 $$1387 = $5 + ($13 << 1) | 0;
 while (1) {
  if (($$1379 | 0) >= ($2 | 0)) break;
  HEAP16[$$1387 >> 1] = 0;
  HEAP16[$$1368 >> 1] = 0;
  $$1368 = $$1368 + ($1 << 1) | 0;
  $$1379 = $$1379 + 1 | 0;
  $$1387 = $$1387 + ($1 << 1) | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $24 = 0 - $1 | 0;
 $$0364 = $0 + $20 | 0;
 $$0365 = $3 + $20 | 0;
 $$0375 = 1;
 $$0383 = 0;
 $$2388 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0375 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0364;
  $$1366 = $$0365;
  $$1384 = $$0383;
  $$2380 = 1;
  $$3389 = $$2388;
  while (1) {
   if (($$2380 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0) > (HEAPU8[$$1366 >> 0] | 0)) {
    HEAP16[$$3389 >> 1] = 0;
    $$2385 = $$1384;
   } else {
    $30 = $$3389 + ($24 << 1) | 0;
    $31 = HEAP16[$30 >> 1] | 0;
    if ($31 << 16 >> 16 > 0) {
     HEAP16[$$3389 >> 1] = $31;
     $34 = ($31 << 16 >> 16) * 7 | 0;
     $36 = $4 + 1310736 + ($34 + -7 << 2) | 0;
     HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + 1;
     $40 = $4 + 1310736 + ($34 + -6 << 2) | 0;
     HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + $$2380;
     $44 = $4 + 1310736 + ($34 + -5 << 2) | 0;
     HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + $$0375;
     HEAP32[$4 + 1310736 + ($34 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $50 = HEAP16[$30 + 2 >> 1] | 0;
    $51 = $50 << 16 >> 16;
    $54 = HEAP16[$30 + -2 >> 1] | 0;
    $55 = $54 << 16 >> 16;
    $56 = $54 << 16 >> 16 > 0;
    if ($50 << 16 >> 16 <= 0) {
     if ($56) {
      HEAP16[$$3389 >> 1] = $54;
      $152 = $55 * 7 | 0;
      $154 = $4 + 1310736 + ($152 + -7 << 2) | 0;
      HEAP32[$154 >> 2] = (HEAP32[$154 >> 2] | 0) + 1;
      $158 = $4 + 1310736 + ($152 + -6 << 2) | 0;
      HEAP32[$158 >> 2] = (HEAP32[$158 >> 2] | 0) + $$2380;
      $162 = $4 + 1310736 + ($152 + -5 << 2) | 0;
      HEAP32[$162 >> 2] = (HEAP32[$162 >> 2] | 0) + $$0375;
      $166 = $4 + 1310736 + ($152 + -3 << 2) | 0;
      if ((HEAP32[$166 >> 2] | 0) < ($$2380 | 0)) HEAP32[$166 >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($152 + -1 << 2) >> 2] = $$0375;
      $$2385 = $$1384;
      break;
     }
     $172 = HEAP16[$$3389 + -2 >> 1] | 0;
     if ($172 << 16 >> 16 > 0) {
      HEAP16[$$3389 >> 1] = $172;
      $175 = ($172 << 16 >> 16) * 7 | 0;
      $177 = $4 + 1310736 + ($175 + -7 << 2) | 0;
      HEAP32[$177 >> 2] = (HEAP32[$177 >> 2] | 0) + 1;
      $181 = $4 + 1310736 + ($175 + -6 << 2) | 0;
      HEAP32[$181 >> 2] = (HEAP32[$181 >> 2] | 0) + $$2380;
      $185 = $4 + 1310736 + ($175 + -5 << 2) | 0;
      HEAP32[$185 >> 2] = (HEAP32[$185 >> 2] | 0) + $$0375;
      $189 = $4 + 1310736 + ($175 + -3 << 2) | 0;
      if ((HEAP32[$189 >> 2] | 0) >= ($$2380 | 0)) {
       $$2385 = $$1384;
       break;
      }
      HEAP32[$189 >> 2] = $$2380;
      $$2385 = $$1384;
      break;
     } else {
      $192 = $$1384 + 1 | 0;
      if (($$1384 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3389 >> 1] = $192;
      HEAP32[$4 + 1179664 + ($$1384 << 2) >> 2] = $192 << 16 >> 16;
      $197 = $$1384 * 7 | 0;
      HEAP32[$4 + 1310736 + ($197 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($197 + 1 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 2 << 2) >> 2] = $$0375;
      HEAP32[$4 + 1310736 + ($197 + 3 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 4 << 2) >> 2] = $$2380;
      HEAP32[$4 + 1310736 + ($197 + 5 << 2) >> 2] = $$0375;
      HEAP32[$4 + 1310736 + ($197 + 6 << 2) >> 2] = $$0375;
      $$2385 = $192;
      break;
     }
    }
    if ($56) {
     $59 = HEAP32[$4 + 1179664 + ($51 + -1 << 2) >> 2] | 0;
     $62 = HEAP32[$4 + 1179664 + ($55 + -1 << 2) >> 2] | 0;
     L37 : do if (($59 | 0) > ($62 | 0)) {
      HEAP16[$$3389 >> 1] = $62;
      $$0369 = $19;
      $$0371 = 0;
      while (1) {
       if (($$0371 | 0) >= ($$1384 | 0)) {
        $77 = $62;
        break L37;
       }
       if ((HEAP32[$$0369 >> 2] | 0) == ($59 | 0)) HEAP32[$$0369 >> 2] = $62;
       $$0369 = $$0369 + 4 | 0;
       $$0371 = $$0371 + 1 | 0;
      }
     } else {
      HEAP16[$$3389 >> 1] = $59;
      if (($59 | 0) < ($62 | 0)) {
       $$1370 = $19;
       $$1372 = 0;
       while (1) {
        if (($$1372 | 0) >= ($$1384 | 0)) {
         $77 = $59;
         break L37;
        }
        if ((HEAP32[$$1370 >> 2] | 0) == ($62 | 0)) HEAP32[$$1370 >> 2] = $59;
        $$1370 = $$1370 + 4 | 0;
        $$1372 = $$1372 + 1 | 0;
       }
      } else $77 = $59;
     } while (0);
     $79 = ($77 << 16 >> 16) * 7 | 0;
     $81 = $4 + 1310736 + ($79 + -7 << 2) | 0;
     HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 1;
     $85 = $4 + 1310736 + ($79 + -6 << 2) | 0;
     HEAP32[$85 >> 2] = (HEAP32[$85 >> 2] | 0) + $$2380;
     $89 = $4 + 1310736 + ($79 + -5 << 2) | 0;
     HEAP32[$89 >> 2] = (HEAP32[$89 >> 2] | 0) + $$0375;
     HEAP32[$4 + 1310736 + ($79 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $95 = HEAP16[$$3389 + -2 >> 1] | 0;
    if ($95 << 16 >> 16 <= 0) {
     HEAP16[$$3389 >> 1] = $50;
     $133 = $51 * 7 | 0;
     $135 = $4 + 1310736 + ($133 + -7 << 2) | 0;
     HEAP32[$135 >> 2] = (HEAP32[$135 >> 2] | 0) + 1;
     $139 = $4 + 1310736 + ($133 + -6 << 2) | 0;
     HEAP32[$139 >> 2] = (HEAP32[$139 >> 2] | 0) + $$2380;
     $143 = $4 + 1310736 + ($133 + -5 << 2) | 0;
     HEAP32[$143 >> 2] = (HEAP32[$143 >> 2] | 0) + $$0375;
     $147 = $4 + 1310736 + ($133 + -4 << 2) | 0;
     if ((HEAP32[$147 >> 2] | 0) > ($$2380 | 0)) HEAP32[$147 >> 2] = $$2380;
     HEAP32[$4 + 1310736 + ($133 + -1 << 2) >> 2] = $$0375;
     $$2385 = $$1384;
     break;
    }
    $100 = HEAP32[$4 + 1179664 + ($51 + -1 << 2) >> 2] | 0;
    $103 = HEAP32[$4 + 1179664 + (($95 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($100 | 0) > ($103 | 0)) {
     HEAP16[$$3389 >> 1] = $103;
     $$2 = $19;
     $$2373 = 0;
     while (1) {
      if (($$2373 | 0) >= ($$1384 | 0)) {
       $118 = $103;
       break L61;
      }
      if ((HEAP32[$$2 >> 2] | 0) == ($100 | 0)) HEAP32[$$2 >> 2] = $103;
      $$2 = $$2 + 4 | 0;
      $$2373 = $$2373 + 1 | 0;
     }
    } else {
     HEAP16[$$3389 >> 1] = $100;
     if (($100 | 0) < ($103 | 0)) {
      $$3 = $19;
      $$3374 = 0;
      while (1) {
       if (($$3374 | 0) >= ($$1384 | 0)) {
        $118 = $100;
        break L61;
       }
       if ((HEAP32[$$3 >> 2] | 0) == ($103 | 0)) HEAP32[$$3 >> 2] = $100;
       $$3 = $$3 + 4 | 0;
       $$3374 = $$3374 + 1 | 0;
      }
     } else $118 = $100;
    } while (0);
    $120 = ($118 << 16 >> 16) * 7 | 0;
    $122 = $4 + 1310736 + ($120 + -7 << 2) | 0;
    HEAP32[$122 >> 2] = (HEAP32[$122 >> 2] | 0) + 1;
    $126 = $4 + 1310736 + ($120 + -6 << 2) | 0;
    HEAP32[$126 >> 2] = (HEAP32[$126 >> 2] | 0) + $$2380;
    $130 = $4 + 1310736 + ($120 + -5 << 2) | 0;
    HEAP32[$130 >> 2] = (HEAP32[$130 >> 2] | 0) + $$0375;
    $$2385 = $$1384;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1366 = $$1366 + 1 | 0;
   $$1384 = $$2385;
   $$2380 = $$2380 + 1 | 0;
   $$3389 = $$3389 + 2 | 0;
  }
  $$0364 = $$1 + 2 | 0;
  $$0365 = $$1366 + 2 | 0;
  $$0375 = $$0375 + 1 | 0;
  $$0383 = $$1384;
  $$2388 = $$3389 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $219 = $4 + 12 | 0;
  $$1376 = 1;
  $$3381 = 1;
  $$4 = $19;
  while (1) {
   if (($$3381 | 0) > ($$0383 | 0)) break;
   $221 = HEAP32[$$4 >> 2] | 0;
   if (($221 | 0) == ($$3381 | 0)) {
    $$2377 = $$1376 + 1 | 0;
    $227 = $$1376;
   } else {
    $$2377 = $$1376;
    $227 = HEAP32[$4 + 1179664 + ($221 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $227;
   $$1376 = $$2377;
   $$3381 = $$3381 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $230 = $4 + 8 | 0;
  $231 = $$1376 + -1 | 0;
  HEAP32[$230 >> 2] = $231;
  if (!$231) $$0 = 0; else {
   _memset($219 | 0, 0, $231 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $231 << 4 | 0) | 0;
   $$4382 = 0;
   while (1) {
    if (($$4382 | 0) >= ($231 | 0)) break;
    $237 = $$4382 << 2;
    HEAP32[$4 + 131084 + ($237 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($237 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($237 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($237 | 3) << 2) >> 2] = 0;
    $$4382 = $$4382 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0383 | 0)) break;
    $249 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $250 = $$5 * 7 | 0;
    $253 = $4 + 12 + ($249 << 2) | 0;
    HEAP32[$253 >> 2] = (HEAP32[$253 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($250 << 2) >> 2] | 0);
    $260 = $249 << 1;
    $261 = $4 + 655376 + ($260 << 3) | 0;
    HEAPF64[$261 >> 3] = +HEAPF64[$261 >> 3] + +(HEAP32[$4 + 1310736 + ($250 + 1 << 2) >> 2] | 0);
    $269 = $4 + 655376 + (($260 | 1) << 3) | 0;
    HEAPF64[$269 >> 3] = +HEAPF64[$269 >> 3] + +(HEAP32[$4 + 1310736 + ($250 + 2 << 2) >> 2] | 0);
    $272 = $249 << 2;
    $273 = $4 + 131084 + ($272 << 2) | 0;
    $277 = HEAP32[$4 + 1310736 + ($250 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$273 >> 2] | 0) > ($277 | 0)) HEAP32[$273 >> 2] = $277;
    $280 = $4 + 131084 + (($272 | 1) << 2) | 0;
    $284 = HEAP32[$4 + 1310736 + ($250 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$280 >> 2] | 0) < ($284 | 0)) HEAP32[$280 >> 2] = $284;
    $287 = $4 + 131084 + (($272 | 2) << 2) | 0;
    $291 = HEAP32[$4 + 1310736 + ($250 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$287 >> 2] | 0) > ($291 | 0)) HEAP32[$287 >> 2] = $291;
    $294 = $4 + 131084 + (($272 | 3) << 2) | 0;
    $298 = HEAP32[$4 + 1310736 + ($250 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$294 >> 2] | 0) < ($298 | 0)) HEAP32[$294 >> 2] = $298;
    $$5 = $$5 + 1 | 0;
   }
   $301 = HEAP32[$230 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($301 | 0)) {
     $$0 = 0;
     break L80;
    }
    $305 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $306 = $$6 << 1;
    $307 = $4 + 655376 + ($306 << 3) | 0;
    HEAPF64[$307 >> 3] = +HEAPF64[$307 >> 3] / $305;
    $311 = $4 + 655376 + (($306 | 1) << 3) | 0;
    HEAPF64[$311 >> 3] = +HEAPF64[$311 >> 3] / $305;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 $5 = +$5;
 var $103 = 0, $108 = 0, $112 = 0, $114 = 0, $115 = 0, $117 = 0.0, $119 = 0.0, $120 = 0.0, $122 = 0.0, $123 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0.0, $136 = 0, $141 = 0, $145 = 0, $154 = 0, $159 = 0, $16 = 0, $163 = 0, $172 = 0, $177 = 0, $181 = 0, $190 = 0, $195 = 0, $199 = 0, $21 = 0, $210 = 0, $215 = 0, $219 = 0, $25 = 0, $27 = 0, $35 = 0, $40 = 0, $44 = 0, $45 = 0, $46 = 0, $54 = 0, $59 = 0, $6 = 0, $63 = 0, $70 = 0, $75 = 0, $79 = 0, $8 = 0, $87 = 0, $92 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 $8 = ~~+Math_floor(+$4);
 if (($8 | 0) != (~~$4 | 0)) {
  $16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23235) | 0, 23287) | 0, 33528) | 0, 69) | 0, 33535) | 0, 23399) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $16 + (HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($16, $25) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($16) | 0;
  _abort();
 }
 $27 = ~~+Math_floor(+$5);
 if (($27 | 0) != (~~$5 | 0)) {
  $35 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23429) | 0, 23287) | 0, 33528) | 0, 70) | 0, 33535) | 0, 23399) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $35 + (HEAP32[(HEAP32[$35 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $40 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $44 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$40 >> 2] | 0) + 28 >> 2] & 63]($40, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($35, $44) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($35) | 0;
  _abort();
 }
 $45 = $8 + 1 | 0;
 $46 = $27 + 1 | 0;
 if (!(($27 | 0) > -1 & $27 >>> 0 < $2 >>> 0)) {
  $54 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23481) | 0, 23287) | 0, 33528) | 0, 79) | 0, 33535) | 0, 23527) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $54 + (HEAP32[(HEAP32[$54 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $59 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $63 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$59 >> 2] | 0) + 28 >> 2] & 63]($59, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($54, $63) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($54) | 0;
  _abort();
 }
 if ($46 >>> 0 >= $2 >>> 0) {
  $70 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23544) | 0, 23287) | 0, 33528) | 0, 80) | 0, 33535) | 0, 23604) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $70 + (HEAP32[(HEAP32[$70 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $75 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $79 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$75 >> 2] | 0) + 28 >> 2] & 63]($75, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($70, $79) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($70) | 0;
  _abort();
 }
 if (!(($8 | 0) > -1 & $8 >>> 0 < $1 >>> 0)) {
  $87 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23628) | 0, 23287) | 0, 33528) | 0, 81) | 0, 33535) | 0, 23673) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $87 + (HEAP32[(HEAP32[$87 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $92 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $96 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$92 >> 2] | 0) + 28 >> 2] & 63]($92, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($87, $96) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($87) | 0;
  _abort();
 }
 if ($45 >>> 0 >= $1 >>> 0) {
  $103 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23690) | 0, 23287) | 0, 33528) | 0, 82) | 0, 33535) | 0, 23749) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $103 + (HEAP32[(HEAP32[$103 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $108 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $112 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$108 >> 2] | 0) + 28 >> 2] & 63]($108, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($103, $112) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($103) | 0;
  _abort();
 }
 $114 = $0 + (Math_imul($27, $3) | 0) | 0;
 $115 = $114 + $3 | 0;
 $117 = +($45 | 0) - $4;
 $119 = +($46 | 0) - $5;
 $120 = $117 * $119;
 $122 = $4 - +($8 | 0);
 $123 = $122 * $119;
 $125 = $5 - +($27 | 0);
 $126 = $117 * $125;
 $127 = $122 * $125;
 if (!($120 >= 0.0) | !($120 <= 1.0001)) {
  $136 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23773) | 0, 23287) | 0, 33528) | 0, 94) | 0, 33535) | 0, 23820) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $136 + (HEAP32[(HEAP32[$136 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $141 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $145 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$141 >> 2] | 0) + 28 >> 2] & 63]($141, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($136, $145) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($136) | 0;
  _abort();
 }
 if (!($123 >= 0.0) | !($123 <= 1.0001)) {
  $154 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23833) | 0, 23287) | 0, 33528) | 0, 95) | 0, 33535) | 0, 23820) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $154 + (HEAP32[(HEAP32[$154 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $159 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $163 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$159 >> 2] | 0) + 28 >> 2] & 63]($159, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($154, $163) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($154) | 0;
  _abort();
 }
 if (!($126 >= 0.0) | !($126 <= 1.0001)) {
  $172 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23880) | 0, 23287) | 0, 33528) | 0, 96) | 0, 33535) | 0, 23820) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $172 + (HEAP32[(HEAP32[$172 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $177 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $181 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$177 >> 2] | 0) + 28 >> 2] & 63]($177, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($172, $181) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($172) | 0;
  _abort();
 }
 if (!($127 >= 0.0) | !($127 <= 1.0001)) {
  $190 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23927) | 0, 23287) | 0, 33528) | 0, 97) | 0, 33535) | 0, 23820) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $190 + (HEAP32[(HEAP32[$190 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $195 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $199 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$195 >> 2] | 0) + 28 >> 2] & 63]($195, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($190, $199) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($190) | 0;
  _abort();
 }
 if (!($127 + ($126 + ($120 + $123)) <= 1.0001)) {
  $210 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23974) | 0, 23287) | 0, 33528) | 0, 98) | 0, 33535) | 0, 23820) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $210 + (HEAP32[(HEAP32[$210 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $215 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $219 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$215 >> 2] | 0) + 28 >> 2] & 63]($215, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($210, $219) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($210) | 0;
  _abort();
 } else {
  STACKTOP = sp;
  return +($120 * +HEAPF32[$114 + ($8 << 2) >> 2] + $123 * +HEAPF32[$114 + ($45 << 2) >> 2] + $126 * +HEAPF32[$115 + ($8 << 2) >> 2] + $127 * +HEAPF32[$115 + ($45 << 2) >> 2]);
 }
 return +(0.0);
}

function _arLabelingSubDWIC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0360 = 0, $$0361 = 0, $$0363 = 0, $$0365 = 0, $$0369 = 0, $$0373 = 0, $$0376 = 0, $$0381 = 0, $$1 = 0, $$1362 = 0, $$1364 = 0, $$1366 = 0, $$1370 = 0, $$1374 = 0, $$1377 = 0, $$1382 = 0, $$2 = 0, $$2367 = 0, $$2371 = 0, $$2375 = 0, $$2378 = 0, $$2383 = 0, $$3 = 0, $$3368 = 0, $$3372 = 0, $$3379 = 0, $$4 = 0, $$4380 = 0, $$5 = 0, $$6 = 0, $103 = 0, $106 = 0, $121 = 0, $123 = 0, $125 = 0, $129 = 0, $133 = 0, $136 = 0, $138 = 0, $142 = 0, $146 = 0, $15 = 0, $150 = 0, $155 = 0, $157 = 0, $161 = 0, $165 = 0, $169 = 0, $175 = 0, $178 = 0, $180 = 0, $184 = 0, $188 = 0, $192 = 0, $195 = 0, $200 = 0, $21 = 0, $221 = 0, $223 = 0, $229 = 0, $232 = 0, $233 = 0, $239 = 0, $251 = 0, $252 = 0, $255 = 0, $262 = 0, $263 = 0, $27 = 0, $271 = 0, $274 = 0, $275 = 0, $279 = 0, $282 = 0, $286 = 0, $289 = 0, $293 = 0, $296 = 0, $300 = 0, $303 = 0, $307 = 0.0, $308 = 0, $309 = 0, $313 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0, $43 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $65 = 0, $7 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $88 = 0, $92 = 0, $98 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = ($1 | 0) / 2 | 0;
 $6 = ($2 | 0) / 2 | 0;
 $7 = HEAP32[$4 >> 2] | 0;
 $8 = $6 + -1 | 0;
 $$0361 = $7;
 $$0363 = $7 + ((Math_imul($8, $5) | 0) << 1) | 0;
 $$0376 = 0;
 while (1) {
  if (($$0376 | 0) >= ($5 | 0)) break;
  HEAP16[$$0363 >> 1] = 0;
  HEAP16[$$0361 >> 1] = 0;
  $$0361 = $$0361 + 2 | 0;
  $$0363 = $$0363 + 2 | 0;
  $$0376 = $$0376 + 1 | 0;
 }
 $15 = $5 + -1 | 0;
 $$1362 = $7;
 $$1364 = $7 + ($15 << 1) | 0;
 $$1377 = 0;
 while (1) {
  if (($$1377 | 0) >= ($6 | 0)) break;
  HEAP16[$$1364 >> 1] = 0;
  HEAP16[$$1362 >> 1] = 0;
  $$1362 = $$1362 + ($5 << 1) | 0;
  $$1364 = $$1364 + ($5 << 1) | 0;
  $$1377 = $$1377 + 1 | 0;
 }
 $21 = $4 + 1179664 | 0;
 $27 = 0 - $5 | 0;
 $$0360 = $0 + (($1 << 1) + 2) | 0;
 $$0373 = 1;
 $$0381 = 0;
 $$2 = $7 + ($5 + 1 << 1) | 0;
 L9 : while (1) {
  if (($$0373 | 0) >= ($8 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0360;
  $$1382 = $$0381;
  $$2378 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2378 | 0) >= ($15 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    $33 = $$3 + ($27 << 1) | 0;
    $34 = HEAP16[$33 >> 1] | 0;
    if ($34 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $34;
     $37 = ($34 << 16 >> 16) * 7 | 0;
     $39 = $4 + 1310736 + ($37 + -7 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 1;
     $43 = $4 + 1310736 + ($37 + -6 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$2378;
     $47 = $4 + 1310736 + ($37 + -5 << 2) | 0;
     HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + $$0373;
     HEAP32[$4 + 1310736 + ($37 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $53 = HEAP16[$33 + 2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $57 = HEAP16[$33 + -2 >> 1] | 0;
    $58 = $57 << 16 >> 16;
    $59 = $57 << 16 >> 16 > 0;
    if ($53 << 16 >> 16 <= 0) {
     if ($59) {
      HEAP16[$$3 >> 1] = $57;
      $155 = $58 * 7 | 0;
      $157 = $4 + 1310736 + ($155 + -7 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + 1;
      $161 = $4 + 1310736 + ($155 + -6 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$2378;
      $165 = $4 + 1310736 + ($155 + -5 << 2) | 0;
      HEAP32[$165 >> 2] = (HEAP32[$165 >> 2] | 0) + $$0373;
      $169 = $4 + 1310736 + ($155 + -3 << 2) | 0;
      if ((HEAP32[$169 >> 2] | 0) < ($$2378 | 0)) HEAP32[$169 >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($155 + -1 << 2) >> 2] = $$0373;
      $$2383 = $$1382;
      break;
     }
     $175 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($175 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $175;
      $178 = ($175 << 16 >> 16) * 7 | 0;
      $180 = $4 + 1310736 + ($178 + -7 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + 1;
      $184 = $4 + 1310736 + ($178 + -6 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$2378;
      $188 = $4 + 1310736 + ($178 + -5 << 2) | 0;
      HEAP32[$188 >> 2] = (HEAP32[$188 >> 2] | 0) + $$0373;
      $192 = $4 + 1310736 + ($178 + -3 << 2) | 0;
      if ((HEAP32[$192 >> 2] | 0) >= ($$2378 | 0)) {
       $$2383 = $$1382;
       break;
      }
      HEAP32[$192 >> 2] = $$2378;
      $$2383 = $$1382;
      break;
     } else {
      $195 = $$1382 + 1 | 0;
      if (($$1382 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $195;
      HEAP32[$4 + 1179664 + ($$1382 << 2) >> 2] = $195 << 16 >> 16;
      $200 = $$1382 * 7 | 0;
      HEAP32[$4 + 1310736 + ($200 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($200 + 1 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 2 << 2) >> 2] = $$0373;
      HEAP32[$4 + 1310736 + ($200 + 3 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 4 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 5 << 2) >> 2] = $$0373;
      HEAP32[$4 + 1310736 + ($200 + 6 << 2) >> 2] = $$0373;
      $$2383 = $195;
      break;
     }
    }
    if ($59) {
     $62 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     $65 = HEAP32[$4 + 1179664 + ($58 + -1 << 2) >> 2] | 0;
     L36 : do if (($62 | 0) > ($65 | 0)) {
      HEAP16[$$3 >> 1] = $65;
      $$0365 = $21;
      $$0369 = 0;
      while (1) {
       if (($$0369 | 0) >= ($$1382 | 0)) {
        $80 = $65;
        break L36;
       }
       if ((HEAP32[$$0365 >> 2] | 0) == ($62 | 0)) HEAP32[$$0365 >> 2] = $65;
       $$0365 = $$0365 + 4 | 0;
       $$0369 = $$0369 + 1 | 0;
      }
     } else {
      HEAP16[$$3 >> 1] = $62;
      if (($62 | 0) < ($65 | 0)) {
       $$1366 = $21;
       $$1370 = 0;
       while (1) {
        if (($$1370 | 0) >= ($$1382 | 0)) {
         $80 = $62;
         break L36;
        }
        if ((HEAP32[$$1366 >> 2] | 0) == ($65 | 0)) HEAP32[$$1366 >> 2] = $62;
        $$1366 = $$1366 + 4 | 0;
        $$1370 = $$1370 + 1 | 0;
       }
      } else $80 = $62;
     } while (0);
     $82 = ($80 << 16 >> 16) * 7 | 0;
     $84 = $4 + 1310736 + ($82 + -7 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
     $88 = $4 + 1310736 + ($82 + -6 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$2378;
     $92 = $4 + 1310736 + ($82 + -5 << 2) | 0;
     HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + $$0373;
     HEAP32[$4 + 1310736 + ($82 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $98 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($98 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $53;
     $136 = $54 * 7 | 0;
     $138 = $4 + 1310736 + ($136 + -7 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + 1;
     $142 = $4 + 1310736 + ($136 + -6 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$2378;
     $146 = $4 + 1310736 + ($136 + -5 << 2) | 0;
     HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + $$0373;
     $150 = $4 + 1310736 + ($136 + -4 << 2) | 0;
     if ((HEAP32[$150 >> 2] | 0) > ($$2378 | 0)) HEAP32[$150 >> 2] = $$2378;
     HEAP32[$4 + 1310736 + ($136 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $103 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
    $106 = HEAP32[$4 + 1179664 + (($98 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($103 | 0) > ($106 | 0)) {
     HEAP16[$$3 >> 1] = $106;
     $$2367 = $21;
     $$2371 = 0;
     while (1) {
      if (($$2371 | 0) >= ($$1382 | 0)) {
       $121 = $106;
       break L60;
      }
      if ((HEAP32[$$2367 >> 2] | 0) == ($103 | 0)) HEAP32[$$2367 >> 2] = $106;
      $$2367 = $$2367 + 4 | 0;
      $$2371 = $$2371 + 1 | 0;
     }
    } else {
     HEAP16[$$3 >> 1] = $103;
     if (($103 | 0) < ($106 | 0)) {
      $$3368 = $21;
      $$3372 = 0;
      while (1) {
       if (($$3372 | 0) >= ($$1382 | 0)) {
        $121 = $103;
        break L60;
       }
       if ((HEAP32[$$3368 >> 2] | 0) == ($106 | 0)) HEAP32[$$3368 >> 2] = $103;
       $$3368 = $$3368 + 4 | 0;
       $$3372 = $$3372 + 1 | 0;
      }
     } else $121 = $103;
    } while (0);
    $123 = ($121 << 16 >> 16) * 7 | 0;
    $125 = $4 + 1310736 + ($123 + -7 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + 1;
    $129 = $4 + 1310736 + ($123 + -6 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$2378;
    $133 = $4 + 1310736 + ($123 + -5 << 2) | 0;
    HEAP32[$133 >> 2] = (HEAP32[$133 >> 2] | 0) + $$0373;
    $$2383 = $$1382;
   } else {
    HEAP16[$$3 >> 1] = 0;
    $$2383 = $$1382;
   } while (0);
   $$1 = $$1 + 2 | 0;
   $$1382 = $$2383;
   $$2378 = $$2378 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0360 = $$1 + $1 + 4 | 0;
  $$0373 = $$0373 + 1 | 0;
  $$0381 = $$1382;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $221 = $4 + 12 | 0;
  $$1374 = 1;
  $$3379 = 1;
  $$4 = $21;
  while (1) {
   if (($$3379 | 0) > ($$0381 | 0)) break;
   $223 = HEAP32[$$4 >> 2] | 0;
   if (($223 | 0) == ($$3379 | 0)) {
    $$2375 = $$1374 + 1 | 0;
    $229 = $$1374;
   } else {
    $$2375 = $$1374;
    $229 = HEAP32[$4 + 1179664 + ($223 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $229;
   $$1374 = $$2375;
   $$3379 = $$3379 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $232 = $4 + 8 | 0;
  $233 = $$1374 + -1 | 0;
  HEAP32[$232 >> 2] = $233;
  if (!$233) $$0 = 0; else {
   _memset($221 | 0, 0, $233 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $233 << 4 | 0) | 0;
   $$4380 = 0;
   while (1) {
    if (($$4380 | 0) >= ($233 | 0)) break;
    $239 = $$4380 << 2;
    HEAP32[$4 + 131084 + ($239 << 2) >> 2] = $5;
    HEAP32[$4 + 131084 + (($239 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($239 | 2) << 2) >> 2] = $6;
    HEAP32[$4 + 131084 + (($239 | 3) << 2) >> 2] = 0;
    $$4380 = $$4380 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0381 | 0)) break;
    $251 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $252 = $$5 * 7 | 0;
    $255 = $4 + 12 + ($251 << 2) | 0;
    HEAP32[$255 >> 2] = (HEAP32[$255 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($252 << 2) >> 2] | 0);
    $262 = $251 << 1;
    $263 = $4 + 655376 + ($262 << 3) | 0;
    HEAPF64[$263 >> 3] = +HEAPF64[$263 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 1 << 2) >> 2] | 0);
    $271 = $4 + 655376 + (($262 | 1) << 3) | 0;
    HEAPF64[$271 >> 3] = +HEAPF64[$271 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 2 << 2) >> 2] | 0);
    $274 = $251 << 2;
    $275 = $4 + 131084 + ($274 << 2) | 0;
    $279 = HEAP32[$4 + 1310736 + ($252 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$275 >> 2] | 0) > ($279 | 0)) HEAP32[$275 >> 2] = $279;
    $282 = $4 + 131084 + (($274 | 1) << 2) | 0;
    $286 = HEAP32[$4 + 1310736 + ($252 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$282 >> 2] | 0) < ($286 | 0)) HEAP32[$282 >> 2] = $286;
    $289 = $4 + 131084 + (($274 | 2) << 2) | 0;
    $293 = HEAP32[$4 + 1310736 + ($252 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$289 >> 2] | 0) > ($293 | 0)) HEAP32[$289 >> 2] = $293;
    $296 = $4 + 131084 + (($274 | 3) << 2) | 0;
    $300 = HEAP32[$4 + 1310736 + ($252 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$296 >> 2] | 0) < ($300 | 0)) HEAP32[$296 >> 2] = $300;
    $$5 = $$5 + 1 | 0;
   }
   $303 = HEAP32[$232 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($303 | 0)) {
     $$0 = 0;
     break L80;
    }
    $307 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $308 = $$6 << 1;
    $309 = $4 + 655376 + ($308 << 3) | 0;
    HEAPF64[$309 >> 3] = +HEAPF64[$309 >> 3] / $307;
    $313 = $4 + 655376 + (($308 | 1) << 3) | 0;
    HEAPF64[$313 >> 3] = +HEAPF64[$313 >> 3] / $307;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubDBIC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0360 = 0, $$0361 = 0, $$0363 = 0, $$0365 = 0, $$0369 = 0, $$0373 = 0, $$0376 = 0, $$0381 = 0, $$1 = 0, $$1362 = 0, $$1364 = 0, $$1366 = 0, $$1370 = 0, $$1374 = 0, $$1377 = 0, $$1382 = 0, $$2 = 0, $$2367 = 0, $$2371 = 0, $$2375 = 0, $$2378 = 0, $$2383 = 0, $$3 = 0, $$3368 = 0, $$3372 = 0, $$3379 = 0, $$4 = 0, $$4380 = 0, $$5 = 0, $$6 = 0, $103 = 0, $106 = 0, $121 = 0, $123 = 0, $125 = 0, $129 = 0, $133 = 0, $136 = 0, $138 = 0, $142 = 0, $146 = 0, $15 = 0, $150 = 0, $155 = 0, $157 = 0, $161 = 0, $165 = 0, $169 = 0, $175 = 0, $178 = 0, $180 = 0, $184 = 0, $188 = 0, $192 = 0, $195 = 0, $200 = 0, $21 = 0, $221 = 0, $223 = 0, $229 = 0, $232 = 0, $233 = 0, $239 = 0, $251 = 0, $252 = 0, $255 = 0, $262 = 0, $263 = 0, $27 = 0, $271 = 0, $274 = 0, $275 = 0, $279 = 0, $282 = 0, $286 = 0, $289 = 0, $293 = 0, $296 = 0, $300 = 0, $303 = 0, $307 = 0.0, $308 = 0, $309 = 0, $313 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0, $43 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $62 = 0, $65 = 0, $7 = 0, $8 = 0, $80 = 0, $82 = 0, $84 = 0, $88 = 0, $92 = 0, $98 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = ($1 | 0) / 2 | 0;
 $6 = ($2 | 0) / 2 | 0;
 $7 = HEAP32[$4 >> 2] | 0;
 $8 = $6 + -1 | 0;
 $$0361 = $7;
 $$0363 = $7 + ((Math_imul($8, $5) | 0) << 1) | 0;
 $$0376 = 0;
 while (1) {
  if (($$0376 | 0) >= ($5 | 0)) break;
  HEAP16[$$0363 >> 1] = 0;
  HEAP16[$$0361 >> 1] = 0;
  $$0361 = $$0361 + 2 | 0;
  $$0363 = $$0363 + 2 | 0;
  $$0376 = $$0376 + 1 | 0;
 }
 $15 = $5 + -1 | 0;
 $$1362 = $7;
 $$1364 = $7 + ($15 << 1) | 0;
 $$1377 = 0;
 while (1) {
  if (($$1377 | 0) >= ($6 | 0)) break;
  HEAP16[$$1364 >> 1] = 0;
  HEAP16[$$1362 >> 1] = 0;
  $$1362 = $$1362 + ($5 << 1) | 0;
  $$1364 = $$1364 + ($5 << 1) | 0;
  $$1377 = $$1377 + 1 | 0;
 }
 $21 = $4 + 1179664 | 0;
 $27 = 0 - $5 | 0;
 $$0360 = $0 + (($1 << 1) + 2) | 0;
 $$0373 = 1;
 $$0381 = 0;
 $$2 = $7 + ($5 + 1 << 1) | 0;
 L9 : while (1) {
  if (($$0373 | 0) >= ($8 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0360;
  $$1382 = $$0381;
  $$2378 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2378 | 0) >= ($15 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP16[$$3 >> 1] = 0;
    $$2383 = $$1382;
   } else {
    $33 = $$3 + ($27 << 1) | 0;
    $34 = HEAP16[$33 >> 1] | 0;
    if ($34 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $34;
     $37 = ($34 << 16 >> 16) * 7 | 0;
     $39 = $4 + 1310736 + ($37 + -7 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 1;
     $43 = $4 + 1310736 + ($37 + -6 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$2378;
     $47 = $4 + 1310736 + ($37 + -5 << 2) | 0;
     HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + $$0373;
     HEAP32[$4 + 1310736 + ($37 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $53 = HEAP16[$33 + 2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $57 = HEAP16[$33 + -2 >> 1] | 0;
    $58 = $57 << 16 >> 16;
    $59 = $57 << 16 >> 16 > 0;
    if ($53 << 16 >> 16 <= 0) {
     if ($59) {
      HEAP16[$$3 >> 1] = $57;
      $155 = $58 * 7 | 0;
      $157 = $4 + 1310736 + ($155 + -7 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + 1;
      $161 = $4 + 1310736 + ($155 + -6 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$2378;
      $165 = $4 + 1310736 + ($155 + -5 << 2) | 0;
      HEAP32[$165 >> 2] = (HEAP32[$165 >> 2] | 0) + $$0373;
      $169 = $4 + 1310736 + ($155 + -3 << 2) | 0;
      if ((HEAP32[$169 >> 2] | 0) < ($$2378 | 0)) HEAP32[$169 >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($155 + -1 << 2) >> 2] = $$0373;
      $$2383 = $$1382;
      break;
     }
     $175 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($175 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $175;
      $178 = ($175 << 16 >> 16) * 7 | 0;
      $180 = $4 + 1310736 + ($178 + -7 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + 1;
      $184 = $4 + 1310736 + ($178 + -6 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$2378;
      $188 = $4 + 1310736 + ($178 + -5 << 2) | 0;
      HEAP32[$188 >> 2] = (HEAP32[$188 >> 2] | 0) + $$0373;
      $192 = $4 + 1310736 + ($178 + -3 << 2) | 0;
      if ((HEAP32[$192 >> 2] | 0) >= ($$2378 | 0)) {
       $$2383 = $$1382;
       break;
      }
      HEAP32[$192 >> 2] = $$2378;
      $$2383 = $$1382;
      break;
     } else {
      $195 = $$1382 + 1 | 0;
      if (($$1382 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $195;
      HEAP32[$4 + 1179664 + ($$1382 << 2) >> 2] = $195 << 16 >> 16;
      $200 = $$1382 * 7 | 0;
      HEAP32[$4 + 1310736 + ($200 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($200 + 1 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 2 << 2) >> 2] = $$0373;
      HEAP32[$4 + 1310736 + ($200 + 3 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 4 << 2) >> 2] = $$2378;
      HEAP32[$4 + 1310736 + ($200 + 5 << 2) >> 2] = $$0373;
      HEAP32[$4 + 1310736 + ($200 + 6 << 2) >> 2] = $$0373;
      $$2383 = $195;
      break;
     }
    }
    if ($59) {
     $62 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     $65 = HEAP32[$4 + 1179664 + ($58 + -1 << 2) >> 2] | 0;
     L37 : do if (($62 | 0) > ($65 | 0)) {
      HEAP16[$$3 >> 1] = $65;
      $$0365 = $21;
      $$0369 = 0;
      while (1) {
       if (($$0369 | 0) >= ($$1382 | 0)) {
        $80 = $65;
        break L37;
       }
       if ((HEAP32[$$0365 >> 2] | 0) == ($62 | 0)) HEAP32[$$0365 >> 2] = $65;
       $$0365 = $$0365 + 4 | 0;
       $$0369 = $$0369 + 1 | 0;
      }
     } else {
      HEAP16[$$3 >> 1] = $62;
      if (($62 | 0) < ($65 | 0)) {
       $$1366 = $21;
       $$1370 = 0;
       while (1) {
        if (($$1370 | 0) >= ($$1382 | 0)) {
         $80 = $62;
         break L37;
        }
        if ((HEAP32[$$1366 >> 2] | 0) == ($65 | 0)) HEAP32[$$1366 >> 2] = $62;
        $$1366 = $$1366 + 4 | 0;
        $$1370 = $$1370 + 1 | 0;
       }
      } else $80 = $62;
     } while (0);
     $82 = ($80 << 16 >> 16) * 7 | 0;
     $84 = $4 + 1310736 + ($82 + -7 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
     $88 = $4 + 1310736 + ($82 + -6 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$2378;
     $92 = $4 + 1310736 + ($82 + -5 << 2) | 0;
     HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + $$0373;
     HEAP32[$4 + 1310736 + ($82 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $98 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($98 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $53;
     $136 = $54 * 7 | 0;
     $138 = $4 + 1310736 + ($136 + -7 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + 1;
     $142 = $4 + 1310736 + ($136 + -6 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$2378;
     $146 = $4 + 1310736 + ($136 + -5 << 2) | 0;
     HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + $$0373;
     $150 = $4 + 1310736 + ($136 + -4 << 2) | 0;
     if ((HEAP32[$150 >> 2] | 0) > ($$2378 | 0)) HEAP32[$150 >> 2] = $$2378;
     HEAP32[$4 + 1310736 + ($136 + -1 << 2) >> 2] = $$0373;
     $$2383 = $$1382;
     break;
    }
    $103 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
    $106 = HEAP32[$4 + 1179664 + (($98 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($103 | 0) > ($106 | 0)) {
     HEAP16[$$3 >> 1] = $106;
     $$2367 = $21;
     $$2371 = 0;
     while (1) {
      if (($$2371 | 0) >= ($$1382 | 0)) {
       $121 = $106;
       break L61;
      }
      if ((HEAP32[$$2367 >> 2] | 0) == ($103 | 0)) HEAP32[$$2367 >> 2] = $106;
      $$2367 = $$2367 + 4 | 0;
      $$2371 = $$2371 + 1 | 0;
     }
    } else {
     HEAP16[$$3 >> 1] = $103;
     if (($103 | 0) < ($106 | 0)) {
      $$3368 = $21;
      $$3372 = 0;
      while (1) {
       if (($$3372 | 0) >= ($$1382 | 0)) {
        $121 = $103;
        break L61;
       }
       if ((HEAP32[$$3368 >> 2] | 0) == ($106 | 0)) HEAP32[$$3368 >> 2] = $103;
       $$3368 = $$3368 + 4 | 0;
       $$3372 = $$3372 + 1 | 0;
      }
     } else $121 = $103;
    } while (0);
    $123 = ($121 << 16 >> 16) * 7 | 0;
    $125 = $4 + 1310736 + ($123 + -7 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + 1;
    $129 = $4 + 1310736 + ($123 + -6 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$2378;
    $133 = $4 + 1310736 + ($123 + -5 << 2) | 0;
    HEAP32[$133 >> 2] = (HEAP32[$133 >> 2] | 0) + $$0373;
    $$2383 = $$1382;
   } while (0);
   $$1 = $$1 + 2 | 0;
   $$1382 = $$2383;
   $$2378 = $$2378 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0360 = $$1 + $1 + 4 | 0;
  $$0373 = $$0373 + 1 | 0;
  $$0381 = $$1382;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $221 = $4 + 12 | 0;
  $$1374 = 1;
  $$3379 = 1;
  $$4 = $21;
  while (1) {
   if (($$3379 | 0) > ($$0381 | 0)) break;
   $223 = HEAP32[$$4 >> 2] | 0;
   if (($223 | 0) == ($$3379 | 0)) {
    $$2375 = $$1374 + 1 | 0;
    $229 = $$1374;
   } else {
    $$2375 = $$1374;
    $229 = HEAP32[$4 + 1179664 + ($223 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $229;
   $$1374 = $$2375;
   $$3379 = $$3379 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $232 = $4 + 8 | 0;
  $233 = $$1374 + -1 | 0;
  HEAP32[$232 >> 2] = $233;
  if (!$233) $$0 = 0; else {
   _memset($221 | 0, 0, $233 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $233 << 4 | 0) | 0;
   $$4380 = 0;
   while (1) {
    if (($$4380 | 0) >= ($233 | 0)) break;
    $239 = $$4380 << 2;
    HEAP32[$4 + 131084 + ($239 << 2) >> 2] = $5;
    HEAP32[$4 + 131084 + (($239 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($239 | 2) << 2) >> 2] = $6;
    HEAP32[$4 + 131084 + (($239 | 3) << 2) >> 2] = 0;
    $$4380 = $$4380 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0381 | 0)) break;
    $251 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $252 = $$5 * 7 | 0;
    $255 = $4 + 12 + ($251 << 2) | 0;
    HEAP32[$255 >> 2] = (HEAP32[$255 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($252 << 2) >> 2] | 0);
    $262 = $251 << 1;
    $263 = $4 + 655376 + ($262 << 3) | 0;
    HEAPF64[$263 >> 3] = +HEAPF64[$263 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 1 << 2) >> 2] | 0);
    $271 = $4 + 655376 + (($262 | 1) << 3) | 0;
    HEAPF64[$271 >> 3] = +HEAPF64[$271 >> 3] + +(HEAP32[$4 + 1310736 + ($252 + 2 << 2) >> 2] | 0);
    $274 = $251 << 2;
    $275 = $4 + 131084 + ($274 << 2) | 0;
    $279 = HEAP32[$4 + 1310736 + ($252 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$275 >> 2] | 0) > ($279 | 0)) HEAP32[$275 >> 2] = $279;
    $282 = $4 + 131084 + (($274 | 1) << 2) | 0;
    $286 = HEAP32[$4 + 1310736 + ($252 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$282 >> 2] | 0) < ($286 | 0)) HEAP32[$282 >> 2] = $286;
    $289 = $4 + 131084 + (($274 | 2) << 2) | 0;
    $293 = HEAP32[$4 + 1310736 + ($252 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$289 >> 2] | 0) > ($293 | 0)) HEAP32[$289 >> 2] = $293;
    $296 = $4 + 131084 + (($274 | 3) << 2) | 0;
    $300 = HEAP32[$4 + 1310736 + ($252 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$296 >> 2] | 0) < ($300 | 0)) HEAP32[$296 >> 2] = $300;
    $$5 = $$5 + 1 | 0;
   }
   $303 = HEAP32[$232 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($303 | 0)) {
     $$0 = 0;
     break L80;
    }
    $307 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $308 = $$6 << 1;
    $309 = $4 + 655376 + ($308 << 3) | 0;
    HEAPF64[$309 >> 3] = +HEAPF64[$309 >> 3] / $307;
    $313 = $4 + 655376 + (($308 | 1) << 3) | 0;
    HEAPF64[$313 >> 3] = +HEAPF64[$313 >> 3] / $307;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubDWRC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0358 = 0, $$0359 = 0, $$0361 = 0, $$0363 = 0, $$0367 = 0, $$0371 = 0, $$0374 = 0, $$0379 = 0, $$1 = 0, $$1360 = 0, $$1362 = 0, $$1364 = 0, $$1368 = 0, $$1372 = 0, $$1375 = 0, $$1380 = 0, $$2 = 0, $$2365 = 0, $$2369 = 0, $$2373 = 0, $$2376 = 0, $$2381 = 0, $$3 = 0, $$3366 = 0, $$3370 = 0, $$3377 = 0, $$4 = 0, $$4378 = 0, $$5 = 0, $$6 = 0, $102 = 0, $117 = 0, $119 = 0, $121 = 0, $125 = 0, $129 = 0, $13 = 0, $132 = 0, $134 = 0, $138 = 0, $142 = 0, $146 = 0, $151 = 0, $153 = 0, $157 = 0, $161 = 0, $165 = 0, $171 = 0, $174 = 0, $176 = 0, $180 = 0, $184 = 0, $188 = 0, $19 = 0, $191 = 0, $196 = 0, $20 = 0, $216 = 0, $218 = 0, $224 = 0, $227 = 0, $228 = 0, $23 = 0, $234 = 0, $246 = 0, $247 = 0, $250 = 0, $257 = 0, $258 = 0, $266 = 0, $269 = 0, $270 = 0, $274 = 0, $277 = 0, $281 = 0, $284 = 0, $288 = 0, $29 = 0, $291 = 0, $295 = 0, $298 = 0, $30 = 0, $302 = 0.0, $303 = 0, $304 = 0, $308 = 0, $33 = 0, $35 = 0, $39 = 0, $43 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $61 = 0, $76 = 0, $78 = 0, $80 = 0, $84 = 0, $88 = 0, $94 = 0, $99 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0359 = $5;
 $$0361 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 $$0374 = 0;
 while (1) {
  if (($$0374 | 0) >= ($1 | 0)) break;
  HEAP16[$$0361 >> 1] = 0;
  HEAP16[$$0359 >> 1] = 0;
  $$0359 = $$0359 + 2 | 0;
  $$0361 = $$0361 + 2 | 0;
  $$0374 = $$0374 + 1 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1360 = $5;
 $$1362 = $5 + ($13 << 1) | 0;
 $$1375 = 0;
 while (1) {
  if (($$1375 | 0) >= ($2 | 0)) break;
  HEAP16[$$1362 >> 1] = 0;
  HEAP16[$$1360 >> 1] = 0;
  $$1360 = $$1360 + ($1 << 1) | 0;
  $$1362 = $$1362 + ($1 << 1) | 0;
  $$1375 = $$1375 + 1 | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $23 = 0 - $1 | 0;
 $$0358 = $0 + $20 | 0;
 $$0371 = 1;
 $$0379 = 0;
 $$2 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0371 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0358;
  $$1380 = $$0379;
  $$2376 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2376 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    $29 = $$3 + ($23 << 1) | 0;
    $30 = HEAP16[$29 >> 1] | 0;
    if ($30 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $30;
     $33 = ($30 << 16 >> 16) * 7 | 0;
     $35 = $4 + 1310736 + ($33 + -7 << 2) | 0;
     HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + 1;
     $39 = $4 + 1310736 + ($33 + -6 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + $$2376;
     $43 = $4 + 1310736 + ($33 + -5 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$0371;
     HEAP32[$4 + 1310736 + ($33 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $49 = HEAP16[$29 + 2 >> 1] | 0;
    $50 = $49 << 16 >> 16;
    $53 = HEAP16[$29 + -2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $55 = $53 << 16 >> 16 > 0;
    if ($49 << 16 >> 16 <= 0) {
     if ($55) {
      HEAP16[$$3 >> 1] = $53;
      $151 = $54 * 7 | 0;
      $153 = $4 + 1310736 + ($151 + -7 << 2) | 0;
      HEAP32[$153 >> 2] = (HEAP32[$153 >> 2] | 0) + 1;
      $157 = $4 + 1310736 + ($151 + -6 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + $$2376;
      $161 = $4 + 1310736 + ($151 + -5 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$0371;
      $165 = $4 + 1310736 + ($151 + -3 << 2) | 0;
      if ((HEAP32[$165 >> 2] | 0) < ($$2376 | 0)) HEAP32[$165 >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($151 + -1 << 2) >> 2] = $$0371;
      $$2381 = $$1380;
      break;
     }
     $171 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($171 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $171;
      $174 = ($171 << 16 >> 16) * 7 | 0;
      $176 = $4 + 1310736 + ($174 + -7 << 2) | 0;
      HEAP32[$176 >> 2] = (HEAP32[$176 >> 2] | 0) + 1;
      $180 = $4 + 1310736 + ($174 + -6 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + $$2376;
      $184 = $4 + 1310736 + ($174 + -5 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$0371;
      $188 = $4 + 1310736 + ($174 + -3 << 2) | 0;
      if ((HEAP32[$188 >> 2] | 0) >= ($$2376 | 0)) {
       $$2381 = $$1380;
       break;
      }
      HEAP32[$188 >> 2] = $$2376;
      $$2381 = $$1380;
      break;
     } else {
      $191 = $$1380 + 1 | 0;
      if (($$1380 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $191;
      HEAP32[$4 + 1179664 + ($$1380 << 2) >> 2] = $191 << 16 >> 16;
      $196 = $$1380 * 7 | 0;
      HEAP32[$4 + 1310736 + ($196 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($196 + 1 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 2 << 2) >> 2] = $$0371;
      HEAP32[$4 + 1310736 + ($196 + 3 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 4 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 5 << 2) >> 2] = $$0371;
      HEAP32[$4 + 1310736 + ($196 + 6 << 2) >> 2] = $$0371;
      $$2381 = $191;
      break;
     }
    }
    if ($55) {
     $58 = HEAP32[$4 + 1179664 + ($50 + -1 << 2) >> 2] | 0;
     $61 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     L36 : do if (($58 | 0) > ($61 | 0)) {
      HEAP16[$$3 >> 1] = $61;
      $$0363 = $19;
      $$0367 = 0;
      while (1) {
       if (($$0367 | 0) >= ($$1380 | 0)) {
        $76 = $61;
        break L36;
       }
       if ((HEAP32[$$0363 >> 2] | 0) == ($58 | 0)) HEAP32[$$0363 >> 2] = $61;
       $$0363 = $$0363 + 4 | 0;
       $$0367 = $$0367 + 1 | 0;
      }
     } else {
      HEAP16[$$3 >> 1] = $58;
      if (($58 | 0) < ($61 | 0)) {
       $$1364 = $19;
       $$1368 = 0;
       while (1) {
        if (($$1368 | 0) >= ($$1380 | 0)) {
         $76 = $58;
         break L36;
        }
        if ((HEAP32[$$1364 >> 2] | 0) == ($61 | 0)) HEAP32[$$1364 >> 2] = $58;
        $$1364 = $$1364 + 4 | 0;
        $$1368 = $$1368 + 1 | 0;
       }
      } else $76 = $58;
     } while (0);
     $78 = ($76 << 16 >> 16) * 7 | 0;
     $80 = $4 + 1310736 + ($78 + -7 << 2) | 0;
     HEAP32[$80 >> 2] = (HEAP32[$80 >> 2] | 0) + 1;
     $84 = $4 + 1310736 + ($78 + -6 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + $$2376;
     $88 = $4 + 1310736 + ($78 + -5 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$0371;
     HEAP32[$4 + 1310736 + ($78 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $94 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($94 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $49;
     $132 = $50 * 7 | 0;
     $134 = $4 + 1310736 + ($132 + -7 << 2) | 0;
     HEAP32[$134 >> 2] = (HEAP32[$134 >> 2] | 0) + 1;
     $138 = $4 + 1310736 + ($132 + -6 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + $$2376;
     $142 = $4 + 1310736 + ($132 + -5 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$0371;
     $146 = $4 + 1310736 + ($132 + -4 << 2) | 0;
     if ((HEAP32[$146 >> 2] | 0) > ($$2376 | 0)) HEAP32[$146 >> 2] = $$2376;
     HEAP32[$4 + 1310736 + ($132 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $99 = HEAP32[$4 + 1179664 + ($50 + -1 << 2) >> 2] | 0;
    $102 = HEAP32[$4 + 1179664 + (($94 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L60 : do if (($99 | 0) > ($102 | 0)) {
     HEAP16[$$3 >> 1] = $102;
     $$2365 = $19;
     $$2369 = 0;
     while (1) {
      if (($$2369 | 0) >= ($$1380 | 0)) {
       $117 = $102;
       break L60;
      }
      if ((HEAP32[$$2365 >> 2] | 0) == ($99 | 0)) HEAP32[$$2365 >> 2] = $102;
      $$2365 = $$2365 + 4 | 0;
      $$2369 = $$2369 + 1 | 0;
     }
    } else {
     HEAP16[$$3 >> 1] = $99;
     if (($99 | 0) < ($102 | 0)) {
      $$3366 = $19;
      $$3370 = 0;
      while (1) {
       if (($$3370 | 0) >= ($$1380 | 0)) {
        $117 = $99;
        break L60;
       }
       if ((HEAP32[$$3366 >> 2] | 0) == ($102 | 0)) HEAP32[$$3366 >> 2] = $99;
       $$3366 = $$3366 + 4 | 0;
       $$3370 = $$3370 + 1 | 0;
      }
     } else $117 = $99;
    } while (0);
    $119 = ($117 << 16 >> 16) * 7 | 0;
    $121 = $4 + 1310736 + ($119 + -7 << 2) | 0;
    HEAP32[$121 >> 2] = (HEAP32[$121 >> 2] | 0) + 1;
    $125 = $4 + 1310736 + ($119 + -6 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + $$2376;
    $129 = $4 + 1310736 + ($119 + -5 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$0371;
    $$2381 = $$1380;
   } else {
    HEAP16[$$3 >> 1] = 0;
    $$2381 = $$1380;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1380 = $$2381;
   $$2376 = $$2376 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0358 = $$1 + 2 | 0;
  $$0371 = $$0371 + 1 | 0;
  $$0379 = $$1380;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $216 = $4 + 12 | 0;
  $$1372 = 1;
  $$3377 = 1;
  $$4 = $19;
  while (1) {
   if (($$3377 | 0) > ($$0379 | 0)) break;
   $218 = HEAP32[$$4 >> 2] | 0;
   if (($218 | 0) == ($$3377 | 0)) {
    $$2373 = $$1372 + 1 | 0;
    $224 = $$1372;
   } else {
    $$2373 = $$1372;
    $224 = HEAP32[$4 + 1179664 + ($218 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $224;
   $$1372 = $$2373;
   $$3377 = $$3377 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $227 = $4 + 8 | 0;
  $228 = $$1372 + -1 | 0;
  HEAP32[$227 >> 2] = $228;
  if (!$228) $$0 = 0; else {
   _memset($216 | 0, 0, $228 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $228 << 4 | 0) | 0;
   $$4378 = 0;
   while (1) {
    if (($$4378 | 0) >= ($228 | 0)) break;
    $234 = $$4378 << 2;
    HEAP32[$4 + 131084 + ($234 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($234 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($234 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($234 | 3) << 2) >> 2] = 0;
    $$4378 = $$4378 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0379 | 0)) break;
    $246 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $247 = $$5 * 7 | 0;
    $250 = $4 + 12 + ($246 << 2) | 0;
    HEAP32[$250 >> 2] = (HEAP32[$250 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($247 << 2) >> 2] | 0);
    $257 = $246 << 1;
    $258 = $4 + 655376 + ($257 << 3) | 0;
    HEAPF64[$258 >> 3] = +HEAPF64[$258 >> 3] + +(HEAP32[$4 + 1310736 + ($247 + 1 << 2) >> 2] | 0);
    $266 = $4 + 655376 + (($257 | 1) << 3) | 0;
    HEAPF64[$266 >> 3] = +HEAPF64[$266 >> 3] + +(HEAP32[$4 + 1310736 + ($247 + 2 << 2) >> 2] | 0);
    $269 = $246 << 2;
    $270 = $4 + 131084 + ($269 << 2) | 0;
    $274 = HEAP32[$4 + 1310736 + ($247 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$270 >> 2] | 0) > ($274 | 0)) HEAP32[$270 >> 2] = $274;
    $277 = $4 + 131084 + (($269 | 1) << 2) | 0;
    $281 = HEAP32[$4 + 1310736 + ($247 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$277 >> 2] | 0) < ($281 | 0)) HEAP32[$277 >> 2] = $281;
    $284 = $4 + 131084 + (($269 | 2) << 2) | 0;
    $288 = HEAP32[$4 + 1310736 + ($247 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$284 >> 2] | 0) > ($288 | 0)) HEAP32[$284 >> 2] = $288;
    $291 = $4 + 131084 + (($269 | 3) << 2) | 0;
    $295 = HEAP32[$4 + 1310736 + ($247 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$291 >> 2] | 0) < ($295 | 0)) HEAP32[$291 >> 2] = $295;
    $$5 = $$5 + 1 | 0;
   }
   $298 = HEAP32[$227 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($298 | 0)) {
     $$0 = 0;
     break L80;
    }
    $302 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $303 = $$6 << 1;
    $304 = $4 + 655376 + ($303 << 3) | 0;
    HEAPF64[$304 >> 3] = +HEAPF64[$304 >> 3] / $302;
    $308 = $4 + 655376 + (($303 | 1) << 3) | 0;
    HEAPF64[$308 >> 3] = +HEAPF64[$308 >> 3] / $302;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _arLabelingSubDBRC($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0358 = 0, $$0359 = 0, $$0361 = 0, $$0363 = 0, $$0367 = 0, $$0371 = 0, $$0374 = 0, $$0379 = 0, $$1 = 0, $$1360 = 0, $$1362 = 0, $$1364 = 0, $$1368 = 0, $$1372 = 0, $$1375 = 0, $$1380 = 0, $$2 = 0, $$2365 = 0, $$2369 = 0, $$2373 = 0, $$2376 = 0, $$2381 = 0, $$3 = 0, $$3366 = 0, $$3370 = 0, $$3377 = 0, $$4 = 0, $$4378 = 0, $$5 = 0, $$6 = 0, $102 = 0, $117 = 0, $119 = 0, $121 = 0, $125 = 0, $129 = 0, $13 = 0, $132 = 0, $134 = 0, $138 = 0, $142 = 0, $146 = 0, $151 = 0, $153 = 0, $157 = 0, $161 = 0, $165 = 0, $171 = 0, $174 = 0, $176 = 0, $180 = 0, $184 = 0, $188 = 0, $19 = 0, $191 = 0, $196 = 0, $20 = 0, $216 = 0, $218 = 0, $224 = 0, $227 = 0, $228 = 0, $23 = 0, $234 = 0, $246 = 0, $247 = 0, $250 = 0, $257 = 0, $258 = 0, $266 = 0, $269 = 0, $270 = 0, $274 = 0, $277 = 0, $281 = 0, $284 = 0, $288 = 0, $29 = 0, $291 = 0, $295 = 0, $298 = 0, $30 = 0, $302 = 0.0, $303 = 0, $304 = 0, $308 = 0, $33 = 0, $35 = 0, $39 = 0, $43 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $54 = 0, $55 = 0, $58 = 0, $6 = 0, $61 = 0, $76 = 0, $78 = 0, $80 = 0, $84 = 0, $88 = 0, $94 = 0, $99 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $2 + -1 | 0;
 $$0359 = $5;
 $$0361 = $5 + ((Math_imul($6, $1) | 0) << 1) | 0;
 $$0374 = 0;
 while (1) {
  if (($$0374 | 0) >= ($1 | 0)) break;
  HEAP16[$$0361 >> 1] = 0;
  HEAP16[$$0359 >> 1] = 0;
  $$0359 = $$0359 + 2 | 0;
  $$0361 = $$0361 + 2 | 0;
  $$0374 = $$0374 + 1 | 0;
 }
 $13 = $1 + -1 | 0;
 $$1360 = $5;
 $$1362 = $5 + ($13 << 1) | 0;
 $$1375 = 0;
 while (1) {
  if (($$1375 | 0) >= ($2 | 0)) break;
  HEAP16[$$1362 >> 1] = 0;
  HEAP16[$$1360 >> 1] = 0;
  $$1360 = $$1360 + ($1 << 1) | 0;
  $$1362 = $$1362 + ($1 << 1) | 0;
  $$1375 = $$1375 + 1 | 0;
 }
 $19 = $4 + 1179664 | 0;
 $20 = $1 + 1 | 0;
 $23 = 0 - $1 | 0;
 $$0358 = $0 + $20 | 0;
 $$0371 = 1;
 $$0379 = 0;
 $$2 = $5 + ($20 << 1) | 0;
 L9 : while (1) {
  if (($$0371 | 0) >= ($6 | 0)) {
   label = 59;
   break;
  }
  $$1 = $$0358;
  $$1380 = $$0379;
  $$2376 = 1;
  $$3 = $$2;
  while (1) {
   if (($$2376 | 0) >= ($13 | 0)) break;
   do if ((HEAPU8[$$1 >> 0] | 0 | 0) > ($3 | 0)) {
    HEAP16[$$3 >> 1] = 0;
    $$2381 = $$1380;
   } else {
    $29 = $$3 + ($23 << 1) | 0;
    $30 = HEAP16[$29 >> 1] | 0;
    if ($30 << 16 >> 16 > 0) {
     HEAP16[$$3 >> 1] = $30;
     $33 = ($30 << 16 >> 16) * 7 | 0;
     $35 = $4 + 1310736 + ($33 + -7 << 2) | 0;
     HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + 1;
     $39 = $4 + 1310736 + ($33 + -6 << 2) | 0;
     HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + $$2376;
     $43 = $4 + 1310736 + ($33 + -5 << 2) | 0;
     HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + $$0371;
     HEAP32[$4 + 1310736 + ($33 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $49 = HEAP16[$29 + 2 >> 1] | 0;
    $50 = $49 << 16 >> 16;
    $53 = HEAP16[$29 + -2 >> 1] | 0;
    $54 = $53 << 16 >> 16;
    $55 = $53 << 16 >> 16 > 0;
    if ($49 << 16 >> 16 <= 0) {
     if ($55) {
      HEAP16[$$3 >> 1] = $53;
      $151 = $54 * 7 | 0;
      $153 = $4 + 1310736 + ($151 + -7 << 2) | 0;
      HEAP32[$153 >> 2] = (HEAP32[$153 >> 2] | 0) + 1;
      $157 = $4 + 1310736 + ($151 + -6 << 2) | 0;
      HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + $$2376;
      $161 = $4 + 1310736 + ($151 + -5 << 2) | 0;
      HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + $$0371;
      $165 = $4 + 1310736 + ($151 + -3 << 2) | 0;
      if ((HEAP32[$165 >> 2] | 0) < ($$2376 | 0)) HEAP32[$165 >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($151 + -1 << 2) >> 2] = $$0371;
      $$2381 = $$1380;
      break;
     }
     $171 = HEAP16[$$3 + -2 >> 1] | 0;
     if ($171 << 16 >> 16 > 0) {
      HEAP16[$$3 >> 1] = $171;
      $174 = ($171 << 16 >> 16) * 7 | 0;
      $176 = $4 + 1310736 + ($174 + -7 << 2) | 0;
      HEAP32[$176 >> 2] = (HEAP32[$176 >> 2] | 0) + 1;
      $180 = $4 + 1310736 + ($174 + -6 << 2) | 0;
      HEAP32[$180 >> 2] = (HEAP32[$180 >> 2] | 0) + $$2376;
      $184 = $4 + 1310736 + ($174 + -5 << 2) | 0;
      HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + $$0371;
      $188 = $4 + 1310736 + ($174 + -3 << 2) | 0;
      if ((HEAP32[$188 >> 2] | 0) >= ($$2376 | 0)) {
       $$2381 = $$1380;
       break;
      }
      HEAP32[$188 >> 2] = $$2376;
      $$2381 = $$1380;
      break;
     } else {
      $191 = $$1380 + 1 | 0;
      if (($$1380 | 0) > 32767) {
       label = 54;
       break L9;
      }
      HEAP16[$$3 >> 1] = $191;
      HEAP32[$4 + 1179664 + ($$1380 << 2) >> 2] = $191 << 16 >> 16;
      $196 = $$1380 * 7 | 0;
      HEAP32[$4 + 1310736 + ($196 << 2) >> 2] = 1;
      HEAP32[$4 + 1310736 + ($196 + 1 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 2 << 2) >> 2] = $$0371;
      HEAP32[$4 + 1310736 + ($196 + 3 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 4 << 2) >> 2] = $$2376;
      HEAP32[$4 + 1310736 + ($196 + 5 << 2) >> 2] = $$0371;
      HEAP32[$4 + 1310736 + ($196 + 6 << 2) >> 2] = $$0371;
      $$2381 = $191;
      break;
     }
    }
    if ($55) {
     $58 = HEAP32[$4 + 1179664 + ($50 + -1 << 2) >> 2] | 0;
     $61 = HEAP32[$4 + 1179664 + ($54 + -1 << 2) >> 2] | 0;
     L37 : do if (($58 | 0) > ($61 | 0)) {
      HEAP16[$$3 >> 1] = $61;
      $$0363 = $19;
      $$0367 = 0;
      while (1) {
       if (($$0367 | 0) >= ($$1380 | 0)) {
        $76 = $61;
        break L37;
       }
       if ((HEAP32[$$0363 >> 2] | 0) == ($58 | 0)) HEAP32[$$0363 >> 2] = $61;
       $$0363 = $$0363 + 4 | 0;
       $$0367 = $$0367 + 1 | 0;
      }
     } else {
      HEAP16[$$3 >> 1] = $58;
      if (($58 | 0) < ($61 | 0)) {
       $$1364 = $19;
       $$1368 = 0;
       while (1) {
        if (($$1368 | 0) >= ($$1380 | 0)) {
         $76 = $58;
         break L37;
        }
        if ((HEAP32[$$1364 >> 2] | 0) == ($61 | 0)) HEAP32[$$1364 >> 2] = $58;
        $$1364 = $$1364 + 4 | 0;
        $$1368 = $$1368 + 1 | 0;
       }
      } else $76 = $58;
     } while (0);
     $78 = ($76 << 16 >> 16) * 7 | 0;
     $80 = $4 + 1310736 + ($78 + -7 << 2) | 0;
     HEAP32[$80 >> 2] = (HEAP32[$80 >> 2] | 0) + 1;
     $84 = $4 + 1310736 + ($78 + -6 << 2) | 0;
     HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + $$2376;
     $88 = $4 + 1310736 + ($78 + -5 << 2) | 0;
     HEAP32[$88 >> 2] = (HEAP32[$88 >> 2] | 0) + $$0371;
     HEAP32[$4 + 1310736 + ($78 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $94 = HEAP16[$$3 + -2 >> 1] | 0;
    if ($94 << 16 >> 16 <= 0) {
     HEAP16[$$3 >> 1] = $49;
     $132 = $50 * 7 | 0;
     $134 = $4 + 1310736 + ($132 + -7 << 2) | 0;
     HEAP32[$134 >> 2] = (HEAP32[$134 >> 2] | 0) + 1;
     $138 = $4 + 1310736 + ($132 + -6 << 2) | 0;
     HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + $$2376;
     $142 = $4 + 1310736 + ($132 + -5 << 2) | 0;
     HEAP32[$142 >> 2] = (HEAP32[$142 >> 2] | 0) + $$0371;
     $146 = $4 + 1310736 + ($132 + -4 << 2) | 0;
     if ((HEAP32[$146 >> 2] | 0) > ($$2376 | 0)) HEAP32[$146 >> 2] = $$2376;
     HEAP32[$4 + 1310736 + ($132 + -1 << 2) >> 2] = $$0371;
     $$2381 = $$1380;
     break;
    }
    $99 = HEAP32[$4 + 1179664 + ($50 + -1 << 2) >> 2] | 0;
    $102 = HEAP32[$4 + 1179664 + (($94 << 16 >> 16) + -1 << 2) >> 2] | 0;
    L61 : do if (($99 | 0) > ($102 | 0)) {
     HEAP16[$$3 >> 1] = $102;
     $$2365 = $19;
     $$2369 = 0;
     while (1) {
      if (($$2369 | 0) >= ($$1380 | 0)) {
       $117 = $102;
       break L61;
      }
      if ((HEAP32[$$2365 >> 2] | 0) == ($99 | 0)) HEAP32[$$2365 >> 2] = $102;
      $$2365 = $$2365 + 4 | 0;
      $$2369 = $$2369 + 1 | 0;
     }
    } else {
     HEAP16[$$3 >> 1] = $99;
     if (($99 | 0) < ($102 | 0)) {
      $$3366 = $19;
      $$3370 = 0;
      while (1) {
       if (($$3370 | 0) >= ($$1380 | 0)) {
        $117 = $99;
        break L61;
       }
       if ((HEAP32[$$3366 >> 2] | 0) == ($102 | 0)) HEAP32[$$3366 >> 2] = $99;
       $$3366 = $$3366 + 4 | 0;
       $$3370 = $$3370 + 1 | 0;
      }
     } else $117 = $99;
    } while (0);
    $119 = ($117 << 16 >> 16) * 7 | 0;
    $121 = $4 + 1310736 + ($119 + -7 << 2) | 0;
    HEAP32[$121 >> 2] = (HEAP32[$121 >> 2] | 0) + 1;
    $125 = $4 + 1310736 + ($119 + -6 << 2) | 0;
    HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + $$2376;
    $129 = $4 + 1310736 + ($119 + -5 << 2) | 0;
    HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + $$0371;
    $$2381 = $$1380;
   } while (0);
   $$1 = $$1 + 1 | 0;
   $$1380 = $$2381;
   $$2376 = $$2376 + 1 | 0;
   $$3 = $$3 + 2 | 0;
  }
  $$0358 = $$1 + 2 | 0;
  $$0371 = $$0371 + 1 | 0;
  $$0379 = $$1380;
  $$2 = $$3 + 4 | 0;
 }
 L80 : do if ((label | 0) == 54) {
  _arLog(0, 3, 17520, $vararg_buffer);
  $$0 = -1;
 } else if ((label | 0) == 59) {
  $216 = $4 + 12 | 0;
  $$1372 = 1;
  $$3377 = 1;
  $$4 = $19;
  while (1) {
   if (($$3377 | 0) > ($$0379 | 0)) break;
   $218 = HEAP32[$$4 >> 2] | 0;
   if (($218 | 0) == ($$3377 | 0)) {
    $$2373 = $$1372 + 1 | 0;
    $224 = $$1372;
   } else {
    $$2373 = $$1372;
    $224 = HEAP32[$4 + 1179664 + ($218 + -1 << 2) >> 2] | 0;
   }
   HEAP32[$$4 >> 2] = $224;
   $$1372 = $$2373;
   $$3377 = $$3377 + 1 | 0;
   $$4 = $$4 + 4 | 0;
  }
  $227 = $4 + 8 | 0;
  $228 = $$1372 + -1 | 0;
  HEAP32[$227 >> 2] = $228;
  if (!$228) $$0 = 0; else {
   _memset($216 | 0, 0, $228 << 2 | 0) | 0;
   _memset($4 + 655376 | 0, 0, $228 << 4 | 0) | 0;
   $$4378 = 0;
   while (1) {
    if (($$4378 | 0) >= ($228 | 0)) break;
    $234 = $$4378 << 2;
    HEAP32[$4 + 131084 + ($234 << 2) >> 2] = $1;
    HEAP32[$4 + 131084 + (($234 | 1) << 2) >> 2] = 0;
    HEAP32[$4 + 131084 + (($234 | 2) << 2) >> 2] = $2;
    HEAP32[$4 + 131084 + (($234 | 3) << 2) >> 2] = 0;
    $$4378 = $$4378 + 1 | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0379 | 0)) break;
    $246 = (HEAP32[$4 + 1179664 + ($$5 << 2) >> 2] | 0) + -1 | 0;
    $247 = $$5 * 7 | 0;
    $250 = $4 + 12 + ($246 << 2) | 0;
    HEAP32[$250 >> 2] = (HEAP32[$250 >> 2] | 0) + (HEAP32[$4 + 1310736 + ($247 << 2) >> 2] | 0);
    $257 = $246 << 1;
    $258 = $4 + 655376 + ($257 << 3) | 0;
    HEAPF64[$258 >> 3] = +HEAPF64[$258 >> 3] + +(HEAP32[$4 + 1310736 + ($247 + 1 << 2) >> 2] | 0);
    $266 = $4 + 655376 + (($257 | 1) << 3) | 0;
    HEAPF64[$266 >> 3] = +HEAPF64[$266 >> 3] + +(HEAP32[$4 + 1310736 + ($247 + 2 << 2) >> 2] | 0);
    $269 = $246 << 2;
    $270 = $4 + 131084 + ($269 << 2) | 0;
    $274 = HEAP32[$4 + 1310736 + ($247 + 3 << 2) >> 2] | 0;
    if ((HEAP32[$270 >> 2] | 0) > ($274 | 0)) HEAP32[$270 >> 2] = $274;
    $277 = $4 + 131084 + (($269 | 1) << 2) | 0;
    $281 = HEAP32[$4 + 1310736 + ($247 + 4 << 2) >> 2] | 0;
    if ((HEAP32[$277 >> 2] | 0) < ($281 | 0)) HEAP32[$277 >> 2] = $281;
    $284 = $4 + 131084 + (($269 | 2) << 2) | 0;
    $288 = HEAP32[$4 + 1310736 + ($247 + 5 << 2) >> 2] | 0;
    if ((HEAP32[$284 >> 2] | 0) > ($288 | 0)) HEAP32[$284 >> 2] = $288;
    $291 = $4 + 131084 + (($269 | 3) << 2) | 0;
    $295 = HEAP32[$4 + 1310736 + ($247 + 6 << 2) >> 2] | 0;
    if ((HEAP32[$291 >> 2] | 0) < ($295 | 0)) HEAP32[$291 >> 2] = $295;
    $$5 = $$5 + 1 | 0;
   }
   $298 = HEAP32[$227 >> 2] | 0;
   $$6 = 0;
   while (1) {
    if (($$6 | 0) >= ($298 | 0)) {
     $$0 = 0;
     break L80;
    }
    $302 = +(HEAP32[$4 + 12 + ($$6 << 2) >> 2] | 0);
    $303 = $$6 << 1;
    $304 = $4 + 655376 + ($303 << 3) | 0;
    HEAPF64[$304 >> 3] = +HEAPF64[$304 >> 3] / $302;
    $308 = $4 + 655376 + (($303 | 1) << 3) | 0;
    HEAPF64[$308 >> 3] = +HEAPF64[$308 >> 3] / $302;
    $$6 = $$6 + 1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_array_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i132 = 0, $$0$i$i$i112 = 0, $$0$i$i$i119 = 0, $$0$i$i$i123 = 0, $$0$i$i$i127 = 0, $$0$i$i$idx$i = 0, $$7 = 0, $103 = 0, $104 = 0, $105 = 0, $108 = 0, $112 = 0, $113 = 0, $115 = 0, $123 = 0, $13 = 0, $131 = 0, $132 = 0, $142 = 0, $143 = 0, $144 = 0, $147 = 0, $15 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $25 = 0, $27 = 0, $3 = 0, $35 = 0, $4 = 0, $41 = 0, $45 = 0, $46 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $55 = 0, $6 = 0, $63 = 0, $67 = 0, $7 = 0, $75 = 0, $76 = 0, $8 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $3 = sp + 96 | 0;
 $4 = sp + 72 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 do if (($0 | 0) == ($1 | 0)) $$7 = $0; else if ((HEAP8[$0 >> 0] | 0) == 65) {
  $13 = $0 + 1 | 0;
  if (($13 | 0) == ($1 | 0)) $$7 = $0; else {
   $15 = HEAP8[$13 >> 0] | 0;
   if ($15 << 24 >> 24 == 95) {
    $17 = $0 + 2 | 0;
    $18 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($17, $1, $2) | 0;
    if (($18 | 0) == ($17 | 0)) {
     $$7 = $0;
     break;
    }
    $21 = $2 + 4 | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($22 | 0)) {
     $$7 = $0;
     break;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_($3, $22 + -12 | 0, 2);
    $25 = __ZNSt3__211char_traitsIcE6lengthEPKc(49623) | 0;
    $27 = HEAP8[$3 + 11 >> 0] | 0;
    if (($25 | 0) == (($27 << 24 >> 24 < 0 ? HEAP32[$3 + 4 >> 2] | 0 : $27 & 255) | 0)) {
     $35 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($3, 49623, $25) | 0) == 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     if ($35) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm((HEAP32[$21 >> 2] | 0) + -12 | 0);
    } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc((HEAP32[$21 >> 2] | 0) + -12 | 0, 0, 51064) | 0;
    $$7 = $18;
    break;
   }
   if (($15 + -49 & 255) < 9) {
    $41 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($13, $1) | 0;
    if (($41 | 0) == ($1 | 0)) {
     $$7 = $0;
     break;
    }
    if ((HEAP8[$41 >> 0] | 0) != 95) {
     $$7 = $0;
     break;
    }
    $45 = $41 + 1 | 0;
    $46 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($45, $1, $2) | 0;
    if (($46 | 0) == ($45 | 0)) {
     $$7 = $0;
     break;
    }
    $49 = $2 + 4 | 0;
    $50 = HEAP32[$49 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($50 | 0)) {
     $$7 = $0;
     break;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_($3, $50 + -12 | 0, 2);
    $53 = __ZNSt3__211char_traitsIcE6lengthEPKc(49623) | 0;
    $55 = HEAP8[$3 + 11 >> 0] | 0;
    if (($53 | 0) == (($55 << 24 >> 24 < 0 ? HEAP32[$3 + 4 >> 2] | 0 : $55 & 255) | 0)) {
     $63 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($3, 49623, $53) | 0) == 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     if ($63) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm((HEAP32[$49 >> 2] | 0) + -12 | 0);
    } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $67 = (HEAP32[$49 >> 2] | 0) + -12 | 0;
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($5, $13, $41);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($5, 0, 49623) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 49678) | 0;
    HEAP32[$3 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$3 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i112 = 0;
    while (1) {
     if (($$0$i$i$i112 | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i112 << 2) >> 2] = 0;
     $$0$i$i$i112 = $$0$i$i$i112 + 1 | 0;
    }
    $75 = HEAP8[$3 + 11 >> 0] | 0;
    $76 = $75 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm($67, 0, $76 ? HEAP32[$3 >> 2] | 0 : $3, $76 ? HEAP32[$3 + 4 >> 2] | 0 : $75 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$7 = $46;
    break;
   }
   $83 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
   if (($83 | 0) == ($13 | 0) | ($83 | 0) == ($1 | 0)) $$7 = $0; else if ((HEAP8[$83 >> 0] | 0) == 95) {
    $88 = $83 + 1 | 0;
    $89 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($88, $1, $2) | 0;
    if (($89 | 0) == ($88 | 0)) $$7 = $0; else {
     $91 = $2 + 4 | 0;
     $92 = HEAP32[$91 >> 2] | 0;
     if ((($92 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$7 = $0; else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($4, $92 + -24 | 0);
      $99 = HEAP32[$91 >> 2] | 0;
      $$0$i$i$idx$i = 0;
      while (1) {
       if (($$0$i$i$idx$i | 0) == -1) break;
       $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($99 + ($$0$i$i$add$i * 24 | 0) | 0);
       $$0$i$i$idx$i = $$0$i$i$add$i;
      }
      HEAP32[$91 >> 2] = $99 + -24;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($5, $99 + -48 | 0);
      $103 = HEAP32[$91 >> 2] | 0;
      $104 = $103 + -24 | 0;
      $105 = $104 + 11 | 0;
      if ((HEAP8[$105 >> 0] | 0) < 0) {
       $108 = HEAP32[$104 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($108, $3);
       HEAP32[$103 + -20 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($104, $3);
       HEAP8[$105 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($104);
      HEAP32[$104 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$104 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$104 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i$i | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
      }
      $112 = $4 + 12 | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_($3, $112, 2);
      $113 = __ZNSt3__211char_traitsIcE6lengthEPKc(49623) | 0;
      $115 = HEAP8[$3 + 11 >> 0] | 0;
      if (($113 | 0) == (($115 << 24 >> 24 < 0 ? HEAP32[$3 + 4 >> 2] | 0 : $115 & 255) | 0)) {
       $123 = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($3, 49623, $113) | 0) == 0;
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
       if ($123) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm($112);
      } else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $5);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($9, 0, 49623) | 0;
      HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
      HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
      HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
      $$0$i$i$i119 = 0;
      while (1) {
       if (($$0$i$i$i119 | 0) == 3) break;
       HEAP32[$9 + ($$0$i$i$i119 << 2) >> 2] = 0;
       $$0$i$i$i119 = $$0$i$i$i119 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 49678) | 0;
      HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
      HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
      HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
      $$0$i$i$i123 = 0;
      while (1) {
       if (($$0$i$i$i123 | 0) == 3) break;
       HEAP32[$8 + ($$0$i$i$i123 << 2) >> 2] = 0;
       $$0$i$i$i123 = $$0$i$i$i123 + 1 | 0;
      }
      $131 = HEAP8[$112 + 11 >> 0] | 0;
      $132 = $131 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($7, $132 ? HEAP32[$112 >> 2] | 0 : $112, $132 ? HEAP32[$4 + 16 >> 2] | 0 : $131 & 255) | 0;
      HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
      HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
      HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
      $$0$i$i$i127 = 0;
      while (1) {
       if (($$0$i$i$i127 | 0) == 3) break;
       HEAP32[$7 + ($$0$i$i$i127 << 2) >> 2] = 0;
       $$0$i$i$i127 = $$0$i$i$i127 + 1 | 0;
      }
      $142 = HEAP32[$91 >> 2] | 0;
      $143 = $142 + -12 | 0;
      $144 = $143 + 11 | 0;
      if ((HEAP8[$144 >> 0] | 0) < 0) {
       $147 = HEAP32[$143 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($147, $3);
       HEAP32[$142 + -8 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($143, $3);
       HEAP8[$144 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($143);
      HEAP32[$143 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$143 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$143 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i$i132 = 0;
      while (1) {
       if (($$0$i$i$i$i132 | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i$i132 << 2) >> 2] = 0;
       $$0$i$i$i$i132 = $$0$i$i$i$i132 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
      $$7 = $89;
     }
    }
   } else $$7 = $0;
  }
 } else $$7 = $0; while (0);
 STACKTOP = sp;
 return $$7 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_unnamed_type_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i133 = 0, $$0$i$i$add$i139 = 0, $$0$i$i$add$i143 = 0, $$0$i$i$add$i148 = 0, $$0$i$i$add$i154 = 0, $$0$i$i$add$i158 = 0, $$0$i$i$add$i162 = 0, $$0$i$i$i$i = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i132 = 0, $$0$i$i$idx$i138 = 0, $$0$i$i$idx$i142 = 0, $$0$i$i$idx$i147 = 0, $$0$i$i$idx$i153 = 0, $$0$i$i$idx$i157 = 0, $$0$i$i$idx$i161 = 0, $$0105 = 0, $$0105$lcssa = 0, $$0106 = 0, $$0110 = 0, $$0110$lcssa = 0, $$0116 = 0, $$2108 = 0, $$3109 = 0, $$7 = 0, $$byval_copy = 0, $101 = 0, $104 = 0, $113 = 0, $114 = 0, $125 = 0, $128 = 0, $130 = 0, $141 = 0, $147 = 0, $152 = 0, $18 = 0, $19 = 0, $25 = 0, $27 = 0, $3 = 0, $4 = 0, $44 = 0, $49 = 0, $5 = 0, $50 = 0, $56 = 0, $6 = 0, $62 = 0, $64 = 0, $67 = 0, $7 = 0, $74 = 0, $78 = 0, $79 = 0, $80 = 0, $82 = 0, $87 = 0, $89 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $$byval_copy = sp + 56 | 0;
 $3 = sp + 40 | 0;
 $4 = sp + 28 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 L1 : do if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 85) {
  switch (HEAP8[$0 + 1 >> 0] | 0) {
  case 116:
   {
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 50432, __ZNSt3__211char_traitsIcE6lengthEPKc(50432) | 0);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($$byval_copy, $3);
    $18 = $2 + 4 | 0;
    $19 = HEAP32[$18 >> 2] | 0;
    if ($19 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($19, $$byval_copy);
     HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $$byval_copy);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($$byval_copy);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $25 = $0 + 2 | 0;
    if (($25 | 0) == ($1 | 0)) {
     $27 = HEAP32[$18 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$18 >> 2] = $27 + -24;
     $$7 = $0;
     break L1;
    }
    if (((HEAP8[$25 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
     $$0110 = $0 + 3 | 0;
     while (1) {
      if (($$0110 | 0) == ($1 | 0)) {
       $$0110$lcssa = $1;
       break;
      }
      if (((HEAP8[$$0110 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
       $$0110$lcssa = $$0110;
       break;
      }
      $$0110 = $$0110 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_((HEAP32[$18 >> 2] | 0) + -24 | 0, $25, $$0110$lcssa);
     $$0116 = $$0110$lcssa;
    } else $$0116 = $25;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[$18 >> 2] | 0) + -24 | 0, 39);
    if (($$0116 | 0) != ($1 | 0)) if ((HEAP8[$$0116 >> 0] | 0) == 95) {
     $$7 = $$0116 + 1 | 0;
     break L1;
    }
    $44 = HEAP32[$18 >> 2] | 0;
    $$0$i$i$idx$i132 = 0;
    while (1) {
     if (($$0$i$i$idx$i132 | 0) == -1) break;
     $$0$i$i$add$i133 = $$0$i$i$idx$i132 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($44 + ($$0$i$i$add$i133 * 24 | 0) | 0);
     $$0$i$i$idx$i132 = $$0$i$i$add$i133;
    }
    HEAP32[$18 >> 2] = $44 + -24;
    $$7 = $0;
    break L1;
    break;
   }
  case 108:
   break;
  default:
   {
    $$7 = $0;
    break L1;
   }
  }
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($4, 50441, __ZNSt3__211char_traitsIcE6lengthEPKc(50441) | 0);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($$byval_copy, $4);
  $49 = $2 + 4 | 0;
  $50 = HEAP32[$49 >> 2] | 0;
  if ($50 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($50, $$byval_copy);
   HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $$byval_copy);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($$byval_copy);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
  $56 = $0 + 2 | 0;
  do if ((HEAP8[$56 >> 0] | 0) == 118) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[$49 >> 2] | 0) + -24 | 0, 41);
   $$2108 = $0 + 3 | 0;
  } else {
   $62 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($56, $1, $2) | 0;
   if (($62 | 0) == ($56 | 0)) {
    $64 = HEAP32[$49 >> 2] | 0;
    $$0$i$i$idx$i138 = 0;
    while (1) {
     if (($$0$i$i$idx$i138 | 0) == -1) break;
     $$0$i$i$add$i139 = $$0$i$i$idx$i138 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($64 + ($$0$i$i$add$i139 * 24 | 0) | 0);
     $$0$i$i$idx$i138 = $$0$i$i$add$i139;
    }
    HEAP32[$49 >> 2] = $64 + -24;
    $$7 = $0;
    break L1;
   }
   $67 = HEAP32[$49 >> 2] | 0;
   if ((($67 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
    $$7 = $0;
    break L1;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $67 + -24 | 0);
   $74 = HEAP32[$49 >> 2] | 0;
   $$0$i$i$idx$i142 = 0;
   while (1) {
    if (($$0$i$i$idx$i142 | 0) == -1) break;
    $$0$i$i$add$i143 = $$0$i$i$idx$i142 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($74 + ($$0$i$i$add$i143 * 24 | 0) | 0);
    $$0$i$i$idx$i142 = $$0$i$i$add$i143;
   }
   HEAP32[$49 >> 2] = $74 + -24;
   $78 = $5 + 11 | 0;
   $79 = HEAP8[$78 >> 0] | 0;
   $80 = $79 << 24 >> 24 < 0;
   $82 = $5 + 4 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($74 + -48 | 0, $80 ? HEAP32[$5 >> 2] | 0 : $5, $80 ? HEAP32[$82 >> 2] | 0 : $79 & 255) | 0;
   $$0106 = $62;
   while (1) {
    $87 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($$0106, $1, $2) | 0;
    if (($87 | 0) == ($$0106 | 0)) {
     label = 54;
     break;
    }
    $89 = HEAP32[$49 >> 2] | 0;
    if ((($89 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     label = 82;
     break;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $89 + -24 | 0);
    if ((HEAP8[$78 >> 0] | 0) < 0) {
     $98 = HEAP32[$5 >> 2] | 0;
     HEAP8[$$byval_copy >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($98, $$byval_copy);
     HEAP32[$82 >> 2] = 0;
    } else {
     HEAP8[$$byval_copy >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($5, $$byval_copy);
     HEAP8[$78 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($5);
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $101 = HEAP32[$49 >> 2] | 0;
    $$0$i$i$idx$i147 = 0;
    while (1) {
     if (($$0$i$i$idx$i147 | 0) == -1) break;
     $$0$i$i$add$i148 = $$0$i$i$idx$i147 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($101 + ($$0$i$i$add$i148 * 24 | 0) | 0);
     $$0$i$i$idx$i147 = $$0$i$i$add$i148;
    }
    HEAP32[$49 >> 2] = $101 + -24;
    $104 = HEAP8[$78 >> 0] | 0;
    if (($104 << 24 >> 24 < 0 ? HEAP32[$82 >> 2] | 0 : $104 & 255) | 0) {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($101 + -48 | 0, 49853) | 0;
     $113 = HEAP8[$78 >> 0] | 0;
     $114 = $113 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$49 >> 2] | 0) + -24 | 0, $114 ? HEAP32[$5 >> 2] | 0 : $5, $114 ? HEAP32[$82 >> 2] | 0 : $113 & 255) | 0;
    }
    $$0106 = $87;
   }
   if ((label | 0) == 54) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$49 >> 2] | 0) + -24 | 0, 49629) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$2108 = $$0106;
    break;
   } else if ((label | 0) == 82) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$7 = $0;
    break L1;
   }
  } while (0);
  if (($$2108 | 0) != ($1 | 0)) if ((HEAP8[$$2108 >> 0] | 0) == 69) {
   $128 = $$2108 + 1 | 0;
   if (($128 | 0) == ($1 | 0)) {
    $130 = HEAP32[$49 >> 2] | 0;
    $$0$i$i$idx$i157 = 0;
    while (1) {
     if (($$0$i$i$idx$i157 | 0) == -1) break;
     $$0$i$i$add$i158 = $$0$i$i$idx$i157 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($130 + ($$0$i$i$add$i158 * 24 | 0) | 0);
     $$0$i$i$idx$i157 = $$0$i$i$add$i158;
    }
    HEAP32[$49 >> 2] = $130 + -24;
    $$7 = $0;
    break;
   }
   if (((HEAP8[$128 >> 0] | 0) + -48 | 0) >>> 0 < 10) {
    $$0105 = $$2108 + 2 | 0;
    while (1) {
     if (($$0105 | 0) == ($1 | 0)) {
      $$0105$lcssa = $1;
      break;
     }
     if (((HEAP8[$$0105 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
      $$0105$lcssa = $$0105;
      break;
     }
     $$0105 = $$0105 + 1 | 0;
    }
    $141 = (HEAP32[$49 >> 2] | 0) + -24 | 0;
    if ((HEAP8[$141 + 11 >> 0] | 0) < 0) $147 = HEAP32[$141 >> 2] | 0; else $147 = $141;
    HEAP32[$7 >> 2] = $147 + 7;
    HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_($141, $$byval_copy, $128, $$0105$lcssa) | 0;
    $$3109 = $$0105$lcssa;
   } else $$3109 = $128;
   if (($$3109 | 0) != ($1 | 0)) if ((HEAP8[$$3109 >> 0] | 0) == 95) {
    $$7 = $$3109 + 1 | 0;
    break;
   }
   $152 = HEAP32[$49 >> 2] | 0;
   $$0$i$i$idx$i161 = 0;
   while (1) {
    if (($$0$i$i$idx$i161 | 0) == -1) break;
    $$0$i$i$add$i162 = $$0$i$i$idx$i161 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($152 + ($$0$i$i$add$i162 * 24 | 0) | 0);
    $$0$i$i$idx$i161 = $$0$i$i$add$i162;
   }
   HEAP32[$49 >> 2] = $152 + -24;
   $$7 = $0;
   break;
  }
  $125 = HEAP32[$49 >> 2] | 0;
  $$0$i$i$idx$i153 = 0;
  while (1) {
   if (($$0$i$i$idx$i153 | 0) == -1) break;
   $$0$i$i$add$i154 = $$0$i$i$idx$i153 + -1 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($125 + ($$0$i$i$add$i154 * 24 | 0) | 0);
   $$0$i$i$idx$i153 = $$0$i$i$add$i154;
  }
  HEAP32[$49 >> 2] = $125 + -24;
  $$7 = $0;
 } else $$7 = $0; else $$7 = $0; while (0);
 STACKTOP = sp;
 return $$7 | 0;
}

function _dispose_chunk($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$041722 = 0, $$0418$lcssa = 0, $$041821 = 0, $$0429 = 0, $$0436 = 0, $$1 = 0, $$1416 = 0, $$1424 = 0, $$1424$be = 0, $$1424$ph = 0, $$1427 = 0, $$1427$be = 0, $$1427$ph = 0, $$1431 = 0, $$1431$be = 0, $$1431$ph = 0, $$1435 = 0, $$1435$be = 0, $$1435$ph = 0, $$2 = 0, $$3 = 0, $$3433 = 0, $$pre$phi28Z2D = 0, $$pre$phi30Z2D = 0, $$pre$phiZ2D = 0, $101 = 0, $102 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $117 = 0, $12 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $134 = 0, $136 = 0, $138 = 0, $151 = 0, $156 = 0, $158 = 0, $161 = 0, $163 = 0, $166 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $173 = 0, $175 = 0, $176 = 0, $178 = 0, $179 = 0, $184 = 0, $185 = 0, $194 = 0, $199 = 0, $2 = 0, $20 = 0, $202 = 0, $203 = 0, $209 = 0, $22 = 0, $224 = 0, $227 = 0, $228 = 0, $229 = 0, $233 = 0, $234 = 0, $24 = 0, $240 = 0, $245 = 0, $246 = 0, $249 = 0, $251 = 0, $254 = 0, $259 = 0, $265 = 0, $269 = 0, $270 = 0, $277 = 0, $289 = 0, $294 = 0, $301 = 0, $302 = 0, $303 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0, $47 = 0, $49 = 0, $52 = 0, $55 = 0, $56 = 0, $57 = 0, $59 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $80 = 0, $85 = 0, $88 = 0, $89 = 0, $95 = 0;
 $2 = $0 + $1 | 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if (!($4 & 1)) {
  $7 = HEAP32[$0 >> 2] | 0;
  if (!($4 & 3)) return;
  $11 = $0 + (0 - $7) | 0;
  $12 = $7 + $1 | 0;
  $13 = HEAP32[14084] | 0;
  if ($11 >>> 0 < $13 >>> 0) _abort();
  if ((HEAP32[14085] | 0) == ($11 | 0)) {
   $101 = $2 + 4 | 0;
   $102 = HEAP32[$101 >> 2] | 0;
   if (($102 & 3 | 0) != 3) {
    $$1 = $11;
    $$1416 = $12;
    break;
   }
   HEAP32[14082] = $12;
   HEAP32[$101 >> 2] = $102 & -2;
   HEAP32[$11 + 4 >> 2] = $12 | 1;
   HEAP32[$2 >> 2] = $12;
   return;
  }
  $17 = $7 >>> 3;
  if ($7 >>> 0 < 256) {
   $20 = HEAP32[$11 + 8 >> 2] | 0;
   $22 = HEAP32[$11 + 12 >> 2] | 0;
   $24 = 56360 + ($17 << 1 << 2) | 0;
   if (($20 | 0) != ($24 | 0)) {
    if ($13 >>> 0 > $20 >>> 0) _abort();
    if ((HEAP32[$20 + 12 >> 2] | 0) != ($11 | 0)) _abort();
   }
   if (($22 | 0) == ($20 | 0)) {
    HEAP32[14080] = HEAP32[14080] & ~(1 << $17);
    $$1 = $11;
    $$1416 = $12;
    break;
   }
   if (($22 | 0) == ($24 | 0)) $$pre$phi30Z2D = $22 + 8 | 0; else {
    if ($13 >>> 0 > $22 >>> 0) _abort();
    $37 = $22 + 8 | 0;
    if ((HEAP32[$37 >> 2] | 0) == ($11 | 0)) $$pre$phi30Z2D = $37; else _abort();
   }
   HEAP32[$20 + 12 >> 2] = $22;
   HEAP32[$$pre$phi30Z2D >> 2] = $20;
   $$1 = $11;
   $$1416 = $12;
   break;
  }
  $42 = HEAP32[$11 + 24 >> 2] | 0;
  $44 = HEAP32[$11 + 12 >> 2] | 0;
  do if (($44 | 0) == ($11 | 0)) {
   $55 = $11 + 16 | 0;
   $56 = $55 + 4 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   if (!$57) {
    $59 = HEAP32[$55 >> 2] | 0;
    if (!$59) {
     $$3 = 0;
     break;
    } else {
     $$1424$ph = $59;
     $$1427$ph = $55;
    }
   } else {
    $$1424$ph = $57;
    $$1427$ph = $56;
   }
   $$1424 = $$1424$ph;
   $$1427 = $$1427$ph;
   while (1) {
    $61 = $$1424 + 20 | 0;
    $62 = HEAP32[$61 >> 2] | 0;
    if (!$62) {
     $64 = $$1424 + 16 | 0;
     $65 = HEAP32[$64 >> 2] | 0;
     if (!$65) break; else {
      $$1424$be = $65;
      $$1427$be = $64;
     }
    } else {
     $$1424$be = $62;
     $$1427$be = $61;
    }
    $$1424 = $$1424$be;
    $$1427 = $$1427$be;
   }
   if ($13 >>> 0 > $$1427 >>> 0) _abort(); else {
    HEAP32[$$1427 >> 2] = 0;
    $$3 = $$1424;
    break;
   }
  } else {
   $47 = HEAP32[$11 + 8 >> 2] | 0;
   if ($13 >>> 0 > $47 >>> 0) _abort();
   $49 = $47 + 12 | 0;
   if ((HEAP32[$49 >> 2] | 0) != ($11 | 0)) _abort();
   $52 = $44 + 8 | 0;
   if ((HEAP32[$52 >> 2] | 0) == ($11 | 0)) {
    HEAP32[$49 >> 2] = $44;
    HEAP32[$52 >> 2] = $47;
    $$3 = $44;
    break;
   } else _abort();
  } while (0);
  if (!$42) {
   $$1 = $11;
   $$1416 = $12;
  } else {
   $70 = HEAP32[$11 + 28 >> 2] | 0;
   $71 = 56624 + ($70 << 2) | 0;
   do if ((HEAP32[$71 >> 2] | 0) == ($11 | 0)) {
    HEAP32[$71 >> 2] = $$3;
    if (!$$3) {
     HEAP32[14081] = HEAP32[14081] & ~(1 << $70);
     $$1 = $11;
     $$1416 = $12;
     break L1;
    }
   } else if ((HEAP32[14084] | 0) >>> 0 > $42 >>> 0) _abort(); else {
    $80 = $42 + 16 | 0;
    HEAP32[((HEAP32[$80 >> 2] | 0) == ($11 | 0) ? $80 : $42 + 20 | 0) >> 2] = $$3;
    if (!$$3) {
     $$1 = $11;
     $$1416 = $12;
     break L1;
    } else break;
   } while (0);
   $85 = HEAP32[14084] | 0;
   if ($85 >>> 0 > $$3 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $42;
   $88 = $11 + 16 | 0;
   $89 = HEAP32[$88 >> 2] | 0;
   do if ($89 | 0) if ($85 >>> 0 > $89 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $89;
    HEAP32[$89 + 24 >> 2] = $$3;
    break;
   } while (0);
   $95 = HEAP32[$88 + 4 >> 2] | 0;
   if (!$95) {
    $$1 = $11;
    $$1416 = $12;
   } else if ((HEAP32[14084] | 0) >>> 0 > $95 >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $95;
    HEAP32[$95 + 24 >> 2] = $$3;
    $$1 = $11;
    $$1416 = $12;
    break;
   }
  }
 } else {
  $$1 = $0;
  $$1416 = $1;
 } while (0);
 $108 = HEAP32[14084] | 0;
 if ($2 >>> 0 < $108 >>> 0) _abort();
 $110 = $2 + 4 | 0;
 $111 = HEAP32[$110 >> 2] | 0;
 if (!($111 & 2)) {
  if ((HEAP32[14086] | 0) == ($2 | 0)) {
   $117 = (HEAP32[14083] | 0) + $$1416 | 0;
   HEAP32[14083] = $117;
   HEAP32[14086] = $$1;
   HEAP32[$$1 + 4 >> 2] = $117 | 1;
   if (($$1 | 0) != (HEAP32[14085] | 0)) return;
   HEAP32[14085] = 0;
   HEAP32[14082] = 0;
   return;
  }
  if ((HEAP32[14085] | 0) == ($2 | 0)) {
   $125 = (HEAP32[14082] | 0) + $$1416 | 0;
   HEAP32[14082] = $125;
   HEAP32[14085] = $$1;
   HEAP32[$$1 + 4 >> 2] = $125 | 1;
   HEAP32[$$1 + $125 >> 2] = $125;
   return;
  }
  $130 = ($111 & -8) + $$1416 | 0;
  $131 = $111 >>> 3;
  L99 : do if ($111 >>> 0 < 256) {
   $134 = HEAP32[$2 + 8 >> 2] | 0;
   $136 = HEAP32[$2 + 12 >> 2] | 0;
   $138 = 56360 + ($131 << 1 << 2) | 0;
   if (($134 | 0) != ($138 | 0)) {
    if ($108 >>> 0 > $134 >>> 0) _abort();
    if ((HEAP32[$134 + 12 >> 2] | 0) != ($2 | 0)) _abort();
   }
   if (($136 | 0) == ($134 | 0)) {
    HEAP32[14080] = HEAP32[14080] & ~(1 << $131);
    break;
   }
   if (($136 | 0) == ($138 | 0)) $$pre$phi28Z2D = $136 + 8 | 0; else {
    if ($108 >>> 0 > $136 >>> 0) _abort();
    $151 = $136 + 8 | 0;
    if ((HEAP32[$151 >> 2] | 0) == ($2 | 0)) $$pre$phi28Z2D = $151; else _abort();
   }
   HEAP32[$134 + 12 >> 2] = $136;
   HEAP32[$$pre$phi28Z2D >> 2] = $134;
  } else {
   $156 = HEAP32[$2 + 24 >> 2] | 0;
   $158 = HEAP32[$2 + 12 >> 2] | 0;
   do if (($158 | 0) == ($2 | 0)) {
    $169 = $2 + 16 | 0;
    $170 = $169 + 4 | 0;
    $171 = HEAP32[$170 >> 2] | 0;
    if (!$171) {
     $173 = HEAP32[$169 >> 2] | 0;
     if (!$173) {
      $$3433 = 0;
      break;
     } else {
      $$1431$ph = $173;
      $$1435$ph = $169;
     }
    } else {
     $$1431$ph = $171;
     $$1435$ph = $170;
    }
    $$1431 = $$1431$ph;
    $$1435 = $$1435$ph;
    while (1) {
     $175 = $$1431 + 20 | 0;
     $176 = HEAP32[$175 >> 2] | 0;
     if (!$176) {
      $178 = $$1431 + 16 | 0;
      $179 = HEAP32[$178 >> 2] | 0;
      if (!$179) break; else {
       $$1431$be = $179;
       $$1435$be = $178;
      }
     } else {
      $$1431$be = $176;
      $$1435$be = $175;
     }
     $$1431 = $$1431$be;
     $$1435 = $$1435$be;
    }
    if ($108 >>> 0 > $$1435 >>> 0) _abort(); else {
     HEAP32[$$1435 >> 2] = 0;
     $$3433 = $$1431;
     break;
    }
   } else {
    $161 = HEAP32[$2 + 8 >> 2] | 0;
    if ($108 >>> 0 > $161 >>> 0) _abort();
    $163 = $161 + 12 | 0;
    if ((HEAP32[$163 >> 2] | 0) != ($2 | 0)) _abort();
    $166 = $158 + 8 | 0;
    if ((HEAP32[$166 >> 2] | 0) == ($2 | 0)) {
     HEAP32[$163 >> 2] = $158;
     HEAP32[$166 >> 2] = $161;
     $$3433 = $158;
     break;
    } else _abort();
   } while (0);
   if ($156 | 0) {
    $184 = HEAP32[$2 + 28 >> 2] | 0;
    $185 = 56624 + ($184 << 2) | 0;
    do if ((HEAP32[$185 >> 2] | 0) == ($2 | 0)) {
     HEAP32[$185 >> 2] = $$3433;
     if (!$$3433) {
      HEAP32[14081] = HEAP32[14081] & ~(1 << $184);
      break L99;
     }
    } else if ((HEAP32[14084] | 0) >>> 0 > $156 >>> 0) _abort(); else {
     $194 = $156 + 16 | 0;
     HEAP32[((HEAP32[$194 >> 2] | 0) == ($2 | 0) ? $194 : $156 + 20 | 0) >> 2] = $$3433;
     if (!$$3433) break L99; else break;
    } while (0);
    $199 = HEAP32[14084] | 0;
    if ($199 >>> 0 > $$3433 >>> 0) _abort();
    HEAP32[$$3433 + 24 >> 2] = $156;
    $202 = $2 + 16 | 0;
    $203 = HEAP32[$202 >> 2] | 0;
    do if ($203 | 0) if ($199 >>> 0 > $203 >>> 0) _abort(); else {
     HEAP32[$$3433 + 16 >> 2] = $203;
     HEAP32[$203 + 24 >> 2] = $$3433;
     break;
    } while (0);
    $209 = HEAP32[$202 + 4 >> 2] | 0;
    if ($209 | 0) if ((HEAP32[14084] | 0) >>> 0 > $209 >>> 0) _abort(); else {
     HEAP32[$$3433 + 20 >> 2] = $209;
     HEAP32[$209 + 24 >> 2] = $$3433;
     break;
    }
   }
  } while (0);
  HEAP32[$$1 + 4 >> 2] = $130 | 1;
  HEAP32[$$1 + $130 >> 2] = $130;
  if (($$1 | 0) == (HEAP32[14085] | 0)) {
   HEAP32[14082] = $130;
   return;
  } else $$2 = $130;
 } else {
  HEAP32[$110 >> 2] = $111 & -2;
  HEAP32[$$1 + 4 >> 2] = $$1416 | 1;
  HEAP32[$$1 + $$1416 >> 2] = $$1416;
  $$2 = $$1416;
 }
 $224 = $$2 >>> 3;
 if ($$2 >>> 0 < 256) {
  $227 = 56360 + ($224 << 1 << 2) | 0;
  $228 = HEAP32[14080] | 0;
  $229 = 1 << $224;
  if (!($228 & $229)) {
   HEAP32[14080] = $228 | $229;
   $$0436 = $227;
   $$pre$phiZ2D = $227 + 8 | 0;
  } else {
   $233 = $227 + 8 | 0;
   $234 = HEAP32[$233 >> 2] | 0;
   if ((HEAP32[14084] | 0) >>> 0 > $234 >>> 0) _abort(); else {
    $$0436 = $234;
    $$pre$phiZ2D = $233;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$$0436 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$0436;
  HEAP32[$$1 + 12 >> 2] = $227;
  return;
 }
 $240 = $$2 >>> 8;
 if (!$240) $$0429 = 0; else if ($$2 >>> 0 > 16777215) $$0429 = 31; else {
  $245 = ($240 + 1048320 | 0) >>> 16 & 8;
  $246 = $240 << $245;
  $249 = ($246 + 520192 | 0) >>> 16 & 4;
  $251 = $246 << $249;
  $254 = ($251 + 245760 | 0) >>> 16 & 2;
  $259 = 14 - ($249 | $245 | $254) + ($251 << $254 >>> 15) | 0;
  $$0429 = $$2 >>> ($259 + 7 | 0) & 1 | $259 << 1;
 }
 $265 = 56624 + ($$0429 << 2) | 0;
 HEAP32[$$1 + 28 >> 2] = $$0429;
 HEAP32[$$1 + 20 >> 2] = 0;
 HEAP32[$$1 + 16 >> 2] = 0;
 $269 = HEAP32[14081] | 0;
 $270 = 1 << $$0429;
 if (!($269 & $270)) {
  HEAP32[14081] = $269 | $270;
  HEAP32[$265 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $265;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 }
 $277 = HEAP32[$265 >> 2] | 0;
 L189 : do if ((HEAP32[$277 + 4 >> 2] & -8 | 0) == ($$2 | 0)) $$0418$lcssa = $277; else {
  $$041722 = $$2 << (($$0429 | 0) == 31 ? 0 : 25 - ($$0429 >>> 1) | 0);
  $$041821 = $277;
  while (1) {
   $294 = $$041821 + 16 + ($$041722 >>> 31 << 2) | 0;
   $289 = HEAP32[$294 >> 2] | 0;
   if (!$289) break;
   if ((HEAP32[$289 + 4 >> 2] & -8 | 0) == ($$2 | 0)) {
    $$0418$lcssa = $289;
    break L189;
   } else {
    $$041722 = $$041722 << 1;
    $$041821 = $289;
   }
  }
  if ((HEAP32[14084] | 0) >>> 0 > $294 >>> 0) _abort();
  HEAP32[$294 >> 2] = $$1;
  HEAP32[$$1 + 24 >> 2] = $$041821;
  HEAP32[$$1 + 12 >> 2] = $$1;
  HEAP32[$$1 + 8 >> 2] = $$1;
  return;
 } while (0);
 $301 = $$0418$lcssa + 8 | 0;
 $302 = HEAP32[$301 >> 2] | 0;
 $303 = HEAP32[14084] | 0;
 if (!($303 >>> 0 <= $302 >>> 0 & $303 >>> 0 <= $$0418$lcssa >>> 0)) _abort();
 HEAP32[$302 + 12 >> 2] = $$1;
 HEAP32[$301 >> 2] = $$1;
 HEAP32[$$1 + 8 >> 2] = $302;
 HEAP32[$$1 + 12 >> 2] = $$0418$lcssa;
 HEAP32[$$1 + 24 >> 2] = 0;
 return;
}

function __ZN6vision21OrientationAssignment7computeEPfRiiifff($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 $6 = +$6;
 $7 = +$7;
 var $$0 = 0, $$0148 = 0, $$0149 = 0, $$0150 = 0.0, $$0152 = 0, $$0153 = 0, $$pre = 0, $10 = 0, $107 = 0, $11 = 0, $112 = 0, $116 = 0, $118 = 0, $12 = 0, $120 = 0, $13 = 0, $130 = 0.0, $133 = 0.0, $136 = 0.0, $138 = 0.0, $14 = 0, $140 = 0, $145 = 0, $148 = 0, $149 = 0, $152 = 0, $153 = 0, $154 = 0, $159 = 0, $161 = 0, $164 = 0.0, $165 = 0, $171 = 0.0, $174 = 0, $177 = 0.0, $178 = 0, $191 = 0, $192 = 0, $199 = 0.0, $208 = 0, $21 = 0, $213 = 0, $217 = 0, $218 = 0, $219 = 0, $220 = 0, $221 = 0, $223 = 0, $224 = 0.0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $233 = 0, $234 = 0, $239 = 0, $244 = 0.0, $245 = 0.0, $256 = 0.0, $26 = 0, $263 = 0, $30 = 0, $31 = 0, $34 = 0, $35 = 0, $46 = 0, $51 = 0, $55 = 0, $62 = 0, $67 = 0, $71 = 0, $74 = 0, $8 = 0, $85 = 0, $9 = 0, $90 = 0, $94 = 0, $97 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $8 = sp + 32 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 12 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 if (!($5 >= 0.0)) {
  $21 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26035) | 0, 25869) | 0, 33528) | 0, 119) | 0, 33535) | 0, 26065) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $21 + (HEAP32[(HEAP32[$21 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $26 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
  $30 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$26 >> 2] | 0) + 28 >> 2] & 63]($26, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($21, $30) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($21) | 0;
  _abort();
 }
 $31 = $0 + 4 | 0;
 $34 = (Math_imul(HEAP32[$31 >> 2] | 0, $3) | 0) + $4 | 0;
 $35 = $0 + 40 | 0;
 if (!(+((__ZNK6vision5Image5widthEv((HEAP32[$35 >> 2] | 0) + ($34 << 5) | 0) | 0) >>> 0) > $5)) {
  $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26084) | 0, 25869) | 0, 33528) | 0, 120) | 0, 33535) | 0, 26164) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
  $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 63]($51, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
  _abort();
 }
 if (!($6 >= 0.0)) {
  $62 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26200) | 0, 25869) | 0, 33528) | 0, 121) | 0, 33535) | 0, 26230) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $62 + (HEAP32[(HEAP32[$62 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $67 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
  $71 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$67 >> 2] | 0) + 28 >> 2] & 63]($67, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($62, $71) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($62) | 0;
  _abort();
 }
 $74 = (Math_imul(HEAP32[$31 >> 2] | 0, $3) | 0) + $4 | 0;
 if (!(+((__ZNK6vision5Image6heightEv((HEAP32[$35 >> 2] | 0) + ($74 << 5) | 0) | 0) >>> 0) > $6)) {
  $85 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26249) | 0, 25869) | 0, 33528) | 0, 122) | 0, 33535) | 0, 26330) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $85 + (HEAP32[(HEAP32[$85 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $90 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
  $94 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$90 >> 2] | 0) + 28 >> 2] & 63]($90, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($85, $94) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($85) | 0;
  _abort();
 }
 $97 = (Math_imul(HEAP32[$31 >> 2] | 0, $3) | 0) + $4 | 0;
 $99 = (HEAP32[$35 >> 2] | 0) + ($97 << 5) | 0;
 if ((__ZNK6vision5Image8channelsEv($99) | 0) != 2) {
  $107 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26367) | 0, 25869) | 0, 33528) | 0, 126) | 0, 33535) | 0, 26408) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $107 + (HEAP32[(HEAP32[$107 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $112 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
  $116 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$112 >> 2] | 0) + 28 >> 2] & 63]($112, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($107, $116) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($107) | 0;
  _abort();
 }
 HEAP32[$2 >> 2] = 0;
 $118 = ~~($5 + .5);
 $120 = ~~($6 + .5);
 L16 : do if (($118 | 0) >= 0) if (!(($120 | 0) < 0 | (__ZNK6vision5Image5widthEv($99) | 0) >>> 0 <= $118 >>> 0)) if ((__ZNK6vision5Image6heightEv($99) | 0) >>> 0 > $120 >>> 0) {
  $130 = +__ZN6vision4max2IfEET_S1_S1_(1.0, +HEAPF32[$0 + 12 >> 2] * $7);
  $133 = -1.0 / (+__ZN6vision3sqrIfEET_S1_($130) * 2.0);
  $136 = $130 * +HEAPF32[$0 + 16 >> 2];
  $138 = +Math_ceil(+(+__ZN6vision3sqrIfEET_S1_($136)));
  $140 = ~~($136 + .5);
  $145 = __ZN6vision4max2IiEET_S1_S1_(0, $118 - $140 | 0) | 0;
  $148 = __ZN6vision4min2IiEET_S1_S1_($140 + $118 | 0, (__ZNK6vision5Image5widthEv($99) | 0) + -1 | 0) | 0;
  $149 = __ZN6vision4max2IiEET_S1_S1_(0, $120 - $140 | 0) | 0;
  $152 = __ZN6vision4min2IiEET_S1_S1_($140 + $120 | 0, (__ZNK6vision5Image6heightEv($99) | 0) + -1 | 0) | 0;
  $153 = $0 + 28 | 0;
  $154 = HEAP32[$153 >> 2] | 0;
  __ZN6vision10ZeroVectorIfEEvPT_m($154, (HEAP32[$0 + 32 >> 2] | 0) - $154 >> 2);
  $159 = $0 + 8 | 0;
  $$0152 = $149;
  while (1) {
   if (($$0152 | 0) > ($152 | 0)) break;
   $164 = +__ZN6vision3sqrIfEET_S1_(+($$0152 | 0) - $6);
   $165 = __ZNK6vision5Image3getIfEEPKT_m($99, $$0152) | 0;
   $$0153 = $145;
   while (1) {
    if (($$0153 | 0) > ($148 | 0)) break;
    $171 = $164 + +__ZN6vision3sqrIfEET_S1_(+($$0153 | 0) - $5);
    if (!($171 > $138)) {
     $174 = $165 + ($$0153 << 1 << 2) | 0;
     $177 = +__ZN6vision8fastexp6IfEET_S1_($133 * $171);
     $178 = HEAP32[$159 >> 2] | 0;
     __ZN6vision25bilinear_histogram_updateEPfffi(HEAP32[$153 >> 2] | 0, +HEAPF32[$174 >> 2] * +($178 | 0) * .159154943091895, $177 * +HEAPF32[$174 + 4 >> 2], $178);
    }
    $$0153 = $$0153 + 1 | 0;
   }
   $$0152 = $$0152 + 1 | 0;
  }
  $161 = $0 + 20 | 0;
  $$0149 = 0;
  while (1) {
   if (($$0149 | 0) >= (HEAP32[$161 >> 2] | 0)) break;
   $192 = HEAP32[$153 >> 2] | 0;
   __ZN6vision26SmoothOrientationHistogramIfEEvPT_PKS1_mS4_($192, $192, HEAP32[$159 >> 2] | 0, 13528);
   $$0149 = $$0149 + 1 | 0;
  }
  $191 = HEAP32[$159 >> 2] | 0;
  $$0148 = 0;
  $$0150 = 0.0;
  while (1) {
   if (($$0148 | 0) >= ($191 | 0)) break;
   $199 = +HEAPF32[(HEAP32[$153 >> 2] | 0) + ($$0148 << 2) >> 2];
   $$0148 = $$0148 + 1 | 0;
   $$0150 = $199 > $$0150 ? $199 : $$0150;
  }
  if (!($$0150 == 0.0)) {
   if (!($$0150 > 0.0)) {
    $208 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26439) | 0, 25869) | 0, 33528) | 0, 218) | 0, 33535) | 0, 26477) | 0;
    __ZNKSt3__28ios_base6getlocEv($8, $208 + (HEAP32[(HEAP32[$208 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $213 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
    $217 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$213 >> 2] | 0) + 28 >> 2] & 63]($213, 10) | 0;
    __ZNSt3__26localeD2Ev($8);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($208, $217) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($208) | 0;
    _abort();
   }
   $218 = $8 + 4 | 0;
   $219 = $9 + 4 | 0;
   $220 = $10 + 4 | 0;
   $221 = $0 + 24 | 0;
   $$0 = 0;
   $223 = $191;
   while (1) {
    if (($$0 | 0) >= ($223 | 0)) break L16;
    $224 = +($$0 | 0);
    HEAPF32[$8 >> 2] = $224;
    $225 = HEAP32[$153 >> 2] | 0;
    $226 = $225 + ($$0 << 2) | 0;
    $227 = HEAP32[$226 >> 2] | 0;
    HEAP32[$218 >> 2] = $227;
    $228 = $$0 + -1 | 0;
    HEAPF32[$9 >> 2] = +($228 | 0);
    $233 = HEAP32[$225 + ((($228 + $223 | 0) % ($223 | 0) | 0) << 2) >> 2] | 0;
    HEAP32[$219 >> 2] = $233;
    $234 = $$0 + 1 | 0;
    HEAPF32[$10 >> 2] = +($234 | 0);
    $239 = HEAP32[$225 + ((($234 + $223 | 0) % ($223 | 0) | 0) << 2) >> 2] | 0;
    HEAP32[$220 >> 2] = $239;
    $244 = (HEAP32[tempDoublePtr >> 2] = $227, +HEAPF32[tempDoublePtr >> 2]);
    if (+HEAPF32[$226 >> 2] > $$0150 * +HEAPF32[$221 >> 2]) {
     $245 = (HEAP32[tempDoublePtr >> 2] = $239, +HEAPF32[tempDoublePtr >> 2]);
     if ($244 > (HEAP32[tempDoublePtr >> 2] = $233, +HEAPF32[tempDoublePtr >> 2]) & $244 > $245) {
      HEAPF32[$14 >> 2] = $224;
      if (__ZN6vision16Quadratic3PointsIfEEbRT_S2_S2_PKS1_S4_S4_($11, $12, $13, $9, $8, $10) | 0) __ZN6vision22QuadraticCriticalPointIfEEbRT_S1_S1_S1_($14, +HEAPF32[$11 >> 2], +HEAPF32[$12 >> 2], +HEAPF32[$13 >> 2]) | 0;
      $256 = +(HEAP32[$159 >> 2] | 0);
      $263 = HEAP32[$2 >> 2] | 0;
      HEAPF32[$1 + ($263 << 2) >> 2] = (+HEAPF32[$14 >> 2] + .5 + $256) / $256 * 6.283185307179586 % 6.283185307179586;
      HEAP32[$2 >> 2] = $263 + 1;
      $$pre = HEAP32[$159 >> 2] | 0;
     } else $$pre = $223;
    } else $$pre = $223;
    $$0 = $234;
    $223 = $$pre;
   }
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_special_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i158 = 0, $$0$i$i$i161 = 0, $$0$i$i$idx$i = 0, $$11 = 0, $$4156 = 0, $$8 = 0, $$8151 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $113 = 0, $115 = 0, $119 = 0, $124 = 0, $128 = 0, $129 = 0, $133 = 0, $136 = 0, $137 = 0, $141 = 0, $15 = 0, $18 = 0, $19 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $31 = 0, $34 = 0, $35 = 0, $39 = 0, $4 = 0, $42 = 0, $43 = 0, $47 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $55 = 0, $59 = 0, $6 = 0, $62 = 0, $63 = 0, $65 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $74 = 0, $8 = 0, $81 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 60 | 0;
 $4 = sp + 48 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 24 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 L1 : do if (($1 - $0 | 0) > 2) {
  switch (HEAP8[$0 >> 0] | 0) {
  case 84:
   break;
  case 71:
   {
    switch (HEAP8[$0 + 1 >> 0] | 0) {
    case 86:
     {
      $128 = $0 + 2 | 0;
      $129 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($128, $1, $2) | 0;
      if (($129 | 0) == ($128 | 0)) {
       $$11 = $0;
       label = 60;
       break L1;
      }
      $133 = HEAP32[$2 + 4 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($133 | 0)) {
       $$8 = $0;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($133 + -24 | 0, 0, 51461) | 0;
      $$11 = $129;
      label = 60;
      break L1;
      break;
     }
    case 82:
     {
      $136 = $0 + 2 | 0;
      $137 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($136, $1, $2) | 0;
      if (($137 | 0) == ($136 | 0)) {
       $$11 = $0;
       label = 60;
       break L1;
      }
      $141 = HEAP32[$2 + 4 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($141 | 0)) {
       $$8 = $0;
       break L1;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($141 + -24 | 0, 0, 51481) | 0;
      $$11 = $137;
      label = 60;
      break L1;
      break;
     }
    default:
     {
      $$11 = $0;
      label = 60;
      break L1;
     }
    }
    break;
   }
  default:
   {
    $$11 = $0;
    label = 60;
    break L1;
   }
  }
  $15 = $0 + 1 | 0;
  switch (HEAP8[$15 >> 0] | 0) {
  case 86:
   {
    $18 = $0 + 2 | 0;
    $19 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($18, $1, $2) | 0;
    if (($19 | 0) == ($18 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $23 = HEAP32[$2 + 4 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($23 | 0)) {
     $$8 = $0;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($23 + -24 | 0, 0, 51310) | 0;
    $$11 = $19;
    label = 60;
    break L1;
    break;
   }
  case 84:
   {
    $26 = $0 + 2 | 0;
    $27 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($26, $1, $2) | 0;
    if (($27 | 0) == ($26 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $31 = HEAP32[$2 + 4 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($31 | 0)) {
     $$8 = $0;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($31 + -24 | 0, 0, 51322) | 0;
    $$11 = $27;
    label = 60;
    break L1;
    break;
   }
  case 73:
   {
    $34 = $0 + 2 | 0;
    $35 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($34, $1, $2) | 0;
    if (($35 | 0) == ($34 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $39 = HEAP32[$2 + 4 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($39 | 0)) {
     $$8 = $0;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($39 + -24 | 0, 0, 51331) | 0;
    $$11 = $35;
    label = 60;
    break L1;
    break;
   }
  case 83:
   {
    $42 = $0 + 2 | 0;
    $43 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($42, $1, $2) | 0;
    if (($43 | 0) == ($42 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $47 = HEAP32[$2 + 4 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($47 | 0)) {
     $$8 = $0;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($47 + -24 | 0, 0, 51345) | 0;
    $$11 = $43;
    label = 60;
    break L1;
    break;
   }
  case 99:
   {
    $50 = $0 + 2 | 0;
    $51 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($50, $1) | 0;
    if (($51 | 0) == ($50 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $53 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($51, $1) | 0;
    if (($53 | 0) == ($51 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $55 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($53, $1, $2) | 0;
    if (($55 | 0) == ($53 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $59 = HEAP32[$2 + 4 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($59 | 0)) {
     $$8 = $0;
     break L1;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($59 + -24 | 0, 0, 51364) | 0;
    $$11 = $55;
    label = 60;
    break L1;
    break;
   }
  case 67:
   {
    $62 = $0 + 2 | 0;
    $63 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($62, $1, $2) | 0;
    if (($63 | 0) == ($62 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $65 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($63, $1) | 0;
    if (($65 | 0) == ($63 | 0) | ($65 | 0) == ($1 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    if ((HEAP8[$65 >> 0] | 0) != 95) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $70 = $65 + 1 | 0;
    $71 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($70, $1, $2) | 0;
    if (($71 | 0) == ($70 | 0)) {
     $$11 = $0;
     label = 60;
     break L1;
    }
    $73 = $2 + 4 | 0;
    $74 = HEAP32[$73 >> 2] | 0;
    if ((($74 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$8 = $0;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, $74 + -24 | 0);
    $81 = HEAP32[$73 >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($81 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$73 >> 2] = $81 + -24;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($4, 0, 51391) | 0;
    HEAP32[$7 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i161 = 0;
    while (1) {
     if (($$0$i$i$i161 | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i161 << 2) >> 2] = 0;
     $$0$i$i$i161 = $$0$i$i$i161 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 51416) | 0;
    HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    $$0$i$i$i158 = 0;
    while (1) {
     if (($$0$i$i$i158 | 0) == 3) break;
     HEAP32[$7 + ($$0$i$i$i158 << 2) >> 2] = 0;
     $$0$i$i$i158 = $$0$i$i$i158 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($8, (HEAP32[$73 >> 2] | 0) + -24 | 0);
    $93 = HEAP8[$8 + 11 >> 0] | 0;
    $94 = $93 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($6, $94 ? HEAP32[$8 >> 2] | 0 : $8, $94 ? HEAP32[$8 + 4 >> 2] | 0 : $93 & 255) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    $104 = HEAP32[$73 >> 2] | 0;
    $105 = $104 + -24 | 0;
    $106 = $105 + 11 | 0;
    if ((HEAP8[$106 >> 0] | 0) < 0) {
     $109 = HEAP32[$105 >> 2] | 0;
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($109, $3);
     HEAP32[$104 + -20 >> 2] = 0;
    } else {
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($105, $3);
     HEAP8[$106 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($105);
    HEAP32[$105 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$105 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$105 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i$i | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    $$11 = $71;
    label = 60;
    break L1;
    break;
   }
  default:
   {
    $113 = __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($15, $1) | 0;
    do if (($113 | 0) == ($15 | 0)) {
     $$4156 = 3;
     $$8151 = $0;
    } else {
     $115 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($113, $1, $2) | 0;
     if (($115 | 0) == ($113 | 0)) {
      $$4156 = 0;
      $$8151 = $0;
     } else {
      $119 = HEAP32[$2 + 4 >> 2] | 0;
      if ((HEAP32[$2 >> 2] | 0) == ($119 | 0)) {
       $$4156 = 1;
       $$8151 = $0;
      } else {
       $124 = $119 + -24 | 0;
       if ((HEAP8[$0 + 2 >> 0] | 0) == 118) {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($124, 0, 51421) | 0;
        $$4156 = 0;
        $$8151 = $115;
        break;
       } else {
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($124, 0, 51439) | 0;
        $$4156 = 0;
        $$8151 = $115;
        break;
       }
      }
     }
    } while (0);
    switch ($$4156 & 3) {
    case 3:
    case 0:
     {
      $$11 = $$8151;
      label = 60;
      break L1;
      break;
     }
    default:
     {}
    }
    if (!$$4156) {
     $$11 = $$8151;
     label = 60;
     break L1;
    } else {
     $$8 = $0;
     break L1;
    }
   }
  }
 } else {
  $$11 = $0;
  label = 60;
 } while (0);
 if ((label | 0) == 60) $$8 = $$11;
 STACKTOP = sp;
 return $$8 | 0;
}

function __ZN6vision10DoGPyramid25difference_image_binomialERNS_5ImageERKS1_S4_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$041 = 0, $102 = 0, $106 = 0, $107 = 0, $115 = 0, $12 = 0, $120 = 0, $124 = 0, $125 = 0, $133 = 0, $138 = 0, $142 = 0, $143 = 0, $151 = 0, $156 = 0, $160 = 0, $161 = 0, $169 = 0, $17 = 0, $174 = 0, $178 = 0, $181 = 0, $182 = 0, $183 = 0, $21 = 0, $29 = 0, $34 = 0, $38 = 0, $4 = 0, $46 = 0, $51 = 0, $55 = 0, $63 = 0, $68 = 0, $72 = 0, $80 = 0, $85 = 0, $89 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if ((__ZNK6vision5Image4typeEv($1) | 0) != 2) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 20990) | 0, 20520) | 0, 33528) | 0, 86) | 0, 33535) | 0, 21035) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 63]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image4typeEv($2) | 0) != 2) {
  $29 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21061) | 0, 20520) | 0, 33528) | 0, 87) | 0, 33535) | 0, 21035) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $29 + (HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $34 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $38 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$34 >> 2] | 0) + 28 >> 2] & 63]($34, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($29, $38) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($29) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image4typeEv($3) | 0) != 2) {
  $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21108) | 0, 20520) | 0, 33528) | 0, 88) | 0, 33535) | 0, 21035) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 63]($51, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv($1) | 0) != 1) {
  $63 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21155) | 0, 20520) | 0, 33528) | 0, 89) | 0, 33535) | 0, 21196) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $63 + (HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $68 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $72 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$68 >> 2] | 0) + 28 >> 2] & 63]($68, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($63, $72) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($63) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv($2) | 0) != 1) {
  $80 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21233) | 0, 20520) | 0, 33528) | 0, 90) | 0, 33535) | 0, 21196) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $80 + (HEAP32[(HEAP32[$80 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $85 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $89 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$85 >> 2] | 0) + 28 >> 2] & 63]($85, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($80, $89) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($80) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv($3) | 0) != 1) {
  $97 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21276) | 0, 20520) | 0, 33528) | 0, 91) | 0, 33535) | 0, 21196) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $97 + (HEAP32[(HEAP32[$97 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $102 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $106 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$102 >> 2] | 0) + 28 >> 2] & 63]($102, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($97, $106) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($97) | 0;
  _abort();
 }
 $107 = __ZNK6vision5Image5widthEv($1) | 0;
 if (($107 | 0) != (__ZNK6vision5Image5widthEv($3) | 0)) {
  $115 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21319) | 0, 20520) | 0, 33528) | 0, 92) | 0, 33535) | 0, 21367) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $115 + (HEAP32[(HEAP32[$115 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $120 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $124 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$120 >> 2] | 0) + 28 >> 2] & 63]($120, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($115, $124) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($115) | 0;
  _abort();
 }
 $125 = __ZNK6vision5Image6heightEv($1) | 0;
 if (($125 | 0) != (__ZNK6vision5Image6heightEv($3) | 0)) {
  $133 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21399) | 0, 20520) | 0, 33528) | 0, 93) | 0, 33535) | 0, 21449) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $133 + (HEAP32[(HEAP32[$133 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $138 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $142 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$138 >> 2] | 0) + 28 >> 2] & 63]($138, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($133, $142) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($133) | 0;
  _abort();
 }
 $143 = __ZNK6vision5Image5widthEv($2) | 0;
 if (($143 | 0) != (__ZNK6vision5Image5widthEv($3) | 0)) {
  $151 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21482) | 0, 20520) | 0, 33528) | 0, 94) | 0, 33535) | 0, 21367) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $151 + (HEAP32[(HEAP32[$151 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $156 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $160 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$156 >> 2] | 0) + 28 >> 2] & 63]($156, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($151, $160) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($151) | 0;
  _abort();
 }
 $161 = __ZNK6vision5Image6heightEv($2) | 0;
 if (($161 | 0) != (__ZNK6vision5Image6heightEv($3) | 0)) {
  $169 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21532) | 0, 20520) | 0, 33528) | 0, 95) | 0, 33535) | 0, 21449) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $169 + (HEAP32[(HEAP32[$169 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $174 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $178 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$174 >> 2] | 0) + 28 >> 2] & 63]($174, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($169, $178) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($169) | 0;
  _abort();
 }
 $$041 = 0;
 while (1) {
  if ($$041 >>> 0 >= (__ZNK6vision5Image6heightEv($2) | 0) >>> 0) break;
  $181 = __ZN6vision5Image3getIfEEPT_m($1, $$041) | 0;
  $182 = __ZNK6vision5Image3getIfEEPKT_m($2, $$041) | 0;
  $183 = __ZNK6vision5Image3getIfEEPKT_m($3, $$041) | 0;
  $$0 = 0;
  while (1) {
   if ($$0 >>> 0 >= (__ZNK6vision5Image5widthEv($2) | 0) >>> 0) break;
   HEAPF32[$181 + ($$0 << 2) >> 2] = +HEAPF32[$182 + ($$0 << 2) >> 2] - +HEAPF32[$183 + ($$0 << 2) >> 2];
   $$0 = $$0 + 1 | 0;
  }
  $$041 = $$041 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function ___intscan($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0154215 = 0, $$0157 = 0, $$0159 = 0, $$1155184 = 0, $$1158 = 0, $$1160 = 0, $$1160170 = 0, $$1165 = 0, $$1165168 = 0, $$1165169 = 0, $$2156202 = 0, $$3162208 = 0, $$4163$lcssa = 0, $$6$lcssa = 0, $$7190 = 0, $$8 = 0, $$pre$phi237Z2D = 0, $$pre$phi239Z2D = 0, $104 = 0, $112 = 0, $128 = 0, $130 = 0, $131 = 0, $135 = 0, $136 = 0, $144 = 0, $145 = 0, $150 = 0, $151 = 0, $154 = 0, $156 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $165 = 0, $166 = 0, $167 = 0, $175 = 0, $185 = 0, $186 = 0, $190 = 0, $191 = 0, $199 = 0, $20 = 0, $200 = 0, $206 = 0, $207 = 0, $208 = 0, $21 = 0, $210 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $225 = 0, $226 = 0, $227 = 0, $235 = 0, $243 = 0, $251 = 0, $255 = 0, $264 = 0, $266 = 0, $276 = 0, $277 = 0, $28 = 0, $284 = 0, $286 = 0, $289 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $32 = 0, $40 = 0, $42 = 0, $50 = 0, $54 = 0, $6 = 0, $68 = 0, $7 = 0, $70 = 0, $74 = 0, $75 = 0, $8 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $94 = 0, $96 = 0, $spec$select166 = 0, label = 0;
 L1 : do if ($1 >>> 0 > 36) {
  $6 = ___errno_location() | 0;
  HEAP32[$6 >> 2] = 22;
  $291 = 0;
  $292 = 0;
 } else {
  $7 = $0 + 4 | 0;
  $8 = $0 + 104 | 0;
  do {
   $9 = HEAP32[$7 >> 2] | 0;
   if ($9 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
    HEAP32[$7 >> 2] = $9 + 1;
    $16 = HEAPU8[$9 >> 0] | 0;
   } else $16 = ___shgetc($0) | 0;
  } while ((_isspace($16) | 0) != 0);
  L11 : do switch ($16 | 0) {
  case 43:
  case 45:
   {
    $20 = (($16 | 0) == 45) << 31 >> 31;
    $21 = HEAP32[$7 >> 2] | 0;
    if ($21 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
     HEAP32[$7 >> 2] = $21 + 1;
     $$0157 = $20;
     $$0159 = HEAPU8[$21 >> 0] | 0;
     break L11;
    } else {
     $$0157 = $20;
     $$0159 = ___shgetc($0) | 0;
     break L11;
    }
    break;
   }
  default:
   {
    $$0157 = 0;
    $$0159 = $16;
   }
  } while (0);
  $28 = ($1 | 0) == 0;
  do if (($1 | 16 | 0) == 16 & ($$0159 | 0) == 48) {
   $32 = HEAP32[$7 >> 2] | 0;
   if ($32 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
    HEAP32[$7 >> 2] = $32 + 1;
    $40 = HEAPU8[$32 >> 0] | 0;
   } else $40 = ___shgetc($0) | 0;
   if (($40 | 32 | 0) != 120) if ($28) {
    $$1160170 = $40;
    $$1165168 = 8;
    label = 47;
    break;
   } else {
    $$1160 = $40;
    $$1165 = $1;
    label = 32;
    break;
   }
   $42 = HEAP32[$7 >> 2] | 0;
   if ($42 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
    HEAP32[$7 >> 2] = $42 + 1;
    $50 = HEAPU8[$42 >> 0] | 0;
   } else $50 = ___shgetc($0) | 0;
   if ((HEAPU8[3713 + $50 >> 0] | 0) > 15) {
    $54 = (HEAP32[$8 >> 2] | 0) == 0;
    if (!$54) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
    if (!$2) {
     ___shlim($0, 0, 0);
     $291 = 0;
     $292 = 0;
     break L1;
    }
    if ($54) {
     $291 = 0;
     $292 = 0;
     break L1;
    }
    HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
    $291 = 0;
    $292 = 0;
    break L1;
   } else {
    $$1160170 = $50;
    $$1165168 = 16;
    label = 47;
   }
  } else {
   $spec$select166 = $28 ? 10 : $1;
   if ($spec$select166 >>> 0 > (HEAPU8[3713 + $$0159 >> 0] | 0) >>> 0) {
    $$1160 = $$0159;
    $$1165 = $spec$select166;
    label = 32;
   } else {
    if (HEAP32[$8 >> 2] | 0) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
    ___shlim($0, 0, 0);
    $68 = ___errno_location() | 0;
    HEAP32[$68 >> 2] = 22;
    $291 = 0;
    $292 = 0;
    break L1;
   }
  } while (0);
  L43 : do if ((label | 0) == 32) if (($$1165 | 0) == 10) {
   $70 = $$1160 + -48 | 0;
   if ($70 >>> 0 < 10) {
    $$0154215 = 0;
    $74 = $70;
    do {
     $$0154215 = ($$0154215 * 10 | 0) + $74 | 0;
     $75 = HEAP32[$7 >> 2] | 0;
     if ($75 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
      HEAP32[$7 >> 2] = $75 + 1;
      $83 = HEAPU8[$75 >> 0] | 0;
     } else $83 = ___shgetc($0) | 0;
     $74 = $83 + -48 | 0;
    } while ($74 >>> 0 < 10 & $$0154215 >>> 0 < 429496729);
    if ($74 >>> 0 < 10) {
     $$3162208 = $83;
     $88 = $$0154215;
     $89 = 0;
     $92 = $74;
     while (1) {
      $90 = ___muldi3($88 | 0, $89 | 0, 10, 0) | 0;
      $91 = getTempRet0() | 0;
      $94 = (($92 | 0) < 0) << 31 >> 31;
      $96 = ~$94;
      if ($91 >>> 0 > $96 >>> 0 | ($91 | 0) == ($96 | 0) & $90 >>> 0 > ~$92 >>> 0) {
       $$1165169 = 10;
       $$8 = $$3162208;
       $293 = $88;
       $294 = $89;
       label = 76;
       break L43;
      }
      $88 = _i64Add($90 | 0, $91 | 0, $92 | 0, $94 | 0) | 0;
      $89 = getTempRet0() | 0;
      $104 = HEAP32[$7 >> 2] | 0;
      if ($104 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
       HEAP32[$7 >> 2] = $104 + 1;
       $112 = HEAPU8[$104 >> 0] | 0;
      } else $112 = ___shgetc($0) | 0;
      $92 = $112 + -48 | 0;
      if (!($92 >>> 0 < 10 & ($89 >>> 0 < 429496729 | ($89 | 0) == 429496729 & $88 >>> 0 < 2576980378))) break; else $$3162208 = $112;
     }
     if ($92 >>> 0 > 9) {
      $$1158 = $$0157;
      $264 = $89;
      $266 = $88;
     } else {
      $$1165169 = 10;
      $$8 = $112;
      $293 = $88;
      $294 = $89;
      label = 76;
     }
    } else {
     $$1158 = $$0157;
     $264 = 0;
     $266 = $$0154215;
    }
   } else {
    $$1158 = $$0157;
    $264 = 0;
    $266 = 0;
   }
  } else {
   $$1160170 = $$1160;
   $$1165168 = $$1165;
   label = 47;
  } while (0);
  L63 : do if ((label | 0) == 47) {
   if (!($$1165168 + -1 & $$1165168)) {
    $128 = HEAP8[46052 + (($$1165168 * 23 | 0) >>> 5 & 7) >> 0] | 0;
    $130 = HEAP8[3713 + $$1160170 >> 0] | 0;
    $131 = $130 & 255;
    if ($$1165168 >>> 0 > $131 >>> 0) {
     $$1155184 = 0;
     $135 = $131;
     do {
      $$1155184 = $135 | $$1155184 << $128;
      $136 = HEAP32[$7 >> 2] | 0;
      if ($136 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
       HEAP32[$7 >> 2] = $136 + 1;
       $144 = HEAPU8[$136 >> 0] | 0;
      } else $144 = ___shgetc($0) | 0;
      $145 = HEAP8[3713 + $144 >> 0] | 0;
      $135 = $145 & 255;
     } while ($$1155184 >>> 0 < 134217728 & $$1165168 >>> 0 > $135 >>> 0);
     $$4163$lcssa = $144;
     $$pre$phi237Z2D = $135;
     $154 = 0;
     $156 = $$1155184;
     $295 = $145;
    } else {
     $$4163$lcssa = $$1160170;
     $$pre$phi237Z2D = $131;
     $154 = 0;
     $156 = 0;
     $295 = $130;
    }
    $150 = _bitshift64Lshr(-1, -1, $128 | 0) | 0;
    $151 = getTempRet0() | 0;
    if ($$1165168 >>> 0 <= $$pre$phi237Z2D >>> 0 | ($151 >>> 0 < $154 >>> 0 | ($151 | 0) == ($154 | 0) & $150 >>> 0 < $156 >>> 0)) {
     $$1165169 = $$1165168;
     $$8 = $$4163$lcssa;
     $293 = $156;
     $294 = $154;
     label = 76;
     break;
    }
    $160 = $156;
    $161 = $154;
    $165 = $295;
    while (1) {
     $162 = _bitshift64Shl($160 | 0, $161 | 0, $128 | 0) | 0;
     $163 = getTempRet0() | 0;
     $166 = $162 | $165 & 255;
     $167 = HEAP32[$7 >> 2] | 0;
     if ($167 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
      HEAP32[$7 >> 2] = $167 + 1;
      $175 = HEAPU8[$167 >> 0] | 0;
     } else $175 = ___shgetc($0) | 0;
     $165 = HEAP8[3713 + $175 >> 0] | 0;
     if ($$1165168 >>> 0 <= ($165 & 255) >>> 0 | ($163 >>> 0 > $151 >>> 0 | ($163 | 0) == ($151 | 0) & $166 >>> 0 > $150 >>> 0)) {
      $$1165169 = $$1165168;
      $$8 = $175;
      $293 = $166;
      $294 = $163;
      label = 76;
      break L63;
     } else {
      $160 = $166;
      $161 = $163;
     }
    }
   }
   $185 = HEAP8[3713 + $$1160170 >> 0] | 0;
   $186 = $185 & 255;
   if ($$1165168 >>> 0 > $186 >>> 0) {
    $$2156202 = 0;
    $190 = $186;
    do {
     $$2156202 = $190 + (Math_imul($$2156202, $$1165168) | 0) | 0;
     $191 = HEAP32[$7 >> 2] | 0;
     if ($191 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
      HEAP32[$7 >> 2] = $191 + 1;
      $199 = HEAPU8[$191 >> 0] | 0;
     } else $199 = ___shgetc($0) | 0;
     $200 = HEAP8[3713 + $199 >> 0] | 0;
     $190 = $200 & 255;
    } while ($$2156202 >>> 0 < 119304647 & $$1165168 >>> 0 > $190 >>> 0);
    $$6$lcssa = $199;
    $$pre$phi239Z2D = $190;
    $296 = $200;
    $297 = $$2156202;
    $298 = 0;
   } else {
    $$6$lcssa = $$1160170;
    $$pre$phi239Z2D = $186;
    $296 = $185;
    $297 = 0;
    $298 = 0;
   }
   if ($$1165168 >>> 0 > $$pre$phi239Z2D >>> 0) {
    $206 = ___udivdi3(-1, -1, $$1165168 | 0, 0) | 0;
    $207 = getTempRet0() | 0;
    $$7190 = $$6$lcssa;
    $208 = $298;
    $210 = $297;
    $218 = $296;
    while (1) {
     if ($208 >>> 0 > $207 >>> 0 | ($208 | 0) == ($207 | 0) & $210 >>> 0 > $206 >>> 0) {
      $$1165169 = $$1165168;
      $$8 = $$7190;
      $293 = $210;
      $294 = $208;
      label = 76;
      break L63;
     }
     $215 = ___muldi3($210 | 0, $208 | 0, $$1165168 | 0, 0) | 0;
     $216 = getTempRet0() | 0;
     $217 = $218 & 255;
     if ($216 >>> 0 > 4294967295 | ($216 | 0) == -1 & $215 >>> 0 > ~$217 >>> 0) {
      $$1165169 = $$1165168;
      $$8 = $$7190;
      $293 = $210;
      $294 = $208;
      label = 76;
      break L63;
     }
     $225 = _i64Add($215 | 0, $216 | 0, $217 | 0, 0) | 0;
     $226 = getTempRet0() | 0;
     $227 = HEAP32[$7 >> 2] | 0;
     if ($227 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
      HEAP32[$7 >> 2] = $227 + 1;
      $235 = HEAPU8[$227 >> 0] | 0;
     } else $235 = ___shgetc($0) | 0;
     $218 = HEAP8[3713 + $235 >> 0] | 0;
     if ($$1165168 >>> 0 <= ($218 & 255) >>> 0) {
      $$1165169 = $$1165168;
      $$8 = $235;
      $293 = $225;
      $294 = $226;
      label = 76;
      break;
     } else {
      $$7190 = $235;
      $208 = $226;
      $210 = $225;
     }
    }
   } else {
    $$1165169 = $$1165168;
    $$8 = $$6$lcssa;
    $293 = $297;
    $294 = $298;
    label = 76;
   }
  } while (0);
  if ((label | 0) == 76) if ($$1165169 >>> 0 > (HEAPU8[3713 + $$8 >> 0] | 0) >>> 0) {
   do {
    $243 = HEAP32[$7 >> 2] | 0;
    if ($243 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
     HEAP32[$7 >> 2] = $243 + 1;
     $251 = HEAPU8[$243 >> 0] | 0;
    } else $251 = ___shgetc($0) | 0;
   } while ($$1165169 >>> 0 > (HEAPU8[3713 + $251 >> 0] | 0) >>> 0);
   $255 = ___errno_location() | 0;
   HEAP32[$255 >> 2] = 34;
   $$1158 = ($3 & 1 | 0) == 0 & 0 == 0 ? $$0157 : 0;
   $264 = $4;
   $266 = $3;
  } else {
   $$1158 = $$0157;
   $264 = $294;
   $266 = $293;
  }
  if (HEAP32[$8 >> 2] | 0) HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + -1;
  if (!($264 >>> 0 < $4 >>> 0 | ($264 | 0) == ($4 | 0) & $266 >>> 0 < $3 >>> 0)) {
   if (!(($3 & 1 | 0) != 0 | 0 != 0 | ($$1158 | 0) != 0)) {
    $276 = ___errno_location() | 0;
    HEAP32[$276 >> 2] = 34;
    $277 = _i64Add($3 | 0, $4 | 0, -1, -1) | 0;
    $291 = getTempRet0() | 0;
    $292 = $277;
    break;
   }
   if ($264 >>> 0 > $4 >>> 0 | ($264 | 0) == ($4 | 0) & $266 >>> 0 > $3 >>> 0) {
    $284 = ___errno_location() | 0;
    HEAP32[$284 >> 2] = 34;
    $291 = $4;
    $292 = $3;
    break;
   }
  }
  $286 = (($$1158 | 0) < 0) << 31 >> 31;
  $289 = _i64Subtract($266 ^ $$1158 | 0, $264 ^ $286 | 0, $$1158 | 0, $286 | 0) | 0;
  $291 = getTempRet0() | 0;
  $292 = $289;
 } while (0);
 setTempRet0($291 | 0);
 return $292 | 0;
}

function __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i49 = 0, $$0$i$i$i55 = 0, $$0$i$i$i61 = 0, $$0$i$i$i67 = 0, $$0$i$i$i73 = 0, $$0$i$i$i79 = 0, $$0$i$i$i85 = 0, $$pre$phi$i$i47Z2D = 0, $$pre$phi$i$i53Z2D = 0, $$pre$phi$i$i59Z2D = 0, $$pre$phi$i$i65Z2D = 0, $$pre$phi$i$i71Z2D = 0, $$pre$phi$i$i77Z2D = 0, $$pre$phi$i$i83Z2D = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi88Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $105 = 0, $109 = 0, $11 = 0, $113 = 0, $116 = 0, $12 = 0, $123 = 0, $126 = 0, $16 = 0, $20 = 0, $23 = 0, $30 = 0, $34 = 0, $37 = 0, $44 = 0, $48 = 0, $52 = 0, $55 = 0, $62 = 0, $65 = 0, $73 = 0, $77 = 0, $81 = 0, $84 = 0, $91 = 0, $95 = 0, $98 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 58116) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 63]($10, $12);
   $16 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $16;
   HEAP8[$3 + 1 >> 0] = $16 >> 8;
   HEAP8[$3 + 2 >> 0] = $16 >> 16;
   HEAP8[$3 + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 63]($11, $12);
   $20 = $8 + 11 | 0;
   if ((HEAP8[$20 >> 0] | 0) < 0) {
    $23 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($23, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$iZ2D = $8;
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$20 >> 0] = 0;
    $$pre$phi$i$iZ2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($8, 0);
   HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$11 >> 2];
   HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phiZ2D = $12;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 40 >> 2] & 63]($10, $12);
   $30 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $30;
   HEAP8[$3 + 1 >> 0] = $30 >> 8;
   HEAP8[$3 + 2 >> 0] = $30 >> 16;
   HEAP8[$3 + 3 >> 0] = $30 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 63]($11, $12);
   $34 = $8 + 11 | 0;
   if ((HEAP8[$34 >> 0] | 0) < 0) {
    $37 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($37, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$i47Z2D = $8;
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$34 >> 0] = 0;
    $$pre$phi$i$i47Z2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($8, 0);
   HEAP32[$$pre$phi$i$i47Z2D >> 2] = HEAP32[$11 >> 2];
   HEAP32[$$pre$phi$i$i47Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$$pre$phi$i$i47Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i49 = 0;
   while (1) {
    if (($$0$i$i$i49 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i49 << 2) >> 2] = 0;
    $$0$i$i$i49 = $$0$i$i$i49 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phiZ2D = $12;
  }
  $44 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP8[$4 >> 0] = $44;
  $48 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  HEAP8[$5 >> 0] = $48;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 20 >> 2] & 63]($11, $12);
  $52 = $6 + 11 | 0;
  if ((HEAP8[$52 >> 0] | 0) < 0) {
   $55 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($55, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i53Z2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$52 >> 0] = 0;
   $$pre$phi$i$i53Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($6, 0);
  HEAP32[$$pre$phi$i$i53Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i53Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i53Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i55 = 0;
  while (1) {
   if (($$0$i$i$i55 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i55 << 2) >> 2] = 0;
   $$0$i$i$i55 = $$0$i$i$i55 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 24 >> 2] & 63]($11, $12);
  $62 = $7 + 11 | 0;
  if ((HEAP8[$62 >> 0] | 0) < 0) {
   $65 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($65, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i59Z2D = $7;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$62 >> 0] = 0;
   $$pre$phi$i$i59Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($7, 0);
  HEAP32[$$pre$phi$i$i59Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i59Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i59Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i61 = 0;
  while (1) {
   if (($$0$i$i$i61 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i61 << 2) >> 2] = 0;
   $$0$i$i$i61 = $$0$i$i$i61 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $73 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 58108) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$73 >> 2] | 0) + 44 >> 2] & 63]($10, $73);
   $77 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $77;
   HEAP8[$3 + 1 >> 0] = $77 >> 8;
   HEAP8[$3 + 2 >> 0] = $77 >> 16;
   HEAP8[$3 + 3 >> 0] = $77 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$73 >> 2] | 0) + 32 >> 2] & 63]($11, $73);
   $81 = $8 + 11 | 0;
   if ((HEAP8[$81 >> 0] | 0) < 0) {
    $84 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($84, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$i65Z2D = $8;
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$81 >> 0] = 0;
    $$pre$phi$i$i65Z2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($8, 0);
   HEAP32[$$pre$phi$i$i65Z2D >> 2] = HEAP32[$11 >> 2];
   HEAP32[$$pre$phi$i$i65Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$$pre$phi$i$i65Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i67 = 0;
   while (1) {
    if (($$0$i$i$i67 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i67 << 2) >> 2] = 0;
    $$0$i$i$i67 = $$0$i$i$i67 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phi88Z2D = $73;
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$73 >> 2] | 0) + 40 >> 2] & 63]($10, $73);
   $91 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $91;
   HEAP8[$3 + 1 >> 0] = $91 >> 8;
   HEAP8[$3 + 2 >> 0] = $91 >> 16;
   HEAP8[$3 + 3 >> 0] = $91 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$73 >> 2] | 0) + 28 >> 2] & 63]($11, $73);
   $95 = $8 + 11 | 0;
   if ((HEAP8[$95 >> 0] | 0) < 0) {
    $98 = HEAP32[$8 >> 2] | 0;
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($98, $10);
    HEAP32[$8 + 4 >> 2] = 0;
    $$pre$phi$i$i71Z2D = $8;
   } else {
    HEAP8[$10 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
    HEAP8[$95 >> 0] = 0;
    $$pre$phi$i$i71Z2D = $8;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($8, 0);
   HEAP32[$$pre$phi$i$i71Z2D >> 2] = HEAP32[$11 >> 2];
   HEAP32[$$pre$phi$i$i71Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$$pre$phi$i$i71Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i73 = 0;
   while (1) {
    if (($$0$i$i$i73 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i73 << 2) >> 2] = 0;
    $$0$i$i$i73 = $$0$i$i$i73 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
   $$pre$phi88Z2D = $73;
  }
  $105 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 12 >> 2] & 127]($73) | 0;
  HEAP8[$4 >> 0] = $105;
  $109 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 16 >> 2] & 127]($73) | 0;
  HEAP8[$5 >> 0] = $109;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi88Z2D >> 2] | 0) + 20 >> 2] & 63]($11, $73);
  $113 = $6 + 11 | 0;
  if ((HEAP8[$113 >> 0] | 0) < 0) {
   $116 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($116, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i77Z2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$113 >> 0] = 0;
   $$pre$phi$i$i77Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($6, 0);
  HEAP32[$$pre$phi$i$i77Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i77Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i77Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i79 = 0;
  while (1) {
   if (($$0$i$i$i79 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i79 << 2) >> 2] = 0;
   $$0$i$i$i79 = $$0$i$i$i79 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$$pre$phi88Z2D >> 2] | 0) + 24 >> 2] & 63]($11, $73);
  $123 = $7 + 11 | 0;
  if ((HEAP8[$123 >> 0] | 0) < 0) {
   $126 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($126, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i83Z2D = $7;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$123 >> 0] = 0;
   $$pre$phi$i$i83Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($7, 0);
  HEAP32[$$pre$phi$i$i83Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i83Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i83Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i85 = 0;
  while (1) {
   if (($$0$i$i$i85 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i85 << 2) >> 2] = 0;
   $$0$i$i$i85 = $$0$i$i$i85 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$73 >> 2] | 0) + 36 >> 2] & 127]($73) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$095$0 = 0, $10 = 0, $103 = 0, $107 = 0, $11 = 0, $112 = 0, $113 = 0, $118 = 0, $12 = 0, $120 = 0, $121 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $45 = 0, $49 = 0, $54 = 0, $55 = 0, $60 = 0, $62 = 0, $63 = 0, $68 = 0, $71 = 0, $8 = 0, $87 = 0, $9 = 0, $90 = 0, $94 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 $$byval_copy30 = sp + 128 | 0;
 $$byval_copy26 = sp + 112 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 108 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 100 | 0;
 $14 = sp + 96 | 0;
 $15 = sp + 92 | 0;
 $16 = sp + 88 | 0;
 $17 = sp + 84 | 0;
 $18 = sp + 80 | 0;
 $19 = sp + 76 | 0;
 $20 = sp + 72 | 0;
 $21 = sp + 68 | 0;
 $22 = sp + 64 | 0;
 $23 = sp + 60 | 0;
 $24 = sp + 56 | 0;
 $25 = sp + 52 | 0;
 $26 = sp + 48 | 0;
 $27 = sp + 44 | 0;
 $28 = sp + 40 | 0;
 $29 = sp + 36 | 0;
 $30 = sp + 32 | 0;
 $31 = sp + 28 | 0;
 $32 = sp + 24 | 0;
 $33 = sp + 20 | 0;
 $34 = sp + 16 | 0;
 $35 = sp + 12 | 0;
 $36 = sp + 8 | 0;
 $37 = sp + 4 | 0;
 $38 = sp;
 HEAP32[$4 >> 2] = 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy30, $3);
 $39 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy30, 57916) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy30);
 do switch ($6 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$9 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 99:
  {
   $45 = $0 + 8 | 0;
   $49 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 12 >> 2] & 127]($45) | 0;
   HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$2 >> 2];
   $54 = HEAP8[$49 + 8 + 3 >> 0] | 0;
   $55 = $54 << 24 >> 24 < 0;
   $60 = $55 ? HEAP32[$49 >> 2] | 0 : $49;
   $62 = $60 + (($55 ? HEAP32[$49 + 4 >> 2] | 0 : $54 & 255) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   $63 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $60, $62) | 0;
   HEAP32[$1 >> 2] = $63;
   label = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 12 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 68:
  {
   HEAP32[$13 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$14 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   $68 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 10784, 10816) | 0;
   HEAP32[$1 >> 2] = $68;
   label = 26;
   break;
  }
 case 70:
  {
   HEAP32[$15 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$16 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$15 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   $71 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 10816, 10848) | 0;
   HEAP32[$1 >> 2] = $71;
   label = 26;
   break;
  }
 case 72:
  {
   HEAP32[$17 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 73:
  {
   HEAP32[$18 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$18 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 106:
  {
   HEAP32[$19 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 28 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 109:
  {
   HEAP32[$20 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$20 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 77:
  {
   HEAP32[$21 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 4 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$22 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 112:
  {
   HEAP32[$23 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$23 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 114:
  {
   HEAP32[$24 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$25 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   $87 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 10848, 10892) | 0;
   HEAP32[$1 >> 2] = $87;
   label = 26;
   break;
  }
 case 82:
  {
   HEAP32[$26 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$27 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   $90 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 10896, 10916) | 0;
   HEAP32[$1 >> 2] = $90;
   label = 26;
   break;
  }
 case 83:
  {
   HEAP32[$28 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$28 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$30 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   $94 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 10928, 10960) | 0;
   HEAP32[$1 >> 2] = $94;
   label = 26;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 120:
  {
   $99 = HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$33 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$32 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$33 >> 2];
   $$sroa$095$0 = FUNCTION_TABLE_iiiiiii[$99 & 63]($0, $$byval_copy26, $$byval_copy30, $3, $4, $5) | 0;
   break;
  }
 case 88:
  {
   $103 = $0 + 8 | 0;
   $107 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$103 >> 2] | 0) + 24 >> 2] & 127]($103) | 0;
   HEAP32[$34 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$35 >> 2] = HEAP32[$2 >> 2];
   $112 = HEAP8[$107 + 8 + 3 >> 0] | 0;
   $113 = $112 << 24 >> 24 < 0;
   $118 = $113 ? HEAP32[$107 >> 2] | 0 : $107;
   $120 = $118 + (($113 ? HEAP32[$107 + 4 >> 2] | 0 : $112 & 255) << 2) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$34 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$35 >> 2];
   $121 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $118, $120) | 0;
   HEAP32[$1 >> 2] = $121;
   label = 26;
   break;
  }
 case 121:
  {
   HEAP32[$36 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$36 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 89:
  {
   HEAP32[$37 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$37 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 37:
  {
   HEAP32[$38 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$38 >> 2];
   __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 default:
  {
   HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4;
   label = 26;
  }
 } while (0);
 if ((label | 0) == 26) $$sroa$095$0 = HEAP32[$1 >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$095$0 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$byval_copy26 = 0, $$byval_copy30 = 0, $$sroa$095$0 = 0, $10 = 0, $102 = 0, $106 = 0, $11 = 0, $110 = 0, $111 = 0, $116 = 0, $118 = 0, $119 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $45 = 0, $49 = 0, $53 = 0, $54 = 0, $59 = 0, $61 = 0, $62 = 0, $67 = 0, $70 = 0, $8 = 0, $86 = 0, $89 = 0, $9 = 0, $93 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 $$byval_copy30 = sp + 128 | 0;
 $$byval_copy26 = sp + 112 | 0;
 $8 = sp + 124 | 0;
 $9 = sp + 120 | 0;
 $10 = sp + 116 | 0;
 $11 = sp + 108 | 0;
 $12 = sp + 104 | 0;
 $13 = sp + 100 | 0;
 $14 = sp + 96 | 0;
 $15 = sp + 92 | 0;
 $16 = sp + 88 | 0;
 $17 = sp + 84 | 0;
 $18 = sp + 80 | 0;
 $19 = sp + 76 | 0;
 $20 = sp + 72 | 0;
 $21 = sp + 68 | 0;
 $22 = sp + 64 | 0;
 $23 = sp + 60 | 0;
 $24 = sp + 56 | 0;
 $25 = sp + 52 | 0;
 $26 = sp + 48 | 0;
 $27 = sp + 44 | 0;
 $28 = sp + 40 | 0;
 $29 = sp + 36 | 0;
 $30 = sp + 32 | 0;
 $31 = sp + 28 | 0;
 $32 = sp + 24 | 0;
 $33 = sp + 20 | 0;
 $34 = sp + 16 | 0;
 $35 = sp + 12 | 0;
 $36 = sp + 8 | 0;
 $37 = sp + 4 | 0;
 $38 = sp;
 HEAP32[$4 >> 2] = 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy30, $3);
 $39 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy30, 57884) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy30);
 do switch ($6 << 24 >> 24 | 0) {
 case 65:
 case 97:
  {
   HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$8 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 104:
 case 66:
 case 98:
  {
   HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$9 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 99:
  {
   $45 = $0 + 8 | 0;
   $49 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 12 >> 2] & 127]($45) | 0;
   HEAP32[$10 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$2 >> 2];
   $53 = HEAP8[$49 + 11 >> 0] | 0;
   $54 = $53 << 24 >> 24 < 0;
   $59 = $54 ? HEAP32[$49 >> 2] | 0 : $49;
   $61 = $59 + ($54 ? HEAP32[$49 + 4 >> 2] | 0 : $53 & 255) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$11 >> 2];
   $62 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $59, $61) | 0;
   HEAP32[$1 >> 2] = $62;
   label = 26;
   break;
  }
 case 101:
 case 100:
  {
   HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$12 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 12 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 68:
  {
   HEAP32[$13 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$14 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$14 >> 2];
   $67 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 47455, 47463) | 0;
   HEAP32[$1 >> 2] = $67;
   label = 26;
   break;
  }
 case 70:
  {
   HEAP32[$15 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$16 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$15 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$16 >> 2];
   $70 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 47463, 47471) | 0;
   HEAP32[$1 >> 2] = $70;
   label = 26;
   break;
  }
 case 72:
  {
   HEAP32[$17 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$17 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 73:
  {
   HEAP32[$18 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$18 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 106:
  {
   HEAP32[$19 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$19 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 28 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 109:
  {
   HEAP32[$20 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$20 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 16 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 77:
  {
   HEAP32[$21 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$21 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 4 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 116:
 case 110:
  {
   HEAP32[$22 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$22 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 112:
  {
   HEAP32[$23 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$23 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 8 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 114:
  {
   HEAP32[$24 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$25 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$24 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$25 >> 2];
   $86 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 47471, 47482) | 0;
   HEAP32[$1 >> 2] = $86;
   label = 26;
   break;
  }
 case 82:
  {
   HEAP32[$26 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$27 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$26 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$27 >> 2];
   $89 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 47482, 47487) | 0;
   HEAP32[$1 >> 2] = $89;
   label = 26;
   break;
  }
 case 83:
  {
   HEAP32[$28 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$28 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 84:
  {
   HEAP32[$29 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$30 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$29 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$30 >> 2];
   $93 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, 47487, 47495) | 0;
   HEAP32[$1 >> 2] = $93;
   label = 26;
   break;
  }
 case 119:
  {
   HEAP32[$31 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$31 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 24 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 120:
  {
   $98 = HEAP32[(HEAP32[$0 >> 2] | 0) + 20 >> 2] | 0;
   HEAP32[$32 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$33 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$32 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$33 >> 2];
   $$sroa$095$0 = FUNCTION_TABLE_iiiiiii[$98 & 63]($0, $$byval_copy26, $$byval_copy30, $3, $4, $5) | 0;
   break;
  }
 case 88:
  {
   $102 = $0 + 8 | 0;
   $106 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$102 >> 2] | 0) + 24 >> 2] & 127]($102) | 0;
   HEAP32[$34 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$35 >> 2] = HEAP32[$2 >> 2];
   $110 = HEAP8[$106 + 11 >> 0] | 0;
   $111 = $110 << 24 >> 24 < 0;
   $116 = $111 ? HEAP32[$106 >> 2] | 0 : $106;
   $118 = $116 + ($111 ? HEAP32[$106 + 4 >> 2] | 0 : $110 & 255) | 0;
   HEAP32[$$byval_copy26 >> 2] = HEAP32[$34 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$35 >> 2];
   $119 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy26, $$byval_copy30, $3, $4, $5, $116, $118) | 0;
   HEAP32[$1 >> 2] = $119;
   label = 26;
   break;
  }
 case 121:
  {
   HEAP32[$36 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$36 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 89:
  {
   HEAP32[$37 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$37 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 20 | 0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 case 37:
  {
   HEAP32[$38 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy30 >> 2] = HEAP32[$38 >> 2];
   __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $$byval_copy30, $4, $39);
   label = 26;
   break;
  }
 default:
  {
   HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4;
   label = 26;
  }
 } while (0);
 if ((label | 0) == 26) $$sroa$095$0 = HEAP32[$1 >> 2] | 0;
 STACKTOP = sp;
 return $$sroa$095$0 | 0;
}

function _jpgread($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$reg2mem$0 = 0, $$033$reg2mem99$0 = 0, $$034$reg2mem101$0 = 0, $$reg2mem103$0 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $69 = 0, $7 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $9 = 0, $91 = 0, $93 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer105 = 0, $vararg_buffer107 = 0, _setjmpTable = 0, _setjmpTableSize = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 800 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(800);
 $vararg_buffer107 = sp + 504 | 0;
 $vararg_buffer105 = sp + 496 | 0;
 $vararg_buffer = sp + 488 | 0;
 _setjmpTableSize = 4;
 _setjmpTable = _malloc(40) | 0;
 HEAP32[_setjmpTable >> 2] = 0;
 $5 = sp + 24 | 0;
 $6 = sp + 512 | 0;
 $7 = sp;
 _memset($5 | 0, 0, 464) | 0;
 __THREW__ = 0;
 $8 = invoke_ii(62, $6 | 0) | 0;
 $9 = __THREW__;
 __THREW__ = 0;
 if (($9 | 0) != 0 & (threwValue | 0) != 0) {
  $10 = _testSetjmp(HEAP32[$9 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
  if (!$10) _longjmp($9 | 0, threwValue | 0);
  setTempRet0(threwValue | 0);
 } else $10 = -1;
 $11 = getTempRet0() | 0;
 if (($10 | 0) == 1) $$reg2mem103$0 = $11; else {
  HEAP32[$5 >> 2] = $8;
  HEAP32[$6 >> 2] = 112;
  _setjmpTable = _saveSetjmp($6 + 132 | 0, 1, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
  _setjmpTableSize = getTempRet0() | 0;
  __THREW__ = 0;
  $13 = __THREW__;
  __THREW__ = 0;
  if (($13 | 0) != 0 & (threwValue | 0) != 0) {
   $14 = _testSetjmp(HEAP32[$13 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$14) _longjmp($13 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $14 = -1;
  $15 = getTempRet0() | 0;
  if (($14 | 0) == 1) $$reg2mem103$0 = $15; else $$reg2mem103$0 = 0;
 }
 L4 : while (1) {
  if ($$reg2mem103$0 | 0) {
   __THREW__ = 0;
   invoke_vi(113, $5 | 0);
   $17 = __THREW__;
   __THREW__ = 0;
   if (($17 | 0) != 0 & (threwValue | 0) != 0) {
    $18 = _testSetjmp(HEAP32[$17 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$18) _longjmp($17 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $18 = -1;
   $19 = getTempRet0() | 0;
   if (($18 | 0) == 1) {
    $$reg2mem103$0 = $19;
    continue;
   }
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 19583, $vararg_buffer | 0);
   $20 = __THREW__;
   __THREW__ = 0;
   if (($20 | 0) != 0 & (threwValue | 0) != 0) {
    $21 = _testSetjmp(HEAP32[$20 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$21) _longjmp($20 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $21 = -1;
   $22 = getTempRet0() | 0;
   if (($21 | 0) == 1) {
    $$reg2mem103$0 = $22;
    continue;
   } else {
    label = 7;
    break;
   }
  }
  __THREW__ = 0;
  invoke_viii(1, $5 | 0, 62, 464);
  $23 = __THREW__;
  __THREW__ = 0;
  if (($23 | 0) != 0 & (threwValue | 0) != 0) {
   $24 = _testSetjmp(HEAP32[$23 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$24) _longjmp($23 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $24 = -1;
  $25 = getTempRet0() | 0;
  if (($24 | 0) == 1) {
   $$reg2mem103$0 = $25;
   continue;
  }
  __THREW__ = 0;
  invoke_vii(39, $5 | 0, $0 | 0);
  $26 = __THREW__;
  __THREW__ = 0;
  if (($26 | 0) != 0 & (threwValue | 0) != 0) {
   $27 = _testSetjmp(HEAP32[$26 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$27) _longjmp($26 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $27 = -1;
  $28 = getTempRet0() | 0;
  if (($27 | 0) == 1) {
   $$reg2mem103$0 = $28;
   continue;
  }
  __THREW__ = 0;
  $29 = invoke_iii(19, $5 | 0, 1) | 0;
  $30 = __THREW__;
  __THREW__ = 0;
  if (($30 | 0) != 0 & (threwValue | 0) != 0) {
   $31 = _testSetjmp(HEAP32[$30 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$31) _longjmp($30 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $31 = -1;
  $32 = getTempRet0() | 0;
  if (($31 | 0) == 1) {
   $$reg2mem103$0 = $32;
   continue;
  }
  if (($29 | 0) != 1) {
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 19609, $vararg_buffer105 | 0);
   $34 = __THREW__;
   __THREW__ = 0;
   if (($34 | 0) != 0 & (threwValue | 0) != 0) {
    $35 = _testSetjmp(HEAP32[$34 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$35) _longjmp($34 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $35 = -1;
   $36 = getTempRet0() | 0;
   if (($35 | 0) == 1) {
    $$reg2mem103$0 = $36;
    continue;
   }
   __THREW__ = 0;
   invoke_vi(113, $5 | 0);
   $37 = __THREW__;
   __THREW__ = 0;
   if (($37 | 0) != 0 & (threwValue | 0) != 0) {
    $38 = _testSetjmp(HEAP32[$37 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$38) _longjmp($37 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $38 = -1;
   $39 = getTempRet0() | 0;
   if (($38 | 0) == 1) {
    $$reg2mem103$0 = $39;
    continue;
   } else {
    label = 14;
    break;
   }
  }
  __THREW__ = 0;
  invoke_ii(63, $5 | 0) | 0;
  $40 = __THREW__;
  __THREW__ = 0;
  if (($40 | 0) != 0 & (threwValue | 0) != 0) {
   $41 = _testSetjmp(HEAP32[$40 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$41) _longjmp($40 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $41 = -1;
  $42 = getTempRet0() | 0;
  if (($41 | 0) == 1) {
   $$reg2mem103$0 = $42;
   continue;
  }
  $43 = $5 + 36 | 0;
  $45 = $5 + 28 | 0;
  $47 = Math_imul(HEAP32[$45 >> 2] | 0, HEAP32[$43 >> 2] | 0) | 0;
  $48 = $5 + 32 | 0;
  $50 = Math_imul($47, HEAP32[$48 >> 2] | 0) | 0;
  __THREW__ = 0;
  $51 = invoke_ii(64, $50 | 0) | 0;
  $52 = __THREW__;
  __THREW__ = 0;
  if (($52 | 0) != 0 & (threwValue | 0) != 0) {
   $53 = _testSetjmp(HEAP32[$52 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$53) _longjmp($52 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $53 = -1;
  $54 = getTempRet0() | 0;
  if (($53 | 0) == 1) {
   $$reg2mem103$0 = $54;
   continue;
  }
  if (!$51) {
   __THREW__ = 0;
   invoke_viiii(8, 0, 3, 20454, $vararg_buffer107 | 0);
   $56 = __THREW__;
   __THREW__ = 0;
   if (($56 | 0) != 0 & (threwValue | 0) != 0) {
    $57 = _testSetjmp(HEAP32[$56 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$57) _longjmp($56 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $57 = -1;
   $58 = getTempRet0() | 0;
   if (($57 | 0) == 1) {
    $$reg2mem103$0 = $58;
    continue;
   }
   __THREW__ = 0;
   invoke_vi(113, $5 | 0);
   $59 = __THREW__;
   __THREW__ = 0;
   if (($59 | 0) != 0 & (threwValue | 0) != 0) {
    $60 = _testSetjmp(HEAP32[$59 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$60) _longjmp($59 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $60 = -1;
   $61 = getTempRet0() | 0;
   if (($60 | 0) == 1) {
    $$reg2mem103$0 = $61;
    continue;
   } else {
    label = 20;
    break;
   }
  }
  $62 = $5 + 140 | 0;
  $63 = $5 + 116 | 0;
  $$034$reg2mem101$0 = 0;
  while (1) {
   if ((HEAP32[$62 >> 2] | 0) >>> 0 >= (HEAP32[$63 >> 2] | 0) >>> 0) break;
   $$033$reg2mem99$0 = 0;
   while (1) {
    if (($$033$reg2mem99$0 | 0) == 5) break;
    $69 = $51 + (Math_imul($$033$reg2mem99$0 + $$034$reg2mem101$0 | 0, $47) | 0) | 0;
    HEAP32[$7 + ($$033$reg2mem99$0 << 2) >> 2] = $69;
    $$033$reg2mem99$0 = $$033$reg2mem99$0 + 1 | 0;
   }
   __THREW__ = 0;
   $72 = invoke_iiii(26, $5 | 0, $7 | 0, 5) | 0;
   $73 = __THREW__;
   __THREW__ = 0;
   if (($73 | 0) != 0 & (threwValue | 0) != 0) {
    $74 = _testSetjmp(HEAP32[$73 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
    if (!$74) _longjmp($73 | 0, threwValue | 0);
    setTempRet0(threwValue | 0);
   } else $74 = -1;
   $75 = getTempRet0() | 0;
   if (($74 | 0) == 1) {
    $$reg2mem103$0 = $75;
    continue L4;
   }
   $$034$reg2mem101$0 = $72 + $$034$reg2mem101$0 | 0;
  }
  __THREW__ = 0;
  invoke_ii(65, $5 | 0) | 0;
  $77 = __THREW__;
  __THREW__ = 0;
  if (($77 | 0) != 0 & (threwValue | 0) != 0) {
   $78 = _testSetjmp(HEAP32[$77 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$78) _longjmp($77 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $78 = -1;
  $79 = getTempRet0() | 0;
  if (($78 | 0) == 1) {
   $$reg2mem103$0 = $79;
   continue;
  }
  __THREW__ = 0;
  invoke_vi(113, $5 | 0);
  $80 = __THREW__;
  __THREW__ = 0;
  if (($80 | 0) != 0 & (threwValue | 0) != 0) {
   $81 = _testSetjmp(HEAP32[$80 >> 2] | 0, _setjmpTable | 0, _setjmpTableSize | 0) | 0;
   if (!$81) _longjmp($80 | 0, threwValue | 0);
   setTempRet0(threwValue | 0);
  } else $81 = -1;
  $$reg2mem103$0 = getTempRet0() | 0;
  if (($81 | 0) != 1) {
   label = 30;
   break;
  }
 }
 L33 : do if ((label | 0) == 7) $$0$reg2mem$0 = 0; else if ((label | 0) == 14) $$0$reg2mem$0 = 0; else if ((label | 0) == 20) $$0$reg2mem$0 = 0; else if ((label | 0) == 30) {
  if ($1 | 0) HEAP32[$1 >> 2] = HEAP32[$45 >> 2];
  if ($2 | 0) HEAP32[$2 >> 2] = HEAP32[$48 >> 2];
  if ($3 | 0) HEAP32[$3 >> 2] = HEAP32[$43 >> 2];
  if (!$4) $$0$reg2mem$0 = $51; else {
   $91 = HEAP8[$5 + 286 >> 0] | 0;
   switch ($91 << 24 >> 24) {
   case 1:
    {
     $93 = HEAP16[$5 + 288 >> 1] | 0;
     if ($93 << 16 >> 16 == (HEAP16[$5 + 290 >> 1] | 0)) {
      HEAPF32[$4 >> 2] = +($93 & 65535);
      $$0$reg2mem$0 = $51;
      break L33;
     }
     break;
    }
   case 2:
    {
     $99 = HEAP16[$5 + 288 >> 1] | 0;
     if ($99 << 16 >> 16 == (HEAP16[$5 + 290 >> 1] | 0)) {
      HEAPF32[$4 >> 2] = +($99 & 65535) * 2.5399999618530273;
      $$0$reg2mem$0 = $51;
      break L33;
     }
     break;
    }
   default:
    if (($91 & 255) > 2) if (!(HEAP16[$5 + 288 >> 1] | 0)) if (!(HEAP16[$5 + 290 >> 1] | 0)) {
     HEAPF32[$4 >> 2] = +($91 & 255);
     $$0$reg2mem$0 = $51;
     break L33;
    }
   }
   HEAPF32[$4 >> 2] = 0.0;
   $$0$reg2mem$0 = $51;
  }
 } while (0);
 _free(_setjmpTable | 0);
 STACKTOP = sp;
 return $$0$reg2mem$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_128parse_pointer_to_member_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i63 = 0, $$0$i$i$i$i80 = 0, $$0$i$i$i$i85 = 0, $$0$i$i$i51 = 0, $$0$i$i$i54 = 0, $$0$i$i$i58 = 0, $$0$i$i$i66 = 0, $$0$i$i$i70 = 0, $$0$i$i$i74 = 0, $$0$i$i$idx$i = 0, $$345 = 0, $100 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $26 = 0, $3 = 0, $30 = 0, $4 = 0, $42 = 0, $43 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $61 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $73 = 0, $8 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, $96 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $3 = sp + 96 | 0;
 $4 = sp + 72 | 0;
 $5 = sp + 48 | 0;
 $6 = sp + 36 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if (($0 | 0) == ($1 | 0)) $$345 = $0; else if ((HEAP8[$0 >> 0] | 0) == 77) {
  $13 = $0 + 1 | 0;
  $14 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
  if (($14 | 0) == ($13 | 0)) $$345 = $0; else {
   $16 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
   if (($16 | 0) == ($14 | 0)) $$345 = $0; else {
    $18 = $2 + 4 | 0;
    $19 = HEAP32[$18 >> 2] | 0;
    if ((($19 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$345 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($4, $19 + -24 | 0);
     $26 = HEAP32[$18 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$18 >> 2] = $26 + -24;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($5, $26 + -48 | 0);
     $30 = $4 + 12 | 0;
     L11 : do if ((HEAP8[((HEAP8[$30 + 11 >> 0] | 0) < 0 ? HEAP32[$30 >> 2] | 0 : $30) >> 0] | 0) == 40) {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 49631) | 0;
      HEAP32[$8 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$8 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$8 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i = $$0$i$i$i + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $5);
      $42 = HEAP8[$9 + 11 >> 0] | 0;
      $43 = $42 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($8, $43 ? HEAP32[$9 >> 2] | 0 : $9, $43 ? HEAP32[$9 + 4 >> 2] | 0 : $42 & 255) | 0;
      HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
      HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
      HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
      $$0$i$i$i51 = 0;
      while (1) {
       if (($$0$i$i$i51 | 0) == 3) break;
       HEAP32[$8 + ($$0$i$i$i51 << 2) >> 2] = 0;
       $$0$i$i$i51 = $$0$i$i$i51 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 51053) | 0;
      HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
      HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
      HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
      $$0$i$i$i54 = 0;
      while (1) {
       if (($$0$i$i$i54 | 0) == 3) break;
       HEAP32[$7 + ($$0$i$i$i54 << 2) >> 2] = 0;
       $$0$i$i$i54 = $$0$i$i$i54 + 1 | 0;
      }
      $56 = HEAP32[$18 >> 2] | 0;
      $57 = $56 + -24 | 0;
      $58 = $57 + 11 | 0;
      if ((HEAP8[$58 >> 0] | 0) < 0) {
       $61 = HEAP32[$57 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($61, $3);
       HEAP32[$56 + -20 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($57, $3);
       HEAP8[$58 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($57);
      HEAP32[$57 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$57 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$57 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i$i | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($30, 0, 49629) | 0;
      HEAP32[$6 >> 2] = HEAP32[$30 >> 2];
      HEAP32[$6 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
      HEAP32[$6 + 8 >> 2] = HEAP32[$30 + 8 >> 2];
      $$0$i$i$i58 = 0;
      while (1) {
       if (($$0$i$i$i58 | 0) == 3) break;
       HEAP32[$30 + ($$0$i$i$i58 << 2) >> 2] = 0;
       $$0$i$i$i58 = $$0$i$i$i58 + 1 | 0;
      }
      $68 = HEAP32[$18 >> 2] | 0;
      $69 = $68 + -12 | 0;
      $70 = $69 + 11 | 0;
      if ((HEAP8[$70 >> 0] | 0) < 0) {
       $73 = HEAP32[$69 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($73, $3);
       HEAP32[$68 + -8 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($69, $3);
       HEAP8[$70 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($69);
      HEAP32[$69 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$69 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$69 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i$i63 = 0;
      while (1) {
       if (($$0$i$i$i$i63 | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i$i63 << 2) >> 2] = 0;
       $$0$i$i$i$i63 = $$0$i$i$i$i63 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     } else {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 49663) | 0;
      HEAP32[$8 >> 2] = HEAP32[$4 >> 2];
      HEAP32[$8 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
      HEAP32[$8 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
      $$0$i$i$i66 = 0;
      while (1) {
       if (($$0$i$i$i66 | 0) == 3) break;
       HEAP32[$4 + ($$0$i$i$i66 << 2) >> 2] = 0;
       $$0$i$i$i66 = $$0$i$i$i66 + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $5);
      $81 = HEAP8[$9 + 11 >> 0] | 0;
      $82 = $81 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($8, $82 ? HEAP32[$9 >> 2] | 0 : $9, $82 ? HEAP32[$9 + 4 >> 2] | 0 : $81 & 255) | 0;
      HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
      HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
      HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
      $$0$i$i$i70 = 0;
      while (1) {
       if (($$0$i$i$i70 | 0) == 3) break;
       HEAP32[$8 + ($$0$i$i$i70 << 2) >> 2] = 0;
       $$0$i$i$i70 = $$0$i$i$i70 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 51053) | 0;
      HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
      HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
      HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
      $$0$i$i$i74 = 0;
      while (1) {
       if (($$0$i$i$i74 | 0) == 3) break;
       HEAP32[$7 + ($$0$i$i$i74 << 2) >> 2] = 0;
       $$0$i$i$i74 = $$0$i$i$i74 + 1 | 0;
      }
      $95 = HEAP32[$18 >> 2] | 0;
      $96 = $95 + -24 | 0;
      $97 = $96 + 11 | 0;
      if ((HEAP8[$97 >> 0] | 0) < 0) {
       $100 = HEAP32[$96 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($100, $3);
       HEAP32[$95 + -20 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($96, $3);
       HEAP8[$97 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($96);
      HEAP32[$96 >> 2] = HEAP32[$6 >> 2];
      HEAP32[$96 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
      HEAP32[$96 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
      $$0$i$i$i$i80 = 0;
      while (1) {
       if (($$0$i$i$i$i80 | 0) == 3) break;
       HEAP32[$6 + ($$0$i$i$i$i80 << 2) >> 2] = 0;
       $$0$i$i$i$i80 = $$0$i$i$i$i80 + 1 | 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
      $104 = HEAP32[$18 >> 2] | 0;
      $105 = $104 + -12 | 0;
      $106 = $105 + 11 | 0;
      if ((HEAP8[$106 >> 0] | 0) < 0) {
       $109 = HEAP32[$105 >> 2] | 0;
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($109, $3);
       HEAP32[$104 + -8 >> 2] = 0;
      } else {
       HEAP8[$3 >> 0] = 0;
       __ZNSt3__211char_traitsIcE6assignERcRKc($105, $3);
       HEAP8[$106 >> 0] = 0;
      }
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($105);
      HEAP32[$105 >> 2] = HEAP32[$30 >> 2];
      HEAP32[$105 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
      HEAP32[$105 + 8 >> 2] = HEAP32[$30 + 8 >> 2];
      $$0$i$i$i$i85 = 0;
      while (1) {
       if (($$0$i$i$i$i85 | 0) == 3) break L11;
       HEAP32[$30 + ($$0$i$i$i$i85 << 2) >> 2] = 0;
       $$0$i$i$i$i85 = $$0$i$i$i$i85 + 1 | 0;
      }
     } while (0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     $$345 = $16;
    }
   }
  }
 } else $$345 = $0;
 STACKTOP = sp;
 return $$345 | 0;
}

function __ZNSt3__211__money_getIcE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_SF_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i41 = 0, $$0$i$i$i47 = 0, $$0$i$i$i53 = 0, $$0$i$i$i59 = 0, $$0$i$i$i65 = 0, $$0$i$i$i71 = 0, $$0$i$i$i77 = 0, $$pre$phi$i$i39Z2D = 0, $$pre$phi$i$i45Z2D = 0, $$pre$phi$i$i51Z2D = 0, $$pre$phi$i$i57Z2D = 0, $$pre$phi$i$i63Z2D = 0, $$pre$phi$i$i69Z2D = 0, $$pre$phi$i$i75Z2D = 0, $$pre$phi$i$iZ2D = 0, $10 = 0, $101 = 0, $105 = 0, $108 = 0, $11 = 0, $115 = 0, $118 = 0, $12 = 0, $16 = 0, $20 = 0, $23 = 0, $30 = 0, $33 = 0, $40 = 0, $44 = 0, $48 = 0, $51 = 0, $58 = 0, $61 = 0, $69 = 0, $73 = 0, $77 = 0, $80 = 0, $87 = 0, $90 = 0, $97 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 58116) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 63]($10, $12);
  $16 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $16;
  HEAP8[$2 + 1 >> 0] = $16 >> 8;
  HEAP8[$2 + 2 >> 0] = $16 >> 16;
  HEAP8[$2 + 3 >> 0] = $16 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 63]($11, $12);
  $20 = $8 + 11 | 0;
  if ((HEAP8[$20 >> 0] | 0) < 0) {
   $23 = HEAP32[$8 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($23, $10);
   HEAP32[$8 + 4 >> 2] = 0;
   $$pre$phi$i$iZ2D = $8;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
   HEAP8[$20 >> 0] = 0;
   $$pre$phi$i$iZ2D = $8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($8, 0);
  HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i = 0;
  while (1) {
   if (($$0$i$i$i | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
   $$0$i$i$i = $$0$i$i$i + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 63]($11, $12);
  $30 = $7 + 11 | 0;
  if ((HEAP8[$30 >> 0] | 0) < 0) {
   $33 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($33, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i39Z2D = $7;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$30 >> 0] = 0;
   $$pre$phi$i$i39Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($7, 0);
  HEAP32[$$pre$phi$i$i39Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i39Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i39Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i41 = 0;
  while (1) {
   if (($$0$i$i$i41 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i41 << 2) >> 2] = 0;
   $$0$i$i$i41 = $$0$i$i$i41 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $40 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP8[$3 >> 0] = $40;
  $44 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  HEAP8[$4 >> 0] = $44;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 63]($11, $12);
  $48 = $5 + 11 | 0;
  if ((HEAP8[$48 >> 0] | 0) < 0) {
   $51 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($51, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$i45Z2D = $5;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$48 >> 0] = 0;
   $$pre$phi$i$i45Z2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($5, 0);
  HEAP32[$$pre$phi$i$i45Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i45Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i45Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i47 = 0;
  while (1) {
   if (($$0$i$i$i47 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i47 << 2) >> 2] = 0;
   $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 63]($11, $12);
  $58 = $6 + 11 | 0;
  if ((HEAP8[$58 >> 0] | 0) < 0) {
   $61 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($61, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i51Z2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$58 >> 0] = 0;
   $$pre$phi$i$i51Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($6, 0);
  HEAP32[$$pre$phi$i$i51Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i51Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i51Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i53 = 0;
  while (1) {
   if (($$0$i$i$i53 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i53 << 2) >> 2] = 0;
   $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $69 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 58108) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$69 >> 2] | 0) + 44 >> 2] & 63]($10, $69);
  $73 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $73;
  HEAP8[$2 + 1 >> 0] = $73 >> 8;
  HEAP8[$2 + 2 >> 0] = $73 >> 16;
  HEAP8[$2 + 3 >> 0] = $73 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$69 >> 2] | 0) + 32 >> 2] & 63]($11, $69);
  $77 = $8 + 11 | 0;
  if ((HEAP8[$77 >> 0] | 0) < 0) {
   $80 = HEAP32[$8 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($80, $10);
   HEAP32[$8 + 4 >> 2] = 0;
   $$pre$phi$i$i57Z2D = $8;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($8, $10);
   HEAP8[$77 >> 0] = 0;
   $$pre$phi$i$i57Z2D = $8;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($8, 0);
  HEAP32[$$pre$phi$i$i57Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i59 = 0;
  while (1) {
   if (($$0$i$i$i59 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i59 << 2) >> 2] = 0;
   $$0$i$i$i59 = $$0$i$i$i59 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$69 >> 2] | 0) + 28 >> 2] & 63]($11, $69);
  $87 = $7 + 11 | 0;
  if ((HEAP8[$87 >> 0] | 0) < 0) {
   $90 = HEAP32[$7 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($90, $10);
   HEAP32[$7 + 4 >> 2] = 0;
   $$pre$phi$i$i63Z2D = $7;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($7, $10);
   HEAP8[$87 >> 0] = 0;
   $$pre$phi$i$i63Z2D = $7;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($7, 0);
  HEAP32[$$pre$phi$i$i63Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i63Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i63Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i65 = 0;
  while (1) {
   if (($$0$i$i$i65 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i65 << 2) >> 2] = 0;
   $$0$i$i$i65 = $$0$i$i$i65 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $97 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$69 >> 2] | 0) + 12 >> 2] & 127]($69) | 0;
  HEAP8[$3 >> 0] = $97;
  $101 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$69 >> 2] | 0) + 16 >> 2] & 127]($69) | 0;
  HEAP8[$4 >> 0] = $101;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$69 >> 2] | 0) + 20 >> 2] & 63]($11, $69);
  $105 = $5 + 11 | 0;
  if ((HEAP8[$105 >> 0] | 0) < 0) {
   $108 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($108, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$i69Z2D = $5;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$105 >> 0] = 0;
   $$pre$phi$i$i69Z2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($5, 0);
  HEAP32[$$pre$phi$i$i69Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i69Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i69Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i71 = 0;
  while (1) {
   if (($$0$i$i$i71 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i71 << 2) >> 2] = 0;
   $$0$i$i$i71 = $$0$i$i$i71 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$69 >> 2] | 0) + 24 >> 2] & 63]($11, $69);
  $115 = $6 + 11 | 0;
  if ((HEAP8[$115 >> 0] | 0) < 0) {
   $118 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($118, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i75Z2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$115 >> 0] = 0;
   $$pre$phi$i$i75Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($6, 0);
  HEAP32[$$pre$phi$i$i75Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i75Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i75Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i77 = 0;
  while (1) {
   if (($$0$i$i$i77 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i77 << 2) >> 2] = 0;
   $$0$i$i$i77 = $$0$i$i$i77 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$69 >> 2] | 0) + 36 >> 2] & 127]($69) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i47 = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$i57 = 0, $$0$i$i$i61 = 0, $$0$i$i$i67 = 0, $$0$i$i$i71 = 0, $$pre$phi$i$i65Z2D = 0, $$pre$phi$i$iZ2D = 0, $10 = 0, $100 = 0, $103 = 0, $11 = 0, $110 = 0, $114 = 0, $118 = 0, $12 = 0, $121 = 0, $129 = 0, $132 = 0, $16 = 0, $21 = 0, $24 = 0, $31 = 0, $36 = 0, $39 = 0, $46 = 0, $50 = 0, $54 = 0, $57 = 0, $65 = 0, $68 = 0, $76 = 0, $80 = 0, $85 = 0, $88 = 0, $95 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 58132) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 63]($10, $12);
   $16 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $16;
   HEAP8[$3 + 1 >> 0] = $16 >> 8;
   HEAP8[$3 + 2 >> 0] = $16 >> 16;
   HEAP8[$3 + 3 >> 0] = $16 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 63]($11, $12);
   $21 = $8 + 8 + 3 | 0;
   if ((HEAP8[$21 >> 0] | 0) < 0) {
    $24 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($24, $10);
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$21 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 40 >> 2] & 63]($10, $12);
   $31 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $31;
   HEAP8[$3 + 1 >> 0] = $31 >> 8;
   HEAP8[$3 + 2 >> 0] = $31 >> 16;
   HEAP8[$3 + 3 >> 0] = $31 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 63]($11, $12);
   $36 = $8 + 8 + 3 | 0;
   if ((HEAP8[$36 >> 0] | 0) < 0) {
    $39 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($39, $10);
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$36 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i47 = 0;
   while (1) {
    if (($$0$i$i$i47 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i47 << 2) >> 2] = 0;
    $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  }
  $46 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP32[$4 >> 2] = $46;
  $50 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  HEAP32[$5 >> 2] = $50;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 63]($11, $12);
  $54 = $6 + 11 | 0;
  if ((HEAP8[$54 >> 0] | 0) < 0) {
   $57 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($57, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$iZ2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$54 >> 0] = 0;
   $$pre$phi$i$iZ2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($6, 0);
  HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i50 = 0;
  while (1) {
   if (($$0$i$i$i50 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i50 << 2) >> 2] = 0;
   $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 63]($11, $12);
  $65 = $7 + 8 + 3 | 0;
  if ((HEAP8[$65 >> 0] | 0) < 0) {
   $68 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($68, $10);
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$65 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i53 = 0;
  while (1) {
   if (($$0$i$i$i53 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i53 << 2) >> 2] = 0;
   $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $76 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 58124) | 0;
  if ($1) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 44 >> 2] & 63]($10, $76);
   $80 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $80;
   HEAP8[$3 + 1 >> 0] = $80 >> 8;
   HEAP8[$3 + 2 >> 0] = $80 >> 16;
   HEAP8[$3 + 3 >> 0] = $80 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 32 >> 2] & 63]($11, $76);
   $85 = $8 + 8 + 3 | 0;
   if ((HEAP8[$85 >> 0] | 0) < 0) {
    $88 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($88, $10);
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$85 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i57 = 0;
   while (1) {
    if (($$0$i$i$i57 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i57 << 2) >> 2] = 0;
    $$0$i$i$i57 = $$0$i$i$i57 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  } else {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 40 >> 2] & 63]($10, $76);
   $95 = HEAP32[$10 >> 2] | 0;
   HEAP8[$3 >> 0] = $95;
   HEAP8[$3 + 1 >> 0] = $95 >> 8;
   HEAP8[$3 + 2 >> 0] = $95 >> 16;
   HEAP8[$3 + 3 >> 0] = $95 >> 24;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 28 >> 2] & 63]($11, $76);
   $100 = $8 + 8 + 3 | 0;
   if ((HEAP8[$100 >> 0] | 0) < 0) {
    $103 = HEAP32[$8 >> 2] | 0;
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($103, $10);
    HEAP32[$8 + 4 >> 2] = 0;
   } else {
    HEAP32[$10 >> 2] = 0;
    __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
    HEAP8[$100 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($8, 0);
   HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i61 = 0;
   while (1) {
    if (($$0$i$i$i61 | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i61 << 2) >> 2] = 0;
    $$0$i$i$i61 = $$0$i$i$i61 + 1 | 0;
   }
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  }
  $110 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 12 >> 2] & 127]($76) | 0;
  HEAP32[$4 >> 2] = $110;
  $114 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 16 >> 2] & 127]($76) | 0;
  HEAP32[$5 >> 2] = $114;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 20 >> 2] & 63]($11, $76);
  $118 = $6 + 11 | 0;
  if ((HEAP8[$118 >> 0] | 0) < 0) {
   $121 = HEAP32[$6 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($121, $10);
   HEAP32[$6 + 4 >> 2] = 0;
   $$pre$phi$i$i65Z2D = $6;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $10);
   HEAP8[$118 >> 0] = 0;
   $$pre$phi$i$i65Z2D = $6;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($6, 0);
  HEAP32[$$pre$phi$i$i65Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i65Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i65Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i67 = 0;
  while (1) {
   if (($$0$i$i$i67 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i67 << 2) >> 2] = 0;
   $$0$i$i$i67 = $$0$i$i$i67 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$76 >> 2] | 0) + 24 >> 2] & 63]($11, $76);
  $129 = $7 + 8 + 3 | 0;
  if ((HEAP8[$129 >> 0] | 0) < 0) {
   $132 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($132, $10);
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$129 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i71 = 0;
  while (1) {
   if (($$0$i$i$i71 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i71 << 2) >> 2] = 0;
   $$0$i$i$i71 = $$0$i$i$i71 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 36 >> 2] & 127]($76) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function _decode_mcu($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0181 = 0, $$0182 = 0, $$0183 = 0, $$0184 = 0, $$0193 = 0, $$0216 = 0, $$0217 = 0, $$11$ph = 0, $$11204$ph = 0, $$11232$ph = 0, $$1185 = 0, $$1194 = 0, $$12 = 0, $$1218 = 0, $$12205 = 0, $$13 = 0, $$13206 = 0, $$14 = 0, $$14207 = 0, $$15 = 0, $$15208 = 0, $$16 = 0, $$16209 = 0, $$18$ph = 0, $$18211$ph = 0, $$19 = 0, $$19212 = 0, $$20 = 0, $$20213 = 0, $$2186 = 0, $$2195 = 0, $$22 = 0, $$2219 = 0, $$22215 = 0, $$2223$ph = 0, $$3224 = 0, $$4188$ph = 0, $$4197$ph = 0, $$5189 = 0, $$5198 = 0, $$6190 = 0, $$6199 = 0, $$7191 = 0, $$7200 = 0, $$7228$ph = 0, $$8 = 0, $$8192 = 0, $$8201 = 0, $$9 = 0, $$9202 = 0, $$pn = 0, $100 = 0, $106 = 0, $110 = 0, $111 = 0, $113 = 0, $119 = 0, $123 = 0, $131 = 0, $142 = 0, $143 = 0, $147 = 0, $149 = 0, $155 = 0, $159 = 0, $160 = 0, $172 = 0, $175 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $35 = 0, $37 = 0, $39 = 0, $43 = 0, $44 = 0, $48 = 0, $5 = 0, $50 = 0, $56 = 0, $66 = 0, $70 = 0, $82 = 0, $84 = 0, $93 = 0, $94 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $2 = sp + 16 | 0;
 $3 = sp;
 $5 = HEAP32[$0 + 444 >> 2] | 0;
 if (!(HEAP32[$0 + 276 >> 2] | 0)) label = 4; else if (!(HEAP32[$5 + 36 >> 2] | 0)) if (!(_process_restart($0) | 0)) $$8 = 0; else label = 4; else label = 4;
 L4 : do if ((label | 0) == 4) {
  if (!(HEAP32[$5 + 8 >> 2] | 0)) {
   HEAP32[$2 + 16 >> 2] = $0;
   $18 = $0 + 24 | 0;
   $19 = HEAP32[$18 >> 2] | 0;
   HEAP32[$2 >> 2] = HEAP32[$19 >> 2];
   $23 = $2 + 4 | 0;
   HEAP32[$23 >> 2] = HEAP32[$19 + 4 >> 2];
   $24 = $5 + 12 | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   $26 = $5 + 16 | 0;
   $27 = HEAP32[$26 >> 2] | 0;
   $28 = $5 + 20 | 0;
   HEAP32[$3 >> 2] = HEAP32[$28 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$28 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$28 + 8 >> 2];
   HEAP32[$3 + 12 >> 2] = HEAP32[$28 + 12 >> 2];
   $29 = $0 + 356 | 0;
   $30 = $2 + 8 | 0;
   $31 = $2 + 12 | 0;
   $$0182 = 0;
   $$0184 = $25;
   $$0193 = $27;
   while (1) {
    if (($$0182 | 0) >= (HEAP32[$29 >> 2] | 0)) break;
    $35 = HEAP32[$1 + ($$0182 << 2) >> 2] | 0;
    $37 = HEAP32[$5 + 72 + ($$0182 << 2) >> 2] | 0;
    $39 = HEAP32[$5 + 112 + ($$0182 << 2) >> 2] | 0;
    if (($$0193 | 0) < 8) {
     if (!(_jpeg_fill_bit_buffer($2, $$0184, $$0193, 0) | 0)) {
      $$8 = 0;
      break L4;
     }
     $43 = HEAP32[$30 >> 2] | 0;
     $44 = HEAP32[$31 >> 2] | 0;
     if (($44 | 0) < 8) {
      $$0216 = 1;
      $$2186 = $43;
      $$2195 = $44;
      label = 12;
     } else {
      $$1185 = $43;
      $$1194 = $44;
      label = 10;
     }
    } else {
     $$1185 = $$0184;
     $$1194 = $$0193;
     label = 10;
    }
    if ((label | 0) == 10) {
     label = 0;
     $48 = $$1185 >> $$1194 + -8 & 255;
     $50 = HEAP32[$37 + 144 + ($48 << 2) >> 2] | 0;
     if (!$50) {
      $$0216 = 9;
      $$2186 = $$1185;
      $$2195 = $$1194;
      label = 12;
     } else {
      $$2223$ph = HEAPU8[$37 + 1168 + $48 >> 0] | 0;
      $$4188$ph = $$1185;
      $$4197$ph = $$1194 - $50 | 0;
     }
    }
    if ((label | 0) == 12) {
     label = 0;
     $56 = _jpeg_huff_decode($2, $$2186, $$2195, $37, $$0216) | 0;
     if (($56 | 0) < 0) {
      $$8 = 0;
      break L4;
     }
     $$2223$ph = $56;
     $$4188$ph = HEAP32[$30 >> 2] | 0;
     $$4197$ph = HEAP32[$31 >> 2] | 0;
    }
    if (!$$2223$ph) {
     $$3224 = 0;
     $$6190 = $$4188$ph;
     $$6199 = $$4197$ph;
    } else {
     if (($$4197$ph | 0) < ($$2223$ph | 0)) {
      if (!(_jpeg_fill_bit_buffer($2, $$4188$ph, $$4197$ph, $$2223$ph) | 0)) {
       $$8 = 0;
       break L4;
      }
      $$5189 = HEAP32[$30 >> 2] | 0;
      $$5198 = HEAP32[$31 >> 2] | 0;
     } else {
      $$5189 = $$4188$ph;
      $$5198 = $$4197$ph;
     }
     $66 = $$5198 - $$2223$ph | 0;
     $70 = $$5189 >> $66 & (1 << $$2223$ph) + -1;
     if (($70 | 0) < (HEAP32[2880 + ($$2223$ph << 2) >> 2] | 0)) {
      $$3224 = (HEAP32[2944 + ($$2223$ph << 2) >> 2] | 0) + $70 | 0;
      $$6190 = $$5189;
      $$6199 = $66;
     } else {
      $$3224 = $70;
      $$6190 = $$5189;
      $$6199 = $66;
     }
    }
    if (HEAP32[$5 + 152 + ($$0182 << 2) >> 2] | 0) {
     $82 = $3 + (HEAP32[$0 + 360 + ($$0182 << 2) >> 2] << 2) | 0;
     $84 = (HEAP32[$82 >> 2] | 0) + $$3224 | 0;
     HEAP32[$82 >> 2] = $84;
     HEAP16[$35 >> 1] = $84;
    }
    L32 : do if (!(HEAP32[$5 + 192 + ($$0182 << 2) >> 2] | 0)) {
     $$14 = $$6190;
     $$14207 = $$6199;
     $$2219 = 1;
     while (1) {
      if (($$2219 | 0) >= 64) {
       $$22 = $$14;
       $$22215 = $$14207;
       break L32;
      }
      if (($$14207 | 0) < 8) {
       if (!(_jpeg_fill_bit_buffer($2, $$14, $$14207, 0) | 0)) {
        $$8 = 0;
        break L4;
       }
       $142 = HEAP32[$30 >> 2] | 0;
       $143 = HEAP32[$31 >> 2] | 0;
       if (($143 | 0) < 8) {
        $$0181 = 1;
        $$16 = $142;
        $$16209 = $143;
        label = 49;
       } else {
        $$15 = $142;
        $$15208 = $143;
        label = 47;
       }
      } else {
       $$15 = $$14;
       $$15208 = $$14207;
       label = 47;
      }
      if ((label | 0) == 47) {
       label = 0;
       $147 = $$15 >> $$15208 + -8 & 255;
       $149 = HEAP32[$39 + 144 + ($147 << 2) >> 2] | 0;
       if (!$149) {
        $$0181 = 9;
        $$16 = $$15;
        $$16209 = $$15208;
        label = 49;
       } else {
        $$11232$ph = HEAPU8[$39 + 1168 + $147 >> 0] | 0;
        $$18$ph = $$15;
        $$18211$ph = $$15208 - $149 | 0;
       }
      }
      if ((label | 0) == 49) {
       label = 0;
       $155 = _jpeg_huff_decode($2, $$16, $$16209, $39, $$0181) | 0;
       if (($155 | 0) < 0) {
        $$8 = 0;
        break L4;
       }
       $$11232$ph = $155;
       $$18$ph = HEAP32[$30 >> 2] | 0;
       $$18211$ph = HEAP32[$31 >> 2] | 0;
      }
      $159 = $$11232$ph >>> 4;
      $160 = $$11232$ph & 15;
      if (!$160) if (($159 | 0) == 15) {
       $$20 = $$18$ph;
       $$20213 = $$18211$ph;
       $$pn = 15;
      } else {
       $$22 = $$18$ph;
       $$22215 = $$18211$ph;
       break L32;
      } else {
       if (($$18211$ph | 0) < ($160 | 0)) {
        if (!(_jpeg_fill_bit_buffer($2, $$18$ph, $$18211$ph, $160) | 0)) {
         $$8 = 0;
         break L4;
        }
        $$19 = HEAP32[$30 >> 2] | 0;
        $$19212 = HEAP32[$31 >> 2] | 0;
       } else {
        $$19 = $$18$ph;
        $$19212 = $$18211$ph;
       }
       $$20 = $$19;
       $$20213 = $$19212 - $160 | 0;
       $$pn = $159;
      }
      $$14 = $$20;
      $$14207 = $$20213;
      $$2219 = $$2219 + 1 + $$pn | 0;
     }
    } else {
     $$0217 = 1;
     $$7191 = $$6190;
     $$7200 = $$6199;
     while (1) {
      if (($$0217 | 0) >= 64) {
       $$22 = $$7191;
       $$22215 = $$7200;
       break L32;
      }
      if (($$7200 | 0) < 8) {
       if (!(_jpeg_fill_bit_buffer($2, $$7191, $$7200, 0) | 0)) {
        $$8 = 0;
        break L4;
       }
       $93 = HEAP32[$30 >> 2] | 0;
       $94 = HEAP32[$31 >> 2] | 0;
       if (($94 | 0) < 8) {
        $$0183 = 1;
        $$9 = $93;
        $$9202 = $94;
        label = 31;
       } else {
        $$8192 = $93;
        $$8201 = $94;
        label = 29;
       }
      } else {
       $$8192 = $$7191;
       $$8201 = $$7200;
       label = 29;
      }
      if ((label | 0) == 29) {
       label = 0;
       $98 = $$8192 >> $$8201 + -8 & 255;
       $100 = HEAP32[$39 + 144 + ($98 << 2) >> 2] | 0;
       if (!$100) {
        $$0183 = 9;
        $$9 = $$8192;
        $$9202 = $$8201;
        label = 31;
       } else {
        $$11$ph = $$8192;
        $$11204$ph = $$8201 - $100 | 0;
        $$7228$ph = HEAPU8[$39 + 1168 + $98 >> 0] | 0;
       }
      }
      if ((label | 0) == 31) {
       label = 0;
       $106 = _jpeg_huff_decode($2, $$9, $$9202, $39, $$0183) | 0;
       if (($106 | 0) < 0) {
        $$8 = 0;
        break L4;
       }
       $$11$ph = HEAP32[$30 >> 2] | 0;
       $$11204$ph = HEAP32[$31 >> 2] | 0;
       $$7228$ph = $106;
      }
      $110 = $$7228$ph >>> 4;
      $111 = $$7228$ph & 15;
      if (!$111) {
       if (($110 | 0) != 15) {
        $$22 = $$11$ph;
        $$22215 = $$11204$ph;
        break L32;
       }
       $$1218 = $$0217 + 15 | 0;
       $$13 = $$11$ph;
       $$13206 = $$11204$ph;
      } else {
       $113 = $110 + $$0217 | 0;
       if (($$11204$ph | 0) < ($111 | 0)) {
        if (!(_jpeg_fill_bit_buffer($2, $$11$ph, $$11204$ph, $111) | 0)) {
         $$8 = 0;
         break L4;
        }
        $$12 = HEAP32[$30 >> 2] | 0;
        $$12205 = HEAP32[$31 >> 2] | 0;
       } else {
        $$12 = $$11$ph;
        $$12205 = $$11204$ph;
       }
       $119 = $$12205 - $111 | 0;
       $123 = $$12 >> $119 & (1 << $111) + -1;
       if (($123 | 0) < (HEAP32[2880 + ($111 << 2) >> 2] | 0)) $131 = (HEAP32[2944 + ($111 << 2) >> 2] | 0) + $123 | 0; else $131 = $123;
       HEAP16[$35 + (HEAP32[2560 + ($113 << 2) >> 2] << 1) >> 1] = $131;
       $$1218 = $113;
       $$13 = $$12;
       $$13206 = $119;
      }
      $$0217 = $$1218 + 1 | 0;
      $$7191 = $$13;
      $$7200 = $$13206;
     }
    } while (0);
    $$0182 = $$0182 + 1 | 0;
    $$0184 = $$22;
    $$0193 = $$22215;
   }
   $172 = HEAP32[$18 >> 2] | 0;
   HEAP32[$172 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$172 + 4 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$24 >> 2] = $$0184;
   HEAP32[$26 >> 2] = $$0193;
   HEAP32[$28 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$28 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$28 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   HEAP32[$28 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
  }
  $175 = $5 + 36 | 0;
  HEAP32[$175 >> 2] = (HEAP32[$175 >> 2] | 0) + -1;
  $$8 = 1;
 } while (0);
 STACKTOP = sp;
 return $$8 | 0;
}

function _decode_bch($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$ = 0, $$0 = 0, $$0235 = 0, $$0237 = 0, $$0238 = 0, $$0240 = 0, $$0242 = 0, $$0245 = 0, $$0251 = 0, $$0253 = 0, $$0259 = 0, $$0261 = 0, $$0268 = 0, $$10 = 0, $$11 = 0, $$12 = 0, $$1236 = 0, $$1239 = 0, $$1241 = 0, $$1243 = 0, $$1246 = 0, $$1252 = 0, $$1254 = 0, $$1256 = 0, $$1260 = 0, $$1262 = 0, $$1264 = 0, $$2 = 0, $$2244 = 0, $$2247 = 0, $$2257 = 0, $$2265 = 0, $$3 = 0, $$3248 = 0, $$3258 = 0, $$3266 = 0, $$4 = 0, $$4249 = 0, $$5 = 0, $$5250 = 0, $$6 = 0, $$7 = 0, $$8 = 0, $$9 = 0, $$pre$phiZ2D = 0, $$pre280 = 0, $$sink = 0, $10 = 0, $105 = 0, $106 = 0, $107 = 0, $11 = 0, $114 = 0, $118 = 0, $12 = 0, $122 = 0, $126 = 0, $129 = 0, $137 = 0, $138 = 0, $14 = 0, $145 = 0, $157 = 0, $158 = 0, $161 = 0, $17 = 0, $175 = 0, $179 = 0, $18 = 0, $188 = 0, $189 = 0, $190 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $200 = 0, $205 = 0, $206 = 0, $21 = 0, $23 = 0, $30 = 0, $32 = 0, $33 = 0, $39 = 0, $41 = 0, $5 = 0, $51 = 0, $53 = 0, $55 = 0, $57 = 0, $58 = 0, $6 = 0, $66 = 0, $7 = 0, $79 = 0, $8 = 0, $81 = 0, $82 = 0, $84 = 0, $89 = 0, $9 = 0, $90 = 0, $93 = 0, label = 0, sp = 0, $$1243$looptemp = 0, $$0240$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2384 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2384);
 $5 = sp + 2320 | 0;
 $6 = sp + 880 | 0;
 $7 = sp + 800 | 0;
 $8 = sp + 720 | 0;
 $9 = sp + 640 | 0;
 $10 = sp + 560 | 0;
 $11 = sp + 48 | 0;
 $12 = sp;
 switch ($0 | 0) {
 case 2830:
  {
   $$0268 = $3;
   $$1252 = 1200;
   $$1254 = 688;
   $$1260 = 120;
   $$1262 = 127;
   $$3258 = 64;
   $$3266 = 9;
   label = 8;
   break;
  }
 case 772:
  {
   $$0251 = 624;
   $$0253 = 432;
   $$0259 = 13;
   $$0261 = 15;
   $$2257 = 9;
   $$2265 = 1;
   label = 5;
   break;
  }
 case 1028:
  {
   $$0251 = 624;
   $$0253 = 432;
   $$0259 = 13;
   $$0261 = 15;
   $$2257 = 5;
   $$2265 = 2;
   label = 5;
   break;
  }
 case 1029:
  {
   $$1256 = 12;
   $$1264 = 2;
   label = 4;
   break;
  }
 case 1285:
  {
   $$1256 = 7;
   $$1264 = 3;
   label = 4;
   break;
  }
 default:
  $$0237 = -1;
 }
 if ((label | 0) == 4) {
  $$0251 = 496;
  $$0253 = 304;
  $$0259 = 22;
  $$0261 = 31;
  $$2257 = $$1256;
  $$2265 = $$1264;
  label = 5;
 }
 L6 : do if ((label | 0) == 5) {
  $$0245 = 0;
  $14 = $1;
  $17 = $2;
  while (1) {
   if (($$0245 | 0) == ($$0259 | 0)) {
    $$0268 = $5;
    $$1252 = $$0251;
    $$1254 = $$0253;
    $$1260 = $$0259;
    $$1262 = $$0261;
    $$3258 = $$2257;
    $$3266 = $$2265;
    label = 8;
    break L6;
   }
   HEAP8[$5 + $$0245 >> 0] = $14 & 1;
   $18 = _bitshift64Lshr($14 | 0, $17 | 0, 1) | 0;
   $$0245 = $$0245 + 1 | 0;
   $14 = $18;
   $17 = getTempRet0() | 0;
  }
 } while (0);
 L11 : do if ((label | 0) == 8) {
  $21 = $$3266 << 1;
  $$0 = 0;
  $$1246 = 1;
  while (1) {
   if (($$1246 | 0) > ($21 | 0)) break;
   $23 = $10 + ($$1246 << 2) | 0;
   HEAP32[$23 >> 2] = 0;
   $$0242 = 0;
   $33 = 0;
   while (1) {
    if (($$0242 | 0) >= ($$1260 | 0)) break;
    if (!(HEAP8[$$0268 + $$0242 >> 0] | 0)) $205 = $33; else {
     $30 = $$1254 + (((Math_imul($$0242, $$1246) | 0) % ($$1262 | 0) | 0) << 2) | 0;
     $32 = $33 ^ HEAP32[$30 >> 2];
     HEAP32[$23 >> 2] = $32;
     $205 = $32;
    }
    $$0242 = $$0242 + 1 | 0;
    $33 = $205;
   }
   HEAP32[$23 >> 2] = HEAP32[$$1252 + ($33 << 2) >> 2];
   $$0 = ($33 | 0) == 0 ? $$0 : 1;
   $$1246 = $$1246 + 1 | 0;
  }
  $39 = ($$0 | 0) != 0;
  L24 : do if ($39) {
   HEAP32[$7 >> 2] = 0;
   $41 = HEAP32[$10 + 4 >> 2] | 0;
   HEAP32[$7 + 4 >> 2] = $41;
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 72 >> 2] = 1;
   $$2247 = 1;
   while (1) {
    if (($$2247 | 0) >= ($21 | 0)) break;
    HEAP32[$6 + ($$2247 << 2) >> 2] = -1;
    HEAP32[$6 + 72 + ($$2247 << 2) >> 2] = 0;
    $$2247 = $$2247 + 1 | 0;
   }
   HEAP32[$8 >> 2] = 0;
   HEAP32[$8 + 4 >> 2] = 0;
   HEAP32[$9 >> 2] = -1;
   HEAP32[$9 + 4 >> 2] = 0;
   $$0240 = 0;
   $51 = $41;
   $55 = 0;
   while (1) {
    $$0240$looptemp = $$0240;
    $$0240 = $$0240 + 1 | 0;
    L32 : do if (($51 | 0) == -1) {
     $53 = $$0240$looptemp + 2 | 0;
     HEAP32[$8 + ($53 << 2) >> 2] = $55;
     $$3248 = 0;
     while (1) {
      if (($$3248 | 0) > ($55 | 0)) {
       $$pre$phiZ2D = $53;
       $114 = $55;
       break L32;
      }
      $57 = $6 + ($$0240 * 72 | 0) + ($$3248 << 2) | 0;
      $58 = HEAP32[$57 >> 2] | 0;
      HEAP32[$6 + ($53 * 72 | 0) + ($$3248 << 2) >> 2] = $58;
      HEAP32[$57 >> 2] = HEAP32[$$1252 + ($58 << 2) >> 2];
      $$3248 = $$3248 + 1 | 0;
     }
    } else {
     $$0238 = $$0240$looptemp;
     while (1) {
      $66 = ($$0238 | 0) > 0;
      if ($66 & (HEAP32[$7 + ($$0238 << 2) >> 2] | 0) == -1) $$0238 = $$0238 + -1 | 0; else break;
     }
     if ($66) {
      $$1239 = $$0238;
      $$1243 = $$0238;
      while (1) {
       $$1243$looptemp = $$1243;
       $$1243 = $$1243 + -1 | 0;
       if ((HEAP32[$7 + ($$1243 << 2) >> 2] | 0) == -1) $$2 = $$1239; else $$2 = (HEAP32[$9 + ($$1239 << 2) >> 2] | 0) < (HEAP32[$9 + ($$1243 << 2) >> 2] | 0) ? $$1243 : $$1239;
       if (($$1243$looptemp | 0) <= 1) {
        $$3 = $$2;
        break;
       } else $$1239 = $$2;
      }
     } else $$3 = $$0238;
     $79 = $8 + ($$3 << 2) | 0;
     $81 = $$0240 - $$3 | 0;
     $82 = $81 + (HEAP32[$79 >> 2] | 0) | 0;
     $84 = $$0240$looptemp + 2 | 0;
     $$ = ($55 | 0) > ($82 | 0) ? $55 : $82;
     HEAP32[$8 + ($84 << 2) >> 2] = $$;
     $$4249 = 0;
     while (1) {
      if (($$4249 | 0) >= ($21 | 0)) break;
      HEAP32[$6 + ($84 * 72 | 0) + ($$4249 << 2) >> 2] = 0;
      $$4249 = $$4249 + 1 | 0;
     }
     $89 = $51 + $$1262 | 0;
     $90 = $7 + ($$3 << 2) | 0;
     $$pre280 = HEAP32[$79 >> 2] | 0;
     $$5250 = 0;
     while (1) {
      if (($$5250 | 0) > ($$pre280 | 0)) break;
      $93 = HEAP32[$6 + ($$3 * 72 | 0) + ($$5250 << 2) >> 2] | 0;
      if (($93 | 0) != -1) HEAP32[$6 + ($84 * 72 | 0) + ($81 + $$5250 << 2) >> 2] = HEAP32[$$1254 + ((($89 + $93 - (HEAP32[$90 >> 2] | 0) | 0) % ($$1262 | 0) | 0) << 2) >> 2];
      $$5250 = $$5250 + 1 | 0;
     }
     $$6 = 0;
     while (1) {
      if (($$6 | 0) > ($55 | 0)) {
       $$pre$phiZ2D = $84;
       $114 = $$;
       break L32;
      }
      $105 = $6 + ($$0240 * 72 | 0) + ($$6 << 2) | 0;
      $106 = HEAP32[$105 >> 2] | 0;
      $107 = $6 + ($84 * 72 | 0) + ($$6 << 2) | 0;
      HEAP32[$107 >> 2] = HEAP32[$107 >> 2] ^ $106;
      HEAP32[$105 >> 2] = HEAP32[$$1252 + ($106 << 2) >> 2];
      $$6 = $$6 + 1 | 0;
     }
    } while (0);
    HEAP32[$9 + ($$pre$phiZ2D << 2) >> 2] = $$0240 - $114;
    if (($$0240 | 0) >= ($21 | 0)) break;
    $118 = HEAP32[$10 + ($$pre$phiZ2D << 2) >> 2] | 0;
    if (($118 | 0) == -1) $$sink = 0; else $$sink = HEAP32[$$1254 + ($118 << 2) >> 2] | 0;
    $122 = $7 + ($$pre$phiZ2D << 2) | 0;
    HEAP32[$122 >> 2] = $$sink;
    $$7 = 1;
    $138 = $$sink;
    while (1) {
     if (($$7 | 0) > ($114 | 0)) break;
     $126 = HEAP32[$10 + ($$pre$phiZ2D - $$7 << 2) >> 2] | 0;
     if (($126 | 0) == -1) $206 = $138; else {
      $129 = HEAP32[$6 + ($$pre$phiZ2D * 72 | 0) + ($$7 << 2) >> 2] | 0;
      if (!$129) $206 = $138; else {
       $137 = $138 ^ HEAP32[$$1254 + ((((HEAP32[$$1252 + ($129 << 2) >> 2] | 0) + $126 | 0) % ($$1262 | 0) | 0) << 2) >> 2];
       HEAP32[$122 >> 2] = $137;
       $206 = $137;
      }
     }
     $$7 = $$7 + 1 | 0;
     $138 = $206;
    }
    $51 = HEAP32[$$1252 + ($138 << 2) >> 2] | 0;
    HEAP32[$122 >> 2] = $51;
    if (($114 | 0) > ($$3266 | 0)) break; else $55 = $114;
   }
   if (($114 | 0) > ($$3266 | 0)) {
    $$0237 = -1;
    break L11;
   }
   $$8 = 0;
   while (1) {
    if (($$8 | 0) > ($114 | 0)) break;
    $145 = $6 + ($$pre$phiZ2D * 72 | 0) + ($$8 << 2) | 0;
    HEAP32[$145 >> 2] = HEAP32[$$1252 + (HEAP32[$145 >> 2] << 2) >> 2];
    $$8 = $$8 + 1 | 0;
   }
   $$9 = 1;
   while (1) {
    if (($$9 | 0) > ($114 | 0)) break;
    HEAP32[$12 + ($$9 << 2) >> 2] = HEAP32[$6 + ($$pre$phiZ2D * 72 | 0) + ($$9 << 2) >> 2];
    $$9 = $$9 + 1 | 0;
   }
   $$0235 = 0;
   $$10 = 1;
   while (1) {
    if (($$1262 | 0) < ($$10 | 0)) break;
    $$2244 = 1;
    $$4 = 1;
    while (1) {
     if (($$2244 | 0) > ($114 | 0)) break;
     $157 = $12 + ($$2244 << 2) | 0;
     $158 = HEAP32[$157 >> 2] | 0;
     if (($158 | 0) == -1) $$5 = $$4; else {
      $161 = ($158 + $$2244 | 0) % ($$1262 | 0) | 0;
      HEAP32[$157 >> 2] = $161;
      $$5 = HEAP32[$$1254 + ($161 << 2) >> 2] ^ $$4;
     }
     $$2244 = $$2244 + 1 | 0;
     $$4 = $$5;
    }
    if (!$$4) {
     HEAP32[$11 + ($$0235 << 2) >> 2] = $$1262 - $$10;
     $$1236 = $$0235 + 1 | 0;
    } else $$1236 = $$0235;
    $$0235 = $$1236;
    $$10 = $$10 + 1 | 0;
   }
   if (($$0235 | 0) != ($114 | 0)) {
    $$0237 = -1;
    break L11;
   }
   $$11 = 0;
   while (1) {
    if (($$11 | 0) >= ($114 | 0)) {
     $$1241 = $$pre$phiZ2D;
     break L24;
    }
    $175 = $$0268 + (HEAP32[$11 + ($$11 << 2) >> 2] | 0) | 0;
    HEAP8[$175 >> 0] = HEAP8[$175 >> 0] ^ 1;
    $$11 = $$11 + 1 | 0;
   }
  } else $$1241 = 0; while (0);
  $179 = $4;
  HEAP32[$179 >> 2] = 0;
  HEAP32[$179 + 4 >> 2] = 0;
  $$12 = $$1260 - $$3258 | 0;
  $188 = 1;
  $189 = 0;
  $192 = 0;
  $193 = 0;
  while (1) {
   if (($$12 | 0) >= ($$1260 | 0)) break;
   $190 = ___muldi3($188 | 0, $189 | 0, HEAPU8[$$0268 + $$12 >> 0] | 0, 0) | 0;
   $194 = _i64Add($190 | 0, getTempRet0() | 0, $192 | 0, $193 | 0) | 0;
   $195 = getTempRet0() | 0;
   $196 = $4;
   HEAP32[$196 >> 2] = $194;
   HEAP32[$196 + 4 >> 2] = $195;
   $200 = _bitshift64Shl($188 | 0, $189 | 0, 1) | 0;
   $$12 = $$12 + 1 | 0;
   $188 = $200;
   $189 = getTempRet0() | 0;
   $192 = $194;
   $193 = $195;
  }
  if ($39) $$0237 = HEAP32[$8 + ($$1241 << 2) >> 2] | 0; else $$0237 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0237 | 0;
}

function _mbsrtowcs($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0105132 = 0, $$0111131 = 0, $$097 = 0, $$098$lcssa = 0, $$098133 = 0, $$10 = 0, $$1106$ph = 0, $$1106147 = 0, $$1112 = 0, $$1112$ph = 0, $$11122124 = 0, $$11182 = 0, $$11183 = 0, $$199 = 0, $$199$ph = 0, $$2 = 0, $$2100154 = 0, $$2107135 = 0, $$2113153 = 0, $$3101 = 0, $$3108 = 0, $$3108$ph = 0, $$3108176 = 0, $$3114 = 0, $$4 = 0, $$4102 = 0, $$4109 = 0, $$4115 = 0, $$5 = 0, $$5103 = 0, $$5110 = 0, $$5110180 = 0, $$5110181 = 0, $$5116$ph = 0, $$5116146 = 0, $$6 = 0, $$6104$lcssa = 0, $$6104$ph = 0, $$6104148 = 0, $$6117134 = 0, $$7118 = 0, $$7118$ph = 0, $$7118175 = 0, $$7136 = 0, $$8 = 0, $$8$ph = 0, $$8119 = 0, $$8177 = 0, $$9 = 0, $$9$sink = 0, $$9120 = 0, $$9120179 = 0, $$pre = 0, $$pre$phi173Z2D = 0, $$pre$phi174Z2D = 0, $$pre$phiZ2D = 0, $$pre171 = 0, $10 = 0, $105 = 0, $108 = 0, $109 = 0, $113 = 0, $117 = 0, $123 = 0, $124 = 0, $131 = 0, $133 = 0, $137 = 0, $14 = 0, $140 = 0, $141 = 0, $145 = 0, $152 = 0, $153 = 0, $159 = 0, $17 = 0, $19 = 0, $23 = 0, $26 = 0, $33 = 0, $38 = 0, $4 = 0, $41 = 0, $47 = 0, $48 = 0, $53 = 0, $6 = 0, $60 = 0, $66 = 0, $72 = 0, $82 = 0, $83 = 0, $89 = 0, label = 0;
 $4 = HEAP32[$1 >> 2] | 0;
 if (!$3) label = 5; else {
  $6 = HEAP32[$3 >> 2] | 0;
  if (!$6) label = 5; else if (!$0) {
   $$2 = $6;
   $$4102 = $4;
   $$4115 = $2;
   label = 26;
  } else {
   HEAP32[$3 >> 2] = 0;
   $$4 = $6;
   $$4109 = $0;
   $$8119 = $2;
   $$9 = $4;
   label = 48;
  }
 }
 L5 : do if ((label | 0) == 5) {
  $10 = (___pthread_self_300() | 0) + 188 | 0;
  $14 = ($0 | 0) != 0;
  if (HEAP32[HEAP32[$10 >> 2] >> 2] | 0) if ($14) {
   $$1106$ph = $0;
   $$5116$ph = $2;
   $$6104$ph = $4;
   label = 33;
   break;
  } else {
   $$1112$ph = $2;
   $$199$ph = $4;
   label = 15;
   break;
  }
  if (!$14) {
   $$097 = _strlen($4) | 0;
   label = 63;
   break;
  }
  L13 : do if (!$2) $$098$lcssa = $4; else {
   $$0105132 = $0;
   $$0111131 = $2;
   $$098133 = $4;
   while (1) {
    $17 = HEAP8[$$098133 >> 0] | 0;
    if (!($17 << 24 >> 24)) break;
    $19 = $$098133 + 1 | 0;
    HEAP32[$$0105132 >> 2] = $17 << 24 >> 24 & 57343;
    $23 = $$0111131 + -1 | 0;
    if (!$23) {
     $$098$lcssa = $19;
     break L13;
    } else {
     $$0105132 = $$0105132 + 4 | 0;
     $$0111131 = $23;
     $$098133 = $19;
    }
   }
   HEAP32[$$0105132 >> 2] = 0;
   HEAP32[$1 >> 2] = 0;
   $$097 = $2 - $$0111131 | 0;
   label = 63;
   break L5;
  } while (0);
  HEAP32[$1 >> 2] = $$098$lcssa;
  $$097 = $2;
  label = 63;
 } while (0);
 L20 : while (1) {
  L21 : do if ((label | 0) == 15) {
   label = 0;
   $$1112 = $$1112$ph;
   $$199 = $$199$ph;
   while (1) {
    $26 = HEAP8[$$199 >> 0] | 0;
    if ((($26 & 255) + -1 | 0) >>> 0 < 127) if (!($$199 & 3)) {
     $33 = HEAP32[$$199 >> 2] | 0;
     $38 = $33 & 255;
     if (!(($33 + -16843009 | $33) & -2139062144)) {
      $$2100154 = $$199;
      $$2113153 = $$1112;
      do {
       $$2100154 = $$2100154 + 4 | 0;
       $$2113153 = $$2113153 + -4 | 0;
       $41 = HEAP32[$$2100154 >> 2] | 0;
      } while (!(($41 + -16843009 | $41) & -2139062144 | 0));
      $$3101 = $$2100154;
      $$3114 = $$2113153;
      $48 = $41 & 255;
     } else {
      $$3101 = $$199;
      $$3114 = $$1112;
      $48 = $38;
     }
    } else {
     $$3101 = $$199;
     $$3114 = $$1112;
     $48 = $26;
    } else {
     $$3101 = $$199;
     $$3114 = $$1112;
     $48 = $26;
    }
    $47 = $48 & 255;
    if (($47 + -1 | 0) >>> 0 >= 127) break;
    $$1112 = $$3114 + -1 | 0;
    $$199 = $$3101 + 1 | 0;
   }
   $53 = $47 + -194 | 0;
   if ($53 >>> 0 > 50) {
    $$11182 = $$3101;
    $$5110180 = $0;
    $$9120179 = $$3114;
    label = 57;
   } else {
    $$2 = HEAP32[3472 + ($53 << 2) >> 2] | 0;
    $$4102 = $$3101 + 1 | 0;
    $$4115 = $$3114;
    label = 26;
    continue L20;
   }
  } else if ((label | 0) == 26) {
   label = 0;
   $60 = (HEAPU8[$$4102 >> 0] | 0) >>> 3;
   if (($60 + -16 | $60 + ($$2 >> 26)) >>> 0 > 7) {
    $$5110 = $0;
    $$6 = $$2;
    $$9$sink = $$4102;
    $$9120 = $$4115;
    label = 56;
   } else {
    $66 = $$4102 + 1 | 0;
    if (!($$2 & 33554432)) $$5103 = $66; else {
     if ((HEAP8[$66 >> 0] & -64) << 24 >> 24 != -128) {
      $$5110 = $0;
      $$6 = $$2;
      $$9$sink = $$4102;
      $$9120 = $$4115;
      label = 56;
      break;
     }
     $72 = $$4102 + 2 | 0;
     if (!($$2 & 524288)) $$5103 = $72; else {
      if ((HEAP8[$72 >> 0] & -64) << 24 >> 24 != -128) {
       $$5110 = $0;
       $$6 = $$2;
       $$9$sink = $$4102;
       $$9120 = $$4115;
       label = 56;
       break;
      }
      $$5103 = $$4102 + 3 | 0;
     }
    }
    $$1112$ph = $$4115 + -1 | 0;
    $$199$ph = $$5103;
    label = 15;
    continue L20;
   }
  } else if ((label | 0) == 33) {
   label = 0;
   L23 : do if (!$$5116$ph) $$6104$lcssa = $$6104$ph; else {
    $$1106147 = $$1106$ph;
    $$5116146 = $$5116$ph;
    $$6104148 = $$6104$ph;
    while (1) {
     $82 = HEAPU8[$$6104148 >> 0] | 0;
     $83 = $82 + -1 | 0;
     if ($83 >>> 0 < 127) if (($$6104148 & 3 | 0) == 0 & $$5116146 >>> 0 > 4) {
      $$2107135 = $$1106147;
      $$6117134 = $$5116146;
      $$7136 = $$6104148;
      while (1) {
       $89 = HEAP32[$$7136 >> 2] | 0;
       if (($89 + -16843009 | $89) & -2139062144 | 0) {
        label = 42;
        break;
       }
       HEAP32[$$2107135 >> 2] = $89 & 255;
       HEAP32[$$2107135 + 4 >> 2] = HEAPU8[$$7136 + 1 >> 0];
       HEAP32[$$2107135 + 8 >> 2] = HEAPU8[$$7136 + 2 >> 0];
       $105 = $$7136 + 4 | 0;
       $108 = $$2107135 + 16 | 0;
       HEAP32[$$2107135 + 12 >> 2] = HEAPU8[$$7136 + 3 >> 0];
       $109 = $$6117134 + -4 | 0;
       if ($109 >>> 0 > 4) {
        $$2107135 = $108;
        $$6117134 = $109;
        $$7136 = $105;
       } else {
        label = 41;
        break;
       }
      }
      if ((label | 0) == 41) {
       label = 0;
       $$3108$ph = $108;
       $$7118$ph = $109;
       $$8$ph = $105;
       $$pre = HEAP8[$105 >> 0] | 0;
      } else if ((label | 0) == 42) {
       label = 0;
       $$3108$ph = $$2107135;
       $$7118$ph = $$6117134;
       $$8$ph = $$7136;
       $$pre = $89 & 255;
      }
      $$pre171 = $$pre & 255;
      $$3108 = $$3108$ph;
      $$7118 = $$7118$ph;
      $$8 = $$8$ph;
      $$pre$phi173Z2D = $$pre171 + -1 | 0;
      $$pre$phiZ2D = $$pre171;
      label = 44;
     } else {
      $$3108176 = $$1106147;
      $$7118175 = $$5116146;
      $$8177 = $$6104148;
      $$pre$phi174Z2D = $82;
     } else {
      $$3108 = $$1106147;
      $$7118 = $$5116146;
      $$8 = $$6104148;
      $$pre$phi173Z2D = $83;
      $$pre$phiZ2D = $82;
      label = 44;
     }
     if ((label | 0) == 44) {
      label = 0;
      if ($$pre$phi173Z2D >>> 0 < 127) {
       $$3108176 = $$3108;
       $$7118175 = $$7118;
       $$8177 = $$8;
       $$pre$phi174Z2D = $$pre$phiZ2D;
      } else break;
     }
     $113 = $$8177 + 1 | 0;
     HEAP32[$$3108176 >> 2] = $$pre$phi174Z2D;
     $$5116146 = $$7118175 + -1 | 0;
     if (!$$5116146) {
      $$6104$lcssa = $113;
      break L23;
     } else {
      $$1106147 = $$3108176 + 4 | 0;
      $$6104148 = $113;
     }
    }
    $117 = $$pre$phiZ2D + -194 | 0;
    if ($117 >>> 0 > 50) {
     $$11182 = $$8;
     $$5110180 = $$3108;
     $$9120179 = $$7118;
     label = 57;
     break L21;
    }
    $$4 = HEAP32[3472 + ($117 << 2) >> 2] | 0;
    $$4109 = $$3108;
    $$8119 = $$7118;
    $$9 = $$8 + 1 | 0;
    label = 48;
    continue L20;
   } while (0);
   HEAP32[$1 >> 2] = $$6104$lcssa;
   $$097 = $2;
   label = 63;
   continue L20;
  } else if ((label | 0) == 48) {
   label = 0;
   $123 = HEAPU8[$$9 >> 0] | 0;
   $124 = $123 >>> 3;
   if (($124 + -16 | $124 + ($$4 >> 26)) >>> 0 > 7) {
    $$5110 = $$4109;
    $$6 = $$4;
    $$9$sink = $$9;
    $$9120 = $$8119;
    label = 56;
   } else {
    $131 = $$9 + 1 | 0;
    $133 = $123 + -128 | $$4 << 6;
    do if (($133 | 0) < 0) {
     $137 = (HEAPU8[$131 >> 0] | 0) + -128 | 0;
     if ($137 >>> 0 <= 63) {
      $140 = $$9 + 2 | 0;
      $141 = $137 | $133 << 6;
      if (($141 | 0) >= 0) {
       $$10 = $140;
       $$5 = $141;
       break;
      }
      $145 = (HEAPU8[$140 >> 0] | 0) + -128 | 0;
      if ($145 >>> 0 <= 63) {
       $$10 = $$9 + 3 | 0;
       $$5 = $145 | $141 << 6;
       break;
      }
     }
     $152 = ___errno_location() | 0;
     HEAP32[$152 >> 2] = 84;
     $$11122124 = $$9 + -1 | 0;
     break L21;
    } else {
     $$10 = $131;
     $$5 = $133;
    } while (0);
    HEAP32[$$4109 >> 2] = $$5;
    $$1106$ph = $$4109 + 4 | 0;
    $$5116$ph = $$8119 + -1 | 0;
    $$6104$ph = $$10;
    label = 33;
    continue L20;
   }
  } else if ((label | 0) == 63) {
   label = 0;
   return $$097 | 0;
  } while (0);
  if ((label | 0) == 56) {
   label = 0;
   $153 = $$9$sink + -1 | 0;
   if (!$$6) {
    $$11182 = $153;
    $$5110180 = $$5110;
    $$9120179 = $$9120;
    label = 57;
   } else {
    $$11183 = $153;
    $$5110181 = $$5110;
    label = 61;
   }
  }
  if ((label | 0) == 57) {
   label = 0;
   if (!(HEAP8[$$11182 >> 0] | 0)) {
    if ($$5110180 | 0) {
     HEAP32[$$5110180 >> 2] = 0;
     HEAP32[$1 >> 2] = 0;
    }
    $$097 = $2 - $$9120179 | 0;
    label = 63;
    continue;
   } else {
    $$11183 = $$11182;
    $$5110181 = $$5110180;
    label = 61;
   }
  }
  if ((label | 0) == 61) {
   label = 0;
   $159 = ___errno_location() | 0;
   HEAP32[$159 >> 2] = 84;
   if (!$$5110181) {
    $$097 = -1;
    label = 63;
    continue;
   } else $$11122124 = $$11183;
  }
  HEAP32[$1 >> 2] = $$11122124;
  $$097 = -1;
  label = 63;
 }
 return 0;
}

function __ZNK6vision21HoughSimilarityVoting11getBinIndexEiiii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $103 = 0, $107 = 0, $114 = 0, $119 = 0, $12 = 0, $123 = 0, $132 = 0, $137 = 0, $141 = 0, $143 = 0, $147 = 0, $151 = 0, $160 = 0, $165 = 0, $169 = 0, $17 = 0, $21 = 0, $23 = 0, $30 = 0, $35 = 0, $39 = 0, $46 = 0, $5 = 0, $51 = 0, $55 = 0, $57 = 0, $64 = 0, $69 = 0, $73 = 0, $80 = 0, $85 = 0, $89 = 0, $91 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 if (($1 | 0) <= -1) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30928) | 0, 30431) | 0, 33528) | 0, 165) | 0, 33535) | 0, 30961) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 63]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 $23 = HEAP32[$0 + 52 >> 2] | 0;
 if (($23 | 0) <= ($1 | 0)) {
  $30 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30979) | 0, 30431) | 0, 33528) | 0, 166) | 0, 33535) | 0, 30961) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $30 + (HEAP32[(HEAP32[$30 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $35 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $39 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$35 >> 2] | 0) + 28 >> 2] & 63]($35, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($30, $39) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($30) | 0;
  _abort();
 }
 if (($2 | 0) <= -1) {
  $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31019) | 0, 30431) | 0, 33528) | 0, 167) | 0, 33535) | 0, 31052) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 63]($51, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
  _abort();
 }
 $57 = HEAP32[$0 + 56 >> 2] | 0;
 if (($57 | 0) <= ($2 | 0)) {
  $64 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31070) | 0, 30431) | 0, 33528) | 0, 168) | 0, 33535) | 0, 31052) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $64 + (HEAP32[(HEAP32[$64 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $69 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $73 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$69 >> 2] | 0) + 28 >> 2] & 63]($69, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($64, $73) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($64) | 0;
  _abort();
 }
 if (($3 | 0) <= -1) {
  $80 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31110) | 0, 30431) | 0, 33528) | 0, 169) | 0, 33535) | 0, 31147) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $80 + (HEAP32[(HEAP32[$80 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $85 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $89 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$85 >> 2] | 0) + 28 >> 2] & 63]($85, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($80, $89) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($80) | 0;
  _abort();
 }
 $91 = HEAP32[$0 + 60 >> 2] | 0;
 if (($91 | 0) <= ($3 | 0)) {
  $98 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31169) | 0, 30431) | 0, 33528) | 0, 170) | 0, 33535) | 0, 31147) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $98 + (HEAP32[(HEAP32[$98 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $103 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $107 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$103 >> 2] | 0) + 28 >> 2] & 63]($103, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($98, $107) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($98) | 0;
  _abort();
 }
 if (($4 | 0) <= -1) {
  $114 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31217) | 0, 30431) | 0, 33528) | 0, 171) | 0, 33535) | 0, 31254) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $114 + (HEAP32[(HEAP32[$114 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $119 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $123 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$119 >> 2] | 0) + 28 >> 2] & 63]($119, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($114, $123) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($114) | 0;
  _abort();
 }
 if ((HEAP32[$0 + 64 >> 2] | 0) <= ($4 | 0)) {
  $132 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31276) | 0, 30431) | 0, 33528) | 0, 172) | 0, 33535) | 0, 31254) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $132 + (HEAP32[(HEAP32[$132 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $137 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $141 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$137 >> 2] | 0) + 28 >> 2] & 63]($137, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($132, $141) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($132) | 0;
  _abort();
 }
 $143 = (Math_imul($23, $2) | 0) + $1 | 0;
 $147 = (Math_imul(HEAP32[$0 + 84 >> 2] | 0, $3) | 0) + $143 | 0;
 $151 = $147 + (Math_imul(HEAP32[$0 + 88 >> 2] | 0, $4) | 0) | 0;
 if (($151 | 0) > ((Math_imul(Math_imul($57, $23) | 0, (Math_imul($91, $4) | 0) + $3 | 0) | 0) + $143 | 0)) {
  $160 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31324) | 0, 30431) | 0, 33528) | 0, 176) | 0, 33535) | 0, 30909) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $160 + (HEAP32[(HEAP32[$160 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $165 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $169 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$165 >> 2] | 0) + 28 >> 2] & 63]($165, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($160, $169) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($160) | 0;
  _abort();
 } else {
  STACKTOP = sp;
  return $151 | 0;
 }
 return 0;
}

function _decompress_smooth_data($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0284 = 0, $$0288 = 0, $$0289 = 0, $$0289$phi = 0, $$0292 = 0, $$0293 = 0, $$0293$phi = 0, $$0296 = 0, $$0297 = 0, $$0297$phi = 0, $$0298 = 0, $$0299 = 0, $$0300 = 0, $$0303 = 0, $$0304 = 0, $$0305 = 0, $$0306 = 0, $$0308 = 0, $$0309 = 0, $$0310 = 0, $$0312 = 0, $$0313 = 0, $$0314 = 0, $$1 = 0, $$1287 = 0, $$1291 = 0, $$1295 = 0, $$1302 = 0, $$1307 = 0, $$1311 = 0, $$3 = 0, $$5 = 0, $$7 = 0, $$9 = 0, $10 = 0, $100 = 0, $103 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $13 = 0, $130 = 0, $14 = 0, $140 = 0, $142 = 0, $144 = 0, $146 = 0, $15 = 0, $158 = 0, $163 = 0, $166 = 0, $168 = 0, $17 = 0, $172 = 0, $174 = 0, $179 = 0, $184 = 0, $187 = 0, $189 = 0, $193 = 0, $195 = 0, $2 = 0, $200 = 0, $207 = 0, $210 = 0, $212 = 0, $216 = 0, $218 = 0, $223 = 0, $230 = 0, $233 = 0, $235 = 0, $239 = 0, $241 = 0, $246 = 0, $253 = 0, $256 = 0, $258 = 0, $262 = 0, $264 = 0, $281 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $48 = 0, $5 = 0, $51 = 0, $56 = 0, $57 = 0, $62 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, $81 = 0, $83 = 0, $85 = 0, $88 = 0, $9 = 0, $91 = 0, $94 = 0, $97 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 $2 = sp;
 $4 = HEAP32[$0 + 428 >> 2] | 0;
 $5 = $0 + 320 | 0;
 $7 = (HEAP32[$5 >> 2] | 0) + -1 | 0;
 $8 = $0 + 144 | 0;
 $9 = $0 + 152 | 0;
 $10 = $0 + 436 | 0;
 $11 = $0 + 400 | 0;
 $12 = $0 + 148 | 0;
 $13 = $0 + 156 | 0;
 while (1) {
  $14 = HEAP32[$8 >> 2] | 0;
  $15 = HEAP32[$9 >> 2] | 0;
  if (($14 | 0) > ($15 | 0)) {
   label = 7;
   break;
  }
  $17 = HEAP32[$10 >> 2] | 0;
  if (HEAP32[$17 + 20 >> 2] | 0) {
   label = 7;
   break;
  }
  if (($14 | 0) == ($15 | 0)) if ((HEAP32[$12 >> 2] | 0) >>> 0 > ((HEAP32[$13 >> 2] | 0) + ((HEAP32[$11 >> 2] | 0) == 0 & 1) | 0) >>> 0) {
   label = 7;
   break;
  }
  if (!(FUNCTION_TABLE_ii[HEAP32[$17 >> 2] & 127]($0) | 0)) {
   $$0284 = 0;
   break;
  }
 }
 if ((label | 0) == 7) {
  $34 = $0 + 36 | 0;
  $35 = $0 + 4 | 0;
  $36 = $4 + 112 | 0;
  $37 = $0 + 448 | 0;
  $38 = $2 + 2 | 0;
  $39 = $2 + 16 | 0;
  $40 = $2 + 32 | 0;
  $41 = $2 + 18 | 0;
  $42 = $2 + 4 | 0;
  $$0299 = 0;
  $$0312 = HEAP32[$0 + 216 >> 2] | 0;
  while (1) {
   if (($$0299 | 0) >= (HEAP32[$34 >> 2] | 0)) break;
   L13 : do if (HEAP32[$$0312 + 48 >> 2] | 0) {
    $48 = HEAP32[$13 >> 2] | 0;
    if ($48 >>> 0 < $7 >>> 0) {
     $51 = HEAP32[$$0312 + 12 >> 2] | 0;
     $$0303 = $51 << 1;
     $$0308 = 0;
     $$1302 = $51;
     $62 = $51;
    } else {
     $56 = HEAP32[$$0312 + 12 >> 2] | 0;
     $57 = ((HEAP32[$$0312 + 32 >> 2] | 0) >>> 0) % ($56 >>> 0) | 0;
     $spec$select = ($57 | 0) == 0 ? $56 : $57;
     $$0303 = $spec$select;
     $$0308 = 1;
     $$1302 = $spec$select;
     $62 = $56;
    }
    if (!$48) {
     $$0304 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$35 >> 2] | 0) + 32 >> 2] & 31]($0, HEAP32[$4 + 72 + ($$0299 << 2) >> 2] | 0, 0, $$0303, 0) | 0;
     $$0309 = 1;
    } else {
     $69 = Math_imul($62, $48 + -1 | 0) | 0;
     $70 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$35 >> 2] | 0) + 32 >> 2] & 31]($0, HEAP32[$4 + 72 + ($$0299 << 2) >> 2] | 0, $69, $62 + $$0303 | 0, 0) | 0;
     $$0304 = $70 + (HEAP32[$$0312 + 12 >> 2] << 2) | 0;
     $$0309 = 0;
    }
    $81 = (HEAP32[$36 >> 2] | 0) + ($$0299 * 6 << 2) | 0;
    $83 = HEAP32[$$0312 + 76 >> 2] | 0;
    $85 = HEAPU16[$83 >> 1] | 0;
    $88 = HEAPU16[$83 + 2 >> 1] | 0;
    $91 = HEAPU16[$83 + 16 >> 1] | 0;
    $94 = HEAPU16[$83 + 32 >> 1] | 0;
    $97 = HEAPU16[$83 + 18 >> 1] | 0;
    $100 = HEAPU16[$83 + 4 >> 1] | 0;
    $103 = HEAP32[(HEAP32[$37 >> 2] | 0) + 4 + ($$0299 << 2) >> 2] | 0;
    $106 = ($$0308 | 0) != 0;
    $107 = $$1302 + -1 | 0;
    $108 = $$0312 + 28 | 0;
    $109 = $81 + 4 | 0;
    $110 = $81 + 8 | 0;
    $111 = $81 + 12 | 0;
    $112 = $85 * 36 | 0;
    $113 = $88 << 7;
    $114 = $81 + 16 | 0;
    $115 = $91 << 7;
    $116 = $88 << 8;
    $117 = $81 + 20 | 0;
    $118 = $85 * 9 | 0;
    $119 = $94 << 7;
    $120 = $91 << 8;
    $121 = $$0312 + 36 | 0;
    $122 = $85 * 5 | 0;
    $123 = $97 << 7;
    $124 = $94 << 8;
    $125 = $100 << 7;
    $126 = $97 << 8;
    $127 = $100 << 8;
    $$0300 = 0;
    $$0314 = HEAP32[$1 + ($$0299 << 2) >> 2] | 0;
    while (1) {
     if (($$0300 | 0) >= ($$1302 | 0)) break L13;
     $130 = HEAP32[$$0304 + ($$0300 << 2) >> 2] | 0;
     if ($$0309 & ($$0300 | 0) == 0) $$0306 = $130; else $$0306 = HEAP32[$$0304 + ($$0300 + -1 << 2) >> 2] | 0;
     if ($106 & ($$0300 | 0) == ($107 | 0)) $$0310 = $130; else $$0310 = HEAP32[$$0304 + ($$0300 + 1 << 2) >> 2] | 0;
     $140 = HEAP16[$$0306 >> 1] | 0;
     $142 = HEAP16[$130 >> 1] | 0;
     $144 = HEAP16[$$0310 >> 1] | 0;
     $146 = (HEAP32[$108 >> 2] | 0) + -1 | 0;
     $$0288 = $144;
     $$0289 = $144;
     $$0292 = $142;
     $$0293 = $142;
     $$0296 = $140;
     $$0297 = $140;
     $$0298 = 0;
     $$0305 = $130;
     $$0313 = 0;
     $$1307 = $$0306;
     $$1311 = $$0310;
     while (1) {
      if ($$0298 >>> 0 > $146 >>> 0) break;
      _jcopy_block_row($$0305, $2, 1);
      if ($$0298 >>> 0 < $146 >>> 0) {
       $$1287 = HEAP16[$$1311 + 128 >> 1] | 0;
       $$1291 = HEAP16[$$0305 + 128 >> 1] | 0;
       $$1295 = HEAP16[$$1307 + 128 >> 1] | 0;
      } else {
       $$1287 = $$0288;
       $$1291 = $$0292;
       $$1295 = $$0296;
      }
      $158 = HEAP32[$109 >> 2] | 0;
      if (($158 | 0) != 0 & (HEAP16[$38 >> 1] | 0) == 0) {
       $163 = Math_imul($112, $$0293 - $$1291 | 0) | 0;
       if (($163 | 0) > -1) {
        $166 = ($163 + $113 | 0) / ($116 | 0) | 0;
        $168 = 1 << $158;
        $$1 = ($158 | 0) > 0 ? (($166 | 0) < ($168 | 0) ? $166 : $168 + -1 | 0) : $166;
       } else {
        $172 = ($113 - $163 | 0) / ($116 | 0) | 0;
        $174 = 1 << $158;
        $$1 = 0 - (($158 | 0) > 0 ? (($172 | 0) < ($174 | 0) ? $172 : $174 + -1 | 0) : $172) | 0;
       }
       HEAP16[$38 >> 1] = $$1;
      }
      $179 = HEAP32[$110 >> 2] | 0;
      if (($179 | 0) != 0 & (HEAP16[$39 >> 1] | 0) == 0) {
       $184 = Math_imul($112, $$0296 - $$0288 | 0) | 0;
       if (($184 | 0) > -1) {
        $187 = ($184 + $115 | 0) / ($120 | 0) | 0;
        $189 = 1 << $179;
        $$3 = ($179 | 0) > 0 ? (($187 | 0) < ($189 | 0) ? $187 : $189 + -1 | 0) : $187;
       } else {
        $193 = ($115 - $184 | 0) / ($120 | 0) | 0;
        $195 = 1 << $179;
        $$3 = 0 - (($179 | 0) > 0 ? (($193 | 0) < ($195 | 0) ? $193 : $195 + -1 | 0) : $193) | 0;
       }
       HEAP16[$39 >> 1] = $$3;
      }
      $200 = HEAP32[$111 >> 2] | 0;
      if (($200 | 0) != 0 & (HEAP16[$40 >> 1] | 0) == 0) {
       $207 = Math_imul($118, $$0296 - ($$0292 << 1) + $$0288 | 0) | 0;
       if (($207 | 0) > -1) {
        $210 = ($207 + $119 | 0) / ($124 | 0) | 0;
        $212 = 1 << $200;
        $$5 = ($200 | 0) > 0 ? (($210 | 0) < ($212 | 0) ? $210 : $212 + -1 | 0) : $210;
       } else {
        $216 = ($119 - $207 | 0) / ($124 | 0) | 0;
        $218 = 1 << $200;
        $$5 = 0 - (($200 | 0) > 0 ? (($216 | 0) < ($218 | 0) ? $216 : $218 + -1 | 0) : $216) | 0;
       }
       HEAP16[$40 >> 1] = $$5;
      }
      $223 = HEAP32[$114 >> 2] | 0;
      if (($223 | 0) != 0 & (HEAP16[$41 >> 1] | 0) == 0) {
       $230 = Math_imul($122, $$0297 - $$0289 - $$1295 + $$1287 | 0) | 0;
       if (($230 | 0) > -1) {
        $233 = ($230 + $123 | 0) / ($126 | 0) | 0;
        $235 = 1 << $223;
        $$7 = ($223 | 0) > 0 ? (($233 | 0) < ($235 | 0) ? $233 : $235 + -1 | 0) : $233;
       } else {
        $239 = ($123 - $230 | 0) / ($126 | 0) | 0;
        $241 = 1 << $223;
        $$7 = 0 - (($223 | 0) > 0 ? (($239 | 0) < ($241 | 0) ? $239 : $241 + -1 | 0) : $239) | 0;
       }
       HEAP16[$41 >> 1] = $$7;
      }
      $246 = HEAP32[$117 >> 2] | 0;
      if (($246 | 0) != 0 & (HEAP16[$42 >> 1] | 0) == 0) {
       $253 = Math_imul($118, $$0293 - ($$0292 << 1) + $$1291 | 0) | 0;
       if (($253 | 0) > -1) {
        $256 = ($253 + $125 | 0) / ($127 | 0) | 0;
        $258 = 1 << $246;
        $$9 = ($246 | 0) > 0 ? (($256 | 0) < ($258 | 0) ? $256 : $258 + -1 | 0) : $256;
       } else {
        $262 = ($125 - $253 | 0) / ($127 | 0) | 0;
        $264 = 1 << $246;
        $$9 = 0 - (($246 | 0) > 0 ? (($262 | 0) < ($264 | 0) ? $262 : $264 + -1 | 0) : $262) | 0;
       }
       HEAP16[$42 >> 1] = $$9;
      }
      FUNCTION_TABLE_viiiii[$103 & 31]($0, $$0312, $2, $$0314, $$0313);
      $$0297$phi = $$0296;
      $$0293$phi = $$0292;
      $$0289$phi = $$0288;
      $$0288 = $$1287;
      $$0292 = $$1291;
      $$0296 = $$1295;
      $$0298 = $$0298 + 1 | 0;
      $$0305 = $$0305 + 128 | 0;
      $$0313 = (HEAP32[$121 >> 2] | 0) + $$0313 | 0;
      $$1307 = $$1307 + 128 | 0;
      $$1311 = $$1311 + 128 | 0;
      $$0297 = $$0297$phi;
      $$0293 = $$0293$phi;
      $$0289 = $$0289$phi;
     }
     $$0300 = $$0300 + 1 | 0;
     $$0314 = $$0314 + (HEAP32[$121 >> 2] << 2) | 0;
    }
   } while (0);
   $$0299 = $$0299 + 1 | 0;
   $$0312 = $$0312 + 84 | 0;
  }
  $281 = (HEAP32[$13 >> 2] | 0) + 1 | 0;
  HEAP32[$13 >> 2] = $281;
  $$0284 = $281 >>> 0 < (HEAP32[$5 >> 2] | 0) >>> 0 ? 3 : 4;
 }
 STACKTOP = sp;
 return $$0284 | 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPNS_4NodeILi96EEEPKhiPKii($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$065 = 0, $$066 = 0, $$in = 0, $$sroa$0120$0 = 0, $$sroa$0120$0$in = 0, $100 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $118 = 0, $119 = 0, $123 = 0, $127 = 0, $128 = 0, $129 = 0, $138 = 0, $143 = 0, $147 = 0, $148 = 0, $149 = 0, $154 = 0, $155 = 0, $156 = 0, $164 = 0, $17 = 0, $18 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $35 = 0, $40 = 0, $44 = 0, $46 = 0, $49 = 0, $54 = 0, $6 = 0, $61 = 0, $66 = 0, $7 = 0, $70 = 0, $77 = 0, $8 = 0, $82 = 0, $86 = 0, $87 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $6 = sp + 20 | 0;
 $7 = sp;
 $8 = $0 + 12 | 0;
 $9 = __ZNK6vision14BinarykMedoidsILi96EE1kEv($8) | 0;
 if ((__ZN6vision4max2IiEET_S1_S1_($9, HEAP32[$0 + 108 >> 2] | 0) | 0) >= ($5 | 0)) {
  __ZN6vision4NodeILi96EE4leafEb($1, 1);
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(__ZN6vision4NodeILi96EE12reverseIndexEv($1) | 0, $5);
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= ($5 | 0)) break;
   $17 = HEAP32[$4 + ($$0 << 2) >> 2] | 0;
   $18 = __ZN6vision4NodeILi96EE12reverseIndexEv($1) | 0;
   HEAP32[(HEAP32[$18 >> 2] | 0) + ($$0 << 2) >> 2] = $17;
   $$0 = $$0 + 1 | 0;
  }
  STACKTOP = sp;
  return;
 }
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$7 + 16 >> 2] = 1065353216;
 __ZN6vision14BinarykMedoidsILi96EE6assignEPKhiPKii($8, $2, $3, $4, $5);
 $23 = __ZNK6vision14BinarykMedoidsILi96EE10assignmentEv($8) | 0;
 $24 = $23 + 4 | 0;
 $25 = HEAP32[$24 >> 2] | 0;
 $26 = HEAP32[$23 >> 2] | 0;
 if (($25 - $26 >> 2 | 0) != ($5 | 0)) {
  $35 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27230) | 0, 27286) | 0, 33528) | 0, 363) | 0, 33535) | 0, 27416) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $35 + (HEAP32[(HEAP32[$35 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $40 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $44 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$40 >> 2] | 0) + 28 >> 2] & 63]($40, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($35, $44) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($35) | 0;
  _abort();
 }
 $$066 = 0;
 $$in = $26;
 $46 = $25;
 while (1) {
  if ($$066 >>> 0 >= $46 - $$in >> 2 >>> 0) {
   label = 10;
   break;
  }
  $54 = HEAP32[$$in + ($$066 << 2) >> 2] | 0;
  if (($54 | 0) == -1) {
   label = 12;
   break;
  }
  if (($54 | 0) >= ($5 | 0)) {
   label = 14;
   break;
  }
  $87 = $4 + ($54 << 2) | 0;
  if ((HEAP32[$87 >> 2] | 0) >= ($3 | 0)) {
   label = 16;
   break;
  }
  $105 = __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEEixERSA_($7, $87) | 0;
  $106 = $4 + ($$066 << 2) | 0;
  $107 = $105 + 4 | 0;
  $108 = HEAP32[$107 >> 2] | 0;
  if (($108 | 0) == (HEAP32[$105 + 8 >> 2] | 0)) __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_($105, $106); else {
   HEAP32[$108 >> 2] = HEAP32[$106 >> 2];
   HEAP32[$107 >> 2] = $108 + 4;
  }
  $$066 = $$066 + 1 | 0;
  $$in = HEAP32[$23 >> 2] | 0;
  $46 = HEAP32[$24 >> 2] | 0;
 }
 if ((label | 0) == 10) {
  $49 = $7 + 12 | 0;
  L23 : do if ((HEAP32[$49 >> 2] | 0) == 1) {
   __ZN6vision4NodeILi96EE4leafEb($1, 1);
   __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm(__ZN6vision4NodeILi96EE12reverseIndexEv($1) | 0, $5);
   $$065 = 0;
   while (1) {
    if (($$065 | 0) >= ($5 | 0)) break L23;
    $118 = HEAP32[$4 + ($$065 << 2) >> 2] | 0;
    $119 = __ZN6vision4NodeILi96EE12reverseIndexEv($1) | 0;
    HEAP32[(HEAP32[$119 >> 2] | 0) + ($$065 << 2) >> 2] = $118;
    $$065 = $$065 + 1 | 0;
   }
  } else {
   $123 = __ZN6vision4NodeILi96EE8childrenEv($1) | 0;
   __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE7reserveEm($123, HEAP32[$49 >> 2] | 0);
   $$sroa$0120$0$in = $7 + 8 | 0;
   while (1) {
    $$sroa$0120$0 = HEAP32[$$sroa$0120$0$in >> 2] | 0;
    if (!$$sroa$0120$0) break L23;
    $127 = $$sroa$0120$0;
    $128 = $127 + 12 | 0;
    $129 = $127 + 16 | 0;
    if ((HEAP32[$129 >> 2] | 0) == (HEAP32[$128 >> 2] | 0)) break;
    $148 = __Znwm(128) | 0;
    $149 = __ZN6vision28BinaryHierarchicalClusteringILi96EE10nextNodeIdEv($0) | 0;
    __ZN6vision4NodeILi96EEC2EiPKh($148, $149, $2 + ((HEAP32[$127 + 8 >> 2] | 0) * 96 | 0) | 0);
    HEAP32[$6 >> 2] = $148;
    __ZN6vision4NodeILi96EE4leafEb($148, 0);
    $154 = __ZN6vision4NodeILi96EE8childrenEv($1) | 0;
    $155 = $154 + 4 | 0;
    $156 = HEAP32[$155 >> 2] | 0;
    if (($156 | 0) == (HEAP32[$154 + 8 >> 2] | 0)) __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_($154, $6); else {
     HEAP32[$156 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$155 >> 2] = (HEAP32[$155 >> 2] | 0) + 4;
    }
    $164 = HEAP32[$128 >> 2] | 0;
    __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPNS_4NodeILi96EEEPKhiPKii($0, HEAP32[$6 >> 2] | 0, $2, $3, $164, (HEAP32[$129 >> 2] | 0) - $164 >> 2);
    $$sroa$0120$0$in = $$sroa$0120$0;
   }
   $138 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27639) | 0, 27286) | 0, 33528) | 0, 387) | 0, 33535) | 0, 27685) | 0;
   __ZNKSt3__28ios_base6getlocEv($6, $138 + (HEAP32[(HEAP32[$138 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $143 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
   $147 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$143 >> 2] | 0) + 28 >> 2] & 63]($143, 10) | 0;
   __ZNSt3__26localeD2Ev($6);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($138, $147) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($138) | 0;
   _abort();
  } while (0);
  __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEED2Ev($7);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 12) {
  $61 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27438) | 0, 27286) | 0, 33528) | 0, 365) | 0, 33535) | 0, 27481) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $61 + (HEAP32[(HEAP32[$61 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $66 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $70 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$66 >> 2] | 0) + 28 >> 2] & 63]($66, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($61, $70) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($61) | 0;
  _abort();
 } else if ((label | 0) == 14) {
  $77 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27503) | 0, 27286) | 0, 33528) | 0, 366) | 0, 33535) | 0, 27554) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $77 + (HEAP32[(HEAP32[$77 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $82 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $86 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$82 >> 2] | 0) + 28 >> 2] & 63]($82, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($77, $86) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($77) | 0;
  _abort();
 } else if ((label | 0) == 16) {
  $95 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27578) | 0, 27286) | 0, 33528) | 0, 367) | 0, 33535) | 0, 27554) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $95 + (HEAP32[(HEAP32[$95 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $100 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $104 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$100 >> 2] | 0) + 28 >> 2] & 63]($100, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($95, $104) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($95) | 0;
  _abort();
 }
}

function _decode_mcu_AC_refine($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0158 = 0, $$0160 = 0, $$0164 = 0, $$0169 = 0, $$0174 = 0, $$0191 = 0, $$0193198 = 0, $$10 = 0, $$10184 = 0, $$11 = 0, $$11185 = 0, $$1161 = 0, $$1165 = 0, $$1170 = 0, $$1175 = 0, $$1192 = 0, $$1194 = 0, $$12186199 = 0, $$12200 = 0, $$13 = 0, $$13187 = 0, $$14 = 0, $$14188 = 0, $$15 = 0, $$15189 = 0, $$16 = 0, $$16190 = 0, $$2$ph = 0, $$2162202 = 0, $$2166 = 0, $$2171 = 0, $$2176 = 0, $$3 = 0, $$3167201 = 0, $$4 = 0, $$4$ph = 0, $$4168 = 0, $$4173$ph = 0, $$4178$ph = 0, $$5 = 0, $$5179 = 0, $$6 = 0, $$6180 = 0, $$7 = 0, $$7181 = 0, $$8 = 0, $$8182 = 0, $$9 = 0, $$9183 = 0, $10 = 0, $101 = 0, $102 = 0, $11 = 0, $112 = 0, $116 = 0, $122 = 0, $126 = 0, $131 = 0, $139 = 0, $143 = 0, $144 = 0, $155 = 0, $158 = 0, $162 = 0, $2 = 0, $24 = 0, $25 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $38 = 0, $40 = 0, $42 = 0, $43 = 0, $48 = 0, $49 = 0, $5 = 0, $53 = 0, $55 = 0, $61 = 0, $65 = 0, $66 = 0, $7 = 0, $75 = 0, $80 = 0, $89 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $2 = sp + 256 | 0;
 $3 = sp;
 $5 = HEAP32[$0 + 444 >> 2] | 0;
 $7 = HEAP32[$0 + 404 >> 2] | 0;
 $9 = HEAP32[$0 + 412 >> 2] | 0;
 $10 = 1 << $9;
 $11 = -1 << $9;
 if (!(HEAP32[$0 + 276 >> 2] | 0)) label = 4; else if (!(HEAP32[$5 + 40 >> 2] | 0)) if (!(_process_restart_49($0) | 0)) $$0 = 0; else label = 4; else label = 4;
 L4 : do if ((label | 0) == 4) {
  do if (!(HEAP32[$5 + 8 >> 2] | 0)) {
   HEAP32[$2 + 16 >> 2] = $0;
   $24 = $0 + 24 | 0;
   $25 = HEAP32[$24 >> 2] | 0;
   HEAP32[$2 >> 2] = HEAP32[$25 >> 2];
   $29 = $2 + 4 | 0;
   HEAP32[$29 >> 2] = HEAP32[$25 + 4 >> 2];
   $30 = $5 + 12 | 0;
   $31 = HEAP32[$30 >> 2] | 0;
   $32 = $5 + 16 | 0;
   $33 = HEAP32[$32 >> 2] | 0;
   $34 = $5 + 20 | 0;
   $35 = HEAP32[$34 >> 2] | 0;
   $36 = HEAP32[$1 >> 2] | 0;
   $38 = HEAP32[$5 + 60 >> 2] | 0;
   $40 = HEAP32[$0 + 400 >> 2] | 0;
   $42 = $2 + 8 | 0;
   $43 = $2 + 12 | 0;
   L8 : do if (!$35) {
    $$0160 = 0;
    $$0164 = $40;
    $$0169 = $33;
    $$0174 = $31;
    L10 : while (1) {
     if (($$0164 | 0) > ($7 | 0)) {
      $$1194 = 0;
      $$16 = $$0169;
      $$16190 = $$0174;
      label = 56;
      break L8;
     }
     if (($$0169 | 0) < 8) {
      if (!(_jpeg_fill_bit_buffer($2, $$0174, $$0169, 0) | 0)) {
       $$4$ph = $$0160;
       break L8;
      }
      $48 = HEAP32[$42 >> 2] | 0;
      $49 = HEAP32[$43 >> 2] | 0;
      if (($49 | 0) < 8) {
       $$0158 = 1;
       $$2171 = $49;
       $$2176 = $48;
       label = 13;
      } else {
       $$1170 = $49;
       $$1175 = $48;
       label = 11;
      }
     } else {
      $$1170 = $$0169;
      $$1175 = $$0174;
      label = 11;
     }
     if ((label | 0) == 11) {
      label = 0;
      $53 = $$1175 >> $$1170 + -8 & 255;
      $55 = HEAP32[$38 + 144 + ($53 << 2) >> 2] | 0;
      if (!$55) {
       $$0158 = 9;
       $$2171 = $$1170;
       $$2176 = $$1175;
       label = 13;
      } else {
       $$2$ph = HEAPU8[$38 + 1168 + $53 >> 0] | 0;
       $$4173$ph = $$1170 - $55 | 0;
       $$4178$ph = $$1175;
      }
     }
     if ((label | 0) == 13) {
      label = 0;
      $61 = _jpeg_huff_decode($2, $$2176, $$2171, $38, $$0158) | 0;
      if (($61 | 0) < 0) {
       $$4$ph = $$0160;
       break L8;
      }
      $$2$ph = $61;
      $$4173$ph = HEAP32[$43 >> 2] | 0;
      $$4178$ph = HEAP32[$42 >> 2] | 0;
     }
     $65 = $$2$ph >>> 4;
     switch ($$2$ph & 15) {
     case 0:
      {
       if (($65 | 0) == 15) {
        $$3 = 0;
        $$7 = $$4173$ph;
        $$7181 = $$4178$ph;
       } else break L10;
       break;
      }
     case 1:
      {
       label = 17;
       break;
      }
     default:
      {
       $66 = HEAP32[$0 >> 2] | 0;
       HEAP32[$66 + 20 >> 2] = 118;
       FUNCTION_TABLE_vii[HEAP32[$66 + 4 >> 2] & 63]($0, -1);
       label = 17;
      }
     }
     if ((label | 0) == 17) {
      label = 0;
      if (($$4173$ph | 0) < 1) {
       if (!(_jpeg_fill_bit_buffer($2, $$4178$ph, $$4173$ph, 1) | 0)) {
        $$4$ph = $$0160;
        break L8;
       }
       $$5 = HEAP32[$43 >> 2] | 0;
       $$5179 = HEAP32[$42 >> 2] | 0;
      } else {
       $$5 = $$4173$ph;
       $$5179 = $$4178$ph;
      }
      $75 = $$5 + -1 | 0;
      $$3 = (1 << $75 & $$5179 | 0) == 0 ? $11 : $10;
      $$7 = $75;
      $$7181 = $$5179;
     }
     $$0191 = $65;
     $$1165 = $$0164;
     $$8 = $$7;
     $$8182 = $$7181;
     L33 : while (1) {
      $89 = $36 + (HEAP32[2560 + ($$1165 << 2) >> 2] << 1) | 0;
      do if (!(HEAP16[$89 >> 1] | 0)) if (($$0191 | 0) < 1) {
       $$11 = $$8;
       $$11185 = $$8182;
       $$2166 = $$1165;
       break L33;
      } else {
       $$10 = $$8;
       $$10184 = $$8182;
       $$1192 = $$0191 + -1 | 0;
      } else {
       if (($$8 | 0) < 1) {
        if (!(_jpeg_fill_bit_buffer($2, $$8182, $$8, 1) | 0)) {
         $$4$ph = $$0160;
         break L8;
        }
        $$9 = HEAP32[$43 >> 2] | 0;
        $$9183 = HEAP32[$42 >> 2] | 0;
       } else {
        $$9 = $$8;
        $$9183 = $$8182;
       }
       $97 = $$9 + -1 | 0;
       if (!(1 << $97 & $$9183)) {
        $$10 = $97;
        $$10184 = $$9183;
        $$1192 = $$0191;
       } else {
        $101 = HEAP16[$89 >> 1] | 0;
        $102 = $101 << 16 >> 16;
        if (!($10 & $102)) if ($101 << 16 >> 16 > -1) {
         HEAP16[$89 >> 1] = $10 + $102;
         $$10 = $97;
         $$10184 = $$9183;
         $$1192 = $$0191;
         break;
        } else {
         HEAP16[$89 >> 1] = $11 + $102;
         $$10 = $97;
         $$10184 = $$9183;
         $$1192 = $$0191;
         break;
        } else {
         $$10 = $97;
         $$10184 = $$9183;
         $$1192 = $$0191;
        }
       }
      } while (0);
      $112 = $$1165 + 1 | 0;
      if (($$1165 | 0) < ($7 | 0)) {
       $$0191 = $$1192;
       $$1165 = $112;
       $$8 = $$10;
       $$8182 = $$10184;
      } else {
       $$11 = $$10;
       $$11185 = $$10184;
       $$2166 = $112;
       break;
      }
     }
     if (!$$3) $$1161 = $$0160; else {
      $116 = HEAP32[2560 + ($$2166 << 2) >> 2] | 0;
      HEAP16[$36 + ($116 << 1) >> 1] = $$3;
      HEAP32[$3 + ($$0160 << 2) >> 2] = $116;
      $$1161 = $$0160 + 1 | 0;
     }
     $$0160 = $$1161;
     $$0164 = $$2166 + 1 | 0;
     $$0169 = $$11;
     $$0174 = $$11185;
    }
    $80 = 1 << $65;
    if (!$65) {
     $$0193198 = 1;
     $$12186199 = $$4178$ph;
     $$12200 = $$4173$ph;
     $$2162202 = $$0160;
     $$3167201 = $$0164;
     label = 43;
    } else {
     if (($$4173$ph | 0) < ($65 | 0)) {
      if (!(_jpeg_fill_bit_buffer($2, $$4178$ph, $$4173$ph, $65) | 0)) {
       $$4$ph = $$0160;
       break;
      }
      $$6 = HEAP32[$43 >> 2] | 0;
      $$6180 = HEAP32[$42 >> 2] | 0;
     } else {
      $$6 = $$4173$ph;
      $$6180 = $$4178$ph;
     }
     $122 = $$6 - $65 | 0;
     $126 = ($$6180 >> $122 & $80 + -1) + $80 | 0;
     if (!$126) {
      $$1194 = 0;
      $$16 = $122;
      $$16190 = $$6180;
      label = 56;
     } else {
      $$0193198 = $126;
      $$12186199 = $$6180;
      $$12200 = $122;
      $$2162202 = $$0160;
      $$3167201 = $$0164;
      label = 43;
     }
    }
   } else {
    $$0193198 = $35;
    $$12186199 = $31;
    $$12200 = $33;
    $$2162202 = 0;
    $$3167201 = $40;
    label = 43;
   } while (0);
   L58 : do if ((label | 0) == 43) {
    $$13 = $$12200;
    $$13187 = $$12186199;
    $$4168 = $$3167201;
    while (1) {
     if (($$4168 | 0) > ($7 | 0)) break;
     $131 = $36 + (HEAP32[2560 + ($$4168 << 2) >> 2] << 1) | 0;
     do if (!(HEAP16[$131 >> 1] | 0)) {
      $$15 = $$13;
      $$15189 = $$13187;
     } else {
      if (($$13 | 0) < 1) {
       if (!(_jpeg_fill_bit_buffer($2, $$13187, $$13, 1) | 0)) {
        $$4$ph = $$2162202;
        break L58;
       }
       $$14 = HEAP32[$43 >> 2] | 0;
       $$14188 = HEAP32[$42 >> 2] | 0;
      } else {
       $$14 = $$13;
       $$14188 = $$13187;
      }
      $139 = $$14 + -1 | 0;
      if (!(1 << $139 & $$14188)) {
       $$15 = $139;
       $$15189 = $$14188;
      } else {
       $143 = HEAP16[$131 >> 1] | 0;
       $144 = $143 << 16 >> 16;
       if (!($10 & $144)) if ($143 << 16 >> 16 > -1) {
        HEAP16[$131 >> 1] = $10 + $144;
        $$15 = $139;
        $$15189 = $$14188;
        break;
       } else {
        HEAP16[$131 >> 1] = $11 + $144;
        $$15 = $139;
        $$15189 = $$14188;
        break;
       } else {
        $$15 = $139;
        $$15189 = $$14188;
       }
      }
     } while (0);
     $$13 = $$15;
     $$13187 = $$15189;
     $$4168 = $$4168 + 1 | 0;
    }
    $$1194 = $$0193198 + -1 | 0;
    $$16 = $$13;
    $$16190 = $$13187;
    label = 56;
   } while (0);
   if ((label | 0) == 56) {
    $155 = HEAP32[$24 >> 2] | 0;
    HEAP32[$155 >> 2] = HEAP32[$2 >> 2];
    HEAP32[$155 + 4 >> 2] = HEAP32[$29 >> 2];
    HEAP32[$30 >> 2] = $$16190;
    HEAP32[$32 >> 2] = $$16;
    HEAP32[$34 >> 2] = $$1194;
    break;
   }
   $$4 = $$4$ph;
   while (1) {
    if (($$4 | 0) <= 0) {
     $$0 = 0;
     break L4;
    }
    $162 = $$4 + -1 | 0;
    HEAP16[$36 + (HEAP32[$3 + ($162 << 2) >> 2] << 1) >> 1] = 0;
    $$4 = $162;
   }
  } while (0);
  $158 = $5 + 40 | 0;
  HEAP32[$158 >> 2] = (HEAP32[$158 >> 2] | 0) + -1;
  $$0 = 1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i53 = 0, $$0$i$i$i$i68 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i59 = 0, $$0$i$i2$i$i74 = 0, $$0$i$i65 = 0, $$0$pn = 0, $$049 = 0, $$050 = 0, $$3 = 0, $$3$lcssa = 0, $$4 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$ph = 0, $$sroa$047$0$copyload = 0, $10 = 0, $106 = 0, $109 = 0, $11 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $13 = 0, $141 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $165 = 0, $17 = 0, $172 = 0, $181 = 0, $184 = 0, $19 = 0, $196 = 0, $199 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $31 = 0, $33 = 0, $35 = 0, $53 = 0, $59 = 0, $60 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $74 = 0, $75 = 0, $78 = 0, $8 = 0, $84 = 0, $9 = 0, $91 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $3);
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 57884) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy1);
 HEAP32[$4 >> 2] = 0;
 $11 = $10 + 8 | 0;
 $$0 = $6;
 $13 = 0;
 L1 : while (1) {
  $15 = HEAP32[$1 >> 2] | 0;
  if (!(($$0 | 0) != ($7 | 0) & ($13 | 0) == 0)) {
   $181 = $15;
   break;
  }
  $17 = $15;
  if (!$15) {
   $150 = 0;
   $213 = 1;
   $70 = $17;
  } else {
   $19 = HEAP32[$15 + 12 >> 2] | 0;
   if (($19 | 0) == (HEAP32[$15 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$15 >> 2] | 0) + 36 >> 2] & 127]($15) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$19 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $150 = 0;
    $213 = 1;
    $70 = 0;
   } else {
    $150 = $15;
    $213 = 0;
    $70 = $17;
   }
  }
  $31 = HEAP32[$2 >> 2] | 0;
  $33 = $31;
  do if (!$31) {
   $$ph = $33;
   label = 15;
  } else {
   $35 = HEAP32[$31 + 12 >> 2] | 0;
   if (($35 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$35 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    $$ph = 0;
    label = 15;
    break;
   } else if ($213) {
    $214 = $31;
    $71 = $33;
    break;
   } else {
    label = 63;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($213) {
    label = 63;
    break;
   } else {
    $214 = 0;
    $71 = $$ph;
   }
  }
  L24 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 63]($10, HEAP8[$$0 >> 0] | 0, 0) | 0) << 24 >> 24 == 37) {
   $53 = $$0 + 1 | 0;
   if (($53 | 0) == ($7 | 0)) {
    label = 63;
    break L1;
   }
   $59 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 63]($10, HEAP8[$53 >> 0] | 0, 0) | 0;
   switch ($59 << 24 >> 24) {
   case 48:
   case 69:
    {
     $60 = $$0 + 2 | 0;
     if (($60 | 0) == ($7 | 0)) {
      label = 63;
      break L1;
     }
     $$049 = $59;
     $$050 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 36 >> 2] & 63]($10, HEAP8[$60 >> 0] | 0, 0) | 0;
     $74 = $53;
     break;
    }
   default:
    {
     $$049 = 0;
     $$050 = $59;
     $74 = $$0;
    }
   }
   $69 = HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$8 >> 2] = $70;
   HEAP32[$9 >> 2] = $71;
   HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$9 >> 2];
   $72 = FUNCTION_TABLE_iiiiiiiii[$69 & 15]($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $$050, $$049) | 0;
   HEAP32[$1 >> 2] = $72;
   $$4 = $74 + 2 | 0;
  } else {
   $75 = HEAP8[$$0 >> 0] | 0;
   if ($75 << 24 >> 24 > -1) {
    $78 = HEAP32[$11 >> 2] | 0;
    if (HEAP16[$78 + ($75 << 24 >> 24 << 1) >> 1] & 8192) {
     $$0$pn = $$0;
     while (1) {
      $$3 = $$0$pn + 1 | 0;
      if (($$3 | 0) == ($7 | 0)) {
       $$3$lcssa = $7;
       break;
      }
      $84 = HEAP8[$$3 >> 0] | 0;
      if ($84 << 24 >> 24 <= -1) {
       $$3$lcssa = $$3;
       break;
      }
      if (!(HEAP16[$78 + ($84 << 24 >> 24 << 1) >> 1] & 8192)) {
       $$3$lcssa = $$3;
       break;
      } else $$0$pn = $$3;
     }
     $106 = $214;
     $91 = $150;
     while (1) {
      if (!$91) {
       $122 = 0;
       $215 = 1;
      } else {
       $94 = HEAP32[$91 + 12 >> 2] | 0;
       if (($94 | 0) == (HEAP32[$91 + 16 >> 2] | 0)) $$0$i$i$i$i53 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 36 >> 2] & 127]($91) | 0; else $$0$i$i$i$i53 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$94 >> 0] | 0) | 0;
       if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i53, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
        HEAP32[$1 >> 2] = 0;
        $122 = 0;
        $215 = 1;
       } else {
        $122 = $91;
        $215 = 0;
       }
      }
      do if (!$106) label = 42; else {
       $109 = HEAP32[$106 + 12 >> 2] | 0;
       if (($109 | 0) == (HEAP32[$106 + 16 >> 2] | 0)) $$0$i$i2$i$i59 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$106 >> 2] | 0) + 36 >> 2] & 127]($106) | 0; else $$0$i$i2$i$i59 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$109 >> 0] | 0) | 0;
       if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i59, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
        HEAP32[$2 >> 2] = 0;
        label = 42;
        break;
       } else if ($215) {
        $216 = $106;
        break;
       } else {
        $$4 = $$3$lcssa;
        break L24;
       }
      } while (0);
      if ((label | 0) == 42) {
       label = 0;
       if ($215) {
        $$4 = $$3$lcssa;
        break L24;
       } else $216 = 0;
      }
      $121 = $122 + 12 | 0;
      $123 = HEAP32[$121 >> 2] | 0;
      $124 = $122 + 16 | 0;
      if (($123 | 0) == (HEAP32[$124 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$122 >> 2] | 0) + 36 >> 2] & 127]($122) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$123 >> 0] | 0) | 0;
      if (($$0$i$i & 255) << 24 >> 24 <= -1) {
       $$4 = $$3$lcssa;
       break L24;
      }
      if (!(HEAP16[(HEAP32[$11 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
       $$4 = $$3$lcssa;
       break L24;
      }
      $141 = HEAP32[$121 >> 2] | 0;
      if (($141 | 0) == (HEAP32[$124 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$122 >> 2] | 0) + 40 >> 2] & 127]($122) | 0; else {
       HEAP32[$121 >> 2] = $141 + 1;
       __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$141 >> 0] | 0) | 0;
      }
      $106 = $216;
      $91 = $122;
     }
    }
   }
   $149 = $150 + 12 | 0;
   $151 = HEAP32[$149 >> 2] | 0;
   $152 = $150 + 16 | 0;
   if (($151 | 0) == (HEAP32[$152 >> 2] | 0)) $$0$i$i65 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$150 >> 2] | 0) + 36 >> 2] & 127]($150) | 0; else $$0$i$i65 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$151 >> 0] | 0) | 0;
   $165 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, $$0$i$i65 & 255) | 0;
   if ($165 << 24 >> 24 != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, HEAP8[$$0 >> 0] | 0) | 0) << 24 >> 24) {
    HEAP32[$4 >> 2] = 4;
    $$4 = $$0;
    break;
   }
   $172 = HEAP32[$149 >> 2] | 0;
   if (($172 | 0) == (HEAP32[$152 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$150 >> 2] | 0) + 40 >> 2] & 127]($150) | 0; else {
    HEAP32[$149 >> 2] = $172 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$172 >> 0] | 0) | 0;
   }
   $$4 = $$0 + 1 | 0;
  } while (0);
  $$0 = $$4;
  $13 = HEAP32[$4 >> 2] | 0;
 }
 if ((label | 0) == 63) {
  HEAP32[$4 >> 2] = 4;
  $181 = $150;
 }
 if (!$181) {
  $$sroa$047$0$copyload = 0;
  $217 = 1;
 } else {
  $184 = HEAP32[$181 + 12 >> 2] | 0;
  if (($184 | 0) == (HEAP32[$181 + 16 >> 2] | 0)) $$0$i$i$i$i68 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$181 >> 2] | 0) + 36 >> 2] & 127]($181) | 0; else $$0$i$i$i$i68 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$184 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i68, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $$sroa$047$0$copyload = 0;
   $217 = 1;
  } else {
   $$sroa$047$0$copyload = $181;
   $217 = 0;
  }
 }
 $196 = HEAP32[$2 >> 2] | 0;
 do if (!$196) label = 76; else {
  $199 = HEAP32[$196 + 12 >> 2] | 0;
  if (($199 | 0) == (HEAP32[$196 + 16 >> 2] | 0)) $$0$i$i2$i$i74 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$196 >> 2] | 0) + 36 >> 2] & 127]($196) | 0; else $$0$i$i2$i$i74 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$199 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i74, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 76;
   break;
  } else if ($217) break; else {
   label = 78;
   break;
  }
 } while (0);
 if ((label | 0) == 76) if ($217) label = 78;
 if ((label | 0) == 78) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 STACKTOP = sp;
 return $$sroa$047$0$copyload | 0;
}

function __ZNSt3__211__money_getIwE13__gather_infoEbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_SJ_Ri($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i39 = 0, $$0$i$i$i42 = 0, $$0$i$i$i45 = 0, $$0$i$i$i49 = 0, $$0$i$i$i53 = 0, $$0$i$i$i59 = 0, $$0$i$i$i63 = 0, $$pre$phi$i$i57Z2D = 0, $$pre$phi$i$iZ2D = 0, $10 = 0, $102 = 0, $106 = 0, $11 = 0, $110 = 0, $113 = 0, $12 = 0, $121 = 0, $124 = 0, $16 = 0, $21 = 0, $24 = 0, $32 = 0, $35 = 0, $42 = 0, $46 = 0, $50 = 0, $53 = 0, $61 = 0, $64 = 0, $72 = 0, $76 = 0, $81 = 0, $84 = 0, $92 = 0, $95 = 0, $storemerge = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $10 = sp + 12 | 0;
 $11 = sp;
 if ($0) {
  $12 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 58132) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 44 >> 2] & 63]($10, $12);
  $16 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $16;
  HEAP8[$2 + 1 >> 0] = $16 >> 8;
  HEAP8[$2 + 2 >> 0] = $16 >> 16;
  HEAP8[$2 + 3 >> 0] = $16 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 32 >> 2] & 63]($11, $12);
  $21 = $8 + 8 + 3 | 0;
  if ((HEAP8[$21 >> 0] | 0) < 0) {
   $24 = HEAP32[$8 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($24, $10);
   HEAP32[$8 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
   HEAP8[$21 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($8, 0);
  HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i = 0;
  while (1) {
   if (($$0$i$i$i | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
   $$0$i$i$i = $$0$i$i$i + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 63]($11, $12);
  $32 = $7 + 8 + 3 | 0;
  if ((HEAP8[$32 >> 0] | 0) < 0) {
   $35 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($35, $10);
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$32 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i39 = 0;
  while (1) {
   if (($$0$i$i$i39 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i39 << 2) >> 2] = 0;
   $$0$i$i$i39 = $$0$i$i$i39 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $42 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($12) | 0;
  HEAP32[$3 >> 2] = $42;
  $46 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 127]($12) | 0;
  HEAP32[$4 >> 2] = $46;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 20 >> 2] & 63]($11, $12);
  $50 = $5 + 11 | 0;
  if ((HEAP8[$50 >> 0] | 0) < 0) {
   $53 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($53, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$iZ2D = $5;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$50 >> 0] = 0;
   $$pre$phi$i$iZ2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($5, 0);
  HEAP32[$$pre$phi$i$iZ2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$iZ2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i42 = 0;
  while (1) {
   if (($$0$i$i$i42 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i42 << 2) >> 2] = 0;
   $$0$i$i$i42 = $$0$i$i$i42 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$12 >> 2] | 0) + 24 >> 2] & 63]($11, $12);
  $61 = $6 + 8 + 3 | 0;
  if ((HEAP8[$61 >> 0] | 0) < 0) {
   $64 = HEAP32[$6 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($64, $10);
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6, $10);
   HEAP8[$61 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($6, 0);
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i45 = 0;
  while (1) {
   if (($$0$i$i$i45 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i45 << 2) >> 2] = 0;
   $$0$i$i$i45 = $$0$i$i$i45 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 36 >> 2] & 127]($12) | 0;
 } else {
  $72 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 58124) | 0;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 44 >> 2] & 63]($10, $72);
  $76 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = $76;
  HEAP8[$2 + 1 >> 0] = $76 >> 8;
  HEAP8[$2 + 2 >> 0] = $76 >> 16;
  HEAP8[$2 + 3 >> 0] = $76 >> 24;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 32 >> 2] & 63]($11, $72);
  $81 = $8 + 8 + 3 | 0;
  if ((HEAP8[$81 >> 0] | 0) < 0) {
   $84 = HEAP32[$8 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($84, $10);
   HEAP32[$8 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($8, $10);
   HEAP8[$81 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($8, 0);
  HEAP32[$8 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i49 = 0;
  while (1) {
   if (($$0$i$i$i49 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i49 << 2) >> 2] = 0;
   $$0$i$i$i49 = $$0$i$i$i49 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 28 >> 2] & 63]($11, $72);
  $92 = $7 + 8 + 3 | 0;
  if ((HEAP8[$92 >> 0] | 0) < 0) {
   $95 = HEAP32[$7 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($95, $10);
   HEAP32[$7 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($7, $10);
   HEAP8[$92 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($7, 0);
  HEAP32[$7 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$7 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$7 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i53 = 0;
  while (1) {
   if (($$0$i$i$i53 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i53 << 2) >> 2] = 0;
   $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $102 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 12 >> 2] & 127]($72) | 0;
  HEAP32[$3 >> 2] = $102;
  $106 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 16 >> 2] & 127]($72) | 0;
  HEAP32[$4 >> 2] = $106;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 20 >> 2] & 63]($11, $72);
  $110 = $5 + 11 | 0;
  if ((HEAP8[$110 >> 0] | 0) < 0) {
   $113 = HEAP32[$5 >> 2] | 0;
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($113, $10);
   HEAP32[$5 + 4 >> 2] = 0;
   $$pre$phi$i$i57Z2D = $5;
  } else {
   HEAP8[$10 >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($5, $10);
   HEAP8[$110 >> 0] = 0;
   $$pre$phi$i$i57Z2D = $5;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($5, 0);
  HEAP32[$$pre$phi$i$i57Z2D >> 2] = HEAP32[$11 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$$pre$phi$i$i57Z2D + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i59 = 0;
  while (1) {
   if (($$0$i$i$i59 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i59 << 2) >> 2] = 0;
   $$0$i$i$i59 = $$0$i$i$i59 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$72 >> 2] | 0) + 24 >> 2] & 63]($11, $72);
  $121 = $6 + 8 + 3 | 0;
  if ((HEAP8[$121 >> 0] | 0) < 0) {
   $124 = HEAP32[$6 >> 2] | 0;
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($124, $10);
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP32[$10 >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6, $10);
   HEAP8[$121 >> 0] = 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($6, 0);
  HEAP32[$6 >> 2] = HEAP32[$11 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
  $$0$i$i$i63 = 0;
  while (1) {
   if (($$0$i$i$i63 | 0) == 3) break;
   HEAP32[$11 + ($$0$i$i$i63 << 2) >> 2] = 0;
   $$0$i$i$i63 = $$0$i$i$i63 + 1 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
  $storemerge = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 36 >> 2] & 127]($72) | 0;
 }
 HEAP32[$9 >> 2] = $storemerge;
 STACKTOP = sp;
 return;
}

function _check_rotation($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0457 = 0.0, $$0458 = 0.0, $$0459 = 0.0, $$0460 = 0.0, $$0461 = 0.0, $$0462 = 0.0, $$0463 = 0.0, $$0464 = 0.0, $$0465 = 0.0, $$0466 = 0.0, $$0467 = 0.0, $$0468 = 0.0, $$0469 = 0.0, $$0470 = 0.0, $$0471 = 0.0, $$0472 = 0.0, $$0473 = 0.0, $$1 = 0, $$10 = 0.0, $$2 = 0.0, $$3 = 0.0, $$5 = 0.0, $$6 = 0.0, $$9 = 0.0, $$pre = 0.0, $$pre$phi15Z2D = 0.0, $$pre$phi17Z2D = 0.0, $$pre$phi19Z2D = 0.0, $$pre$phi21Z2D = 0.0, $$pre$phi23Z2D = 0.0, $$pre$phiZ2D = 0.0, $$pre14 = 0.0, $$pre18 = 0.0, $$pre20 = 0.0, $$sroa$0$0 = 0.0, $$sroa$0$1 = 0.0, $$sroa$0$1$$sroa$62$1 = 0.0, $$sroa$0$2 = 0.0, $$sroa$0333$0 = 0.0, $$sroa$0370$0 = 0.0, $$sroa$18$0 = 0.0, $$sroa$18384$0 = 0.0, $$sroa$33$0 = 0.0, $$sroa$33$1 = 0.0, $$sroa$33$2 = 0.0, $$sroa$33359$0 = 0.0, $$sroa$33397$0 = 0.0, $$sroa$62$0 = 0.0, $$sroa$62$1 = 0.0, $$sroa$62$1$$sroa$33$1 = 0.0, $$sroa$62$2 = 0.0, $1 = 0.0, $10 = 0, $102 = 0, $107 = 0.0, $109 = 0.0, $11 = 0.0, $113 = 0.0, $114 = 0.0, $116 = 0.0, $120 = 0.0, $123 = 0.0, $130 = 0.0, $133 = 0.0, $135 = 0.0, $137 = 0.0, $139 = 0.0, $14 = 0.0, $141 = 0.0, $143 = 0.0, $145 = 0.0, $150 = 0.0, $157 = 0.0, $164 = 0.0, $17 = 0.0, $171 = 0.0, $2 = 0, $20 = 0.0, $26 = 0.0, $28 = 0.0, $29 = 0.0, $3 = 0.0, $30 = 0.0, $35 = 0.0, $4 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0.0, $5 = 0.0, $51 = 0, $56 = 0.0, $58 = 0.0, $6 = 0, $62 = 0.0, $63 = 0.0, $65 = 0.0, $69 = 0.0, $7 = 0.0, $72 = 0.0, $79 = 0.0, $8 = 0, $82 = 0.0, $84 = 0.0, $86 = 0.0, $88 = 0.0, $9 = 0.0, $90 = 0.0, $92 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0;
 $1 = +HEAPF64[$0 >> 3];
 $2 = $0 + 8 | 0;
 $3 = +HEAPF64[$2 >> 3];
 $4 = $0 + 16 | 0;
 $5 = +HEAPF64[$4 >> 3];
 $6 = $0 + 24 | 0;
 $7 = +HEAPF64[$6 >> 3];
 $8 = $0 + 32 | 0;
 $9 = +HEAPF64[$8 >> 3];
 $10 = $0 + 40 | 0;
 $11 = +HEAPF64[$10 >> 3];
 $14 = $3 * $11 - $5 * $9;
 $17 = $5 * $7 - $1 * $11;
 $20 = $1 * $9 - $3 * $7;
 $26 = +Math_sqrt(+($20 * $20 + ($14 * $14 + $17 * $17)));
 do if (!($26 == 0.0)) {
  $28 = $14 / $26;
  $29 = $17 / $26;
  $30 = $20 / $26;
  $35 = $1 * $7 + $3 * $9 + $5 * $11;
  $$0473 = $35 < 0.0 ? -$35 : $35;
  $43 = (+Math_sqrt(+($$0473 + 1.0)) + +Math_sqrt(+(1.0 - $$0473))) * .5;
  $44 = $1 * $29;
  $45 = $3 * $28;
  $46 = $44 - $45;
  if ($46 != 0.0) {
   $$0 = 0;
   $$pre$phi15Z2D = $45;
   $$pre$phi17Z2D = $46;
   $$pre$phiZ2D = $44;
   $$sroa$0$0 = $28;
   $$sroa$0370$0 = $1;
   $$sroa$18384$0 = $3;
   $$sroa$33$0 = $29;
   $$sroa$33397$0 = $5;
   $$sroa$62$0 = $30;
  } else {
   $51 = $1 * $30 - $5 * $28 != 0.0;
   $$2 = $51 ? $5 : $3;
   $$3 = $51 ? $1 : $5;
   $$5 = $51 ? $30 : $29;
   $$6 = $51 ? $28 : $30;
   $$pre = $$3 * $$5;
   $$pre14 = $$2 * $$6;
   $$0 = $51 ? 1 : 2;
   $$pre$phi15Z2D = $$pre14;
   $$pre$phi17Z2D = $$pre - $$pre14;
   $$pre$phiZ2D = $$pre;
   $$sroa$0$0 = $$6;
   $$sroa$0370$0 = $$3;
   $$sroa$18384$0 = $$2;
   $$sroa$33$0 = $$5;
   $$sroa$33397$0 = $51 ? $3 : $1;
   $$sroa$62$0 = $51 ? $29 : $28;
  }
  if (!($$pre$phi17Z2D == 0.0)) {
   $56 = ($$sroa$18384$0 * $$sroa$62$0 - $$sroa$33397$0 * $$sroa$33$0) / $$pre$phi17Z2D;
   $58 = $43 * $$sroa$33$0 / $$pre$phi17Z2D;
   $62 = $$pre$phi15Z2D - $$pre$phiZ2D;
   $63 = ($$sroa$0370$0 * $$sroa$62$0 - $$sroa$33397$0 * $$sroa$0$0) / $62;
   $65 = $43 * $$sroa$0$0 / $62;
   $69 = $56 * $56 + $63 * $63 + 1.0;
   $72 = $56 * $58 + $63 * $65;
   $79 = $72 * $72 - $69 * ($58 * $58 + $65 * $65 + -1.0);
   if (!($79 < 0.0)) {
    $82 = +Math_sqrt(+$79);
    $84 = ($82 - $72) / $69;
    $86 = $58 + $56 * $84;
    $88 = $65 + $63 * $84;
    $90 = (-$72 - $82) / $69;
    $92 = $58 + $56 * $90;
    $94 = $65 + $63 * $90;
    switch ($$0 & 3) {
    case 1:
     {
      $$0467 = $94;
      $$0468 = $90;
      $$0469 = $92;
      $$0470 = $88;
      $$0471 = $84;
      $$0472 = $86;
      $$sroa$0$1 = $$sroa$0$0;
      $$sroa$33$1 = $$sroa$62$0;
      $$sroa$62$1 = $$sroa$33$0;
      break;
     }
    case 2:
     {
      $$0467 = $92;
      $$0468 = $94;
      $$0469 = $90;
      $$0470 = $86;
      $$0471 = $88;
      $$0472 = $84;
      $$sroa$0$1 = $$sroa$62$0;
      $$sroa$33$1 = $$sroa$33$0;
      $$sroa$62$1 = $$sroa$0$0;
      break;
     }
    default:
     {
      $$0467 = $90;
      $$0468 = $94;
      $$0469 = $92;
      $$0470 = $84;
      $$0471 = $88;
      $$0472 = $86;
      $$sroa$0$1 = $$sroa$0$0;
      $$sroa$33$1 = $$sroa$33$0;
      $$sroa$62$1 = $$sroa$62$0;
     }
    }
    $95 = $7 * $$sroa$33$1;
    $96 = $9 * $$sroa$0$1;
    $97 = $95 - $96;
    if ($97 != 0.0) {
     $$1 = 0;
     $$pre$phi19Z2D = $95;
     $$pre$phi21Z2D = $96;
     $$pre$phi23Z2D = $97;
     $$sroa$0$2 = $$sroa$0$1;
     $$sroa$0333$0 = $7;
     $$sroa$18$0 = $9;
     $$sroa$33$2 = $$sroa$33$1;
     $$sroa$33359$0 = $11;
     $$sroa$62$2 = $$sroa$62$1;
    } else {
     $102 = $7 * $$sroa$62$1 - $11 * $$sroa$0$1 != 0.0;
     $$9 = $102 ? $11 : $9;
     $$10 = $102 ? $7 : $11;
     $$sroa$62$1$$sroa$33$1 = $102 ? $$sroa$62$1 : $$sroa$33$1;
     $$sroa$0$1$$sroa$62$1 = $102 ? $$sroa$0$1 : $$sroa$62$1;
     $$pre18 = $$10 * $$sroa$62$1$$sroa$33$1;
     $$pre20 = $$9 * $$sroa$0$1$$sroa$62$1;
     $$1 = $102 ? 1 : 2;
     $$pre$phi19Z2D = $$pre18;
     $$pre$phi21Z2D = $$pre20;
     $$pre$phi23Z2D = $$pre18 - $$pre20;
     $$sroa$0$2 = $$sroa$0$1$$sroa$62$1;
     $$sroa$0333$0 = $$10;
     $$sroa$18$0 = $$9;
     $$sroa$33$2 = $$sroa$62$1$$sroa$33$1;
     $$sroa$33359$0 = $102 ? $9 : $7;
     $$sroa$62$2 = $102 ? $$sroa$33$1 : $$sroa$0$1;
    }
    if (!($$pre$phi23Z2D == 0.0)) {
     $107 = ($$sroa$18$0 * $$sroa$62$2 - $$sroa$33359$0 * $$sroa$33$2) / $$pre$phi23Z2D;
     $109 = $43 * $$sroa$33$2 / $$pre$phi23Z2D;
     $113 = $$pre$phi21Z2D - $$pre$phi19Z2D;
     $114 = ($$sroa$0333$0 * $$sroa$62$2 - $$sroa$33359$0 * $$sroa$0$2) / $113;
     $116 = $43 * $$sroa$0$2 / $113;
     $120 = $107 * $107 + $114 * $114 + 1.0;
     $123 = $107 * $109 + $114 * $116;
     $130 = $123 * $123 - $120 * ($109 * $109 + $116 * $116 + -1.0);
     if (!($130 < 0.0)) {
      $133 = +Math_sqrt(+$130);
      $135 = ($133 - $123) / $120;
      $137 = $109 + $107 * $135;
      $139 = $116 + $114 * $135;
      $141 = (-$123 - $133) / $120;
      $143 = $109 + $107 * $141;
      $145 = $116 + $114 * $141;
      switch ($$1 & 3) {
      case 1:
       {
        $$0461 = $145;
        $$0462 = $141;
        $$0463 = $143;
        $$0464 = $139;
        $$0465 = $135;
        $$0466 = $137;
        break;
       }
      case 2:
       {
        $$0461 = $143;
        $$0462 = $145;
        $$0463 = $141;
        $$0464 = $137;
        $$0465 = $139;
        $$0466 = $135;
        break;
       }
      default:
       {
        $$0461 = $141;
        $$0462 = $145;
        $$0463 = $143;
        $$0464 = $135;
        $$0465 = $139;
        $$0466 = $137;
       }
      }
      $150 = $$0472 * $$0466 + $$0471 * $$0465 + $$0470 * $$0464;
      $$0460 = $150 < 0.0 ? -$150 : $150;
      $157 = $$0472 * $$0463 + $$0471 * $$0462 + $$0470 * $$0461;
      $$0459 = $157 < 0.0 ? -$157 : $157;
      $164 = $$0469 * $$0466 + $$0468 * $$0465 + $$0467 * $$0464;
      $$0458 = $164 < 0.0 ? -$164 : $164;
      $171 = $$0469 * $$0463 + $$0468 * $$0462 + $$0467 * $$0461;
      $$0457 = $171 < 0.0 ? -$171 : $171;
      if ($$0460 < $$0459) if ($$0460 < $$0458) if ($$0460 < $$0457) {
       HEAPF64[$0 >> 3] = $$0472;
       HEAPF64[$2 >> 3] = $$0471;
       HEAPF64[$4 >> 3] = $$0470;
       HEAPF64[$6 >> 3] = $$0466;
       HEAPF64[$8 >> 3] = $$0465;
       HEAPF64[$10 >> 3] = $$0464;
       break;
      } else {
       HEAPF64[$0 >> 3] = $$0469;
       HEAPF64[$2 >> 3] = $$0468;
       HEAPF64[$4 >> 3] = $$0467;
       HEAPF64[$6 >> 3] = $$0463;
       HEAPF64[$8 >> 3] = $$0462;
       HEAPF64[$10 >> 3] = $$0461;
       break;
      } else {
       HEAPF64[$0 >> 3] = $$0469;
       HEAPF64[$2 >> 3] = $$0468;
       HEAPF64[$4 >> 3] = $$0467;
       if ($$0458 < $$0457) {
        HEAPF64[$6 >> 3] = $$0466;
        HEAPF64[$8 >> 3] = $$0465;
        HEAPF64[$10 >> 3] = $$0464;
        break;
       } else {
        HEAPF64[$6 >> 3] = $$0463;
        HEAPF64[$8 >> 3] = $$0462;
        HEAPF64[$10 >> 3] = $$0461;
        break;
       }
      } else if ($$0459 < $$0458) if ($$0459 < $$0457) {
       HEAPF64[$0 >> 3] = $$0472;
       HEAPF64[$2 >> 3] = $$0471;
       HEAPF64[$4 >> 3] = $$0470;
       HEAPF64[$6 >> 3] = $$0463;
       HEAPF64[$8 >> 3] = $$0462;
       HEAPF64[$10 >> 3] = $$0461;
       break;
      } else {
       HEAPF64[$0 >> 3] = $$0469;
       HEAPF64[$2 >> 3] = $$0468;
       HEAPF64[$4 >> 3] = $$0467;
       HEAPF64[$6 >> 3] = $$0463;
       HEAPF64[$8 >> 3] = $$0462;
       HEAPF64[$10 >> 3] = $$0461;
       break;
      } else {
       HEAPF64[$0 >> 3] = $$0469;
       HEAPF64[$2 >> 3] = $$0468;
       HEAPF64[$4 >> 3] = $$0467;
       if ($$0458 < $$0457) {
        HEAPF64[$6 >> 3] = $$0466;
        HEAPF64[$8 >> 3] = $$0465;
        HEAPF64[$10 >> 3] = $$0464;
        break;
       } else {
        HEAPF64[$6 >> 3] = $$0463;
        HEAPF64[$8 >> 3] = $$0462;
        HEAPF64[$10 >> 3] = $$0461;
        break;
       }
      }
     }
    }
   }
  }
 } while (0);
 return;
}

function __ZNK6vision21HoughSimilarityVoting16getBinsFromIndexERiS1_S1_S1_i($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$neg31 = 0, $10 = 0, $104 = 0, $108 = 0, $109 = 0, $116 = 0, $121 = 0, $125 = 0, $13 = 0, $134 = 0, $139 = 0, $143 = 0, $15 = 0, $150 = 0, $155 = 0, $159 = 0, $168 = 0, $173 = 0, $177 = 0, $22 = 0, $27 = 0, $31 = 0, $37 = 0, $39 = 0, $40 = 0, $47 = 0, $52 = 0, $56 = 0, $6 = 0, $64 = 0, $69 = 0, $7 = 0, $73 = 0, $74 = 0, $81 = 0, $86 = 0, $90 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 $7 = $0 + 88 | 0;
 $10 = $0 + 84 | 0;
 $13 = $0 + 52 | 0;
 $15 = ((($5 | 0) % (HEAP32[$7 >> 2] | 0) | 0 | 0) % (HEAP32[$10 >> 2] | 0) | 0 | 0) % (HEAP32[$13 >> 2] | 0) | 0;
 HEAP32[$1 >> 2] = $15;
 $22 = ((($5 - $15 | 0) % (HEAP32[$7 >> 2] | 0) | 0 | 0) % (HEAP32[$10 >> 2] | 0) | 0 | 0) / (HEAP32[$13 >> 2] | 0) | 0;
 HEAP32[$2 >> 2] = $22;
 $27 = $5 - (HEAP32[$1 >> 2] | 0) - (Math_imul(HEAP32[$13 >> 2] | 0, $22) | 0) | 0;
 $31 = (($27 | 0) % (HEAP32[$7 >> 2] | 0) | 0 | 0) / (HEAP32[$10 >> 2] | 0) | 0;
 HEAP32[$3 >> 2] = $31;
 $$neg31 = Math_imul(HEAP32[$13 >> 2] | 0, HEAP32[$2 >> 2] | 0) | 0;
 $37 = $5 - (HEAP32[$1 >> 2] | 0) - ((Math_imul(HEAP32[$10 >> 2] | 0, $31) | 0) + $$neg31) | 0;
 $39 = ($37 | 0) / (HEAP32[$7 >> 2] | 0) | 0;
 HEAP32[$4 >> 2] = $39;
 $40 = HEAP32[$1 >> 2] | 0;
 if (($40 | 0) <= -1) {
  $47 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30928) | 0, 30431) | 0, 33528) | 0, 190) | 0, 33535) | 0, 30961) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $47 + (HEAP32[(HEAP32[$47 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $52 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $56 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$52 >> 2] | 0) + 28 >> 2] & 63]($52, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($47, $56) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($47) | 0;
  _abort();
 }
 if (($40 | 0) >= (HEAP32[$13 >> 2] | 0)) {
  $64 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30979) | 0, 30431) | 0, 33528) | 0, 191) | 0, 33535) | 0, 30961) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $64 + (HEAP32[(HEAP32[$64 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $69 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $73 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$69 >> 2] | 0) + 28 >> 2] & 63]($69, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($64, $73) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($64) | 0;
  _abort();
 }
 $74 = HEAP32[$2 >> 2] | 0;
 if (($74 | 0) <= -1) {
  $81 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31019) | 0, 30431) | 0, 33528) | 0, 192) | 0, 33535) | 0, 31052) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $81 + (HEAP32[(HEAP32[$81 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $86 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $90 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$86 >> 2] | 0) + 28 >> 2] & 63]($86, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($81, $90) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($81) | 0;
  _abort();
 }
 if (($74 | 0) >= (HEAP32[$0 + 56 >> 2] | 0)) {
  $99 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31070) | 0, 30431) | 0, 33528) | 0, 193) | 0, 33535) | 0, 31052) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $99 + (HEAP32[(HEAP32[$99 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $104 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $108 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$104 >> 2] | 0) + 28 >> 2] & 63]($104, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($99, $108) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($99) | 0;
  _abort();
 }
 $109 = HEAP32[$3 >> 2] | 0;
 if (($109 | 0) <= -1) {
  $116 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31110) | 0, 30431) | 0, 33528) | 0, 194) | 0, 33535) | 0, 31147) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $116 + (HEAP32[(HEAP32[$116 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $121 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $125 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$121 >> 2] | 0) + 28 >> 2] & 63]($121, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($116, $125) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($116) | 0;
  _abort();
 }
 if (($109 | 0) >= (HEAP32[$0 + 60 >> 2] | 0)) {
  $134 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31169) | 0, 30431) | 0, 33528) | 0, 195) | 0, 33535) | 0, 31147) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $134 + (HEAP32[(HEAP32[$134 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $139 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $143 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$139 >> 2] | 0) + 28 >> 2] & 63]($139, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($134, $143) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($134) | 0;
  _abort();
 }
 if (($39 | 0) <= -1) {
  $150 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31217) | 0, 30431) | 0, 33528) | 0, 196) | 0, 33535) | 0, 31254) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $150 + (HEAP32[(HEAP32[$150 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $155 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $159 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$155 >> 2] | 0) + 28 >> 2] & 63]($155, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($150, $159) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($150) | 0;
  _abort();
 }
 if (($39 | 0) < (HEAP32[$0 + 64 >> 2] | 0)) {
  STACKTOP = sp;
  return;
 } else {
  $168 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31276) | 0, 30431) | 0, 33528) | 0, 197) | 0, 33535) | 0, 31254) | 0;
  __ZNKSt3__28ios_base6getlocEv($6, $168 + (HEAP32[(HEAP32[$168 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $173 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
  $177 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$173 >> 2] | 0) + 28 >> 2] & 63]($173, 10) | 0;
  __ZNSt3__26localeD2Ev($6);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($168, $177) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($168) | 0;
  _abort();
 }
}

function __ZN6vision38ComputeSubpixelHessianCoarseOctavePairEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $10 = 0, $101 = 0, $106 = 0, $11 = 0, $110 = 0, $112 = 0, $12 = 0, $120 = 0, $125 = 0, $129 = 0, $13 = 0, $131 = 0, $133 = 0, $135 = 0, $137 = 0, $14 = 0, $142 = 0.0, $143 = 0.0, $149 = 0.0, $153 = 0.0, $156 = 0.0, $160 = 0.0, $165 = 0.0, $169 = 0.0, $171 = 0.0, $175 = 0.0, $179 = 0.0, $181 = 0, $24 = 0, $29 = 0, $33 = 0, $34 = 0, $36 = 0, $44 = 0, $49 = 0, $53 = 0, $55 = 0, $63 = 0, $68 = 0, $7 = 0, $72 = 0, $74 = 0, $8 = 0, $82 = 0, $87 = 0, $9 = 0, $91 = 0, $93 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $7 = sp + 28 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 20 | 0;
 $10 = sp + 16 | 0;
 $11 = sp + 12 | 0;
 $12 = sp + 8 | 0;
 $13 = sp + 4 | 0;
 $14 = sp;
 if (($5 | 0) > 0) if (($5 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv($3) | 0) >>> 0) {
  $34 = $6 + -1 | 0;
  if (($6 | 0) > 0) {
   $36 = $6 + 1 | 0;
   if ($36 >>> 0 < (__ZNK6vision5Image6heightEv($3) | 0) >>> 0) {
    $55 = (__ZNK6vision5Image5widthEv($2) | 0) >>> 1;
    if (($55 | 0) != (__ZNK6vision5Image5widthEv($3) | 0)) {
     $63 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22973) | 0, 22444) | 0, 33528) | 0, 361) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $63 + (HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $68 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $72 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$68 >> 2] | 0) + 28 >> 2] & 63]($68, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($63, $72) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($63) | 0;
     _abort();
    }
    $74 = (__ZNK6vision5Image5widthEv($2) | 0) >>> 1;
    if (($74 | 0) != (__ZNK6vision5Image5widthEv($4) | 0)) {
     $82 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23060) | 0, 22444) | 0, 33528) | 0, 362) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $82 + (HEAP32[(HEAP32[$82 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $87 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $91 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$87 >> 2] | 0) + 28 >> 2] & 63]($87, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($82, $91) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($82) | 0;
     _abort();
    }
    $93 = (__ZNK6vision5Image6heightEv($2) | 0) >>> 1;
    if (($93 | 0) != (__ZNK6vision5Image6heightEv($3) | 0)) {
     $101 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23117) | 0, 22444) | 0, 33528) | 0, 363) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $101 + (HEAP32[(HEAP32[$101 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $106 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $110 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$106 >> 2] | 0) + 28 >> 2] & 63]($106, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($101, $110) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($101) | 0;
     _abort();
    }
    $112 = (__ZNK6vision5Image6heightEv($2) | 0) >>> 1;
    if (($112 | 0) == (__ZNK6vision5Image6heightEv($4) | 0)) {
     $131 = (__ZNK6vision5Image3getIfEEPKT_m($3, $6) | 0) + ($5 << 2) | 0;
     $133 = (__ZNK6vision5Image3getIfEEPKT_m($4, $34) | 0) + ($5 << 2) | 0;
     $135 = (__ZNK6vision5Image3getIfEEPKT_m($4, $6) | 0) + ($5 << 2) | 0;
     $137 = (__ZNK6vision5Image3getIfEEPKT_m($4, $36) | 0) + ($5 << 2) | 0;
     __ZN6vision23bilinear_upsample_pointERfS0_ffi($8, $9, +($5 | 0), +($6 | 0), 1);
     __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii($10, $11, $12, $13, $14, $3, $5, $6);
     $142 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($2, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2]);
     $143 = +HEAPF32[$135 >> 2];
     $149 = $143 + ($142 - +HEAPF32[$131 >> 2] * 2.0);
     $153 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($2, +HEAPF32[$8 >> 2] + -2.0, +HEAPF32[$9 >> 2]);
     $156 = $153 + +HEAPF32[$135 + 4 >> 2];
     $160 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($2, +HEAPF32[$8 >> 2] + 2.0, +HEAPF32[$9 >> 2]);
     $165 = ($156 - ($160 + +HEAPF32[$135 + -4 >> 2])) * .25;
     $169 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($2, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2] + -2.0);
     $171 = $169 + +HEAPF32[$137 >> 2];
     $175 = +__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($2, +HEAPF32[$8 >> 2], +HEAPF32[$9 >> 2] + 2.0);
     $179 = ($171 - ($175 + +HEAPF32[$133 >> 2])) * .25;
     HEAP32[$0 >> 2] = HEAP32[$12 >> 2];
     $181 = HEAP32[$14 >> 2] | 0;
     HEAP32[$0 + 4 >> 2] = $181;
     HEAPF32[$0 + 8 >> 2] = $165;
     HEAP32[$0 + 12 >> 2] = $181;
     HEAP32[$0 + 16 >> 2] = HEAP32[$13 >> 2];
     HEAPF32[$0 + 20 >> 2] = $179;
     HEAPF32[$0 + 24 >> 2] = $165;
     HEAPF32[$0 + 28 >> 2] = $179;
     HEAPF32[$0 + 32 >> 2] = $149;
     HEAPF32[$1 >> 2] = -+HEAPF32[$10 >> 2];
     HEAPF32[$1 + 4 >> 2] = -+HEAPF32[$11 >> 2];
     HEAPF32[$1 + 8 >> 2] = -(($143 - $142) * .5);
     STACKTOP = sp;
     return;
    } else {
     $120 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 23176) | 0, 22444) | 0, 33528) | 0, 364) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $120 + (HEAP32[(HEAP32[$120 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $125 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $129 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$125 >> 2] | 0) + 28 >> 2] & 63]($125, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($120, $129) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($120) | 0;
     _abort();
    }
   }
  }
  $44 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22898) | 0, 22444) | 0, 33528) | 0, 360) | 0, 33535) | 0, 22957) | 0;
  __ZNKSt3__28ios_base6getlocEv($7, $44 + (HEAP32[(HEAP32[$44 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $49 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
  $53 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$49 >> 2] | 0) + 28 >> 2] & 63]($49, 10) | 0;
  __ZNSt3__26localeD2Ev($7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($44, $53) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($44) | 0;
  _abort();
 }
 $24 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22824) | 0, 22444) | 0, 33528) | 0, 359) | 0, 33535) | 0, 22882) | 0;
 __ZNKSt3__28ios_base6getlocEv($7, $24 + (HEAP32[(HEAP32[$24 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $29 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
 $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$29 >> 2] | 0) + 28 >> 2] & 63]($29, 10) | 0;
 __ZNSt3__26localeD2Ev($7);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($24, $33) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($24) | 0;
 _abort();
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_vector_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i131 = 0, $$0$i$i$i135 = 0, $$0$i$i$i139 = 0, $$0$i$i$i144 = 0, $$0$i$i$idx$i = 0, $$2103 = 0, $$899$ph = 0, $$9 = 0, $104 = 0, $105 = 0, $16 = 0, $17 = 0, $19 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $33 = 0, $4 = 0, $45 = 0, $46 = 0, $5 = 0, $53 = 0, $6 = 0, $60 = 0, $61 = 0, $70 = 0, $73 = 0, $74 = 0, $77 = 0, $80 = 0, $84 = 0, $90 = 0, $92 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 40 | 0;
 $4 = sp + 12 | 0;
 $5 = sp;
 $6 = sp + 24 | 0;
 L1 : do if (($1 - $0 | 0) > 3) if ((HEAP8[$0 >> 0] | 0) == 68) if ((HEAP8[$0 + 1 >> 0] | 0) == 118) {
  $16 = $0 + 2 | 0;
  $17 = HEAP8[$16 >> 0] | 0;
  if (($17 + -49 & 255) < 9) {
   $19 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($16, $1) | 0;
   if (($19 | 0) == ($1 | 0)) {
    $$9 = $0;
    break;
   }
   if ((HEAP8[$19 >> 0] | 0) != 95) {
    $$9 = $0;
    break;
   }
   $25 = $19 - $16 | 0;
   $26 = $19 + 1 | 0;
   if (($26 | 0) == ($1 | 0)) {
    $$9 = $0;
    break;
   }
   if ((HEAP8[$26 >> 0] | 0) != 112) {
    $30 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($26, $1, $2) | 0;
    if (($30 | 0) == ($26 | 0)) {
     $$9 = $0;
     break;
    }
    $33 = $2 + 4 | 0;
    if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$33 >> 2] | 0)) {
     $$9 = $0;
     break;
    };
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($5, $16, $25);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($5, 0, 49669) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 49678) | 0;
    HEAP32[$3 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$3 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i131 = 0;
    while (1) {
     if (($$0$i$i$i131 | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i131 << 2) >> 2] = 0;
     $$0$i$i$i131 = $$0$i$i$i131 + 1 | 0;
    }
    $45 = HEAP8[$3 + 11 >> 0] | 0;
    $46 = $45 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$33 >> 2] | 0) + -24 | 0, $46 ? HEAP32[$3 >> 2] | 0 : $3, $46 ? HEAP32[$3 + 4 >> 2] | 0 : $45 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$9 = $30;
    break;
   }
   $53 = $19 + 2 | 0;
   HEAP32[$5 >> 2] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   HEAP32[$5 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($5, $16, $25);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($5, 0, 49680) | 0;
   HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   $$0$i$i$i135 = 0;
   while (1) {
    if (($$0$i$i$i135 | 0) == 3) break;
    HEAP32[$5 + ($$0$i$i$i135 << 2) >> 2] = 0;
    $$0$i$i$i135 = $$0$i$i$i135 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 49678) | 0;
   HEAP32[$6 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$6 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$6 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   $$0$i$i$i139 = 0;
   while (1) {
    if (($$0$i$i$i139 | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i$i139 << 2) >> 2] = 0;
    $$0$i$i$i139 = $$0$i$i$i139 + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $6);
   $60 = $2 + 4 | 0;
   $61 = HEAP32[$60 >> 2] | 0;
   if ($61 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($61, $3);
    HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   $$9 = $53;
   break;
  };
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  $$0$i$i = 0;
  while (1) {
   if (($$0$i$i | 0) == 3) break;
   HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
   $$0$i$i = $$0$i$i + 1 | 0;
  }
  if ($17 << 24 >> 24 == 95) {
   $$2103 = $16;
   label = 44;
  } else {
   $70 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
   if (($70 | 0) == ($16 | 0)) {
    $$2103 = $16;
    label = 44;
   } else {
    $73 = $2 + 4 | 0;
    $74 = HEAP32[$73 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) != ($74 | 0)) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $74 + -24 | 0);
     $77 = $4 + 11 | 0;
     if ((HEAP8[$77 >> 0] | 0) < 0) {
      $80 = HEAP32[$4 >> 2] | 0;
      HEAP8[$3 >> 0] = 0;
      __ZNSt3__211char_traitsIcE6assignERcRKc($80, $3);
      HEAP32[$4 + 4 >> 2] = 0;
     } else {
      HEAP8[$3 >> 0] = 0;
      __ZNSt3__211char_traitsIcE6assignERcRKc($4, $3);
      HEAP8[$77 >> 0] = 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($4);
     HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     $$0$i$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i$i | 0) == 3) break;
      HEAP32[$5 + ($$0$i$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     $84 = HEAP32[$73 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($84 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$73 >> 2] = $84 + -24;
     $$2103 = $70;
     label = 44;
    }
   }
  }
  do if ((label | 0) == 44) {
   if (($$2103 | 0) == ($1 | 0)) $$899$ph = $0; else if ((HEAP8[$$2103 >> 0] | 0) == 95) {
    $90 = $$2103 + 1 | 0;
    if (($90 | 0) == ($1 | 0)) $$899$ph = $0; else {
     $92 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($90, $1, $2) | 0;
     if (($92 | 0) == ($90 | 0)) $$899$ph = $0; else {
      $95 = $2 + 4 | 0;
      if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$95 >> 2] | 0)) break;
      __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($5, 49669, $4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 49678) | 0;
      HEAP32[$3 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$3 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$3 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i144 = 0;
      while (1) {
       if (($$0$i$i$i144 | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i144 << 2) >> 2] = 0;
       $$0$i$i$i144 = $$0$i$i$i144 + 1 | 0;
      }
      $104 = HEAP8[$3 + 11 >> 0] | 0;
      $105 = $104 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$95 >> 2] | 0) + -24 | 0, $105 ? HEAP32[$3 >> 2] | 0 : $3, $105 ? HEAP32[$3 + 4 >> 2] | 0 : $104 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $$899$ph = $92;
     }
    }
   } else $$899$ph = $0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   $$9 = $$899$ph;
   break L1;
  } while (0);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
  $$9 = $0;
 } else $$9 = $0; else $$9 = $0; else $$9 = $0; while (0);
 STACKTOP = sp;
 return $$9 | 0;
}

function _hexfloat($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$be = 0, $$0$ph = 0, $$0133 = 0, $$0143 = 0, $$0151 = 0, $$0154 = 0.0, $$0155 = 0.0, $$0158 = 0.0, $$0163 = 0, $$0169 = 0.0, $$0170 = 0, $$0170173 = 0, $$0170174 = 0, $$1149 = 0, $$1149$ph = 0, $$1152 = 0, $$1156 = 0.0, $$1159 = 0.0, $$1164 = 0, $$2150 = 0, $$2153 = 0, $$2157 = 0.0, $$2160 = 0.0, $$2165 = 0, $$3 = 0, $$3$be = 0, $$3$lcssa = 0, $$3$ph = 0, $$3146 = 0, $$3146$ph = 0, $$3161$lcssa = 0.0, $$3161181 = 0.0, $$3166$lcssa = 0, $$3166185 = 0, $$4147 = 0, $$4162 = 0.0, $$4167$lcssa = 0, $$4167180 = 0, $$5168 = 0, $$pre = 0, $$pre$phi204Z2D = 0.0, $105 = 0, $106 = 0, $107 = 0, $117 = 0, $118 = 0, $131 = 0, $133 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $14 = 0, $142 = 0, $144 = 0, $150 = 0, $154 = 0, $156 = 0, $162 = 0, $167 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $177 = 0, $180 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $194 = 0.0, $195 = 0, $208 = 0.0, $21 = 0, $210 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $28 = 0, $30 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $43 = 0, $47 = 0, $5 = 0, $51 = 0, $53 = 0, $6 = 0, $66 = 0.0, $7 = 0, $73 = 0, $75 = 0, $84 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond172 = 0, label = 0, $106$looptemp = 0, $107$looptemp = 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = $0 + 104 | 0;
 if ($6 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
  HEAP32[$5 >> 2] = $6 + 1;
  $$0$ph = HEAPU8[$6 >> 0] | 0;
 } else $$0$ph = ___shgetc($0) | 0;
 $$0 = $$0$ph;
 $$0143 = 0;
 L5 : while (1) {
  switch ($$0 | 0) {
  case 46:
   {
    label = 10;
    break L5;
    break;
   }
  case 48:
   break;
  default:
   {
    $$1149$ph = 0;
    $$3$ph = $$0;
    $$3146$ph = $$0143;
    $212 = 0;
    $213 = 0;
    break L5;
   }
  }
  $14 = HEAP32[$5 >> 2] | 0;
  if ($14 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
   HEAP32[$5 >> 2] = $14 + 1;
   $$0$be = HEAPU8[$14 >> 0] | 0;
  } else $$0$be = ___shgetc($0) | 0;
  $$0 = $$0$be;
  $$0143 = 1;
 }
 if ((label | 0) == 10) {
  $21 = HEAP32[$5 >> 2] | 0;
  if ($21 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
   HEAP32[$5 >> 2] = $21 + 1;
   $28 = HEAPU8[$21 >> 0] | 0;
  } else $28 = ___shgetc($0) | 0;
  if (($28 | 0) == 48) {
   $37 = 0;
   $38 = 0;
   while (1) {
    $30 = HEAP32[$5 >> 2] | 0;
    if ($30 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
     HEAP32[$5 >> 2] = $30 + 1;
     $41 = HEAPU8[$30 >> 0] | 0;
    } else $41 = ___shgetc($0) | 0;
    $39 = _i64Add($37 | 0, $38 | 0, -1, -1) | 0;
    $40 = getTempRet0() | 0;
    if (($41 | 0) == 48) {
     $37 = $39;
     $38 = $40;
    } else {
     $$1149$ph = 1;
     $$3$ph = $41;
     $$3146$ph = 1;
     $212 = $39;
     $213 = $40;
     break;
    }
   }
  } else {
   $$1149$ph = 1;
   $$3$ph = $28;
   $$3146$ph = $$0143;
   $212 = 0;
   $213 = 0;
  }
 }
 $$0151 = 0;
 $$0155 = 1.0;
 $$0158 = 0.0;
 $$0163 = 0;
 $$1149 = $$1149$ph;
 $$3 = $$3$ph;
 $$3146 = $$3146$ph;
 $51 = 0;
 $53 = 0;
 $96 = $212;
 $98 = $213;
 while (1) {
  $43 = $$3 + -48 | 0;
  $$pre = $$3 | 32;
  if ($43 >>> 0 < 10) label = 24; else {
   $47 = ($$3 | 0) == 46;
   if (!($47 | ($$pre + -97 | 0) >>> 0 < 6)) {
    $$3$lcssa = $$3;
    break;
   }
   if ($47) if (!$$1149) {
    $$2150 = 1;
    $$2153 = $$0151;
    $$2157 = $$0155;
    $$2160 = $$0158;
    $$2165 = $$0163;
    $$4147 = $$3146;
    $214 = $53;
    $215 = $51;
    $216 = $53;
    $217 = $51;
   } else {
    $$3$lcssa = 46;
    break;
   } else label = 24;
  }
  if ((label | 0) == 24) {
   label = 0;
   $$0133 = ($$3 | 0) > 57 ? $$pre + -87 | 0 : $43;
   do if (($51 | 0) < 0 | ($51 | 0) == 0 & $53 >>> 0 < 8) {
    $$1152 = $$0151;
    $$1156 = $$0155;
    $$1159 = $$0158;
    $$1164 = $$0133 + ($$0163 << 4) | 0;
   } else if (($51 | 0) < 0 | ($51 | 0) == 0 & $53 >>> 0 < 14) {
    $66 = $$0155 * .0625;
    $$1152 = $$0151;
    $$1156 = $66;
    $$1159 = $$0158 + $66 * +($$0133 | 0);
    $$1164 = $$0163;
    break;
   } else {
    $or$cond = ($$0151 | 0) != 0 | ($$0133 | 0) == 0;
    $$1152 = $or$cond ? $$0151 : 1;
    $$1156 = $$0155;
    $$1159 = $or$cond ? $$0158 : $$0158 + $$0155 * .5;
    $$1164 = $$0163;
    break;
   } while (0);
   $73 = _i64Add($53 | 0, $51 | 0, 1, 0) | 0;
   $$2150 = $$1149;
   $$2153 = $$1152;
   $$2157 = $$1156;
   $$2160 = $$1159;
   $$2165 = $$1164;
   $$4147 = 1;
   $214 = $96;
   $215 = $98;
   $216 = $73;
   $217 = getTempRet0() | 0;
  }
  $75 = HEAP32[$5 >> 2] | 0;
  if ($75 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
   HEAP32[$5 >> 2] = $75 + 1;
   $$3$be = HEAPU8[$75 >> 0] | 0;
  } else $$3$be = ___shgetc($0) | 0;
  $$0151 = $$2153;
  $$0155 = $$2157;
  $$0158 = $$2160;
  $$0163 = $$2165;
  $$1149 = $$2150;
  $$3 = $$3$be;
  $$3146 = $$4147;
  $51 = $217;
  $53 = $216;
  $96 = $214;
  $98 = $215;
 }
 do if (!$$3146) {
  $84 = (HEAP32[$7 >> 2] | 0) == 0;
  if (!$84) HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
  if (!$4) ___shlim($0, 0, 0); else if (!$84) {
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
   if (!(($$1149 | 0) == 0 | $84)) HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
  }
  $$0169 = +($3 | 0) * 0.0;
 } else {
  $95 = ($$1149 | 0) == 0;
  $97 = $95 ? $53 : $96;
  $99 = $95 ? $51 : $98;
  if (($51 | 0) < 0 | ($51 | 0) == 0 & $53 >>> 0 < 8) {
   $$3166185 = $$0163;
   $106 = $53;
   $107 = $51;
   while (1) {
    $105 = $$3166185 << 4;
    $106$looptemp = $106;
    $106 = _i64Add($106 | 0, $107 | 0, 1, 0) | 0;
    $107$looptemp = $107;
    $107 = getTempRet0() | 0;
    if (!(($107$looptemp | 0) < 0 | ($107$looptemp | 0) == 0 & $106$looptemp >>> 0 < 7)) {
     $$3166$lcssa = $105;
     break;
    } else $$3166185 = $105;
   }
  } else $$3166$lcssa = $$0163;
  if (($$3$lcssa | 32 | 0) == 112) {
   $117 = _scanexp($0, $4) | 0;
   $118 = getTempRet0() | 0;
   if (($117 | 0) == 0 & ($118 | 0) == -2147483648) {
    if (!$4) {
     ___shlim($0, 0, 0);
     $$0169 = 0.0;
     break;
    }
    if (!(HEAP32[$7 >> 2] | 0)) {
     $135 = 0;
     $136 = 0;
    } else {
     HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
     $135 = 0;
     $136 = 0;
    }
   } else {
    $135 = $117;
    $136 = $118;
   }
  } else if (!(HEAP32[$7 >> 2] | 0)) {
   $135 = 0;
   $136 = 0;
  } else {
   HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -1;
   $135 = 0;
   $136 = 0;
  }
  $131 = _bitshift64Shl($97 | 0, $99 | 0, 2) | 0;
  $133 = _i64Add($131 | 0, getTempRet0() | 0, -32, -1) | 0;
  $137 = _i64Add($133 | 0, getTempRet0() | 0, $135 | 0, $136 | 0) | 0;
  $138 = getTempRet0() | 0;
  if (!$$3166$lcssa) {
   $$0169 = +($3 | 0) * 0.0;
   break;
  }
  $142 = 0 - $2 | 0;
  $144 = (($142 | 0) < 0) << 31 >> 31;
  if (($138 | 0) > ($144 | 0) | ($138 | 0) == ($144 | 0) & $137 >>> 0 > $142 >>> 0) {
   $150 = ___errno_location() | 0;
   HEAP32[$150 >> 2] = 34;
   $$0169 = +($3 | 0) * 1797693134862315708145274.0e284 * 1797693134862315708145274.0e284;
   break;
  }
  $154 = $2 + -106 | 0;
  $156 = (($154 | 0) < 0) << 31 >> 31;
  if (($138 | 0) < ($156 | 0) | ($138 | 0) == ($156 | 0) & $137 >>> 0 < $154 >>> 0) {
   $162 = ___errno_location() | 0;
   HEAP32[$162 >> 2] = 34;
   $$0169 = +($3 | 0) * 2.2250738585072014e-308 * 2.2250738585072014e-308;
   break;
  }
  if (($$3166$lcssa | 0) > -1) {
   $$3161181 = $$0158;
   $$4167180 = $$3166$lcssa;
   $171 = $137;
   $172 = $138;
   while (1) {
    $167 = !($$3161181 >= .5);
    $$5168 = $$4167180 << 1 | ($167 ^ 1) & 1;
    $$4162 = $$3161181 + ($167 ? $$3161181 : $$3161181 + -1.0);
    $173 = _i64Add($171 | 0, $172 | 0, -1, -1) | 0;
    $174 = getTempRet0() | 0;
    if (($$5168 | 0) > -1) {
     $$3161181 = $$4162;
     $$4167180 = $$5168;
     $171 = $173;
     $172 = $174;
    } else {
     $$3161$lcssa = $$4162;
     $$4167$lcssa = $$5168;
     $182 = $173;
     $183 = $174;
     break;
    }
   }
  } else {
   $$3161$lcssa = $$0158;
   $$4167$lcssa = $$3166$lcssa;
   $182 = $137;
   $183 = $138;
  }
  $177 = (($1 | 0) < 0) << 31 >> 31;
  $180 = _i64Subtract(32, 0, $2 | 0, (($2 | 0) < 0) << 31 >> 31 | 0) | 0;
  $184 = _i64Add($180 | 0, getTempRet0() | 0, $182 | 0, $183 | 0) | 0;
  $185 = getTempRet0() | 0;
  if (($185 | 0) < ($177 | 0) | ($185 | 0) == ($177 | 0) & $184 >>> 0 < $1 >>> 0) if (($184 | 0) > 0) {
   $$0170 = $184;
   label = 65;
  } else {
   $$0170174 = 0;
   $195 = 84;
   label = 67;
  } else {
   $$0170 = $1;
   label = 65;
  }
  if ((label | 0) == 65) if (($$0170 | 0) < 53) {
   $$0170174 = $$0170;
   $195 = 84 - $$0170 | 0;
   label = 67;
  } else {
   $$0154 = 0.0;
   $$0170173 = $$0170;
   $$pre$phi204Z2D = +($3 | 0);
  }
  if ((label | 0) == 67) {
   $194 = +($3 | 0);
   $$0154 = +_copysignl(+_scalbn(1.0, $195), $194);
   $$0170173 = $$0170174;
   $$pre$phi204Z2D = $194;
  }
  $or$cond172 = ($$4167$lcssa & 1 | 0) == 0 & ($$3161$lcssa != 0.0 & ($$0170173 | 0) < 32);
  $208 = ($or$cond172 ? 0.0 : $$3161$lcssa) * $$pre$phi204Z2D + ($$0154 + $$pre$phi204Z2D * +(($$4167$lcssa + ($or$cond172 & 1) | 0) >>> 0)) - $$0154;
  if (!($208 != 0.0)) {
   $210 = ___errno_location() | 0;
   HEAP32[$210 >> 2] = 34;
  }
  $$0169 = +_scalbnl($208, $182);
 } while (0);
 return +$$0169;
}

function _kpmSetRefDataSet($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0156 = 0, $$0157 = 0, $$0158 = 0, $$0159 = 0, $$0161 = 0, $$0162 = 0, $$0163 = 0, $$0165 = 0, $$1160 = 0, $$1164 = 0, $$2 = 0, $$pre = 0, $$pre199 = 0, $$pre201 = 0, $11 = 0, $110 = 0, $116 = 0, $12 = 0, $123 = 0, $126 = 0, $148 = 0, $152 = 0, $157 = 0, $16 = 0, $164 = 0, $165 = 0, $17 = 0, $2 = 0, $20 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $56 = 0, $59 = 0, $63 = 0, $68 = 0, $72 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $82 = 0, $86 = 0, $9 = 0, $90 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 96 | 0;
 $3 = sp + 84 | 0;
 $4 = sp + 72 | 0;
 $5 = sp + 52 | 0;
 L1 : do if (($0 | 0) != 0 & ($1 | 0) != 0) {
  $8 = $1 + 4 | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  if (!$9) {
   _arLog(0, 3, 20326, $vararg_buffer1);
   $$0165 = -1;
   break;
  }
  $11 = $0 + 28 | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  if (!$12) {
   $16 = $9;
   label = 7;
  } else {
   _free($12);
   $$pre = HEAP32[$8 >> 2] | 0;
   if (!$$pre) {
    HEAP32[$11 >> 2] = 0;
    $27 = 0;
   } else {
    $16 = $$pre;
    label = 7;
   }
  }
  L9 : do if ((label | 0) == 7) {
   $17 = _malloc($16 * 132 | 0) | 0;
   HEAP32[$11 >> 2] = $17;
   if (!$17) {
    _arLog(0, 3, 20454, $vararg_buffer3);
    _exit(1);
   }
   $$0163 = 0;
   $20 = $16;
   while (1) {
    if (($$0163 | 0) >= ($20 | 0)) {
     $27 = $20;
     break L9;
    }
    _memcpy((HEAP32[$11 >> 2] | 0) + ($$0163 * 132 | 0) | 0, (HEAP32[$1 >> 2] | 0) + ($$0163 * 132 | 0) | 0, 132) | 0;
    $$0163 = $$0163 + 1 | 0;
    $20 = HEAP32[$8 >> 2] | 0;
   }
  } while (0);
  $26 = $0 + 32 | 0;
  HEAP32[$26 >> 2] = $27;
  $28 = $0 + 36 | 0;
  $29 = HEAP32[$28 >> 2] | 0;
  if ($29 | 0) {
   $31 = $0 + 40 | 0;
   $$1164 = 0;
   $35 = $29;
   while (1) {
    if (($$1164 | 0) >= (HEAP32[$31 >> 2] | 0)) break;
    $36 = HEAP32[$35 + ($$1164 * 12 | 0) >> 2] | 0;
    if (!$36) $$pre199 = $35; else {
     _free($36);
     $$pre199 = HEAP32[$28 >> 2] | 0;
    }
    $$1164 = $$1164 + 1 | 0;
    $35 = $$pre199;
   }
   _free($35);
  }
  $39 = $1 + 12 | 0;
  $40 = HEAP32[$39 >> 2] | 0;
  L28 : do if (!$40) {
   HEAP32[$28 >> 2] = 0;
   $77 = 0;
  } else {
   $43 = _malloc($40 * 12 | 0) | 0;
   HEAP32[$28 >> 2] = $43;
   if (!$43) {
    _arLog(0, 3, 20454, $vararg_buffer5);
    _exit(1);
   }
   $45 = $1 + 8 | 0;
   $$2 = 0;
   $47 = $40;
   while (1) {
    if (($$2 | 0) >= ($47 | 0)) {
     $77 = $47;
     break L28;
    }
    $48 = HEAP32[$45 >> 2] | 0;
    $51 = HEAP32[$28 >> 2] | 0;
    HEAP32[$51 + ($$2 * 12 | 0) + 8 >> 2] = HEAP32[$48 + ($$2 * 12 | 0) + 8 >> 2];
    $53 = $48 + ($$2 * 12 | 0) + 4 | 0;
    HEAP32[$51 + ($$2 * 12 | 0) + 4 >> 2] = HEAP32[$53 >> 2];
    $56 = HEAP32[$53 >> 2] | 0;
    if (!$56) {
     HEAP32[$48 + ($$2 * 12 | 0) >> 2] = 0;
     $$pre201 = $47;
    } else {
     $59 = _malloc($56 * 12 | 0) | 0;
     HEAP32[$51 + ($$2 * 12 | 0) >> 2] = $59;
     if (!$59) break;
     $$0162 = 0;
     $63 = $48;
     while (1) {
      if (($$0162 | 0) >= (HEAP32[$63 + ($$2 * 12 | 0) + 4 >> 2] | 0)) break;
      $68 = (HEAP32[$63 + ($$2 * 12 | 0) >> 2] | 0) + ($$0162 * 12 | 0) | 0;
      $72 = (HEAP32[(HEAP32[$28 >> 2] | 0) + ($$2 * 12 | 0) >> 2] | 0) + ($$0162 * 12 | 0) | 0;
      HEAP32[$72 >> 2] = HEAP32[$68 >> 2];
      HEAP32[$72 + 4 >> 2] = HEAP32[$68 + 4 >> 2];
      HEAP32[$72 + 8 >> 2] = HEAP32[$68 + 8 >> 2];
      $$0162 = $$0162 + 1 | 0;
      $63 = HEAP32[$45 >> 2] | 0;
     }
     $$pre201 = HEAP32[$39 >> 2] | 0;
    }
    $$2 = $$2 + 1 | 0;
    $47 = $$pre201;
   }
   _arLog(0, 3, 20454, $vararg_buffer7);
   _exit(1);
  } while (0);
  $76 = $0 + 40 | 0;
  HEAP32[$76 >> 2] = $77;
  $78 = $0 + 52 | 0;
  $79 = HEAP32[$78 >> 2] | 0;
  if ($79 | 0) {
   _free($79);
   HEAP32[$78 >> 2] = 0;
   HEAP32[$0 + 56 >> 2] = 0;
  }
  $82 = HEAP32[$39 >> 2] | 0;
  L51 : do if (($82 | 0) > 0) {
   HEAP32[$0 + 56 >> 2] = $82;
   $86 = _malloc($82 * 68 | 0) | 0;
   HEAP32[$78 >> 2] = $86;
   if (!$86) {
    _arLog(0, 3, 20454, $vararg_buffer9);
    _exit(1);
   }
   $$0161 = 0;
   while (1) {
    if (($$0161 | 0) == ($82 | 0)) break L51;
    HEAP32[$86 + ($$0161 * 68 | 0) + 64 >> 2] = 0;
    $$0161 = $$0161 + 1 | 0;
   }
  } while (0);
  $90 = HEAP32[$26 >> 2] | 0;
  if (!$90) $$0165 = 0; else {
   $92 = $2 + 4 | 0;
   $93 = $2 + 8 | 0;
   $94 = $3 + 4 | 0;
   $95 = $3 + 8 | 0;
   $96 = $4 + 4 | 0;
   $97 = $4 + 8 | 0;
   $$0158 = 0;
   $$0159 = 0;
   while (1) {
    if (($$0158 | 0) >= (HEAP32[$76 >> 2] | 0)) {
     $$0165 = 0;
     break L1;
    }
    $$0157 = 0;
    $$1160 = $$0159;
    while (1) {
     if (($$0157 | 0) >= (HEAP32[(HEAP32[$28 >> 2] | 0) + ($$0158 * 12 | 0) + 4 >> 2] | 0)) break;
     HEAP32[$2 >> 2] = 0;
     HEAP32[$92 >> 2] = 0;
     HEAP32[$93 >> 2] = 0;
     HEAP32[$3 >> 2] = 0;
     HEAP32[$94 >> 2] = 0;
     HEAP32[$95 >> 2] = 0;
     HEAP32[$4 >> 2] = 0;
     HEAP32[$96 >> 2] = 0;
     HEAP32[$97 >> 2] = 0;
     $$0156 = 0;
     while (1) {
      if (($$0156 | 0) >= ($90 | 0)) break;
      $123 = HEAP32[$11 >> 2] | 0;
      $126 = HEAP32[$28 >> 2] | 0;
      L70 : do if ((HEAP32[$123 + ($$0156 * 132 | 0) + 128 >> 2] | 0) == (HEAP32[(HEAP32[$126 + ($$0158 * 12 | 0) >> 2] | 0) + ($$0157 * 12 | 0) + 8 >> 2] | 0)) if ((HEAP32[$123 + ($$0156 * 132 | 0) + 124 >> 2] | 0) == (HEAP32[$126 + ($$0158 * 12 | 0) + 8 >> 2] | 0)) {
       __ZN6vision12FeaturePointC2Effffb($5, +HEAPF32[$123 + ($$0156 * 132 | 0) >> 2], +HEAPF32[$123 + ($$0156 * 132 | 0) + 4 >> 2], +HEAPF32[$123 + ($$0156 * 132 | 0) + 112 >> 2], +HEAPF32[$123 + ($$0156 * 132 | 0) + 116 >> 2], (HEAP32[$123 + ($$0156 * 132 | 0) + 120 >> 2] | 0) != 0);
       $148 = HEAP32[$92 >> 2] | 0;
       if ($148 >>> 0 < (HEAP32[$93 >> 2] | 0) >>> 0) {
        HEAP32[$148 >> 2] = HEAP32[$5 >> 2];
        HEAP32[$148 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
        HEAP32[$148 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
        HEAP32[$148 + 12 >> 2] = HEAP32[$5 + 12 >> 2];
        HEAP32[$148 + 16 >> 2] = HEAP32[$5 + 16 >> 2];
        HEAP32[$92 >> 2] = $148 + 20;
       } else __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($2, $5);
       __ZN6vision12FeaturePointD2Ev($5);
       $152 = HEAP32[$11 >> 2] | 0;
       __ZN6vision7Point3dIfEC2Efff($5, +HEAPF32[$152 + ($$0156 * 132 | 0) + 8 >> 2], +HEAPF32[$152 + ($$0156 * 132 | 0) + 12 >> 2], 0.0);
       $157 = HEAP32[$94 >> 2] | 0;
       if ($157 >>> 0 < (HEAP32[$95 >> 2] | 0) >>> 0) {
        HEAP32[$157 >> 2] = HEAP32[$5 >> 2];
        HEAP32[$157 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
        HEAP32[$157 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
        HEAP32[$94 >> 2] = (HEAP32[$94 >> 2] | 0) + 12;
       } else __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($3, $5);
       $$0 = 0;
       while (1) {
        if ($$0 >>> 0 >= 96) break L70;
        $164 = (HEAP32[$11 >> 2] | 0) + ($$0156 * 132 | 0) + 16 + $$0 | 0;
        $165 = HEAP32[$96 >> 2] | 0;
        if (($165 | 0) == (HEAP32[$97 >> 2] | 0)) __ZNSt3__26vectorIhNS_9allocatorIhEEE21__push_back_slow_pathIRKhEEvOT_($4, $164); else {
         HEAP8[$165 >> 0] = HEAP8[$164 >> 0] | 0;
         HEAP32[$96 >> 2] = (HEAP32[$96 >> 2] | 0) + 1;
        }
        $$0 = $$0 + 1 | 0;
       }
      } while (0);
      $$0156 = $$0156 + 1 | 0;
     }
     HEAP32[$vararg_buffer11 >> 2] = ((HEAP32[$92 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 20 | 0;
     _arLog(0, 1, 20359, $vararg_buffer11);
     $110 = HEAP32[$28 >> 2] | 0;
     HEAP32[$0 + 60 + ($$1160 << 2) >> 2] = HEAP32[$110 + ($$0158 * 12 | 0) + 8 >> 2];
     $116 = HEAP32[$110 + ($$0158 * 12 | 0) >> 2] | 0;
     __ZN6vision20VisualDatabaseFacade30addFreakFeaturesAndDescriptorsERKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEERKNS2_IhNS4_IhEEEERKNS2_INS_7Point3dIfEENS4_ISE_EEEEmmi(HEAP32[$0 >> 2] | 0, $2, $4, $3, HEAP32[$116 + ($$0157 * 12 | 0) >> 2] | 0, HEAP32[$116 + ($$0157 * 12 | 0) + 4 >> 2] | 0, $$1160);
     __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev($4);
     __ZNSt3__213__vector_baseIN6vision7Point3dIfEENS_9allocatorIS3_EEED2Ev($3);
     __ZNSt3__213__vector_baseIN6vision12FeaturePointENS_9allocatorIS2_EEED2Ev($2);
     $$0157 = $$0157 + 1 | 0;
     $$1160 = $$1160 + 1 | 0;
    }
    $$0158 = $$0158 + 1 | 0;
    $$0159 = $$1160;
   }
  }
 } else {
  _arLog(0, 3, 20278, $vararg_buffer);
  $$0165 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0165 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i52 = 0, $$0$i$i$i$i66 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i58 = 0, $$0$i$i2$i$i72 = 0, $$0$i$i63 = 0, $$0$pn = 0, $$049 = 0, $$050 = 0, $$3 = 0, $$3$lcssa = 0, $$4 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$ph = 0, $$sroa$047$0$copyload = 0, $10 = 0, $100 = 0, $103 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $12 = 0, $131 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $154 = 0, $16 = 0, $161 = 0, $170 = 0, $173 = 0, $18 = 0, $185 = 0, $188 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $30 = 0, $32 = 0, $34 = 0, $52 = 0, $58 = 0, $59 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $73 = 0, $8 = 0, $85 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $8 = sp + 4 | 0;
 $9 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $3);
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 57916) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy1);
 HEAP32[$4 >> 2] = 0;
 $$0 = $6;
 $12 = 0;
 L1 : while (1) {
  $14 = HEAP32[$1 >> 2] | 0;
  if (!(($$0 | 0) != ($7 | 0) & ($12 | 0) == 0)) {
   $170 = $14;
   break;
  }
  $16 = $14;
  if (!$14) {
   $140 = 0;
   $202 = 1;
   $69 = $16;
  } else {
   $18 = HEAP32[$14 + 12 >> 2] | 0;
   if (($18 | 0) == (HEAP32[$14 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$14 >> 2] | 0) + 36 >> 2] & 127]($14) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$18 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $140 = 0;
    $202 = 1;
    $69 = 0;
   } else {
    $140 = $14;
    $202 = 0;
    $69 = $16;
   }
  }
  $30 = HEAP32[$2 >> 2] | 0;
  $32 = $30;
  do if (!$30) {
   $$ph = $32;
   label = 15;
  } else {
   $34 = HEAP32[$30 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$34 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    $$ph = 0;
    label = 15;
    break;
   } else if ($202) {
    $203 = $30;
    $70 = $32;
    break;
   } else {
    label = 60;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($202) {
    label = 60;
    break;
   } else {
    $203 = 0;
    $70 = $$ph;
   }
  }
  L24 : do if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 63]($10, HEAP32[$$0 >> 2] | 0, 0) | 0) << 24 >> 24 == 37) {
   $52 = $$0 + 4 | 0;
   if (($52 | 0) == ($7 | 0)) {
    label = 60;
    break L1;
   }
   $58 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 63]($10, HEAP32[$52 >> 2] | 0, 0) | 0;
   switch ($58 << 24 >> 24) {
   case 48:
   case 69:
    {
     $59 = $$0 + 8 | 0;
     if (($59 | 0) == ($7 | 0)) {
      label = 60;
      break L1;
     }
     $$049 = $58;
     $$050 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] & 63]($10, HEAP32[$59 >> 2] | 0, 0) | 0;
     $73 = $52;
     break;
    }
   default:
    {
     $$049 = 0;
     $$050 = $58;
     $73 = $$0;
    }
   }
   $68 = HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] | 0;
   HEAP32[$8 >> 2] = $69;
   HEAP32[$9 >> 2] = $70;
   HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$9 >> 2];
   $71 = FUNCTION_TABLE_iiiiiiiii[$68 & 15]($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $$050, $$049) | 0;
   HEAP32[$1 >> 2] = $71;
   $$4 = $73 + 8 | 0;
  } else {
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, 8192, HEAP32[$$0 >> 2] | 0) | 0)) {
    $139 = $140 + 12 | 0;
    $141 = HEAP32[$139 >> 2] | 0;
    $142 = $140 + 16 | 0;
    if (($141 | 0) == (HEAP32[$142 >> 2] | 0)) $$0$i$i63 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] & 127]($140) | 0; else $$0$i$i63 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$141 >> 2] | 0) | 0;
    $154 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 63]($10, $$0$i$i63) | 0;
    if (($154 | 0) != (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$10 >> 2] | 0) + 28 >> 2] & 63]($10, HEAP32[$$0 >> 2] | 0) | 0)) {
     HEAP32[$4 >> 2] = 4;
     $$4 = $$0;
     break;
    }
    $161 = HEAP32[$139 >> 2] | 0;
    if (($161 | 0) == (HEAP32[$142 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 40 >> 2] & 127]($140) | 0; else {
     HEAP32[$139 >> 2] = $161 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$161 >> 2] | 0) | 0;
    }
    $$4 = $$0 + 4 | 0;
    break;
   }
   $$0$pn = $$0;
   while (1) {
    $$3 = $$0$pn + 4 | 0;
    if (($$3 | 0) == ($7 | 0)) {
     $$3$lcssa = $7;
     break;
    }
    if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, 8192, HEAP32[$$3 >> 2] | 0) | 0) $$0$pn = $$3; else {
     $$3$lcssa = $$3;
     break;
    }
   }
   $100 = $203;
   $85 = $140;
   while (1) {
    if (!$85) {
     $116 = 0;
     $204 = 1;
    } else {
     $88 = HEAP32[$85 + 12 >> 2] | 0;
     if (($88 | 0) == (HEAP32[$85 + 16 >> 2] | 0)) $$0$i$i$i$i52 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$85 >> 2] | 0) + 36 >> 2] & 127]($85) | 0; else $$0$i$i$i$i52 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$88 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i52, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      $116 = 0;
      $204 = 1;
     } else {
      $116 = $85;
      $204 = 0;
     }
    }
    do if (!$100) label = 40; else {
     $103 = HEAP32[$100 + 12 >> 2] | 0;
     if (($103 | 0) == (HEAP32[$100 + 16 >> 2] | 0)) $$0$i$i2$i$i58 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$100 >> 2] | 0) + 36 >> 2] & 127]($100) | 0; else $$0$i$i2$i$i58 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$103 >> 2] | 0) | 0;
     if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i58, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
      HEAP32[$2 >> 2] = 0;
      label = 40;
      break;
     } else if ($204) {
      $205 = $100;
      break;
     } else {
      $$4 = $$3$lcssa;
      break L24;
     }
    } while (0);
    if ((label | 0) == 40) {
     label = 0;
     if ($204) {
      $$4 = $$3$lcssa;
      break L24;
     } else $205 = 0;
    }
    $115 = $116 + 12 | 0;
    $117 = HEAP32[$115 >> 2] | 0;
    $118 = $116 + 16 | 0;
    if (($117 | 0) == (HEAP32[$118 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$116 >> 2] | 0) + 36 >> 2] & 127]($116) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$117 >> 2] | 0) | 0;
    if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 63]($10, 8192, $$0$i$i) | 0)) {
     $$4 = $$3$lcssa;
     break L24;
    }
    $131 = HEAP32[$115 >> 2] | 0;
    if (($131 | 0) == (HEAP32[$118 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$116 >> 2] | 0) + 40 >> 2] & 127]($116) | 0; else {
     HEAP32[$115 >> 2] = $131 + 4;
     __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$131 >> 2] | 0) | 0;
    }
    $100 = $205;
    $85 = $116;
   }
  } while (0);
  $$0 = $$4;
  $12 = HEAP32[$4 >> 2] | 0;
 }
 if ((label | 0) == 60) {
  HEAP32[$4 >> 2] = 4;
  $170 = $140;
 }
 if (!$170) {
  $$sroa$047$0$copyload = 0;
  $206 = 1;
 } else {
  $173 = HEAP32[$170 + 12 >> 2] | 0;
  if (($173 | 0) == (HEAP32[$170 + 16 >> 2] | 0)) $$0$i$i$i$i66 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$170 >> 2] | 0) + 36 >> 2] & 127]($170) | 0; else $$0$i$i$i$i66 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$173 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i66, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $$sroa$047$0$copyload = 0;
   $206 = 1;
  } else {
   $$sroa$047$0$copyload = $170;
   $206 = 0;
  }
 }
 $185 = HEAP32[$2 >> 2] | 0;
 do if (!$185) label = 73; else {
  $188 = HEAP32[$185 + 12 >> 2] | 0;
  if (($188 | 0) == (HEAP32[$185 + 16 >> 2] | 0)) $$0$i$i2$i$i72 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$185 >> 2] | 0) + 36 >> 2] & 127]($185) | 0; else $$0$i$i2$i$i72 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$188 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i72, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 73;
   break;
  } else if ($206) break; else {
   label = 75;
   break;
  }
 } while (0);
 if ((label | 0) == 73) if ($206) label = 75;
 if ((label | 0) == 75) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 STACKTOP = sp;
 return $$sroa$047$0$copyload | 0;
}

function _ar2ReadSurfaceSet($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$093 = 0, $$094 = 0, $$096 = 0, $$1 = 0, $$198 = 0, $$sink = 0, $13 = 0, $15 = 0, $17 = 0, $18 = 0, $20 = 0, $25 = 0, $3 = 0, $30 = 0, $32 = 0, $39 = 0, $4 = 0, $44 = 0, $5 = 0, $51 = 0, $6 = 0, $64 = 0, $73 = 0, $82 = 0, $89 = 0, $96 = 0, $98 = 0, $storemerge = 0, $vararg_buffer = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer16 = 0, $vararg_buffer19 = 0, $vararg_buffer2 = 0, $vararg_buffer22 = 0, $vararg_buffer24 = 0, $vararg_buffer27 = 0, $vararg_buffer29 = 0, $vararg_buffer31 = 0, $vararg_buffer34 = 0, $vararg_buffer36 = 0, $vararg_buffer38 = 0, $vararg_buffer41 = 0, $vararg_buffer43 = 0, $vararg_buffer49 = 0, $vararg_buffer5 = 0, $vararg_buffer51 = 0, $vararg_buffer57 = 0, $vararg_buffer59 = 0, $vararg_buffer65 = 0, $vararg_buffer67 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1248 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1248);
 $vararg_buffer67 = sp + 1232 | 0;
 $vararg_buffer65 = sp + 1224 | 0;
 $vararg_buffer59 = sp + 1208 | 0;
 $vararg_buffer57 = sp + 1200 | 0;
 $vararg_buffer51 = sp + 1184 | 0;
 $vararg_buffer49 = sp + 1176 | 0;
 $vararg_buffer43 = sp + 1160 | 0;
 $vararg_buffer41 = sp + 1152 | 0;
 $vararg_buffer38 = sp + 1144 | 0;
 $vararg_buffer36 = sp + 1136 | 0;
 $vararg_buffer34 = sp + 1128 | 0;
 $vararg_buffer31 = sp + 1120 | 0;
 $vararg_buffer29 = sp + 1112 | 0;
 $vararg_buffer27 = sp + 1104 | 0;
 $vararg_buffer24 = sp + 1096 | 0;
 $vararg_buffer22 = sp + 1088 | 0;
 $vararg_buffer19 = sp + 1080 | 0;
 $vararg_buffer16 = sp + 1072 | 0;
 $vararg_buffer14 = sp + 1064 | 0;
 $vararg_buffer11 = sp + 1056 | 0;
 $vararg_buffer9 = sp + 1048 | 0;
 $vararg_buffer5 = sp + 1040 | 0;
 $vararg_buffer2 = sp + 1032 | 0;
 $vararg_buffer = sp + 1024 | 0;
 $3 = sp + 768 | 0;
 $4 = sp + 512 | 0;
 $5 = sp + 1236 | 0;
 $6 = sp;
 do if (!$1) label = 4; else if (!(HEAP8[$1 >> 0] | 0)) label = 4; else if (!(_strcmp($1, 44129) | 0)) label = 4; else {
  HEAP32[$vararg_buffer >> 2] = $0;
  HEAP32[$vararg_buffer + 4 >> 2] = $1;
  _sprintf($6, 20471, $vararg_buffer) | 0;
  $13 = _fopen($6, 19680) | 0;
  if (!$13) {
   HEAP32[$vararg_buffer2 >> 2] = $0;
   _arLog(0, 3, 19682, $vararg_buffer2);
   $15 = ___errno_location() | 0;
   $17 = _strerror(HEAP32[$15 >> 2] | 0) | 0;
   HEAP32[$vararg_buffer5 >> 2] = 58334;
   HEAP32[$vararg_buffer5 + 4 >> 2] = $17;
   _arLog(0, 3, 19708, $vararg_buffer5);
   $$198 = 0;
   break;
  } else {
   $$096 = $13;
   $$1 = 1;
   label = 8;
   break;
  }
 } while (0);
 if ((label | 0) == 4) {
  _strncpy($4, $0, 255) | 0;
  HEAP8[$4 + 255 >> 0] = 0;
  $$096 = 0;
  $$1 = 0;
  label = 8;
 }
 do if ((label | 0) == 8) {
  $18 = _malloc(1140) | 0;
  if (!$18) {
   _arLog(0, 3, 20454, $vararg_buffer9);
   _exit(1);
  }
  $20 = ($$1 | 0) != 0;
  if ($20) {
   if (!(_get_buff_380($3, $$096) | 0)) {
    _fclose($$096) | 0;
    _free($18);
    $$198 = 0;
    break;
   }
   HEAP32[$vararg_buffer11 >> 2] = $5;
   if ((_sscanf($3, 19714, $vararg_buffer11) | 0) != 1) {
    _fclose($$096) | 0;
    _free($18);
    $$198 = 0;
    break;
   }
   $25 = HEAP32[$5 >> 2] | 0;
   if (($25 | 0) < 1) {
    _fclose($$096) | 0;
    _free($18);
    $$198 = 0;
    break;
   } else $$sink = $25;
  } else $$sink = 1;
  HEAP32[$18 + 4 >> 2] = $$sink;
  HEAP32[$18 + 152 >> 2] = 0;
  $30 = _malloc($$sink * 112 | 0) | 0;
  HEAP32[$18 >> 2] = $30;
  if (!$30) {
   _arLog(0, 3, 20454, $vararg_buffer14);
   _exit(1);
  }
  $32 = ($2 | 0) == 0;
  $storemerge = 0;
  L28 : while (1) {
   HEAP32[$5 >> 2] = $storemerge;
   if (($storemerge | 0) >= ($$sink | 0)) {
    label = 57;
    break;
   }
   HEAP32[$vararg_buffer16 >> 2] = $storemerge + 1;
   _arLog(0, 1, 19717, $vararg_buffer16);
   if ($20) {
    if (!(_get_buff_380($3, $$096) | 0)) {
     label = 57;
     break;
    }
    HEAP32[$vararg_buffer19 >> 2] = $4;
    if ((_sscanf($3, 19741, $vararg_buffer19) | 0) != 1) {
     label = 57;
     break;
    }
    _ar2UtilRemoveExt($4) | 0;
   }
   _arLog(0, 1, 19744, $vararg_buffer22);
   $39 = _ar2ReadImageSet($4) | 0;
   HEAP32[$30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) >> 2] = $39;
   if (!$39) {
    label = 26;
    break;
   }
   _arLog(0, 1, 19793, $vararg_buffer27);
   _arLog(0, 1, 19803, $vararg_buffer29);
   $44 = _ar2ReadFeatureSet($4, 44129) | 0;
   HEAP32[$30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) + 4 >> 2] = $44;
   if (!$44) {
    label = 29;
    break;
   }
   _arLog(0, 1, 19793, $vararg_buffer34);
   if ($32) HEAP32[$30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) + 8 >> 2] = 0; else {
    _arLog(0, 1, 19854, $vararg_buffer36);
    _ar2UtilRemoveExt($4) | 0;
    $51 = _ar2ReadMarkerSet($4, 19873, $2) | 0;
    HEAP32[$30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) + 8 >> 2] = $51;
    if (!$51) {
     label = 33;
     break;
    }
    _arLog(0, 1, 19793, $vararg_buffer41);
   }
   L43 : do if ($20) {
    if (!(_get_buff_380($3, $$096) | 0)) {
     label = 57;
     break L28;
    }
    $64 = HEAP32[$5 >> 2] | 0;
    HEAP32[$vararg_buffer43 >> 2] = $30 + ($64 * 112 | 0) + 12;
    HEAP32[$vararg_buffer43 + 4 >> 2] = $30 + ($64 * 112 | 0) + 16;
    HEAP32[$vararg_buffer43 + 8 >> 2] = $30 + ($64 * 112 | 0) + 20;
    HEAP32[$vararg_buffer43 + 12 >> 2] = $30 + ($64 * 112 | 0) + 24;
    if ((_sscanf($3, 19907, $vararg_buffer43) | 0) != 4) {
     label = 40;
     break L28;
    }
    if (!(_get_buff_380($3, $$096) | 0)) {
     label = 57;
     break L28;
    }
    $73 = HEAP32[$5 >> 2] | 0;
    HEAP32[$vararg_buffer51 >> 2] = $30 + ($73 * 112 | 0) + 28;
    HEAP32[$vararg_buffer51 + 4 >> 2] = $30 + ($73 * 112 | 0) + 32;
    HEAP32[$vararg_buffer51 + 8 >> 2] = $30 + ($73 * 112 | 0) + 36;
    HEAP32[$vararg_buffer51 + 12 >> 2] = $30 + ($73 * 112 | 0) + 40;
    if ((_sscanf($3, 19907, $vararg_buffer51) | 0) != 4) {
     label = 43;
     break L28;
    }
    if (!(_get_buff_380($3, $$096) | 0)) {
     label = 57;
     break L28;
    }
    $82 = HEAP32[$5 >> 2] | 0;
    HEAP32[$vararg_buffer59 >> 2] = $30 + ($82 * 112 | 0) + 44;
    HEAP32[$vararg_buffer59 + 4 >> 2] = $30 + ($82 * 112 | 0) + 48;
    HEAP32[$vararg_buffer59 + 8 >> 2] = $30 + ($82 * 112 | 0) + 52;
    HEAP32[$vararg_buffer59 + 12 >> 2] = $30 + ($82 * 112 | 0) + 56;
    if ((_sscanf($3, 19907, $vararg_buffer59) | 0) != 4) {
     label = 47;
     break L28;
    }
    $96 = HEAP32[$5 >> 2] | 0;
   } else {
    $89 = HEAP32[$5 >> 2] | 0;
    $$094 = 0;
    while (1) {
     if (($$094 | 0) == 3) {
      $96 = $89;
      break L43;
     }
     $$093 = 0;
     while (1) {
      if (($$093 | 0) == 4) break;
      HEAPF32[$30 + ($89 * 112 | 0) + 12 + ($$094 << 4) + ($$093 << 2) >> 2] = ($$094 | 0) == ($$093 | 0) ? 1.0 : 0.0;
      $$093 = $$093 + 1 | 0;
     }
     $$094 = $$094 + 1 | 0;
    }
   } while (0);
   _arUtilMatInvf($30 + ($96 * 112 | 0) + 12 | 0, $30 + ($96 * 112 | 0) + 60 | 0) | 0;
   _ar2UtilReplaceExt($4, 256, 19955) | 0;
   $98 = _malloc(256) | 0;
   HEAP32[$30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) + 108 >> 2] = $98;
   if (!$98) {
    label = 55;
    break;
   }
   _strncpy($98, $4, 256) | 0;
   $storemerge = (HEAP32[$5 >> 2] | 0) + 1 | 0;
  }
  if ((label | 0) == 26) {
   HEAP32[$vararg_buffer24 >> 2] = $4;
   _arLog(0, 3, 19762, $vararg_buffer24);
   _free($30);
   _free($18);
   if (!$$096) {
    $$198 = 0;
    break;
   }
   _fclose($$096) | 0;
   $$198 = 0;
   break;
  } else if ((label | 0) == 29) {
   HEAP32[$vararg_buffer31 >> 2] = $4;
   _arLog(0, 3, 19823, $vararg_buffer31);
   _ar2FreeImageSet($30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) | 0) | 0;
   _free($30);
   _free($18);
   if (!$$096) {
    $$198 = 0;
    break;
   }
   _fclose($$096) | 0;
   $$198 = 0;
   break;
  } else if ((label | 0) == 33) {
   HEAP32[$vararg_buffer38 >> 2] = $4;
   _arLog(0, 3, 19877, $vararg_buffer38);
   _ar2FreeFeatureSet($30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) + 4 | 0) | 0;
   _ar2FreeImageSet($30 + ((HEAP32[$5 >> 2] | 0) * 112 | 0) | 0) | 0;
   _free($30);
   _free($18);
   if (!$$096) {
    $$198 = 0;
    break;
   }
   _fclose($$096) | 0;
   $$198 = 0;
   break;
  } else if ((label | 0) == 40) {
   _arLog(0, 3, 19919, $vararg_buffer49);
   _fclose($$096) | 0;
   _exit(0);
  } else if ((label | 0) == 43) {
   _arLog(0, 3, 19919, $vararg_buffer57);
   _fclose($$096) | 0;
   _exit(0);
  } else if ((label | 0) == 47) {
   _arLog(0, 3, 19919, $vararg_buffer65);
   _fclose($$096) | 0;
   _exit(0);
  } else if ((label | 0) == 55) {
   _arLog(0, 3, 20454, $vararg_buffer67);
   _exit(1);
  } else if ((label | 0) == 57) {
   if ($$096 | 0) _fclose($$096) | 0;
   if ((HEAP32[$5 >> 2] | 0) >= ($$sink | 0)) {
    $$198 = $18;
    break;
   }
   _exit(0);
  }
 } while (0);
 STACKTOP = sp;
 return $$198 | 0;
}

function __ZN6vision32ComputeSubpixelHessianSameOctaveEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $10 = 0, $101 = 0, $105 = 0, $106 = 0, $11 = 0, $114 = 0, $119 = 0, $12 = 0, $123 = 0, $125 = 0, $127 = 0, $129 = 0, $131 = 0, $133 = 0, $135 = 0, $137 = 0, $138 = 0.0, $139 = 0.0, $145 = 0.0, $157 = 0.0, $165 = 0.0, $167 = 0, $22 = 0, $27 = 0, $31 = 0, $32 = 0, $34 = 0, $42 = 0, $47 = 0, $51 = 0, $52 = 0, $60 = 0, $65 = 0, $69 = 0, $7 = 0, $70 = 0, $78 = 0, $8 = 0, $83 = 0, $87 = 0, $88 = 0, $9 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $7 = sp + 20 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 12 | 0;
 $10 = sp + 8 | 0;
 $11 = sp + 4 | 0;
 $12 = sp;
 if (($5 | 0) > 0) if (($5 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv($3) | 0) >>> 0) {
  $32 = $6 + -1 | 0;
  if (($6 | 0) > 0) {
   $34 = $6 + 1 | 0;
   if ($34 >>> 0 < (__ZNK6vision5Image6heightEv($3) | 0) >>> 0) {
    $52 = __ZNK6vision5Image5widthEv($2) | 0;
    if (($52 | 0) != (__ZNK6vision5Image5widthEv($3) | 0)) {
     $60 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24134) | 0, 22444) | 0, 33528) | 0, 311) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $60 + (HEAP32[(HEAP32[$60 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $65 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $69 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$65 >> 2] | 0) + 28 >> 2] & 63]($65, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($60, $69) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($60) | 0;
     _abort();
    }
    $70 = __ZNK6vision5Image5widthEv($2) | 0;
    if (($70 | 0) != (__ZNK6vision5Image5widthEv($4) | 0)) {
     $78 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24533) | 0, 22444) | 0, 33528) | 0, 312) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $78 + (HEAP32[(HEAP32[$78 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $83 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $87 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$83 >> 2] | 0) + 28 >> 2] & 63]($83, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($78, $87) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($78) | 0;
     _abort();
    }
    $88 = __ZNK6vision5Image6heightEv($2) | 0;
    if (($88 | 0) != (__ZNK6vision5Image6heightEv($3) | 0)) {
     $96 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24186) | 0, 22444) | 0, 33528) | 0, 313) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $96 + (HEAP32[(HEAP32[$96 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $101 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $105 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$101 >> 2] | 0) + 28 >> 2] & 63]($101, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($96, $105) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($96) | 0;
     _abort();
    }
    $106 = __ZNK6vision5Image6heightEv($2) | 0;
    if (($106 | 0) == (__ZNK6vision5Image6heightEv($4) | 0)) {
     $125 = (__ZNK6vision5Image3getIfEEPKT_m($2, $32) | 0) + ($5 << 2) | 0;
     $127 = (__ZNK6vision5Image3getIfEEPKT_m($2, $6) | 0) + ($5 << 2) | 0;
     $129 = (__ZNK6vision5Image3getIfEEPKT_m($2, $34) | 0) + ($5 << 2) | 0;
     $131 = (__ZNK6vision5Image3getIfEEPKT_m($3, $6) | 0) + ($5 << 2) | 0;
     $133 = (__ZNK6vision5Image3getIfEEPKT_m($4, $32) | 0) + ($5 << 2) | 0;
     $135 = (__ZNK6vision5Image3getIfEEPKT_m($4, $6) | 0) + ($5 << 2) | 0;
     $137 = (__ZNK6vision5Image3getIfEEPKT_m($4, $34) | 0) + ($5 << 2) | 0;
     __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii($8, $9, $10, $11, $12, $3, $5, $6);
     $138 = +HEAPF32[$135 >> 2];
     $139 = +HEAPF32[$127 >> 2];
     $145 = $138 + ($139 - +HEAPF32[$131 >> 2] * 2.0);
     $157 = (+HEAPF32[$127 + -4 >> 2] - +HEAPF32[$127 + 4 >> 2] + (+HEAPF32[$135 + 4 >> 2] - +HEAPF32[$135 + -4 >> 2])) * .25;
     $165 = (+HEAPF32[$125 >> 2] - +HEAPF32[$129 >> 2] + (+HEAPF32[$137 >> 2] - +HEAPF32[$133 >> 2])) * .25;
     HEAP32[$0 >> 2] = HEAP32[$10 >> 2];
     $167 = HEAP32[$12 >> 2] | 0;
     HEAP32[$0 + 4 >> 2] = $167;
     HEAPF32[$0 + 8 >> 2] = $157;
     HEAP32[$0 + 12 >> 2] = $167;
     HEAP32[$0 + 16 >> 2] = HEAP32[$11 >> 2];
     HEAPF32[$0 + 20 >> 2] = $165;
     HEAPF32[$0 + 24 >> 2] = $157;
     HEAPF32[$0 + 28 >> 2] = $165;
     HEAPF32[$0 + 32 >> 2] = $145;
     HEAPF32[$1 >> 2] = -+HEAPF32[$8 >> 2];
     HEAPF32[$1 + 4 >> 2] = -+HEAPF32[$9 >> 2];
     HEAPF32[$1 + 8 >> 2] = -(($138 - $139) * .5);
     STACKTOP = sp;
     return;
    } else {
     $114 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24585) | 0, 22444) | 0, 33528) | 0, 314) | 0, 33535) | 0, 23030) | 0;
     __ZNKSt3__28ios_base6getlocEv($7, $114 + (HEAP32[(HEAP32[$114 >> 2] | 0) + -12 >> 2] | 0) | 0);
     $119 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
     $123 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$119 >> 2] | 0) + 28 >> 2] & 63]($119, 10) | 0;
     __ZNSt3__26localeD2Ev($7);
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($114, $123) | 0;
     __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($114) | 0;
     _abort();
    }
   }
  }
  $42 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22898) | 0, 22444) | 0, 33528) | 0, 310) | 0, 33535) | 0, 22957) | 0;
  __ZNKSt3__28ios_base6getlocEv($7, $42 + (HEAP32[(HEAP32[$42 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $47 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
  $51 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$47 >> 2] | 0) + 28 >> 2] & 63]($47, 10) | 0;
  __ZNSt3__26localeD2Ev($7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($42, $51) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($42) | 0;
  _abort();
 }
 $22 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22824) | 0, 22444) | 0, 33528) | 0, 309) | 0, 33535) | 0, 22882) | 0;
 __ZNKSt3__28ios_base6getlocEv($7, $22 + (HEAP32[(HEAP32[$22 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $27 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
 $31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 28 >> 2] & 63]($27, 10) | 0;
 __ZNSt3__26localeD2Ev($7);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($22, $31) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($22) | 0;
 _abort();
}

function _kpmMatching($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0224 = 0, $$0225 = 0, $$0226 = 0, $$0227 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$pre$phi239Z2D = 0, $$pre$phi240Z2D = 0, $101 = 0.0, $103 = 0.0, $104 = 0, $109 = 0, $11 = 0, $113 = 0, $118 = 0, $12 = 0, $121 = 0, $123 = 0.0, $125 = 0.0, $126 = 0, $13 = 0, $131 = 0, $135 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $148 = 0, $155 = 0, $157 = 0, $159 = 0, $161 = 0, $163 = 0, $164 = 0, $169 = 0, $17 = 0, $175 = 0, $182 = 0.0, $185 = 0, $186 = 0, $192 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $29 = 0, $3 = 0, $30 = 0, $33 = 0, $34 = 0, $37 = 0, $39 = 0.0, $41 = 0.0, $42 = 0, $45 = 0, $48 = 0, $52 = 0, $55 = 0, $57 = 0.0, $59 = 0.0, $60 = 0, $65 = 0, $69 = 0, $7 = 0, $74 = 0, $77 = 0, $79 = 0.0, $81 = 0.0, $82 = 0, $87 = 0, $9 = 0, $91 = 0, $96 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = sp + 44 | 0;
 $3 = sp + 40 | 0;
 do if (($0 | 0) != 0 & ($1 | 0) != 0) {
  $7 = HEAP32[$0 + 12 >> 2] | 0;
  $9 = HEAP32[$0 + 16 >> 2] | 0;
  $11 = HEAP32[$0 + 20 >> 2] | 0;
  $12 = ($11 | 0) == 1;
  if ($12) {
   $$0224 = $1;
   $$0226 = 0;
  } else {
   $13 = _kpmUtilResizeImage($1, $7, $9, $11, $2, $3) | 0;
   if (!$13) {
    $$0 = -1;
    break;
   } else {
    $$0224 = $13;
    $$0226 = 1;
   }
  }
  __ZN6vision20VisualDatabaseFacade5queryEPhmm(HEAP32[$0 >> 2] | 0, $$0224, $7, $9) | 0;
  $17 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[$0 >> 2] | 0) | 0;
  $21 = (HEAP32[$17 + 4 >> 2] | 0) - (HEAP32[$17 >> 2] | 0) | 0;
  $22 = ($21 | 0) / 20 | 0;
  $23 = $0 + 48 | 0;
  HEAP32[$23 >> 2] = $22;
  L6 : do if (!$21) {
   $185 = HEAP32[$0 + 56 >> 2] | 0;
   $186 = $0 + 52 | 0;
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($185 | 0)) {
     $$pre$phi239Z2D = $186;
     $192 = $185;
     break L6;
    }
    HEAP32[(HEAP32[$186 >> 2] | 0) + ($$5 * 68 | 0) + 60 >> 2] = -1;
    $$5 = $$5 + 1 | 0;
   }
  } else {
   $25 = $0 + 44 | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   if (!$26) $29 = $22; else {
    _free($26);
    $29 = HEAP32[$23 >> 2] | 0;
   }
   $30 = _malloc($29 << 3) | 0;
   HEAP32[$25 >> 2] = $30;
   if (!$30) {
    _arLog(0, 3, 20454, $vararg_buffer1);
    _exit(1);
   }
   $33 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[$0 >> 2] | 0) | 0;
   L18 : do if ($12) {
    $34 = $0 + 4 | 0;
    $$0227 = 0;
    while (1) {
     if (($$0227 | 0) >= (HEAP32[$23 >> 2] | 0)) {
      $$pre$phi240Z2D = $34;
      break L18;
     }
     $37 = HEAP32[$33 >> 2] | 0;
     $39 = +HEAPF32[$37 + ($$0227 * 20 | 0) >> 2];
     $41 = +HEAPF32[$37 + ($$0227 * 20 | 0) + 4 >> 2];
     $42 = HEAP32[$34 >> 2] | 0;
     if (!$42) {
      $48 = HEAP32[$25 >> 2] | 0;
      HEAPF32[$48 + ($$0227 << 3) >> 2] = $39;
      HEAPF32[$48 + ($$0227 << 3) + 4 >> 2] = $41;
     } else {
      $45 = HEAP32[$25 >> 2] | 0;
      _arParamObserv2IdealLTf($42 + 184 | 0, $39, $41, $45 + ($$0227 << 3) | 0, $45 + ($$0227 << 3) + 4 | 0) | 0;
     }
     $$0227 = $$0227 + 1 | 0;
    }
   } else switch ($11 | 0) {
   case 5:
    {
     $52 = $0 + 4 | 0;
     $$1 = 0;
     while (1) {
      if (($$1 | 0) >= (HEAP32[$23 >> 2] | 0)) {
       $$pre$phi240Z2D = $52;
       break L18;
      }
      $55 = HEAP32[$33 >> 2] | 0;
      $57 = +HEAPF32[$55 + ($$1 * 20 | 0) >> 2];
      $59 = +HEAPF32[$55 + ($$1 * 20 | 0) + 4 >> 2];
      $60 = HEAP32[$52 >> 2] | 0;
      if (!$60) {
       $69 = HEAP32[$25 >> 2] | 0;
       HEAPF32[$69 + ($$1 << 3) >> 2] = $57 * 1.5;
       HEAPF32[$69 + ($$1 << 3) + 4 >> 2] = $59 * 1.5;
      } else {
       $65 = HEAP32[$25 >> 2] | 0;
       _arParamObserv2IdealLTf($60 + 184 | 0, $57 * 1.5, $59 * 1.5, $65 + ($$1 << 3) | 0, $65 + ($$1 << 3) + 4 | 0) | 0;
      }
      $$1 = $$1 + 1 | 0;
     }
     break;
    }
   case 2:
    {
     $74 = $0 + 4 | 0;
     $$2 = 0;
     while (1) {
      if (($$2 | 0) >= (HEAP32[$23 >> 2] | 0)) {
       $$pre$phi240Z2D = $74;
       break L18;
      }
      $77 = HEAP32[$33 >> 2] | 0;
      $79 = +HEAPF32[$77 + ($$2 * 20 | 0) >> 2];
      $81 = +HEAPF32[$77 + ($$2 * 20 | 0) + 4 >> 2];
      $82 = HEAP32[$74 >> 2] | 0;
      if (!$82) {
       $91 = HEAP32[$25 >> 2] | 0;
       HEAPF32[$91 + ($$2 << 3) >> 2] = $79 * 2.0;
       HEAPF32[$91 + ($$2 << 3) + 4 >> 2] = $81 * 2.0;
      } else {
       $87 = HEAP32[$25 >> 2] | 0;
       _arParamObserv2IdealLTf($82 + 184 | 0, $79 * 2.0, $81 * 2.0, $87 + ($$2 << 3) | 0, $87 + ($$2 << 3) + 4 | 0) | 0;
      }
      $$2 = $$2 + 1 | 0;
     }
     break;
    }
   case 4:
    {
     $96 = $0 + 4 | 0;
     $$3 = 0;
     while (1) {
      if (($$3 | 0) >= (HEAP32[$23 >> 2] | 0)) {
       $$pre$phi240Z2D = $96;
       break L18;
      }
      $99 = HEAP32[$33 >> 2] | 0;
      $101 = +HEAPF32[$99 + ($$3 * 20 | 0) >> 2];
      $103 = +HEAPF32[$99 + ($$3 * 20 | 0) + 4 >> 2];
      $104 = HEAP32[$96 >> 2] | 0;
      if (!$104) {
       $113 = HEAP32[$25 >> 2] | 0;
       HEAPF32[$113 + ($$3 << 3) >> 2] = $101 * 3.0;
       HEAPF32[$113 + ($$3 << 3) + 4 >> 2] = $103 * 3.0;
      } else {
       $109 = HEAP32[$25 >> 2] | 0;
       _arParamObserv2IdealLTf($104 + 184 | 0, $101 * 3.0, $103 * 3.0, $109 + ($$3 << 3) | 0, $109 + ($$3 << 3) + 4 | 0) | 0;
      }
      $$3 = $$3 + 1 | 0;
     }
     break;
    }
   default:
    {
     $118 = $0 + 4 | 0;
     $$4 = 0;
     while (1) {
      if (($$4 | 0) >= (HEAP32[$23 >> 2] | 0)) {
       $$pre$phi240Z2D = $118;
       break L18;
      }
      $121 = HEAP32[$33 >> 2] | 0;
      $123 = +HEAPF32[$121 + ($$4 * 20 | 0) >> 2];
      $125 = +HEAPF32[$121 + ($$4 * 20 | 0) + 4 >> 2];
      $126 = HEAP32[$118 >> 2] | 0;
      if (!$126) {
       $135 = HEAP32[$25 >> 2] | 0;
       HEAPF32[$135 + ($$4 << 3) >> 2] = $123 * 4.0;
       HEAPF32[$135 + ($$4 << 3) + 4 >> 2] = $125 * 4.0;
      } else {
       $131 = HEAP32[$25 >> 2] | 0;
       _arParamObserv2IdealLTf($126 + 184 | 0, $123 * 4.0, $125 * 4.0, $131 + ($$4 << 3) | 0, $131 + ($$4 << 3) + 4 | 0) | 0;
      }
      $$4 = $$4 + 1 | 0;
     }
    }
   } while (0);
   $140 = $0 + 56 | 0;
   $141 = $0 + 36 | 0;
   $142 = $0 + 52 | 0;
   $$0225 = 0;
   while (1) {
    $143 = HEAP32[$140 >> 2] | 0;
    if (($$0225 | 0) >= ($143 | 0)) {
     $$pre$phi239Z2D = $142;
     $192 = $143;
     break L6;
    }
    $148 = HEAP32[$142 >> 2] | 0;
    HEAP32[$148 + ($$0225 * 68 | 0) + 48 >> 2] = HEAP32[(HEAP32[$141 >> 2] | 0) + ($$0225 * 12 | 0) + 8 >> 2];
    HEAP32[$148 + ($$0225 * 68 | 0) + 60 >> 2] = -1;
    if (!(HEAP32[$148 + ($$0225 * 68 | 0) + 64 >> 2] | 0)) {
     $155 = __ZNK6vision20VisualDatabaseFacade7inliersEv(HEAP32[$0 >> 2] | 0) | 0;
     $157 = __ZN6vision20VisualDatabaseFacade9matchedIdEv(HEAP32[$0 >> 2] | 0) | 0;
     if (($157 | 0) >= 0) {
      $159 = HEAP32[$$pre$phi240Z2D >> 2] | 0;
      $161 = __ZNK6vision20VisualDatabaseFacade18get3DFeaturePointsEi(HEAP32[$0 >> 2] | 0, $157) | 0;
      $163 = __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv(HEAP32[$0 >> 2] | 0) | 0;
      $164 = HEAP32[$142 >> 2] | 0;
      if (!(__Z21kpmUtilGetPose_binaryP9ARParamLTRKNSt3__26vectorIN6vision7match_tENS1_9allocatorIS4_EEEERKNS2_INS3_7Point3dIfEENS5_ISB_EEEERKNS2_INS3_12FeaturePointENS5_ISG_EEEEPA4_fPf($159, $155, $161, $163, $164 + ($$0225 * 68 | 0) | 0, $164 + ($$0225 * 68 | 0) + 52 | 0) | 0)) {
       $169 = HEAP32[$142 >> 2] | 0;
       HEAP32[$169 + ($$0225 * 68 | 0) + 60 >> 2] = 0;
       $175 = (HEAP32[$155 + 4 >> 2] | 0) - (HEAP32[$155 >> 2] | 0) >> 3;
       HEAP32[$169 + ($$0225 * 68 | 0) + 56 >> 2] = $175;
       HEAP32[$169 + ($$0225 * 68 | 0) + 48 >> 2] = HEAP32[$0 + 60 + ($157 << 2) >> 2];
       $182 = +HEAPF32[$169 + ($$0225 * 68 | 0) + 52 >> 2];
       HEAP32[$vararg_buffer3 >> 2] = $$0225;
       HEAP32[$vararg_buffer3 + 4 >> 2] = $175;
       HEAP32[$vararg_buffer3 + 8 >> 2] = $175;
       HEAPF64[$vararg_buffer3 + 16 >> 3] = $182;
       _arLog(0, 1, 20414, $vararg_buffer3);
      }
     }
    }
    $$0225 = $$0225 + 1 | 0;
   }
  } while (0);
  $$6 = 0;
  while (1) {
   if (($$6 | 0) >= ($192 | 0)) break;
   HEAP32[(HEAP32[$$pre$phi239Z2D >> 2] | 0) + ($$6 * 68 | 0) + 64 >> 2] = 0;
   $$6 = $$6 + 1 | 0;
  }
  if (!$$0226) $$0 = 0; else {
   _free($$0224);
   $$0 = 0;
  }
 } else {
  _arLog(0, 3, 20370, $vararg_buffer);
  $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision25bilinear_histogram_updateEPfffi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = $3 | 0;
 var $105 = 0, $11 = 0, $110 = 0, $114 = 0, $121 = 0, $126 = 0, $130 = 0, $137 = 0, $142 = 0, $146 = 0, $148 = 0, $152 = 0, $16 = 0, $20 = 0, $23 = 0.0, $31 = 0, $36 = 0, $4 = 0, $40 = 0, $47 = 0, $52 = 0, $56 = 0, $63 = 0, $68 = 0, $72 = 0, $74 = 0, $77 = 0.0, $78 = 0.0, $80 = 0, $82 = 0, $89 = 0, $94 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if (!$0) {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26508) | 0, 26544) | 0, 33528) | 0, 139) | 0, 33535) | 0, 26667) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 63]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 if ($1 + .5 > 0.0) {
  $23 = $1 + -.5;
  if ($23 < +($3 | 0)) {
   if (!($2 >= 0.0)) {
    $47 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26798) | 0, 26544) | 0, 33528) | 0, 141) | 0, 33535) | 0, 26836) | 0;
    __ZNKSt3__28ios_base6getlocEv($4, $47 + (HEAP32[(HEAP32[$47 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $52 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
    $56 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$52 >> 2] | 0) + 28 >> 2] & 63]($52, 10) | 0;
    __ZNSt3__26localeD2Ev($4);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($47, $56) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($47) | 0;
    _abort();
   }
   if (($3 | 0) <= -1) {
    $63 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26865) | 0, 26544) | 0, 33528) | 0, 142) | 0, 33535) | 0, 26902) | 0;
    __ZNKSt3__28ios_base6getlocEv($4, $63 + (HEAP32[(HEAP32[$63 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $68 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
    $72 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$68 >> 2] | 0) + 28 >> 2] & 63]($68, 10) | 0;
    __ZNSt3__26localeD2Ev($4);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($63, $72) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($63) | 0;
    _abort();
   }
   $74 = ~~+Math_floor(+$23);
   $77 = $1 - +($74 | 0) + -.5;
   $78 = 1.0 - $77;
   $80 = ($74 + $3 | 0) % ($3 | 0) | 0;
   $82 = ($74 + 1 | 0) % ($3 | 0) | 0;
   if (!($78 >= 0.0)) {
    $89 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26931) | 0, 26544) | 0, 33528) | 0, 150) | 0, 33535) | 0, 26962) | 0;
    __ZNKSt3__28ios_base6getlocEv($4, $89 + (HEAP32[(HEAP32[$89 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $94 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
    $98 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$94 >> 2] | 0) + 28 >> 2] & 63]($94, 10) | 0;
    __ZNSt3__26localeD2Ev($4);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($89, $98) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($89) | 0;
    _abort();
   }
   if (!($77 >= 0.0)) {
    $105 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26982) | 0, 26544) | 0, 33528) | 0, 151) | 0, 33535) | 0, 27013) | 0;
    __ZNKSt3__28ios_base6getlocEv($4, $105 + (HEAP32[(HEAP32[$105 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $110 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
    $114 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$110 >> 2] | 0) + 28 >> 2] & 63]($110, 10) | 0;
    __ZNSt3__26localeD2Ev($4);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($105, $114) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($105) | 0;
    _abort();
   }
   if (($80 | 0) <= -1) {
    $121 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27033) | 0, 26544) | 0, 33528) | 0, 152) | 0, 33535) | 0, 27081) | 0;
    __ZNKSt3__28ios_base6getlocEv($4, $121 + (HEAP32[(HEAP32[$121 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $126 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
    $130 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$126 >> 2] | 0) + 28 >> 2] & 63]($126, 10) | 0;
    __ZNSt3__26localeD2Ev($4);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($121, $130) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($121) | 0;
    _abort();
   }
   if (($82 | 0) > -1) {
    $148 = $0 + ($80 << 2) | 0;
    HEAPF32[$148 >> 2] = $78 * $2 + +HEAPF32[$148 >> 2];
    $152 = $0 + ($82 << 2) | 0;
    HEAPF32[$152 >> 2] = $77 * $2 + +HEAPF32[$152 >> 2];
    STACKTOP = sp;
    return;
   } else {
    $137 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27107) | 0, 26544) | 0, 33528) | 0, 153) | 0, 33535) | 0, 27155) | 0;
    __ZNKSt3__28ios_base6getlocEv($4, $137 + (HEAP32[(HEAP32[$137 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $142 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
    $146 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$142 >> 2] | 0) + 28 >> 2] & 63]($142, 10) | 0;
    __ZNSt3__26localeD2Ev($4);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($137, $146) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($137) | 0;
    _abort();
   }
  }
 }
 $31 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 26693) | 0, 26544) | 0, 33528) | 0, 140) | 0, 33535) | 0, 26758) | 0;
 __ZNKSt3__28ios_base6getlocEv($4, $31 + (HEAP32[(HEAP32[$31 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $36 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
 $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$36 >> 2] | 0) + 28 >> 2] & 63]($36, 10) | 0;
 __ZNSt3__26localeD2Ev($4);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($31, $40) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($31) | 0;
 _abort();
}

function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0, $q_sroa_1_1198$looptemp = 0;
 $n_sroa_0_0_extract_trunc = $a$0;
 $n_sroa_1_4_extract_shift$0 = $a$1;
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
 $d_sroa_0_0_extract_trunc = $b$0;
 $d_sroa_1_4_extract_shift$0 = $b$1;
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
 if (!$n_sroa_1_4_extract_trunc) {
  $4 = ($rem | 0) != 0;
  if (!$d_sroa_1_4_extract_trunc) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  } else {
   if (!$4) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (setTempRet0($_0$1 | 0), $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
 do if (!$d_sroa_0_0_extract_trunc) {
  if ($17) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
    HEAP32[$rem + 4 >> 2] = 0;
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
  if (!$n_sroa_0_0_extract_trunc) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = 0;
    HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
   }
   $_0$1 = 0;
   $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
  $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
  if (!($37 & $d_sroa_1_4_extract_trunc)) {
   if ($rem | 0) {
    HEAP32[$rem >> 2] = $a$0 | 0;
    HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
   }
   $_0$1 = 0;
   $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
  $51 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
  if ($51 >>> 0 <= 30) {
   $57 = $51 + 1 | 0;
   $58 = 31 - $51 | 0;
   $sr_1_ph = $57;
   $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
   $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
   $q_sroa_0_1_ph = 0;
   $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
   break;
  }
  if (!$rem) {
   $_0$1 = 0;
   $_0$0 = 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
  HEAP32[$rem >> 2] = $a$0 | 0;
  HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
  $_0$1 = 0;
  $_0$0 = 0;
  return (setTempRet0($_0$1 | 0), $_0$0) | 0;
 } else {
  if (!$17) {
   $119 = (Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0) - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   if ($119 >>> 0 <= 31) {
    $125 = $119 + 1 | 0;
    $126 = 31 - $119 | 0;
    $130 = $119 - 31 >> 31;
    $sr_1_ph = $125;
    $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
    $q_sroa_0_1_ph = 0;
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
    break;
   }
   if (!$rem) {
    $_0$1 = 0;
    $_0$0 = 0;
    return (setTempRet0($_0$1 | 0), $_0$0) | 0;
   }
   HEAP32[$rem >> 2] = $a$0 | 0;
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$1 = 0;
   $_0$0 = 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
  $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
  if ($66 & $d_sroa_0_0_extract_trunc | 0) {
   $88 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
   $89 = 64 - $88 | 0;
   $91 = 32 - $88 | 0;
   $92 = $91 >> 31;
   $95 = $88 - 32 | 0;
   $105 = $95 >> 31;
   $sr_1_ph = $88;
   $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
   $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
   $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
   $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
   break;
  }
  if ($rem | 0) {
   HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
   HEAP32[$rem + 4 >> 2] = 0;
  }
  if (($d_sroa_0_0_extract_trunc | 0) == 1) {
   $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
   $_0$0 = $a$0 | 0 | 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  } else {
   $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
   $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0;
   $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
   return (setTempRet0($_0$1 | 0), $_0$0) | 0;
  }
 } while (0);
 if (!$sr_1_ph) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = 0;
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0;
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
  $137$1 = getTempRet0() | 0;
  $q_sroa_1_1198 = $q_sroa_1_1_ph;
  $q_sroa_0_1199 = $q_sroa_0_1_ph;
  $r_sroa_1_1200 = $r_sroa_1_1_ph;
  $r_sroa_0_1201 = $r_sroa_0_1_ph;
  $sr_1202 = $sr_1_ph;
  $carry_0203 = 0;
  do {
   $q_sroa_1_1198$looptemp = $q_sroa_1_1198;
   $q_sroa_1_1198 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
   $q_sroa_0_1199 = $carry_0203 | $q_sroa_0_1199 << 1;
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198$looptemp >>> 31 | 0;
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
   _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
   $150$1 = getTempRet0() | 0;
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
   $carry_0203 = $151$0 & 1;
   $r_sroa_0_1201 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
   $r_sroa_1_1200 = getTempRet0() | 0;
   $sr_1202 = $sr_1202 - 1 | 0;
  } while (($sr_1202 | 0) != 0);
  $q_sroa_1_1_lcssa = $q_sroa_1_1198;
  $q_sroa_0_1_lcssa = $q_sroa_0_1199;
  $r_sroa_1_1_lcssa = $r_sroa_1_1200;
  $r_sroa_0_1_lcssa = $r_sroa_0_1201;
  $carry_0_lcssa$1 = 0;
  $carry_0_lcssa$0 = $carry_0203;
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
 $q_sroa_0_0_insert_ext75$1 = 0;
 if ($rem | 0) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa;
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa;
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
 return (setTempRet0($_0$1 | 0), $_0$0) | 0;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_8KeyframeILi96EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$047 = 0, $$249 = 0, $$pre = 0, $$pre$phi257Z2D = 0, $$pre$phiZ2D = 0, $$sroa$082$0 = 0, $$sroa$082$0$in = 0, $100 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $34 = 0, $37 = 0, $4 = 0, $42 = 0, $44 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $51 = 0, $57 = 0, $6 = 0, $70 = 0, $73 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $81 = 0, $84 = 0, $9 = 0, $90 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 $2 = sp + 104 | 0;
 $3 = sp;
 $4 = sp + 72 | 0;
 $5 = sp + 40 | 0;
 $6 = $0 + 12 | 0;
 $8 = $0 + 16 | 0;
 HEAP32[$8 >> 2] = HEAP32[$6 >> 2];
 $9 = $0 + 24 | 0;
 HEAP32[$9 >> 2] = -1;
 $11 = __ZNK6vision18BinaryFeatureStore6pointsEv(__ZNK6vision8KeyframeILi96EE5storeEv($1) | 0) | 0;
 $13 = $0 + 8 | 0;
 $14 = $0 + 636 | 0;
 $15 = $0 + 652 | 0;
 $16 = $2 + 4 | 0;
 $17 = $2 + 8 | 0;
 $18 = $0 + 788 | 0;
 $19 = $4 + 4 | 0;
 $20 = $4 + 8 | 0;
 $21 = $0 + 4 | 0;
 $22 = $0 + 28 | 0;
 $$sroa$082$0$in = $0 + 80 | 0;
 while (1) {
  $$sroa$082$0 = HEAP32[$$sroa$082$0$in >> 2] | 0;
  if (!$$sroa$082$0) break;
  __ZN6vision11ScopedTimerC2EPKc($2, 29140);
  do if (__ZN6vision11ScopedTimercvbEv($2) | 0) {
   $26 = (HEAP8[$13 >> 0] | 0) == 0;
   $27 = __ZNK6vision8KeyframeILi96EE5storeEv($1) | 0;
   $28 = $$sroa$082$0;
   $29 = $28 + 12 | 0;
   $31 = __ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$29 >> 2] | 0) | 0;
   if ($26) {
    $37 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_($14, $27, $31) | 0;
    if ($37 >>> 0 >= (HEAP32[$0 >> 2] | 0) >>> 0) {
     $$pre$phi257Z2D = $29;
     $$pre$phiZ2D = $28;
     label = 9;
     break;
    }
   } else {
    $34 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_RKNS_28BinaryHierarchicalClusteringILi96EEE($14, $27, $31, __ZNK6vision8KeyframeILi96EE5indexEv(HEAP32[$29 >> 2] | 0) | 0) | 0;
    if ($34 >>> 0 >= (HEAP32[$0 >> 2] | 0) >>> 0) {
     $$pre$phi257Z2D = $29;
     $$pre$phiZ2D = $28;
     label = 9;
     break;
    }
   }
   __ZN6vision11ScopedTimerD2Ev($2);
  } else {
   $$pre = $$sroa$082$0;
   $$pre$phi257Z2D = $$pre + 12 | 0;
   $$pre$phiZ2D = $$pre;
   label = 9;
  } while (0);
  do if ((label | 0) == 9) {
   label = 0;
   __ZN6vision11ScopedTimerD2Ev($2);
   $42 = __ZN6vision18BinaryFeatureStore6pointsEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0) | 0;
   __ZN6vision11ScopedTimerC2EPKc($2, 29157);
   if (__ZN6vision11ScopedTimercvbEv($2) | 0) {
    $44 = __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv($14) | 0;
    $45 = __ZNK6vision8KeyframeILi96EE5widthEv($1) | 0;
    $46 = __ZNK6vision8KeyframeILi96EE6heightEv($1) | 0;
    $48 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0;
    $51 = __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii($15, $11, $42, $44, $45, $46, $48, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0) | 0;
    if (($51 | 0) < 0) {
     __ZN6vision11ScopedTimerD2Ev($2);
     break;
    } else $$047 = $51;
   } else $$047 = -1;
   __ZN6vision11ScopedTimerD2Ev($2);
   HEAP32[$2 >> 2] = 0;
   HEAP32[$16 >> 2] = 0;
   HEAP32[$17 >> 2] = 0;
   __ZN6vision11ScopedTimerC2EPKc($3, 29174);
   if (__ZN6vision11ScopedTimercvbEv($3) | 0) __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if($2, $15, __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv($14) | 0, $$047, 1.0);
   __ZN6vision11ScopedTimerD2Ev($3);
   __ZN6vision11ScopedTimerC2EPKc($4, 29197);
   if (__ZN6vision11ScopedTimercvbEv($4) | 0) {
    $57 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0;
    if (__ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii($3, $11, $42, $2, $18, $57, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0) | 0) label = 17; else __ZN6vision11ScopedTimerD2Ev($4);
   } else label = 17;
   if ((label | 0) == 17) {
    label = 0;
    __ZN6vision11ScopedTimerD2Ev($4);
    HEAP32[$4 >> 2] = 0;
    HEAP32[$19 >> 2] = 0;
    HEAP32[$20 >> 2] = 0;
    __ZN6vision11ScopedTimerC2EPKc($5, 29221);
    if (__ZN6vision11ScopedTimercvbEv($5) | 0) {
     __ZN6vision11FindInliersERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEEPKfRKNS1_INS_12FeaturePointENS3_IS9_EEEESD_RKS5_f($4, $3, $11, $42, $2, +HEAPF32[$21 >> 2]);
     if ((HEAP32[$19 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) >> 3 >>> 0 < (HEAP32[$0 >> 2] | 0) >>> 0) __ZN6vision11ScopedTimerD2Ev($5); else label = 20;
    } else label = 20;
    do if ((label | 0) == 20) {
     label = 0;
     __ZN6vision11ScopedTimerD2Ev($5);
     __ZN6vision11ScopedTimerC2EPKc($5, 29238);
     if (__ZN6vision11ScopedTimercvbEv($5) | 0) {
      $70 = __ZNK6vision8KeyframeILi96EE5storeEv($1) | 0;
      $73 = __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_PKff($14, $70, __ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0, $3, 10.0) | 0;
      if ($73 >>> 0 < (HEAP32[$0 >> 2] | 0) >>> 0) {
       __ZN6vision11ScopedTimerD2Ev($5);
       break;
      }
     }
     __ZN6vision11ScopedTimerD2Ev($5);
     __ZN6vision11ScopedTimerC2EPKc($5, 29255);
     if (__ZN6vision11ScopedTimercvbEv($5) | 0) {
      $77 = __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv($14) | 0;
      $78 = __ZNK6vision8KeyframeILi96EE5widthEv($1) | 0;
      $79 = __ZNK6vision8KeyframeILi96EE6heightEv($1) | 0;
      $81 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0;
      $84 = __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii($15, $11, $42, $77, $78, $79, $81, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0) | 0;
      if (($84 | 0) < 0) {
       __ZN6vision11ScopedTimerD2Ev($5);
       break;
      } else $$249 = $84;
     } else $$249 = $$047;
     __ZN6vision11ScopedTimerD2Ev($5);
     __ZN6vision11ScopedTimerC2EPKc($5, 29272);
     if (__ZN6vision11ScopedTimercvbEv($5) | 0) __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if($2, $15, __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv($14) | 0, $$249, 1.0);
     __ZN6vision11ScopedTimerD2Ev($5);
     __ZN6vision11ScopedTimerC2EPKc($5, 29295);
     if (__ZN6vision11ScopedTimercvbEv($5) | 0) {
      $90 = __ZNK6vision8KeyframeILi96EE5widthEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0;
      if (!(__ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii($3, $11, $42, $2, $18, $90, __ZNK6vision8KeyframeILi96EE6heightEv(HEAP32[$$pre$phi257Z2D >> 2] | 0) | 0) | 0)) {
       __ZN6vision11ScopedTimerD2Ev($5);
       break;
      }
     }
     __ZN6vision11ScopedTimerD2Ev($5);
     HEAP32[$19 >> 2] = HEAP32[$4 >> 2];
     __ZN6vision11ScopedTimerC2EPKc($5, 29319);
     if (__ZN6vision11ScopedTimercvbEv($5) | 0) __ZN6vision11FindInliersERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEEPKfRKNS1_INS_12FeaturePointENS3_IS9_EEEESD_RKS5_f($4, $3, $11, $42, $2, +HEAPF32[$21 >> 2]);
     __ZN6vision11ScopedTimerD2Ev($5);
     $100 = (HEAP32[$19 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) >> 3;
     if ($100 >>> 0 >= (HEAP32[$0 >> 2] | 0) >>> 0) if ($100 >>> 0 > (HEAP32[$8 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) >> 3 >>> 0) {
      __ZN6vision11CopyVector9IfEEvPT_PKS1_($22, $3);
      __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE4swapERS5_($6, $4);
      HEAP32[$9 >> 2] = HEAP32[$$pre$phiZ2D + 8 >> 2];
     }
    } while (0);
    __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev($4);
   }
   __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev($2);
  } while (0);
  $$sroa$082$0$in = $$sroa$082$0;
 }
 STACKTOP = sp;
 return (HEAP32[$9 >> 2] | 0) > -1 | 0;
}

function _get_matrix_code($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0212 = 0, $$0213 = 0, $$0217 = 0, $$0225 = 0, $$0228 = 0, $$0230 = 0, $$1214 = 0, $$1218 = 0, $$2215 = 0, $$2219 = 0, $$3216 = 0, $$3220 = 0, $$4221 = 0, $$5222 = 0, $$6223 = 0, $$7224 = 0, $107 = 0, $11 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $125 = 0, $126 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $138 = 0, $14 = 0, $149 = 0, $150 = 0, $151 = 0, $154 = 0, $160 = 0, $161 = 0, $164 = 0, $173 = 0, $174 = 0, $178 = 0, $188 = 0, $189 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $21 = 0, $25 = 0, $26 = 0, $30 = 0, $44 = 0, $55 = 0, $57 = 0, $58 = 0, $65 = 0, $67 = 0, $68 = 0, $7 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $86 = 0, $87 = 0, $89 = 0, $9 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $97 = 0, $or$cond7249 = 0, $spec$select232 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $7 = sp + 24 | 0;
 $8 = sp;
 $9 = sp + 16 | 0;
 L1 : do if (($1 + -3 | 0) >>> 0 > 5) {
  HEAP32[$2 >> 2] = -1;
  HEAP32[$3 >> 2] = 0;
  HEAPF64[$4 >> 3] = -1.0;
  $$0212 = -1;
 } else {
  HEAP32[$8 >> 2] = 0;
  $11 = $1 + -1 | 0;
  $12 = Math_imul($11, $1) | 0;
  HEAP32[$8 + 4 >> 2] = $12;
  $14 = Math_imul($1, $1) | 0;
  HEAP32[$8 + 8 >> 2] = $14 + -1;
  HEAP32[$8 + 12 >> 2] = $11;
  $$0217 = 0;
  $$0228 = 0;
  $$0230 = -1;
  while (1) {
   if (($$0217 | 0) == 4) break;
   $21 = HEAP8[$0 + (HEAP32[$8 + ($$0217 << 2) >> 2] | 0) >> 0] | 0;
   $$0217 = $$0217 + 1 | 0;
   $$0228 = ($21 & 255) > ($$0228 & 255) ? $21 : $$0228;
   $$0230 = ($21 & 255) < ($$0230 & 255) ? $21 : $$0230;
  }
  $25 = $$0228 & 255;
  $26 = $$0230 & 255;
  if (($25 - $26 | 0) < 30) {
   HEAP32[$2 >> 2] = -1;
   HEAP32[$3 >> 2] = 0;
   HEAPF64[$4 >> 3] = -1.0;
   $$0212 = -2;
   break;
  }
  $30 = ($25 + $26 | 0) >>> 1;
  $$1218 = 0;
  while (1) {
   if (($$1218 | 0) == 4) break;
   HEAP8[$7 + $$1218 >> 0] = $30 >>> 0 > (HEAPU8[$0 + (HEAP32[$8 + ($$1218 << 2) >> 2] | 0) >> 0] | 0) >>> 0 & 1;
   $$1218 = $$1218 + 1 | 0;
  }
  $$2219 = 0;
  while (1) {
   if ($$2219 >>> 0 >= 4) {
    label = 18;
    break;
   }
   $44 = $$2219 + 1 | 0;
   if ((HEAP8[$7 + $$2219 >> 0] | 0) == 1) if ((HEAP8[$7 + ($44 & 3) >> 0] | 0) == 1) if (!(HEAP8[$7 + ($$2219 + 2 & 3) >> 0] | 0)) {
    label = 17;
    break;
   }
   $$2219 = $44;
  }
  if ((label | 0) == 17) HEAP32[$3 >> 2] = $$2219; else if ((label | 0) == 18) if (($$2219 | 0) == 4) {
   HEAP32[$2 >> 2] = -1;
   HEAP32[$3 >> 2] = 0;
   HEAPF64[$4 >> 3] = -1.0;
   $$0212 = -3;
   break;
  }
  $$0225 = 255;
  $$3220 = 0;
  while (1) {
   if (($$3220 | 0) == ($14 | 0)) break;
   $55 = $0 + $$3220 | 0;
   $57 = HEAPU8[$55 >> 0] | 0;
   $58 = $57 - $30 | 0;
   $spec$select232 = ($58 | 0) < 0 ? 0 - $58 | 0 : $58;
   HEAP8[$55 >> 0] = $30 >>> 0 > $57 >>> 0 & 1;
   $$0225 = ($spec$select232 | 0) < ($$0225 | 0) ? $spec$select232 : $$0225;
   $$3220 = $$3220 + 1 | 0;
  }
  $65 = HEAP32[$3 >> 2] | 0;
  L31 : do switch ($65 | 0) {
  case 0:
   {
    $$0213 = $65;
    $194 = 0;
    $195 = 0;
    while (1) {
     if (($$0213 | 0) >= ($1 | 0)) {
      $149 = $194;
      $173 = $195;
      break L31;
     }
     $67 = ($$0213 | 0) == ($11 | 0);
     $68 = Math_imul($$0213, $1) | 0;
     $$4221 = 0;
     $73 = $194;
     $74 = $195;
     while (1) {
      if (($$4221 | 0) == ($1 | 0)) break;
      if (!($$4221 | $$0213)) {
       $196 = $73;
       $197 = $74;
      } else if ($67 & (($$4221 | 0) == 0 | ($$4221 | 0) == ($11 | 0))) {
       $196 = $73;
       $197 = $74;
      } else {
       $75 = _bitshift64Shl($73 | 0, $74 | 0, 1) | 0;
       $76 = getTempRet0() | 0;
       $196 = $75 | (HEAP8[$0 + ($$4221 + $68) >> 0] | 0) != 0;
       $197 = $76;
      }
      $$4221 = $$4221 + 1 | 0;
      $73 = $196;
      $74 = $197;
     }
     $$0213 = $$0213 + 1 | 0;
     $194 = $73;
     $195 = $74;
    }
    break;
   }
  case 1:
   {
    $$5222 = 0;
    $192 = 0;
    $193 = 0;
    while (1) {
     if (($$5222 | 0) >= ($1 | 0)) {
      $149 = $192;
      $173 = $193;
      break L31;
     }
     $86 = ($$5222 | 0) == 0;
     $87 = ($$5222 | 0) == ($11 | 0);
     $$1214 = $11;
     $91 = $192;
     $92 = $193;
     while (1) {
      if (($$1214 | 0) <= -1) break;
      $89 = ($$1214 | 0) == ($11 | 0);
      if ($86 & $89) {
       $198 = $91;
       $199 = $92;
      } else if ($87 & ($89 | ($$1214 | 0) == 0)) {
       $198 = $91;
       $199 = $92;
      } else {
       $93 = _bitshift64Shl($91 | 0, $92 | 0, 1) | 0;
       $94 = getTempRet0() | 0;
       $97 = $0 + ((Math_imul($$1214, $1) | 0) + $$5222) | 0;
       $198 = $93 | (HEAP8[$97 >> 0] | 0) != 0;
       $199 = $94;
      }
      $$1214 = $$1214 + -1 | 0;
      $91 = $198;
      $92 = $199;
     }
     $$5222 = $$5222 + 1 | 0;
     $192 = $91;
     $193 = $92;
    }
    break;
   }
  case 2:
   {
    $$2215 = $11;
    $190 = 0;
    $191 = 0;
    while (1) {
     if (($$2215 | 0) <= -1) {
      $149 = $190;
      $173 = $191;
      break L31;
     }
     $or$cond7249 = ($$2215 | 0) == ($11 | 0) | ($$2215 | 0) == 0;
     $107 = Math_imul($$2215, $1) | 0;
     $$6223 = $11;
     $112 = $190;
     $113 = $191;
     while (1) {
      if (($$6223 | 0) <= -1) break;
      if ($or$cond7249 & ($$6223 | 0) == ($11 | 0) | ($$6223 | $$2215 | 0) == 0) {
       $200 = $112;
       $201 = $113;
      } else {
       $114 = _bitshift64Shl($112 | 0, $113 | 0, 1) | 0;
       $115 = getTempRet0() | 0;
       $200 = $114 | (HEAP8[$0 + ($$6223 + $107) >> 0] | 0) != 0;
       $201 = $115;
      }
      $$6223 = $$6223 + -1 | 0;
      $112 = $200;
      $113 = $201;
     }
     $$2215 = $$2215 + -1 | 0;
     $190 = $112;
     $191 = $113;
    }
    break;
   }
  case 3:
   {
    $$7224 = $11;
    $188 = 0;
    $189 = 0;
    while (1) {
     if (($$7224 | 0) <= -1) {
      $149 = $188;
      $173 = $189;
      break L31;
     }
     $125 = ($$7224 | 0) == ($11 | 0);
     $126 = ($$7224 | 0) == 0;
     $$3216 = 0;
     $132 = $188;
     $133 = $189;
     while (1) {
      if (($$3216 | 0) >= ($1 | 0)) break;
      if ($125 & ($$3216 | 0) == 0 | ($$3216 | $$7224 | 0) == 0 | $126 & ($$3216 | 0) == ($11 | 0)) {
       $202 = $132;
       $203 = $133;
      } else {
       $134 = _bitshift64Shl($132 | 0, $133 | 0, 1) | 0;
       $135 = getTempRet0() | 0;
       $138 = $0 + ((Math_imul($$3216, $1) | 0) + $$7224) | 0;
       $202 = $134 | (HEAP8[$138 >> 0] | 0) != 0;
       $203 = $135;
      }
      $$3216 = $$3216 + 1 | 0;
      $132 = $202;
      $133 = $203;
     }
     $$7224 = $$7224 + -1 | 0;
     $188 = $132;
     $189 = $133;
    }
    break;
   }
  default:
   {
    $149 = 0;
    $173 = 0;
   }
  } while (0);
  HEAPF64[$4 >> 3] = ($$0225 | 0) > 30 ? 1.0 : +($$0225 | 0) / 30.0;
  switch ($5 | 0) {
  case 259:
   {
    $150 = HEAP8[240 + $149 >> 0] | 0;
    $151 = $150 << 24 >> 24;
    $154 = $9;
    HEAP32[$154 >> 2] = $151;
    HEAP32[$154 + 4 >> 2] = (($151 | 0) < 0) << 31 >> 31;
    if ($150 << 24 >> 24 < 0) {
     HEAP32[$2 >> 2] = -1;
     HEAPF64[$4 >> 3] = -1.0;
     $$0212 = -4;
     break L1;
    }
    break;
   }
  case 515:
   {
    $160 = HEAP8[112 + $149 >> 0] | 0;
    $161 = $160 << 24 >> 24;
    $164 = $9;
    HEAP32[$164 >> 2] = $161;
    HEAP32[$164 + 4 >> 2] = (($161 | 0) < 0) << 31 >> 31;
    if ($6 | 0) HEAP32[$6 >> 2] = HEAPU8[176 + $149 >> 0];
    if ($160 << 24 >> 24 < 0) {
     HEAP32[$2 >> 2] = -1;
     HEAPF64[$4 >> 3] = -1.0;
     $$0212 = -4;
     break L1;
    }
    break;
   }
  case 772:
  case 1028:
  case 1029:
  case 1285:
   {
    $174 = _decode_bch($5, $149, $173, 0, $9) | 0;
    if (($174 | 0) < 0) {
     HEAP32[$2 >> 2] = -1;
     HEAPF64[$4 >> 3] = -1.0;
     $$0212 = -4;
     break L1;
    }
    if (($6 | 0) != 0 & ($174 | 0) != 0) HEAP32[$6 >> 2] = $174;
    break;
   }
  default:
   {
    $178 = $9;
    HEAP32[$178 >> 2] = $149;
    HEAP32[$178 + 4 >> 2] = $173;
   }
  }
  HEAP32[$2 >> 2] = HEAP32[$9 >> 2];
  $$0212 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0212 | 0;
}

function _kpmMergeRefDataSet($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0181 = 0, $$0182 = 0, $$0185 = 0, $$0191 = 0, $$0193 = 0, $$1 = 0, $$1183 = 0, $$1186 = 0, $$1192 = 0, $$1194 = 0, $$2184 = 0, $$2187 = 0, $$2195 = 0, $$3 = 0, $$3188 = 0, $$4 = 0, $$4189 = 0, $$5 = 0, $$5190 = 0, $$pre$phiZ2D = 0, $$pre205 = 0, $103 = 0, $11 = 0, $113 = 0, $118 = 0, $121 = 0, $129 = 0, $131 = 0, $14 = 0, $142 = 0, $143 = 0, $146 = 0, $148 = 0, $15 = 0, $156 = 0, $158 = 0, $162 = 0, $163 = 0, $164 = 0, $167 = 0, $17 = 0, $171 = 0, $176 = 0, $18 = 0, $20 = 0, $33 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $58 = 0, $6 = 0, $60 = 0, $64 = 0, $65 = 0, $66 = 0, $74 = 0, $83 = 0, $85 = 0, $89 = 0, $96 = 0, $98 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 if (($0 | 0) != 0 & ($1 | 0) != 0) {
  $4 = HEAP32[$0 >> 2] | 0;
  do if (!$4) {
   $6 = _malloc(16) | 0;
   HEAP32[$0 >> 2] = $6;
   if (!$6) {
    _arLog(0, 3, 20454, $vararg_buffer1);
    _exit(1);
   } else {
    HEAP32[$6 + 4 >> 2] = 0;
    HEAP32[$6 >> 2] = 0;
    HEAP32[$6 + 12 >> 2] = 0;
    HEAP32[$6 + 8 >> 2] = 0;
    $14 = $6;
    $176 = $6;
    break;
   }
  } else {
   $14 = $4;
   $176 = $4;
  } while (0);
  $11 = HEAP32[$1 >> 2] | 0;
  if (!$11) $$0 = 0; else {
   $15 = HEAP32[$14 + 4 >> 2] | 0;
   $17 = HEAP32[$11 + 4 >> 2] | 0;
   $18 = $17 + $15 | 0;
   $20 = _malloc($18 * 132 | 0) | 0;
   if (!$20) {
    _arLog(0, 3, 20454, $vararg_buffer3);
    _exit(1);
   }
   $$0185 = 0;
   while (1) {
    if (($$0185 | 0) >= ($15 | 0)) break;
    _memcpy($20 + ($$0185 * 132 | 0) | 0, (HEAP32[$14 >> 2] | 0) + ($$0185 * 132 | 0) | 0, 132) | 0;
    $$0185 = $$0185 + 1 | 0;
   }
   $$1186 = 0;
   while (1) {
    if (($$1186 | 0) >= ($17 | 0)) break;
    _memcpy($20 + (($$1186 + $15 | 0) * 132 | 0) | 0, (HEAP32[$11 >> 2] | 0) + ($$1186 * 132 | 0) | 0, 132) | 0;
    $$1186 = $$1186 + 1 | 0;
   }
   $33 = HEAP32[$14 >> 2] | 0;
   if (!$33) $35 = $176; else {
    _free($33);
    $35 = HEAP32[$0 >> 2] | 0;
   }
   HEAP32[$35 >> 2] = $20;
   $36 = HEAP32[$0 >> 2] | 0;
   HEAP32[$36 + 4 >> 2] = $18;
   $39 = HEAP32[$36 + 12 >> 2] | 0;
   $40 = HEAP32[$1 >> 2] | 0;
   $42 = HEAP32[$40 + 12 >> 2] | 0;
   $43 = $40 + 8 | 0;
   $44 = $36 + 8 | 0;
   $$0191 = 0;
   $$2187 = 0;
   while (1) {
    if (($$2187 | 0) >= ($42 | 0)) break;
    $$0182 = 0;
    while (1) {
     if (($$0182 | 0) >= ($39 | 0)) {
      $$1192 = $$0191;
      break;
     }
     if ((HEAP32[(HEAP32[$43 >> 2] | 0) + ($$2187 * 12 | 0) + 8 >> 2] | 0) == (HEAP32[(HEAP32[$44 >> 2] | 0) + ($$0182 * 12 | 0) + 8 >> 2] | 0)) {
      label = 23;
      break;
     } else $$0182 = $$0182 + 1 | 0;
    }
    if ((label | 0) == 23) {
     label = 0;
     $$1192 = $$0191 + 1 | 0;
    }
    $$0191 = $$1192;
    $$2187 = $$2187 + 1 | 0;
   }
   $58 = $42 + $39 - $$0191 | 0;
   $60 = _malloc($58 * 12 | 0) | 0;
   if (!$60) {
    _arLog(0, 3, 20454, $vararg_buffer5);
    _exit(1);
   }
   $$3188 = 0;
   while (1) {
    if (($$3188 | 0) >= ($39 | 0)) break;
    $64 = (HEAP32[$0 >> 2] | 0) + 8 | 0;
    $65 = HEAP32[$64 >> 2] | 0;
    $66 = $65 + ($$3188 * 12 | 0) + 8 | 0;
    HEAP32[$60 + ($$3188 * 12 | 0) + 8 >> 2] = HEAP32[$66 >> 2];
    $$0193 = HEAP32[$65 + ($$3188 * 12 | 0) + 4 >> 2] | 0;
    $$1183 = 0;
    while (1) {
     if (($$1183 | 0) >= ($42 | 0)) break;
     $74 = HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0;
     if ((HEAP32[$74 + ($$1183 * 12 | 0) + 8 >> 2] | 0) == (HEAP32[$66 >> 2] | 0)) $$1194 = (HEAP32[$74 + ($$1183 * 12 | 0) + 4 >> 2] | 0) + $$0193 | 0; else $$1194 = $$0193;
     $$0193 = $$1194;
     $$1183 = $$1183 + 1 | 0;
    }
    $83 = $60 + ($$3188 * 12 | 0) | 0;
    $85 = _malloc($$0193 * 12 | 0) | 0;
    HEAP32[$83 >> 2] = $85;
    if (!$85) {
     label = 36;
     break;
    }
    $89 = HEAP32[(HEAP32[$64 >> 2] | 0) + ($$3188 * 12 | 0) + 4 >> 2] | 0;
    $$2184 = 0;
    while (1) {
     if (($$2184 | 0) >= ($89 | 0)) break;
     $96 = (HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] | 0) + ($$3188 * 12 | 0) >> 2] | 0) + ($$2184 * 12 | 0) | 0;
     $98 = (HEAP32[$83 >> 2] | 0) + ($$2184 * 12 | 0) | 0;
     HEAP32[$98 >> 2] = HEAP32[$96 >> 2];
     HEAP32[$98 + 4 >> 2] = HEAP32[$96 + 4 >> 2];
     HEAP32[$98 + 8 >> 2] = HEAP32[$96 + 8 >> 2];
     $$2184 = $$2184 + 1 | 0;
    }
    $$3 = 0;
    while (1) {
     if (($$3 | 0) >= ($42 | 0)) break;
     $103 = HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0;
     if ((HEAP32[$103 + ($$3 * 12 | 0) + 8 >> 2] | 0) == (HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] | 0) + ($$3188 * 12 | 0) + 8 >> 2] | 0)) {
      label = 43;
      break;
     }
     $$3 = $$3 + 1 | 0;
    }
    L56 : do if ((label | 0) == 43) {
     label = 0;
     $$0181 = 0;
     $113 = $103;
     while (1) {
      if (($$0181 | 0) >= (HEAP32[$113 + ($$3 * 12 | 0) + 4 >> 2] | 0)) break L56;
      $118 = (HEAP32[$113 + ($$3 * 12 | 0) >> 2] | 0) + ($$0181 * 12 | 0) | 0;
      $121 = (HEAP32[$83 >> 2] | 0) + (($$0181 + $89 | 0) * 12 | 0) | 0;
      HEAP32[$121 >> 2] = HEAP32[$118 >> 2];
      HEAP32[$121 + 4 >> 2] = HEAP32[$118 + 4 >> 2];
      HEAP32[$121 + 8 >> 2] = HEAP32[$118 + 8 >> 2];
      $$0181 = $$0181 + 1 | 0;
      $113 = HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0;
     }
    } while (0);
    HEAP32[$60 + ($$3188 * 12 | 0) + 4 >> 2] = $$0193;
    $$3188 = $$3188 + 1 | 0;
   }
   if ((label | 0) == 36) {
    _arLog(0, 3, 20454, $vararg_buffer7);
    _exit(1);
   }
   $$1 = 0;
   $$4189 = 0;
   while (1) {
    if (($$4189 | 0) >= ($42 | 0)) break;
    $129 = HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0;
    $131 = HEAP32[$129 + ($$4189 * 12 | 0) + 8 >> 2] | 0;
    $$4 = 0;
    while (1) {
     if (($$4 | 0) >= ($39 | 0)) {
      label = 53;
      break;
     }
     if (($131 | 0) == (HEAP32[(HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] | 0) + ($$4 * 12 | 0) + 8 >> 2] | 0)) {
      label = 52;
      break;
     } else $$4 = $$4 + 1 | 0;
    }
    if ((label | 0) == 52) {
     label = 0;
     $$2195 = $$1 + 1 | 0;
    } else if ((label | 0) == 53) {
     label = 0;
     $142 = $$4189 + $39 - $$1 | 0;
     $143 = $60 + ($142 * 12 | 0) | 0;
     HEAP32[$60 + ($142 * 12 | 0) + 8 >> 2] = $131;
     $146 = HEAP32[$129 + ($$4189 * 12 | 0) + 4 >> 2] | 0;
     $148 = _malloc($146 * 12 | 0) | 0;
     HEAP32[$143 >> 2] = $148;
     if (!$148) {
      label = 55;
      break;
     }
     $$5 = 0;
     while (1) {
      if (($$5 | 0) >= ($146 | 0)) break;
      $156 = (HEAP32[(HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0) + ($$4189 * 12 | 0) >> 2] | 0) + ($$5 * 12 | 0) | 0;
      $158 = (HEAP32[$143 >> 2] | 0) + ($$5 * 12 | 0) | 0;
      HEAP32[$158 >> 2] = HEAP32[$156 >> 2];
      HEAP32[$158 + 4 >> 2] = HEAP32[$156 + 4 >> 2];
      HEAP32[$158 + 8 >> 2] = HEAP32[$156 + 8 >> 2];
      $$5 = $$5 + 1 | 0;
     }
     HEAP32[$60 + ($142 * 12 | 0) + 4 >> 2] = $146;
     $$2195 = $$1;
    }
    $$1 = $$2195;
    $$4189 = $$4189 + 1 | 0;
   }
   if ((label | 0) == 55) {
    _arLog(0, 3, 20454, $vararg_buffer9);
    _exit(1);
   }
   $162 = HEAP32[$0 >> 2] | 0;
   $163 = $162 + 8 | 0;
   $164 = HEAP32[$163 >> 2] | 0;
   if (!$164) $$pre$phiZ2D = $163; else {
    $$5190 = 0;
    $167 = $162;
    $171 = $164;
    while (1) {
     if (($$5190 | 0) >= (HEAP32[$167 + 12 >> 2] | 0)) break;
     _free(HEAP32[$171 + ($$5190 * 12 | 0) >> 2] | 0);
     $$pre205 = HEAP32[$0 >> 2] | 0;
     $$5190 = $$5190 + 1 | 0;
     $167 = $$pre205;
     $171 = HEAP32[$$pre205 + 8 >> 2] | 0;
    }
    _free($171);
    $$pre$phiZ2D = (HEAP32[$0 >> 2] | 0) + 8 | 0;
   }
   HEAP32[$$pre$phiZ2D >> 2] = $60;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] = $58;
   _kpmDeleteRefDataSet($1) | 0;
   $$0 = 0;
  }
 } else {
  _arLog(0, 3, 19959, $vararg_buffer);
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _arMultiReadConfigFile($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0151 = 0, $$0152 = 0, $$0154 = 0, $$1 = 0, $$1$ph = 0, $$2 = 0, $$sink204 = 0, $$sink205 = 0, $10 = 0, $114 = 0, $12 = 0, $125 = 0, $15 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $37 = 0, $4 = 0, $41 = 0, $5 = 0, $51 = 0, $52 = 0, $56 = 0, $57 = 0, $59 = 0, $6 = 0, $7 = 0, $75 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $86 = 0.0, $90 = 0.0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer17 = 0, $vararg_buffer21 = 0, $vararg_buffer24 = 0, $vararg_buffer28 = 0, $vararg_buffer31 = 0, $vararg_buffer35 = 0, $vararg_buffer41 = 0, $vararg_buffer45 = 0, $vararg_buffer49 = 0, $vararg_buffer5 = 0, $vararg_buffer55 = 0, $vararg_buffer59 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2528 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2528);
 $vararg_buffer59 = sp + 2512 | 0;
 $vararg_buffer55 = sp + 2504 | 0;
 $vararg_buffer49 = sp + 2488 | 0;
 $vararg_buffer45 = sp + 2480 | 0;
 $vararg_buffer41 = sp + 2472 | 0;
 $vararg_buffer35 = sp + 2456 | 0;
 $vararg_buffer31 = sp + 2448 | 0;
 $vararg_buffer28 = sp + 2440 | 0;
 $vararg_buffer24 = sp + 2432 | 0;
 $vararg_buffer21 = sp + 2424 | 0;
 $vararg_buffer17 = sp + 2416 | 0;
 $vararg_buffer13 = sp + 2408 | 0;
 $vararg_buffer11 = sp + 2400 | 0;
 $vararg_buffer8 = sp + 2392 | 0;
 $vararg_buffer5 = sp + 2384 | 0;
 $vararg_buffer1 = sp + 2376 | 0;
 $vararg_buffer = sp + 2368 | 0;
 $2 = sp + 2304 | 0;
 $3 = sp + 2048 | 0;
 $4 = sp;
 $5 = sp + 2524 | 0;
 $6 = sp + 2520 | 0;
 $7 = sp + 2516 | 0;
 $8 = _fopen($0, 19680) | 0;
 do if (!$8) {
  HEAP32[$vararg_buffer >> 2] = $0;
  _arLog(0, 3, 18690, $vararg_buffer);
  $10 = ___errno_location() | 0;
  $12 = _strerror(HEAP32[$10 >> 2] | 0) | 0;
  HEAP32[$vararg_buffer1 >> 2] = 58334;
  HEAP32[$vararg_buffer1 + 4 >> 2] = $12;
  _arLog(0, 3, 19708, $vararg_buffer1);
  $$0154 = 0;
 } else {
  _get_buff($3, $8);
  HEAP32[$vararg_buffer5 >> 2] = $6;
  if ((_sscanf($3, 19714, $vararg_buffer5) | 0) != 1) {
   HEAP32[$vararg_buffer8 >> 2] = $0;
   _arLog(0, 3, 18743, $vararg_buffer8);
   _fclose($8) | 0;
   $$0154 = 0;
   break;
  }
  $15 = HEAP32[$6 >> 2] | 0;
  $17 = _malloc($15 * 320 | 0) | 0;
  if (!$17) {
   _arLog(0, 3, 20454, $vararg_buffer11);
   _exit(1);
  }
  $19 = ($1 | 0) == 0;
  $20 = $2 + 8 | 0;
  $21 = $2 + 16 | 0;
  $22 = $2 + 24 | 0;
  $23 = $2 + 32 | 0;
  $24 = $2 + 40 | 0;
  $25 = $2 + 48 | 0;
  $26 = $2 + 56 | 0;
  $$0151 = 0;
  $$0152 = 0;
  $28 = $15;
  L10 : while (1) {
   if (($$0151 | 0) >= ($28 | 0)) {
    label = 31;
    break;
   }
   _get_buff($3, $8);
   $29 = $17 + ($$0151 * 320 | 0) | 0;
   $30 = $17 + ($$0151 * 320 | 0) + 312 | 0;
   HEAP32[$vararg_buffer13 >> 2] = $30;
   HEAP32[$vararg_buffer13 + 4 >> 2] = $5;
   if ((_sscanf($3, 18844, $vararg_buffer13) | 0) == 1) {
    $41 = HEAP32[$30 >> 2] | 0;
    HEAP32[$29 >> 2] = ($41 & -32768 | 0) == 0 & 0 == 0 ? $41 & 32767 : 0;
    $$sink204 = 2;
    $$sink205 = 1;
   } else {
    if ($19) {
     label = 11;
     break;
    }
    if (!(_arUtilGetDirectoryNameFromPath($4, $0, 2048, 1) | 0)) {
     label = 13;
     break;
    }
    _strncat($4, $3, 2047 - (_strlen($4) | 0) | 0) | 0;
    $37 = _arPattLoad($1, $4) | 0;
    HEAP32[$29 >> 2] = $37;
    if (($37 | 0) < 0) {
     label = 15;
     break;
    } else {
     $$sink204 = 1;
     $$sink205 = 0;
    }
   }
   HEAP32[$17 + ($$0151 * 320 | 0) + 4 >> 2] = $$sink205;
   $51 = $$0152 | $$sink204;
   _get_buff($3, $8);
   $52 = $17 + ($$0151 * 320 | 0) + 8 | 0;
   HEAP32[$vararg_buffer28 >> 2] = $52;
   if ((_sscanf($3, 19140, $vararg_buffer28) | 0) != 1) {
    label = 18;
    break;
   }
   _get_buff($3, $8);
   $56 = $17 + ($$0151 * 320 | 0) + 16 | 0;
   $57 = $17 + ($$0151 * 320 | 0) + 24 | 0;
   $59 = $17 + ($$0151 * 320 | 0) + 40 | 0;
   HEAP32[$vararg_buffer35 >> 2] = $56;
   HEAP32[$vararg_buffer35 + 4 >> 2] = $57;
   HEAP32[$vararg_buffer35 + 8 >> 2] = $17 + ($$0151 * 320 | 0) + 32;
   HEAP32[$vararg_buffer35 + 12 >> 2] = $59;
   if ((_sscanf($3, 19249, $vararg_buffer35) | 0) == 4) $$1$ph = 1; else {
    HEAP32[$vararg_buffer41 >> 2] = $vararg_buffer5;
    HEAP32[$vararg_buffer41 + 4 >> 2] = $7;
    if ((_sscanf($3, 19265, $vararg_buffer41) | 0) != 2) {
     label = 23;
     break;
    }
    $$1$ph = 0;
   }
   $$1 = $$1$ph;
   do {
    _get_buff($3, $8);
    HEAP32[$vararg_buffer49 >> 2] = $17 + ($$0151 * 320 | 0) + 16 + ($$1 << 5);
    HEAP32[$vararg_buffer49 + 4 >> 2] = $17 + ($$0151 * 320 | 0) + 16 + ($$1 << 5) + 8;
    HEAP32[$vararg_buffer49 + 8 >> 2] = $17 + ($$0151 * 320 | 0) + 16 + ($$1 << 5) + 16;
    HEAP32[$vararg_buffer49 + 12 >> 2] = $17 + ($$0151 * 320 | 0) + 16 + ($$1 << 5) + 24;
    if ((_sscanf($3, 19249, $vararg_buffer49) | 0) != 4) {
     label = 25;
     break L10;
    }
    $$1 = $$1 + 1 | 0;
   } while ($$1 >>> 0 < 3);
   _arUtilMatInv($56, $17 + ($$0151 * 320 | 0) + 112 | 0) | 0;
   $75 = +HEAPF64[$52 >> 3];
   $76 = $75 * -.5;
   HEAPF64[$2 >> 3] = $76;
   $77 = $75 * .5;
   HEAPF64[$20 >> 3] = $77;
   HEAPF64[$21 >> 3] = $77;
   HEAPF64[$22 >> 3] = $77;
   HEAPF64[$23 >> 3] = $77;
   HEAPF64[$24 >> 3] = $76;
   HEAPF64[$25 >> 3] = $76;
   HEAPF64[$26 >> 3] = $76;
   $78 = $17 + ($$0151 * 320 | 0) + 48 | 0;
   $79 = $17 + ($$0151 * 320 | 0) + 56 | 0;
   $80 = $17 + ($$0151 * 320 | 0) + 72 | 0;
   $81 = $17 + ($$0151 * 320 | 0) + 80 | 0;
   $82 = $17 + ($$0151 * 320 | 0) + 88 | 0;
   $83 = $17 + ($$0151 * 320 | 0) + 104 | 0;
   $$2 = 0;
   while (1) {
    if (($$2 | 0) == 4) break;
    $86 = +HEAPF64[$2 + ($$2 << 4) >> 3];
    $90 = +HEAPF64[$2 + ($$2 << 4) + 8 >> 3];
    HEAPF64[$17 + ($$0151 * 320 | 0) + 208 + ($$2 * 24 | 0) >> 3] = +HEAPF64[$59 >> 3] + (+HEAPF64[$56 >> 3] * $86 + +HEAPF64[$57 >> 3] * $90);
    HEAPF64[$17 + ($$0151 * 320 | 0) + 208 + ($$2 * 24 | 0) + 8 >> 3] = +HEAPF64[$80 >> 3] + ($86 * +HEAPF64[$78 >> 3] + $90 * +HEAPF64[$79 >> 3]);
    HEAPF64[$17 + ($$0151 * 320 | 0) + 208 + ($$2 * 24 | 0) + 16 >> 3] = +HEAPF64[$83 >> 3] + ($86 * +HEAPF64[$81 >> 3] + $90 * +HEAPF64[$82 >> 3]);
    $$2 = $$2 + 1 | 0;
   }
   $$0151 = $$0151 + 1 | 0;
   $$0152 = $51;
   $28 = HEAP32[$6 >> 2] | 0;
  }
  if ((label | 0) == 11) {
   HEAP32[$vararg_buffer17 >> 2] = $0;
   HEAP32[$vararg_buffer17 + 4 >> 2] = $3;
   _arLog(0, 3, 18851, $vararg_buffer17);
  } else if ((label | 0) == 13) {
   HEAP32[$vararg_buffer21 >> 2] = $0;
   _arLog(0, 3, 18979, $vararg_buffer21);
  } else if ((label | 0) == 15) {
   HEAP32[$vararg_buffer24 >> 2] = $0;
   HEAP32[$vararg_buffer24 + 4 >> 2] = $4;
   _arLog(0, 3, 19063, $vararg_buffer24);
  } else if ((label | 0) == 18) {
   HEAP32[$vararg_buffer31 >> 2] = $0;
   HEAP32[$vararg_buffer31 + 4 >> 2] = $$0151 + 1;
   _arLog(0, 3, 19144, $vararg_buffer31);
  } else if ((label | 0) == 23) {
   HEAP32[$vararg_buffer45 >> 2] = $0;
   HEAP32[$vararg_buffer45 + 4 >> 2] = $$0151 + 1;
   _arLog(0, 3, 19271, $vararg_buffer45);
  } else if ((label | 0) == 25) {
   HEAP32[$vararg_buffer55 >> 2] = $0;
   HEAP32[$vararg_buffer55 + 4 >> 2] = $$0151 + 1;
   _arLog(0, 3, 19271, $vararg_buffer55);
  } else if ((label | 0) == 31) {
   _fclose($8) | 0;
   $114 = _malloc(136) | 0;
   if (!$114) {
    _arLog(0, 3, 20454, $vararg_buffer59);
    _exit(1);
   }
   HEAP32[$114 >> 2] = $17;
   HEAP32[$114 + 4 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$114 + 128 >> 2] = 0;
   HEAP32[$114 + 104 >> 2] = 0;
   do if (($$0152 & 3 | 0) == 3) HEAP32[$114 + 108 >> 2] = 2; else {
    $125 = $114 + 108 | 0;
    if (!($$0152 & 1)) {
     HEAP32[$125 >> 2] = 1;
     break;
    } else {
     HEAP32[$125 >> 2] = 0;
     break;
    }
   } while (0);
   HEAPF64[$114 + 112 >> 3] = .5;
   HEAPF64[$114 + 120 >> 3] = .5;
   $$0154 = $114;
   break;
  }
  _fclose($8) | 0;
  _free($17);
  $$0154 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0154 | 0;
}

function __ZN6vision26PreemptiveRobustHomographyIfEEbPT_PKS1_S4_iS4_iRNSt3__26vectorIS1_NS5_9allocatorIS1_EEEERNS6_IiNS7_IiEEEERNS6_INS5_4pairIS1_iEENS7_ISF_EEEES1_iii($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = +$9;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 var $$0 = 0, $$0156 = 0, $$0157 = 0, $$0158 = 0, $$0159 = 0, $$0160 = 0, $$0161 = 0, $$0162 = 0.0, $$0163 = 0, $$0165 = 0, $$0166 = 0, $$1 = 0.0, $$1164 = 0, $$1167 = 0, $106 = 0, $110 = 0, $113 = 0, $116 = 0, $119 = 0, $13 = 0, $131 = 0.0, $133 = 0, $14 = 0, $141 = 0, $147 = 0, $148 = 0, $154 = 0, $159 = 0, $162 = 0.0, $163 = 0, $164 = 0, $173 = 0.0, $178 = 0, $27 = 0, $32 = 0, $36 = 0, $39 = 0, $43 = 0, $49 = 0, $54 = 0, $58 = 0, $70 = 0, $75 = 0, $79 = 0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $90 = 0, $93 = 0, $96 = 0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $13 = sp + 8 | 0;
 $14 = sp;
 if ((HEAP32[$6 + 4 >> 2] | 0) - (HEAP32[$6 >> 2] | 0) >> 2 >>> 0 < ($10 * 9 | 0) >>> 0) {
  $27 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 29700) | 0, 29758) | 0, 33528) | 0, 119) | 0, 33535) | 0, 29888) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $27 + (HEAP32[(HEAP32[$27 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 57884) | 0;
  $36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 63]($32, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($27, $36) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($27) | 0;
  _abort();
 }
 $39 = HEAP32[$7 >> 2] | 0;
 $43 = $39;
 if ((HEAP32[$7 + 4 >> 2] | 0) - $39 >> 2 >>> 0 < $3 >>> 0) {
  $49 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 29938) | 0, 29758) | 0, 33528) | 0, 120) | 0, 33535) | 0, 29988) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $49 + (HEAP32[(HEAP32[$49 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $54 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 57884) | 0;
  $58 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$54 >> 2] | 0) + 28 >> 2] & 63]($54, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($49, $58) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($49) | 0;
  _abort();
 }
 if ((HEAP32[$8 + 4 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) >> 3 >>> 0 < $10 >>> 0) {
  $70 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30030) | 0, 29758) | 0, 33528) | 0, 121) | 0, 33535) | 0, 30092) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $70 + (HEAP32[(HEAP32[$70 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $75 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 57884) | 0;
  $79 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$75 >> 2] | 0) + 28 >> 2] & 63]($75, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($70, $79) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($70) | 0;
  _abort();
 }
 if (($3 | 0) < 4) $$0157 = 0; else {
  HEAP32[$14 >> 2] = 1234;
  $81 = +__ZN6vision3sqrIfEET_S1_($9);
  $82 = __ZN6vision4min2IiEET_S1_S1_($12, $3) | 0;
  __ZN6vision16SequentialVectorIiEEvPT_iS1_($43, $3, 0);
  __ZN6vision12ArrayShuffleIiEEvPT_iiRi($43, $3, $3, $14);
  $83 = $43 + 4 | 0;
  $84 = $43 + 8 | 0;
  $85 = $43 + 12 | 0;
  $86 = ($5 | 0) > 0;
  $$0161 = 0;
  $$0166 = 0;
  while (1) {
   if (!(($$0166 | 0) < ($10 | 0) & ($$0161 | 0) < ($11 | 0))) break;
   __ZN6vision12ArrayShuffleIiEEvPT_iiRi($43, $3, 4, $14);
   $90 = HEAP32[$43 >> 2] << 1;
   $93 = HEAP32[$83 >> 2] << 1;
   $96 = HEAP32[$84 >> 2] << 1;
   $99 = HEAP32[$85 >> 2] << 1;
   do if (__ZN6vision40Homography4PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_S3_S3_($1 + ($90 << 2) | 0, $1 + ($93 << 2) | 0, $1 + ($96 << 2) | 0, $1 + ($99 << 2) | 0, $2 + ($90 << 2) | 0, $2 + ($93 << 2) | 0, $2 + ($96 << 2) | 0, $2 + ($99 << 2) | 0) | 0) {
    $106 = $$0166 * 9 | 0;
    $110 = HEAP32[$43 >> 2] << 1;
    $113 = HEAP32[$83 >> 2] << 1;
    $116 = HEAP32[$84 >> 2] << 1;
    $119 = HEAP32[$85 >> 2] << 1;
    if (__ZN6vision22SolveHomography4PointsIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_((HEAP32[$6 >> 2] | 0) + ($106 << 2) | 0, $1 + ($110 << 2) | 0, $1 + ($113 << 2) | 0, $1 + ($116 << 2) | 0, $1 + ($119 << 2) | 0, $2 + ($110 << 2) | 0, $2 + ($113 << 2) | 0, $2 + ($116 << 2) | 0, $2 + ($119 << 2) | 0) | 0) {
     if ($86) if (!(__ZN6vision39HomographyPointsGeometricallyConsistentIfEEbPKT_S3_i((HEAP32[$6 >> 2] | 0) + ($106 << 2) | 0, $4, $5) | 0)) {
      $$1167 = $$0166;
      break;
     }
     $$1167 = $$0166 + 1 | 0;
    } else $$1167 = $$0166;
   } else $$1167 = $$0166; while (0);
   $$0161 = $$0161 + 1 | 0;
   $$0166 = $$1167;
  }
  $131 = 1.0 / $81;
  if (!$$0166) $$0157 = 0; else {
   $133 = HEAP32[$8 >> 2] | 0;
   $$0160 = 0;
   while (1) {
    if (($$0160 | 0) >= ($$0166 | 0)) break;
    HEAPF32[$133 + ($$0160 << 3) >> 2] = 0.0;
    HEAP32[$133 + ($$0160 << 3) + 4 >> 2] = $$0160;
    $$0160 = $$0160 + 1 | 0;
   }
   $$0159 = 0;
   $$0165 = $$0166;
   while (1) {
    if (!(($$0165 | 0) > 2 & ($$0159 | 0) < ($3 | 0))) break;
    $147 = (__ZN6vision4min2IiEET_S1_S1_($82, $3 - $$0159 | 0) | 0) + $$0159 | 0;
    $$0158 = 0;
    $148 = HEAP32[$8 >> 2] | 0;
    while (1) {
     if (($$0158 | 0) == ($$0165 | 0)) break;
     $154 = (HEAP32[$6 >> 2] | 0) + ((HEAP32[$148 + ($$0158 << 3) + 4 >> 2] | 0) * 9 << 2) | 0;
     $$0156 = $$0159;
     $178 = $148;
     while (1) {
      if (($$0156 | 0) >= ($147 | 0)) break;
      $159 = HEAP32[$43 + ($$0156 << 2) >> 2] << 1;
      $162 = +__ZN6vision32CauchyProjectiveReprojectionCostIfEET_PKS1_S3_S3_S1_($154, $1 + ($159 << 2) | 0, $2 + ($159 << 2) | 0, $131);
      $163 = HEAP32[$8 >> 2] | 0;
      $164 = $163 + ($$0158 << 3) | 0;
      HEAPF32[$164 >> 2] = $162 + +HEAPF32[$164 >> 2];
      $$0156 = $$0156 + 1 | 0;
      $178 = $163;
     }
     $$0158 = $$0158 + 1 | 0;
     $148 = $178;
    }
    __ZN6vision10FastMedianIfiEENSt3__24pairIT_T0_EEPS5_i($13, $148, $$0165);
    $$0159 = $147;
    $$0165 = $$0165 >> 1;
   }
   $141 = HEAP32[$8 >> 2] | 0;
   $$0 = 1;
   $$0162 = +HEAPF32[$141 >> 2];
   $$0163 = HEAP32[$141 + 4 >> 2] | 0;
   while (1) {
    if (($$0 | 0) >= ($$0165 | 0)) break;
    $173 = +HEAPF32[$141 + ($$0 << 3) >> 2];
    if ($173 < $$0162) {
     $$1 = $173;
     $$1164 = HEAP32[$141 + ($$0 << 3) + 4 >> 2] | 0;
    } else {
     $$1 = $$0162;
     $$1164 = $$0163;
    }
    $$0 = $$0 + 1 | 0;
    $$0162 = $$1;
    $$0163 = $$1164;
   }
   __ZN6vision11CopyVector9IfEEvPT_PKS1_($0, (HEAP32[$6 >> 2] | 0) + ($$0163 * 9 << 2) | 0);
   __ZN6vision19NormalizeHomographyIfEEvPT_($0);
   $$0157 = 1;
  }
 }
 STACKTOP = sp;
 return $$0157 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i93 = 0, $$0$i$i$i = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i92 = 0, $$067 = 0, $$069 = 0, $$083 = 0, $$3 = 0, $$pre = 0, $$sroa$0$0$$sroa_idx$i = 0, $$sroa$0$0$copyload$i86103 = 0, $100 = 0, $101 = 0, $109 = 0, $113 = 0, $114 = 0, $115 = 0, $127 = 0, $13 = 0, $16 = 0, $18 = 0, $19 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $36 = 0, $4 = 0, $48 = 0, $49 = 0, $5 = 0, $53 = 0, $56 = 0, $6 = 0, $64 = 0, $65 = 0, $66 = 0, $79 = 0, $81 = 0, $82 = 0, $83 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 32 | 0;
 $4 = sp + 16 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 do if (($1 - $0 | 0) > 1) if ((HEAP8[$0 >> 0] | 0) == 73) {
  $13 = $2 + 61 | 0;
  $$pre = $2 + 36 | 0;
  if (HEAP8[$13 >> 0] | 0) {
   $16 = HEAP32[$$pre >> 2] | 0;
   $18 = HEAP32[$16 + -16 >> 2] | 0;
   $19 = $16 + -12 | 0;
   $$0$i$i$i = HEAP32[$19 >> 2] | 0;
   while (1) {
    if (($$0$i$i$i | 0) == ($18 | 0)) break;
    $22 = $$0$i$i$i + -16 | 0;
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($22);
    $$0$i$i$i = $22;
   }
   HEAP32[$19 >> 2] = $18;
  }
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = 0;
  HEAP32[$4 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($4, 49665, __ZNSt3__211char_traitsIcE6lengthEPKc(49665) | 0);
  $25 = $2 + 4 | 0;
  $$sroa$0$0$$sroa_idx$i = $2 + 12 | 0;
  $26 = $2 + 40 | 0;
  $27 = $2 + 32 | 0;
  $28 = $4 + 11 | 0;
  $29 = $4 + 4 | 0;
  $30 = $3 + 11 | 0;
  $31 = $3 + 4 | 0;
  $$083 = $0 + 1 | 0;
  while (1) {
   if ((HEAP8[$$083 >> 0] | 0) == 69) break;
   if (HEAP8[$13 >> 0] | 0) {
    HEAP32[$5 >> 2] = HEAP32[$$sroa$0$0$$sroa_idx$i >> 2];
    $36 = HEAP32[$$pre >> 2] | 0;
    if ($36 >>> 0 < (HEAP32[$26 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2IS4_EERKNS1_IT_Lm4096EEE($3, $5);
     HEAP32[$36 >> 2] = 0;
     HEAP32[$36 + 4 >> 2] = 0;
     HEAP32[$36 + 8 >> 2] = 0;
     HEAP32[$36 + 12 >> 2] = HEAP32[$3 >> 2];
     HEAP32[$$pre >> 2] = (HEAP32[$$pre >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($27, $5);
   }
   $48 = ((HEAP32[$25 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   $49 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($$083, $1, $2) | 0;
   $53 = ((HEAP32[$25 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   if (HEAP8[$13 >> 0] | 0) {
    $56 = HEAP32[$$pre >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev($56 + ($$0$i$i$add$i << 4) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$$pre >> 2] = $56 + -16;
   }
   if (($49 | 0) == ($$083 | 0) | ($49 | 0) == ($1 | 0)) {
    label = 53;
    break;
   }
   L29 : do if (HEAP8[$13 >> 0] | 0) {
    $64 = HEAP32[$$pre >> 2] | 0;
    $$sroa$0$0$copyload$i86103 = HEAP32[$$sroa$0$0$$sroa_idx$i >> 2] | 0;
    HEAP32[$3 >> 2] = $$sroa$0$0$copyload$i86103;
    $65 = $64 + -12 | 0;
    $66 = HEAP32[$65 >> 2] | 0;
    if ($66 >>> 0 < (HEAP32[$64 + -8 >> 2] | 0) >>> 0) {
     HEAP32[$66 >> 2] = 0;
     HEAP32[$66 + 4 >> 2] = 0;
     HEAP32[$66 + 8 >> 2] = 0;
     HEAP32[$66 + 12 >> 2] = $$sroa$0$0$copyload$i86103;
     HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($64 + -16 | 0, $3);
    $$067 = $48;
    while (1) {
     if ($$067 >>> 0 >= $53 >>> 0) break L29;
     $79 = HEAP32[(HEAP32[$$pre >> 2] | 0) + -12 >> 2] | 0;
     $81 = (HEAP32[$2 >> 2] | 0) + ($$067 * 24 | 0) | 0;
     $82 = $79 + -12 | 0;
     $83 = HEAP32[$82 >> 2] | 0;
     if (($83 | 0) == (HEAP32[$79 + -8 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($79 + -16 | 0, $81); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($83, $81);
      HEAP32[$82 >> 2] = (HEAP32[$82 >> 2] | 0) + 24;
     }
     $$067 = $$067 + 1 | 0;
    }
   } while (0);
   $$0 = $48;
   while (1) {
    if ($$0 >>> 0 >= $53 >>> 0) break;
    $92 = HEAP8[$28 >> 0] | 0;
    if (($92 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $92 & 255) >>> 0 > 1) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 49853) | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, (HEAP32[$2 >> 2] | 0) + ($$0 * 24 | 0) | 0);
    $100 = HEAP8[$30 >> 0] | 0;
    $101 = $100 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($4, $101 ? HEAP32[$3 >> 2] | 0 : $3, $101 ? HEAP32[$31 >> 2] | 0 : $100 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$0 = $$0 + 1 | 0;
   }
   $$069 = $53;
   while (1) {
    if (($$069 | 0) == ($48 | 0)) break;
    $109 = HEAP32[$25 >> 2] | 0;
    $$0$i$i$idx$i92 = 0;
    while (1) {
     if (($$0$i$i$idx$i92 | 0) == -1) break;
     $$0$i$i$add$i93 = $$0$i$i$idx$i92 + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($109 + ($$0$i$i$add$i93 * 24 | 0) | 0);
     $$0$i$i$idx$i92 = $$0$i$i$add$i93;
    }
    HEAP32[$25 >> 2] = $109 + -24;
    $$069 = $$069 + -1 | 0;
   }
   $$083 = $49;
  }
  if ((label | 0) == 53) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   $$3 = $0;
   break;
  }
  $113 = $$083 + 1 | 0;
  $114 = HEAP8[$28 >> 0] | 0;
  $115 = $114 << 24 >> 24 < 0;
  if ((HEAP8[($115 ? HEAP32[$4 >> 2] | 0 : $4) + ($115 ? HEAP32[$29 >> 2] | 0 : $114 & 255) + -1 >> 0] | 0) == 62) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 51044) | 0; else __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 49667) | 0;
  HEAP32[$6 >> 2] = HEAP32[$4 >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
  $$0$i$i = 0;
  while (1) {
   if (($$0$i$i | 0) == 3) break;
   HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
   $$0$i$i = $$0$i$i + 1 | 0;
  }
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $6);
  $127 = HEAP32[$25 >> 2] | 0;
  if ($127 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($127, $3);
   HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 24;
  } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
  $$3 = $113;
 } else $$3 = $0; else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN46EmscriptenBindingInitializer_constant_bindingsC2Ev($this) {
 $this = $this | 0;
 var $ref$tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $ref$tmp = sp;
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(38285, 29);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38291, 74);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38300, 75);
 __ZN10emscripten8functionIiJiNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(38309, 29);
 __ZN10emscripten8functionIiJiNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(38320, 30);
 __ZN10emscripten8functionIiJiNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(38336, 31);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(38350, 32);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38368, 76);
 __ZN10emscripten8functionIiJNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_(38388, 77);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(38400, 30);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(38417, 33);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(38437, 31);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(38455, 32);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(38477, 34);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(38500, 35);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38529, 78);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38542, 79);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38555, 80);
 __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_(38571, 33);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(38590, 36);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(38600, 37);
 __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_(38613, 38);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38626, 81);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38639, 82);
 __ZN10emscripten8functionIvJiEJEEEvPKcPFT_DpT0_EDpT1_(38658, 140);
 __ZN10emscripten8functionIiJEJEEEvPKcPFT_DpT0_EDpT1_(38670, 1);
 __ZN10emscripten8functionIvJidEJEEEvPKcPFT_DpT0_EDpT1_(38682, 1);
 __ZN10emscripten8functionIdJiEJEEEvPKcPFT_DpT0_EDpT1_(38705, 1);
 __ZN10emscripten8functionIvJidEJEEEvPKcPFT_DpT0_EDpT1_(38728, 2);
 __ZN10emscripten8functionIdJiEJEEEvPKcPFT_DpT0_EDpT1_(38750, 2);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(38772, 49);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38789, 83);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(38806, 50);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38819, 84);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(38832, 51);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38856, 85);
 __ZN10emscripten8functionIvJifEJEEEvPKcPFT_DpT0_EDpT1_(38880, 3);
 __ZN10emscripten8functionIdJiEJEEEvPKcPFT_DpT0_EDpT1_(38893, 3);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(38906, 52);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38924, 86);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(38942, 53);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38958, 87);
 __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_(38974, 54);
 __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_(38991, 88);
 __ZN10emscripten8constantIiEEvPKcRKT_(39008, 13652);
 __ZN10emscripten8constantIiEEvPKcRKT_(39037, 13656);
 __ZN10emscripten8constantIiEEvPKcRKT_(39065, 13660);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39098, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39115, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39131, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39153, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39178, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39203, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 100;
 __ZN10emscripten8constantIiEEvPKcRKT_(39228, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39255, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39281, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39307, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39334, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39361, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(39387, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(39412, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(39450, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39487, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39521, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39545, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(39571, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(39598, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 5;
 __ZN10emscripten8constantIiEEvPKcRKT_(39632, $ref$tmp);
 HEAPF64[$ref$tmp >> 3] = .5;
 __ZN10emscripten8constantIdEEvPKcRKT_(39650, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39671, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39690, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(39708, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(39726, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(39745, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(39767, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 515;
 __ZN10emscripten8constantIiEEvPKcRKT_(39786, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 259;
 __ZN10emscripten8constantIiEEvPKcRKT_(39815, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(39843, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 772;
 __ZN10emscripten8constantIiEEvPKcRKT_(39862, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1028;
 __ZN10emscripten8constantIiEEvPKcRKT_(39892, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(39922, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(39953, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(39989, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(40023, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 0;
 __ZN10emscripten8constantIiEEvPKcRKT_(40061, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 1;
 __ZN10emscripten8constantIiEEvPKcRKT_(40094, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 2;
 __ZN10emscripten8constantIiEEvPKcRKT_(40141, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 3;
 __ZN10emscripten8constantIiEEvPKcRKT_(40183, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 4;
 __ZN10emscripten8constantIiEEvPKcRKT_(40226, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 5;
 __ZN10emscripten8constantIiEEvPKcRKT_(40278, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 6;
 __ZN10emscripten8constantIiEEvPKcRKT_(40329, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 7;
 __ZN10emscripten8constantIiEEvPKcRKT_(40374, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 8;
 __ZN10emscripten8constantIiEEvPKcRKT_(40413, $ref$tmp);
 HEAP32[$ref$tmp >> 2] = 9;
 __ZN10emscripten8constantIiEEvPKcRKT_(40458, $ref$tmp);
 STACKTOP = sp;
 return;
}

function _get_global_id_code($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0177 = 0, $$0178 = 0, $$0178$off = 0, $$0182 = 0, $$0189 = 0, $$0202 = 0, $$0204 = 0, $$1 = 0, $$10 = 0, $$10199 = 0, $$11 = 0, $$11200 = 0, $$1179 = 0, $$1183 = 0, $$1190 = 0, $$12 = 0, $$2 = 0, $$2180 = 0, $$2180$off = 0, $$2191 = 0, $$3 = 0, $$3181 = 0, $$3185 = 0, $$3192 = 0, $$4 = 0, $$4186 = 0, $$4186$off = 0, $$4193 = 0, $$5 = 0, $$5187 = 0, $$5194 = 0, $$6 = 0, $$6188 = 0, $$6188$off = 0, $$6195 = 0, $$7 = 0, $$7196 = 0, $$8 = 0, $$8197 = 0, $$9 = 0, $$9198 = 0, $109 = 0, $113 = 0, $118 = 0, $119 = 0, $120 = 0, $123 = 0, $133 = 0, $137 = 0, $144 = 0.0, $145 = 0, $148 = 0, $15 = 0, $153 = 0, $154 = 0, $19 = 0, $20 = 0, $24 = 0, $38 = 0, $49 = 0, $5 = 0, $50 = 0, $53 = 0, $6 = 0, $63 = 0, $67 = 0, $7 = 0, $71 = 0, $72 = 0, $73 = 0, $78 = 0, $8 = 0, $85 = 0, $89 = 0, $97 = 0, $or$cond229245 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(160);
 $5 = sp + 152 | 0;
 $6 = sp + 128 | 0;
 $7 = sp + 144 | 0;
 $8 = sp;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 182;
 HEAP32[$6 + 8 >> 2] = 195;
 HEAP32[$6 + 12 >> 2] = 13;
 $$0182 = 0;
 $$0202 = 0;
 $$0204 = -1;
 while (1) {
  if (($$0182 | 0) == 4) break;
  $15 = HEAP8[$0 + (HEAP32[$6 + ($$0182 << 2) >> 2] | 0) >> 0] | 0;
  $$0182 = $$0182 + 1 | 0;
  $$0202 = ($15 & 255) > ($$0202 & 255) ? $15 : $$0202;
  $$0204 = ($15 & 255) < ($$0204 & 255) ? $15 : $$0204;
 }
 $19 = $$0202 & 255;
 $20 = $$0204 & 255;
 L5 : do if (($19 - $20 | 0) < 30) {
  HEAP32[$2 >> 2] = 0;
  HEAPF64[$3 >> 3] = -1.0;
  $$0177 = -2;
 } else {
  $24 = ($19 + $20 | 0) >>> 1;
  $$1183 = 0;
  while (1) {
   if (($$1183 | 0) == 4) break;
   HEAP8[$5 + $$1183 >> 0] = $24 >>> 0 > (HEAPU8[$0 + (HEAP32[$6 + ($$1183 << 2) >> 2] | 0) >> 0] | 0) >>> 0 & 1;
   $$1183 = $$1183 + 1 | 0;
  }
  $trunc = 0;
  while (1) {
   if ($trunc >>> 0 >= 4) break;
   $38 = $trunc + 1 | 0;
   if ((HEAP8[$5 + $trunc >> 0] | 0) == 1) if ((HEAP8[$5 + ($38 & 3) >> 0] | 0) == 1) if (!(HEAP8[$5 + ($trunc + 2 & 3) >> 0] | 0)) break;
   $trunc = $38;
  }
  L20 : do switch ($trunc & 2147483647 | 0) {
  case 4:
   {
    HEAP32[$2 >> 2] = 0;
    HEAPF64[$3 >> 3] = -1.0;
    $$0177 = -3;
    break L5;
    break;
   }
  case 0:
   {
    $$0 = 119;
    $$0178 = 0;
    $$0189 = 255;
    while (1) {
     if (($$0178 | 0) == 14) {
      $$12 = $$0189;
      label = 57;
      break L20;
     }
     $$0178$off = $$0178 + -3 | 0;
     $49 = ($$0178 & 2147483646 | 0) == 12;
     $50 = $$0178 * 14 | 0;
     $$1 = $$0;
     $$1190 = $$0189;
     $$3185 = 0;
     while (1) {
      if (($$3185 | 0) == 14) break;
      if (($$3185 + -3 | $$0178$off) >>> 0 < 8) {
       $$2 = $$1;
       $$2191 = $$1190;
      } else {
       $53 = $$3185 & 2147483646;
       if (!(($$3185 | $$0178) & 2147483646)) {
        $$2 = $$1;
        $$2191 = $$1190;
       } else if ($49 & (($53 | 0) == 0 | ($53 | 0) == 12)) {
        $$2 = $$1;
        $$2191 = $$1190;
       } else {
        $63 = (HEAPU8[$0 + ($$3185 + $50) >> 0] | 0) - $24 | 0;
        HEAP8[$8 + $$1 >> 0] = $63 >>> 31;
        $67 = ($63 | 0) > -1 ? $63 : 0 - $63 | 0;
        $$2 = $$1 + -1 | 0;
        $$2191 = ($67 | 0) < ($$1190 | 0) ? $67 : $$1190;
       }
      }
      $$1 = $$2;
      $$1190 = $$2191;
      $$3185 = $$3185 + 1 | 0;
     }
     $$0 = $$1;
     $$0178 = $$0178 + 1 | 0;
     $$0189 = $$1190;
    }
    break;
   }
  case 1:
   {
    $$3 = 119;
    $$3192 = 255;
    $$4186 = 0;
    while (1) {
     if (($$4186 | 0) == 14) {
      $$12 = $$3192;
      label = 57;
      break L20;
     }
     $$4186$off = $$4186 + -3 | 0;
     $71 = $$4186 & 2147483646;
     $72 = ($71 | 0) == 0;
     $73 = ($71 | 0) == 12;
     $$1179 = 13;
     $$4 = $$3;
     $$4193 = $$3192;
     while (1) {
      if (($$1179 | 0) <= -1) break;
      if (($$1179 + -3 | $$4186$off) >>> 0 < 8) {
       $$5 = $$4;
       $$5194 = $$4193;
      } else {
       $78 = ($$1179 & -2 | 0) == 12;
       if ($72 & $78) {
        $$5 = $$4;
        $$5194 = $$4193;
       } else if ($73 & ($$1179 >>> 0 < 2 | $78)) {
        $$5 = $$4;
        $$5194 = $$4193;
       } else {
        $85 = (HEAPU8[$0 + (($$1179 * 14 | 0) + $$4186) >> 0] | 0) - $24 | 0;
        HEAP8[$8 + $$4 >> 0] = $85 >>> 31;
        $89 = ($85 | 0) > -1 ? $85 : 0 - $85 | 0;
        $$5 = $$4 + -1 | 0;
        $$5194 = ($89 | 0) < ($$4193 | 0) ? $89 : $$4193;
       }
      }
      $$1179 = $$1179 + -1 | 0;
      $$4 = $$5;
      $$4193 = $$5194;
     }
     $$3 = $$4;
     $$3192 = $$4193;
     $$4186 = $$4186 + 1 | 0;
    }
    break;
   }
  case 2:
   {
    $$2180 = 13;
    $$6 = 119;
    $$6195 = 255;
    while (1) {
     if (($$2180 | 0) <= -1) {
      $$12 = $$6195;
      label = 57;
      break L20;
     }
     $$2180$off = $$2180 + -3 | 0;
     $or$cond229245 = $$2180 >>> 0 < 2 | ($$2180 & -2 | 0) == 12;
     $97 = $$2180 * 14 | 0;
     $$5187 = 13;
     $$7 = $$6;
     $$7196 = $$6195;
     while (1) {
      if (($$5187 | 0) <= -1) break;
      if (($$5187 + -3 | $$2180$off) >>> 0 < 8) {
       $$8 = $$7;
       $$8197 = $$7196;
      } else if (($$5187 | $$2180) >>> 0 < 2 | $or$cond229245 & ($$5187 & -2 | 0) == 12) {
       $$8 = $$7;
       $$8197 = $$7196;
      } else {
       $109 = (HEAPU8[$0 + ($$5187 + $97) >> 0] | 0) - $24 | 0;
       HEAP8[$8 + $$7 >> 0] = $109 >>> 31;
       $113 = ($109 | 0) > -1 ? $109 : 0 - $109 | 0;
       $$8 = $$7 + -1 | 0;
       $$8197 = ($113 | 0) < ($$7196 | 0) ? $113 : $$7196;
      }
      $$5187 = $$5187 + -1 | 0;
      $$7 = $$8;
      $$7196 = $$8197;
     }
     $$2180 = $$2180 + -1 | 0;
     $$6 = $$7;
     $$6195 = $$7196;
    }
    break;
   }
  case 3:
   {
    $$6188 = 13;
    $$9 = 119;
    $$9198 = 255;
    while (1) {
     if (($$6188 | 0) <= -1) {
      $$12 = $$9198;
      label = 57;
      break L20;
     }
     $$6188$off = $$6188 + -3 | 0;
     $118 = $$6188 & -2;
     $119 = ($118 | 0) == 12;
     $120 = ($118 | 0) == 0;
     $$10 = $$9;
     $$10199 = $$9198;
     $$3181 = 0;
     while (1) {
      if (($$3181 | 0) == 14) break;
      if (($$3181 + -3 | $$6188$off) >>> 0 < 8) {
       $$11 = $$10;
       $$11200 = $$10199;
      } else {
       $123 = $$3181 & 2147483646;
       if ($119 & ($123 | 0) == 0) {
        $$11 = $$10;
        $$11200 = $$10199;
       } else if (($123 | $118 | 0) == 0 | $120 & ($123 | 0) == 12) {
        $$11 = $$10;
        $$11200 = $$10199;
       } else {
        $133 = (HEAPU8[$0 + (($$3181 * 14 | 0) + $$6188) >> 0] | 0) - $24 | 0;
        HEAP8[$8 + $$10 >> 0] = $133 >>> 31;
        $137 = ($133 | 0) > -1 ? $133 : 0 - $133 | 0;
        $$11 = $$10 + -1 | 0;
        $$11200 = ($137 | 0) < ($$10199 | 0) ? $137 : $$10199;
       }
      }
      $$10 = $$11;
      $$10199 = $$11200;
      $$3181 = $$3181 + 1 | 0;
     }
     $$6188 = $$6188 + -1 | 0;
     $$9 = $$10;
     $$9198 = $$10199;
    }
    break;
   }
  default:
   {
    HEAP32[$2 >> 2] = $trunc;
    $144 = 1.0;
   }
  } while (0);
  if ((label | 0) == 57) {
   HEAP32[$2 >> 2] = $trunc;
   $144 = ($$12 | 0) > 30 ? 1.0 : +($$12 | 0) / 30.0;
  }
  HEAPF64[$3 >> 3] = $144;
  $145 = _decode_bch(2830, 0, 0, $8, $7) | 0;
  if (($145 | 0) < 0) $$0177 = -4; else {
   if ($4 | 0) HEAP32[$4 >> 2] = $145;
   $148 = $7;
   $153 = HEAP32[$148 + 4 >> 2] | 0;
   $154 = $1;
   HEAP32[$154 >> 2] = HEAP32[$148 >> 2];
   HEAP32[$154 + 4 >> 2] = $153;
   $$0177 = 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$0177 | 0;
}

function _icpGetInitXw2Xc_from_PlanarData($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0204 = 0, $$1 = 0, $101 = 0, $102 = 0, $108 = 0, $110 = 0, $112 = 0, $116 = 0, $118 = 0, $120 = 0.0, $121 = 0, $125 = 0.0, $128 = 0.0, $129 = 0.0, $130 = 0, $133 = 0.0, $137 = 0.0, $140 = 0.0, $141 = 0.0, $143 = 0.0, $144 = 0, $149 = 0.0, $150 = 0, $157 = 0.0, $158 = 0, $162 = 0.0, $164 = 0.0, $17 = 0, $170 = 0.0, $176 = 0.0, $184 = 0.0, $192 = 0.0, $193 = 0.0, $195 = 0.0, $196 = 0.0, $198 = 0.0, $200 = 0.0, $202 = 0.0, $204 = 0.0, $208 = 0.0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $38 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $46 = 0, $48 = 0, $5 = 0, $61 = 0, $88 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 $vararg_buffer11 = sp + 120 | 0;
 $vararg_buffer9 = sp + 112 | 0;
 $vararg_buffer7 = sp + 104 | 0;
 $vararg_buffer5 = sp + 96 | 0;
 $vararg_buffer3 = sp + 88 | 0;
 $vararg_buffer1 = sp + 80 | 0;
 $vararg_buffer = sp + 72 | 0;
 $5 = sp;
 L1 : do if (($3 | 0) < 4) $$0204 = -1; else {
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= ($3 | 0)) break;
   if (+HEAPF64[$2 + ($$0 * 24 | 0) + 16 >> 3] != 0.0) {
    $$0204 = -1;
    break L1;
   } else $$0 = $$0 + 1 | 0;
  }
  if (+HEAPF64[$0 >> 3] == 0.0) $$0204 = -1; else if (+HEAPF64[$0 + 32 >> 3] != 0.0) $$0204 = -1; else {
   $17 = $0 + 40 | 0;
   if (+HEAPF64[$17 >> 3] == 0.0) $$0204 = -1; else if (+HEAPF64[$0 + 64 >> 3] != 0.0) $$0204 = -1; else if (+HEAPF64[$0 + 72 >> 3] != 0.0) $$0204 = -1; else if (+HEAPF64[$0 + 80 >> 3] != 1.0) $$0204 = -1; else if (+HEAPF64[$0 + 24 >> 3] != 0.0) $$0204 = -1; else if (+HEAPF64[$0 + 56 >> 3] != 0.0) $$0204 = -1; else if (+HEAPF64[$0 + 88 >> 3] != 0.0) $$0204 = -1; else {
    $38 = $3 << 1;
    $39 = _arMatrixAlloc($38, 8) | 0;
    if (!$39) {
     _arLog(0, 3, 18508, $vararg_buffer);
     $$0204 = -1;
     break;
    }
    $41 = _arMatrixAlloc($38, 1) | 0;
    if (!$41) {
     _arMatrixFree($39) | 0;
     _arLog(0, 3, 18534, $vararg_buffer1);
     $$0204 = -1;
     break;
    }
    $$1 = 0;
    while (1) {
     if (($$1 | 0) == ($3 | 0)) break;
     $43 = $2 + ($$1 * 24 | 0) | 0;
     $45 = HEAP32[$39 >> 2] | 0;
     $46 = $$1 << 4;
     HEAPF64[$45 + ($46 << 3) >> 3] = +HEAPF64[$43 >> 3];
     $48 = $2 + ($$1 * 24 | 0) + 8 | 0;
     HEAPF64[$45 + (($46 | 1) << 3) >> 3] = +HEAPF64[$48 >> 3];
     HEAPF64[$45 + (($46 | 2) << 3) >> 3] = 1.0;
     HEAPF64[$45 + (($46 | 3) << 3) >> 3] = 0.0;
     HEAPF64[$45 + (($46 | 4) << 3) >> 3] = 0.0;
     HEAPF64[$45 + (($46 | 5) << 3) >> 3] = 0.0;
     $61 = $1 + ($$1 << 4) | 0;
     HEAPF64[$45 + (($46 | 6) << 3) >> 3] = -(+HEAPF64[$43 >> 3] * +HEAPF64[$61 >> 3]);
     HEAPF64[$45 + (($46 | 7) << 3) >> 3] = -(+HEAPF64[$48 >> 3] * +HEAPF64[$61 >> 3]);
     HEAPF64[$45 + (($46 | 8) << 3) >> 3] = 0.0;
     HEAPF64[$45 + (($46 | 9) << 3) >> 3] = 0.0;
     HEAPF64[$45 + (($46 | 10) << 3) >> 3] = 0.0;
     HEAPF64[$45 + (($46 | 11) << 3) >> 3] = +HEAPF64[$43 >> 3];
     HEAPF64[$45 + (($46 | 12) << 3) >> 3] = +HEAPF64[$48 >> 3];
     HEAPF64[$45 + (($46 | 13) << 3) >> 3] = 1.0;
     $88 = $1 + ($$1 << 4) + 8 | 0;
     HEAPF64[$45 + (($46 | 14) << 3) >> 3] = -(+HEAPF64[$43 >> 3] * +HEAPF64[$88 >> 3]);
     HEAPF64[$45 + (($46 | 15) << 3) >> 3] = -(+HEAPF64[$48 >> 3] * +HEAPF64[$88 >> 3]);
     $101 = HEAP32[$41 >> 2] | 0;
     $102 = $$1 << 1;
     HEAPF64[$101 + ($102 << 3) >> 3] = +HEAPF64[$61 >> 3];
     HEAPF64[$101 + (($102 | 1) << 3) >> 3] = +HEAPF64[$88 >> 3];
     $$1 = $$1 + 1 | 0;
    }
    $108 = _arMatrixAllocTrans($39) | 0;
    if (!$108) {
     _arMatrixFree($39) | 0;
     _arMatrixFree($41) | 0;
     _arLog(0, 3, 18560, $vararg_buffer3);
     $$0204 = -1;
     break;
    }
    $110 = _arMatrixAllocMul($108, $39) | 0;
    if (!$110) {
     _arMatrixFree($39) | 0;
     _arMatrixFree($41) | 0;
     _arMatrixFree($108) | 0;
     _arLog(0, 3, 18586, $vararg_buffer5);
     $$0204 = -1;
     break;
    }
    $112 = _arMatrixAllocMul($108, $41) | 0;
    if (!$112) {
     _arMatrixFree($39) | 0;
     _arMatrixFree($41) | 0;
     _arMatrixFree($108) | 0;
     _arMatrixFree($110) | 0;
     _arLog(0, 3, 18612, $vararg_buffer7);
     $$0204 = -1;
     break;
    }
    if ((_arMatrixSelfInv($110) | 0) < 0) {
     _arMatrixFree($39) | 0;
     _arMatrixFree($41) | 0;
     _arMatrixFree($108) | 0;
     _arMatrixFree($110) | 0;
     _arMatrixFree($112) | 0;
     _arLog(0, 3, 18638, $vararg_buffer9);
     $$0204 = -1;
     break;
    }
    $116 = _arMatrixAllocMul($110, $112) | 0;
    if (!$116) {
     _arMatrixFree($39) | 0;
     _arMatrixFree($41) | 0;
     _arMatrixFree($108) | 0;
     _arMatrixFree($110) | 0;
     _arMatrixFree($112) | 0;
     _arLog(0, 3, 18664, $vararg_buffer11);
     $$0204 = -1;
     break;
    } else {
     $118 = HEAP32[$116 >> 2] | 0;
     $120 = +HEAPF64[$118 + 48 >> 3];
     $121 = $5 + 16 | 0;
     $125 = +HEAPF64[$0 + 48 >> 3];
     $128 = +HEAPF64[$17 >> 3];
     $129 = (+HEAPF64[$118 + 24 >> 3] - $120 * $125) / $128;
     $130 = $5 + 8 | 0;
     $133 = +HEAPF64[$0 + 16 >> 3];
     $137 = +HEAPF64[$0 + 8 >> 3];
     $140 = +HEAPF64[$0 >> 3];
     $141 = (+HEAPF64[$118 >> 3] - $120 * $133 - $129 * $137) / $140;
     $143 = +HEAPF64[$118 + 56 >> 3];
     $144 = $5 + 40 | 0;
     $149 = (+HEAPF64[$118 + 32 >> 3] - $125 * $143) / $128;
     $150 = $5 + 32 | 0;
     $157 = (+HEAPF64[$118 + 8 >> 3] - $133 * $143 - $137 * $149) / $140;
     $158 = $5 + 24 | 0;
     $162 = (+HEAPF64[$118 + 40 >> 3] - $125) / $128;
     $164 = +HEAPF64[$118 + 16 >> 3];
     _arMatrixFree($39) | 0;
     _arMatrixFree($41) | 0;
     _arMatrixFree($108) | 0;
     _arMatrixFree($110) | 0;
     _arMatrixFree($112) | 0;
     _arMatrixFree($116) | 0;
     $170 = +Math_sqrt(+($120 * $120 + ($129 * $129 + $141 * $141)));
     $176 = +Math_sqrt(+($143 * $143 + ($149 * $149 + $157 * $157)));
     HEAPF64[$5 >> 3] = $141 / $170;
     HEAPF64[$130 >> 3] = $129 / $170;
     HEAPF64[$121 >> 3] = $120 / $170;
     HEAPF64[$158 >> 3] = $157 / $176;
     HEAPF64[$150 >> 3] = $149 / $176;
     HEAPF64[$144 >> 3] = $143 / $176;
     $184 = ($170 + $176) * .5;
     _check_rotation($5);
     $192 = +HEAPF64[$130 >> 3];
     $193 = +HEAPF64[$144 >> 3];
     $195 = +HEAPF64[$121 >> 3];
     $196 = +HEAPF64[$150 >> 3];
     $198 = $192 * $193 - $195 * $196;
     $200 = +HEAPF64[$158 >> 3];
     $202 = +HEAPF64[$5 >> 3];
     $204 = $195 * $200 - $193 * $202;
     $208 = $196 * $202 - $192 * $200;
     $215 = +Math_sqrt(+($208 * $208 + ($198 * $198 + $204 * $204)));
     $216 = $198 / $215;
     HEAPF64[$5 + 48 >> 3] = $216;
     $217 = $204 / $215;
     HEAPF64[$5 + 56 >> 3] = $217;
     $218 = $208 / $215;
     HEAPF64[$5 + 64 >> 3] = $218;
     HEAPF64[$4 >> 3] = $202;
     HEAPF64[$4 + 32 >> 3] = $192;
     HEAPF64[$4 + 64 >> 3] = $195;
     HEAPF64[$4 + 8 >> 3] = $200;
     HEAPF64[$4 + 40 >> 3] = $196;
     HEAPF64[$4 + 72 >> 3] = $193;
     HEAPF64[$4 + 16 >> 3] = $216;
     HEAPF64[$4 + 48 >> 3] = $217;
     HEAPF64[$4 + 80 >> 3] = $218;
     HEAPF64[$4 + 24 >> 3] = ($164 - $133 - $137 * $162) / $140 / $184;
     HEAPF64[$4 + 56 >> 3] = $162 / $184;
     HEAPF64[$4 + 88 >> 3] = 1.0 / $184;
     $$0204 = 0;
     break;
    }
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0204 | 0;
}

function __ZN6vision18binomial_4th_orderEPfPtPKhmm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0254 = 0, $$0255 = 0, $$0256 = 0, $$0257 = 0, $$0258 = 0, $$0259 = 0, $$0260 = 0, $$0275 = 0, $$0280 = 0, $$0281 = 0, $$0283 = 0, $$0284 = 0, $$1 = 0, $$1261 = 0, $$1266 = 0, $$1276 = 0, $$1282 = 0, $$1285 = 0, $$2 = 0, $$2262 = 0, $$2267 = 0, $$2272 = 0, $$2277 = 0, $$2286 = 0, $$3263 = 0, $$3268 = 0, $$3273 = 0, $$3278 = 0, $$3287 = 0, $$4269 = 0, $$4274 = 0, $$4279 = 0, $$4288 = 0, $100 = 0, $12 = 0, $121 = 0, $143 = 0, $164 = 0, $17 = 0, $184 = 0, $185 = 0, $186 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $21 = 0, $227 = 0, $228 = 0, $239 = 0, $256 = 0, $28 = 0, $33 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0, $48 = 0, $49 = 0, $5 = 0, $54 = 0, $66 = 0, $79 = 0, $83 = 0, $86 = 0, $88 = 0, $scevgep = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 if ($3 >>> 0 <= 4) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 25035) | 0, 25069) | 0, 33528) | 0, 55) | 0, 33535) | 0, 25200) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 63]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 if ($4 >>> 0 <= 4) {
  $28 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 25219) | 0, 25069) | 0, 33528) | 0, 56) | 0, 33535) | 0, 25200) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $28 + (HEAP32[(HEAP32[$28 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $33 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $37 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$33 >> 2] | 0) + 28 >> 2] & 63]($33, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($28, $37) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($28) | 0;
  _abort();
 }
 $38 = $3 + -1 | 0;
 $39 = $3 + -2 | 0;
 $40 = $3 + -3 | 0;
 $41 = $3 + -4 | 0;
 $$0281 = $1;
 $$0283 = 0;
 while (1) {
  if (($$0283 | 0) == ($4 | 0)) break;
  $46 = $2 + (Math_imul($$0283, $3) | 0) | 0;
  $48 = HEAPU8[$46 >> 0] | 0;
  $49 = $46 + 1 | 0;
  $54 = $46 + 2 | 0;
  HEAP16[$$0281 >> 1] = ($48 * 7 | 0) + (HEAPU8[$54 >> 0] | 0) + ((HEAPU8[$49 >> 0] | 0) + $48 << 2);
  $66 = HEAPU8[$46 >> 0] | 0;
  HEAP16[$$0281 + 2 >> 1] = ((HEAPU8[$49 >> 0] | 0) * 6 | 0) + $66 + (HEAPU8[$46 + 3 >> 0] | 0) + ((HEAPU8[$54 >> 0] | 0) + $66 << 2);
  $$0280 = 2;
  $$1282 = $$0281 + 4 | 0;
  while (1) {
   if (($$0280 | 0) == ($39 | 0)) break;
   $121 = $$0280 + 1 | 0;
   HEAP16[$$1282 >> 1] = ((HEAPU8[$46 + $$0280 >> 0] | 0) * 6 | 0) + (HEAPU8[$46 + ($$0280 + -2) >> 0] | 0) + ((HEAPU8[$46 + $121 >> 0] | 0) + (HEAPU8[$46 + ($$0280 + -1) >> 0] | 0) << 2) + (HEAPU8[$46 + ($$0280 + 2) >> 0] | 0);
   $$0280 = $121;
   $$1282 = $$1282 + 2 | 0;
  }
  $scevgep = $$0281 + ($39 << 1) | 0;
  $79 = $46 + $39 | 0;
  $83 = $46 + $40 | 0;
  $86 = $46 + $38 | 0;
  $88 = HEAPU8[$86 >> 0] | 0;
  HEAP16[$scevgep >> 1] = ((HEAPU8[$79 >> 0] | 0) * 6 | 0) + $88 + (HEAPU8[$46 + $41 >> 0] | 0) + ($88 + (HEAPU8[$83 >> 0] | 0) << 2);
  $100 = HEAPU8[$86 >> 0] | 0;
  HEAP16[$scevgep + 2 >> 1] = ($100 * 7 | 0) + (HEAPU8[$83 >> 0] | 0) + ((HEAPU8[$79 >> 0] | 0) + $100 << 2);
  $$0281 = $$0281 + ($3 << 1) | 0;
  $$0283 = $$0283 + 1 | 0;
 }
 $42 = $4 + -2 | 0;
 $43 = $1 + ($3 << 1) | 0;
 $44 = $43 + ($3 << 1) | 0;
 $$0258 = 0;
 $$0259 = $44;
 $$0260 = $43;
 $$0275 = $1;
 $$0284 = $0;
 while (1) {
  if (($$0258 | 0) == ($3 | 0)) break;
  $143 = HEAPU16[$$0275 >> 1] | 0;
  HEAPF32[$$0284 >> 2] = +(($143 * 7 | 0) + ((HEAPU16[$$0260 >> 1] | 0) + $143 << 2) + (HEAPU16[$$0259 >> 1] | 0) | 0) * .00390625;
  $$0258 = $$0258 + 1 | 0;
  $$0259 = $$0259 + 2 | 0;
  $$0260 = $$0260 + 2 | 0;
  $$0275 = $$0275 + 2 | 0;
  $$0284 = $$0284 + 4 | 0;
 }
 $$0257 = 0;
 $$1 = $44 + ($3 << 1) | 0;
 $$1261 = $44;
 $$1266 = $43;
 $$1276 = $1;
 $$1285 = $0 + ($3 << 2) | 0;
 while (1) {
  if (($$0257 | 0) == ($3 | 0)) break;
  $164 = HEAPU16[$$1276 >> 1] | 0;
  HEAPF32[$$1285 >> 2] = +(((HEAPU16[$$1266 >> 1] | 0) * 6 | 0) + $164 + ((HEAPU16[$$1261 >> 1] | 0) + $164 << 2) + (HEAPU16[$$1 >> 1] | 0) | 0) * .00390625;
  $$0257 = $$0257 + 1 | 0;
  $$1 = $$1 + 2 | 0;
  $$1261 = $$1261 + 2 | 0;
  $$1266 = $$1266 + 2 | 0;
  $$1276 = $$1276 + 2 | 0;
  $$1285 = $$1285 + 4 | 0;
 }
 $$0256 = 2;
 while (1) {
  if (($$0256 | 0) == ($42 | 0)) break;
  $192 = $1 + ((Math_imul($$0256 + -2 | 0, $3) | 0) << 1) | 0;
  $193 = $192 + ($3 << 1) | 0;
  $194 = $193 + ($3 << 1) | 0;
  $195 = $194 + ($3 << 1) | 0;
  $$0255 = 0;
  $$2 = $195 + ($3 << 1) | 0;
  $$2262 = $195;
  $$2267 = $194;
  $$2272 = $193;
  $$2277 = $192;
  $$2286 = $0 + ((Math_imul($$0256, $3) | 0) << 2) | 0;
  while (1) {
   if (($$0255 | 0) == ($3 | 0)) break;
   HEAPF32[$$2286 >> 2] = +(((HEAPU16[$$2267 >> 1] | 0) * 6 | 0) + (HEAPU16[$$2277 >> 1] | 0) + ((HEAPU16[$$2262 >> 1] | 0) + (HEAPU16[$$2272 >> 1] | 0) << 2) + (HEAPU16[$$2 >> 1] | 0) | 0) * .00390625;
   $$0255 = $$0255 + 1 | 0;
   $$2 = $$2 + 2 | 0;
   $$2262 = $$2262 + 2 | 0;
   $$2267 = $$2267 + 2 | 0;
   $$2272 = $$2272 + 2 | 0;
   $$2277 = $$2277 + 2 | 0;
   $$2286 = $$2286 + 4 | 0;
  }
  $$0256 = $$0256 + 1 | 0;
 }
 $184 = $1 + ((Math_imul($4 + -4 | 0, $3) | 0) << 1) | 0;
 $185 = $184 + ($3 << 1) | 0;
 $186 = $185 + ($3 << 1) | 0;
 $$0254 = 0;
 $$3263 = $186 + ($3 << 1) | 0;
 $$3268 = $186;
 $$3273 = $185;
 $$3278 = $184;
 $$3287 = $0 + ((Math_imul($42, $3) | 0) << 2) | 0;
 while (1) {
  if (($$0254 | 0) == ($3 | 0)) break;
  $239 = HEAPU16[$$3263 >> 1] | 0;
  HEAPF32[$$3287 >> 2] = +(((HEAPU16[$$3268 >> 1] | 0) * 6 | 0) + (HEAPU16[$$3278 >> 1] | 0) + ($239 + (HEAPU16[$$3273 >> 1] | 0) << 2) + $239 | 0) * .00390625;
  $$0254 = $$0254 + 1 | 0;
  $$3263 = $$3263 + 2 | 0;
  $$3268 = $$3268 + 2 | 0;
  $$3273 = $$3273 + 2 | 0;
  $$3278 = $$3278 + 2 | 0;
  $$3287 = $$3287 + 4 | 0;
 }
 $227 = $1 + ((Math_imul($4 + -3 | 0, $3) | 0) << 1) | 0;
 $228 = $227 + ($3 << 1) | 0;
 $$0 = 0;
 $$4269 = $228 + ($3 << 1) | 0;
 $$4274 = $228;
 $$4279 = $227;
 $$4288 = $0 + ((Math_imul($4 + -1 | 0, $3) | 0) << 2) | 0;
 while (1) {
  if (($$0 | 0) == ($3 | 0)) break;
  $256 = HEAPU16[$$4269 >> 1] | 0;
  HEAPF32[$$4288 >> 2] = +(($256 * 6 | 0) + (HEAPU16[$$4279 >> 1] | 0) + ($256 + (HEAPU16[$$4274 >> 1] | 0) << 2) + $256 | 0) * .00390625;
  $$0 = $$0 + 1 | 0;
  $$4269 = $$4269 + 2 | 0;
  $$4274 = $$4274 + 2 | 0;
  $$4279 = $$4279 + 2 | 0;
  $$4288 = $$4288 + 4 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision18binomial_4th_orderEPfS0_PKfmm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0232 = 0, $$0233 = 0, $$0234 = 0, $$0235 = 0, $$0236 = 0, $$0237 = 0, $$0238 = 0, $$0253 = 0, $$0258 = 0, $$0259 = 0, $$0261 = 0, $$0262 = 0, $$1 = 0, $$1239 = 0, $$1244 = 0, $$1254 = 0, $$1260 = 0, $$1263 = 0, $$2 = 0, $$2240 = 0, $$2245 = 0, $$2250 = 0, $$2255 = 0, $$2264 = 0, $$3241 = 0, $$3246 = 0, $$3251 = 0, $$3256 = 0, $$3265 = 0, $$4247 = 0, $$4252 = 0, $$4257 = 0, $$4266 = 0, $103 = 0, $12 = 0, $120 = 0.0, $137 = 0.0, $154 = 0, $155 = 0, $156 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $191 = 0, $192 = 0, $200 = 0.0, $21 = 0, $214 = 0.0, $28 = 0, $33 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0.0, $49 = 0, $5 = 0, $55 = 0, $61 = 0.0, $71 = 0, $74 = 0, $76 = 0, $77 = 0.0, $86 = 0.0, $scevgep = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 if ($3 >>> 0 <= 4) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 25035) | 0, 25069) | 0, 33528) | 0, 168) | 0, 33535) | 0, 25200) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 63]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 if ($4 >>> 0 <= 4) {
  $28 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 25219) | 0, 25069) | 0, 33528) | 0, 169) | 0, 33535) | 0, 25200) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $28 + (HEAP32[(HEAP32[$28 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $33 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $37 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$33 >> 2] | 0) + 28 >> 2] & 63]($33, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($28, $37) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($28) | 0;
  _abort();
 }
 $38 = $3 + -1 | 0;
 $39 = $3 + -2 | 0;
 $40 = $3 + -3 | 0;
 $41 = $3 + -4 | 0;
 $$0259 = $1;
 $$0261 = 0;
 while (1) {
  if (($$0261 | 0) == ($4 | 0)) break;
  $46 = $2 + ((Math_imul($$0261, $3) | 0) << 2) | 0;
  $47 = +HEAPF32[$46 >> 2];
  $49 = $46 + 4 | 0;
  $55 = $46 + 8 | 0;
  HEAPF32[$$0259 >> 2] = +HEAPF32[$55 >> 2] + ($47 + ($47 * 6.0 + ($47 + +HEAPF32[$49 >> 2]) * 4.0));
  $61 = +HEAPF32[$46 >> 2];
  HEAPF32[$$0259 + 4 >> 2] = +HEAPF32[$46 + 12 >> 2] + ($61 + (+HEAPF32[$49 >> 2] * 6.0 + ($61 + +HEAPF32[$55 >> 2]) * 4.0));
  $$0258 = 2;
  $$1260 = $$0259 + 8 | 0;
  while (1) {
   if (($$0258 | 0) == ($39 | 0)) break;
   $103 = $$0258 + 1 | 0;
   HEAPF32[$$1260 >> 2] = +HEAPF32[$46 + ($$0258 + 2 << 2) >> 2] + (+HEAPF32[$46 + ($$0258 + -2 << 2) >> 2] + (+HEAPF32[$46 + ($$0258 << 2) >> 2] * 6.0 + (+HEAPF32[$46 + ($$0258 + -1 << 2) >> 2] + +HEAPF32[$46 + ($103 << 2) >> 2]) * 4.0));
   $$0258 = $103;
   $$1260 = $$1260 + 4 | 0;
  }
  $scevgep = $$0259 + ($39 << 2) | 0;
  $71 = $46 + ($39 << 2) | 0;
  $74 = $46 + ($40 << 2) | 0;
  $76 = $46 + ($38 << 2) | 0;
  $77 = +HEAPF32[$76 >> 2];
  HEAPF32[$scevgep >> 2] = $77 + (+HEAPF32[$46 + ($41 << 2) >> 2] + (+HEAPF32[$71 >> 2] * 6.0 + (+HEAPF32[$74 >> 2] + $77) * 4.0));
  $86 = +HEAPF32[$76 >> 2];
  HEAPF32[$scevgep + 4 >> 2] = $86 + (+HEAPF32[$74 >> 2] + ($86 * 6.0 + ($86 + +HEAPF32[$71 >> 2]) * 4.0));
  $$0259 = $$0259 + ($3 << 2) | 0;
  $$0261 = $$0261 + 1 | 0;
 }
 $42 = $4 + -2 | 0;
 $43 = $1 + ($3 << 2) | 0;
 $44 = $43 + ($3 << 2) | 0;
 $$0236 = 0;
 $$0237 = $44;
 $$0238 = $43;
 $$0253 = $1;
 $$0262 = $0;
 while (1) {
  if (($$0236 | 0) == ($3 | 0)) break;
  $120 = +HEAPF32[$$0253 >> 2];
  HEAPF32[$$0262 >> 2] = (+HEAPF32[$$0237 >> 2] + ($120 + ($120 * 6.0 + ($120 + +HEAPF32[$$0238 >> 2]) * 4.0))) * .00390625;
  $$0236 = $$0236 + 1 | 0;
  $$0237 = $$0237 + 4 | 0;
  $$0238 = $$0238 + 4 | 0;
  $$0253 = $$0253 + 4 | 0;
  $$0262 = $$0262 + 4 | 0;
 }
 $$0235 = 0;
 $$1 = $44 + ($3 << 2) | 0;
 $$1239 = $44;
 $$1244 = $43;
 $$1254 = $1;
 $$1263 = $0 + ($3 << 2) | 0;
 while (1) {
  if (($$0235 | 0) == ($3 | 0)) break;
  $137 = +HEAPF32[$$1254 >> 2];
  HEAPF32[$$1263 >> 2] = (+HEAPF32[$$1 >> 2] + ($137 + (+HEAPF32[$$1244 >> 2] * 6.0 + ($137 + +HEAPF32[$$1239 >> 2]) * 4.0))) * .00390625;
  $$0235 = $$0235 + 1 | 0;
  $$1 = $$1 + 4 | 0;
  $$1239 = $$1239 + 4 | 0;
  $$1244 = $$1244 + 4 | 0;
  $$1254 = $$1254 + 4 | 0;
  $$1263 = $$1263 + 4 | 0;
 }
 $$0234 = 2;
 while (1) {
  if (($$0234 | 0) == ($42 | 0)) break;
  $162 = $1 + ((Math_imul($$0234 + -2 | 0, $3) | 0) << 2) | 0;
  $163 = $162 + ($3 << 2) | 0;
  $164 = $163 + ($3 << 2) | 0;
  $165 = $164 + ($3 << 2) | 0;
  $$0233 = 0;
  $$2 = $165 + ($3 << 2) | 0;
  $$2240 = $165;
  $$2245 = $164;
  $$2250 = $163;
  $$2255 = $162;
  $$2264 = $0 + ((Math_imul($$0234, $3) | 0) << 2) | 0;
  while (1) {
   if (($$0233 | 0) == ($3 | 0)) break;
   HEAPF32[$$2264 >> 2] = (+HEAPF32[$$2 >> 2] + (+HEAPF32[$$2255 >> 2] + (+HEAPF32[$$2245 >> 2] * 6.0 + (+HEAPF32[$$2250 >> 2] + +HEAPF32[$$2240 >> 2]) * 4.0))) * .00390625;
   $$0233 = $$0233 + 1 | 0;
   $$2 = $$2 + 4 | 0;
   $$2240 = $$2240 + 4 | 0;
   $$2245 = $$2245 + 4 | 0;
   $$2250 = $$2250 + 4 | 0;
   $$2255 = $$2255 + 4 | 0;
   $$2264 = $$2264 + 4 | 0;
  }
  $$0234 = $$0234 + 1 | 0;
 }
 $154 = $1 + ((Math_imul($4 + -4 | 0, $3) | 0) << 2) | 0;
 $155 = $154 + ($3 << 2) | 0;
 $156 = $155 + ($3 << 2) | 0;
 $$0232 = 0;
 $$3241 = $156 + ($3 << 2) | 0;
 $$3246 = $156;
 $$3251 = $155;
 $$3256 = $154;
 $$3265 = $0 + ((Math_imul($42, $3) | 0) << 2) | 0;
 while (1) {
  if (($$0232 | 0) == ($3 | 0)) break;
  $200 = +HEAPF32[$$3241 >> 2];
  HEAPF32[$$3265 >> 2] = ($200 + (+HEAPF32[$$3256 >> 2] + (+HEAPF32[$$3246 >> 2] * 6.0 + (+HEAPF32[$$3251 >> 2] + $200) * 4.0))) * .00390625;
  $$0232 = $$0232 + 1 | 0;
  $$3241 = $$3241 + 4 | 0;
  $$3246 = $$3246 + 4 | 0;
  $$3251 = $$3251 + 4 | 0;
  $$3256 = $$3256 + 4 | 0;
  $$3265 = $$3265 + 4 | 0;
 }
 $191 = $1 + ((Math_imul($4 + -3 | 0, $3) | 0) << 2) | 0;
 $192 = $191 + ($3 << 2) | 0;
 $$0 = 0;
 $$4247 = $192 + ($3 << 2) | 0;
 $$4252 = $192;
 $$4257 = $191;
 $$4266 = $0 + ((Math_imul($4 + -1 | 0, $3) | 0) << 2) | 0;
 while (1) {
  if (($$0 | 0) == ($3 | 0)) break;
  $214 = +HEAPF32[$$4247 >> 2];
  HEAPF32[$$4266 >> 2] = ($214 + (+HEAPF32[$$4257 >> 2] + ($214 * 6.0 + (+HEAPF32[$$4252 >> 2] + $214) * 4.0))) * .00390625;
  $$0 = $$0 + 1 | 0;
  $$4247 = $$4247 + 4 | 0;
  $$4252 = $$4252 + 4 | 0;
  $$4257 = $$4257 + 4 | 0;
  $$4266 = $$4266 + 4 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i116 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i122 = 0, $$0101 = 0, $$0105 = 0, $$0111 = 0, $$0112 = 0, $$0112140 = 0, $$092 = 0, $$093 = 0, $$094$off0 = 0, $$095 = 0, $$096 = 0, $$097 = 0, $$098 = 0, $$1102 = 0, $$1106 = 0, $$199 = 0, $$2$off0 = 0, $$2100 = 0, $$2103 = 0, $$2103$be = 0, $$2107 = 0, $$3 = 0, $$3104 = 0, $$3108 = 0, $$5 = 0, $$5110 = 0, $$6 = 0, $$7 = 0, $$sroa$0129$0 = 0, $109 = 0, $11 = 0, $114 = 0, $119 = 0, $120 = 0, $126 = 0, $13 = 0, $131 = 0, $138 = 0, $139 = 0, $140 = 0, $156 = 0, $161 = 0, $175 = 0, $18 = 0, $23 = 0, $29 = 0, $32 = 0, $44 = 0, $47 = 0, $60 = 0, $61 = 0, $64 = 0, $67 = 0, $7 = 0, $79 = 0, $82 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $7 = sp;
 $11 = ($3 - $2 | 0) / 12 | 0;
 if ($11 >>> 0 > 100) {
  $13 = _malloc($11) | 0;
  if (!$13) __ZSt17__throw_bad_allocv(); else {
   $$0111 = $13;
   $$sroa$0129$0 = $13;
  }
 } else {
  $$0111 = $7;
  $$sroa$0129$0 = 0;
 }
 $$0101 = 0;
 $$0105 = $11;
 $$097 = $2;
 $$098 = $$0111;
 while (1) {
  if (($$097 | 0) == ($3 | 0)) break;
  $18 = HEAP8[$$097 + 8 + 3 >> 0] | 0;
  if ($18 << 24 >> 24 < 0) $23 = HEAP32[$$097 + 4 >> 2] | 0; else $23 = $18 & 255;
  if (!$23) {
   HEAP8[$$098 >> 0] = 2;
   $$1102 = $$0101 + 1 | 0;
   $$1106 = $$0105 + -1 | 0;
  } else {
   HEAP8[$$098 >> 0] = 1;
   $$1102 = $$0101;
   $$1106 = $$0105;
  }
  $$0101 = $$1102;
  $$0105 = $$1106;
  $$097 = $$097 + 12 | 0;
  $$098 = $$098 + 1 | 0;
 }
 $$096 = 0;
 $$2103 = $$0101;
 $$2107 = $$0105;
 while (1) {
  $29 = HEAP32[$0 >> 2] | 0;
  do if (!$29) $61 = 1; else {
   $32 = HEAP32[$29 + 12 >> 2] | 0;
   if (($32 | 0) == (HEAP32[$29 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$29 >> 2] | 0) + 36 >> 2] & 127]($29) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$32 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $61 = 1;
    break;
   } else {
    $61 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $44 = HEAP32[$1 >> 2] | 0;
  if (!$44) {
   $60 = 1;
   $79 = 0;
  } else {
   $47 = HEAP32[$44 + 12 >> 2] | 0;
   if (($47 | 0) == (HEAP32[$44 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$44 >> 2] | 0) + 36 >> 2] & 127]($44) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$47 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $60 = 1;
    $79 = 0;
   } else {
    $60 = 0;
    $79 = $44;
   }
  }
  $64 = HEAP32[$0 >> 2] | 0;
  if (!(($$2107 | 0) != 0 & ($61 ^ $60))) break;
  $95 = HEAP32[$64 + 12 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$64 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$64 >> 2] | 0) + 36 >> 2] & 127]($64) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$95 >> 2] | 0) | 0;
  if ($6) $$095 = $$0$i$i; else $$095 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, $$0$i$i) | 0;
  $109 = $$096 + 1 | 0;
  $$093 = $2;
  $$094$off0 = 0;
  $$199 = $$0111;
  $$3104 = $$2103;
  $$3108 = $$2107;
  while (1) {
   if (($$093 | 0) == ($3 | 0)) break;
   do if ((HEAP8[$$199 >> 0] | 0) == 1) {
    $114 = $$093 + 8 + 3 | 0;
    if ((HEAP8[$114 >> 0] | 0) < 0) $119 = HEAP32[$$093 >> 2] | 0; else $119 = $$093;
    $120 = HEAP32[$119 + ($$096 << 2) >> 2] | 0;
    if ($6) $$092 = $120; else $$092 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 63]($4, $120) | 0;
    if (($$095 | 0) != ($$092 | 0)) {
     HEAP8[$$199 >> 0] = 0;
     $$2$off0 = $$094$off0;
     $$5 = $$3104;
     $$5110 = $$3108 + -1 | 0;
     break;
    }
    $126 = HEAP8[$114 >> 0] | 0;
    if ($126 << 24 >> 24 < 0) $131 = HEAP32[$$093 + 4 >> 2] | 0; else $131 = $126 & 255;
    if (($131 | 0) == ($109 | 0)) {
     HEAP8[$$199 >> 0] = 2;
     $$2$off0 = 1;
     $$5 = $$3104 + 1 | 0;
     $$5110 = $$3108 + -1 | 0;
    } else {
     $$2$off0 = 1;
     $$5 = $$3104;
     $$5110 = $$3108;
    }
   } else {
    $$2$off0 = $$094$off0;
    $$5 = $$3104;
    $$5110 = $$3108;
   } while (0);
   $$093 = $$093 + 12 | 0;
   $$094$off0 = $$2$off0;
   $$199 = $$199 + 1 | 0;
   $$3104 = $$5;
   $$3108 = $$5110;
  }
  L67 : do if ($$094$off0) {
   $138 = HEAP32[$0 >> 2] | 0;
   $139 = $138 + 12 | 0;
   $140 = HEAP32[$139 >> 2] | 0;
   if (($140 | 0) == (HEAP32[$138 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$138 >> 2] | 0) + 40 >> 2] & 127]($138) | 0; else {
    HEAP32[$139 >> 2] = $140 + 4;
    __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$140 >> 2] | 0) | 0;
   }
   if (($$3104 + $$3108 | 0) >>> 0 > 1) {
    $$0 = $2;
    $$2100 = $$0111;
    $$6 = $$3104;
    while (1) {
     if (($$0 | 0) == ($3 | 0)) {
      $$2103$be = $$6;
      break L67;
     }
     if ((HEAP8[$$2100 >> 0] | 0) == 2) {
      $156 = HEAP8[$$0 + 8 + 3 >> 0] | 0;
      if ($156 << 24 >> 24 < 0) $161 = HEAP32[$$0 + 4 >> 2] | 0; else $161 = $156 & 255;
      if (($161 | 0) == ($109 | 0)) $$7 = $$6; else {
       HEAP8[$$2100 >> 0] = 0;
       $$7 = $$6 + -1 | 0;
      }
     } else $$7 = $$6;
     $$0 = $$0 + 12 | 0;
     $$2100 = $$2100 + 1 | 0;
     $$6 = $$7;
    }
   } else $$2103$be = $$3104;
  } else $$2103$be = $$3104; while (0);
  $$096 = $109;
  $$2103 = $$2103$be;
  $$2107 = $$3108;
 }
 do if (!$64) $175 = 1; else {
  $67 = HEAP32[$64 + 12 >> 2] | 0;
  if (($67 | 0) == (HEAP32[$64 + 16 >> 2] | 0)) $$0$i$i$i$i116 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$64 >> 2] | 0) + 36 >> 2] & 127]($64) | 0; else $$0$i$i$i$i116 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$67 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i116, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $175 = 1;
   break;
  } else {
   $175 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$79) label = 41; else {
  $82 = HEAP32[$79 + 12 >> 2] | 0;
  if (($82 | 0) == (HEAP32[$79 + 16 >> 2] | 0)) $$0$i$i2$i$i122 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$79 >> 2] | 0) + 36 >> 2] & 127]($79) | 0; else $$0$i$i2$i$i122 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$82 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i122, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   label = 41;
   break;
  } else if ($175) break; else {
   label = 79;
   break;
  }
 } while (0);
 if ((label | 0) == 41) if ($175) label = 79;
 if ((label | 0) == 79) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$0112 = $2;
 $$3 = $$0111;
 while (1) {
  if (($$0112 | 0) == ($3 | 0)) {
   label = 84;
   break;
  }
  if ((HEAP8[$$3 >> 0] | 0) == 2) {
   $$0112140 = $$0112;
   break;
  }
  $$0112 = $$0112 + 12 | 0;
  $$3 = $$3 + 1 | 0;
 }
 if ((label | 0) == 84) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$0112140 = $3;
 }
 _free($$sroa$0129$0);
 STACKTOP = sp;
 return $$0112140 | 0;
}

function __ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i112 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i118 = 0, $$0101 = 0, $$0107 = 0, $$0108 = 0, $$0108136 = 0, $$088 = 0, $$089 = 0, $$090$off0 = 0, $$091 = 0, $$092 = 0, $$093 = 0, $$094 = 0, $$097 = 0, $$1102 = 0, $$195 = 0, $$198 = 0, $$2$off0 = 0, $$2103 = 0, $$296 = 0, $$299 = 0, $$299$be = 0, $$3 = 0, $$3100 = 0, $$3104 = 0, $$5 = 0, $$5106 = 0, $$6 = 0, $$7 = 0, $$sroa$0125$0 = 0, $104 = 0, $109 = 0, $11 = 0, $113 = 0, $118 = 0, $119 = 0, $125 = 0, $13 = 0, $130 = 0, $137 = 0, $138 = 0, $139 = 0, $154 = 0, $159 = 0, $17 = 0, $173 = 0, $22 = 0, $28 = 0, $31 = 0, $43 = 0, $46 = 0, $59 = 0, $60 = 0, $63 = 0, $66 = 0, $7 = 0, $78 = 0, $81 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $7 = sp;
 $11 = ($3 - $2 | 0) / 12 | 0;
 if ($11 >>> 0 > 100) {
  $13 = _malloc($11) | 0;
  if (!$13) __ZSt17__throw_bad_allocv(); else {
   $$0107 = $13;
   $$sroa$0125$0 = $13;
  }
 } else {
  $$0107 = $7;
  $$sroa$0125$0 = 0;
 }
 $$0101 = $11;
 $$093 = $2;
 $$094 = $$0107;
 $$097 = 0;
 while (1) {
  if (($$093 | 0) == ($3 | 0)) break;
  $17 = HEAP8[$$093 + 11 >> 0] | 0;
  if ($17 << 24 >> 24 < 0) $22 = HEAP32[$$093 + 4 >> 2] | 0; else $22 = $17 & 255;
  if (!$22) {
   HEAP8[$$094 >> 0] = 2;
   $$1102 = $$0101 + -1 | 0;
   $$198 = $$097 + 1 | 0;
  } else {
   HEAP8[$$094 >> 0] = 1;
   $$1102 = $$0101;
   $$198 = $$097;
  }
  $$0101 = $$1102;
  $$093 = $$093 + 12 | 0;
  $$094 = $$094 + 1 | 0;
  $$097 = $$198;
 }
 $$092 = 0;
 $$2103 = $$0101;
 $$299 = $$097;
 while (1) {
  $28 = HEAP32[$0 >> 2] | 0;
  do if (!$28) $60 = 1; else {
   $31 = HEAP32[$28 + 12 >> 2] | 0;
   if (($31 | 0) == (HEAP32[$28 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$28 >> 2] | 0) + 36 >> 2] & 127]($28) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$31 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $60 = 1;
    break;
   } else {
    $60 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $43 = HEAP32[$1 >> 2] | 0;
  if (!$43) {
   $59 = 1;
   $78 = 0;
  } else {
   $46 = HEAP32[$43 + 12 >> 2] | 0;
   if (($46 | 0) == (HEAP32[$43 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$43 >> 2] | 0) + 36 >> 2] & 127]($43) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$46 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $59 = 1;
    $78 = 0;
   } else {
    $59 = 0;
    $78 = $43;
   }
  }
  $63 = HEAP32[$0 >> 2] | 0;
  if (!(($$2103 | 0) != 0 & ($60 ^ $59))) break;
  $94 = HEAP32[$63 + 12 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$63 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$63 >> 2] | 0) + 36 >> 2] & 127]($63) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$94 >> 0] | 0) | 0;
  $104 = $$0$i$i & 255;
  if ($6) $$091 = $104; else $$091 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, $104) | 0;
  $109 = $$092 + 1 | 0;
  $$089 = $2;
  $$090$off0 = 0;
  $$195 = $$0107;
  $$3100 = $$299;
  $$3104 = $$2103;
  while (1) {
   if (($$089 | 0) == ($3 | 0)) break;
   do if ((HEAP8[$$195 >> 0] | 0) == 1) {
    $113 = $$089 + 11 | 0;
    if ((HEAP8[$113 >> 0] | 0) < 0) $118 = HEAP32[$$089 >> 2] | 0; else $118 = $$089;
    $119 = HEAP8[$118 + $$092 >> 0] | 0;
    if ($6) $$088 = $119; else $$088 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, $119) | 0;
    if ($$091 << 24 >> 24 != $$088 << 24 >> 24) {
     HEAP8[$$195 >> 0] = 0;
     $$2$off0 = $$090$off0;
     $$5 = $$3100;
     $$5106 = $$3104 + -1 | 0;
     break;
    }
    $125 = HEAP8[$113 >> 0] | 0;
    if ($125 << 24 >> 24 < 0) $130 = HEAP32[$$089 + 4 >> 2] | 0; else $130 = $125 & 255;
    if (($130 | 0) == ($109 | 0)) {
     HEAP8[$$195 >> 0] = 2;
     $$2$off0 = 1;
     $$5 = $$3100 + 1 | 0;
     $$5106 = $$3104 + -1 | 0;
    } else {
     $$2$off0 = 1;
     $$5 = $$3100;
     $$5106 = $$3104;
    }
   } else {
    $$2$off0 = $$090$off0;
    $$5 = $$3100;
    $$5106 = $$3104;
   } while (0);
   $$089 = $$089 + 12 | 0;
   $$090$off0 = $$2$off0;
   $$195 = $$195 + 1 | 0;
   $$3100 = $$5;
   $$3104 = $$5106;
  }
  L67 : do if ($$090$off0) {
   $137 = HEAP32[$0 >> 2] | 0;
   $138 = $137 + 12 | 0;
   $139 = HEAP32[$138 >> 2] | 0;
   if (($139 | 0) == (HEAP32[$137 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$137 >> 2] | 0) + 40 >> 2] & 127]($137) | 0; else {
    HEAP32[$138 >> 2] = $139 + 1;
    __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$139 >> 0] | 0) | 0;
   }
   if (($$3100 + $$3104 | 0) >>> 0 > 1) {
    $$0 = $2;
    $$296 = $$0107;
    $$6 = $$3100;
    while (1) {
     if (($$0 | 0) == ($3 | 0)) {
      $$299$be = $$6;
      break L67;
     }
     if ((HEAP8[$$296 >> 0] | 0) == 2) {
      $154 = HEAP8[$$0 + 11 >> 0] | 0;
      if ($154 << 24 >> 24 < 0) $159 = HEAP32[$$0 + 4 >> 2] | 0; else $159 = $154 & 255;
      if (($159 | 0) == ($109 | 0)) $$7 = $$6; else {
       HEAP8[$$296 >> 0] = 0;
       $$7 = $$6 + -1 | 0;
      }
     } else $$7 = $$6;
     $$0 = $$0 + 12 | 0;
     $$296 = $$296 + 1 | 0;
     $$6 = $$7;
    }
   } else $$299$be = $$3100;
  } else $$299$be = $$3100; while (0);
  $$092 = $109;
  $$2103 = $$3104;
  $$299 = $$299$be;
 }
 do if (!$63) $173 = 1; else {
  $66 = HEAP32[$63 + 12 >> 2] | 0;
  if (($66 | 0) == (HEAP32[$63 + 16 >> 2] | 0)) $$0$i$i$i$i112 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$63 >> 2] | 0) + 36 >> 2] & 127]($63) | 0; else $$0$i$i$i$i112 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$66 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i112, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $173 = 1;
   break;
  } else {
   $173 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$78) label = 41; else {
  $81 = HEAP32[$78 + 12 >> 2] | 0;
  if (($81 | 0) == (HEAP32[$78 + 16 >> 2] | 0)) $$0$i$i2$i$i118 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$78 >> 2] | 0) + 36 >> 2] & 127]($78) | 0; else $$0$i$i2$i$i118 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i118, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   label = 41;
   break;
  } else if ($173) break; else {
   label = 79;
   break;
  }
 } while (0);
 if ((label | 0) == 41) if ($173) label = 79;
 if ((label | 0) == 79) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$0108 = $2;
 $$3 = $$0107;
 while (1) {
  if (($$0108 | 0) == ($3 | 0)) {
   label = 84;
   break;
  }
  if ((HEAP8[$$3 >> 0] | 0) == 2) {
   $$0108136 = $$0108;
   break;
  }
  $$0108 = $$0108 + 12 | 0;
  $$3 = $$3 + 1 | 0;
 }
 if ((label | 0) == 84) {
  HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 4;
  $$0108136 = $3;
 }
 _free($$sroa$0125$0);
 STACKTOP = sp;
 return $$0108136 | 0;
}

function __ZN6vision12FindFeaturesINS_14FREAKExtractorELi96EEEvPNS_8KeyframeIXT0_EEEPKNS_25GaussianScaleSpacePyramidEPNS_25DoGScaleInvariantDetectorEPT_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $104 = 0, $112 = 0, $113 = 0, $12 = 0, $126 = 0, $17 = 0, $21 = 0, $28 = 0, $33 = 0, $37 = 0, $38 = 0, $4 = 0, $48 = 0, $5 = 0, $53 = 0, $57 = 0, $58 = 0, $60 = 0, $68 = 0, $73 = 0, $77 = 0, $78 = 0, $80 = 0, $88 = 0, $93 = 0, $97 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $4 = sp + 20 | 0;
 $5 = sp;
 if (!$1) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31972) | 0, 28235) | 0, 33528) | 0, 212) | 0, 33535) | 0, 32108) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 63]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 if (!$2) {
  $28 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 28350) | 0, 28235) | 0, 33528) | 0, 213) | 0, 33535) | 0, 28382) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $28 + (HEAP32[(HEAP32[$28 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $33 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $37 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$33 >> 2] | 0) + 28 >> 2] & 63]($33, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($28, $37) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($28) | 0;
  _abort();
 }
 $38 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 if ((HEAP32[$38 + 4 >> 2] | 0) == (HEAP32[$38 >> 2] | 0)) {
  $48 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 28399) | 0, 28235) | 0, 33528) | 0, 214) | 0, 33535) | 0, 28451) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $48 + (HEAP32[(HEAP32[$48 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $53 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $57 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$53 >> 2] | 0) + 28 >> 2] & 63]($53, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($48, $57) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($48) | 0;
  _abort();
 }
 $58 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $60 = __ZNK6vision5Image5widthEv(HEAP32[$58 >> 2] | 0) | 0;
 if (($60 | 0) != (__ZNK6vision25DoGScaleInvariantDetector5widthEv($2) | 0)) {
  $68 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 28468) | 0, 28235) | 0, 33528) | 0, 215) | 0, 33535) | 0, 28541) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $68 + (HEAP32[(HEAP32[$68 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $73 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $77 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$73 >> 2] | 0) + 28 >> 2] & 63]($73, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($68, $77) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($68) | 0;
  _abort();
 }
 $78 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $80 = __ZNK6vision5Image6heightEv(HEAP32[$78 >> 2] | 0) | 0;
 if (($80 | 0) != (__ZNK6vision25DoGScaleInvariantDetector6heightEv($2) | 0)) {
  $88 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 28576) | 0, 28235) | 0, 33528) | 0, 216) | 0, 33535) | 0, 28541) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $88 + (HEAP32[(HEAP32[$88 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $93 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $97 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$93 >> 2] | 0) + 28 >> 2] & 63]($93, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($88, $97) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($88) | 0;
  _abort();
 }
 __ZN6vision25DoGScaleInvariantDetector6detectEPKNS_25GaussianScaleSpacePyramidE($2, $1);
 $98 = __ZNK6vision25DoGScaleInvariantDetector8featuresEv($2) | 0;
 __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEEC2Em($4, ((HEAP32[$98 + 4 >> 2] | 0) - (HEAP32[$98 >> 2] | 0) | 0) / 36 | 0);
 $$0 = 0;
 while (1) {
  $104 = __ZNK6vision25DoGScaleInvariantDetector8featuresEv($2) | 0;
  if ($$0 >>> 0 >= (((HEAP32[$104 + 4 >> 2] | 0) - (HEAP32[$104 >> 2] | 0) | 0) / 36 | 0) >>> 0) break;
  $112 = __ZNK6vision25DoGScaleInvariantDetector8featuresEv($2) | 0;
  $113 = HEAP32[$112 >> 2] | 0;
  __ZN6vision12FeaturePointC2Effffb($5, +HEAPF32[$113 + ($$0 * 36 | 0) >> 2], +HEAPF32[$113 + ($$0 * 36 | 0) + 4 >> 2], +HEAPF32[$113 + ($$0 * 36 | 0) + 8 >> 2], +HEAPF32[$113 + ($$0 * 36 | 0) + 28 >> 2], +HEAPF32[$113 + ($$0 * 36 | 0) + 24 >> 2] > 0.0);
  $126 = (HEAP32[$4 >> 2] | 0) + ($$0 * 20 | 0) | 0;
  HEAP32[$126 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$126 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
  HEAP32[$126 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
  HEAP32[$126 + 12 >> 2] = HEAP32[$5 + 12 >> 2];
  HEAP8[$126 + 16 >> 0] = HEAP8[$5 + 16 >> 0] | 0;
  __ZN6vision12FeaturePointD2Ev($5);
  $$0 = $$0 + 1 | 0;
 }
 __ZN6vision14FREAKExtractor7extractERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS6_9allocatorIS8_EEEE($3, __ZN6vision8KeyframeILi96EE5storeEv($0) | 0, $1, $4);
 __ZNSt3__213__vector_baseIN6vision12FeaturePointENS_9allocatorIS2_EEED2Ev($4);
 STACKTOP = sp;
 return;
}

function __ZN6vision25DoGScaleInvariantDetector21findSubpixelLocationsEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$070 = 0, $$2 = 0, $10 = 0.0, $100 = 0, $105 = 0, $109 = 0, $11 = 0, $111 = 0, $114 = 0.0, $117 = 0.0, $133 = 0.0, $134 = 0, $137 = 0.0, $14 = 0.0, $144 = 0.0, $146 = 0, $151 = 0.0, $153 = 0, $16 = 0.0, $160 = 0.0, $162 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $41 = 0, $46 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $6 = 0, $63 = 0, $66 = 0, $67 = 0, $7 = 0, $70 = 0, $71 = 0, $73 = 0, $74 = 0, $81 = 0.0, $84 = 0.0, $87 = 0, $89 = 0, $90 = 0.0, $92 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $2 = sp + 68 | 0;
 $3 = sp;
 $4 = sp + 56 | 0;
 $5 = sp + 44 | 0;
 $6 = sp + 40 | 0;
 $7 = sp + 36 | 0;
 $10 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$0 + 52 >> 2]);
 $11 = $0 + 56 | 0;
 $14 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$11 >> 2] + 1.0);
 $16 = $14 / +HEAPF32[$11 >> 2];
 $17 = $0 + 60 | 0;
 $18 = $0 + 64 | 0;
 $19 = $0 + 32 | 0;
 $20 = $5 + 4 | 0;
 $21 = $0 + 88 | 0;
 $22 = $4 + 4 | 0;
 $23 = $4 + 8 | 0;
 $24 = $5 + 8 | 0;
 $$0 = 0;
 $$070 = 0;
 while (1) {
  $26 = HEAP32[$17 >> 2] | 0;
  $30 = $26;
  if ($$070 >>> 0 >= (((HEAP32[$18 >> 2] | 0) - $26 | 0) / 36 | 0) >>> 0) {
   label = 3;
   break;
  }
  $31 = $30 + ($$070 * 36 | 0) | 0;
  $32 = $30 + ($$070 * 36 | 0) + 16 | 0;
  $33 = HEAP32[$32 >> 2] | 0;
  if (($33 | 0) >= (__ZNK6vision10DoGPyramid17numScalePerOctaveEv($19) | 0)) {
   label = 5;
   break;
  }
  $51 = $30 + ($$070 * 36 | 0) + 12 | 0;
  $52 = HEAP32[$51 >> 2] | 0;
  $54 = Math_imul(__ZNK6vision10DoGPyramid17numScalePerOctaveEv($19) | 0, $52) | 0;
  $56 = $54 + (HEAP32[$32 >> 2] | 0) | 0;
  $58 = $30 + ($$070 * 36 | 0) + 4 | 0;
  __ZN6vision25bilinear_downsample_pointERfS0_ffi($6, $7, +HEAPF32[$31 >> 2], +HEAPF32[$58 >> 2], HEAP32[$51 >> 2] | 0);
  $63 = ~~(+HEAPF32[$6 >> 2] + .5);
  $66 = ~~(+HEAPF32[$7 >> 2] + .5);
  $67 = __ZNK6vision10DoGPyramid6imagesEv($19) | 0;
  $70 = (HEAP32[$67 >> 2] | 0) + ($56 + -1 << 5) | 0;
  $71 = __ZNK6vision10DoGPyramid6imagesEv($19) | 0;
  $73 = (HEAP32[$71 >> 2] | 0) + ($56 << 5) | 0;
  $74 = __ZNK6vision10DoGPyramid6imagesEv($19) | 0;
  if (__ZN6vision22ComputeSubpixelHessianEPfS0_RKNS_5ImageES3_S3_ii($3, $4, $70, $73, (HEAP32[$74 >> 2] | 0) + ($56 + 1 << 5) | 0, $63, $66) | 0) if (__ZN6vision29SolveSymmetricLinearSystem3x3IfEEbPT_PKS1_S4_($5, $3, $4) | 0) {
   $81 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$5 >> 2]);
   $84 = $81 + +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$20 >> 2]);
   if ($84 > +HEAPF32[$21 >> 2]) $$2 = $$0; else {
    $87 = $30 + ($$070 * 36 | 0) + 32 | 0;
    if (__ZN6vision16ComputeEdgeScoreERfPKf($87, $3) | 0) {
     $89 = $30 + ($$070 * 36 | 0) + 24 | 0;
     $90 = +HEAPF32[$89 >> 2];
     $92 = (__ZNK6vision5Image3getIfEEPKT_m($73, $66) | 0) + ($63 << 2) | 0;
     if (!($90 == +HEAPF32[$92 >> 2])) {
      label = 11;
      break;
     }
     $111 = (__ZNK6vision5Image3getIfEEPKT_m($73, $66) | 0) + ($63 << 2) | 0;
     $114 = +HEAPF32[$5 >> 2];
     $117 = +HEAPF32[$20 >> 2];
     HEAPF32[$89 >> 2] = +HEAPF32[$111 >> 2] - (+HEAPF32[$4 >> 2] * $114 + +HEAPF32[$22 >> 2] * $117 + +HEAPF32[$23 >> 2] * +HEAPF32[$24 >> 2]);
     __ZN6vision23bilinear_upsample_pointERfS0_ffi($31, $58, $114 + +HEAPF32[$6 >> 2], $117 + +HEAPF32[$7 >> 2], HEAP32[$51 >> 2] | 0);
     $133 = +HEAPF32[$24 >> 2] + +(HEAP32[$32 >> 2] | 0);
     $134 = $30 + ($$070 * 36 | 0) + 20 | 0;
     HEAPF32[$134 >> 2] = $133;
     $137 = +__ZN6vision10ClipScalarIfEET_S1_S1_S1_($133, 0.0, +(__ZNK6vision10DoGPyramid17numScalePerOctaveEv($19) | 0));
     HEAPF32[$134 >> 2] = $137;
     if (+Math_abs(+(+HEAPF32[$87 >> 2])) < $16) if (!(+__ZN6vision3sqrIfEET_S1_(+HEAPF32[$89 >> 2]) >= $10)) $$2 = $$0; else {
      $144 = +HEAPF32[$31 >> 2];
      if (!($144 >= 0.0)) $$2 = $$0; else {
       $146 = __ZNK6vision10DoGPyramid6imagesEv($19) | 0;
       if ($144 < +((__ZNK6vision5Image5widthEv(HEAP32[$146 >> 2] | 0) | 0) >>> 0)) {
        $151 = +HEAPF32[$58 >> 2];
        if (!($151 >= 0.0)) $$2 = $$0; else {
         $153 = __ZNK6vision10DoGPyramid6imagesEv($19) | 0;
         if ($151 < +((__ZNK6vision5Image6heightEv(HEAP32[$153 >> 2] | 0) | 0) >>> 0)) {
          $160 = +__ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf($1, HEAP32[$51 >> 2] | 0, +HEAPF32[$134 >> 2]);
          HEAPF32[$30 + ($$070 * 36 | 0) + 28 >> 2] = $160;
          $162 = $$0 + 1 | 0;
          dest = (HEAP32[$17 >> 2] | 0) + ($$0 * 36 | 0) | 0;
          src = $31;
          stop = dest + 36 | 0;
          do {
           HEAP32[dest >> 2] = HEAP32[src >> 2];
           dest = dest + 4 | 0;
           src = src + 4 | 0;
          } while ((dest | 0) < (stop | 0));
          $$2 = $162;
         } else $$2 = $$0;
        }
       } else $$2 = $$0;
      }
     } else $$2 = $$0;
    } else $$2 = $$0;
   }
  } else $$2 = $$0; else $$2 = $$0;
  $$0 = $$2;
  $$070 = $$070 + 1 | 0;
 }
 if ((label | 0) == 3) {
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE6resizeEm($17, $$0);
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 5) {
  $41 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22164) | 0, 20520) | 0, 33528) | 0, 489) | 0, 33535) | 0, 22236) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $41 + (HEAP32[(HEAP32[$41 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $46 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $50 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$46 >> 2] | 0) + 28 >> 2] & 63]($46, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($41, $50) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($41) | 0;
  _abort();
 } else if ((label | 0) == 11) {
  $100 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22273) | 0, 20520) | 0, 33528) | 0, 526) | 0, 33535) | 0, 22330) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $100 + (HEAP32[(HEAP32[$100 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $105 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $109 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$105 >> 2] | 0) + 28 >> 2] & 63]($105, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($100, $109) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($100) | 0;
  _abort();
 }
}

function __ZN6vision18BinomialPyramid32f5buildERKNS_5ImageE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $101 = 0, $103 = 0, $105 = 0, $111 = 0, $114 = 0, $117 = 0, $120 = 0, $123 = 0, $126 = 0, $129 = 0, $134 = 0, $136 = 0, $140 = 0, $142 = 0, $15 = 0, $19 = 0, $2 = 0, $27 = 0, $32 = 0, $36 = 0, $37 = 0, $43 = 0, $45 = 0, $54 = 0, $59 = 0, $63 = 0, $64 = 0, $73 = 0, $78 = 0, $82 = 0, $83 = 0, $92 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 if ((__ZNK6vision5Image4typeEv($1) | 0) != 1) {
  $10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 25254) | 0, 25069) | 0, 33528) | 0, 330) | 0, 33535) | 0, 25305) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $10 + (HEAP32[(HEAP32[$10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 28 >> 2] & 63]($15, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($10, $19) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($10) | 0;
  _abort();
 }
 if ((__ZNK6vision5Image8channelsEv($1) | 0) != 1) {
  $27 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 25329) | 0, 25069) | 0, 33528) | 0, 331) | 0, 33535) | 0, 25374) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $27 + (HEAP32[(HEAP32[$27 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 63]($32, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($27, $36) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($27) | 0;
  _abort();
 }
 $37 = $0 + 4 | 0;
 $43 = $0 + 16 | 0;
 $45 = $0 + 20 | 0;
 if (((HEAP32[$0 + 8 >> 2] | 0) - (HEAP32[$37 >> 2] | 0) >> 5 | 0) != (Math_imul(HEAP32[$45 >> 2] | 0, HEAP32[$43 >> 2] | 0) | 0)) {
  $54 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 25400) | 0, 25069) | 0, 33528) | 0, 333) | 0, 33535) | 0, 25474) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $54 + (HEAP32[(HEAP32[$54 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $59 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $63 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$59 >> 2] | 0) + 28 >> 2] & 63]($59, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($54, $63) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($54) | 0;
  _abort();
 }
 $64 = __ZNK6vision5Image5widthEv($1) | 0;
 if (($64 | 0) != (__ZNK6vision5Image5widthEv(HEAP32[$37 >> 2] | 0) | 0)) {
  $73 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 25509) | 0, 25069) | 0, 33528) | 0, 334) | 0, 33535) | 0, 25569) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $73 + (HEAP32[(HEAP32[$73 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $78 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $82 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$78 >> 2] | 0) + 28 >> 2] & 63]($78, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($73, $82) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($73) | 0;
  _abort();
 }
 $83 = __ZNK6vision5Image6heightEv($1) | 0;
 if (($83 | 0) != (__ZNK6vision5Image6heightEv(HEAP32[$37 >> 2] | 0) | 0)) {
  $92 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 25601) | 0, 25069) | 0, 33528) | 0, 335) | 0, 33535) | 0, 25569) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $92 + (HEAP32[(HEAP32[$92 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $97 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $101 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$97 >> 2] | 0) + 28 >> 2] & 63]($97, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($92, $101) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($92) | 0;
  _abort();
 }
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_($0, HEAP32[$37 >> 2] | 0, $1);
 $103 = HEAP32[$37 >> 2] | 0;
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_($0, $103 + 32 | 0, $103);
 $105 = HEAP32[$37 >> 2] | 0;
 __ZN6vision18BinomialPyramid32f18apply_filter_twiceERNS_5ImageERKS1_($0, $105 + 64 | 0, $105 + 32 | 0);
 $$0 = 1;
 while (1) {
  if ($$0 >>> 0 >= (HEAP32[$43 >> 2] | 0) >>> 0) break;
  $111 = Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0;
  $114 = __ZN6vision5Image3getEv((HEAP32[$37 >> 2] | 0) + ($111 << 5) | 0) | 0;
  $117 = (Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0) + -1 | 0;
  $120 = __ZN6vision5Image3getEv((HEAP32[$37 >> 2] | 0) + ($117 << 5) | 0) | 0;
  $123 = (Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0) + -1 | 0;
  $126 = __ZNK6vision5Image5widthEv((HEAP32[$37 >> 2] | 0) + ($123 << 5) | 0) | 0;
  $129 = (Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0) + -1 | 0;
  __ZN6vision19downsample_bilinearEPfPKfmm($114, $120, $126, __ZNK6vision5Image6heightEv((HEAP32[$37 >> 2] | 0) + ($129 << 5) | 0) | 0);
  $134 = Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0;
  $136 = HEAP32[$37 >> 2] | 0;
  __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_($0, $136 + ($134 + 1 << 5) | 0, $136 + ($134 << 5) | 0);
  $140 = Math_imul(HEAP32[$45 >> 2] | 0, $$0) | 0;
  $142 = HEAP32[$37 >> 2] | 0;
  __ZN6vision18BinomialPyramid32f18apply_filter_twiceERNS_5ImageERKS1_($0, $142 + ($140 + 2 << 5) | 0, $142 + ($140 + 1 << 5) | 0);
  $$0 = $$0 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_binary_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i71 = 0, $$0$i$i$i = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$i57 = 0, $$0$i$i$i61 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i70 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $63 = 0, $64 = 0, $7 = 0, $78 = 0, $79 = 0, $8 = 0, $86 = 0, $87 = 0, $9 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $4 = sp + 84 | 0;
 $5 = sp + 72 | 0;
 $6 = sp + 60 | 0;
 $7 = sp + 48 | 0;
 $8 = sp + 36 | 0;
 $9 = sp + 24 | 0;
 $10 = sp + 12 | 0;
 $11 = sp;
 $12 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $3) | 0;
 do if (($12 | 0) == ($0 | 0)) $$1 = $0; else {
  $14 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($12, $1, $3) | 0;
  $16 = $3 + 4 | 0;
  if (($14 | 0) == ($12 | 0)) {
   $95 = HEAP32[$16 >> 2] | 0;
   $$0$i$i$idx$i70 = 0;
   while (1) {
    if (($$0$i$i$idx$i70 | 0) == -1) break;
    $$0$i$i$add$i71 = $$0$i$i$idx$i70 + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($95 + ($$0$i$i$add$i71 * 24 | 0) | 0);
    $$0$i$i$idx$i70 = $$0$i$i$add$i71;
   }
   HEAP32[$16 >> 2] = $95 + -24;
   $$1 = $0;
   break;
  }
  $17 = HEAP32[$16 >> 2] | 0;
  if ((($17 - (HEAP32[$3 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$1 = $0; else {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $17 + -24 | 0);
   $24 = HEAP32[$16 >> 2] | 0;
   $$0$i$i$idx$i = 0;
   while (1) {
    if (($$0$i$i$idx$i | 0) == -1) break;
    $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($24 + ($$0$i$i$add$i * 24 | 0) | 0);
    $$0$i$i$idx$i = $$0$i$i$add$i;
   }
   HEAP32[$16 >> 2] = $24 + -24;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $24 + -48 | 0);
   $28 = HEAP32[$16 >> 2] | 0;
   $29 = $28 + -24 | 0;
   $30 = $29 + 11 | 0;
   if ((HEAP8[$30 >> 0] | 0) < 0) {
    $33 = HEAP32[$29 >> 2] | 0;
    HEAP8[$4 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($33, $4);
    HEAP32[$28 + -20 >> 2] = 0;
   } else {
    HEAP8[$4 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($29, $4);
    HEAP8[$30 >> 0] = 0;
   }
   $35 = __ZNSt3__211char_traitsIcE6lengthEPKc(49667) | 0;
   $36 = $2 + 11 | 0;
   $37 = HEAP8[$36 >> 0] | 0;
   $39 = $2 + 4 | 0;
   if (($35 | 0) == (($37 << 24 >> 24 < 0 ? HEAP32[$39 >> 2] | 0 : $37 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($2, 49667, $35) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($29, 40);
   __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($11, 49631, $6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($11, 49917) | 0;
   HEAP32[$10 >> 2] = HEAP32[$11 >> 2];
   HEAP32[$10 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
   HEAP32[$10 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$11 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   $49 = HEAP8[$36 >> 0] | 0;
   $50 = $49 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($10, $50 ? HEAP32[$2 >> 2] | 0 : $2, $50 ? HEAP32[$39 >> 2] | 0 : $49 & 255) | 0;
   HEAP32[$9 >> 2] = HEAP32[$10 >> 2];
   HEAP32[$9 + 4 >> 2] = HEAP32[$10 + 4 >> 2];
   HEAP32[$9 + 8 >> 2] = HEAP32[$10 + 8 >> 2];
   $$0$i$i$i50 = 0;
   while (1) {
    if (($$0$i$i$i50 | 0) == 3) break;
    HEAP32[$10 + ($$0$i$i$i50 << 2) >> 2] = 0;
    $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($9, 49626) | 0;
   HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
   HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
   $$0$i$i$i53 = 0;
   while (1) {
    if (($$0$i$i$i53 | 0) == 3) break;
    HEAP32[$9 + ($$0$i$i$i53 << 2) >> 2] = 0;
    $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
   }
   $63 = HEAP8[$5 + 11 >> 0] | 0;
   $64 = $63 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($8, $64 ? HEAP32[$5 >> 2] | 0 : $5, $64 ? HEAP32[$5 + 4 >> 2] | 0 : $63 & 255) | 0;
   HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
   HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
   HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
   $$0$i$i$i57 = 0;
   while (1) {
    if (($$0$i$i$i57 | 0) == 3) break;
    HEAP32[$8 + ($$0$i$i$i57 << 2) >> 2] = 0;
    $$0$i$i$i57 = $$0$i$i$i57 + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($7, 49629) | 0;
   HEAP32[$4 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$4 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$4 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   $$0$i$i$i61 = 0;
   while (1) {
    if (($$0$i$i$i61 | 0) == 3) break;
    HEAP32[$7 + ($$0$i$i$i61 << 2) >> 2] = 0;
    $$0$i$i$i61 = $$0$i$i$i61 + 1 | 0;
   }
   $78 = HEAP8[$4 + 11 >> 0] | 0;
   $79 = $78 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($29, $79 ? HEAP32[$4 >> 2] | 0 : $4, $79 ? HEAP32[$4 + 4 >> 2] | 0 : $78 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($10);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($11);
   $86 = __ZNSt3__211char_traitsIcE6lengthEPKc(49667) | 0;
   $87 = HEAP8[$36 >> 0] | 0;
   if (($86 | 0) == (($87 << 24 >> 24 < 0 ? HEAP32[$39 >> 2] | 0 : $87 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($2, 49667, $86) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($29, 41);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   $$1 = $14;
  }
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function _pattern_match($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0175 = 0.0, $$0178 = 0, $$0180 = 0, $$0184 = 0, $$0186 = 0, $$0192 = 0, $$0200 = 0, $$0208 = 0, $$0210 = 0, $$1176 = 0.0, $$1179 = 0, $$1181 = 0, $$1181$in = 0, $$1185 = 0, $$1187 = 0, $$1193 = 0, $$1201 = 0, $$1209 = 0, $$1211 = 0, $$2 = 0, $$2182 = 0, $$2188 = 0, $$2202 = 0, $$2212 = 0, $$3 = 0.0, $$3183 = 0, $$3183$in = 0, $$3189 = 0, $$3195 = 0, $$3203 = 0, $$3213 = 0, $$4 = 0.0, $$4190 = 0, $$4196 = 0, $$4204 = 0, $$5 = 0.0, $$5191 = 0, $$5197 = 0, $$5205 = 0, $$6206 = 0, $$7 = 0.0, $$7199 = 0, $$7207 = 0, $10 = 0, $115 = 0.0, $116 = 0, $12 = 0, $18 = 0, $20 = 0, $25 = 0, $31 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $44 = 0, $45 = 0, $61 = 0.0, $62 = 0, $65 = 0, $67 = 0, $75 = 0, $80 = 0, $86 = 0.0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $95 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 L1 : do if (($0 | 0) == 0 | ($3 | 0) < 1) {
  HEAP32[$4 >> 2] = 0;
  HEAP32[$5 >> 2] = 0;
  HEAPF64[$6 >> 3] = -1.0;
  $$2 = -1;
 } else switch ($1 | 0) {
 case 0:
  {
   $9 = Math_imul($3, $3) | 0;
   $10 = $9 * 3 | 0;
   $12 = _malloc($9 * 12 | 0) | 0;
   if (!$12) {
    _arLog(0, 3, 20454, $vararg_buffer);
    _exit(1);
   }
   $$0186 = 0;
   $$0208 = 0;
   while (1) {
    if (($$0186 | 0) == ($10 | 0)) break;
    $18 = $$0208 + (~HEAP8[$2 + $$0186 >> 0] & 255) | 0;
    $$0186 = $$0186 + 1 | 0;
    $$0208 = $18;
   }
   $20 = ($$0208 >>> 0) / ($10 >>> 0) | 0;
   $$0210 = 0;
   $$1187 = 0;
   while (1) {
    if (($$1187 | 0) == ($10 | 0)) break;
    $25 = (~HEAP8[$2 + $$1187 >> 0] & 255) - $20 | 0;
    HEAP32[$12 + ($$1187 << 2) >> 2] = $25;
    $$0210 = (Math_imul($25, $25) | 0) + $$0210 | 0;
    $$1187 = $$1187 + 1 | 0;
   }
   $31 = +Math_sqrt(+(+($$0210 | 0)));
   if ($31 / (+($3 | 0) * 1.7320508) < 15.0) {
    HEAP32[$4 >> 2] = 0;
    HEAP32[$5 >> 2] = 0;
    HEAPF64[$6 >> 3] = -1.0;
    _free($12);
    $$2 = -2;
    break L1;
   }
   $36 = HEAP32[$0 >> 2] | 0;
   $37 = $0 + 8 | 0;
   $38 = $0 + 12 | 0;
   $39 = $0 + 16 | 0;
   $$0175 = 0.0;
   $$0178 = 0;
   $$0180 = -1;
   $$0192 = -1;
   $$0200 = -1;
   while (1) {
    if (($$0178 | 0) >= ($36 | 0)) break;
    $41 = HEAP32[$37 >> 2] | 0;
    $$1181$in = $$0180;
    L23 : while (1) {
     $$1181 = $$1181$in + 1 | 0;
     switch (HEAP32[$41 + ($$1181 << 2) >> 2] | 0) {
     case 0:
      {
       $$1181$in = $$1181;
       break;
      }
     case 2:
      {
       $$3 = $$0175;
       $$3195 = $$0192;
       $$3203 = $$0200;
       break L23;
       break;
      }
     default:
      {
       label = 18;
       break L23;
      }
     }
    }
    L25 : do if ((label | 0) == 18) {
     label = 0;
     $44 = $$1181 << 2;
     $$0184 = 0;
     $$1176 = $$0175;
     $$1193 = $$0192;
     $$1201 = $$0200;
     while (1) {
      if (($$0184 | 0) == 4) {
       $$3 = $$1176;
       $$3195 = $$1193;
       $$3203 = $$1201;
       break L25;
      }
      $45 = $$0184 + $44 | 0;
      $$1211 = 0;
      $$2188 = 0;
      while (1) {
       if (($$2188 | 0) == ($10 | 0)) break;
       $$1211 = (Math_imul(HEAP32[(HEAP32[(HEAP32[$38 >> 2] | 0) + ($45 << 2) >> 2] | 0) + ($$2188 << 2) >> 2] | 0, HEAP32[$12 + ($$2188 << 2) >> 2] | 0) | 0) + $$1211 | 0;
       $$2188 = $$2188 + 1 | 0;
      }
      $61 = +($$1211 | 0) / +HEAPF64[(HEAP32[$39 >> 2] | 0) + ($45 << 3) >> 3] / $31;
      $62 = $61 > $$1176;
      $$2202 = $62 ? $$0184 : $$1201;
      $$0184 = $$0184 + 1 | 0;
      $$1176 = $62 ? $61 : $$1176;
      $$1193 = $62 ? $$1181 : $$1193;
      $$1201 = $$2202;
     }
    } while (0);
    $$0175 = $$3;
    $$0178 = $$0178 + 1 | 0;
    $$0180 = $$1181;
    $$0192 = $$3195;
    $$0200 = $$3203;
   }
   HEAP32[$5 >> 2] = $$0200;
   HEAP32[$4 >> 2] = $$0192;
   HEAPF64[$6 >> 3] = $$0175;
   _free($12);
   $$2 = 0;
   break L1;
   break;
  }
 case 1:
  {
   $65 = Math_imul($3, $3) | 0;
   $67 = _malloc($65 << 2) | 0;
   if (!$67) {
    _arLog(0, 3, 20454, $vararg_buffer1);
    _exit(1);
   }
   $$1209 = 0;
   $$3189 = 0;
   while (1) {
    if (($$3189 | 0) == ($65 | 0)) break;
    $$1209 = $$1209 + (~HEAP8[$2 + $$3189 >> 0] & 255) | 0;
    $$3189 = $$3189 + 1 | 0;
   }
   $75 = ($$1209 >>> 0) / ($65 >>> 0) | 0;
   $$2212 = 0;
   $$4190 = 0;
   while (1) {
    if (($$4190 | 0) == ($65 | 0)) break;
    $80 = (~HEAP8[$2 + $$4190 >> 0] & 255) - $75 | 0;
    HEAP32[$67 + ($$4190 << 2) >> 2] = $80;
    $$2212 = (Math_imul($80, $80) | 0) + $$2212 | 0;
    $$4190 = $$4190 + 1 | 0;
   }
   $86 = +Math_sqrt(+(+($$2212 | 0)));
   if ($86 / +($3 | 0) < 15.0) {
    HEAP32[$4 >> 2] = 0;
    HEAP32[$5 >> 2] = 0;
    HEAPF64[$6 >> 3] = -1.0;
    _free($67);
    $$2 = -2;
    break L1;
   }
   $90 = HEAP32[$0 >> 2] | 0;
   $91 = $0 + 8 | 0;
   $92 = $0 + 20 | 0;
   $93 = $0 + 24 | 0;
   $$1179 = 0;
   $$2182 = -1;
   $$4 = 0.0;
   $$4196 = -1;
   $$4204 = -1;
   while (1) {
    if (($$1179 | 0) >= ($90 | 0)) break;
    $95 = HEAP32[$91 >> 2] | 0;
    $$3183$in = $$2182;
    L54 : while (1) {
     $$3183 = $$3183$in + 1 | 0;
     switch (HEAP32[$95 + ($$3183 << 2) >> 2] | 0) {
     case 0:
      {
       $$3183$in = $$3183;
       break;
      }
     case 2:
      {
       $$7 = $$4;
       $$7199 = $$4196;
       $$7207 = $$4204;
       break L54;
       break;
      }
     default:
      {
       label = 40;
       break L54;
      }
     }
    }
    L56 : do if ((label | 0) == 40) {
     label = 0;
     $98 = $$3183 << 2;
     $$1185 = 0;
     $$5 = $$4;
     $$5197 = $$4196;
     $$5205 = $$4204;
     while (1) {
      if (($$1185 | 0) == 4) {
       $$7 = $$5;
       $$7199 = $$5197;
       $$7207 = $$5205;
       break L56;
      }
      $99 = $$1185 + $98 | 0;
      $$3213 = 0;
      $$5191 = 0;
      while (1) {
       if (($$5191 | 0) == ($65 | 0)) break;
       $$3213 = (Math_imul(HEAP32[(HEAP32[(HEAP32[$92 >> 2] | 0) + ($99 << 2) >> 2] | 0) + ($$5191 << 2) >> 2] | 0, HEAP32[$67 + ($$5191 << 2) >> 2] | 0) | 0) + $$3213 | 0;
       $$5191 = $$5191 + 1 | 0;
      }
      $115 = +($$3213 | 0) / +HEAPF64[(HEAP32[$93 >> 2] | 0) + ($99 << 3) >> 3] / $86;
      $116 = $115 > $$5;
      $$6206 = $116 ? $$1185 : $$5205;
      $$1185 = $$1185 + 1 | 0;
      $$5 = $116 ? $115 : $$5;
      $$5197 = $116 ? $$3183 : $$5197;
      $$5205 = $$6206;
     }
    } while (0);
    $$1179 = $$1179 + 1 | 0;
    $$2182 = $$3183;
    $$4 = $$7;
    $$4196 = $$7199;
    $$4204 = $$7207;
   }
   HEAP32[$5 >> 2] = $$4204;
   HEAP32[$4 >> 2] = $$4196;
   HEAPF64[$6 >> 3] = $$4;
   _free($67);
   $$2 = 0;
   break L1;
   break;
  }
 default:
  {
   $$2 = -1;
   break L1;
  }
 } while (0);
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 $14 = $14 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i108 = 0, $$0$i$i112 = 0, $$0$ph = 0, $$0101 = 0, $$0103 = 0, $$0106 = 0, $$07$i$i = 0, $$095 = 0, $$097 = 0, $$099 = 0, $$1 = 0, $$1102 = 0, $$1104 = 0, $$196 = 0, $$198 = 0, $$2 = 0, $$2105 = 0, $$3 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $126 = 0, $129 = 0, $130 = 0, $132 = 0, $135 = 0, $136 = 0, $138 = 0, $142 = 0, $144 = 0, $146 = 0, $147 = 0, $150 = 0, $151 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $30 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $51 = 0, $52 = 0, $54 = 0, $55 = 0, $58 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $69 = 0, $79 = 0, $81 = 0, $82 = 0, $83 = 0, $91 = 0, $92 = 0, $93 = 0, $99 = 0, $spec$select = 0;
 HEAP32[$2 >> 2] = $0;
 $16 = $13 + 8 + 3 | 0;
 $17 = $13 + 4 | 0;
 $19 = $12 + 8 + 3 | 0;
 $20 = $12 + 4 | 0;
 $22 = ($3 & 512 | 0) == 0;
 $23 = ($14 | 0) > 0;
 $24 = $11 + 11 | 0;
 $25 = $11 + 4 | 0;
 $$0106 = 0;
 $$099 = $4;
 while (1) {
  if (($$0106 | 0) == 4) break;
  L4 : do switch (HEAP8[$8 + $$0106 >> 0] | 0) {
  case 0:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $$2 = $$099;
    break;
   }
  case 1:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 63]($6, 32) | 0;
    $41 = HEAP32[$2 >> 2] | 0;
    HEAP32[$2 >> 2] = $41 + 4;
    HEAP32[$41 >> 2] = $40;
    $$2 = $$099;
    break;
   }
  case 3:
   {
    $43 = HEAP8[$16 >> 0] | 0;
    $44 = $43 << 24 >> 24 < 0;
    if (!(($44 ? HEAP32[$17 >> 2] | 0 : $43 & 255) | 0)) $$2 = $$099; else {
     $51 = HEAP32[($44 ? HEAP32[$13 >> 2] | 0 : $13) >> 2] | 0;
     $52 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $52 + 4;
     HEAP32[$52 >> 2] = $51;
     $$2 = $$099;
    }
    break;
   }
  case 2:
   {
    $54 = HEAP8[$19 >> 0] | 0;
    $55 = $54 << 24 >> 24 < 0;
    $58 = $55 ? HEAP32[$20 >> 2] | 0 : $54 & 255;
    if ($22 | ($58 | 0) == 0) $$2 = $$099; else {
     $61 = $55 ? HEAP32[$12 >> 2] | 0 : $12;
     $62 = $61 + ($58 << 2) | 0;
     $63 = HEAP32[$2 >> 2] | 0;
     $$0$i$i112 = $63;
     $64 = $61;
     while (1) {
      if (($64 | 0) == ($62 | 0)) break;
      HEAP32[$$0$i$i112 >> 2] = HEAP32[$64 >> 2];
      $$0$i$i112 = $$0$i$i112 + 4 | 0;
      $64 = $64 + 4 | 0;
     }
     HEAP32[$2 >> 2] = $63 + ($58 << 2);
     $$2 = $$099;
    }
    break;
   }
  case 4:
   {
    $69 = HEAP32[$2 >> 2] | 0;
    $spec$select = $7 ? $$099 + 4 | 0 : $$099;
    $$0103 = $spec$select;
    while (1) {
     if ($$0103 >>> 0 >= $5 >>> 0) break;
     if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 12 >> 2] & 63]($6, 2048, HEAP32[$$0103 >> 2] | 0) | 0)) break;
     $$0103 = $$0103 + 4 | 0;
    }
    if ($23) {
     $$0101 = $14;
     $$1104 = $$0103;
     while (1) {
      $79 = ($$0101 | 0) > 0;
      if (!($$1104 >>> 0 > $spec$select >>> 0 & $79)) break;
      $81 = $$1104 + -4 | 0;
      $82 = HEAP32[$81 >> 2] | 0;
      $83 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $83 + 4;
      HEAP32[$83 >> 2] = $82;
      $$0101 = $$0101 + -1 | 0;
      $$1104 = $81;
     }
     if ($79) $93 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 63]($6, 48) | 0; else $93 = 0;
     $$1102 = $$0101;
     $92 = HEAP32[$2 >> 2] | 0;
     while (1) {
      $91 = $92 + 4 | 0;
      if (($$1102 | 0) <= 0) break;
      HEAP32[$92 >> 2] = $93;
      $$1102 = $$1102 + -1 | 0;
      $92 = $91;
     }
     HEAP32[$2 >> 2] = $91;
     HEAP32[$92 >> 2] = $9;
     $$2105 = $$1104;
    } else $$2105 = $$0103;
    if (($$2105 | 0) == ($spec$select | 0)) {
     $99 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 44 >> 2] & 63]($6, 48) | 0;
     $100 = HEAP32[$2 >> 2] | 0;
     $101 = $100 + 4 | 0;
     HEAP32[$2 >> 2] = $101;
     HEAP32[$100 >> 2] = $99;
     $135 = $101;
    } else {
     $102 = HEAP8[$24 >> 0] | 0;
     $103 = $102 << 24 >> 24 < 0;
     if (!(($103 ? HEAP32[$25 >> 2] | 0 : $102 & 255) | 0)) $$0$ph = -1; else $$0$ph = HEAP8[($103 ? HEAP32[$11 >> 2] | 0 : $11) >> 0] | 0;
     $$0 = $$0$ph;
     $$095 = 0;
     $$097 = 0;
     $$3 = $$2105;
     while (1) {
      if (($$3 | 0) == ($spec$select | 0)) break;
      $114 = HEAP32[$2 >> 2] | 0;
      if (($$097 | 0) == ($$0 | 0)) {
       $115 = $114 + 4 | 0;
       HEAP32[$2 >> 2] = $115;
       HEAP32[$114 >> 2] = $10;
       $116 = $$095 + 1 | 0;
       $117 = HEAP8[$24 >> 0] | 0;
       $118 = $117 << 24 >> 24 < 0;
       if ($116 >>> 0 < ($118 ? HEAP32[$25 >> 2] | 0 : $117 & 255) >>> 0) {
        $126 = HEAP8[($118 ? HEAP32[$11 >> 2] | 0 : $11) + $116 >> 0] | 0;
        $$1 = $126 << 24 >> 24 == 127 ? -1 : $126 << 24 >> 24;
        $$196 = $116;
        $$198 = 0;
        $132 = $115;
       } else {
        $$1 = $$097;
        $$196 = $116;
        $$198 = 0;
        $132 = $115;
       }
      } else {
       $$1 = $$0;
       $$196 = $$095;
       $$198 = $$097;
       $132 = $114;
      }
      $129 = $$3 + -4 | 0;
      $130 = HEAP32[$129 >> 2] | 0;
      HEAP32[$2 >> 2] = $132 + 4;
      HEAP32[$132 >> 2] = $130;
      $$0 = $$1;
      $$095 = $$196;
      $$097 = $$198 + 1 | 0;
      $$3 = $129;
     }
     $135 = HEAP32[$2 >> 2] | 0;
    }
    if (($69 | 0) == ($135 | 0)) $$2 = $spec$select; else {
     $$0$i$i108 = $135;
     $$07$i$i = $69;
     while (1) {
      $136 = $$0$i$i108 + -4 | 0;
      if ($$07$i$i >>> 0 >= $136 >>> 0) {
       $$2 = $spec$select;
       break L4;
      }
      $138 = HEAP32[$$07$i$i >> 2] | 0;
      HEAP32[$$07$i$i >> 2] = HEAP32[$136 >> 2];
      HEAP32[$136 >> 2] = $138;
      $$0$i$i108 = $136;
      $$07$i$i = $$07$i$i + 4 | 0;
     }
    }
    break;
   }
  default:
   $$2 = $$099;
  } while (0);
  $$0106 = $$0106 + 1 | 0;
  $$099 = $$2;
 }
 $26 = HEAP8[$16 >> 0] | 0;
 $27 = $26 << 24 >> 24 < 0;
 $30 = $27 ? HEAP32[$17 >> 2] | 0 : $26 & 255;
 if ($30 >>> 0 > 1) {
  $142 = HEAP32[$13 >> 2] | 0;
  $144 = $27 ? $142 + 4 | 0 : $17;
  $146 = ($27 ? $142 : $13) + ($30 << 2) | 0;
  $147 = HEAP32[$2 >> 2] | 0;
  $150 = $146 - $144 | 0;
  $$0$i$i = $147;
  $151 = $144;
  while (1) {
   if (($151 | 0) == ($146 | 0)) break;
   HEAP32[$$0$i$i >> 2] = HEAP32[$151 >> 2];
   $$0$i$i = $$0$i$i + 4 | 0;
   $151 = $151 + 4 | 0;
  }
  HEAP32[$2 >> 2] = $147 + ($150 >>> 2 << 2);
 }
 switch (($3 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$1 >> 2] = $0;
 }
 return;
}

function _get_sof($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0171 = 0, $$0172 = 0, $$0184 = 0, $$0185 = 0, $$1 = 0, $$10 = 0, $$10182 = 0, $$11 = 0, $$11183 = 0, $$1173 = 0, $$2 = 0, $$2174 = 0, $$3 = 0, $$3175 = 0, $$4 = 0, $$4176 = 0, $$5 = 0, $$5177 = 0, $$6 = 0, $$6178 = 0, $$7 = 0, $$7179 = 0, $$7179$pn = 0, $$8 = 0, $$8$in = 0, $$8180 = 0, $$9 = 0, $$9181 = 0, $107 = 0, $108 = 0, $109 = 0, $122 = 0, $127 = 0, $134 = 0, $136 = 0, $140 = 0, $142 = 0, $145 = 0, $146 = 0, $153 = 0, $154 = 0, $164 = 0, $165 = 0, $17 = 0, $174 = 0, $175 = 0, $177 = 0, $179 = 0, $18 = 0, $181 = 0, $190 = 0, $191 = 0, $207 = 0, $21 = 0, $29 = 0, $30 = 0, $33 = 0, $4 = 0, $41 = 0, $42 = 0, $5 = 0, $53 = 0, $54 = 0, $57 = 0, $58 = 0, $6 = 0, $66 = 0, $67 = 0, $7 = 0, $71 = 0, $79 = 0, $80 = 0, $83 = 0, $84 = 0, $92 = 0, $93 = 0, $97 = 0, label = 0;
 $4 = HEAP32[$0 + 24 >> 2] | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $4 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 HEAP32[$0 + 220 >> 2] = $1;
 HEAP32[$0 + 224 >> 2] = $2;
 if (!$7) if (!(FUNCTION_TABLE_ii[HEAP32[$4 + 12 >> 2] & 127]($0) | 0)) $$0 = 0; else {
  $$0171 = HEAP32[$6 >> 2] | 0;
  $$0172 = HEAP32[$4 >> 2] | 0;
  label = 4;
 } else {
  $$0171 = $7;
  $$0172 = $5;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $17 = $$0171 + -1 | 0;
  $18 = $$0172 + 1 | 0;
  $21 = (HEAPU8[$$0172 >> 0] | 0) << 8;
  if (!$17) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$4 + 12 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$1 = HEAP32[$6 >> 2] | 0;
   $$1173 = HEAP32[$4 >> 2] | 0;
  } else {
   $$1 = $17;
   $$1173 = $18;
  }
  $29 = $$1 + -1 | 0;
  $30 = $$1173 + 1 | 0;
  $33 = $21 | (HEAPU8[$$1173 >> 0] | 0);
  if (!$29) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$4 + 12 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$2 = HEAP32[$6 >> 2] | 0;
   $$2174 = HEAP32[$4 >> 2] | 0;
  } else {
   $$2 = $29;
   $$2174 = $30;
  }
  $41 = $$2 + -1 | 0;
  $42 = $$2174 + 1 | 0;
  HEAP32[$0 + 212 >> 2] = HEAPU8[$$2174 >> 0];
  if (!$41) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$4 + 12 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$3 = HEAP32[$6 >> 2] | 0;
   $$3175 = HEAP32[$4 >> 2] | 0;
  } else {
   $$3 = $41;
   $$3175 = $42;
  }
  $53 = $$3 + -1 | 0;
  $54 = $$3175 + 1 | 0;
  $57 = (HEAPU8[$$3175 >> 0] | 0) << 8;
  $58 = $0 + 32 | 0;
  HEAP32[$58 >> 2] = $57;
  if (!$53) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$4 + 12 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$4 = HEAP32[$6 >> 2] | 0;
   $$4176 = HEAP32[$4 >> 2] | 0;
   $71 = HEAP32[$58 >> 2] | 0;
  } else {
   $$4 = $53;
   $$4176 = $54;
   $71 = $57;
  }
  $66 = $$4 + -1 | 0;
  $67 = $$4176 + 1 | 0;
  HEAP32[$58 >> 2] = $71 + (HEAPU8[$$4176 >> 0] | 0);
  if (!$66) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$4 + 12 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$5 = HEAP32[$6 >> 2] | 0;
   $$5177 = HEAP32[$4 >> 2] | 0;
  } else {
   $$5 = $66;
   $$5177 = $67;
  }
  $79 = $$5 + -1 | 0;
  $80 = $$5177 + 1 | 0;
  $83 = (HEAPU8[$$5177 >> 0] | 0) << 8;
  $84 = $0 + 28 | 0;
  HEAP32[$84 >> 2] = $83;
  if (!$79) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$4 + 12 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$6 = HEAP32[$6 >> 2] | 0;
   $$6178 = HEAP32[$4 >> 2] | 0;
   $97 = HEAP32[$84 >> 2] | 0;
  } else {
   $$6 = $79;
   $$6178 = $80;
   $97 = $83;
  }
  $92 = $$6 + -1 | 0;
  $93 = $$6178 + 1 | 0;
  HEAP32[$84 >> 2] = $97 + (HEAPU8[$$6178 >> 0] | 0);
  if (!$92) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$4 + 12 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$7 = HEAP32[$6 >> 2] | 0;
   $$7179 = HEAP32[$4 >> 2] | 0;
  } else {
   $$7 = $92;
   $$7179 = $93;
  }
  $107 = $0 + 36 | 0;
  HEAP32[$107 >> 2] = HEAPU8[$$7179 >> 0];
  $108 = $33 + -8 | 0;
  $109 = HEAP32[$0 >> 2] | 0;
  HEAP32[$109 + 24 >> 2] = HEAP32[$0 + 416 >> 2];
  HEAP32[$109 + 28 >> 2] = HEAP32[$84 >> 2];
  HEAP32[$109 + 32 >> 2] = HEAP32[$58 >> 2];
  HEAP32[$109 + 36 >> 2] = HEAP32[$107 >> 2];
  HEAP32[$109 + 20 >> 2] = 100;
  FUNCTION_TABLE_vii[HEAP32[$109 + 4 >> 2] & 63]($0, 1);
  $122 = $0 + 440 | 0;
  if (HEAP32[(HEAP32[$122 >> 2] | 0) + 16 >> 2] | 0) {
   $127 = HEAP32[$0 >> 2] | 0;
   HEAP32[$127 + 20 >> 2] = 58;
   FUNCTION_TABLE_vi[HEAP32[$127 >> 2] & 255]($0);
  }
  if (!(HEAP32[$58 >> 2] | 0)) label = 30; else if (!(HEAP32[$84 >> 2] | 0)) label = 30; else {
   $134 = HEAP32[$107 >> 2] | 0;
   if (($134 | 0) < 1) label = 30; else $140 = $134;
  }
  if ((label | 0) == 30) {
   $136 = HEAP32[$0 >> 2] | 0;
   HEAP32[$136 + 20 >> 2] = 32;
   FUNCTION_TABLE_vi[HEAP32[$136 >> 2] & 255]($0);
   $140 = HEAP32[$107 >> 2] | 0;
  }
  if (($108 | 0) != ($140 * 3 | 0)) {
   $142 = HEAP32[$0 >> 2] | 0;
   HEAP32[$142 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[$142 >> 2] & 255]($0);
  }
  $145 = $0 + 216 | 0;
  $146 = HEAP32[$145 >> 2] | 0;
  if (!$146) {
   $153 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, (HEAP32[$107 >> 2] | 0) * 84 | 0) | 0;
   HEAP32[$145 >> 2] = $153;
   $207 = $153;
  } else $207 = $146;
  $154 = $4 + 12 | 0;
  $$0184 = 0;
  $$0185 = $207;
  $$7179$pn = $$7179;
  $$8$in = $$7;
  while (1) {
   $$8 = $$8$in + -1 | 0;
   $$8180 = $$7179$pn + 1 | 0;
   if (($$0184 | 0) >= (HEAP32[$107 >> 2] | 0)) break;
   HEAP32[$$0185 + 4 >> 2] = $$0184;
   if (!$$8) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$154 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     break L4;
    }
    $$9 = HEAP32[$6 >> 2] | 0;
    $$9181 = HEAP32[$4 >> 2] | 0;
   } else {
    $$9 = $$8;
    $$9181 = $$8180;
   }
   $164 = $$9 + -1 | 0;
   $165 = $$9181 + 1 | 0;
   HEAP32[$$0185 >> 2] = HEAPU8[$$9181 >> 0];
   if (!$164) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$154 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     break L4;
    }
    $$10 = HEAP32[$6 >> 2] | 0;
    $$10182 = HEAP32[$4 >> 2] | 0;
   } else {
    $$10 = $164;
    $$10182 = $165;
   }
   $174 = $$10 + -1 | 0;
   $175 = $$10182 + 1 | 0;
   $177 = HEAPU8[$$10182 >> 0] | 0;
   $179 = $$0185 + 8 | 0;
   HEAP32[$179 >> 2] = $177 >>> 4;
   $181 = $$0185 + 12 | 0;
   HEAP32[$181 >> 2] = $177 & 15;
   if (!$174) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$154 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     break L4;
    }
    $$11 = HEAP32[$6 >> 2] | 0;
    $$11183 = HEAP32[$4 >> 2] | 0;
   } else {
    $$11 = $174;
    $$11183 = $175;
   }
   $190 = $$0185 + 16 | 0;
   HEAP32[$190 >> 2] = HEAPU8[$$11183 >> 0];
   $191 = HEAP32[$0 >> 2] | 0;
   HEAP32[$191 + 24 >> 2] = HEAP32[$$0185 >> 2];
   HEAP32[$191 + 28 >> 2] = HEAP32[$179 >> 2];
   HEAP32[$191 + 32 >> 2] = HEAP32[$181 >> 2];
   HEAP32[$191 + 36 >> 2] = HEAP32[$190 >> 2];
   HEAP32[$191 + 20 >> 2] = 101;
   FUNCTION_TABLE_vii[HEAP32[$191 + 4 >> 2] & 63]($0, 1);
   $$0184 = $$0184 + 1 | 0;
   $$0185 = $$0185 + 84 | 0;
   $$7179$pn = $$11183;
   $$8$in = $$11;
  }
  HEAP32[(HEAP32[$122 >> 2] | 0) + 16 >> 2] = 1;
  HEAP32[$4 >> 2] = $$8180;
  HEAP32[$6 >> 2] = $$8;
  $$0 = 1;
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i$i$i40 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i2$i$i46 = 0, $$0$i$i36 = 0, $$0$in = 0, $$023 = 0, $$023$in = 0, $$2 = 0, $107 = 0, $108 = 0, $111 = 0, $113 = 0, $123 = 0, $137 = 0, $138 = 0, $139 = 0, $140 = 0, $151 = 0, $163 = 0, $166 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $20 = 0, $23 = 0, $37 = 0, $39 = 0, $49 = 0, $5 = 0, $52 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $76 = 0, $79 = 0, $8 = 0, $91 = 0, $94 = 0, label = 0;
 $5 = HEAP32[$0 >> 2] | 0;
 do if (!$5) $180 = 1; else {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$8 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $180 = 1;
   break;
  } else {
   $180 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $20 = HEAP32[$1 >> 2] | 0;
 do if (!$20) label = 14; else {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$23 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   label = 14;
   break;
  } else if ($180) {
   $181 = $20;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($180) label = 16; else {
  $181 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) {
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 6;
  $$2 = 0;
 } else if ((label | 0) == 17) {
  $37 = HEAP32[$0 >> 2] | 0;
  $39 = HEAP32[$37 + 12 >> 2] | 0;
  if (($39 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] & 127]($37) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$39 >> 0] | 0) | 0;
  $49 = $$0$i$i & 255;
  if ($49 << 24 >> 24 > -1) {
   $52 = $3 + 8 | 0;
   if (HEAP16[(HEAP32[$52 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 2048) {
    $64 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 63]($3, $49, 0) | 0) << 24 >> 24;
    $65 = HEAP32[$0 >> 2] | 0;
    $66 = $65 + 12 | 0;
    $67 = HEAP32[$66 >> 2] | 0;
    if (($67 | 0) == (HEAP32[$65 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$65 >> 2] | 0) + 40 >> 2] & 127]($65) | 0; else {
     HEAP32[$66 >> 2] = $67 + 1;
     __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$67 >> 0] | 0) | 0;
    }
    $$0$in = $64;
    $$023$in = $4;
    $182 = $181;
    $91 = $181;
    while (1) {
     $$0 = $$0$in + -48 | 0;
     $$023 = $$023$in + -1 | 0;
     $76 = HEAP32[$0 >> 2] | 0;
     do if (!$76) $108 = 1; else {
      $79 = HEAP32[$76 + 12 >> 2] | 0;
      if (($79 | 0) == (HEAP32[$76 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$76 >> 2] | 0) + 36 >> 2] & 127]($76) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$79 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$0 >> 2] = 0;
       $108 = 1;
       break;
      } else {
       $108 = (HEAP32[$0 >> 2] | 0) == 0;
       break;
      }
     } while (0);
     if (!$91) {
      $107 = 1;
      $163 = $182;
      $183 = 0;
     } else {
      $94 = HEAP32[$91 + 12 >> 2] | 0;
      if (($94 | 0) == (HEAP32[$91 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$91 >> 2] | 0) + 36 >> 2] & 127]($91) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$94 >> 0] | 0) | 0;
      if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
       HEAP32[$1 >> 2] = 0;
       $107 = 1;
       $163 = 0;
       $183 = 0;
      } else {
       $107 = 0;
       $163 = $182;
       $183 = $91;
      }
     }
     $111 = HEAP32[$0 >> 2] | 0;
     if (!(($$023$in | 0) > 1 & ($108 ^ $107))) break;
     $113 = HEAP32[$111 + 12 >> 2] | 0;
     if (($113 | 0) == (HEAP32[$111 + 16 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$111 >> 2] | 0) + 36 >> 2] & 127]($111) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$113 >> 0] | 0) | 0;
     $123 = $$0$i$i36 & 255;
     if ($123 << 24 >> 24 <= -1) {
      $$2 = $$0;
      break L22;
     }
     if (!(HEAP16[(HEAP32[$52 >> 2] | 0) + ($$0$i$i36 << 24 >> 24 << 1) >> 1] & 2048)) {
      $$2 = $$0;
      break L22;
     }
     $137 = ($$0 * 10 | 0) + ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 36 >> 2] & 63]($3, $123, 0) | 0) << 24 >> 24) | 0;
     $138 = HEAP32[$0 >> 2] | 0;
     $139 = $138 + 12 | 0;
     $140 = HEAP32[$139 >> 2] | 0;
     if (($140 | 0) == (HEAP32[$138 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$138 >> 2] | 0) + 40 >> 2] & 127]($138) | 0; else {
      HEAP32[$139 >> 2] = $140 + 1;
      __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$140 >> 0] | 0) | 0;
     }
     $$0$in = $137;
     $$023$in = $$023;
     $182 = $163;
     $91 = $183;
    }
    do if (!$111) $184 = 1; else {
     $151 = HEAP32[$111 + 12 >> 2] | 0;
     if (($151 | 0) == (HEAP32[$111 + 16 >> 2] | 0)) $$0$i$i$i$i40 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$111 >> 2] | 0) + 36 >> 2] & 127]($111) | 0; else $$0$i$i$i$i40 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$151 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i40, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$0 >> 2] = 0;
      $184 = 1;
      break;
     } else {
      $184 = (HEAP32[$0 >> 2] | 0) == 0;
      break;
     }
    } while (0);
    do if (!$163) label = 63; else {
     $166 = HEAP32[$163 + 12 >> 2] | 0;
     if (($166 | 0) == (HEAP32[$163 + 16 >> 2] | 0)) $$0$i$i2$i$i46 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$163 >> 2] | 0) + 36 >> 2] & 127]($163) | 0; else $$0$i$i2$i$i46 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$166 >> 0] | 0) | 0;
     if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i46, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
      HEAP32[$1 >> 2] = 0;
      label = 63;
      break;
     } else if ($184) {
      $$2 = $$0;
      break L22;
     } else break;
    } while (0);
    if ((label | 0) == 63) if (!$184) {
     $$2 = $$0;
     break;
    }
    HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 2;
    $$2 = $$0;
    break;
   }
  }
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 4;
  $$2 = 0;
 } while (0);
 return $$2 | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_PKff($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$070 = 0, $$071 = 0, $$072 = 0, $$073 = 0, $$076 = 0, $$2 = 0, $$275 = 0, $$278 = 0, $10 = 0, $110 = 0, $113 = 0, $118 = 0, $119 = 0, $131 = 0, $136 = 0, $140 = 0, $15 = 0.0, $22 = 0, $27 = 0, $31 = 0, $33 = 0, $34 = 0, $40 = 0, $43 = 0, $44 = 0, $48 = 0, $5 = 0, $52 = 0, $6 = 0, $60 = 0.0, $69 = 0, $7 = 0, $70 = 0, $79 = 0, $8 = 0, $84 = 0, $88 = 0, $90 = 0, $93 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $5 = sp + 40 | 0;
 $6 = sp;
 $7 = sp + 52 | 0;
 $8 = sp + 48 | 0;
 $10 = $0 + 4 | 0;
 HEAP32[$10 >> 2] = HEAP32[$0 >> 2];
 do if (!(__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0)) $$0 = 0; else if (!(__ZNK6vision18BinaryFeatureStore4sizeEv($2) | 0)) $$0 = 0; else {
  $15 = +__ZN6vision3sqrIfEET_S1_($4);
  if (!(__ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_($6, $3, 0.0) | 0)) {
   $22 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 29336) | 0, 29361) | 0, 33528) | 0, 196) | 0, 33535) | 0, 29483) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $22 + (HEAP32[(HEAP32[$22 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $27 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
   $31 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$27 >> 2] | 0) + 28 >> 2] & 63]($27, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($22, $31) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($22) | 0;
   _abort();
  }
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm($0, __ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0);
  $33 = $0 + 8 | 0;
  $34 = $0 + 12 | 0;
  $$070 = 0;
  L7 : while (1) {
   if ($$070 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) break;
   $43 = __ZNK6vision18BinaryFeatureStore7featureEm($1, $$070) | 0;
   $44 = __ZNK6vision18BinaryFeatureStore5pointEm($1, $$070) | 0;
   __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvRT_S2_PKS1_S1_S1_($7, $8, $6, +HEAPF32[$44 >> 2], +HEAPF32[$44 + 4 >> 2]);
   $48 = $44 + 16 | 0;
   $$071 = 0;
   $$072 = -1;
   $$073 = -1;
   $$076 = 2147483647;
   while (1) {
    if ($$071 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv($2) | 0) >>> 0) break;
    $52 = __ZNK6vision18BinaryFeatureStore5pointEm($2, $$071) | 0;
    if ((HEAP8[$48 >> 0] | 0) == (HEAP8[$52 + 16 >> 0] | 0)) {
     $60 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$7 >> 2] - +HEAPF32[$52 >> 2]);
     if ($60 + +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$8 >> 2] - +HEAPF32[$52 + 4 >> 2]) > $15) {
      $$2 = $$072;
      $$275 = $$073;
      $$278 = $$076;
     } else {
      $69 = __ZN6vision18HammingDistance768EPKjS1_($43, __ZNK6vision18BinaryFeatureStore7featureEm($2, $$071) | 0) | 0;
      $70 = $69 >>> 0 < $$072 >>> 0;
      $$2 = $70 ? $69 : $$072;
      $$275 = $70 ? $$072 : $69 >>> 0 < $$073 >>> 0 ? $69 : $$073;
      $$278 = $70 ? $$071 : $$076;
     }
    } else {
     $$2 = $$072;
     $$275 = $$073;
     $$278 = $$076;
    }
    $$071 = $$071 + 1 | 0;
    $$072 = $$2;
    $$073 = $$275;
    $$076 = $$278;
   }
   do if (($$072 | 0) != -1) {
    if (($$076 | 0) == -1) {
     label = 16;
     break L7;
    }
    if (($$073 | 0) == -1) {
     __ZN6vision7match_tC2Eii($5, $$070, $$076);
     $90 = HEAP32[$10 >> 2] | 0;
     if ($90 >>> 0 < (HEAP32[$33 >> 2] | 0) >>> 0) {
      $93 = $5;
      $98 = HEAP32[$93 + 4 >> 2] | 0;
      $99 = $90;
      HEAP32[$99 >> 2] = HEAP32[$93 >> 2];
      HEAP32[$99 + 4 >> 2] = $98;
      HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $5);
     break;
    }
    if (+($$072 >>> 0) / +($$073 >>> 0) < +HEAPF32[$34 >> 2]) {
     __ZN6vision7match_tC2Eii($5, $$070, $$076);
     $110 = HEAP32[$10 >> 2] | 0;
     if ($110 >>> 0 < (HEAP32[$33 >> 2] | 0) >>> 0) {
      $113 = $5;
      $118 = HEAP32[$113 + 4 >> 2] | 0;
      $119 = $110;
      HEAP32[$119 >> 2] = HEAP32[$113 >> 2];
      HEAP32[$119 + 4 >> 2] = $118;
      HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $5);
    }
   } while (0);
   $$070 = $$070 + 1 | 0;
  }
  if ((label | 0) == 16) {
   $79 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 29516) | 0, 29361) | 0, 33528) | 0, 241) | 0, 33535) | 0, 29588) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $79 + (HEAP32[(HEAP32[$79 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $84 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
   $88 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$84 >> 2] | 0) + 28 >> 2] & 63]($84, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($79, $88) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($79) | 0;
   _abort();
  }
  $40 = (HEAP32[$10 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
  if ($40 >>> 0 > (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) {
   $131 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 29606) | 0, 29361) | 0, 33528) | 0, 256) | 0, 33535) | 0, 29666) | 0;
   __ZNKSt3__28ios_base6getlocEv($5, $131 + (HEAP32[(HEAP32[$131 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $136 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
   $140 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$136 >> 2] | 0) + 28 >> 2] & 63]($136, 10) | 0;
   __ZNSt3__26localeD2Ev($5);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($131, $140) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($131) | 0;
   _abort();
  } else {
   $$0 = (HEAP32[$10 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 $14 = $14 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i106 = 0, $$0$i$i113 = 0, $$0$ph = 0, $$0101 = 0, $$0104 = 0, $$07$i$i = 0, $$093 = 0, $$095 = 0, $$097 = 0, $$099 = 0, $$1 = 0, $$1100 = 0, $$1102 = 0, $$194 = 0, $$196 = 0, $$2 = 0, $$2103 = 0, $$3 = 0, $$pn = 0, $$pn$pn = 0, $$sroa$08$0$i = 0, $$sroa$08$0$i112 = 0, $100 = 0, $101 = 0, $103 = 0, $104 = 0, $115 = 0, $117 = 0, $118 = 0, $119 = 0, $127 = 0, $130 = 0, $131 = 0, $132 = 0, $135 = 0, $137 = 0, $139 = 0, $144 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $29 = 0, $39 = 0, $40 = 0, $42 = 0, $43 = 0, $50 = 0, $51 = 0, $53 = 0, $54 = 0, $57 = 0, $60 = 0, $61 = 0, $67 = 0, $70 = 0, $80 = 0, $82 = 0, $83 = 0, $84 = 0, $92 = 0, $94 = 0, $spec$select = 0;
 HEAP32[$2 >> 2] = $0;
 $15 = $13 + 11 | 0;
 $16 = $13 + 4 | 0;
 $17 = $12 + 11 | 0;
 $18 = $12 + 4 | 0;
 $20 = ($3 & 512 | 0) == 0;
 $21 = $6 + 8 | 0;
 $22 = ($14 | 0) > 0;
 $23 = $11 + 11 | 0;
 $24 = $11 + 4 | 0;
 $$0104 = 0;
 $$097 = $4;
 while (1) {
  if (($$0104 | 0) == 4) break;
  L4 : do switch (HEAP8[$8 + $$0104 >> 0] | 0) {
  case 0:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $$2 = $$097;
    break;
   }
  case 1:
   {
    HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
    $39 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 63]($6, 32) | 0;
    $40 = HEAP32[$2 >> 2] | 0;
    HEAP32[$2 >> 2] = $40 + 1;
    HEAP8[$40 >> 0] = $39;
    $$2 = $$097;
    break;
   }
  case 3:
   {
    $42 = HEAP8[$15 >> 0] | 0;
    $43 = $42 << 24 >> 24 < 0;
    if (!(($43 ? HEAP32[$16 >> 2] | 0 : $42 & 255) | 0)) $$2 = $$097; else {
     $50 = HEAP8[($43 ? HEAP32[$13 >> 2] | 0 : $13) >> 0] | 0;
     $51 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $51 + 1;
     HEAP8[$51 >> 0] = $50;
     $$2 = $$097;
    }
    break;
   }
  case 2:
   {
    $53 = HEAP8[$17 >> 0] | 0;
    $54 = $53 << 24 >> 24 < 0;
    $57 = $54 ? HEAP32[$18 >> 2] | 0 : $53 & 255;
    if ($20 | ($57 | 0) == 0) $$2 = $$097; else {
     $60 = $54 ? HEAP32[$12 >> 2] | 0 : $12;
     $61 = $60 + $57 | 0;
     $$0$i$i113 = HEAP32[$2 >> 2] | 0;
     $$sroa$08$0$i112 = $60;
     while (1) {
      if (($$sroa$08$0$i112 | 0) == ($61 | 0)) break;
      HEAP8[$$0$i$i113 >> 0] = HEAP8[$$sroa$08$0$i112 >> 0] | 0;
      $$0$i$i113 = $$0$i$i113 + 1 | 0;
      $$sroa$08$0$i112 = $$sroa$08$0$i112 + 1 | 0;
     }
     HEAP32[$2 >> 2] = $$0$i$i113;
     $$2 = $$097;
    }
    break;
   }
  case 4:
   {
    $67 = HEAP32[$2 >> 2] | 0;
    $spec$select = $7 ? $$097 + 1 | 0 : $$097;
    $$0101 = $spec$select;
    while (1) {
     if ($$0101 >>> 0 >= $5 >>> 0) break;
     $70 = HEAP8[$$0101 >> 0] | 0;
     if ($70 << 24 >> 24 <= -1) break;
     if (!(HEAP16[(HEAP32[$21 >> 2] | 0) + ($70 << 24 >> 24 << 1) >> 1] & 2048)) break;
     $$0101 = $$0101 + 1 | 0;
    }
    if ($22) {
     $$099 = $14;
     $$1102 = $$0101;
     while (1) {
      $80 = ($$099 | 0) > 0;
      if (!($$1102 >>> 0 > $spec$select >>> 0 & $80)) break;
      $82 = $$1102 + -1 | 0;
      $83 = HEAP8[$82 >> 0] | 0;
      $84 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $84 + 1;
      HEAP8[$84 >> 0] = $83;
      $$099 = $$099 + -1 | 0;
      $$1102 = $82;
     }
     if ($80) $94 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 63]($6, 48) | 0; else $94 = 0;
     $$1100 = $$099;
     while (1) {
      $92 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $92 + 1;
      if (($$1100 | 0) <= 0) break;
      HEAP8[$92 >> 0] = $94;
      $$1100 = $$1100 + -1 | 0;
     }
     HEAP8[$92 >> 0] = $9;
     $$2103 = $$1102;
    } else $$2103 = $$0101;
    L36 : do if (($$2103 | 0) == ($spec$select | 0)) {
     $100 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 63]($6, 48) | 0;
     $101 = HEAP32[$2 >> 2] | 0;
     HEAP32[$2 >> 2] = $101 + 1;
     HEAP8[$101 >> 0] = $100;
    } else {
     $103 = HEAP8[$23 >> 0] | 0;
     $104 = $103 << 24 >> 24 < 0;
     if (!(($104 ? HEAP32[$24 >> 2] | 0 : $103 & 255) | 0)) $$0$ph = -1; else $$0$ph = HEAP8[($104 ? HEAP32[$11 >> 2] | 0 : $11) >> 0] | 0;
     $$0 = $$0$ph;
     $$093 = 0;
     $$095 = 0;
     $$3 = $$2103;
     while (1) {
      if (($$3 | 0) == ($spec$select | 0)) break L36;
      if (($$095 | 0) == ($$0 | 0)) {
       $115 = HEAP32[$2 >> 2] | 0;
       HEAP32[$2 >> 2] = $115 + 1;
       HEAP8[$115 >> 0] = $10;
       $117 = $$093 + 1 | 0;
       $118 = HEAP8[$23 >> 0] | 0;
       $119 = $118 << 24 >> 24 < 0;
       if ($117 >>> 0 < ($119 ? HEAP32[$24 >> 2] | 0 : $118 & 255) >>> 0) {
        $127 = HEAP8[($119 ? HEAP32[$11 >> 2] | 0 : $11) + $117 >> 0] | 0;
        $$1 = $127 << 24 >> 24 == 127 ? -1 : $127 << 24 >> 24;
        $$194 = $117;
        $$196 = 0;
       } else {
        $$1 = $$095;
        $$194 = $117;
        $$196 = 0;
       }
      } else {
       $$1 = $$0;
       $$194 = $$093;
       $$196 = $$095;
      }
      $130 = $$3 + -1 | 0;
      $131 = HEAP8[$130 >> 0] | 0;
      $132 = HEAP32[$2 >> 2] | 0;
      HEAP32[$2 >> 2] = $132 + 1;
      HEAP8[$132 >> 0] = $131;
      $$0 = $$1;
      $$093 = $$194;
      $$095 = $$196 + 1 | 0;
      $$3 = $130;
     }
    } while (0);
    $135 = HEAP32[$2 >> 2] | 0;
    if (($67 | 0) == ($135 | 0)) $$2 = $spec$select; else {
     $$0$i$i106 = $135;
     $$07$i$i = $67;
     while (1) {
      $137 = $$0$i$i106 + -1 | 0;
      if ($$07$i$i >>> 0 >= $137 >>> 0) {
       $$2 = $spec$select;
       break L4;
      }
      $139 = HEAP8[$$07$i$i >> 0] | 0;
      HEAP8[$$07$i$i >> 0] = HEAP8[$137 >> 0] | 0;
      HEAP8[$137 >> 0] = $139;
      $$0$i$i106 = $137;
      $$07$i$i = $$07$i$i + 1 | 0;
     }
    }
    break;
   }
  default:
   $$2 = $$097;
  } while (0);
  $$0104 = $$0104 + 1 | 0;
  $$097 = $$2;
 }
 $25 = HEAP8[$15 >> 0] | 0;
 $26 = $25 << 24 >> 24 < 0;
 $29 = $26 ? HEAP32[$16 >> 2] | 0 : $25 & 255;
 if ($29 >>> 0 > 1) {
  $$pn = $26 ? HEAP32[$13 >> 2] | 0 : $13;
  $144 = $$pn + $29 | 0;
  $$0$i$i = HEAP32[$2 >> 2] | 0;
  $$pn$pn = $$pn;
  while (1) {
   $$sroa$08$0$i = $$pn$pn + 1 | 0;
   if (($$sroa$08$0$i | 0) == ($144 | 0)) break;
   HEAP8[$$0$i$i >> 0] = HEAP8[$$sroa$08$0$i >> 0] | 0;
   $$0$i$i = $$0$i$i + 1 | 0;
   $$pn$pn = $$sroa$08$0$i;
  }
  HEAP32[$2 >> 2] = $$0$i$i;
 }
 switch (($3 & 176) << 24 >> 24) {
 case 32:
  {
   HEAP32[$1 >> 2] = HEAP32[$2 >> 2];
   break;
  }
 case 16:
  break;
 default:
  HEAP32[$1 >> 2] = $0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$072 = 0, $$1 = 0, $$174 = 0, $$sroa$0102$0 = 0, $$sroa$096$0 = 0, $100 = 0, $104 = 0, $105 = 0, $106 = 0, $109 = 0, $12 = 0, $13 = 0, $14 = 0, $21 = 0, $22 = 0, $29 = 0, $3 = 0, $30 = 0, $37 = 0, $38 = 0, $45 = 0, $46 = 0, $53 = 0, $54 = 0, $62 = 0, $68 = 0, $69 = 0, $70 = 0, $73 = 0, $84 = 0, $85 = 0, $92 = 0, $96 = 0, $isdigit = 0, $isdigit81 = 0, $isdigittmp = 0, $isdigittmp80 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp;
 L1 : do if (($1 - $0 | 0) > 1) if ((HEAP8[$0 >> 0] | 0) == 83) {
  $12 = HEAP8[$0 + 1 >> 0] | 0;
  switch ($12 | 0) {
  case 97:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc($3, 50957);
    $13 = $2 + 4 | 0;
    $14 = HEAP32[$13 >> 2] | 0;
    if ($14 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($14, $3);
     HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 98:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc($3, 50972);
    $21 = $2 + 4 | 0;
    $22 = HEAP32[$21 >> 2] | 0;
    if ($22 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($22, $3);
     HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 115:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc($3, 50451);
    $29 = $2 + 4 | 0;
    $30 = HEAP32[$29 >> 2] | 0;
    if ($30 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($30, $3);
     HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 105:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc($3, 50547);
    $37 = $2 + 4 | 0;
    $38 = HEAP32[$37 >> 2] | 0;
    if ($38 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($38, $3);
     HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 111:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc($3, 50624);
    $45 = $2 + 4 | 0;
    $46 = HEAP32[$45 >> 2] | 0;
    if ($46 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($46, $3);
     HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 100:
   {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc($3, 50701);
    $53 = $2 + 4 | 0;
    $54 = HEAP32[$53 >> 2] | 0;
    if ($54 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($54, $3);
     HEAP32[$53 >> 2] = (HEAP32[$53 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  case 95:
   {
    $62 = HEAP32[$2 + 16 >> 2] | 0;
    if (($62 | 0) == (HEAP32[$2 + 20 >> 2] | 0)) {
     $$1 = $0;
     break L1;
    }
    $68 = HEAP32[$62 + 4 >> 2] | 0;
    $69 = $2 + 4 | 0;
    $70 = $2 + 8 | 0;
    $$sroa$0102$0 = HEAP32[$62 >> 2] | 0;
    while (1) {
     if (($$sroa$0102$0 | 0) == ($68 | 0)) break;
     $73 = HEAP32[$69 >> 2] | 0;
     if (($73 | 0) == (HEAP32[$70 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($2, $$sroa$0102$0); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($73, $$sroa$0102$0);
      HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + 24;
     }
     $$sroa$0102$0 = $$sroa$0102$0 + 24 | 0;
    }
    $$1 = $0 + 2 | 0;
    break L1;
    break;
   }
  default:
   {
    $isdigittmp = $12 + -48 | 0;
    $isdigit = $isdigittmp >>> 0 < 10;
    if (!$isdigit) if (!(_isupper($12) | 0)) {
     $$1 = $0;
     break L1;
    }
    $$072 = $0 + 2 | 0;
    $$174 = $isdigit ? $isdigittmp : $12 + -55 | 0;
    while (1) {
     if (($$072 | 0) == ($1 | 0)) {
      $$1 = $0;
      break L1;
     }
     $84 = HEAP8[$$072 >> 0] | 0;
     $85 = $84 << 24 >> 24;
     $isdigittmp80 = $85 + -48 | 0;
     $isdigit81 = $isdigittmp80 >>> 0 < 10;
     if (!$isdigit81) if (!(_isupper($85) | 0)) break;
     $$072 = $$072 + 1 | 0;
     $$174 = ($isdigit81 ? $isdigittmp80 : $85 + -55 | 0) + ($$174 * 36 | 0) | 0;
    }
    if ($84 << 24 >> 24 != 95) {
     $$1 = $0;
     break L1;
    }
    $92 = $$174 + 1 | 0;
    $96 = HEAP32[$2 + 16 >> 2] | 0;
    $100 = $96;
    if ($92 >>> 0 >= (HEAP32[$2 + 20 >> 2] | 0) - $96 >> 4 >>> 0) {
     $$1 = $0;
     break L1;
    }
    $104 = HEAP32[$100 + ($92 << 4) + 4 >> 2] | 0;
    $105 = $2 + 4 | 0;
    $106 = $2 + 8 | 0;
    $$sroa$096$0 = HEAP32[$100 + ($92 << 4) >> 2] | 0;
    while (1) {
     if (($$sroa$096$0 | 0) == ($104 | 0)) break;
     $109 = HEAP32[$105 >> 2] | 0;
     if (($109 | 0) == (HEAP32[$106 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($2, $$sroa$096$0); else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($109, $$sroa$096$0);
      HEAP32[$105 >> 2] = (HEAP32[$105 >> 2] | 0) + 24;
     }
     $$sroa$096$0 = $$sroa$096$0 + 24 | 0;
    }
    $$1 = $$072 + 1 | 0;
    break L1;
   }
  }
 } else $$1 = $0; else $$1 = $0; while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN6vision16PruneDoGFeaturesERNSt3__26vectorINS1_INS1_INS0_4pairIfmEENS0_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEEERNS1_INS_25DoGScaleInvariantDetector12FeaturePointENS4_ISD_EEEERKSF_iiiii($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$087 = 0, $$089 = 0, $$090 = 0, $$091 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $$cast = 0, $$pre = 0, $$pre118 = 0, $$pre118119 = 0, $$pre118120 = 0, $$sroa$speculated = 0, $10 = 0, $101 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $109 = 0, $11 = 0, $116 = 0, $12 = 0, $120 = 0, $130 = 0, $135 = 0, $139 = 0, $145 = 0, $146 = 0, $153 = 0, $16 = 0.0, $20 = 0.0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $31 = 0, $32 = 0.0, $33 = 0.0, $34 = 0, $38 = 0, $40 = 0, $41 = 0, $48 = 0, $52 = 0, $53 = 0, $54 = 0, $62 = 0, $65 = 0, $68 = 0.0, $69 = 0, $70 = 0, $74 = 0, $79 = 0, $8 = 0, $80 = 0, $9 = 0, $90 = 0, $94 = 0, $97 = 0, $storemerge = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 8 | 0;
 $$byval_copy1 = sp + 32 | 0;
 $$byval_copy = sp + 28 | 0;
 $8 = sp + 24 | 0;
 $9 = sp + 20 | 0;
 $10 = sp + 16 | 0;
 $11 = sp;
 $12 = Math_imul($4, $3) | 0;
 $16 = +Math_ceil(+(+($5 | 0) / +($3 | 0)));
 $20 = +Math_ceil(+(+($6 | 0) / +($4 | 0)));
 $22 = $1 + 4 | 0;
 HEAP32[$22 >> 2] = HEAP32[$1 >> 2];
 __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm($1, $7);
 $23 = $0 + 4 | 0;
 $25 = HEAP32[$0 >> 2] | 0;
 $27 = ((HEAP32[$23 >> 2] | 0) - $25 | 0) / 12 | 0;
 $$cast = $25;
 $$087 = 0;
 while (1) {
  if (($$087 | 0) == ($27 | 0)) break;
  $38 = HEAP32[$$cast + ($$087 * 12 | 0) >> 2] | 0;
  $40 = ((HEAP32[$$cast + ($$087 * 12 | 0) + 4 >> 2] | 0) - $38 | 0) / 12 | 0;
  $41 = $38;
  $$091 = 0;
  while (1) {
   if (($$091 | 0) == ($40 | 0)) break;
   HEAP32[$41 + ($$091 * 12 | 0) + 4 >> 2] = HEAP32[$41 + ($$091 * 12 | 0) >> 2];
   $$091 = $$091 + 1 | 0;
  }
  $$087 = $$087 + 1 | 0;
 }
 $28 = ($7 | 0) / ($12 | 0) | 0;
 $31 = $2 + 4 | 0;
 $32 = +(~~$16 | 0);
 $33 = +(~~$20 | 0);
 $34 = $$byval_copy2 + 4 | 0;
 $storemerge = 0;
 while (1) {
  $48 = HEAP32[$2 >> 2] | 0;
  $52 = $48;
  if ($storemerge >>> 0 >= (((HEAP32[$31 >> 2] | 0) - $48 | 0) / 36 | 0) >>> 0) break;
  $62 = ~~(+HEAPF32[$52 + ($storemerge * 36 | 0) + 4 >> 2] / $33);
  $65 = HEAP32[(HEAP32[$0 >> 2] | 0) + (~~(+HEAPF32[$52 + ($storemerge * 36 | 0) >> 2] / $32) * 12 | 0) >> 2] | 0;
  $68 = +Math_abs(+(+HEAPF32[$52 + ($storemerge * 36 | 0) + 24 >> 2]));
  HEAPF32[$$byval_copy2 >> 2] = $68;
  HEAP32[$34 >> 2] = $storemerge;
  $69 = $65 + ($62 * 12 | 0) + 4 | 0;
  $70 = HEAP32[$69 >> 2] | 0;
  if ($70 >>> 0 < (HEAP32[$65 + ($62 * 12 | 0) + 8 >> 2] | 0) >>> 0) {
   $74 = $$byval_copy2;
   $79 = HEAP32[$74 + 4 >> 2] | 0;
   $80 = $70;
   HEAP32[$80 >> 2] = HEAP32[$74 >> 2];
   HEAP32[$80 + 4 >> 2] = $79;
   HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + 8;
  } else __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($65 + ($62 * 12 | 0) | 0, $$byval_copy2);
  $storemerge = $storemerge + 1 | 0;
 }
 $53 = $1 + 8 | 0;
 $$pre = HEAP32[$0 >> 2] | 0;
 $54 = $$pre;
 $$090 = 0;
 $$pre118119 = $54;
 $153 = $54;
 $90 = $$pre;
 L17 : while (1) {
  if ($$090 >>> 0 >= (((HEAP32[$23 >> 2] | 0) - $90 | 0) / 12 | 0) >>> 0) {
   label = 16;
   break;
  }
  $$089 = 0;
  $$pre118120 = $$pre118119;
  $94 = $153;
  while (1) {
   $97 = HEAP32[$94 + ($$090 * 12 | 0) >> 2] | 0;
   $101 = $97;
   if ($$089 >>> 0 >= (((HEAP32[$94 + ($$090 * 12 | 0) + 4 >> 2] | 0) - $97 | 0) / 12 | 0) >>> 0) break;
   $104 = $101 + ($$089 * 12 | 0) | 0;
   $105 = $101 + ($$089 * 12 | 0) + 4 | 0;
   $106 = HEAP32[$105 >> 2] | 0;
   $107 = HEAP32[$104 >> 2] | 0;
   $109 = $106 - $107 >> 3;
   $$sroa$speculated = $28 >>> 0 < $109 >>> 0 ? $28 : $109;
   if (!$$sroa$speculated) $$pre118 = $$pre118120; else {
    HEAP32[$8 >> 2] = $107;
    HEAP32[$9 >> 2] = $107 + ($$sroa$speculated << 3);
    HEAP32[$10 >> 2] = $106;
    HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
    HEAP32[$$byval_copy1 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$$byval_copy2 >> 2] = HEAP32[$10 >> 2];
    __ZNSt3__213__nth_elementIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_S9_T_($$byval_copy, $$byval_copy1, $$byval_copy2, $11);
    $116 = HEAP32[$104 >> 2] | 0;
    $120 = $116;
    if ($$sroa$speculated >>> 0 > (HEAP32[$105 >> 2] | 0) - $116 >> 3 >>> 0) if (!(+HEAPF32[$120 >> 2] >= +HEAPF32[$120 + ($$sroa$speculated << 3) >> 2])) {
     label = 23;
     break L17;
    }
    $$0 = 0;
    while (1) {
     if ($$0 >>> 0 >= $$sroa$speculated >>> 0) break;
     $145 = (HEAP32[$2 >> 2] | 0) + ((HEAP32[(HEAP32[$104 >> 2] | 0) + ($$0 << 3) + 4 >> 2] | 0) * 36 | 0) | 0;
     $146 = HEAP32[$22 >> 2] | 0;
     if (($146 | 0) == (HEAP32[$53 >> 2] | 0)) __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($1, $145); else {
      dest = $146;
      src = $145;
      stop = dest + 36 | 0;
      do {
       HEAP32[dest >> 2] = HEAP32[src >> 2];
       dest = dest + 4 | 0;
       src = src + 4 | 0;
      } while ((dest | 0) < (stop | 0));
      HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 36;
     }
     $$0 = $$0 + 1 | 0;
    }
    $$pre118 = HEAP32[$0 >> 2] | 0;
   }
   $$089 = $$089 + 1 | 0;
   $$pre118120 = $$pre118;
   $94 = $$pre118;
  }
  $$090 = $$090 + 1 | 0;
  $$pre118119 = $$pre118120;
  $153 = $94;
  $90 = $94;
 }
 if ((label | 0) == 16) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 23) {
  $130 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22087) | 0, 20520) | 0, 33528) | 0, 661) | 0, 33535) | 0, 22145) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $130 + (HEAP32[(HEAP32[$130 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $135 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 57884) | 0;
  $139 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$135 >> 2] | 0) + 28 >> 2] & 63]($135, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($130, $139) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($130) | 0;
  _abort();
 }
}

function _jpeg_idct_islow($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0288 = 0, $$0290 = 0, $$0292 = 0, $$1 = 0, $$2 = 0, $$sink = 0, $$sink307 = 0, $102 = 0, $103 = 0, $105 = 0, $110 = 0, $111 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $12 = 0, $121 = 0, $123 = 0, $124 = 0, $130 = 0, $137 = 0, $14 = 0, $144 = 0, $152 = 0, $155 = 0, $157 = 0, $159 = 0, $182 = 0, $185 = 0, $187 = 0, $188 = 0, $190 = 0, $192 = 0, $193 = 0, $195 = 0, $197 = 0, $199 = 0, $205 = 0, $207 = 0, $209 = 0, $212 = 0, $213 = 0, $215 = 0, $220 = 0, $221 = 0, $224 = 0, $225 = 0, $227 = 0, $229 = 0, $231 = 0, $233 = 0, $234 = 0, $246 = 0, $259 = 0, $272 = 0, $36 = 0, $44 = 0, $47 = 0, $5 = 0, $53 = 0, $55 = 0, $57 = 0, $59 = 0, $63 = 0, $69 = 0, $7 = 0, $71 = 0, $73 = 0, $83 = 0, $89 = 0, $95 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $5 = sp;
 $7 = HEAP32[$0 + 324 >> 2] | 0;
 $$0 = 8;
 $$0288 = $5;
 $$0290 = HEAP32[$1 + 80 >> 2] | 0;
 $$0292 = $2;
 while (1) {
  if (!$$0) break;
  $12 = HEAP16[$$0292 + 16 >> 1] | 0;
  $14 = HEAP16[$$0292 + 32 >> 1] | 0;
  if (!(($12 | $14) << 16 >> 16)) if (!(HEAP16[$$0292 + 48 >> 1] | 0)) if (!(HEAP16[$$0292 + 64 >> 1] | 0)) if (!(HEAP16[$$0292 + 80 >> 1] | 0)) if (!(HEAP16[$$0292 + 96 >> 1] | 0)) if (!(HEAP16[$$0292 + 112 >> 1] | 0)) {
   $36 = Math_imul(HEAP16[$$0292 >> 1] << 2, HEAP32[$$0290 >> 2] | 0) | 0;
   HEAP32[$$0288 >> 2] = $36;
   HEAP32[$$0288 + 32 >> 2] = $36;
   HEAP32[$$0288 + 64 >> 2] = $36;
   HEAP32[$$0288 + 96 >> 2] = $36;
   HEAP32[$$0288 + 128 >> 2] = $36;
   HEAP32[$$0288 + 160 >> 2] = $36;
   HEAP32[$$0288 + 192 >> 2] = $36;
   $$sink = $36;
   $$sink307 = 56;
  } else {
   $44 = 0;
   label = 10;
  } else {
   $44 = 0;
   label = 10;
  } else {
   $44 = 0;
   label = 10;
  } else {
   $44 = 0;
   label = 10;
  } else {
   $44 = 0;
   label = 10;
  } else {
   $44 = $14;
   label = 10;
  }
  if ((label | 0) == 10) {
   label = 0;
   $47 = Math_imul(HEAP32[$$0290 + 64 >> 2] | 0, $44 << 16 >> 16) | 0;
   $53 = Math_imul(HEAP32[$$0290 + 192 >> 2] | 0, HEAP16[$$0292 + 96 >> 1] | 0) | 0;
   $55 = ($53 + $47 | 0) * 4433 | 0;
   $57 = $55 + (Math_imul($53, -15137) | 0) | 0;
   $59 = $55 + ($47 * 6270 | 0) | 0;
   $63 = Math_imul(HEAP32[$$0290 >> 2] | 0, HEAP16[$$0292 >> 1] | 0) | 0;
   $69 = Math_imul(HEAP32[$$0290 + 128 >> 2] | 0, HEAP16[$$0292 + 64 >> 1] | 0) | 0;
   $71 = $69 + $63 << 13;
   $73 = $63 - $69 << 13;
   $83 = Math_imul(HEAP32[$$0290 + 224 >> 2] | 0, HEAP16[$$0292 + 112 >> 1] | 0) | 0;
   $89 = Math_imul(HEAP32[$$0290 + 160 >> 2] | 0, HEAP16[$$0292 + 80 >> 1] | 0) | 0;
   $95 = Math_imul(HEAP32[$$0290 + 96 >> 2] | 0, HEAP16[$$0292 + 48 >> 1] | 0) | 0;
   $99 = Math_imul(HEAP32[$$0290 + 32 >> 2] | 0, $12 << 16 >> 16) | 0;
   $102 = $95 + $83 | 0;
   $103 = $99 + $89 | 0;
   $105 = ($103 + $102 | 0) * 9633 | 0;
   $110 = Math_imul($99 + $83 | 0, -7373) | 0;
   $111 = Math_imul($95 + $89 | 0, -20995) | 0;
   $114 = $105 + (Math_imul($102, -16069) | 0) | 0;
   $115 = $105 + (Math_imul($103, -3196) | 0) | 0;
   $117 = $110 + ($83 * 2446 | 0) + $114 | 0;
   $119 = $111 + ($89 * 16819 | 0) + $115 | 0;
   $121 = $111 + ($95 * 25172 | 0) + $114 | 0;
   $123 = $110 + ($99 * 12299 | 0) + $115 | 0;
   $124 = $71 + $59 + 1024 | 0;
   HEAP32[$$0288 >> 2] = $124 + $123 >> 11;
   HEAP32[$$0288 + 224 >> 2] = $124 - $123 >> 11;
   $130 = $73 + $57 + 1024 | 0;
   HEAP32[$$0288 + 32 >> 2] = $130 + $121 >> 11;
   HEAP32[$$0288 + 192 >> 2] = $130 - $121 >> 11;
   $137 = $73 - $57 + 1024 | 0;
   HEAP32[$$0288 + 64 >> 2] = $137 + $119 >> 11;
   HEAP32[$$0288 + 160 >> 2] = $137 - $119 >> 11;
   $144 = $71 - $59 + 1024 | 0;
   HEAP32[$$0288 + 96 >> 2] = $144 + $117 >> 11;
   $$sink = $144 - $117 >> 11;
   $$sink307 = 32;
  }
  HEAP32[$$0288 + ($$sink307 << 2) >> 2] = $$sink;
  $$0 = $$0 + -1 | 0;
  $$0288 = $$0288 + 4 | 0;
  $$0290 = $$0290 + 4 | 0;
  $$0292 = $$0292 + 2 | 0;
 }
 $152 = $7 + 128 | 0;
 $$1 = 0;
 $$2 = $5;
 while (1) {
  if (($$1 | 0) == 8) break;
  $155 = (HEAP32[$3 + ($$1 << 2) >> 2] | 0) + $4 | 0;
  $157 = HEAP32[$$2 + 4 >> 2] | 0;
  $159 = HEAP32[$$2 + 8 >> 2] | 0;
  if (!($157 | $159)) if (!(HEAP32[$$2 + 12 >> 2] | 0)) if (!(HEAP32[$$2 + 16 >> 2] | 0)) if (!(HEAP32[$$2 + 20 >> 2] | 0)) if (!(HEAP32[$$2 + 24 >> 2] | 0)) if (!(HEAP32[$$2 + 28 >> 2] | 0)) {
   $182 = HEAP8[$152 + (((HEAP32[$$2 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$155 >> 0] = $182;
   _memset($155 + 1 | 0, $182 | 0, 7) | 0;
  } else {
   $187 = 0;
   label = 21;
  } else {
   $187 = 0;
   label = 21;
  } else {
   $187 = 0;
   label = 21;
  } else {
   $187 = 0;
   label = 21;
  } else {
   $187 = 0;
   label = 21;
  } else {
   $187 = $159;
   label = 21;
  }
  if ((label | 0) == 21) {
   label = 0;
   $185 = HEAP32[$$2 + 24 >> 2] | 0;
   $188 = ($185 + $187 | 0) * 4433 | 0;
   $190 = $188 + (Math_imul($185, -15137) | 0) | 0;
   $192 = $188 + ($187 * 6270 | 0) | 0;
   $193 = HEAP32[$$2 >> 2] | 0;
   $195 = HEAP32[$$2 + 16 >> 2] | 0;
   $197 = $195 + $193 << 13;
   $199 = $193 - $195 << 13;
   $205 = HEAP32[$$2 + 28 >> 2] | 0;
   $207 = HEAP32[$$2 + 20 >> 2] | 0;
   $209 = HEAP32[$$2 + 12 >> 2] | 0;
   $212 = $209 + $205 | 0;
   $213 = $207 + $157 | 0;
   $215 = ($212 + $213 | 0) * 9633 | 0;
   $220 = Math_imul($205 + $157 | 0, -7373) | 0;
   $221 = Math_imul($209 + $207 | 0, -20995) | 0;
   $224 = $215 + (Math_imul($212, -16069) | 0) | 0;
   $225 = $215 + (Math_imul($213, -3196) | 0) | 0;
   $227 = $220 + ($205 * 2446 | 0) + $224 | 0;
   $229 = $221 + ($207 * 16819 | 0) + $225 | 0;
   $231 = $221 + ($209 * 25172 | 0) + $224 | 0;
   $233 = $220 + ($157 * 12299 | 0) + $225 | 0;
   $234 = $197 + $192 + 131072 | 0;
   HEAP8[$155 >> 0] = HEAP8[$152 + (($234 + $233 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[$155 + 7 >> 0] = HEAP8[$152 + (($234 - $233 | 0) >>> 18 & 1023) >> 0] | 0;
   $246 = $199 + $190 + 131072 | 0;
   HEAP8[$155 + 1 >> 0] = HEAP8[$152 + (($246 + $231 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[$155 + 6 >> 0] = HEAP8[$152 + (($246 - $231 | 0) >>> 18 & 1023) >> 0] | 0;
   $259 = $199 - $190 + 131072 | 0;
   HEAP8[$155 + 2 >> 0] = HEAP8[$152 + (($259 + $229 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[$155 + 5 >> 0] = HEAP8[$152 + (($259 - $229 | 0) >>> 18 & 1023) >> 0] | 0;
   $272 = $197 - $192 + 131072 | 0;
   HEAP8[$155 + 3 >> 0] = HEAP8[$152 + (($272 + $227 | 0) >>> 18 & 1023) >> 0] | 0;
   HEAP8[$155 + 4 >> 0] = HEAP8[$152 + (($272 - $227 | 0) >>> 18 & 1023) >> 0] | 0;
  }
  $$1 = $$1 + 1 | 0;
  $$2 = $$2 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $127 = 0, $13 = 0, $132 = 0, $14 = 0, $140 = 0, $143 = 0, $15 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $157 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $132 = 0;
   $158 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $132 = 0;
    $158 = 1;
    $80 = 0;
   } else {
    $132 = $157;
    $158 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($158) {
    $159 = $45;
    break;
   } else {
    $$2 = $$0;
    $140 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;
    $140 = 0;
    break;
   } else $159 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $140 = $159;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $157 = $132;
  $30 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0) {
  $110 = HEAP32[$12 >> 2] | 0;
  if (($110 - $11 | 0) < 160) {
   $115 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $110 + 4;
   HEAP32[$110 >> 2] = $115;
  }
 }
 $118 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $119 = getTempRet0() | 0;
 $120 = $5;
 HEAP32[$120 >> 2] = $118;
 HEAP32[$120 + 4 >> 2] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $160 = 1; else {
  $127 = HEAP32[$80 + 12 >> 2] | 0;
  if (($127 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$132 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$127 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $160 = 1;
  } else $160 = 0;
 }
 do if (!$140) label = 48; else {
  $143 = HEAP32[$140 + 12 >> 2] | 0;
  if (($143 | 0) == (HEAP32[$140 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] & 127]($140) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$143 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($160) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($160) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $128 = 0, $13 = 0, $133 = 0, $14 = 0, $141 = 0, $144 = 0, $15 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $158 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $133 = 0;
   $159 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $133 = 0;
    $159 = 1;
    $80 = 0;
   } else {
    $133 = $158;
    $159 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($159) {
    $160 = $45;
    break;
   } else {
    $$2 = $$0;
    $141 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($159) {
    $$2 = $$0;
    $141 = 0;
    break;
   } else $160 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $141 = $160;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $158 = $133;
  $30 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0) {
  $111 = HEAP32[$12 >> 2] | 0;
  if (($111 - $11 | 0) < 160) {
   $116 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $111 + 4;
   HEAP32[$111 >> 2] = $116;
  }
 }
 $119 = __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $120 = getTempRet0() | 0;
 $121 = $5;
 HEAP32[$121 >> 2] = $119;
 HEAP32[$121 + 4 >> 2] = $120;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $161 = 1; else {
  $128 = HEAP32[$80 + 12 >> 2] | 0;
  if (($128 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$133 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$128 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $161 = 1;
  } else $161 = 0;
 }
 do if (!$141) label = 48; else {
  $144 = HEAP32[$141 + 12 >> 2] | 0;
  if (($144 | 0) == (HEAP32[$141 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$141 >> 2] | 0) + 36 >> 2] & 127]($141) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$144 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($161) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($161) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $127 = 0, $13 = 0, $132 = 0, $14 = 0, $140 = 0, $143 = 0, $15 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $157 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $132 = 0;
   $158 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $132 = 0;
    $158 = 1;
    $80 = 0;
   } else {
    $132 = $157;
    $158 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($158) {
    $159 = $45;
    break;
   } else {
    $$2 = $$0;
    $140 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;
    $140 = 0;
    break;
   } else $159 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $140 = $159;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $157 = $132;
  $30 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0) {
  $110 = HEAP32[$12 >> 2] | 0;
  if (($110 - $11 | 0) < 160) {
   $115 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $110 + 4;
   HEAP32[$110 >> 2] = $115;
  }
 }
 $118 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $119 = getTempRet0() | 0;
 $120 = $5;
 HEAP32[$120 >> 2] = $118;
 HEAP32[$120 + 4 >> 2] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $160 = 1; else {
  $127 = HEAP32[$80 + 12 >> 2] | 0;
  if (($127 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$132 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$127 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $160 = 1;
  } else $160 = 0;
 }
 do if (!$140) label = 48; else {
  $143 = HEAP32[$140 + 12 >> 2] | 0;
  if (($143 | 0) == (HEAP32[$140 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] & 127]($140) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$143 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($160) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($160) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $128 = 0, $13 = 0, $133 = 0, $14 = 0, $141 = 0, $144 = 0, $15 = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $158 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $133 = 0;
   $159 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $133 = 0;
    $159 = 1;
    $80 = 0;
   } else {
    $133 = $158;
    $159 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($159) {
    $160 = $45;
    break;
   } else {
    $$2 = $$0;
    $141 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($159) {
    $$2 = $$0;
    $141 = 0;
    break;
   } else $160 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $141 = $160;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $158 = $133;
  $30 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0) {
  $111 = HEAP32[$12 >> 2] | 0;
  if (($111 - $11 | 0) < 160) {
   $116 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $111 + 4;
   HEAP32[$111 >> 2] = $116;
  }
 }
 $119 = __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 $120 = getTempRet0() | 0;
 $121 = $5;
 HEAP32[$121 >> 2] = $119;
 HEAP32[$121 + 4 >> 2] = $120;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $161 = 1; else {
  $128 = HEAP32[$80 + 12 >> 2] | 0;
  if (($128 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$133 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$128 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $161 = 1;
  } else $161 = 0;
 }
 do if (!$141) label = 48; else {
  $144 = HEAP32[$141 + 12 >> 2] | 0;
  if (($144 | 0) == (HEAP32[$141 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$141 >> 2] | 0) + 36 >> 2] & 127]($141) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$144 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($161) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($161) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $105 = 0, $11 = 0, $114 = 0, $119 = 0, $12 = 0, $122 = 0.0, $126 = 0, $13 = 0, $131 = 0, $139 = 0, $14 = 0, $142 = 0, $15 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $31 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 $6 = sp + 160 | 0;
 $7 = sp + 328 | 0;
 $8 = sp + 324 | 0;
 $9 = sp + 312 | 0;
 $10 = sp + 300 | 0;
 $11 = sp + 296 | 0;
 $12 = sp;
 $13 = sp + 292 | 0;
 $14 = sp + 288 | 0;
 $15 = sp + 333 | 0;
 $16 = sp + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $156 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if (!$31) {
   $131 = 0;
   $157 = 1;
   $81 = 0;
  } else {
   $34 = HEAP32[$31 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$34 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $131 = 0;
    $157 = 1;
    $81 = 0;
   } else {
    $131 = $156;
    $157 = 0;
    $81 = $31;
   }
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if (!$46) label = 19; else {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$49 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($157) {
    $158 = $46;
    break;
   } else {
    $$2 = $$0;
    $139 = $46;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($157) {
    $$2 = $$0;
    $139 = 0;
    break;
   } else $158 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$82 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i31, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $139 = $158;
   break;
  }
  $96 = HEAP32[$80 >> 2] | 0;
  if (($96 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $96 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$96 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $156 = $131;
  $31 = $81;
 }
 $105 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($105 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $105 & 255) | 0) == 0)) {
  $114 = HEAP32[$13 >> 2] | 0;
  if (($114 - $12 | 0) < 160) {
   $119 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $114 + 4;
   HEAP32[$114 >> 2] = $119;
  }
 }
 $122 = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF32[$5 >> 2] = $122;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$81) $159 = 1; else {
  $126 = HEAP32[$81 + 12 >> 2] | 0;
  if (($126 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$131 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$126 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $159 = 1;
  } else $159 = 0;
 }
 do if (!$139) label = 48; else {
  $142 = HEAP32[$139 + 12 >> 2] | 0;
  if (($142 | 0) == (HEAP32[$139 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$139 >> 2] | 0) + 36 >> 2] & 127]($139) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$142 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($159) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($159) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $105 = 0, $11 = 0, $114 = 0, $119 = 0, $12 = 0, $122 = 0.0, $126 = 0, $13 = 0, $131 = 0, $139 = 0, $14 = 0, $142 = 0, $15 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $31 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 $6 = sp + 160 | 0;
 $7 = sp + 328 | 0;
 $8 = sp + 324 | 0;
 $9 = sp + 312 | 0;
 $10 = sp + 300 | 0;
 $11 = sp + 296 | 0;
 $12 = sp;
 $13 = sp + 292 | 0;
 $14 = sp + 288 | 0;
 $15 = sp + 333 | 0;
 $16 = sp + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $156 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if (!$31) {
   $131 = 0;
   $157 = 1;
   $81 = 0;
  } else {
   $34 = HEAP32[$31 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$34 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $131 = 0;
    $157 = 1;
    $81 = 0;
   } else {
    $131 = $156;
    $157 = 0;
    $81 = $31;
   }
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if (!$46) label = 19; else {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$49 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($157) {
    $158 = $46;
    break;
   } else {
    $$2 = $$0;
    $139 = $46;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($157) {
    $$2 = $$0;
    $139 = 0;
    break;
   } else $158 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$82 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i31, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $139 = $158;
   break;
  }
  $96 = HEAP32[$80 >> 2] | 0;
  if (($96 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $96 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$96 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $156 = $131;
  $31 = $81;
 }
 $105 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($105 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $105 & 255) | 0) == 0)) {
  $114 = HEAP32[$13 >> 2] | 0;
  if (($114 - $12 | 0) < 160) {
   $119 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $114 + 4;
   HEAP32[$114 >> 2] = $119;
  }
 }
 $122 = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF64[$5 >> 3] = $122;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$81) $159 = 1; else {
  $126 = HEAP32[$81 + 12 >> 2] | 0;
  if (($126 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$131 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$126 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $159 = 1;
  } else $159 = 0;
 }
 do if (!$139) label = 48; else {
  $142 = HEAP32[$139 + 12 >> 2] | 0;
  if (($142 | 0) == (HEAP32[$139 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$139 >> 2] | 0) + 36 >> 2] & 127]($139) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$142 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($159) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($159) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $105 = 0, $11 = 0, $114 = 0, $119 = 0, $12 = 0, $122 = 0.0, $126 = 0, $13 = 0, $131 = 0, $139 = 0, $14 = 0, $142 = 0, $15 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $31 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 336 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(336);
 $6 = sp + 160 | 0;
 $7 = sp + 328 | 0;
 $8 = sp + 324 | 0;
 $9 = sp + 312 | 0;
 $10 = sp + 300 | 0;
 $11 = sp + 296 | 0;
 $12 = sp;
 $13 = sp + 292 | 0;
 $14 = sp + 288 | 0;
 $15 = sp + 333 | 0;
 $16 = sp + 332 | 0;
 __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $156 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if (!$31) {
   $131 = 0;
   $157 = 1;
   $81 = 0;
  } else {
   $34 = HEAP32[$31 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$34 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i15, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $131 = 0;
    $157 = 1;
    $81 = 0;
   } else {
    $131 = $156;
    $157 = 0;
    $81 = $31;
   }
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if (!$46) label = 19; else {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$49 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i21, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($157) {
    $158 = $46;
    break;
   } else {
    $$2 = $$0;
    $139 = $46;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($157) {
    $$2 = $$0;
    $139 = 0;
    break;
   } else $158 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$82 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($$0$i$i31, $15, $16, $$1, $11, HEAP32[$7 >> 2] | 0, HEAP32[$8 >> 2] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $139 = $158;
   break;
  }
  $96 = HEAP32[$80 >> 2] | 0;
  if (($96 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $96 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$96 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $156 = $131;
  $31 = $81;
 }
 $105 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($105 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $105 & 255) | 0) == 0)) {
  $114 = HEAP32[$13 >> 2] | 0;
  if (($114 - $12 | 0) < 160) {
   $119 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $114 + 4;
   HEAP32[$114 >> 2] = $119;
  }
 }
 $122 = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF64[$5 >> 3] = $122;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$81) $159 = 1; else {
  $126 = HEAP32[$81 + 12 >> 2] | 0;
  if (($126 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$131 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$126 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $159 = 1;
  } else $159 = 0;
 }
 do if (!$139) label = 48; else {
  $142 = HEAP32[$139 + 12 >> 2] | 0;
  if (($142 | 0) == (HEAP32[$139 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$139 >> 2] | 0) + 36 >> 2] & 127]($139) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$142 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($159) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($159) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $106 = 0, $11 = 0, $115 = 0, $12 = 0, $120 = 0, $123 = 0.0, $127 = 0, $13 = 0, $132 = 0, $14 = 0, $140 = 0, $143 = 0, $15 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $31 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 160 | 0;
 $7 = sp + 231 | 0;
 $8 = sp + 230 | 0;
 $9 = sp + 216 | 0;
 $10 = sp + 204 | 0;
 $11 = sp + 200 | 0;
 $12 = sp;
 $13 = sp + 196 | 0;
 $14 = sp + 192 | 0;
 $15 = sp + 229 | 0;
 $16 = sp + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $157 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if (!$31) {
   $132 = 0;
   $158 = 1;
   $81 = 0;
  } else {
   $34 = HEAP32[$31 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$34 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $132 = 0;
    $158 = 1;
    $81 = 0;
   } else {
    $132 = $157;
    $158 = 0;
    $81 = $31;
   }
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if (!$46) label = 19; else {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$49 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($158) {
    $159 = $46;
    break;
   } else {
    $$2 = $$0;
    $140 = $46;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;
    $140 = 0;
    break;
   } else $159 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$82 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i31 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $140 = $159;
   break;
  }
  $97 = HEAP32[$80 >> 2] | 0;
  if (($97 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $97 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$97 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $157 = $132;
  $31 = $81;
 }
 $106 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($106 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $106 & 255) | 0) == 0)) {
  $115 = HEAP32[$13 >> 2] | 0;
  if (($115 - $12 | 0) < 160) {
   $120 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $115 + 4;
   HEAP32[$115 >> 2] = $120;
  }
 }
 $123 = +__ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF32[$5 >> 2] = $123;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$81) $160 = 1; else {
  $127 = HEAP32[$81 + 12 >> 2] | 0;
  if (($127 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$132 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$127 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $160 = 1;
  } else $160 = 0;
 }
 do if (!$140) label = 48; else {
  $143 = HEAP32[$140 + 12 >> 2] | 0;
  if (($143 | 0) == (HEAP32[$140 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] & 127]($140) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$143 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($160) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($160) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $106 = 0, $11 = 0, $115 = 0, $12 = 0, $120 = 0, $123 = 0.0, $127 = 0, $13 = 0, $132 = 0, $14 = 0, $140 = 0, $143 = 0, $15 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $31 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 160 | 0;
 $7 = sp + 231 | 0;
 $8 = sp + 230 | 0;
 $9 = sp + 216 | 0;
 $10 = sp + 204 | 0;
 $11 = sp + 200 | 0;
 $12 = sp;
 $13 = sp + 196 | 0;
 $14 = sp + 192 | 0;
 $15 = sp + 229 | 0;
 $16 = sp + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $157 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if (!$31) {
   $132 = 0;
   $158 = 1;
   $81 = 0;
  } else {
   $34 = HEAP32[$31 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$34 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $132 = 0;
    $158 = 1;
    $81 = 0;
   } else {
    $132 = $157;
    $158 = 0;
    $81 = $31;
   }
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if (!$46) label = 19; else {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$49 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($158) {
    $159 = $46;
    break;
   } else {
    $$2 = $$0;
    $140 = $46;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;
    $140 = 0;
    break;
   } else $159 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$82 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i31 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $140 = $159;
   break;
  }
  $97 = HEAP32[$80 >> 2] | 0;
  if (($97 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $97 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$97 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $157 = $132;
  $31 = $81;
 }
 $106 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($106 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $106 & 255) | 0) == 0)) {
  $115 = HEAP32[$13 >> 2] | 0;
  if (($115 - $12 | 0) < 160) {
   $120 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $115 + 4;
   HEAP32[$115 >> 2] = $120;
  }
 }
 $123 = +__ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF64[$5 >> 3] = $123;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$81) $160 = 1; else {
  $127 = HEAP32[$81 + 12 >> 2] | 0;
  if (($127 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$132 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$127 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $160 = 1;
  } else $160 = 0;
 }
 do if (!$140) label = 48; else {
  $143 = HEAP32[$140 + 12 >> 2] | 0;
  if (($143 | 0) == (HEAP32[$140 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] & 127]($140) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$143 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($160) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($160) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i15 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i21 = 0, $$0$i$i31 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $106 = 0, $11 = 0, $115 = 0, $12 = 0, $120 = 0, $123 = 0.0, $127 = 0, $13 = 0, $132 = 0, $14 = 0, $140 = 0, $143 = 0, $15 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $19 = 0, $22 = 0, $25 = 0, $29 = 0, $30 = 0, $31 = 0, $34 = 0, $46 = 0, $49 = 0, $6 = 0, $62 = 0, $66 = 0, $7 = 0, $74 = 0, $78 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 160 | 0;
 $7 = sp + 231 | 0;
 $8 = sp + 230 | 0;
 $9 = sp + 216 | 0;
 $10 = sp + 204 | 0;
 $11 = sp + 200 | 0;
 $12 = sp;
 $13 = sp + 196 | 0;
 $14 = sp + 192 | 0;
 $15 = sp + 229 | 0;
 $16 = sp + 228 | 0;
 __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($9, $3, $6, $7, $8);
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $19 = $10 + 11 | 0;
 $22 = $10 + 8 | 0;
 if ((HEAP8[$19 >> 0] | 0) < 0) $25 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $25 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $25, 0);
 $29 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 HEAP32[$11 >> 2] = $29;
 HEAP32[$13 >> 2] = $12;
 HEAP32[$14 >> 2] = 0;
 HEAP8[$15 >> 0] = 1;
 HEAP8[$16 >> 0] = 69;
 $30 = $10 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $29;
 $157 = $$pre;
 $31 = $$pre;
 L8 : while (1) {
  if (!$31) {
   $132 = 0;
   $158 = 1;
   $81 = 0;
  } else {
   $34 = HEAP32[$31 + 12 >> 2] | 0;
   if (($34 | 0) == (HEAP32[$31 + 16 >> 2] | 0)) $$0$i$i$i$i15 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$31 >> 2] | 0) + 36 >> 2] & 127]($31) | 0; else $$0$i$i$i$i15 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$34 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i15, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $132 = 0;
    $158 = 1;
    $81 = 0;
   } else {
    $132 = $157;
    $158 = 0;
    $81 = $31;
   }
  }
  $46 = HEAP32[$2 >> 2] | 0;
  do if (!$46) label = 19; else {
   $49 = HEAP32[$46 + 12 >> 2] | 0;
   if (($49 | 0) == (HEAP32[$46 + 16 >> 2] | 0)) $$0$i$i2$i$i21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$46 >> 2] | 0) + 36 >> 2] & 127]($46) | 0; else $$0$i$i2$i$i21 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$49 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i21, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($158) {
    $159 = $46;
    break;
   } else {
    $$2 = $$0;
    $140 = $46;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($158) {
    $$2 = $$0;
    $140 = 0;
    break;
   } else $159 = 0;
  }
  $62 = HEAP8[$19 >> 0] | 0;
  $66 = $62 << 24 >> 24 < 0 ? HEAP32[$30 >> 2] | 0 : $62 & 255;
  if ((HEAP32[$11 >> 2] | 0) == ($$0 + $66 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $66 << 1, 0);
   if ((HEAP8[$19 >> 0] | 0) < 0) $74 = (HEAP32[$22 >> 2] & 2147483647) + -1 | 0; else $74 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($10, $74, 0);
   $78 = (HEAP8[$19 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
   HEAP32[$11 >> 2] = $78 + $66;
   $$1 = $78;
  } else $$1 = $$0;
  $80 = $81 + 12 | 0;
  $82 = HEAP32[$80 >> 2] | 0;
  $83 = $81 + 16 | 0;
  if (($82 | 0) == (HEAP32[$83 >> 2] | 0)) $$0$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$82 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($$0$i$i31 & 255, $15, $16, $$1, $11, HEAP8[$7 >> 0] | 0, HEAP8[$8 >> 0] | 0, $9, $12, $13, $14, $6) | 0) {
   $$2 = $$1;
   $140 = $159;
   break;
  }
  $97 = HEAP32[$80 >> 2] | 0;
  if (($97 | 0) == (HEAP32[$83 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$81 >> 2] | 0) + 40 >> 2] & 127]($81) | 0; else {
   HEAP32[$80 >> 2] = $97 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$97 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $157 = $132;
  $31 = $81;
 }
 $106 = HEAP8[$9 + 11 >> 0] | 0;
 if (!((HEAP8[$15 >> 0] | 0) == 0 ? 1 : (($106 << 24 >> 24 < 0 ? HEAP32[$9 + 4 >> 2] | 0 : $106 & 255) | 0) == 0)) {
  $115 = HEAP32[$13 >> 2] | 0;
  if (($115 - $12 | 0) < 160) {
   $120 = HEAP32[$14 >> 2] | 0;
   HEAP32[$13 >> 2] = $115 + 4;
   HEAP32[$115 >> 2] = $120;
  }
 }
 $123 = +__ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($$2, HEAP32[$11 >> 2] | 0, $4);
 HEAPF64[$5 >> 3] = $123;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($9, $12, HEAP32[$13 >> 2] | 0, $4);
 if (!$81) $160 = 1; else {
  $127 = HEAP32[$81 + 12 >> 2] | 0;
  if (($127 | 0) == (HEAP32[$81 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$132 >> 2] | 0) + 36 >> 2] & 127]($81) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$127 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $160 = 1;
  } else $160 = 0;
 }
 do if (!$140) label = 48; else {
  $143 = HEAP32[$140 + 12 >> 2] | 0;
  if (($143 | 0) == (HEAP32[$140 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$140 >> 2] | 0) + 36 >> 2] & 127]($140) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$143 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($160) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($160) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZN6vision14BinarykMedoidsILi96EE6assignEPKhiPKii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$021 = 0, $$1 = 0, $103 = 0, $114 = 0, $119 = 0, $123 = 0, $20 = 0, $25 = 0, $29 = 0, $36 = 0, $41 = 0, $45 = 0, $5 = 0, $52 = 0, $57 = 0, $6 = 0, $61 = 0, $68 = 0, $7 = 0, $73 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $86 = 0, $9 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = $0 + 12 | 0;
 $9 = $0 + 16 | 0;
 if (($7 | 0) != ((HEAP32[$9 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) >> 2 | 0)) {
  $20 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27722) | 0, 27767) | 0, 33528) | 0, 154) | 0, 33535) | 0, 27875) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $20 + (HEAP32[(HEAP32[$20 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $25 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $29 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$25 >> 2] | 0) + 28 >> 2] & 63]($25, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($20, $29) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($20) | 0;
  _abort();
 }
 if (($2 | 0) <= 0) {
  $36 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27920) | 0, 27767) | 0, 33528) | 0, 155) | 0, 33535) | 0, 27960) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $36 + (HEAP32[(HEAP32[$36 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $41 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$41 >> 2] | 0) + 28 >> 2] & 63]($41, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($36, $45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($36) | 0;
  _abort();
 }
 if (($4 | 0) > ($2 | 0)) {
  $52 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27996) | 0, 27767) | 0, 33528) | 0, 156) | 0, 33535) | 0, 28047) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $52 + (HEAP32[(HEAP32[$52 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $57 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $61 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$57 >> 2] | 0) + 28 >> 2] & 63]($57, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($52, $61) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($52) | 0;
  _abort();
 }
 if (($7 | 0) > ($4 | 0)) {
  $68 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 28074) | 0, 27767) | 0, 33528) | 0, 157) | 0, 33535) | 0, 28115) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $68 + (HEAP32[(HEAP32[$68 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $73 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $77 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$73 >> 2] | 0) + 28 >> 2] & 63]($73, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($68, $77) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($68) | 0;
  _abort();
 }
 $78 = $0 + 24 | 0;
 HEAP32[$5 >> 2] = -1;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEmRKi($78, $4, $5);
 $79 = $0 + 36 | 0;
 HEAP32[$5 >> 2] = -1;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEmRKi($79, $4, $5);
 $80 = $0 + 48 | 0;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm($80, $4);
 $81 = HEAP32[$80 >> 2] | 0;
 $82 = $0 + 52 | 0;
 __ZN6vision16SequentialVectorIiEEvPT_iS1_($81, (HEAP32[$82 >> 2] | 0) - $81 >> 2, 0);
 $86 = $0 + 8 | 0;
 $$0 = -1;
 $$021 = 0;
 while (1) {
  if (($$021 | 0) >= (HEAP32[$86 >> 2] | 0)) break;
  $95 = HEAP32[$80 >> 2] | 0;
  __ZN6vision12ArrayShuffleIiEEvPT_iiRi($95, (HEAP32[$82 >> 2] | 0) - $95 >> 2, HEAP32[$6 >> 2] | 0, HEAP32[$0 >> 2] | 0);
  $103 = __ZN6vision14BinarykMedoidsILi96EE6assignERNSt3__26vectorIiNS2_9allocatorIiEEEEPKhiPKiiSB_i($0, $79, $1, $2, $3, $4, HEAP32[$80 >> 2] | 0, HEAP32[$6 >> 2] | 0) | 0;
  if ($103 >>> 0 < $$0 >>> 0) {
   __ZNSt3__26vectorIiNS_9allocatorIiEEE4swapERS3_($78, $79);
   __ZN6vision10CopyVectorIiEEvPT_PKS1_m(HEAP32[$8 >> 2] | 0, HEAP32[$80 >> 2] | 0, HEAP32[$6 >> 2] | 0);
   $$1 = $103;
  } else $$1 = $$0;
  $$0 = $$1;
  $$021 = $$021 + 1 | 0;
 }
 if ((HEAP32[$6 >> 2] | 0) == ((HEAP32[$9 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) >> 2 | 0)) {
  STACKTOP = sp;
  return;
 } else {
  $114 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27722) | 0, 27767) | 0, 33528) | 0, 187) | 0, 33535) | 0, 27875) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $114 + (HEAP32[(HEAP32[$114 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $119 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $123 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$119 >> 2] | 0) + 28 >> 2] & 63]($119, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($114, $123) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($114) | 0;
  _abort();
 }
}

function _icpPointRobust($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0205 = 0, $$0207 = 0, $$0209 = 0.0, $$0211 = 0.0, $$0212 = 0, $$0213 = 0.0, $$1 = 0, $$1206 = 0, $$1208 = 0, $$2 = 0, $$3 = 0, $$pn = 0.0, $$pre = 0, $100 = 0, $106 = 0.0, $107 = 0.0, $111 = 0, $115 = 0, $119 = 0, $123 = 0, $127 = 0, $131 = 0, $135 = 0, $139 = 0, $143 = 0, $147 = 0, $151 = 0, $154 = 0, $16 = 0, $19 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $47 = 0, $5 = 0, $51 = 0.0, $55 = 0.0, $56 = 0, $6 = 0, $62 = 0.0, $67 = 0.0, $69 = 0, $7 = 0, $70 = 0.0, $73 = 0.0, $76 = 0.0, $8 = 0, $83 = 0.0, $9 = 0, $95 = 0, $97 = 0.0, $99 = 0, $spec$store$select = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 $vararg_buffer5 = sp + 184 | 0;
 $vararg_buffer3 = sp + 176 | 0;
 $vararg_buffer1 = sp + 168 | 0;
 $vararg_buffer = sp + 160 | 0;
 $5 = sp + 144 | 0;
 $6 = sp + 48 | 0;
 $7 = sp;
 $8 = $1 + 8 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 do if (($9 | 0) < 4) $$0212 = -1; else {
  $16 = ~~(+HEAPF64[$0 + 128 >> 3] * +($9 | 0)) + -1 | 0;
  $spec$store$select = ($16 | 0) > 3 ? $16 : 3;
  $19 = _malloc($9 * 96 | 0) | 0;
  if (!$19) {
   _arLog(0, 3, 18493, $vararg_buffer);
   $$0212 = -1;
   break;
  }
  $22 = _malloc($9 << 4) | 0;
  if (!$22) {
   _arLog(0, 3, 18493, $vararg_buffer1);
   _free($19);
   $$0212 = -1;
   break;
  }
  $24 = $9 << 3;
  $25 = _malloc($24) | 0;
  if (!$25) {
   _arLog(0, 3, 18493, $vararg_buffer3);
   _free($19);
   _free($22);
   $$0212 = -1;
   break;
  }
  $27 = _malloc($24) | 0;
  if (!$27) {
   _arLog(0, 3, 18493, $vararg_buffer5);
   _free($19);
   _free($22);
   _free($25);
   $$0212 = -1;
   break;
  }
  $$0205 = 0;
  while (1) {
   if (($$0205 | 0) == 3) break;
   $$0207 = 0;
   while (1) {
    if (($$0207 | 0) == 4) break;
    HEAPF64[$3 + ($$0205 << 5) + ($$0207 << 3) >> 3] = +HEAPF64[$2 + ($$0205 << 5) + ($$0207 << 3) >> 3];
    $$0207 = $$0207 + 1 | 0;
   }
   $$0205 = $$0205 + 1 | 0;
  }
  $34 = $1 + 4 | 0;
  $35 = $5 + 8 | 0;
  $36 = $27 + ($spec$store$select << 3) | 0;
  $37 = $0 + 104 | 0;
  $38 = $0 + 96 | 0;
  $39 = $0 + 120 | 0;
  $40 = $0 + 112 | 0;
  $$0211 = 0.0;
  $$1208 = 0;
  L23 : while (1) {
   _arUtilMatMul($0, $3, $6) | 0;
   $$1206 = 0;
   while (1) {
    $41 = HEAP32[$8 >> 2] | 0;
    if (($$1206 | 0) >= ($41 | 0)) break;
    if ((_icpGetU_from_X_by_MatX2U($5, $6, (HEAP32[$34 >> 2] | 0) + ($$1206 * 24 | 0) | 0) | 0) < 0) {
     label = 20;
     break L23;
    }
    $47 = HEAP32[$1 >> 2] | 0;
    $51 = +HEAPF64[$47 + ($$1206 << 4) >> 3] - +HEAPF64[$5 >> 3];
    $55 = +HEAPF64[$47 + ($$1206 << 4) + 8 >> 3] - +HEAPF64[$35 >> 3];
    $56 = $$1206 << 1;
    HEAPF64[$22 + ($56 << 3) >> 3] = $51;
    HEAPF64[$22 + (($56 | 1) << 3) >> 3] = $55;
    $62 = $51 * $51 + $55 * $55;
    HEAPF64[$27 + ($$1206 << 3) >> 3] = $62;
    HEAPF64[$25 + ($$1206 << 3) >> 3] = $62;
    $$1206 = $$1206 + 1 | 0;
   }
   _qsort($27, $41, 8, 18);
   $67 = +HEAPF64[$36 >> 3] * 4.0;
   $$0213 = $67 < 16.0 ? 16.0 : $67;
   $69 = HEAP32[$8 >> 2] | 0;
   $70 = $$0213 / 6.0;
   $$0209 = 0.0;
   $$2 = 0;
   while (1) {
    if (($$2 | 0) >= ($69 | 0)) break;
    $73 = +HEAPF64[$27 + ($$2 << 3) >> 3];
    if ($73 > $$0213) $$pn = $70; else {
     $76 = 1.0 - $73 / $$0213;
     $$pn = $70 * (1.0 - $76 * ($76 * $76));
    }
    $$0209 = $$0209 + $$pn;
    $$2 = $$2 + 1 | 0;
   }
   $83 = $$0209 / +($69 | 0);
   if ($83 < +HEAPF64[$37 >> 3]) {
    label = 44;
    break;
   }
   if ($$1208 | 0) if ($83 < +HEAPF64[$39 >> 3]) if ($83 / $$0211 > +HEAPF64[$40 >> 3]) {
    label = 44;
    break;
   }
   if (($$1208 | 0) == (HEAP32[$38 >> 2] | 0)) {
    label = 44;
    break;
   }
   $$0 = 0;
   $$3 = 0;
   $95 = $69;
   while (1) {
    if (($$3 | 0) >= ($95 | 0)) break;
    $97 = +HEAPF64[$25 + ($$3 << 3) >> 3];
    if (!($97 <= $$0213)) {
     $$1 = $$0;
     $$pre = $95;
    } else {
     $99 = $$0 * 6 | 0;
     $100 = $19 + ($99 << 3) | 0;
     if ((_icpGetJ_U_S($100, $0, $3, (HEAP32[$34 >> 2] | 0) + ($$3 * 24 | 0) | 0) | 0) < 0) {
      label = 36;
      break L23;
     }
     $106 = 1.0 - $97 / $$0213;
     $107 = $106 * $106;
     HEAPF64[$100 >> 3] = $107 * +HEAPF64[$100 >> 3];
     $111 = $19 + (($99 | 1) << 3) | 0;
     HEAPF64[$111 >> 3] = $107 * +HEAPF64[$111 >> 3];
     $115 = $19 + ($99 + 2 << 3) | 0;
     HEAPF64[$115 >> 3] = $107 * +HEAPF64[$115 >> 3];
     $119 = $19 + ($99 + 3 << 3) | 0;
     HEAPF64[$119 >> 3] = $107 * +HEAPF64[$119 >> 3];
     $123 = $19 + ($99 + 4 << 3) | 0;
     HEAPF64[$123 >> 3] = $107 * +HEAPF64[$123 >> 3];
     $127 = $19 + ($99 + 5 << 3) | 0;
     HEAPF64[$127 >> 3] = $107 * +HEAPF64[$127 >> 3];
     $131 = $19 + ($99 + 6 << 3) | 0;
     HEAPF64[$131 >> 3] = $107 * +HEAPF64[$131 >> 3];
     $135 = $19 + ($99 + 7 << 3) | 0;
     HEAPF64[$135 >> 3] = $107 * +HEAPF64[$135 >> 3];
     $139 = $19 + ($99 + 8 << 3) | 0;
     HEAPF64[$139 >> 3] = $107 * +HEAPF64[$139 >> 3];
     $143 = $19 + ($99 + 9 << 3) | 0;
     HEAPF64[$143 >> 3] = $107 * +HEAPF64[$143 >> 3];
     $147 = $19 + ($99 + 10 << 3) | 0;
     HEAPF64[$147 >> 3] = $107 * +HEAPF64[$147 >> 3];
     $151 = $19 + ($99 + 11 << 3) | 0;
     HEAPF64[$151 >> 3] = $107 * +HEAPF64[$151 >> 3];
     $154 = $$3 << 1;
     HEAPF64[$22 + ($$0 << 3) >> 3] = $107 * +HEAPF64[$22 + ($154 << 3) >> 3];
     HEAPF64[$22 + ($$0 + 1 << 3) >> 3] = $107 * +HEAPF64[$22 + (($154 | 1) << 3) >> 3];
     $$1 = $$0 + 2 | 0;
     $$pre = HEAP32[$8 >> 2] | 0;
    }
    $$0 = $$1;
    $$3 = $$3 + 1 | 0;
    $95 = $$pre;
   }
   if (($$0 | 0) < 6) {
    label = 40;
    break;
   }
   if ((_icpGetDeltaS($7, $22, $19, $$0) | 0) < 0) {
    label = 42;
    break;
   }
   _icpUpdateMat($3, $7) | 0;
   $$0211 = $83;
   $$1208 = $$1208 + 1 | 0;
  }
  if ((label | 0) == 20) {
   _icpGetXw2XcCleanup_221($19, $22, $25, $27);
   $$0212 = -1;
   break;
  } else if ((label | 0) == 36) {
   _icpGetXw2XcCleanup_221($19, $22, $25, $27);
   $$0212 = -1;
   break;
  } else if ((label | 0) == 40) {
   _icpGetXw2XcCleanup_221($19, $22, $25, $27);
   $$0212 = -1;
   break;
  } else if ((label | 0) == 42) {
   _icpGetXw2XcCleanup_221($19, $22, $25, $27);
   $$0212 = -1;
   break;
  } else if ((label | 0) == 44) {
   HEAPF64[$4 >> 3] = $83;
   _free($19);
   _free($22);
   _free($25);
   _free($27);
   $$0212 = 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0212 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i22 = 0, $$0$i$i19 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i28 = 0, $$0$i$i38 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $110 = 0, $111 = 0, $116 = 0, $12 = 0, $121 = 0, $129 = 0, $132 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $21 = 0, $24 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $36 = 0, $48 = 0, $51 = 0, $6 = 0, $64 = 0, $68 = 0, $7 = 0, $76 = 0, $8 = 0, $80 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $96 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $vararg_buffer = sp + 264 | 0;
 $6 = sp + 160 | 0;
 $7 = sp + 292 | 0;
 $8 = sp + 280 | 0;
 $9 = sp + 276 | 0;
 $10 = sp;
 $11 = sp + 272 | 0;
 $12 = sp + 268 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$7 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 __ZNKSt3__28ios_base6getlocEv($8, $3);
 $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57916) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$15 >> 2] | 0) + 48 >> 2] & 15]($15, 10736, 10762, $6) | 0;
 __ZNSt3__26localeD2Ev($8);
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 $$0$i$i19 = 0;
 while (1) {
  if (($$0$i$i19 | 0) == 3) break;
  HEAP32[$8 + ($$0$i$i19 << 2) >> 2] = 0;
  $$0$i$i19 = $$0$i$i19 + 1 | 0;
 }
 $21 = $8 + 11 | 0;
 $24 = $8 + 8 | 0;
 if ((HEAP8[$21 >> 0] | 0) < 0) $27 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $27 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $27, 0);
 $31 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 HEAP32[$9 >> 2] = $31;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$12 >> 2] = 0;
 $32 = $8 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $31;
 $146 = $$pre;
 $33 = $$pre;
 L12 : while (1) {
  if (!$33) {
   $121 = 0;
   $147 = 1;
   $83 = 0;
  } else {
   $36 = HEAP32[$33 + 12 >> 2] | 0;
   if (($36 | 0) == (HEAP32[$33 + 16 >> 2] | 0)) $$0$i$i$i$i22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] & 127]($33) | 0; else $$0$i$i$i$i22 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$36 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i22, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $121 = 0;
    $147 = 1;
    $83 = 0;
   } else {
    $121 = $146;
    $147 = 0;
    $83 = $33;
   }
  }
  $48 = HEAP32[$2 >> 2] | 0;
  do if (!$48) label = 22; else {
   $51 = HEAP32[$48 + 12 >> 2] | 0;
   if (($51 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) $$0$i$i2$i$i28 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$48 >> 2] | 0) + 36 >> 2] & 127]($48) | 0; else $$0$i$i2$i$i28 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$51 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i28, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 22;
    break;
   } else if ($147) {
    $148 = $48;
    break;
   } else {
    $$2 = $$0;
    $129 = $48;
    break L12;
   }
  } while (0);
  if ((label | 0) == 22) {
   label = 0;
   if ($147) {
    $$2 = $$0;
    $129 = 0;
    break;
   } else $148 = 0;
  }
  $64 = HEAP8[$21 >> 0] | 0;
  $68 = $64 << 24 >> 24 < 0 ? HEAP32[$32 >> 2] | 0 : $64 & 255;
  if ((HEAP32[$9 >> 2] | 0) == ($$0 + $68 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $68 << 1, 0);
   if ((HEAP8[$21 >> 0] | 0) < 0) $76 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $76 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $76, 0);
   $80 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
   HEAP32[$9 >> 2] = $80 + $68;
   $$1 = $80;
  } else $$1 = $$0;
  $82 = $83 + 12 | 0;
  $84 = HEAP32[$82 >> 2] | 0;
  $85 = $83 + 16 | 0;
  if (($84 | 0) == (HEAP32[$85 >> 2] | 0)) $$0$i$i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 36 >> 2] & 127]($83) | 0; else $$0$i$i38 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$84 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i38, 16, $$1, $9, $12, 0, $7, $10, $11, $6) | 0) {
   $$2 = $$1;
   $129 = $148;
   break;
  }
  $96 = HEAP32[$82 >> 2] | 0;
  if (($96 | 0) == (HEAP32[$85 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 40 >> 2] & 127]($83) | 0; else {
   HEAP32[$82 >> 2] = $96 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$96 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $146 = $121;
  $33 = $83;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, (HEAP32[$9 >> 2] | 0) - $$2 | 0, 0);
 $110 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 $111 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$vararg_buffer >> 2] = $5;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($110, $111, 46754, $vararg_buffer) | 0) != 1) HEAP32[$4 >> 2] = 4;
 if (!$83) $149 = 1; else {
  $116 = HEAP32[$83 + 12 >> 2] | 0;
  if (($116 | 0) == (HEAP32[$83 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$121 >> 2] | 0) + 36 >> 2] & 127]($83) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$116 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $149 = 1;
  } else $149 = 0;
 }
 do if (!$129) label = 50; else {
  $132 = HEAP32[$129 + 12 >> 2] | 0;
  if (($132 | 0) == (HEAP32[$129 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$129 >> 2] | 0) + 36 >> 2] & 127]($129) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$132 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 50;
   break;
  } else if ($149) break; else {
   label = 52;
   break;
  }
 } while (0);
 if ((label | 0) == 50) if ($149) label = 52;
 if ((label | 0) == 52) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i20 = 0, $$0$i$i17 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i26 = 0, $$0$i$i36 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $111 = 0, $112 = 0, $117 = 0, $12 = 0, $122 = 0, $130 = 0, $133 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $21 = 0, $24 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $36 = 0, $48 = 0, $51 = 0, $6 = 0, $64 = 0, $68 = 0, $7 = 0, $76 = 0, $8 = 0, $80 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $97 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $vararg_buffer = sp + 192 | 0;
 $6 = sp + 160 | 0;
 $7 = sp + 220 | 0;
 $8 = sp + 208 | 0;
 $9 = sp + 204 | 0;
 $10 = sp;
 $11 = sp + 200 | 0;
 $12 = sp + 196 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$7 + 4 >> 2] = 0;
 HEAP32[$7 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$7 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 __ZNKSt3__28ios_base6getlocEv($8, $3);
 $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$15 >> 2] | 0) + 32 >> 2] & 15]($15, 10736, 10762, $6) | 0;
 __ZNSt3__26localeD2Ev($8);
 HEAP32[$8 >> 2] = 0;
 HEAP32[$8 + 4 >> 2] = 0;
 HEAP32[$8 + 8 >> 2] = 0;
 $$0$i$i17 = 0;
 while (1) {
  if (($$0$i$i17 | 0) == 3) break;
  HEAP32[$8 + ($$0$i$i17 << 2) >> 2] = 0;
  $$0$i$i17 = $$0$i$i17 + 1 | 0;
 }
 $21 = $8 + 11 | 0;
 $24 = $8 + 8 | 0;
 if ((HEAP8[$21 >> 0] | 0) < 0) $27 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $27 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $27, 0);
 $31 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 HEAP32[$9 >> 2] = $31;
 HEAP32[$11 >> 2] = $10;
 HEAP32[$12 >> 2] = 0;
 $32 = $8 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $31;
 $147 = $$pre;
 $33 = $$pre;
 L12 : while (1) {
  if (!$33) {
   $122 = 0;
   $148 = 1;
   $83 = 0;
  } else {
   $36 = HEAP32[$33 + 12 >> 2] | 0;
   if (($36 | 0) == (HEAP32[$33 + 16 >> 2] | 0)) $$0$i$i$i$i20 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$33 >> 2] | 0) + 36 >> 2] & 127]($33) | 0; else $$0$i$i$i$i20 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$36 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i20, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $122 = 0;
    $148 = 1;
    $83 = 0;
   } else {
    $122 = $147;
    $148 = 0;
    $83 = $33;
   }
  }
  $48 = HEAP32[$2 >> 2] | 0;
  do if (!$48) label = 22; else {
   $51 = HEAP32[$48 + 12 >> 2] | 0;
   if (($51 | 0) == (HEAP32[$48 + 16 >> 2] | 0)) $$0$i$i2$i$i26 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$48 >> 2] | 0) + 36 >> 2] & 127]($48) | 0; else $$0$i$i2$i$i26 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$51 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i26, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 22;
    break;
   } else if ($148) {
    $149 = $48;
    break;
   } else {
    $$2 = $$0;
    $130 = $48;
    break L12;
   }
  } while (0);
  if ((label | 0) == 22) {
   label = 0;
   if ($148) {
    $$2 = $$0;
    $130 = 0;
    break;
   } else $149 = 0;
  }
  $64 = HEAP8[$21 >> 0] | 0;
  $68 = $64 << 24 >> 24 < 0 ? HEAP32[$32 >> 2] | 0 : $64 & 255;
  if ((HEAP32[$9 >> 2] | 0) == ($$0 + $68 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $68 << 1, 0);
   if ((HEAP8[$21 >> 0] | 0) < 0) $76 = (HEAP32[$24 >> 2] & 2147483647) + -1 | 0; else $76 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, $76, 0);
   $80 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
   HEAP32[$9 >> 2] = $80 + $68;
   $$1 = $80;
  } else $$1 = $$0;
  $82 = $83 + 12 | 0;
  $84 = HEAP32[$82 >> 2] | 0;
  $85 = $83 + 16 | 0;
  if (($84 | 0) == (HEAP32[$85 >> 2] | 0)) $$0$i$i36 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 36 >> 2] & 127]($83) | 0; else $$0$i$i36 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$84 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i36 & 255, 16, $$1, $9, $12, 0, $7, $10, $11, $6) | 0) {
   $$2 = $$1;
   $130 = $149;
   break;
  }
  $97 = HEAP32[$82 >> 2] | 0;
  if (($97 | 0) == (HEAP32[$85 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 40 >> 2] & 127]($83) | 0; else {
   HEAP32[$82 >> 2] = $97 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$97 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $147 = $122;
  $33 = $83;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($8, (HEAP32[$9 >> 2] | 0) - $$2 | 0, 0);
 $111 = (HEAP8[$21 >> 0] | 0) < 0 ? HEAP32[$8 >> 2] | 0 : $8;
 $112 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$vararg_buffer >> 2] = $5;
 if ((__ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($111, $112, 46754, $vararg_buffer) | 0) != 1) HEAP32[$4 >> 2] = 4;
 if (!$83) $150 = 1; else {
  $117 = HEAP32[$83 + 12 >> 2] | 0;
  if (($117 | 0) == (HEAP32[$83 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$122 >> 2] | 0) + 36 >> 2] & 127]($83) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$117 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $150 = 1;
  } else $150 = 0;
 }
 do if (!$130) label = 50; else {
  $133 = HEAP32[$130 + 12 >> 2] | 0;
  if (($133 | 0) == (HEAP32[$130 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$130 >> 2] | 0) + 36 >> 2] & 127]($130) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$133 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 50;
   break;
  } else if ($150) break; else {
   label = 52;
   break;
  }
 } while (0);
 if ((label | 0) == 50) if ($150) label = 52;
 if ((label | 0) == 52) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i27 = 0, $$0$i$i$i$i41 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i33 = 0, $$0$i$i2$i$i47 = 0, $$0$i$i38 = 0, $$0$in = 0, $$025 = 0, $$025$in = 0, $$2 = 0, $102 = 0, $103 = 0, $106 = 0, $108 = 0, $128 = 0, $129 = 0, $130 = 0, $131 = 0, $142 = 0, $154 = 0, $157 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $20 = 0, $23 = 0, $37 = 0, $39 = 0, $5 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $71 = 0, $74 = 0, $8 = 0, $86 = 0, $89 = 0, label = 0;
 $5 = HEAP32[$0 >> 2] | 0;
 do if (!$5) $171 = 1; else {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$8 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$0 >> 2] = 0;
   $171 = 1;
   break;
  } else {
   $171 = (HEAP32[$0 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $20 = HEAP32[$1 >> 2] | 0;
 do if (!$20) label = 14; else {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$23 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   label = 14;
   break;
  } else if ($171) {
   $172 = $20;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($171) label = 16; else {
  $172 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) {
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 6;
  $$2 = 0;
 } else if ((label | 0) == 17) {
  $37 = HEAP32[$0 >> 2] | 0;
  $39 = HEAP32[$37 + 12 >> 2] | 0;
  if (($39 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] & 127]($37) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$39 >> 2] | 0) | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, 2048, $$0$i$i) | 0)) {
   HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 4;
   $$2 = 0;
   break;
  }
  $59 = (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 52 >> 2] & 63]($3, $$0$i$i, 0) | 0) << 24 >> 24;
  $60 = HEAP32[$0 >> 2] | 0;
  $61 = $60 + 12 | 0;
  $62 = HEAP32[$61 >> 2] | 0;
  if (($62 | 0) == (HEAP32[$60 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$60 >> 2] | 0) + 40 >> 2] & 127]($60) | 0; else {
   HEAP32[$61 >> 2] = $62 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$62 >> 2] | 0) | 0;
  }
  $$0$in = $59;
  $$025$in = $4;
  $173 = $172;
  $86 = $172;
  while (1) {
   $$0 = $$0$in + -48 | 0;
   $$025 = $$025$in + -1 | 0;
   $71 = HEAP32[$0 >> 2] | 0;
   do if (!$71) $103 = 1; else {
    $74 = HEAP32[$71 + 12 >> 2] | 0;
    if (($74 | 0) == (HEAP32[$71 + 16 >> 2] | 0)) $$0$i$i$i$i27 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$71 >> 2] | 0) + 36 >> 2] & 127]($71) | 0; else $$0$i$i$i$i27 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$74 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i27, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$0 >> 2] = 0;
     $103 = 1;
     break;
    } else {
     $103 = (HEAP32[$0 >> 2] | 0) == 0;
     break;
    }
   } while (0);
   if (!$86) {
    $102 = 1;
    $154 = $173;
    $174 = 0;
   } else {
    $89 = HEAP32[$86 + 12 >> 2] | 0;
    if (($89 | 0) == (HEAP32[$86 + 16 >> 2] | 0)) $$0$i$i2$i$i33 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$86 >> 2] | 0) + 36 >> 2] & 127]($86) | 0; else $$0$i$i2$i$i33 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$89 >> 2] | 0) | 0;
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i33, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
     HEAP32[$1 >> 2] = 0;
     $102 = 1;
     $154 = 0;
     $174 = 0;
    } else {
     $102 = 0;
     $154 = $173;
     $174 = $86;
    }
   }
   $106 = HEAP32[$0 >> 2] | 0;
   if (!(($$025$in | 0) > 1 & ($103 ^ $102))) break;
   $108 = HEAP32[$106 + 12 >> 2] | 0;
   if (($108 | 0) == (HEAP32[$106 + 16 >> 2] | 0)) $$0$i$i38 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$106 >> 2] | 0) + 36 >> 2] & 127]($106) | 0; else $$0$i$i38 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$108 >> 2] | 0) | 0;
   if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 12 >> 2] & 63]($3, 2048, $$0$i$i38) | 0)) {
    $$2 = $$0;
    break L22;
   }
   $128 = ($$0 * 10 | 0) + ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$3 >> 2] | 0) + 52 >> 2] & 63]($3, $$0$i$i38, 0) | 0) << 24 >> 24) | 0;
   $129 = HEAP32[$0 >> 2] | 0;
   $130 = $129 + 12 | 0;
   $131 = HEAP32[$130 >> 2] | 0;
   if (($131 | 0) == (HEAP32[$129 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$129 >> 2] | 0) + 40 >> 2] & 127]($129) | 0; else {
    HEAP32[$130 >> 2] = $131 + 4;
    __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$131 >> 2] | 0) | 0;
   }
   $$0$in = $128;
   $$025$in = $$025;
   $173 = $154;
   $86 = $174;
  }
  do if (!$106) $175 = 1; else {
   $142 = HEAP32[$106 + 12 >> 2] | 0;
   if (($142 | 0) == (HEAP32[$106 + 16 >> 2] | 0)) $$0$i$i$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$106 >> 2] | 0) + 36 >> 2] & 127]($106) | 0; else $$0$i$i$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$142 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i41, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$0 >> 2] = 0;
    $175 = 1;
    break;
   } else {
    $175 = (HEAP32[$0 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$154) label = 61; else {
   $157 = HEAP32[$154 + 12 >> 2] | 0;
   if (($157 | 0) == (HEAP32[$154 + 16 >> 2] | 0)) $$0$i$i2$i$i47 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$154 >> 2] | 0) + 36 >> 2] & 127]($154) | 0; else $$0$i$i2$i$i47 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$157 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i47, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    label = 61;
    break;
   } else if ($175) {
    $$2 = $$0;
    break L22;
   } else break;
  } while (0);
  if ((label | 0) == 61) if (!$175) {
   $$2 = $$0;
   break;
  }
  HEAP32[$2 >> 2] = HEAP32[$2 >> 2] | 2;
  $$2 = $$0;
 } while (0);
 return $$2 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $12 = 0, $122 = 0, $127 = 0, $13 = 0, $135 = 0, $138 = 0, $14 = 0, $15 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $152 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $127 = 0;
   $153 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $127 = 0;
    $153 = 1;
    $80 = 0;
   } else {
    $127 = $152;
    $153 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($153) {
    $154 = $45;
    break;
   } else {
    $$2 = $$0;
    $135 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;
    $135 = 0;
    break;
   } else $154 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $135 = $154;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $152 = $127;
  $30 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0) {
  $110 = HEAP32[$12 >> 2] | 0;
  if (($110 - $11 | 0) < 160) {
   $115 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $110 + 4;
   HEAP32[$110 >> 2] = $115;
  }
 }
 $118 = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP16[$5 >> 1] = $118;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $155 = 1; else {
  $122 = HEAP32[$80 + 12 >> 2] | 0;
  if (($122 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$127 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$122 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $155 = 1;
  } else $155 = 0;
 }
 do if (!$135) label = 48; else {
  $138 = HEAP32[$135 + 12 >> 2] | 0;
  if (($138 | 0) == (HEAP32[$135 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$135 >> 2] | 0) + 36 >> 2] & 127]($135) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$138 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($155) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($155) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $12 = 0, $122 = 0, $127 = 0, $13 = 0, $135 = 0, $138 = 0, $14 = 0, $15 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $152 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $127 = 0;
   $153 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $127 = 0;
    $153 = 1;
    $80 = 0;
   } else {
    $127 = $152;
    $153 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($153) {
    $154 = $45;
    break;
   } else {
    $$2 = $$0;
    $135 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;
    $135 = 0;
    break;
   } else $154 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $135 = $154;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $152 = $127;
  $30 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0) {
  $110 = HEAP32[$12 >> 2] | 0;
  if (($110 - $11 | 0) < 160) {
   $115 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $110 + 4;
   HEAP32[$110 >> 2] = $115;
  }
 }
 $118 = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $118;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $155 = 1; else {
  $122 = HEAP32[$80 + 12 >> 2] | 0;
  if (($122 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$127 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$122 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $155 = 1;
  } else $155 = 0;
 }
 do if (!$135) label = 48; else {
  $138 = HEAP32[$135 + 12 >> 2] | 0;
  if (($138 | 0) == (HEAP32[$135 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$135 >> 2] | 0) + 36 >> 2] & 127]($135) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$138 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($155) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($155) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $12 = 0, $122 = 0, $127 = 0, $13 = 0, $135 = 0, $138 = 0, $14 = 0, $15 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $152 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $127 = 0;
   $153 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $127 = 0;
    $153 = 1;
    $80 = 0;
   } else {
    $127 = $152;
    $153 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($153) {
    $154 = $45;
    break;
   } else {
    $$2 = $$0;
    $135 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;
    $135 = 0;
    break;
   } else $154 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $135 = $154;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $152 = $127;
  $30 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0) {
  $110 = HEAP32[$12 >> 2] | 0;
  if (($110 - $11 | 0) < 160) {
   $115 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $110 + 4;
   HEAP32[$110 >> 2] = $115;
  }
 }
 $118 = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $118;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $155 = 1; else {
  $122 = HEAP32[$80 + 12 >> 2] | 0;
  if (($122 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$127 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$122 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $155 = 1;
  } else $155 = 0;
 }
 do if (!$135) label = 48; else {
  $138 = HEAP32[$135 + 12 >> 2] | 0;
  if (($138 | 0) == (HEAP32[$135 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$135 >> 2] | 0) + 36 >> 2] & 127]($135) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$138 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($155) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($155) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $123 = 0, $128 = 0, $13 = 0, $136 = 0, $139 = 0, $14 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $153 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $128 = 0;
   $154 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $128 = 0;
    $154 = 1;
    $80 = 0;
   } else {
    $128 = $153;
    $154 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($154) {
    $155 = $45;
    break;
   } else {
    $$2 = $$0;
    $136 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $136 = 0;
    break;
   } else $155 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $136 = $155;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $153 = $128;
  $30 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0) {
  $111 = HEAP32[$12 >> 2] | 0;
  if (($111 - $11 | 0) < 160) {
   $116 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $111 + 4;
   HEAP32[$111 >> 2] = $116;
  }
 }
 $119 = __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP16[$5 >> 1] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $156 = 1; else {
  $123 = HEAP32[$80 + 12 >> 2] | 0;
  if (($123 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$128 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$123 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 }
 do if (!$136) label = 48; else {
  $139 = HEAP32[$136 + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$136 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$136 >> 2] | 0) + 36 >> 2] & 127]($136) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$139 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($156) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($156) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $123 = 0, $128 = 0, $13 = 0, $136 = 0, $139 = 0, $14 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $153 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $128 = 0;
   $154 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $128 = 0;
    $154 = 1;
    $80 = 0;
   } else {
    $128 = $153;
    $154 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($154) {
    $155 = $45;
    break;
   } else {
    $$2 = $$0;
    $136 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $136 = 0;
    break;
   } else $155 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $136 = $155;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $153 = $128;
  $30 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0) {
  $111 = HEAP32[$12 >> 2] | 0;
  if (($111 - $11 | 0) < 160) {
   $116 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $111 + 4;
   HEAP32[$111 >> 2] = $116;
  }
 }
 $119 = __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $156 = 1; else {
  $123 = HEAP32[$80 + 12 >> 2] | 0;
  if (($123 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$128 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$123 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 }
 do if (!$136) label = 48; else {
  $139 = HEAP32[$136 + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$136 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$136 >> 2] | 0) + 36 >> 2] & 127]($136) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$139 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($156) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($156) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $123 = 0, $128 = 0, $13 = 0, $136 = 0, $139 = 0, $14 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $153 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $128 = 0;
   $154 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $128 = 0;
    $154 = 1;
    $80 = 0;
   } else {
    $128 = $153;
    $154 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($154) {
    $155 = $45;
    break;
   } else {
    $$2 = $$0;
    $136 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $136 = 0;
    break;
   } else $155 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $136 = $155;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $153 = $128;
  $30 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0) {
  $111 = HEAP32[$12 >> 2] | 0;
  if (($111 - $11 | 0) < 160) {
   $116 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $111 + 4;
   HEAP32[$111 >> 2] = $116;
  }
 }
 $119 = __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $156 = 1; else {
  $123 = HEAP32[$80 + 12 >> 2] | 0;
  if (($123 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$128 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$123 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 }
 do if (!$136) label = 48; else {
  $139 = HEAP32[$136 + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$136 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$136 >> 2] | 0) + 36 >> 2] & 127]($136) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$139 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($156) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($156) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $103 = 0, $11 = 0, $110 = 0, $115 = 0, $118 = 0, $12 = 0, $122 = 0, $127 = 0, $13 = 0, $135 = 0, $138 = 0, $14 = 0, $15 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(304);
 $6 = sp + 300 | 0;
 $8 = sp + 288 | 0;
 $9 = sp + 276 | 0;
 $10 = sp + 272 | 0;
 $11 = sp;
 $12 = sp + 268 | 0;
 $13 = sp + 264 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $152 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $127 = 0;
   $153 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$33 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i25, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $127 = 0;
    $153 = 1;
    $80 = 0;
   } else {
    $127 = $152;
    $153 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i31, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($153) {
    $154 = $45;
    break;
   } else {
    $$2 = $$0;
    $135 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($153) {
    $$2 = $$0;
    $135 = 0;
    break;
   } else $154 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$81 >> 2] | 0) | 0;
  if (__ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($$0$i$i41, $14, $$1, $10, $13, HEAP32[$6 >> 2] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $135 = $154;
   break;
  }
  $94 = HEAP32[$79 >> 2] | 0;
  if (($94 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $94 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$94 >> 2] | 0) | 0;
  }
  $$0 = $$1;
  $152 = $127;
  $30 = $80;
 }
 $103 = HEAP8[$8 + 11 >> 0] | 0;
 if (($103 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $103 & 255) | 0) {
  $110 = HEAP32[$12 >> 2] | 0;
  if (($110 - $11 | 0) < 160) {
   $115 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $110 + 4;
   HEAP32[$110 >> 2] = $115;
  }
 }
 $118 = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $118;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $155 = 1; else {
  $122 = HEAP32[$80 + 12 >> 2] | 0;
  if (($122 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$127 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$122 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $155 = 1;
  } else $155 = 0;
 }
 do if (!$135) label = 48; else {
  $138 = HEAP32[$135 + 12 >> 2] | 0;
  if (($138 | 0) == (HEAP32[$135 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$135 >> 2] | 0) + 36 >> 2] & 127]($135) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$138 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($155) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($155) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i25 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i31 = 0, $$0$i$i41 = 0, $$1 = 0, $$2 = 0, $$pre = 0, $$sroa$0$0$copyload = 0, $10 = 0, $104 = 0, $11 = 0, $111 = 0, $116 = 0, $119 = 0, $12 = 0, $123 = 0, $128 = 0, $13 = 0, $136 = 0, $139 = 0, $14 = 0, $15 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $45 = 0, $48 = 0, $6 = 0, $61 = 0, $65 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $9 = 0, $95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $6 = sp + 224 | 0;
 $8 = sp + 212 | 0;
 $9 = sp + 200 | 0;
 $10 = sp + 196 | 0;
 $11 = sp;
 $12 = sp + 192 | 0;
 $13 = sp + 188 | 0;
 $14 = __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($3) | 0;
 $15 = __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $3, sp + 160 | 0) | 0;
 __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($8, $3, $6);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$9 + 4 >> 2] = 0;
 HEAP32[$9 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$9 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $18 = $9 + 11 | 0;
 $21 = $9 + 8 | 0;
 if ((HEAP8[$18 >> 0] | 0) < 0) $24 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $24 = 10;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $24, 0);
 $28 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
 HEAP32[$10 >> 2] = $28;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$13 >> 2] = 0;
 $29 = $9 + 4 | 0;
 $$pre = HEAP32[$1 >> 2] | 0;
 $$0 = $28;
 $153 = $$pre;
 $30 = $$pre;
 L8 : while (1) {
  if (!$30) {
   $128 = 0;
   $154 = 1;
   $80 = 0;
  } else {
   $33 = HEAP32[$30 + 12 >> 2] | 0;
   if (($33 | 0) == (HEAP32[$30 + 16 >> 2] | 0)) $$0$i$i$i$i25 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 36 >> 2] & 127]($30) | 0; else $$0$i$i$i$i25 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$33 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i25, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $128 = 0;
    $154 = 1;
    $80 = 0;
   } else {
    $128 = $153;
    $154 = 0;
    $80 = $30;
   }
  }
  $45 = HEAP32[$2 >> 2] | 0;
  do if (!$45) label = 19; else {
   $48 = HEAP32[$45 + 12 >> 2] | 0;
   if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i2$i$i31 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i2$i$i31 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$48 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i31, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 19;
    break;
   } else if ($154) {
    $155 = $45;
    break;
   } else {
    $$2 = $$0;
    $136 = $45;
    break L8;
   }
  } while (0);
  if ((label | 0) == 19) {
   label = 0;
   if ($154) {
    $$2 = $$0;
    $136 = 0;
    break;
   } else $155 = 0;
  }
  $61 = HEAP8[$18 >> 0] | 0;
  $65 = $61 << 24 >> 24 < 0 ? HEAP32[$29 >> 2] | 0 : $61 & 255;
  if ((HEAP32[$10 >> 2] | 0) == ($$0 + $65 | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $65 << 1, 0);
   if ((HEAP8[$18 >> 0] | 0) < 0) $73 = (HEAP32[$21 >> 2] & 2147483647) + -1 | 0; else $73 = 10;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($9, $73, 0);
   $77 = (HEAP8[$18 >> 0] | 0) < 0 ? HEAP32[$9 >> 2] | 0 : $9;
   HEAP32[$10 >> 2] = $77 + $65;
   $$1 = $77;
  } else $$1 = $$0;
  $79 = $80 + 12 | 0;
  $81 = HEAP32[$79 >> 2] | 0;
  $82 = $80 + 16 | 0;
  if (($81 | 0) == (HEAP32[$82 >> 2] | 0)) $$0$i$i41 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i41 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$81 >> 0] | 0) | 0;
  if (__ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($$0$i$i41 & 255, $14, $$1, $10, $13, HEAP8[$6 >> 0] | 0, $8, $11, $12, $15) | 0) {
   $$2 = $$1;
   $136 = $155;
   break;
  }
  $95 = HEAP32[$79 >> 2] | 0;
  if (($95 | 0) == (HEAP32[$82 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$80 >> 2] | 0) + 40 >> 2] & 127]($80) | 0; else {
   HEAP32[$79 >> 2] = $95 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$95 >> 0] | 0) | 0;
  }
  $$0 = $$1;
  $153 = $128;
  $30 = $80;
 }
 $104 = HEAP8[$8 + 11 >> 0] | 0;
 if (($104 << 24 >> 24 < 0 ? HEAP32[$8 + 4 >> 2] | 0 : $104 & 255) | 0) {
  $111 = HEAP32[$12 >> 2] | 0;
  if (($111 - $11 | 0) < 160) {
   $116 = HEAP32[$13 >> 2] | 0;
   HEAP32[$12 >> 2] = $111 + 4;
   HEAP32[$111 >> 2] = $116;
  }
 }
 $119 = __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($$2, HEAP32[$10 >> 2] | 0, $4, $14) | 0;
 HEAP32[$5 >> 2] = $119;
 __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($8, $11, HEAP32[$12 >> 2] | 0, $4);
 if (!$80) $156 = 1; else {
  $123 = HEAP32[$80 + 12 >> 2] | 0;
  if (($123 | 0) == (HEAP32[$80 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$128 >> 2] | 0) + 36 >> 2] & 127]($80) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$123 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $156 = 1;
  } else $156 = 0;
 }
 do if (!$136) label = 48; else {
  $139 = HEAP32[$136 + 12 >> 2] | 0;
  if (($139 | 0) == (HEAP32[$136 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$136 >> 2] | 0) + 36 >> 2] & 127]($136) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$139 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 48;
   break;
  } else if ($156) break; else {
   label = 50;
   break;
  }
 } while (0);
 if ((label | 0) == 48) if ($156) label = 50;
 if ((label | 0) == 50) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($9);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZN6vision5Image5allocENS_9ImageTypeEmmim($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$sink = 0, $101 = 0, $105 = 0, $14 = 0, $19 = 0, $23 = 0, $30 = 0, $35 = 0, $39 = 0, $46 = 0, $51 = 0, $55 = 0, $6 = 0, $62 = 0, $67 = 0, $7 = 0, $71 = 0, $77 = 0, $78 = 0, $81 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $87 = 0, $96 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp;
 if (!$2) {
  $14 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32737) | 0, 32770) | 0, 33528) | 0, 127) | 0, 33535) | 0, 32878) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14 + (HEAP32[(HEAP32[$14 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $19 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57884) | 0;
  $23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 63]($19, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($14, $23) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($14) | 0;
  _abort();
 }
 if (!$3) {
  $30 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32899) | 0, 32770) | 0, 33528) | 0, 128) | 0, 33535) | 0, 32933) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $30 + (HEAP32[(HEAP32[$30 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $35 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57884) | 0;
  $39 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$35 >> 2] | 0) + 28 >> 2] & 63]($35, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($30, $39) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($30) | 0;
  _abort();
 }
 if ($4 >>> 0 < $2 >>> 0) {
  $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32955) | 0, 32770) | 0, 33528) | 0, 129) | 0, 33535) | 0, 32992) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57884) | 0;
  $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 63]($51, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
  _abort();
 }
 if (!$5) {
  $62 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 33037) | 0, 32770) | 0, 33528) | 0, 130) | 0, 33535) | 0, 33073) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $62 + (HEAP32[(HEAP32[$62 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $67 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57884) | 0;
  $71 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$67 >> 2] | 0) + 28 >> 2] & 63]($67, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($62, $71) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($62) | 0;
  _abort();
 }
 if (($4 | 0) < 0) $$sink = Math_imul(Math_imul($5, $2) | 0, __ZN6vision5Image19calculate_unit_sizeENS_9ImageTypeE($1) | 0) | 0; else $$sink = $4;
 HEAP32[$0 + 12 >> 2] = $$sink;
 $77 = Math_imul($$sink, $3) | 0;
 $78 = $0 + 20 | 0;
 if ((HEAP32[$78 >> 2] | 0) != ($77 | 0)) {
  $81 = $0 + 24 | 0;
  $82 = __Znam($77) | 0;
  HEAP32[$7 >> 2] = 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
  __ZNSt3__210shared_ptrIhEC2IhEEPT_NS_9enable_ifIXsr14is_convertibleIS4_PhEE5valueENS1_5__natEE4typeE($6, $82, $$byval_copy);
  $83 = HEAP32[$6 >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[$81 >> 2];
  HEAP32[$81 >> 2] = $83;
  $85 = $6 + 4 | 0;
  $86 = $0 + 28 | 0;
  $87 = HEAP32[$85 >> 2] | 0;
  HEAP32[$85 >> 2] = HEAP32[$86 >> 2];
  HEAP32[$86 >> 2] = $87;
  __ZNSt3__210shared_ptrIhED2Ev($6);
  if (!(HEAP32[$81 >> 2] | 0)) {
   $96 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 33107) | 0, 32770) | 0, 33528) | 0, 149) | 0, 33535) | 0, 33142) | 0;
   __ZNKSt3__28ios_base6getlocEv($$byval_copy, $96 + (HEAP32[(HEAP32[$96 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $101 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57884) | 0;
   $105 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$101 >> 2] | 0) + 28 >> 2] & 63]($101, 10) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($96, $105) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($96) | 0;
   _abort();
  }
 }
 HEAP32[$0 >> 2] = $1;
 HEAP32[$0 + 4 >> 2] = $2;
 HEAP32[$0 + 8 >> 2] = $3;
 HEAP32[$0 + 16 >> 2] = $5;
 HEAP32[$78 >> 2] = $77;
 STACKTOP = sp;
 return;
}

function _arParamObserv2Ideal($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0342 = 0.0, $$0343 = 0.0, $$0345 = 0, $$0346 = 0.0, $$0348 = 0.0, $$0350 = 0.0, $$0351 = 0.0, $$0352 = 0, $$0353 = 0.0, $$0355 = 0.0, $$0357 = 0.0, $$0358 = 0.0, $$0359 = 0, $$0360 = 0.0, $$0361 = 0.0, $$0362 = 0.0, $$0363 = 0, $$0364 = 0.0, $$0365 = 0.0, $$0367 = 0.0, $$1 = 0.0, $$1344 = 0.0, $$1347 = 0.0, $$1349 = 0.0, $$1354 = 0.0, $$1356 = 0.0, $$1366 = 0.0, $$1368 = 0.0, $$sink = 0.0, $10 = 0.0, $105 = 0.0, $107 = 0.0, $108 = 0, $110 = 0.0, $113 = 0.0, $117 = 0.0, $12 = 0.0, $120 = 0.0, $121 = 0.0, $122 = 0.0, $123 = 0.0, $138 = 0.0, $14 = 0.0, $140 = 0.0, $142 = 0.0, $146 = 0.0, $149 = 0, $157 = 0.0, $158 = 0.0, $159 = 0, $16 = 0.0, $161 = 0.0, $164 = 0.0, $168 = 0.0, $171 = 0.0, $172 = 0.0, $173 = 0.0, $174 = 0.0, $18 = 0.0, $189 = 0.0, $191 = 0.0, $193 = 0.0, $197 = 0.0, $20 = 0.0, $200 = 0, $208 = 0.0, $209 = 0.0, $210 = 0, $212 = 0.0, $215 = 0.0, $218 = 0.0, $219 = 0.0, $22 = 0.0, $220 = 0.0, $229 = 0.0, $231 = 0.0, $233 = 0.0, $237 = 0.0, $24 = 0.0, $240 = 0, $26 = 0.0, $29 = 0.0, $30 = 0.0, $31 = 0.0, $32 = 0.0, $35 = 0.0, $40 = 0.0, $50 = 0.0, $56 = 0.0, $6 = 0.0, $67 = 0.0, $73 = 0.0, $8 = 0.0, $92 = 0.0, label = 0;
 switch ($5 | 0) {
 case 4:
  {
   $6 = +HEAPF64[$0 >> 3];
   $8 = +HEAPF64[$0 + 8 >> 3];
   $10 = +HEAPF64[$0 + 16 >> 3];
   $12 = +HEAPF64[$0 + 24 >> 3];
   $14 = +HEAPF64[$0 + 32 >> 3];
   $16 = +HEAPF64[$0 + 40 >> 3];
   $18 = +HEAPF64[$0 + 48 >> 3];
   $20 = +HEAPF64[$0 + 56 >> 3];
   $22 = +HEAPF64[$0 + 64 >> 3];
   $24 = ($1 - $18) / $14;
   $26 = ($2 - $20) / $16;
   $29 = $10 * 2.0;
   $30 = $12 * 6.0;
   $31 = $12 * 2.0;
   $32 = $10 * 6.0;
   $$0346 = $24;
   $$0348 = $26;
   $$0357 = $24 * $24;
   $$0358 = $26 * $26;
   $$0359 = 1;
   while (1) {
    if (!($$0358 != 0.0 | $$0357 != 0.0)) {
     $$1347 = 0.0;
     $$1349 = 0.0;
     break;
    }
    $35 = $$0358 + $$0357;
    $40 = $6 * $35 + 1.0 + $35 * ($8 * $35);
    $50 = $$0357 * 3.0;
    $56 = $$0358 * $50;
    $67 = $$0346 - ($12 * ($35 + $$0357 * 2.0) + ($$0348 * ($29 * $$0346) + $$0346 * $40) - $24) / ($30 * $$0346 + ($29 * $$0348 + ($6 * ($$0358 + $50) + 1.0 + $8 * ($$0358 * $$0358 + ($$0357 * ($$0357 * 5.0) + $56)))));
    $73 = $31 * $67;
    $92 = $$0348 - ($10 * ($$0358 * 2.0 + $35) + $$0348 * $40 + $$0348 * $73 - $26) / ($32 * $$0348 + ($6 * ($$0357 + $$0358 * 3.0) + 1.0 + $8 * ($$0358 * ($$0358 * 5.0) + ($$0357 * $$0357 + $56))) + $73);
    if (($$0359 | 0) == 4) {
     $$1347 = $67;
     $$1349 = $92;
     break;
    }
    $$0346 = $67;
    $$0348 = $92;
    $$0357 = $67 * $67;
    $$0358 = $92 * $92;
    $$0359 = $$0359 + 1 | 0;
   }
   HEAPF64[$3 >> 3] = $18 + $14 * $$1347 / $22;
   $$sink = $20 + $16 * $$1349 / $22;
   label = 22;
   break;
  }
 case 3:
  {
   $105 = +HEAPF64[$0 >> 3];
   $107 = ($1 - $105) / +HEAPF64[$0 + 24 >> 3];
   $108 = $0 + 8 | 0;
   $110 = $2 - +HEAPF64[$108 >> 3];
   $113 = +HEAPF64[$0 + 32 >> 3] / 1.0e8;
   $117 = +HEAPF64[$0 + 40 >> 3] / 1.0e8 / 1.0e5;
   $120 = $107 * $107 + $110 * $110;
   $121 = +Math_sqrt(+$120);
   $122 = $113 * 3.0;
   $123 = $117 * 5.0;
   $$0360 = $120;
   $$0363 = 1;
   $$0364 = $121;
   $$0365 = $110;
   $$0367 = $107;
   while (1) {
    if (!($$0364 != 0.0)) {
     $$1366 = 0.0;
     $$1368 = 0.0;
     break;
    }
    $138 = $$0364 - ($$0364 * (1.0 - $113 * $$0360 - $$0360 * ($117 * $$0360)) - $121) / (1.0 - $122 * $$0360 - $$0360 * ($123 * $$0360));
    $140 = $$0367 * $138 / $$0364;
    $142 = $$0365 * $138 / $$0364;
    if (($$0363 | 0) == 3) {
     $$1366 = $142;
     $$1368 = $140;
     break;
    }
    $146 = $140 * $140 + $142 * $142;
    $$0360 = $146;
    $$0363 = $$0363 + 1 | 0;
    $$0364 = +Math_sqrt(+$146);
    $$0365 = $142;
    $$0367 = $140;
   }
   $149 = $0 + 16 | 0;
   HEAPF64[$3 >> 3] = $105 + $$1368 / +HEAPF64[$149 >> 3];
   $$sink = $$1366 / +HEAPF64[$149 >> 3] + +HEAPF64[$108 >> 3];
   label = 22;
   break;
  }
 case 2:
  {
   $157 = +HEAPF64[$0 >> 3];
   $158 = $1 - $157;
   $159 = $0 + 8 | 0;
   $161 = $2 - +HEAPF64[$159 >> 3];
   $164 = +HEAPF64[$0 + 24 >> 3] / 1.0e8;
   $168 = +HEAPF64[$0 + 32 >> 3] / 1.0e8 / 1.0e5;
   $171 = $158 * $158 + $161 * $161;
   $172 = +Math_sqrt(+$171);
   $173 = $164 * 3.0;
   $174 = $168 * 5.0;
   $$0352 = 1;
   $$0353 = $161;
   $$0355 = $158;
   $$0361 = $172;
   $$0362 = $171;
   while (1) {
    if (!($$0361 != 0.0)) {
     $$1354 = 0.0;
     $$1356 = 0.0;
     break;
    }
    $189 = $$0361 - ($$0361 * (1.0 - $164 * $$0362 - $$0362 * ($168 * $$0362)) - $172) / (1.0 - $173 * $$0362 - $$0362 * ($174 * $$0362));
    $191 = $$0355 * $189 / $$0361;
    $193 = $$0353 * $189 / $$0361;
    if (($$0352 | 0) == 3) {
     $$1354 = $193;
     $$1356 = $191;
     break;
    }
    $197 = $191 * $191 + $193 * $193;
    $$0352 = $$0352 + 1 | 0;
    $$0353 = $193;
    $$0355 = $191;
    $$0361 = +Math_sqrt(+$197);
    $$0362 = $197;
   }
   $200 = $0 + 16 | 0;
   HEAPF64[$3 >> 3] = $157 + $$1356 / +HEAPF64[$200 >> 3];
   $$sink = $$1354 / +HEAPF64[$200 >> 3] + +HEAPF64[$159 >> 3];
   label = 22;
   break;
  }
 case 1:
  {
   $208 = +HEAPF64[$0 >> 3];
   $209 = $1 - $208;
   $210 = $0 + 8 | 0;
   $212 = $2 - +HEAPF64[$210 >> 3];
   $215 = +HEAPF64[$0 + 24 >> 3] / 1.0e8;
   $218 = $209 * $209 + $212 * $212;
   $219 = +Math_sqrt(+$218);
   $220 = $215 * 3.0;
   $$0 = 1;
   $$0342 = $212;
   $$0343 = $209;
   $$0350 = $219;
   $$0351 = $218;
   while (1) {
    if (!($$0350 != 0.0)) {
     $$1 = 0.0;
     $$1344 = 0.0;
     break;
    }
    $229 = $$0350 - ($$0350 * (1.0 - $215 * $$0351) - $219) / (1.0 - $220 * $$0351);
    $231 = $$0343 * $229 / $$0350;
    $233 = $$0342 * $229 / $$0350;
    if (($$0 | 0) == 3) {
     $$1 = $233;
     $$1344 = $231;
     break;
    }
    $237 = $231 * $231 + $233 * $233;
    $$0 = $$0 + 1 | 0;
    $$0342 = $233;
    $$0343 = $231;
    $$0350 = +Math_sqrt(+$237);
    $$0351 = $237;
   }
   $240 = $0 + 16 | 0;
   HEAPF64[$3 >> 3] = $208 + $$1344 / +HEAPF64[$240 >> 3];
   $$sink = $$1 / +HEAPF64[$240 >> 3] + +HEAPF64[$210 >> 3];
   label = 22;
   break;
  }
 default:
  $$0345 = -1;
 }
 if ((label | 0) == 22) {
  HEAPF64[$4 >> 3] = $$sink;
  $$0345 = 0;
 }
 return $$0345 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_function_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i$add$i = 0, $$0$i$i$add$i116 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i115 = 0, $$0105$ph = 0, $$0105$ph$ph = 0, $$0111 = 0, $$088 = 0, $$1112 = 0, $$1112$be = 0, $$1112$ph = 0, $$1112$ph$ph = 0, $$8 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $33 = 0, $4 = 0, $40 = 0, $41 = 0, $45 = 0, $49 = 0, $57 = 0, $58 = 0, $66 = 0, $71 = 0, $76 = 0, $77 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp + 12 | 0;
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) $$8 = $0; else if ((HEAP8[$0 >> 0] | 0) == 70) {
  $8 = $0 + 1 | 0;
  if (($8 | 0) == ($1 | 0)) $$8 = $0; else {
   if ((HEAP8[$8 >> 0] | 0) == 89) {
    $12 = $0 + 2 | 0;
    if (($12 | 0) == ($1 | 0)) {
     $$8 = $0;
     break;
    } else $$0111 = $12;
   } else $$0111 = $8;
   $14 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($$0111, $1, $2) | 0;
   if (($14 | 0) == ($$0111 | 0)) $$8 = $0; else {
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49631, __ZNSt3__211char_traitsIcE6lengthEPKc(49631) | 0);
    $17 = $2 + 4 | 0;
    $18 = $3 + 11 | 0;
    $19 = $3 + 4 | 0;
    $20 = $4 + 11 | 0;
    $21 = $4 + 4 | 0;
    $$0105$ph = 0;
    $$1112$ph = $14;
    L9 : while (1) {
     $$1112 = $$1112$ph;
     L11 : while (1) {
      if (($$1112 | 0) == ($1 | 0)) {
       label = 11;
       break L9;
      }
      switch (HEAP8[$$1112 >> 0] | 0) {
      case 69:
       {
        label = 16;
        break L9;
        break;
       }
      case 118:
       {
        $$1112$be = $$1112 + 1 | 0;
        break;
       }
      case 82:
       {
        $29 = $$1112 + 1 | 0;
        if (($29 | 0) == ($1 | 0)) label = 23; else if ((HEAP8[$29 >> 0] | 0) == 69) {
         $$0105$ph$ph = 1;
         $$1112$ph$ph = $29;
         break L11;
        } else label = 23;
        break;
       }
      case 79:
       {
        $33 = $$1112 + 1 | 0;
        if (($33 | 0) == ($1 | 0)) label = 23; else if ((HEAP8[$33 >> 0] | 0) == 69) {
         $$0105$ph$ph = 2;
         $$1112$ph$ph = $33;
         break L11;
        } else label = 23;
        break;
       }
      default:
       label = 23;
      }
      L20 : do if ((label | 0) == 23) {
       label = 0;
       $40 = ((HEAP32[$17 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
       $41 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($$1112, $1, $2) | 0;
       $45 = ((HEAP32[$17 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
       if (($41 | 0) == ($$1112 | 0) | ($41 | 0) == ($1 | 0)) break L9;
       $$088 = $40;
       while (1) {
        if ($$088 >>> 0 >= $45 >>> 0) break;
        $49 = HEAP8[$18 >> 0] | 0;
        if (($49 << 24 >> 24 < 0 ? HEAP32[$19 >> 2] | 0 : $49 & 255) >>> 0 > 1) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 49853) | 0;
        __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$2 >> 2] | 0) + ($$088 * 24 | 0) | 0);
        $57 = HEAP8[$20 >> 0] | 0;
        $58 = $57 << 24 >> 24 < 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($3, $58 ? HEAP32[$4 >> 2] | 0 : $4, $58 ? HEAP32[$21 >> 2] | 0 : $57 & 255) | 0;
        __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
        $$088 = $$088 + 1 | 0;
       }
       $$0 = $40;
       while (1) {
        if ($$0 >>> 0 >= $45 >>> 0) {
         $$1112$be = $41;
         break L20;
        }
        $66 = HEAP32[$17 >> 2] | 0;
        $$0$i$i$idx$i115 = 0;
        while (1) {
         if (($$0$i$i$idx$i115 | 0) == -1) break;
         $$0$i$i$add$i116 = $$0$i$i$idx$i115 + -1 | 0;
         __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($66 + ($$0$i$i$add$i116 * 24 | 0) | 0);
         $$0$i$i$idx$i115 = $$0$i$i$add$i116;
        }
        HEAP32[$17 >> 2] = $66 + -24;
        $$0 = $$0 + 1 | 0;
       }
      } while (0);
      $$1112 = $$1112$be;
     }
     $$0105$ph = $$0105$ph$ph;
     $$1112$ph = $$1112$ph$ph;
    }
    if ((label | 0) == 11) {
     $23 = HEAP32[$17 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($23 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$17 >> 2] = $23 + -24;
    } else if ((label | 0) == 16) {
     $27 = $$1112 + 1 | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 49629) | 0;
     switch ($$0105$ph & 3) {
     case 1:
      {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 51057) | 0;
       break;
      }
     case 2:
      {
       __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 51060) | 0;
       break;
      }
     default:
      {}
     }
     $71 = HEAP32[$17 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) != ($71 | 0)) {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($71 + -24 | 0, 49663) | 0;
      $76 = HEAP8[$18 >> 0] | 0;
      $77 = $76 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm((HEAP32[$17 >> 2] | 0) + -12 | 0, 0, $77 ? HEAP32[$3 >> 2] | 0 : $3, $77 ? HEAP32[$19 >> 2] | 0 : $76 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$8 = $27;
      break;
     }
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$8 = $0;
   }
  }
 } else $$8 = $0; while (0);
 STACKTOP = sp;
 return $$8 | 0;
}

function _QRM($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0213 = 0, $$0215 = 0, $$0216 = 0, $$0219 = 0, $$0220 = 0, $$0221 = 0, $$0222 = 0, $$0223 = 0.0, $$0224 = 0.0, $$0224$be = 0.0, $$0227 = 0.0, $$0227$be = 0.0, $$0232 = 0.0, $$1 = 0, $$1214 = 0, $$1217 = 0, $$1225 = 0.0, $$1228 = 0.0, $$1231 = 0.0, $$2218 = 0, $$pre = 0, $106 = 0.0, $111 = 0, $112 = 0, $113 = 0, $115 = 0, $116 = 0.0, $118 = 0, $119 = 0.0, $12 = 0, $128 = 0.0, $130 = 0, $131 = 0.0, $136 = 0.0, $138 = 0.0, $14 = 0, $144 = 0, $145 = 0, $146 = 0.0, $147 = 0, $150 = 0.0, $151 = 0, $154 = 0, $159 = 0.0, $2 = 0, $20 = 0, $25 = 0.0, $26 = 0, $27 = 0, $30 = 0.0, $38 = 0, $4 = 0, $40 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0.0, $49 = 0.0, $50 = 0.0, $51 = 0.0, $54 = 0.0, $65 = 0.0, $70 = 0.0, $74 = 0.0, $77 = 0.0, $81 = 0.0, $83 = 0, $84 = 0.0, $85 = 0, $86 = 0, $87 = 0.0, $88 = 0.0, $91 = 0, $95 = 0.0, $99 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 do if (($4 | 0) < 2 ? 1 : ($4 | 0) != (HEAP32[$0 + 8 >> 2] | 0)) $$0220 = -1; else if ((HEAP32[$1 + 4 >> 2] | 0) == ($4 | 0)) {
  $12 = _arVecAlloc($4) | 0;
  if (!$12) $$0220 = -1; else {
   $14 = $4 + -1 | 0;
   HEAP32[$2 + 4 >> 2] = $14;
   HEAP32[$2 >> 2] = (HEAP32[$12 >> 2] | 0) + 8;
   if ((_arVecTridiagonalize($0, $1, $2) | 0) < 0) {
    _arVecFree($12) | 0;
    $$0220 = -1;
    break;
   }
   $20 = HEAP32[$12 >> 2] | 0;
   HEAPF64[$20 >> 3] = 0.0;
   $$0 = $14;
   while (1) {
    if (($$0 | 0) <= 0) break;
    $$0215 = $$0;
    while (1) {
     if (($$0215 | 0) <= 0) break;
     $25 = +Math_abs(+(+HEAPF64[$20 + ($$0215 << 3) >> 3]));
     $26 = HEAP32[$1 >> 2] | 0;
     $27 = $$0215 + -1 | 0;
     $30 = +Math_abs(+(+HEAPF64[$26 + ($27 << 3) >> 3]));
     if ($25 > ($30 + +Math_abs(+(+HEAPF64[$26 + ($$0215 << 3) >> 3]))) * 1.0e-06) $$0215 = $27; else break;
    }
    $$pre = $$0 + -1 | 0;
    L15 : do if (($$0215 | 0) != ($$0 | 0)) {
     $38 = $20 + ($$0 << 3) | 0;
     $40 = $20 + ($$0215 + 1 << 3) | 0;
     $$0219 = 0;
     do {
      if ($$0219 >>> 0 > 99) break L15;
      $$0219 = $$0219 + 1 | 0;
      $43 = HEAP32[$1 >> 2] | 0;
      $44 = $43 + ($$pre << 3) | 0;
      $46 = $43 + ($$0 << 3) | 0;
      $47 = +HEAPF64[$46 >> 3];
      $49 = (+HEAPF64[$44 >> 3] - $47) * .5;
      $50 = +HEAPF64[$38 >> 3];
      $51 = $50 * $50;
      $54 = +Math_sqrt(+($51 + $49 * $49));
      $$0213 = $$0215;
      $$0224 = +HEAPF64[$40 >> 3];
      $$0227 = +HEAPF64[$43 + ($$0215 << 3) >> 3] - $47 + $51 / ($49 + ($49 < 0.0 ? -$54 : $54));
      while (1) {
       if (($$0213 | 0) >= ($$0 | 0)) break;
       $65 = +Math_abs(+$$0227);
       if (!($65 >= +Math_abs(+$$0224))) {
        $77 = -$$0227 / $$0224;
        $81 = 1.0 / +Math_sqrt(+($77 * $77 + 1.0));
        $$0223 = $77 * $81;
        $$1231 = $81;
       } else if ($65 > 1.0e-16) {
        $70 = -$$0224 / $$0227;
        $74 = 1.0 / +Math_sqrt(+($70 * $70 + 1.0));
        $$0223 = $74;
        $$1231 = $70 * $74;
       } else {
        $$0223 = 1.0;
        $$1231 = 0.0;
       }
       $83 = $43 + ($$0213 << 3) | 0;
       $84 = +HEAPF64[$83 >> 3];
       $85 = $$0213 + 1 | 0;
       $86 = $43 + ($85 << 3) | 0;
       $87 = +HEAPF64[$86 >> 3];
       $88 = $84 - $87;
       $91 = $20 + ($85 << 3) | 0;
       $95 = $$1231 * ($$1231 * $88 + $$0223 * 2.0 * +HEAPF64[$91 >> 3]);
       HEAPF64[$83 >> 3] = $84 - $95;
       HEAPF64[$86 >> 3] = $87 + $95;
       $99 = $20 + ($$0213 << 3) | 0;
       if (($$0213 | 0) > ($$0215 | 0)) HEAPF64[$99 >> 3] = $$0223 * +HEAPF64[$99 >> 3] - $$0224 * $$1231;
       $106 = +HEAPF64[$91 >> 3];
       HEAPF64[$91 >> 3] = $106 + $$1231 * ($$0223 * $88 - $$1231 * 2.0 * $106);
       $111 = Math_imul($$0213, $4) | 0;
       $112 = Math_imul($85, $4) | 0;
       $$0216 = 0;
       $$1225 = $$0224;
       $$1228 = $$0227;
       while (1) {
        if (($$0216 | 0) == ($4 | 0)) break;
        $113 = HEAP32[$0 >> 2] | 0;
        $115 = $113 + ($$0216 + $111 << 3) | 0;
        $116 = +HEAPF64[$115 >> 3];
        $118 = $113 + ($$0216 + $112 << 3) | 0;
        $119 = +HEAPF64[$118 >> 3];
        HEAPF64[$115 >> 3] = $$0223 * $116 - $$1231 * $119;
        HEAPF64[$118 >> 3] = $$1231 * $116 + $$0223 * $119;
        $$0216 = $$0216 + 1 | 0;
        $$1225 = $119;
        $$1228 = $116;
       }
       if (($$0213 | 0) < ($$pre | 0)) {
        $128 = +HEAPF64[$91 >> 3];
        $130 = $20 + ($$0213 + 2 << 3) | 0;
        $131 = +HEAPF64[$130 >> 3];
        HEAPF64[$130 >> 3] = $$0223 * $131;
        $$0224$be = -($$1231 * $131);
        $$0227$be = $128;
       } else {
        $$0224$be = $$1225;
        $$0227$be = $$1228;
       }
       $$0213 = $85;
       $$0224 = $$0224$be;
       $$0227 = $$0227$be;
      }
      $136 = +Math_abs(+(+HEAPF64[$38 >> 3]));
      $138 = +Math_abs(+(+HEAPF64[$44 >> 3]));
     } while ($136 > ($138 + +Math_abs(+(+HEAPF64[$46 >> 3]))) * 1.0e-06);
    } while (0);
    $$0 = $$pre;
   }
   $$1214 = 0;
   while (1) {
    if (($$1214 | 0) == ($14 | 0)) break;
    $144 = HEAP32[$1 >> 2] | 0;
    $145 = $144 + ($$1214 << 3) | 0;
    $146 = +HEAPF64[$145 >> 3];
    $147 = $$1214 + 1 | 0;
    $$0232 = $146;
    $$1 = $$1214;
    $$1217 = $147;
    while (1) {
     if (($$1217 | 0) >= ($4 | 0)) break;
     $150 = +HEAPF64[$144 + ($$1217 << 3) >> 3];
     $151 = $150 > $$0232;
     $$0232 = $151 ? $150 : $$0232;
     $$1 = $151 ? $$1217 : $$1;
     $$1217 = $$1217 + 1 | 0;
    }
    HEAPF64[$144 + ($$1 << 3) >> 3] = $146;
    HEAPF64[$145 >> 3] = $$0232;
    $154 = HEAP32[$0 >> 2] | 0;
    $$0221 = $154 + ((Math_imul($$1214, $4) | 0) << 3) | 0;
    $$0222 = $154 + ((Math_imul($$1, $4) | 0) << 3) | 0;
    $$2218 = 0;
    while (1) {
     if (($$2218 | 0) == ($4 | 0)) break;
     $159 = +HEAPF64[$$0222 >> 3];
     HEAPF64[$$0222 >> 3] = +HEAPF64[$$0221 >> 3];
     HEAPF64[$$0221 >> 3] = $159;
     $$0221 = $$0221 + 8 | 0;
     $$0222 = $$0222 + 8 | 0;
     $$2218 = $$2218 + 1 | 0;
    }
    $$1214 = $147;
   }
   _arVecFree($12) | 0;
   $$0220 = 0;
  }
 } else $$0220 = -1; while (0);
 STACKTOP = sp;
 return $$0220 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_conversion_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i107 = 0, $$0$i$i$i110 = 0, $$0$i$i$i113 = 0, $$0$i$i$idx$i = 0, $$10 = 0, $$1100 = 0, $$4103 = 0, $$5104 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $40 = 0, $42 = 0, $46 = 0, $47 = 0, $5 = 0, $54 = 0, $6 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $3 = sp + 88 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 48 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 L1 : do if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 99) if ((HEAP8[$0 + 1 >> 0] | 0) == 118) {
  $19 = $2 + 63 | 0;
  $20 = HEAP8[$19 >> 0] | 0;
  HEAP8[$19 >> 0] = 0;
  $21 = $0 + 2 | 0;
  $22 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($21, $1, $2) | 0;
  HEAP8[$19 >> 0] = $20;
  if (($22 | 0) == ($21 | 0) | ($22 | 0) == ($1 | 0)) $$10 = $0; else {
   if ((HEAP8[$22 >> 0] | 0) == 95) {
    $29 = $22 + 1 | 0;
    if (($29 | 0) == ($1 | 0)) {
     $$10 = $0;
     break;
    }
    $31 = HEAP8[$29 >> 0] | 0;
    L9 : do if ($31 << 24 >> 24 == 69) {
     $33 = $2 + 4 | 0;
     $34 = HEAP32[$33 >> 2] | 0;
     if ($34 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      HEAP32[$34 >> 2] = 0;
      HEAP32[$34 + 4 >> 2] = 0;
      HEAP32[$34 + 8 >> 2] = 0;
      HEAP32[$34 + 12 >> 2] = 0;
      HEAP32[$34 + 16 >> 2] = 0;
      HEAP32[$34 + 20 >> 2] = 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($34);
      HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 24;
      $$4103 = $29;
      break;
     } else {
      __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($2);
      $$4103 = $29;
      break;
     }
    } else {
     $$1100 = $29;
     $40 = $31;
     while (1) {
      if ($40 << 24 >> 24 == 69) {
       $$4103 = $$1100;
       break L9;
      }
      $42 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($$1100, $1, $2) | 0;
      if (($42 | 0) == ($$1100 | 0) | ($42 | 0) == ($1 | 0)) {
       $$10 = $0;
       break L1;
      }
      $$1100 = $42;
      $40 = HEAP8[$42 >> 0] | 0;
     }
    } while (0);
    $$5104 = $$4103 + 1 | 0;
   } else {
    $27 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($22, $1, $2) | 0;
    if (($27 | 0) == ($22 | 0)) {
     $$10 = $0;
     break;
    } else $$5104 = $27;
   }
   $46 = $2 + 4 | 0;
   $47 = HEAP32[$46 >> 2] | 0;
   if ((($47 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$10 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $47 + -24 | 0);
    $54 = HEAP32[$46 >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($54 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$46 >> 2] = $54 + -24;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $54 + -48 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($9, 0, 49631) | 0;
    HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
    HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
    HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 50795) | 0;
    HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
    $$0$i$i$i107 = 0;
    while (1) {
     if (($$0$i$i$i107 | 0) == 3) break;
     HEAP32[$8 + ($$0$i$i$i107 << 2) >> 2] = 0;
     $$0$i$i$i107 = $$0$i$i$i107 + 1 | 0;
    }
    $65 = HEAP8[$3 + 11 >> 0] | 0;
    $66 = $65 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($7, $66 ? HEAP32[$3 >> 2] | 0 : $3, $66 ? HEAP32[$3 + 4 >> 2] | 0 : $65 & 255) | 0;
    HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
    HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
    $$0$i$i$i110 = 0;
    while (1) {
     if (($$0$i$i$i110 | 0) == 3) break;
     HEAP32[$7 + ($$0$i$i$i110 << 2) >> 2] = 0;
     $$0$i$i$i110 = $$0$i$i$i110 + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 49629) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i113 = 0;
    while (1) {
     if (($$0$i$i$i113 | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i113 << 2) >> 2] = 0;
     $$0$i$i$i113 = $$0$i$i$i113 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$46 >> 2] | 0) + -24 | 0, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$10 = $$5104;
   }
  }
 } else $$10 = $0; else $$10 = $0; else $$10 = $0; while (0);
 STACKTOP = sp;
 return $$10 | 0;
}

function __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i110 = 0, $$0101 = 0, $$0102 = 0, $$0104 = 0, $$0106 = 0, $$07$i$i = 0, $$07$i$i109 = 0, $$1 = 0, $$1103 = 0, $$1105 = 0, $$1107 = 0, $$2 = 0, $$2108 = 0, $$3 = 0, $$pre$phiZ2D = 0, $101 = 0, $105 = 0, $107 = 0, $119 = 0, $120 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $137 = 0, $138 = 0, $139 = 0, $144 = 0, $148 = 0, $154 = 0, $155 = 0, $18 = 0, $19 = 0, $21 = 0, $27 = 0, $32 = 0, $33 = 0, $35 = 0, $40 = 0, $41 = 0, $45 = 0, $52 = 0, $57 = 0, $58 = 0, $60 = 0, $7 = 0, $73 = 0, $75 = 0, $77 = 0, $8 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57916) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57924) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 63]($7, $9);
 HEAP32[$5 >> 2] = $3;
 $13 = HEAP8[$0 >> 0] | 0;
 switch ($13 << 24 >> 24) {
 case 43:
 case 45:
  {
   $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, $13) | 0;
   $19 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $19 + 4;
   HEAP32[$19 >> 2] = $18;
   $$0104 = $0 + 1 | 0;
   break;
  }
 default:
  $$0104 = $0;
 }
 $21 = $2;
 L4 : do if (($21 - $$0104 | 0) > 1) if ((HEAP8[$$0104 >> 0] | 0) == 48) {
  $27 = $$0104 + 1 | 0;
  switch (HEAP8[$27 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    label = 4;
    break L4;
   }
  }
  $32 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, 48) | 0;
  $33 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $33 + 4;
  HEAP32[$33 >> 2] = $32;
  $35 = $$0104 + 2 | 0;
  $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$27 >> 0] | 0) | 0;
  $41 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $41 + 4;
  HEAP32[$41 >> 2] = $40;
  $$0106 = $35;
  while (1) {
   if ($$0106 >>> 0 >= $2 >>> 0) {
    $$1105 = $35;
    $$2108 = $$0106;
    break L4;
   }
   $45 = HEAP8[$$0106 >> 0] | 0;
   if (!(_isxdigit_l($45, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1105 = $35;
    $$2108 = $$0106;
    break L4;
   }
   $$0106 = $$0106 + 1 | 0;
  }
 } else label = 4; else label = 4; while (0);
 L12 : do if ((label | 0) == 4) {
  $$1107 = $$0104;
  while (1) {
   if ($$1107 >>> 0 >= $2 >>> 0) {
    $$1105 = $$0104;
    $$2108 = $$1107;
    break L12;
   }
   $52 = HEAP8[$$1107 >> 0] | 0;
   if (!(_isdigit_l($52, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1105 = $$0104;
    $$2108 = $$1107;
    break L12;
   }
   $$1107 = $$1107 + 1 | 0;
  }
 } while (0);
 $57 = $7 + 11 | 0;
 $58 = HEAP8[$57 >> 0] | 0;
 $60 = $7 + 4 | 0;
 L19 : do if (!(($58 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $58 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 15]($8, $$1105, $$2108, HEAP32[$5 >> 2] | 0) | 0;
  $73 = (HEAP32[$5 >> 2] | 0) + ($$2108 - $$1105 << 2) | 0;
  HEAP32[$5 >> 2] = $73;
  $$pre$phiZ2D = $8;
  $154 = $73;
 } else {
  L22 : do if (($$1105 | 0) != ($$2108 | 0)) {
   $$0$i$i = $$2108;
   $$07$i$i = $$1105;
   while (1) {
    $75 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $75 >>> 0) break L22;
    $77 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$75 >> 0] | 0;
    HEAP8[$75 >> 0] = $77;
    $$0$i$i = $75;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $83 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$1105;
  $$0101 = 0;
  $$0102 = 0;
  while (1) {
   if ($$0 >>> 0 >= $$2108 >>> 0) break;
   $101 = HEAP8[((HEAP8[$57 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$0101 >> 0] | 0;
   if ($101 << 24 >> 24 > 0 & ($$0102 | 0) == ($101 << 24 >> 24 | 0)) {
    $105 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $105 + 4;
    HEAP32[$105 >> 2] = $83;
    $107 = HEAP8[$57 >> 0] | 0;
    $$1 = $$0101 + ($$0101 >>> 0 < (($107 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $107 & 255) + -1 | 0) >>> 0 & 1) | 0;
    $$1103 = 0;
   } else {
    $$1 = $$0101;
    $$1103 = $$0102;
   }
   $119 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $120 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $120 + 4;
   HEAP32[$120 >> 2] = $119;
   $$0 = $$0 + 1 | 0;
   $$0101 = $$1;
   $$0102 = $$1103 + 1 | 0;
  }
  $88 = $3 + ($$1105 - $0 << 2) | 0;
  $89 = HEAP32[$5 >> 2] | 0;
  if (($88 | 0) == ($89 | 0)) {
   $$pre$phiZ2D = $8;
   $154 = $88;
  } else {
   $$0$i$i110 = $89;
   $$07$i$i109 = $88;
   while (1) {
    $91 = $$0$i$i110 + -4 | 0;
    if ($$07$i$i109 >>> 0 >= $91 >>> 0) {
     $$pre$phiZ2D = $8;
     $154 = $89;
     break L19;
    }
    $93 = HEAP32[$$07$i$i109 >> 2] | 0;
    HEAP32[$$07$i$i109 >> 2] = HEAP32[$91 >> 2];
    HEAP32[$91 >> 2] = $93;
    $$0$i$i110 = $91;
    $$07$i$i109 = $$07$i$i109 + 4 | 0;
   }
  }
 } while (0);
 $$2 = $$2108;
 $155 = $154;
 while (1) {
  if ($$2 >>> 0 >= $2 >>> 0) {
   $$3 = $$2;
   $144 = $155;
   break;
  }
  $125 = HEAP8[$$2 >> 0] | 0;
  if ($125 << 24 >> 24 == 46) {
   label = 32;
   break;
  }
  $137 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 44 >> 2] & 63]($8, $125) | 0;
  $138 = HEAP32[$5 >> 2] | 0;
  $139 = $138 + 4 | 0;
  HEAP32[$5 >> 2] = $139;
  HEAP32[$138 >> 2] = $137;
  $$2 = $$2 + 1 | 0;
  $155 = $139;
 }
 if ((label | 0) == 32) {
  $130 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 12 >> 2] & 127]($9) | 0;
  $131 = HEAP32[$5 >> 2] | 0;
  $132 = $131 + 4 | 0;
  HEAP32[$5 >> 2] = $132;
  HEAP32[$131 >> 2] = $130;
  $$3 = $$2 + 1 | 0;
  $144 = $132;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 15]($8, $$3, $2, $144) | 0;
 $148 = (HEAP32[$5 >> 2] | 0) + ($21 - $$3 << 2) | 0;
 HEAP32[$5 >> 2] = $148;
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $148 : $3 + ($1 - $0 << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function _try_realloc_chunk($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1271 = 0, $$1271$be = 0, $$1271$ph = 0, $$1274 = 0, $$1274$be = 0, $$1274$ph = 0, $$2 = 0, $$3 = 0, $$pre$phiZ2D = 0, $101 = 0, $103 = 0, $106 = 0, $108 = 0, $11 = 0, $111 = 0, $114 = 0, $115 = 0, $116 = 0, $118 = 0, $12 = 0, $120 = 0, $121 = 0, $123 = 0, $124 = 0, $129 = 0, $130 = 0, $139 = 0, $144 = 0, $147 = 0, $148 = 0, $154 = 0, $165 = 0, $168 = 0, $175 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $49 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $6 = 0, $60 = 0, $67 = 0, $73 = 0, $75 = 0, $76 = 0, $79 = 0, $8 = 0, $81 = 0, $83 = 0, $96 = 0, $storemerge = 0, $storemerge3 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $3 & -8;
 $5 = $0 + $4 | 0;
 $6 = HEAP32[14084] | 0;
 $8 = $3 & 3;
 if (!(($8 | 0) != 1 & $6 >>> 0 <= $0 >>> 0 & $5 >>> 0 > $0 >>> 0)) _abort();
 $11 = $5 + 4 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 if (!($12 & 1)) _abort();
 if (!$8) {
  if ($1 >>> 0 < 256) {
   $$2 = 0;
   return $$2 | 0;
  }
  if ($4 >>> 0 >= ($1 + 4 | 0) >>> 0) if (($4 - $1 | 0) >>> 0 <= HEAP32[14200] << 1 >>> 0) {
   $$2 = $0;
   return $$2 | 0;
  }
  $$2 = 0;
  return $$2 | 0;
 }
 if ($4 >>> 0 >= $1 >>> 0) {
  $24 = $4 - $1 | 0;
  if ($24 >>> 0 <= 15) {
   $$2 = $0;
   return $$2 | 0;
  }
  $26 = $0 + $1 | 0;
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$26 + 4 >> 2] = $24 | 3;
  HEAP32[$11 >> 2] = HEAP32[$11 >> 2] | 1;
  _dispose_chunk($26, $24);
  $$2 = $0;
  return $$2 | 0;
 }
 if ((HEAP32[14086] | 0) == ($5 | 0)) {
  $37 = (HEAP32[14083] | 0) + $4 | 0;
  $39 = $37 - $1 | 0;
  $40 = $0 + $1 | 0;
  if ($37 >>> 0 <= $1 >>> 0) {
   $$2 = 0;
   return $$2 | 0;
  }
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$40 + 4 >> 2] = $39 | 1;
  HEAP32[14086] = $40;
  HEAP32[14083] = $39;
  $$2 = $0;
  return $$2 | 0;
 }
 if ((HEAP32[14085] | 0) == ($5 | 0)) {
  $49 = (HEAP32[14082] | 0) + $4 | 0;
  if ($49 >>> 0 < $1 >>> 0) {
   $$2 = 0;
   return $$2 | 0;
  }
  $51 = $49 - $1 | 0;
  if ($51 >>> 0 > 15) {
   $53 = $0 + $1 | 0;
   $54 = $0 + $49 | 0;
   HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
   HEAP32[$53 + 4 >> 2] = $51 | 1;
   HEAP32[$54 >> 2] = $51;
   $60 = $54 + 4 | 0;
   HEAP32[$60 >> 2] = HEAP32[$60 >> 2] & -2;
   $storemerge = $53;
   $storemerge3 = $51;
  } else {
   HEAP32[$2 >> 2] = $3 & 1 | $49 | 2;
   $67 = $0 + $49 + 4 | 0;
   HEAP32[$67 >> 2] = HEAP32[$67 >> 2] | 1;
   $storemerge = 0;
   $storemerge3 = 0;
  }
  HEAP32[14082] = $storemerge3;
  HEAP32[14085] = $storemerge;
  $$2 = $0;
  return $$2 | 0;
 }
 if ($12 & 2 | 0) {
  $$2 = 0;
  return $$2 | 0;
 }
 $73 = ($12 & -8) + $4 | 0;
 if ($73 >>> 0 < $1 >>> 0) {
  $$2 = 0;
  return $$2 | 0;
 }
 $75 = $73 - $1 | 0;
 $76 = $12 >>> 3;
 L49 : do if ($12 >>> 0 < 256) {
  $79 = HEAP32[$5 + 8 >> 2] | 0;
  $81 = HEAP32[$5 + 12 >> 2] | 0;
  $83 = 56360 + ($76 << 1 << 2) | 0;
  if (($79 | 0) != ($83 | 0)) {
   if ($6 >>> 0 > $79 >>> 0) _abort();
   if ((HEAP32[$79 + 12 >> 2] | 0) != ($5 | 0)) _abort();
  }
  if (($81 | 0) == ($79 | 0)) {
   HEAP32[14080] = HEAP32[14080] & ~(1 << $76);
   break;
  }
  if (($81 | 0) == ($83 | 0)) $$pre$phiZ2D = $81 + 8 | 0; else {
   if ($6 >>> 0 > $81 >>> 0) _abort();
   $96 = $81 + 8 | 0;
   if ((HEAP32[$96 >> 2] | 0) == ($5 | 0)) $$pre$phiZ2D = $96; else _abort();
  }
  HEAP32[$79 + 12 >> 2] = $81;
  HEAP32[$$pre$phiZ2D >> 2] = $79;
 } else {
  $101 = HEAP32[$5 + 24 >> 2] | 0;
  $103 = HEAP32[$5 + 12 >> 2] | 0;
  do if (($103 | 0) == ($5 | 0)) {
   $114 = $5 + 16 | 0;
   $115 = $114 + 4 | 0;
   $116 = HEAP32[$115 >> 2] | 0;
   if (!$116) {
    $118 = HEAP32[$114 >> 2] | 0;
    if (!$118) {
     $$3 = 0;
     break;
    } else {
     $$1271$ph = $118;
     $$1274$ph = $114;
    }
   } else {
    $$1271$ph = $116;
    $$1274$ph = $115;
   }
   $$1271 = $$1271$ph;
   $$1274 = $$1274$ph;
   while (1) {
    $120 = $$1271 + 20 | 0;
    $121 = HEAP32[$120 >> 2] | 0;
    if (!$121) {
     $123 = $$1271 + 16 | 0;
     $124 = HEAP32[$123 >> 2] | 0;
     if (!$124) break; else {
      $$1271$be = $124;
      $$1274$be = $123;
     }
    } else {
     $$1271$be = $121;
     $$1274$be = $120;
    }
    $$1271 = $$1271$be;
    $$1274 = $$1274$be;
   }
   if ($6 >>> 0 > $$1274 >>> 0) _abort(); else {
    HEAP32[$$1274 >> 2] = 0;
    $$3 = $$1271;
    break;
   }
  } else {
   $106 = HEAP32[$5 + 8 >> 2] | 0;
   if ($6 >>> 0 > $106 >>> 0) _abort();
   $108 = $106 + 12 | 0;
   if ((HEAP32[$108 >> 2] | 0) != ($5 | 0)) _abort();
   $111 = $103 + 8 | 0;
   if ((HEAP32[$111 >> 2] | 0) == ($5 | 0)) {
    HEAP32[$108 >> 2] = $103;
    HEAP32[$111 >> 2] = $106;
    $$3 = $103;
    break;
   } else _abort();
  } while (0);
  if ($101 | 0) {
   $129 = HEAP32[$5 + 28 >> 2] | 0;
   $130 = 56624 + ($129 << 2) | 0;
   do if ((HEAP32[$130 >> 2] | 0) == ($5 | 0)) {
    HEAP32[$130 >> 2] = $$3;
    if (!$$3) {
     HEAP32[14081] = HEAP32[14081] & ~(1 << $129);
     break L49;
    }
   } else if ((HEAP32[14084] | 0) >>> 0 > $101 >>> 0) _abort(); else {
    $139 = $101 + 16 | 0;
    HEAP32[((HEAP32[$139 >> 2] | 0) == ($5 | 0) ? $139 : $101 + 20 | 0) >> 2] = $$3;
    if (!$$3) break L49; else break;
   } while (0);
   $144 = HEAP32[14084] | 0;
   if ($144 >>> 0 > $$3 >>> 0) _abort();
   HEAP32[$$3 + 24 >> 2] = $101;
   $147 = $5 + 16 | 0;
   $148 = HEAP32[$147 >> 2] | 0;
   do if ($148 | 0) if ($144 >>> 0 > $148 >>> 0) _abort(); else {
    HEAP32[$$3 + 16 >> 2] = $148;
    HEAP32[$148 + 24 >> 2] = $$3;
    break;
   } while (0);
   $154 = HEAP32[$147 + 4 >> 2] | 0;
   if ($154 | 0) if ((HEAP32[14084] | 0) >>> 0 > $154 >>> 0) _abort(); else {
    HEAP32[$$3 + 20 >> 2] = $154;
    HEAP32[$154 + 24 >> 2] = $$3;
    break;
   }
  }
 } while (0);
 if ($75 >>> 0 < 16) {
  HEAP32[$2 >> 2] = $3 & 1 | $73 | 2;
  $165 = $0 + $73 + 4 | 0;
  HEAP32[$165 >> 2] = HEAP32[$165 >> 2] | 1;
  $$2 = $0;
  return $$2 | 0;
 } else {
  $168 = $0 + $1 | 0;
  HEAP32[$2 >> 2] = $3 & 1 | $1 | 2;
  HEAP32[$168 + 4 >> 2] = $75 | 3;
  $175 = $0 + $73 + 4 | 0;
  HEAP32[$175 >> 2] = HEAP32[$175 >> 2] | 1;
  _dispose_chunk($168, $75);
  $$2 = $0;
  return $$2 | 0;
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$idx$i = 0, $$067 = 0, $$1 = 0, $101 = 0, $103 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $21 = 0, $23 = 0, $24 = 0, $29 = 0, $3 = 0, $30 = 0, $34 = 0, $36 = 0, $4 = 0, $43 = 0, $44 = 0, $46 = 0, $50 = 0, $53 = 0, $54 = 0, $59 = 0, $60 = 0, $64 = 0, $66 = 0, $71 = 0, $8 = 0, $80 = 0, $81 = 0, $84 = 0, $85 = 0, $89 = 0, $90 = 0, $91 = 0, $96 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp + 8 | 0;
 $4 = sp;
 L1 : do if (($0 | 0) == ($1 | 0)) $$1 = $0; else switch (HEAP8[$0 >> 0] | 0) {
 case 84:
  {
   $8 = $2 + 4 | 0;
   $12 = ((HEAP32[$8 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   $13 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   $14 = HEAP32[$8 >> 2] | 0;
   $17 = ($14 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   $21 = $14;
   if (($13 | 0) != ($0 | 0) & ($17 | 0) == ($12 + 1 | 0)) {
    HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $21 + -24 | 0, $4);
    $23 = $2 + 20 | 0;
    $24 = HEAP32[$23 >> 2] | 0;
    if ($24 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
     HEAP32[$24 >> 2] = 0;
     $29 = $24 + 4 | 0;
     HEAP32[$29 >> 2] = 0;
     $30 = $24 + 8 | 0;
     HEAP32[$30 >> 2] = 0;
     HEAP32[$24 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
     HEAP32[$24 >> 2] = HEAP32[$3 >> 2];
     $34 = $3 + 4 | 0;
     HEAP32[$29 >> 2] = HEAP32[$34 >> 2];
     $36 = $3 + 8 | 0;
     HEAP32[$30 >> 2] = HEAP32[$36 >> 2];
     HEAP32[$36 >> 2] = 0;
     HEAP32[$34 >> 2] = 0;
     HEAP32[$3 >> 2] = 0;
     HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
    $$1 = $13;
    break L1;
   }
   $$067 = $17;
   $43 = $21;
   while (1) {
    if (($$067 | 0) == ($12 | 0)) {
     $$1 = $0;
     break L1;
    }
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($43 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    $44 = $43 + -24 | 0;
    HEAP32[$8 >> 2] = $44;
    $$067 = $$067 + -1 | 0;
    $43 = $44;
   }
   break;
  }
 case 68:
  {
   $46 = __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   if (($46 | 0) == ($0 | 0)) {
    $$1 = $0;
    break L1;
   }
   $50 = HEAP32[$2 + 4 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($50 | 0)) {
    $$1 = $0;
    break L1;
   }
   HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
   __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $50 + -24 | 0, $4);
   $53 = $2 + 20 | 0;
   $54 = HEAP32[$53 >> 2] | 0;
   if ($54 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
    HEAP32[$54 >> 2] = 0;
    $59 = $54 + 4 | 0;
    HEAP32[$59 >> 2] = 0;
    $60 = $54 + 8 | 0;
    HEAP32[$60 >> 2] = 0;
    HEAP32[$54 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
    HEAP32[$54 >> 2] = HEAP32[$3 >> 2];
    $64 = $3 + 4 | 0;
    HEAP32[$59 >> 2] = HEAP32[$64 >> 2];
    $66 = $3 + 8 | 0;
    HEAP32[$60 >> 2] = HEAP32[$66 >> 2];
    HEAP32[$66 >> 2] = 0;
    HEAP32[$64 >> 2] = 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$53 >> 2] = (HEAP32[$53 >> 2] | 0) + 16;
   } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
   $$1 = $46;
   break L1;
   break;
  }
 case 83:
  {
   $71 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   if (($71 | 0) != ($0 | 0)) {
    $$1 = $71;
    break L1;
   }
   if (($1 - $0 | 0) <= 2) {
    $$1 = $0;
    break L1;
   }
   if ((HEAP8[$0 + 1 >> 0] | 0) != 116) {
    $$1 = $0;
    break L1;
   }
   $80 = $0 + 2 | 0;
   $81 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($80, $1, $2) | 0;
   if (($81 | 0) == ($80 | 0)) {
    $$1 = $0;
    break L1;
   }
   $84 = $2 + 4 | 0;
   $85 = HEAP32[$84 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($85 | 0)) {
    $$1 = $0;
    break L1;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($85 + -24 | 0, 0, 49925) | 0;
   $89 = (HEAP32[$84 >> 2] | 0) + -24 | 0;
   HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
   __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $89, $4);
   $90 = $2 + 20 | 0;
   $91 = HEAP32[$90 >> 2] | 0;
   if ($91 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
    HEAP32[$91 >> 2] = 0;
    $96 = $91 + 4 | 0;
    HEAP32[$96 >> 2] = 0;
    $97 = $91 + 8 | 0;
    HEAP32[$97 >> 2] = 0;
    HEAP32[$91 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
    HEAP32[$91 >> 2] = HEAP32[$3 >> 2];
    $101 = $3 + 4 | 0;
    HEAP32[$96 >> 2] = HEAP32[$101 >> 2];
    $103 = $3 + 8 | 0;
    HEAP32[$97 >> 2] = HEAP32[$103 >> 2];
    HEAP32[$103 >> 2] = 0;
    HEAP32[$101 >> 2] = 0;
    HEAP32[$3 >> 2] = 0;
    HEAP32[$90 >> 2] = (HEAP32[$90 >> 2] | 0) + 16;
   } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
   $$1 = $81;
   break L1;
   break;
  }
 default:
  {
   $$1 = $0;
   break L1;
  }
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function _jpeg_idct_ifast($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0268 = 0, $$0270 = 0, $$0272 = 0, $$1 = 0, $$2 = 0, $$sink = 0, $$sink281 = 0, $100 = 0, $106 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $132 = 0, $135 = 0, $137 = 0, $139 = 0, $14 = 0, $161 = 0, $163 = 0, $165 = 0, $166 = 0, $167 = 0, $169 = 0, $170 = 0, $171 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $181 = 0, $183 = 0, $184 = 0, $185 = 0, $187 = 0, $188 = 0, $189 = 0, $190 = 0, $196 = 0, $203 = 0, $204 = 0, $205 = 0, $35 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $56 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $77 = 0, $83 = 0, $89 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $5 = sp;
 $7 = HEAP32[$0 + 324 >> 2] | 0;
 $$0 = 8;
 $$0268 = $5;
 $$0270 = HEAP32[$1 + 80 >> 2] | 0;
 $$0272 = $2;
 while (1) {
  if (!$$0) break;
  $12 = HEAP16[$$0272 + 16 >> 1] | 0;
  $14 = HEAP16[$$0272 + 32 >> 1] | 0;
  if (!(($12 | $14) << 16 >> 16)) if (!(HEAP16[$$0272 + 48 >> 1] | 0)) if (!(HEAP16[$$0272 + 64 >> 1] | 0)) if (!(HEAP16[$$0272 + 80 >> 1] | 0)) if (!(HEAP16[$$0272 + 96 >> 1] | 0)) if (!(HEAP16[$$0272 + 112 >> 1] | 0)) {
   $35 = Math_imul(HEAP32[$$0270 >> 2] | 0, HEAP16[$$0272 >> 1] | 0) | 0;
   HEAP32[$$0268 >> 2] = $35;
   HEAP32[$$0268 + 32 >> 2] = $35;
   HEAP32[$$0268 + 64 >> 2] = $35;
   HEAP32[$$0268 + 96 >> 2] = $35;
   HEAP32[$$0268 + 128 >> 2] = $35;
   HEAP32[$$0268 + 160 >> 2] = $35;
   HEAP32[$$0268 + 192 >> 2] = $35;
   $$sink = $35;
   $$sink281 = 56;
  } else {
   $47 = 0;
   label = 10;
  } else {
   $47 = 0;
   label = 10;
  } else {
   $47 = 0;
   label = 10;
  } else {
   $47 = 0;
   label = 10;
  } else {
   $47 = 0;
   label = 10;
  } else {
   $47 = $14;
   label = 10;
  }
  if ((label | 0) == 10) {
   label = 0;
   $45 = Math_imul(HEAP32[$$0270 >> 2] | 0, HEAP16[$$0272 >> 1] | 0) | 0;
   $50 = Math_imul(HEAP32[$$0270 + 64 >> 2] | 0, $47 << 16 >> 16) | 0;
   $56 = Math_imul(HEAP32[$$0270 + 128 >> 2] | 0, HEAP16[$$0272 + 64 >> 1] | 0) | 0;
   $62 = Math_imul(HEAP32[$$0270 + 192 >> 2] | 0, HEAP16[$$0272 + 96 >> 1] | 0) | 0;
   $63 = $56 + $45 | 0;
   $64 = $45 - $56 | 0;
   $65 = $62 + $50 | 0;
   $69 = (($50 - $62 | 0) * 362 >> 8) - $65 | 0;
   $70 = $65 + $63 | 0;
   $71 = $63 - $65 | 0;
   $72 = $69 + $64 | 0;
   $73 = $64 - $69 | 0;
   $77 = Math_imul(HEAP32[$$0270 + 32 >> 2] | 0, $12 << 16 >> 16) | 0;
   $83 = Math_imul(HEAP32[$$0270 + 96 >> 2] | 0, HEAP16[$$0272 + 48 >> 1] | 0) | 0;
   $89 = Math_imul(HEAP32[$$0270 + 160 >> 2] | 0, HEAP16[$$0272 + 80 >> 1] | 0) | 0;
   $95 = Math_imul(HEAP32[$$0270 + 224 >> 2] | 0, HEAP16[$$0272 + 112 >> 1] | 0) | 0;
   $96 = $89 + $83 | 0;
   $97 = $89 - $83 | 0;
   $98 = $95 + $77 | 0;
   $99 = $77 - $95 | 0;
   $100 = $98 + $96 | 0;
   $106 = ($99 + $97 | 0) * 473 >> 8;
   $113 = ((Math_imul($97, -669) | 0) >> 8) - $100 + $106 | 0;
   $114 = (($98 - $96 | 0) * 362 >> 8) - $113 | 0;
   $115 = $114 + (($99 * 277 >> 8) - $106) | 0;
   HEAP32[$$0268 >> 2] = $100 + $70;
   HEAP32[$$0268 + 224 >> 2] = $70 - $100;
   HEAP32[$$0268 + 32 >> 2] = $113 + $72;
   HEAP32[$$0268 + 192 >> 2] = $72 - $113;
   HEAP32[$$0268 + 64 >> 2] = $114 + $73;
   HEAP32[$$0268 + 160 >> 2] = $73 - $114;
   HEAP32[$$0268 + 128 >> 2] = $115 + $71;
   $$sink = $71 - $115 | 0;
   $$sink281 = 24;
  }
  HEAP32[$$0268 + ($$sink281 << 2) >> 2] = $$sink;
  $$0 = $$0 + -1 | 0;
  $$0268 = $$0268 + 4 | 0;
  $$0270 = $$0270 + 4 | 0;
  $$0272 = $$0272 + 2 | 0;
 }
 $132 = $7 + 128 | 0;
 $$1 = 0;
 $$2 = $5;
 while (1) {
  if (($$1 | 0) == 8) break;
  $135 = (HEAP32[$3 + ($$1 << 2) >> 2] | 0) + $4 | 0;
  $137 = HEAP32[$$2 + 4 >> 2] | 0;
  $139 = HEAP32[$$2 + 8 >> 2] | 0;
  if (!($137 | $139)) if (!(HEAP32[$$2 + 12 >> 2] | 0)) if (!(HEAP32[$$2 + 16 >> 2] | 0)) if (!(HEAP32[$$2 + 20 >> 2] | 0)) if (!(HEAP32[$$2 + 24 >> 2] | 0)) if (!(HEAP32[$$2 + 28 >> 2] | 0)) {
   $161 = HEAP8[$132 + ((HEAP32[$$2 >> 2] | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 >> 0] = $161;
   _memset($135 + 1 | 0, $161 | 0, 7) | 0;
  } else {
   $171 = 0;
   label = 21;
  } else {
   $171 = 0;
   label = 21;
  } else {
   $171 = 0;
   label = 21;
  } else {
   $171 = 0;
   label = 21;
  } else {
   $171 = 0;
   label = 21;
  } else {
   $171 = $139;
   label = 21;
  }
  if ((label | 0) == 21) {
   label = 0;
   $163 = HEAP32[$$2 >> 2] | 0;
   $165 = HEAP32[$$2 + 16 >> 2] | 0;
   $166 = $165 + $163 | 0;
   $167 = $163 - $165 | 0;
   $169 = HEAP32[$$2 + 24 >> 2] | 0;
   $170 = $169 + $171 | 0;
   $175 = (($171 - $169 | 0) * 362 >> 8) - $170 | 0;
   $176 = $170 + $166 | 0;
   $177 = $166 - $170 | 0;
   $178 = $175 + $167 | 0;
   $179 = $167 - $175 | 0;
   $181 = HEAP32[$$2 + 20 >> 2] | 0;
   $183 = HEAP32[$$2 + 12 >> 2] | 0;
   $184 = $183 + $181 | 0;
   $185 = $181 - $183 | 0;
   $187 = HEAP32[$$2 + 28 >> 2] | 0;
   $188 = $187 + $137 | 0;
   $189 = $137 - $187 | 0;
   $190 = $188 + $184 | 0;
   $196 = ($189 + $185 | 0) * 473 >> 8;
   $203 = ((Math_imul($185, -669) | 0) >> 8) - $190 + $196 | 0;
   $204 = (($188 - $184 | 0) * 362 >> 8) - $203 | 0;
   $205 = $204 + (($189 * 277 >> 8) - $196) | 0;
   HEAP8[$135 >> 0] = HEAP8[$132 + (($190 + $176 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 7 >> 0] = HEAP8[$132 + (($176 - $190 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 1 >> 0] = HEAP8[$132 + (($203 + $178 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 6 >> 0] = HEAP8[$132 + (($178 - $203 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 2 >> 0] = HEAP8[$132 + (($204 + $179 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 5 >> 0] = HEAP8[$132 + (($179 - $204 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 4 >> 0] = HEAP8[$132 + (($205 + $177 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$135 + 3 >> 0] = HEAP8[$132 + (($177 - $205 | 0) >>> 5 & 1023) >> 0] | 0;
  }
  $$1 = $$1 + 1 | 0;
  $$2 = $$2 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function ___floatscan($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0102 = 0, $$0103 = 0, $$0104122 = 0, $$0110 = 0, $$0111 = 0.0, $$1$lcssa = 0, $$1105118 = 0, $$1123 = 0, $$2 = 0, $$2106120 = 0, $$3107 = 0, $$3121 = 0, $$4 = 0, $$4108 = 0, $$5 = 0, $$6 = 0, $$in = 0, $103 = 0, $106 = 0, $117 = 0, $119 = 0, $12 = 0, $127 = 0, $18 = 0, $19 = 0, $3 = 0, $32 = 0, $4 = 0, $42 = 0, $45 = 0, $5 = 0, $64 = 0, $73 = 0, $80 = 0, $86 = 0, $94 = 0, $trunc = 0, label = 0;
 switch ($1 | 0) {
 case 0:
  {
   $$0102 = -149;
   $$0103 = 24;
   label = 4;
   break;
  }
 case 1:
  {
   $$0102 = -1074;
   $$0103 = 53;
   label = 4;
   break;
  }
 case 2:
  {
   $$0102 = -1074;
   $$0103 = 53;
   label = 4;
   break;
  }
 default:
  $$0111 = 0.0;
 }
 L4 : do if ((label | 0) == 4) {
  $3 = $0 + 4 | 0;
  $4 = $0 + 104 | 0;
  do {
   $5 = HEAP32[$3 >> 2] | 0;
   if ($5 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$3 >> 2] = $5 + 1;
    $12 = HEAPU8[$5 >> 0] | 0;
   } else $12 = ___shgetc($0) | 0;
  } while ((_isspace($12) | 0) != 0);
  L13 : do switch ($12 | 0) {
  case 43:
  case 45:
   {
    $18 = 1 - ((($12 | 0) == 45 & 1) << 1) | 0;
    $19 = HEAP32[$3 >> 2] | 0;
    if ($19 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $19 + 1;
     $$0 = HEAPU8[$19 >> 0] | 0;
     $$0110 = $18;
     break L13;
    } else {
     $$0 = ___shgetc($0) | 0;
     $$0110 = $18;
     break L13;
    }
    break;
   }
  default:
   {
    $$0 = $12;
    $$0110 = 1;
   }
  } while (0);
  $$0104122 = 0;
  $$1123 = $$0;
  while (1) {
   if (($$1123 | 32 | 0) != (HEAP8[46109 + $$0104122 >> 0] | 0)) {
    $$1$lcssa = $$1123;
    $trunc = $$0104122;
    break;
   }
   do if ($$0104122 >>> 0 < 7) {
    $32 = HEAP32[$3 >> 2] | 0;
    if ($32 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$3 >> 2] = $32 + 1;
     $$2 = HEAPU8[$32 >> 0] | 0;
     break;
    } else {
     $$2 = ___shgetc($0) | 0;
     break;
    }
   } else $$2 = $$1123; while (0);
   $$0104122 = $$0104122 + 1 | 0;
   if ($$0104122 >>> 0 >= 8) {
    $$1$lcssa = $$2;
    $trunc = 8;
    break;
   } else $$1123 = $$2;
  }
  L29 : do switch ($trunc & 2147483647 | 0) {
  case 8:
   break;
  case 3:
   {
    label = 23;
    break;
   }
  default:
   {
    $42 = ($2 | 0) != 0;
    if ($42 & $trunc >>> 0 > 3) if (($trunc | 0) == 8) break L29; else {
     label = 23;
     break L29;
    }
    L34 : do if (!$trunc) {
     $$2106120 = 0;
     $$3121 = $$1$lcssa;
     while (1) {
      if (($$3121 | 32 | 0) != (HEAP8[46118 + $$2106120 >> 0] | 0)) {
       $$3107 = $$2106120;
       $$5 = $$3121;
       break L34;
      }
      do if ($$2106120 >>> 0 < 2) {
       $64 = HEAP32[$3 >> 2] | 0;
       if ($64 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $64 + 1;
        $$4 = HEAPU8[$64 >> 0] | 0;
        break;
       } else {
        $$4 = ___shgetc($0) | 0;
        break;
       }
      } else $$4 = $$3121; while (0);
      $$2106120 = $$2106120 + 1 | 0;
      if ($$2106120 >>> 0 >= 3) {
       $$3107 = 3;
       $$5 = $$4;
       break;
      } else $$3121 = $$4;
     }
    } else {
     $$3107 = $trunc;
     $$5 = $$1$lcssa;
    } while (0);
    switch ($$3107 | 0) {
    case 3:
     {
      $73 = HEAP32[$3 >> 2] | 0;
      if ($73 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
       HEAP32[$3 >> 2] = $73 + 1;
       $80 = HEAPU8[$73 >> 0] | 0;
      } else $80 = ___shgetc($0) | 0;
      if (($80 | 0) != 40) {
       if (!(HEAP32[$4 >> 2] | 0)) {
        $$0111 = nan;
        break L4;
       }
       HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
       $$0111 = nan;
       break L4;
      }
      $$4108 = 1;
      while (1) {
       $86 = HEAP32[$3 >> 2] | 0;
       if ($86 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $86 + 1;
        $94 = HEAPU8[$86 >> 0] | 0;
       } else $94 = ___shgetc($0) | 0;
       if (!(($94 + -48 | 0) >>> 0 < 10 | ($94 + -65 | 0) >>> 0 < 26)) if (!(($94 | 0) == 95 | ($94 + -97 | 0) >>> 0 < 26)) break;
       $$4108 = $$4108 + 1 | 0;
      }
      if (($94 | 0) == 41) {
       $$0111 = nan;
       break L4;
      }
      $103 = (HEAP32[$4 >> 2] | 0) == 0;
      if (!$103) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
      if (!$42) {
       $106 = ___errno_location() | 0;
       HEAP32[$106 >> 2] = 22;
       ___shlim($0, 0, 0);
       $$0111 = 0.0;
       break L4;
      }
      if (!$$4108) {
       $$0111 = nan;
       break L4;
      }
      $$in = $$4108;
      while (1) {
       $$in = $$in + -1 | 0;
       if (!$103) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
       if (!$$in) {
        $$0111 = nan;
        break L4;
       }
      }
      break;
     }
    case 0:
     {
      if (($$5 | 0) == 48) {
       $119 = HEAP32[$3 >> 2] | 0;
       if ($119 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
        HEAP32[$3 >> 2] = $119 + 1;
        $127 = HEAPU8[$119 >> 0] | 0;
       } else $127 = ___shgetc($0) | 0;
       if (($127 | 32 | 0) == 120) {
        $$0111 = +_hexfloat($0, $$0103, $$0102, $$0110, $2);
        break L4;
       }
       if (!(HEAP32[$4 >> 2] | 0)) $$6 = 48; else {
        HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
        $$6 = 48;
       }
      } else $$6 = $$5;
      $$0111 = +_decfloat($0, $$6, $$0103, $$0102, $$0110, $2);
      break L4;
      break;
     }
    default:
     {
      if (HEAP32[$4 >> 2] | 0) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
      $117 = ___errno_location() | 0;
      HEAP32[$117 >> 2] = 22;
      ___shlim($0, 0, 0);
      $$0111 = 0.0;
      break L4;
     }
    }
   }
  } while (0);
  if ((label | 0) == 23) {
   $45 = (HEAP32[$4 >> 2] | 0) == 0;
   if (!$45) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
   if (($2 | 0) != 0 & $trunc >>> 0 > 3) {
    $$1105118 = $trunc;
    do {
     if (!$45) HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + -1;
     $$1105118 = $$1105118 + -1 | 0;
    } while ($$1105118 >>> 0 > 3);
   }
  }
  $$0111 = +($$0110 | 0) * inf;
 } while (0);
 return +$$0111;
}

function _fmod($0, $1) {
 $0 = +$0;
 $1 = +$1;
 var $$070 = 0.0, $$071$lcssa = 0, $$07194 = 0, $$073$lcssa = 0, $$073100 = 0, $$172 = 0, $$174 = 0, $$275$lcssa = 0, $$27585 = 0, $$376$lcssa = 0, $$37682 = 0, $$lcssa = 0, $100 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $110 = 0, $111 = 0, $116 = 0, $117 = 0, $119 = 0, $12 = 0, $123 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $14 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $150 = 0, $153 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $160 = 0, $18 = 0, $2 = 0, $20 = 0, $27 = 0.0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $41 = 0, $42 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $59 = 0, $6 = 0, $64 = 0, $65 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $82 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $97 = 0, $98 = 0, label = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $1;
 $4 = HEAP32[tempDoublePtr >> 2] | 0;
 $5 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $6 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 getTempRet0() | 0;
 $8 = $6 & 2047;
 $9 = _bitshift64Lshr($4 | 0, $5 | 0, 52) | 0;
 getTempRet0() | 0;
 $11 = $9 & 2047;
 $12 = $3 & -2147483648;
 $13 = _bitshift64Shl($4 | 0, $5 | 0, 1) | 0;
 $14 = getTempRet0() | 0;
 L1 : do if (($13 | 0) == 0 & ($14 | 0) == 0) label = 3; else {
  $18 = ___DOUBLE_BITS_102($1) | 0;
  $20 = (getTempRet0() | 0) & 2147483647;
  if (($8 | 0) == 2047 | ($20 >>> 0 > 2146435072 | ($20 | 0) == 2146435072 & $18 >>> 0 > 0)) label = 3; else {
   $29 = _bitshift64Shl($2 | 0, $3 | 0, 1) | 0;
   $30 = getTempRet0() | 0;
   if (!($30 >>> 0 > $14 >>> 0 | ($30 | 0) == ($14 | 0) & $29 >>> 0 > $13 >>> 0)) return +(($29 | 0) == ($13 | 0) & ($30 | 0) == ($14 | 0) ? $0 * 0.0 : $0);
   if (!$8) {
    $41 = _bitshift64Shl($2 | 0, $3 | 0, 12) | 0;
    $42 = getTempRet0() | 0;
    if (($42 | 0) > -1 | ($42 | 0) == -1 & $41 >>> 0 > 4294967295) {
     $$073100 = 0;
     $49 = $41;
     $50 = $42;
     while (1) {
      $48 = $$073100 + -1 | 0;
      $49 = _bitshift64Shl($49 | 0, $50 | 0, 1) | 0;
      $50 = getTempRet0() | 0;
      if (!(($50 | 0) > -1 | ($50 | 0) == -1 & $49 >>> 0 > 4294967295)) {
       $$073$lcssa = $48;
       break;
      } else $$073100 = $48;
     }
    } else $$073$lcssa = 0;
    $59 = _bitshift64Shl($2 | 0, $3 | 0, 1 - $$073$lcssa | 0) | 0;
    $$174 = $$073$lcssa;
    $87 = $59;
    $88 = getTempRet0() | 0;
   } else {
    $$174 = $8;
    $87 = $2;
    $88 = $3 & 1048575 | 1048576;
   }
   if (!$11) {
    $64 = _bitshift64Shl($4 | 0, $5 | 0, 12) | 0;
    $65 = getTempRet0() | 0;
    if (($65 | 0) > -1 | ($65 | 0) == -1 & $64 >>> 0 > 4294967295) {
     $$07194 = 0;
     $72 = $64;
     $73 = $65;
     while (1) {
      $71 = $$07194 + -1 | 0;
      $72 = _bitshift64Shl($72 | 0, $73 | 0, 1) | 0;
      $73 = getTempRet0() | 0;
      if (!(($73 | 0) > -1 | ($73 | 0) == -1 & $72 >>> 0 > 4294967295)) {
       $$071$lcssa = $71;
       break;
      } else $$07194 = $71;
     }
    } else $$071$lcssa = 0;
    $82 = _bitshift64Shl($4 | 0, $5 | 0, 1 - $$071$lcssa | 0) | 0;
    $$172 = $$071$lcssa;
    $89 = $82;
    $90 = getTempRet0() | 0;
   } else {
    $$172 = $11;
    $89 = $4;
    $90 = $5 & 1048575 | 1048576;
   }
   $91 = _i64Subtract($87 | 0, $88 | 0, $89 | 0, $90 | 0) | 0;
   $92 = getTempRet0() | 0;
   $97 = ($92 | 0) > -1 | ($92 | 0) == -1 & $91 >>> 0 > 4294967295;
   L25 : do if (($$174 | 0) > ($$172 | 0)) {
    $$27585 = $$174;
    $100 = $92;
    $158 = $97;
    $159 = $87;
    $160 = $88;
    $98 = $91;
    while (1) {
     if ($158) if (($98 | 0) == 0 & ($100 | 0) == 0) break; else {
      $104 = $98;
      $105 = $100;
     } else {
      $104 = $159;
      $105 = $160;
     }
     $106 = _bitshift64Shl($104 | 0, $105 | 0, 1) | 0;
     $107 = getTempRet0() | 0;
     $108 = $$27585 + -1 | 0;
     $110 = _i64Subtract($106 | 0, $107 | 0, $89 | 0, $90 | 0) | 0;
     $111 = getTempRet0() | 0;
     $116 = ($111 | 0) > -1 | ($111 | 0) == -1 & $110 >>> 0 > 4294967295;
     if (($108 | 0) > ($$172 | 0)) {
      $$27585 = $108;
      $100 = $111;
      $158 = $116;
      $159 = $106;
      $160 = $107;
      $98 = $110;
     } else {
      $$275$lcssa = $108;
      $$lcssa = $116;
      $117 = $110;
      $119 = $111;
      $156 = $106;
      $157 = $107;
      break L25;
     }
    }
    $$070 = $0 * 0.0;
    break L1;
   } else {
    $$275$lcssa = $$174;
    $$lcssa = $97;
    $117 = $91;
    $119 = $92;
    $156 = $87;
    $157 = $88;
   } while (0);
   if ($$lcssa) if (($117 | 0) == 0 & ($119 | 0) == 0) {
    $$070 = $0 * 0.0;
    break;
   } else {
    $123 = $119;
    $125 = $117;
   } else {
    $123 = $157;
    $125 = $156;
   }
   if ($123 >>> 0 < 1048576 | ($123 | 0) == 1048576 & $125 >>> 0 < 0) {
    $$37682 = $$275$lcssa;
    $130 = $125;
    $131 = $123;
    while (1) {
     $132 = _bitshift64Shl($130 | 0, $131 | 0, 1) | 0;
     $133 = getTempRet0() | 0;
     $134 = $$37682 + -1 | 0;
     if ($133 >>> 0 < 1048576 | ($133 | 0) == 1048576 & $132 >>> 0 < 0) {
      $$37682 = $134;
      $130 = $132;
      $131 = $133;
     } else {
      $$376$lcssa = $134;
      $141 = $132;
      $142 = $133;
      break;
     }
    }
   } else {
    $$376$lcssa = $$275$lcssa;
    $141 = $125;
    $142 = $123;
   }
   if (($$376$lcssa | 0) > 0) {
    $143 = _i64Add($141 | 0, $142 | 0, 0, -1048576) | 0;
    $144 = getTempRet0() | 0;
    $145 = _bitshift64Shl($$376$lcssa | 0, 0, 52) | 0;
    $153 = $144 | (getTempRet0() | 0);
    $155 = $143 | $145;
   } else {
    $150 = _bitshift64Lshr($141 | 0, $142 | 0, 1 - $$376$lcssa | 0) | 0;
    $153 = getTempRet0() | 0;
    $155 = $150;
   }
   HEAP32[tempDoublePtr >> 2] = $155;
   HEAP32[tempDoublePtr + 4 >> 2] = $153 | $12;
   $$070 = +HEAPF64[tempDoublePtr >> 3];
  }
 } while (0);
 if ((label | 0) == 3) {
  $27 = $0 * $1;
  $$070 = $27 / $27;
 }
 return +$$070;
}

function _get_dht($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0134 = 0, $$0135 = 0, $$0136 = 0, $$0144 = 0, $$0146 = 0, $$0147 = 0, $$0148 = 0, $$1 = 0, $$1137 = 0, $$1145 = 0, $$2 = 0, $$2138 = 0, $$3 = 0, $$3139 = 0, $$3139$pn = 0, $$4 = 0, $$4$in = 0, $$4140 = 0, $$5 = 0, $$5141 = 0, $$6 = 0, $$6142 = 0, $$7 = 0, $$7143 = 0, $$pre$phiZ2D = 0, $1 = 0, $103 = 0, $13 = 0, $133 = 0, $150 = 0, $151 = 0, $155 = 0, $16 = 0, $160 = 0, $162 = 0, $163 = 0, $167 = 0, $19 = 0, $2 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $55 = 0, $56 = 0, $6 = 0, $69 = 0, $74 = 0, $75 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $1 = sp + 256 | 0;
 $2 = sp;
 $4 = HEAP32[$0 + 24 >> 2] | 0;
 $5 = $4 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 if (!$6) if (!(FUNCTION_TABLE_ii[HEAP32[$4 + 12 >> 2] & 127]($0) | 0)) $$0 = 0; else {
  $$0135 = HEAP32[$5 >> 2] | 0;
  label = 4;
 } else {
  $$0135 = $6;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $$0136 = HEAP32[$4 >> 2] | 0;
  $13 = $$0135 + -1 | 0;
  $16 = (HEAPU8[$$0136 >> 0] | 0) << 8;
  if (!$13) {
   $19 = $4 + 12 | 0;
   if (!(FUNCTION_TABLE_ii[HEAP32[$19 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$1 = HEAP32[$5 >> 2] | 0;
   $$1137 = HEAP32[$4 >> 2] | 0;
   $$pre$phiZ2D = $19;
  } else {
   $$1 = $13;
   $$1137 = $$0136 + 1 | 0;
   $$pre$phiZ2D = $4 + 12 | 0;
  }
  $31 = $1 + 1 | 0;
  $32 = $1 + 2 | 0;
  $33 = $1 + 3 | 0;
  $34 = $1 + 4 | 0;
  $35 = $1 + 5 | 0;
  $36 = $1 + 6 | 0;
  $37 = $1 + 7 | 0;
  $38 = $1 + 8 | 0;
  $39 = $1 + 9 | 0;
  $40 = $1 + 10 | 0;
  $41 = $1 + 11 | 0;
  $42 = $1 + 12 | 0;
  $43 = $1 + 13 | 0;
  $44 = $1 + 14 | 0;
  $45 = $1 + 15 | 0;
  $46 = $1 + 16 | 0;
  $$0134 = ($16 | (HEAPU8[$$1137 >> 0] | 0)) + -2 | 0;
  $$2 = $$1 + -1 | 0;
  $$2138 = $$1137 + 1 | 0;
  while (1) {
   if (($$0134 | 0) <= 16) break;
   if (!$$2) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$$pre$phiZ2D >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     break L4;
    }
    $$3 = HEAP32[$5 >> 2] | 0;
    $$3139 = HEAP32[$4 >> 2] | 0;
   } else {
    $$3 = $$2;
    $$3139 = $$2138;
   }
   $55 = HEAPU8[$$3139 >> 0] | 0;
   $56 = HEAP32[$0 >> 2] | 0;
   HEAP32[$56 + 20 >> 2] = 80;
   HEAP32[$56 + 24 >> 2] = $55;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
   HEAP8[$1 >> 0] = 0;
   $$0144 = 1;
   $$0147 = 0;
   $$3139$pn = $$3139;
   $$4$in = $$3;
   while (1) {
    $$4 = $$4$in + -1 | 0;
    $$4140 = $$3139$pn + 1 | 0;
    if ($$0144 >>> 0 >= 17) break;
    if (!$$4) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$$pre$phiZ2D >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      break L4;
     }
     $$5 = HEAP32[$5 >> 2] | 0;
     $$5141 = HEAP32[$4 >> 2] | 0;
    } else {
     $$5 = $$4;
     $$5141 = $$4140;
    }
    $69 = HEAP8[$$5141 >> 0] | 0;
    HEAP8[$1 + $$0144 >> 0] = $69;
    $$0144 = $$0144 + 1 | 0;
    $$0147 = $$0147 + ($69 & 255) | 0;
    $$3139$pn = $$5141;
    $$4$in = $$5;
   }
   $74 = $$0134 + -17 | 0;
   $75 = HEAP32[$0 >> 2] | 0;
   HEAP32[$75 + 24 >> 2] = HEAPU8[$31 >> 0];
   HEAP32[$75 + 28 >> 2] = HEAPU8[$32 >> 0];
   HEAP32[$75 + 32 >> 2] = HEAPU8[$33 >> 0];
   HEAP32[$75 + 36 >> 2] = HEAPU8[$34 >> 0];
   HEAP32[$75 + 40 >> 2] = HEAPU8[$35 >> 0];
   HEAP32[$75 + 44 >> 2] = HEAPU8[$36 >> 0];
   HEAP32[$75 + 48 >> 2] = HEAPU8[$37 >> 0];
   HEAP32[$75 + 52 >> 2] = HEAPU8[$38 >> 0];
   HEAP32[$75 + 20 >> 2] = 86;
   FUNCTION_TABLE_vii[HEAP32[$75 + 4 >> 2] & 63]($0, 2);
   $103 = HEAP32[$0 >> 2] | 0;
   HEAP32[$103 + 24 >> 2] = HEAPU8[$39 >> 0];
   HEAP32[$103 + 28 >> 2] = HEAPU8[$40 >> 0];
   HEAP32[$103 + 32 >> 2] = HEAPU8[$41 >> 0];
   HEAP32[$103 + 36 >> 2] = HEAPU8[$42 >> 0];
   HEAP32[$103 + 40 >> 2] = HEAPU8[$43 >> 0];
   HEAP32[$103 + 44 >> 2] = HEAPU8[$44 >> 0];
   HEAP32[$103 + 48 >> 2] = HEAPU8[$45 >> 0];
   HEAP32[$103 + 52 >> 2] = HEAPU8[$46 >> 0];
   HEAP32[$103 + 20 >> 2] = 86;
   FUNCTION_TABLE_vii[HEAP32[$103 + 4 >> 2] & 63]($0, 2);
   if ($$0147 >>> 0 > 256 | ($74 | 0) < ($$0147 | 0)) {
    $133 = HEAP32[$0 >> 2] | 0;
    HEAP32[$133 + 20 >> 2] = 8;
    FUNCTION_TABLE_vi[HEAP32[$133 >> 2] & 255]($0);
   }
   $$1145 = 0;
   $$6 = $$4;
   $$6142 = $$4140;
   while (1) {
    if ($$1145 >>> 0 >= $$0147 >>> 0) break;
    if (!$$6) {
     if (!(FUNCTION_TABLE_ii[HEAP32[$$pre$phiZ2D >> 2] & 127]($0) | 0)) {
      $$0 = 0;
      break L4;
     }
     $$7 = HEAP32[$5 >> 2] | 0;
     $$7143 = HEAP32[$4 >> 2] | 0;
    } else {
     $$7 = $$6;
     $$7143 = $$6142;
    }
    HEAP8[$2 + $$1145 >> 0] = HEAP8[$$7143 >> 0] | 0;
    $$1145 = $$1145 + 1 | 0;
    $$6 = $$7 + -1 | 0;
    $$6142 = $$7143 + 1 | 0;
   }
   $150 = ($55 & 16 | 0) == 0;
   $151 = $55 + -16 | 0;
   $$0148 = $150 ? $55 : $151;
   $$0146 = $150 ? $0 + 180 + ($55 << 2) | 0 : $0 + 196 + ($151 << 2) | 0;
   if ($$0148 >>> 0 > 3) {
    $155 = HEAP32[$0 >> 2] | 0;
    HEAP32[$155 + 20 >> 2] = 30;
    HEAP32[$155 + 24 >> 2] = $$0148;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
   $160 = HEAP32[$$0146 >> 2] | 0;
   if (!$160) {
    $162 = _jpeg_alloc_huff_table($0) | 0;
    HEAP32[$$0146 >> 2] = $162;
    $163 = $162;
   } else $163 = $160;
   HEAP32[$163 >> 2] = HEAP32[$1 >> 2];
   HEAP32[$163 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
   HEAP32[$163 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
   HEAP32[$163 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
   HEAP8[$163 + 16 >> 0] = HEAP8[$1 + 16 >> 0] | 0;
   _memcpy((HEAP32[$$0146 >> 2] | 0) + 17 | 0, $2 | 0, 256) | 0;
   $$0134 = $74 - $$0147 | 0;
   $$2 = $$6;
   $$2138 = $$6142;
  }
  if ($$0134 | 0) {
   $167 = HEAP32[$0 >> 2] | 0;
   HEAP32[$167 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[$167 >> 2] & 255]($0);
  }
  HEAP32[$4 >> 2] = $$2138;
  HEAP32[$5 >> 2] = $$2;
  $$0 = 1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision22ComputeSubpixelHessianEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $103 = 0, $107 = 0, $11 = 0, $14 = 0, $17 = 0, $25 = 0, $30 = 0, $34 = 0, $35 = 0, $39 = 0, $42 = 0, $46 = 0, $54 = 0, $59 = 0, $63 = 0, $65 = 0, $68 = 0, $7 = 0, $72 = 0, $75 = 0, $8 = 0, $83 = 0, $88 = 0, $92 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $8 = __ZNK6vision5Image5widthEv($2) | 0;
 $11 = ($8 | 0) == (__ZNK6vision5Image5widthEv($3) | 0) & 1;
 do if ((__ZNK6vision5Image5widthEv($4) | 0) == ($11 | 0)) {
  $14 = __ZNK6vision5Image6heightEv($2) | 0;
  $17 = ($14 | 0) == (__ZNK6vision5Image6heightEv($3) | 0) & 1;
  if ((__ZNK6vision5Image6heightEv($4) | 0) == ($17 | 0)) {
   __ZN6vision32ComputeSubpixelHessianSameOctaveEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6);
   break;
  } else {
   $25 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22373) | 0, 22444) | 0, 33528) | 0, 466) | 0, 33535) | 0, 22573) | 0;
   __ZNKSt3__28ios_base6getlocEv($7, $25 + (HEAP32[(HEAP32[$25 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $30 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
   $34 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$30 >> 2] | 0) + 28 >> 2] & 63]($30, 10) | 0;
   __ZNSt3__26localeD2Ev($7);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($25, $34) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($25) | 0;
   _abort();
  }
 } else {
  $35 = __ZNK6vision5Image5widthEv($2) | 0;
  if (($35 | 0) == (__ZNK6vision5Image5widthEv($3) | 0)) {
   $39 = (__ZNK6vision5Image5widthEv($3) | 0) >>> 1;
   if (($39 | 0) == (__ZNK6vision5Image5widthEv($4) | 0)) {
    $42 = __ZNK6vision5Image6heightEv($2) | 0;
    if (($42 | 0) == (__ZNK6vision5Image6heightEv($3) | 0)) {
     $46 = (__ZNK6vision5Image6heightEv($3) | 0) >>> 1;
     if (($46 | 0) == (__ZNK6vision5Image6heightEv($4) | 0)) {
      __ZN6vision36ComputeSubpixelHessianFineOctavePairEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6);
      break;
     }
    }
    $54 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22605) | 0, 22444) | 0, 33528) | 0, 469) | 0, 33535) | 0, 22573) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $54 + (HEAP32[(HEAP32[$54 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $59 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
    $63 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$59 >> 2] | 0) + 28 >> 2] & 63]($59, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($54, $63) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($54) | 0;
    _abort();
   }
  }
  $65 = (__ZNK6vision5Image5widthEv($2) | 0) >>> 1;
  if (($65 | 0) == (__ZNK6vision5Image5widthEv($3) | 0)) {
   $68 = __ZNK6vision5Image5widthEv($3) | 0;
   if (($68 | 0) == (__ZNK6vision5Image5widthEv($4) | 0)) {
    $72 = (__ZNK6vision5Image5widthEv($2) | 0) >>> 1;
    if (($72 | 0) == (__ZNK6vision5Image5widthEv($3) | 0)) {
     $75 = __ZNK6vision5Image5widthEv($3) | 0;
     if (($75 | 0) == (__ZNK6vision5Image5widthEv($4) | 0)) {
      __ZN6vision38ComputeSubpixelHessianCoarseOctavePairEPfS0_RKNS_5ImageES3_S3_ii($0, $1, $2, $3, $4, $5, $6);
      break;
     }
    }
    $83 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 22702) | 0, 22444) | 0, 33528) | 0, 472) | 0, 33535) | 0, 22573) | 0;
    __ZNKSt3__28ios_base6getlocEv($7, $83 + (HEAP32[(HEAP32[$83 >> 2] | 0) + -12 >> 2] | 0) | 0);
    $88 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
    $92 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$88 >> 2] | 0) + 28 >> 2] & 63]($88, 10) | 0;
    __ZNSt3__26localeD2Ev($7);
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($83, $92) | 0;
    __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($83) | 0;
    _abort();
   }
  }
  $98 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 29336) | 0, 22444) | 0, 33528) | 0, 475) | 0, 33535) | 0, 22795) | 0;
  __ZNKSt3__28ios_base6getlocEv($7, $98 + (HEAP32[(HEAP32[$98 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $103 = __ZNKSt3__26locale9use_facetERNS0_2idE($7, 57884) | 0;
  $107 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$103 >> 2] | 0) + 28 >> 2] & 63]($103, 10) | 0;
  __ZNSt3__26localeD2Ev($7);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($98, $107) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($98) | 0;
  _abort();
 } while (0);
 STACKTOP = sp;
 return 1;
}

function __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i108 = 0, $$0100 = 0, $$0102 = 0, $$0104 = 0, $$07$i$i = 0, $$07$i$i107 = 0, $$099 = 0, $$1 = 0, $$1101 = 0, $$1103 = 0, $$1105 = 0, $$2 = 0, $$2106 = 0, $$3 = 0, $$pre$phiZ2D = 0, $101 = 0, $105 = 0, $107 = 0, $119 = 0, $120 = 0, $125 = 0, $13 = 0, $130 = 0, $131 = 0, $137 = 0, $138 = 0, $148 = 0, $18 = 0, $19 = 0, $21 = 0, $27 = 0, $32 = 0, $33 = 0, $35 = 0, $40 = 0, $41 = 0, $45 = 0, $52 = 0, $57 = 0, $58 = 0, $60 = 0, $7 = 0, $75 = 0, $77 = 0, $8 = 0, $83 = 0, $88 = 0, $89 = 0, $9 = 0, $91 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57900) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 63]($7, $9);
 HEAP32[$5 >> 2] = $3;
 $13 = HEAP8[$0 >> 0] | 0;
 switch ($13 << 24 >> 24) {
 case 43:
 case 45:
  {
   $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, $13) | 0;
   $19 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $19 + 1;
   HEAP8[$19 >> 0] = $18;
   $$0102 = $0 + 1 | 0;
   break;
  }
 default:
  $$0102 = $0;
 }
 $21 = $2;
 L4 : do if (($21 - $$0102 | 0) > 1) if ((HEAP8[$$0102 >> 0] | 0) == 48) {
  $27 = $$0102 + 1 | 0;
  switch (HEAP8[$27 >> 0] | 0) {
  case 88:
  case 120:
   break;
  default:
   {
    label = 4;
    break L4;
   }
  }
  $32 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, 48) | 0;
  $33 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $33 + 1;
  HEAP8[$33 >> 0] = $32;
  $35 = $$0102 + 2 | 0;
  $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$27 >> 0] | 0) | 0;
  $41 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $41 + 1;
  HEAP8[$41 >> 0] = $40;
  $$0104 = $35;
  while (1) {
   if ($$0104 >>> 0 >= $2 >>> 0) {
    $$1103 = $35;
    $$2106 = $$0104;
    break L4;
   }
   $45 = HEAP8[$$0104 >> 0] | 0;
   if (!(_isxdigit_l($45, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1103 = $35;
    $$2106 = $$0104;
    break L4;
   }
   $$0104 = $$0104 + 1 | 0;
  }
 } else label = 4; else label = 4; while (0);
 L12 : do if ((label | 0) == 4) {
  $$1105 = $$0102;
  while (1) {
   if ($$1105 >>> 0 >= $2 >>> 0) {
    $$1103 = $$0102;
    $$2106 = $$1105;
    break L12;
   }
   $52 = HEAP8[$$1105 >> 0] | 0;
   if (!(_isdigit_l($52, __ZNSt3__26__clocEv() | 0) | 0)) {
    $$1103 = $$0102;
    $$2106 = $$1105;
    break L12;
   }
   $$1105 = $$1105 + 1 | 0;
  }
 } while (0);
 $57 = $7 + 11 | 0;
 $58 = HEAP8[$57 >> 0] | 0;
 $60 = $7 + 4 | 0;
 L19 : do if (!(($58 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $58 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 15]($8, $$1103, $$2106, HEAP32[$5 >> 2] | 0) | 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + ($$2106 - $$1103);
  $$pre$phiZ2D = $8;
 } else {
  L22 : do if (($$1103 | 0) != ($$2106 | 0)) {
   $$0$i$i = $$2106;
   $$07$i$i = $$1103;
   while (1) {
    $75 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $75 >>> 0) break L22;
    $77 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$75 >> 0] | 0;
    HEAP8[$75 >> 0] = $77;
    $$0$i$i = $75;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $83 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$1103;
  $$0100 = 0;
  $$099 = 0;
  while (1) {
   if ($$0 >>> 0 >= $$2106 >>> 0) break;
   $101 = HEAP8[((HEAP8[$57 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$099 >> 0] | 0;
   if ($101 << 24 >> 24 > 0 & ($$0100 | 0) == ($101 << 24 >> 24 | 0)) {
    $105 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $105 + 1;
    HEAP8[$105 >> 0] = $83;
    $107 = HEAP8[$57 >> 0] | 0;
    $$1 = $$099 + ($$099 >>> 0 < (($107 << 24 >> 24 < 0 ? HEAP32[$60 >> 2] | 0 : $107 & 255) + -1 | 0) >>> 0 & 1) | 0;
    $$1101 = 0;
   } else {
    $$1 = $$099;
    $$1101 = $$0100;
   }
   $119 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $120 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $120 + 1;
   HEAP8[$120 >> 0] = $119;
   $$0 = $$0 + 1 | 0;
   $$0100 = $$1101 + 1 | 0;
   $$099 = $$1;
  }
  $88 = $3 + ($$1103 - $0) | 0;
  $89 = HEAP32[$5 >> 2] | 0;
  if (($88 | 0) == ($89 | 0)) $$pre$phiZ2D = $8; else {
   $$0$i$i108 = $89;
   $$07$i$i107 = $88;
   while (1) {
    $91 = $$0$i$i108 + -1 | 0;
    if ($$07$i$i107 >>> 0 >= $91 >>> 0) {
     $$pre$phiZ2D = $8;
     break L19;
    }
    $93 = HEAP8[$$07$i$i107 >> 0] | 0;
    HEAP8[$$07$i$i107 >> 0] = HEAP8[$91 >> 0] | 0;
    HEAP8[$91 >> 0] = $93;
    $$0$i$i108 = $91;
    $$07$i$i107 = $$07$i$i107 + 1 | 0;
   }
  }
 } while (0);
 $$2 = $$2106;
 while (1) {
  if ($$2 >>> 0 >= $2 >>> 0) {
   $$3 = $$2;
   break;
  }
  $125 = HEAP8[$$2 >> 0] | 0;
  if ($125 << 24 >> 24 == 46) {
   label = 32;
   break;
  }
  $137 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + 28 >> 2] & 63]($8, $125) | 0;
  $138 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $138 + 1;
  HEAP8[$138 >> 0] = $137;
  $$2 = $$2 + 1 | 0;
 }
 if ((label | 0) == 32) {
  $130 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 12 >> 2] & 127]($9) | 0;
  $131 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $131 + 1;
  HEAP8[$131 >> 0] = $130;
  $$3 = $$2 + 1 | 0;
 }
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 15]($8, $$3, $2, HEAP32[$5 >> 2] | 0) | 0;
 $148 = (HEAP32[$5 >> 2] | 0) + ($21 - $$3) | 0;
 HEAP32[$5 >> 2] = $148;
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $148 : $3 + ($1 - $0) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_RKNS_28BinaryHierarchicalClusteringILi96EEE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$064 = 0, $$065 = 0, $$066 = 0, $$067 = 0, $$070 = 0, $$2 = 0, $$269 = 0, $$272 = 0, $110 = 0, $115 = 0, $119 = 0, $12 = 0, $13 = 0, $19 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $34 = 0, $38 = 0, $4 = 0, $45 = 0, $58 = 0, $6 = 0, $63 = 0, $67 = 0, $69 = 0, $72 = 0, $77 = 0, $78 = 0, $89 = 0, $92 = 0, $97 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 $6 = $0 + 4 | 0;
 HEAP32[$6 >> 2] = HEAP32[$0 >> 2];
 do if (!(__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0)) $$0 = 0; else if (!(__ZNK6vision18BinaryFeatureStore4sizeEv($2) | 0)) $$0 = 0; else {
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm($0, __ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0);
  $12 = $0 + 8 | 0;
  $13 = $0 + 12 | 0;
  $$064 = 0;
  L4 : while (1) {
   if ($$064 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) break;
   $22 = __ZNK6vision18BinaryFeatureStore7featureEm($1, $$064) | 0;
   __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryEPKh($3, $22) | 0;
   $23 = __ZNK6vision18BinaryFeatureStore5pointEm($1, $$064) | 0;
   $24 = __ZNK6vision28BinaryHierarchicalClusteringILi96EE12reverseIndexEv($3) | 0;
   $25 = $24 + 4 | 0;
   $26 = $23 + 16 | 0;
   $$065 = 0;
   $$066 = -1;
   $$067 = -1;
   $$070 = 2147483647;
   while (1) {
    $28 = HEAP32[$24 >> 2] | 0;
    if ($$065 >>> 0 >= (HEAP32[$25 >> 2] | 0) - $28 >> 2 >>> 0) break;
    $34 = HEAP8[$26 >> 0] | 0;
    $38 = (__ZNK6vision18BinaryFeatureStore5pointEm($2, HEAP32[$28 + ($$065 << 2) >> 2] | 0) | 0) + 16 | 0;
    do if ($34 << 24 >> 24 == (HEAP8[$38 >> 0] | 0)) {
     $45 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_($22, __ZNK6vision18BinaryFeatureStore7featureEm($2, HEAP32[(HEAP32[$24 >> 2] | 0) + ($$065 << 2) >> 2] | 0) | 0) | 0;
     if ($45 >>> 0 < $$066 >>> 0) {
      $$2 = $45;
      $$269 = $$066;
      $$272 = HEAP32[(HEAP32[$24 >> 2] | 0) + ($$065 << 2) >> 2] | 0;
      break;
     } else {
      $$2 = $$066;
      $$269 = $45 >>> 0 < $$067 >>> 0 ? $45 : $$067;
      $$272 = $$070;
      break;
     }
    } else {
     $$2 = $$066;
     $$269 = $$067;
     $$272 = $$070;
    } while (0);
    $$065 = $$065 + 1 | 0;
    $$066 = $$2;
    $$067 = $$269;
    $$070 = $$272;
   }
   do if (($$066 | 0) != -1) {
    if (($$070 | 0) == -1) {
     label = 15;
     break L4;
    }
    if (($$067 | 0) == -1) {
     __ZN6vision7match_tC2Eii($4, $$064, $$070);
     $69 = HEAP32[$6 >> 2] | 0;
     if ($69 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
      $72 = $4;
      $77 = HEAP32[$72 + 4 >> 2] | 0;
      $78 = $69;
      HEAP32[$78 >> 2] = HEAP32[$72 >> 2];
      HEAP32[$78 + 4 >> 2] = $77;
      HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $4);
     break;
    }
    if (+($$066 >>> 0) / +($$067 >>> 0) < +HEAPF32[$13 >> 2]) {
     __ZN6vision7match_tC2Eii($4, $$064, $$070);
     $89 = HEAP32[$6 >> 2] | 0;
     if ($89 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
      $92 = $4;
      $97 = HEAP32[$92 + 4 >> 2] | 0;
      $98 = $89;
      HEAP32[$98 >> 2] = HEAP32[$92 >> 2];
      HEAP32[$98 + 4 >> 2] = $97;
      HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $4);
    }
   } while (0);
   $$064 = $$064 + 1 | 0;
  }
  if ((label | 0) == 15) {
   $58 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 29516) | 0, 29361) | 0, 33528) | 0, 160) | 0, 33535) | 0, 29588) | 0;
   __ZNKSt3__28ios_base6getlocEv($4, $58 + (HEAP32[(HEAP32[$58 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $63 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
   $67 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$63 >> 2] | 0) + 28 >> 2] & 63]($63, 10) | 0;
   __ZNSt3__26localeD2Ev($4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($58, $67) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($58) | 0;
   _abort();
  }
  $19 = (HEAP32[$6 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
  if ($19 >>> 0 > (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) {
   $110 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 29606) | 0, 29361) | 0, 33528) | 0, 175) | 0, 33535) | 0, 29666) | 0;
   __ZNKSt3__28ios_base6getlocEv($4, $110 + (HEAP32[(HEAP32[$110 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $115 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
   $119 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$115 >> 2] | 0) + 28 >> 2] & 63]($115, 10) | 0;
   __ZNSt3__26localeD2Ev($4);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($110, $119) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($110) | 0;
   _abort();
  } else {
   $$0 = (HEAP32[$6 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _update_box($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0200 = 0, $$0204 = 0, $$0211 = 0, $$0218 = 0, $$0219 = 0, $$0220 = 0, $$0221 = 0, $$0222 = 0, $$0223 = 0, $$0224 = 0, $$1 = 0, $$1201 = 0, $$1205 = 0, $$1212 = 0, $$1225 = 0, $$2 = 0, $$2202 = 0, $$2206 = 0, $$2213 = 0, $$2226 = 0, $$3203 = 0, $$3207 = 0, $$3214 = 0, $$3227 = 0, $$4 = 0, $$4208 = 0, $$4215 = 0, $$4228 = 0, $$5 = 0, $$5209 = 0, $$5216 = 0, $$5229 = 0, $$6 = 0, $$6210 = 0, $$6217 = 0, $$6230 = 0, $10 = 0, $100 = 0, $105 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $19 = 0, $32 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $96 = 0, $98 = 0;
 $5 = HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 24 >> 2] | 0;
 $6 = HEAP32[$1 >> 2] | 0;
 $7 = $1 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $1 + 8 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $1 + 12 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 $13 = $1 + 16 | 0;
 $14 = HEAP32[$13 >> 2] | 0;
 $15 = $1 + 20 | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 L1 : do if (($8 | 0) > ($6 | 0)) {
  $$0204 = $6;
  L3 : while (1) {
   if (($$0204 | 0) > ($8 | 0)) {
    $$0223 = $6;
    break L1;
   }
   $19 = $5 + ($$0204 << 2) | 0;
   $$0211 = $10;
   while (1) {
    if (($$0211 | 0) > ($12 | 0)) break;
    $$0200 = (HEAP32[$19 >> 2] | 0) + ($$0211 << 6) + ($14 << 1) | 0;
    $$0224 = $14;
    while (1) {
     if (($$0224 | 0) > ($16 | 0)) break;
     if (HEAP16[$$0200 >> 1] | 0) break L3;
     $$0200 = $$0200 + 2 | 0;
     $$0224 = $$0224 + 1 | 0;
    }
    $$0211 = $$0211 + 1 | 0;
   }
   $$0204 = $$0204 + 1 | 0;
  }
  HEAP32[$1 >> 2] = $$0204;
  $$0223 = $$0204;
 } else $$0223 = $6; while (0);
 L17 : do if (($8 | 0) > ($$0223 | 0)) {
  $$1205 = $8;
  L19 : while (1) {
   if (($$1205 | 0) < ($$0223 | 0)) {
    $$0222 = $8;
    break L17;
   }
   $32 = $5 + ($$1205 << 2) | 0;
   $$1212 = $10;
   while (1) {
    if (($$1212 | 0) > ($12 | 0)) break;
    $$1201 = (HEAP32[$32 >> 2] | 0) + ($$1212 << 6) + ($14 << 1) | 0;
    $$1225 = $14;
    while (1) {
     if (($$1225 | 0) > ($16 | 0)) break;
     if (HEAP16[$$1201 >> 1] | 0) break L19;
     $$1201 = $$1201 + 2 | 0;
     $$1225 = $$1225 + 1 | 0;
    }
    $$1212 = $$1212 + 1 | 0;
   }
   $$1205 = $$1205 + -1 | 0;
  }
  HEAP32[$7 >> 2] = $$1205;
  $$0222 = $$1205;
 } else $$0222 = $8; while (0);
 L33 : do if (($12 | 0) > ($10 | 0)) {
  $$2213 = $10;
  L35 : while (1) {
   if (($$2213 | 0) > ($12 | 0)) {
    $$0221 = $10;
    break L33;
   }
   $$2206 = $$0223;
   while (1) {
    if (($$2206 | 0) > ($$0222 | 0)) break;
    $$2202 = (HEAP32[$5 + ($$2206 << 2) >> 2] | 0) + ($$2213 << 6) + ($14 << 1) | 0;
    $$2226 = $14;
    while (1) {
     if (($$2226 | 0) > ($16 | 0)) break;
     if (HEAP16[$$2202 >> 1] | 0) break L35;
     $$2202 = $$2202 + 2 | 0;
     $$2226 = $$2226 + 1 | 0;
    }
    $$2206 = $$2206 + 1 | 0;
   }
   $$2213 = $$2213 + 1 | 0;
  }
  HEAP32[$9 >> 2] = $$2213;
  $$0221 = $$2213;
 } else $$0221 = $10; while (0);
 L49 : do if (($12 | 0) > ($$0221 | 0)) {
  $$3214 = $12;
  L51 : while (1) {
   if (($$3214 | 0) < ($$0221 | 0)) {
    $$0220 = $12;
    break L49;
   }
   $$3207 = $$0223;
   while (1) {
    if (($$3207 | 0) > ($$0222 | 0)) break;
    $$3203 = (HEAP32[$5 + ($$3207 << 2) >> 2] | 0) + ($$3214 << 6) + ($14 << 1) | 0;
    $$3227 = $14;
    while (1) {
     if (($$3227 | 0) > ($16 | 0)) break;
     if (HEAP16[$$3203 >> 1] | 0) break L51;
     $$3203 = $$3203 + 2 | 0;
     $$3227 = $$3227 + 1 | 0;
    }
    $$3207 = $$3207 + 1 | 0;
   }
   $$3214 = $$3214 + -1 | 0;
  }
  HEAP32[$11 >> 2] = $$3214;
  $$0220 = $$3214;
 } else $$0220 = $12; while (0);
 L65 : do if (($16 | 0) > ($14 | 0)) {
  $$4228 = $14;
  L67 : while (1) {
   if (($$4228 | 0) > ($16 | 0)) {
    $$0219 = $14;
    break L65;
   }
   $$4208 = $$0223;
   while (1) {
    if (($$4208 | 0) > ($$0222 | 0)) break;
    $$4 = (HEAP32[$5 + ($$4208 << 2) >> 2] | 0) + ($$0221 << 6) + ($$4228 << 1) | 0;
    $$4215 = $$0221;
    while (1) {
     if (($$4215 | 0) > ($$0220 | 0)) break;
     if (HEAP16[$$4 >> 1] | 0) break L67;
     $$4 = $$4 + 64 | 0;
     $$4215 = $$4215 + 1 | 0;
    }
    $$4208 = $$4208 + 1 | 0;
   }
   $$4228 = $$4228 + 1 | 0;
  }
  HEAP32[$13 >> 2] = $$4228;
  $$0219 = $$4228;
 } else $$0219 = $14; while (0);
 L81 : do if (($16 | 0) > ($$0219 | 0)) {
  $$5229 = $16;
  L83 : while (1) {
   if (($$5229 | 0) < ($$0219 | 0)) {
    $$0218 = $16;
    break L81;
   }
   $$5209 = $$0223;
   while (1) {
    if (($$5209 | 0) > ($$0222 | 0)) break;
    $$5 = (HEAP32[$5 + ($$5209 << 2) >> 2] | 0) + ($$0221 << 6) + ($$5229 << 1) | 0;
    $$5216 = $$0221;
    while (1) {
     if (($$5216 | 0) > ($$0220 | 0)) break;
     if (HEAP16[$$5 >> 1] | 0) break L83;
     $$5 = $$5 + 64 | 0;
     $$5216 = $$5216 + 1 | 0;
    }
    $$5209 = $$5209 + 1 | 0;
   }
   $$5229 = $$5229 + -1 | 0;
  }
  HEAP32[$15 >> 2] = $$5229;
  $$0218 = $$5229;
 } else $$0218 = $16; while (0);
 $96 = $$0222 - $$0223 << 4;
 $98 = ($$0220 - $$0221 | 0) * 12 | 0;
 $100 = $$0218 - $$0219 << 3;
 $105 = (Math_imul($98, $98) | 0) + (Math_imul($96, $96) | 0) + (Math_imul($100, $100) | 0) | 0;
 HEAP32[$1 + 24 >> 2] = $105;
 $$0 = 0;
 $$6210 = $$0223;
 while (1) {
  if (($$6210 | 0) > ($$0222 | 0)) break;
  $108 = $5 + ($$6210 << 2) | 0;
  $$1 = $$0;
  $$6217 = $$0221;
  while (1) {
   if (($$6217 | 0) > ($$0220 | 0)) break;
   $$2 = $$1;
   $$6 = (HEAP32[$108 >> 2] | 0) + ($$6217 << 6) + ($$0219 << 1) | 0;
   $$6230 = $$0219;
   while (1) {
    if (($$6230 | 0) > ($$0218 | 0)) break;
    $$2 = $$2 + ((HEAP16[$$6 >> 1] | 0) != 0 & 1) | 0;
    $$6 = $$6 + 2 | 0;
    $$6230 = $$6230 + 1 | 0;
   }
   $$1 = $$2;
   $$6217 = $$6217 + 1 | 0;
  }
  $$0 = $$1;
  $$6210 = $$6210 + 1 | 0;
 }
 HEAP32[$1 + 28 >> 2] = $$0;
 return;
}

function _get_sos($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0161 = 0, $$0162 = 0, $$0171 = 0, $$0172 = 0, $$0173 = 0, $$1 = 0, $$1163 = 0, $$2 = 0, $$2164 = 0, $$2164$pn = 0, $$3 = 0, $$3$in = 0, $$3165 = 0, $$4 = 0, $$4166 = 0, $$5 = 0, $$5167 = 0, $$6 = 0, $$6168 = 0, $$7 = 0, $$7169 = 0, $$8 = 0, $$8170 = 0, $101 = 0, $102 = 0, $11 = 0, $117 = 0, $118 = 0, $121 = 0, $128 = 0, $129 = 0, $132 = 0, $142 = 0, $144 = 0, $146 = 0, $147 = 0, $161 = 0, $2 = 0, $21 = 0, $22 = 0, $25 = 0, $3 = 0, $33 = 0, $34 = 0, $37 = 0, $4 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $59 = 0, $6 = 0, $63 = 0, $64 = 0, $65 = 0, $67 = 0, $73 = 0, $74 = 0, $76 = 0, $84 = 0, $86 = 0, $92 = 0, $99 = 0, label = 0;
 $2 = HEAP32[$0 + 24 >> 2] | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $2 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $6 = $0 + 440 | 0;
 if (!(HEAP32[(HEAP32[$6 >> 2] | 0) + 16 >> 2] | 0)) {
  $11 = HEAP32[$0 >> 2] | 0;
  HEAP32[$11 + 20 >> 2] = 62;
  FUNCTION_TABLE_vi[HEAP32[$11 >> 2] & 255]($0);
 }
 if (!$5) if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) $$0 = 0; else {
  $$0161 = HEAP32[$4 >> 2] | 0;
  $$0162 = HEAP32[$2 >> 2] | 0;
  label = 6;
 } else {
  $$0161 = $5;
  $$0162 = $3;
  label = 6;
 }
 L7 : do if ((label | 0) == 6) {
  $21 = $$0161 + -1 | 0;
  $22 = $$0162 + 1 | 0;
  $25 = (HEAPU8[$$0162 >> 0] | 0) << 8;
  if (!$21) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$1 = HEAP32[$4 >> 2] | 0;
   $$1163 = HEAP32[$2 >> 2] | 0;
  } else {
   $$1 = $21;
   $$1163 = $22;
  }
  $33 = $$1 + -1 | 0;
  $34 = $$1163 + 1 | 0;
  $37 = $25 | (HEAPU8[$$1163 >> 0] | 0);
  if (!$33) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$2 = HEAP32[$4 >> 2] | 0;
   $$2164 = HEAP32[$2 >> 2] | 0;
  } else {
   $$2 = $33;
   $$2164 = $34;
  }
  $45 = HEAP8[$$2164 >> 0] | 0;
  $46 = $45 & 255;
  $47 = HEAP32[$0 >> 2] | 0;
  HEAP32[$47 + 20 >> 2] = 103;
  HEAP32[$47 + 24 >> 2] = $46;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
  if (($45 + -1 & 255) > 3 | ($37 | 0) != (($46 << 1) + 6 | 0)) {
   $59 = HEAP32[$0 >> 2] | 0;
   HEAP32[$59 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[$59 >> 2] & 255]($0);
  }
  HEAP32[$0 + 328 >> 2] = $46;
  $63 = $2 + 12 | 0;
  $64 = $0 + 216 | 0;
  $65 = $0 + 36 | 0;
  $$0171 = 0;
  $$2164$pn = $$2164;
  $$3$in = $$2;
  while (1) {
   $$3 = $$3$in + -1 | 0;
   $$3165 = $$2164$pn + 1 | 0;
   $67 = ($$3 | 0) == 0;
   if ($$0171 >>> 0 >= $46 >>> 0) break;
   if ($67) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$63 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     break L7;
    }
    $$4 = HEAP32[$4 >> 2] | 0;
    $$4166 = HEAP32[$2 >> 2] | 0;
   } else {
    $$4 = $$3;
    $$4166 = $$3165;
   }
   $73 = $$4 + -1 | 0;
   $74 = $$4166 + 1 | 0;
   $76 = HEAPU8[$$4166 >> 0] | 0;
   if (!$73) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$63 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     break L7;
    }
    $$5 = HEAP32[$4 >> 2] | 0;
    $$5167 = HEAP32[$2 >> 2] | 0;
   } else {
    $$5 = $73;
    $$5167 = $74;
   }
   $84 = HEAPU8[$$5167 >> 0] | 0;
   $86 = HEAP32[$65 >> 2] | 0;
   $$0172 = HEAP32[$64 >> 2] | 0;
   $$0173 = 0;
   while (1) {
    if (($$0173 | 0) >= ($86 | 0)) {
     label = 26;
     break;
    }
    if ((HEAP32[$$0172 >> 2] | 0) == ($76 | 0)) break;
    $$0172 = $$0172 + 84 | 0;
    $$0173 = $$0173 + 1 | 0;
   }
   if ((label | 0) == 26) {
    label = 0;
    $92 = HEAP32[$0 >> 2] | 0;
    HEAP32[$92 + 20 >> 2] = 5;
    HEAP32[$92 + 24 >> 2] = $76;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
   HEAP32[$0 + 332 + ($$0171 << 2) >> 2] = $$0172;
   $99 = $$0172 + 20 | 0;
   HEAP32[$99 >> 2] = $84 >>> 4;
   $101 = $$0172 + 24 | 0;
   HEAP32[$101 >> 2] = $84 & 15;
   $102 = HEAP32[$0 >> 2] | 0;
   HEAP32[$102 + 24 >> 2] = $76;
   HEAP32[$102 + 28 >> 2] = HEAP32[$99 >> 2];
   HEAP32[$102 + 32 >> 2] = HEAP32[$101 >> 2];
   HEAP32[$102 + 20 >> 2] = 104;
   FUNCTION_TABLE_vii[HEAP32[$102 + 4 >> 2] & 63]($0, 1);
   $$0171 = $$0171 + 1 | 0;
   $$2164$pn = $$5167;
   $$3$in = $$5;
  }
  if ($67) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$63 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$6 = HEAP32[$4 >> 2] | 0;
   $$6168 = HEAP32[$2 >> 2] | 0;
  } else {
   $$6 = $$3;
   $$6168 = $$3165;
  }
  $117 = $$6 + -1 | 0;
  $118 = $$6168 + 1 | 0;
  $121 = $0 + 400 | 0;
  HEAP32[$121 >> 2] = HEAPU8[$$6168 >> 0];
  if (!$117) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$63 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$7 = HEAP32[$4 >> 2] | 0;
   $$7169 = HEAP32[$2 >> 2] | 0;
  } else {
   $$7 = $117;
   $$7169 = $118;
  }
  $128 = $$7 + -1 | 0;
  $129 = $$7169 + 1 | 0;
  $132 = $0 + 404 | 0;
  HEAP32[$132 >> 2] = HEAPU8[$$7169 >> 0];
  if (!$128) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$63 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$8 = HEAP32[$4 >> 2] | 0;
   $$8170 = HEAP32[$2 >> 2] | 0;
  } else {
   $$8 = $128;
   $$8170 = $129;
  }
  $142 = HEAPU8[$$8170 >> 0] | 0;
  $144 = $0 + 408 | 0;
  HEAP32[$144 >> 2] = $142 >>> 4;
  $146 = $0 + 412 | 0;
  HEAP32[$146 >> 2] = $142 & 15;
  $147 = HEAP32[$0 >> 2] | 0;
  HEAP32[$147 + 24 >> 2] = HEAP32[$121 >> 2];
  HEAP32[$147 + 28 >> 2] = HEAP32[$132 >> 2];
  HEAP32[$147 + 32 >> 2] = HEAP32[$144 >> 2];
  HEAP32[$147 + 36 >> 2] = HEAP32[$146 >> 2];
  HEAP32[$147 + 20 >> 2] = 105;
  FUNCTION_TABLE_vii[HEAP32[$147 + 4 >> 2] & 63]($0, 1);
  HEAP32[(HEAP32[$6 >> 2] | 0) + 20 >> 2] = 0;
  $161 = $0 + 144 | 0;
  HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + 1;
  HEAP32[$2 >> 2] = $$8170 + 1;
  HEAP32[$4 >> 2] = $$8 + -1;
  $$0 = 1;
 } while (0);
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0$i$i = 0, $$032$ph = 0, $$032$ph$be = 0, $$034 = 0, $$034$ph = 0, $$1 = 0, $$2 = 0, $$2$pn = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $30 = 0, $31 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $5 = 0, $50 = 0, $51 = 0, $53 = 0, $54 = 0, $56 = 0, $60 = 0, $66 = 0, label = 0;
 $2 = $1 + 11 | 0;
 $3 = HEAP8[$2 >> 0] | 0;
 $5 = $1 + 4 | 0;
 L1 : do if (!(($3 << 24 >> 24 < 0 ? HEAP32[$5 >> 2] | 0 : $3 & 255) | 0)) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($0, $1); else {
  $10 = __ZNSt3__211char_traitsIcE6lengthEPKc(50451) | 0;
  $11 = HEAP8[$2 >> 0] | 0;
  if (($10 | 0) == (($11 << 24 >> 24 < 0 ? HEAP32[$5 >> 2] | 0 : $11 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($1, 50451, $10) | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($1, 50463);
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, 50534, __ZNSt3__211char_traitsIcE6lengthEPKc(50534) | 0);
   break;
  }
  $20 = __ZNSt3__211char_traitsIcE6lengthEPKc(50547) | 0;
  $21 = HEAP8[$2 >> 0] | 0;
  if (($20 | 0) == (($21 << 24 >> 24 < 0 ? HEAP32[$5 >> 2] | 0 : $21 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($1, 50547, $20) | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($1, 50560);
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, 50610, __ZNSt3__211char_traitsIcE6lengthEPKc(50610) | 0);
   break;
  }
  $30 = __ZNSt3__211char_traitsIcE6lengthEPKc(50624) | 0;
  $31 = HEAP8[$2 >> 0] | 0;
  if (($30 | 0) == (($31 << 24 >> 24 < 0 ? HEAP32[$5 >> 2] | 0 : $31 & 255) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($1, 50624, $30) | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($1, 50637);
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, 50687, __ZNSt3__211char_traitsIcE6lengthEPKc(50687) | 0);
   break;
  }
  $40 = __ZNSt3__211char_traitsIcE6lengthEPKc(50701) | 0;
  $41 = HEAP8[$2 >> 0] | 0;
  $43 = HEAP32[$5 >> 2] | 0;
  $44 = $41 & 255;
  do if (($40 | 0) == (($41 << 24 >> 24 < 0 ? $43 : $44) | 0)) if (!(__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($1, 50701, $40) | 0)) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($1, 50715);
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, 50766, __ZNSt3__211char_traitsIcE6lengthEPKc(50766) | 0);
   break L1;
  } else {
   $$pre = HEAP8[$2 >> 0] | 0;
   $$pre$phiZ2D = $$pre & 255;
   $50 = $$pre;
   $54 = HEAP32[$5 >> 2] | 0;
   break;
  } else {
   $$pre$phiZ2D = $44;
   $50 = $41;
   $54 = $43;
  } while (0);
  $51 = $50 << 24 >> 24 < 0;
  $53 = $51 ? HEAP32[$1 >> 2] | 0 : $1;
  $56 = $53 + ($51 ? $54 : $$pre$phiZ2D) | 0;
  do if ((HEAP8[$56 + -1 >> 0] | 0) == 62) {
   $$032$ph = 1;
   $$034$ph = $56;
   L24 : while (1) {
    $$034 = $$034$ph;
    L26 : while (1) {
     $60 = $$034 + -1 | 0;
     if (($60 | 0) == ($53 | 0)) break L24;
     switch (HEAP8[$$034 + -2 >> 0] | 0) {
     case 60:
      {
       label = 24;
       break L26;
       break;
      }
     case 62:
      {
       label = 25;
       break L26;
       break;
      }
     default:
      $$034 = $60;
     }
    }
    if ((label | 0) == 24) {
     label = 0;
     $66 = $$032$ph + -1 | 0;
     if (!$66) {
      label = 27;
      break;
     } else $$032$ph$be = $66;
    } else if ((label | 0) == 25) {
     label = 0;
     $$032$ph$be = $$032$ph + 1 | 0;
    }
    $$032$ph = $$032$ph$be;
    $$034$ph = $60;
   }
   if ((label | 0) == 27) {
    $$2 = $$034 + -2 | 0;
    break;
   };
   HEAP32[$0 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break L1;
    HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
  } else $$2 = $56; while (0);
  $$2$pn = $$2;
  while (1) {
   $$0 = $$2$pn + -1 | 0;
   if (($$0 | 0) == ($53 | 0)) {
    $$1 = $53;
    break;
   }
   if ((HEAP8[$$0 >> 0] | 0) == 58) {
    $$1 = $$2$pn;
    break;
   } else $$2$pn = $$0;
  }
  HEAP32[$0 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  HEAP32[$0 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($0, $$1, $$2);
 } while (0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_local_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i79 = 0, $$0$i$i$add$i83 = 0, $$0$i$i$add$i88 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i78 = 0, $$0$i$i$idx$i82 = 0, $$0$i$i$idx$i87 = 0, $$4 = 0, $13 = 0, $18 = 0, $21 = 0, $24 = 0, $26 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $41 = 0, $48 = 0, $49 = 0, $56 = 0, $59 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $70 = 0, $77 = 0, $78 = 0, $8 = 0, $85 = 0, $86 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 L1 : do if (($0 | 0) == ($1 | 0)) $$4 = $0; else if ((HEAP8[$0 >> 0] | 0) == 90) {
  $7 = $0 + 1 | 0;
  $8 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($7, $1, $2) | 0;
  if (($8 | 0) == ($7 | 0) | ($8 | 0) == ($1 | 0)) $$4 = $0; else if ((HEAP8[$8 >> 0] | 0) == 69) {
   $13 = $8 + 1 | 0;
   if (($13 | 0) == ($1 | 0)) $$4 = $0; else switch (HEAP8[$13 >> 0] | 0) {
   case 115:
    {
     $18 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($8 + 2 | 0, $1) | 0;
     $21 = HEAP32[$2 + 4 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) {
      $$4 = $18;
      break L1;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($21 + -24 | 0, 50990) | 0;
     $$4 = $18;
     break L1;
     break;
    }
   case 100:
    {
     $24 = $8 + 2 | 0;
     if (($24 | 0) == ($1 | 0)) {
      $$4 = $0;
      break L1;
     }
     $26 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($24, $1) | 0;
     if (($26 | 0) == ($1 | 0)) {
      $$4 = $0;
      break L1;
     }
     if ((HEAP8[$26 >> 0] | 0) != 95) {
      $$4 = $0;
      break L1;
     }
     $30 = $26 + 1 | 0;
     $31 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($30, $1, $2) | 0;
     $33 = $2 + 4 | 0;
     if (($31 | 0) == ($30 | 0)) {
      $56 = HEAP32[$33 >> 2] | 0;
      $$0$i$i$idx$i78 = 0;
      while (1) {
       if (($$0$i$i$idx$i78 | 0) == -1) break;
       $$0$i$i$add$i79 = $$0$i$i$idx$i78 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($56 + ($$0$i$i$add$i79 * 24 | 0) | 0);
       $$0$i$i$idx$i78 = $$0$i$i$add$i79;
      }
      HEAP32[$33 >> 2] = $56 + -24;
      $$4 = $0;
      break L1;
     }
     $34 = HEAP32[$33 >> 2] | 0;
     if ((($34 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$4 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $34 + -24 | 0);
     $41 = HEAP32[$33 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($41 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$33 >> 2] = $41 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($41 + -48 | 0, 49703) | 0;
     $48 = HEAP8[$3 + 11 >> 0] | 0;
     $49 = $48 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$33 >> 2] | 0) + -24 | 0, $49 ? HEAP32[$3 >> 2] | 0 : $3, $49 ? HEAP32[$3 + 4 >> 2] | 0 : $48 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$4 = $31;
     break L1;
     break;
    }
   default:
    {
     $59 = __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
     if (($59 | 0) == ($13 | 0)) {
      $85 = $2 + 4 | 0;
      $86 = HEAP32[$85 >> 2] | 0;
      $$0$i$i$idx$i87 = 0;
      while (1) {
       if (($$0$i$i$idx$i87 | 0) == -1) break;
       $$0$i$i$add$i88 = $$0$i$i$idx$i87 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($86 + ($$0$i$i$add$i88 * 24 | 0) | 0);
       $$0$i$i$idx$i87 = $$0$i$i$add$i88;
      }
      HEAP32[$85 >> 2] = $86 + -24;
      $$4 = $0;
      break L1;
     }
     $61 = __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($59, $1) | 0;
     $62 = $2 + 4 | 0;
     $63 = HEAP32[$62 >> 2] | 0;
     if ((($63 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$4 = $61;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $63 + -24 | 0);
     $70 = HEAP32[$62 >> 2] | 0;
     $$0$i$i$idx$i82 = 0;
     while (1) {
      if (($$0$i$i$idx$i82 | 0) == -1) break;
      $$0$i$i$add$i83 = $$0$i$i$idx$i82 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($70 + ($$0$i$i$add$i83 * 24 | 0) | 0);
      $$0$i$i$idx$i82 = $$0$i$i$add$i83;
     }
     HEAP32[$62 >> 2] = $70 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($70 + -48 | 0, 49703) | 0;
     $77 = HEAP8[$3 + 11 >> 0] | 0;
     $78 = $77 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$62 >> 2] | 0) + -24 | 0, $78 ? HEAP32[$3 >> 2] | 0 : $3, $78 ? HEAP32[$3 + 4 >> 2] | 0 : $77 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$4 = $61;
     break L1;
    }
   }
  } else $$4 = $0;
 } else $$4 = $0; while (0);
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZNSt3__26locale5__impC2Em($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $5 = 0;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 16836;
 $4 = $0 + 8 | 0;
 __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em($4, 28);
 $5 = $0 + 144 | 0;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($5, 46757, __ZNSt3__211char_traitsIcE6lengthEPKc(46757) | 0);
 HEAP32[$0 + 12 >> 2] = HEAP32[$4 >> 2];
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_($0, 55632);
 __ZNSt3__212_GLOBAL__N_14makeINS_7collateIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_($0, 55640);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIcEEDnbjEERT_T0_T1_T2_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_($0, 55648);
 __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_($0, 55664);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIcc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($0, 55672);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIwc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($0, 55680);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDsc11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($0, 55696);
 __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDic11__mbstate_tEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($0, 55704);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_($0, 55712);
 __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_($0, 55736);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 55768);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 55776);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 55784);
 __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 55792);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($0, 55800);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($0, 55808);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($0, 55816);
 __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($0, 55824);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 55832);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 55840);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 55848);
 __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 55856);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 55864);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 55880);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, 55896);
 __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, 55912);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIcEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_($0, 55928);
 __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIwEEjEERT_T0_();
 __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_($0, 55936);
 return;
}

function _arVecTridiagonalize($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0158 = 0, $$0160 = 0, $$0164 = 0, $$0165 = 0.0, $$1 = 0, $$1$in = 0, $$1$in$ph = 0, $$1159 = 0, $$1161 = 0, $$1161$in = 0, $$1166 = 0.0, $$2 = 0, $$2162 = 0, $$3 = 0, $$3163 = 0, $$pre$phiZ2D = 0, $$sink = 0.0, $$sink171 = 0, $106 = 0, $107 = 0, $110 = 0, $114 = 0, $117 = 0, $118 = 0, $121 = 0, $124 = 0.0, $131 = 0, $17 = 0, $18 = 0, $19 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0.0, $4 = 0, $41 = 0, $46 = 0.0, $48 = 0, $57 = 0.0, $6 = 0, $65 = 0.0, $68 = 0.0, $70 = 0, $71 = 0, $73 = 0.0, $74 = 0, $85 = 0, $90 = 0, $91 = 0, $95 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp + 8 | 0;
 $4 = sp;
 $6 = HEAP32[$0 + 8 >> 2] | 0;
 L1 : do if (($6 | 0) == (HEAP32[$0 + 4 >> 2] | 0)) if (($6 | 0) == (HEAP32[$1 + 4 >> 2] | 0)) if (($6 | 0) == ((HEAP32[$2 + 4 >> 2] | 0) + 1 | 0)) {
  $17 = $6 + -2 | 0;
  $18 = $3 + 4 | 0;
  $19 = $4 + 4 | 0;
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= ($17 | 0)) break;
   $23 = (HEAP32[$0 >> 2] | 0) + ((Math_imul($$0, $6) | 0) << 3) | 0;
   HEAPF64[(HEAP32[$1 >> 2] | 0) + ($$0 << 3) >> 3] = +HEAPF64[$23 + ($$0 << 3) >> 3];
   $29 = $6 - $$0 + -1 | 0;
   HEAP32[$18 >> 2] = $29;
   $30 = $$0 + 1 | 0;
   $31 = $23 + ($30 << 3) | 0;
   HEAP32[$3 >> 2] = $31;
   $32 = +_arVecHousehold($3);
   HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$0 << 3) >> 3] = $32;
   L8 : do if (!($32 == 0.0)) {
    $$0160 = $30;
    while (1) {
     if (($$0160 | 0) >= ($6 | 0)) break;
     $$0158 = $30;
     $$0165 = 0.0;
     while (1) {
      if ($$0158 >>> 0 >= $$0160 >>> 0) break;
      $41 = (HEAP32[$0 >> 2] | 0) + ((Math_imul($$0158, $6) | 0) + $$0160 << 3) | 0;
      $46 = $$0165 + +HEAPF64[$41 >> 3] * +HEAPF64[$23 + ($$0158 << 3) >> 3];
      $$0158 = $$0158 + 1 | 0;
      $$0165 = $46;
     }
     $48 = Math_imul($$0160, $6) | 0;
     $$1159 = $$0160;
     $$1166 = $$0165;
     while (1) {
      if (($$1159 | 0) >= ($6 | 0)) break;
      $57 = $$1166 + +HEAPF64[(HEAP32[$0 >> 2] | 0) + ($$1159 + $48 << 3) >> 3] * +HEAPF64[$23 + ($$1159 << 3) >> 3];
      $$1159 = $$1159 + 1 | 0;
      $$1166 = $57;
     }
     HEAPF64[(HEAP32[$1 >> 2] | 0) + ($$0160 << 3) >> 3] = $$1166;
     $$0160 = $$0160 + 1 | 0;
    }
    HEAP32[$19 >> 2] = $29;
    HEAP32[$18 >> 2] = $29;
    HEAP32[$3 >> 2] = $31;
    HEAP32[$4 >> 2] = (HEAP32[$1 >> 2] | 0) + ($30 << 3);
    $65 = +_arVecInnerproduct($3, $4) * .5;
    $$1161$in = $6;
    while (1) {
     $$1161 = $$1161$in + -1 | 0;
     if (($$1161 | 0) <= ($$0 | 0)) break L8;
     $68 = +HEAPF64[$23 + ($$1161 << 3) >> 3];
     $70 = HEAP32[$1 >> 2] | 0;
     $71 = $70 + ($$1161 << 3) | 0;
     $73 = +HEAPF64[$71 >> 3] - $65 * $68;
     HEAPF64[$71 >> 3] = $73;
     $74 = Math_imul($$1161, $6) | 0;
     $$2 = $$1161;
     while (1) {
      if (($$2 | 0) >= ($6 | 0)) break;
      $85 = (HEAP32[$0 >> 2] | 0) + ($$2 + $74 << 3) | 0;
      HEAPF64[$85 >> 3] = +HEAPF64[$85 >> 3] - ($68 * +HEAPF64[$70 + ($$2 << 3) >> 3] + $73 * +HEAPF64[$23 + ($$2 << 3) >> 3]);
      $$2 = $$2 + 1 | 0;
     }
     $$1161$in = $$1161;
    }
   } while (0);
   $$0 = $30;
  }
  if (($6 | 0) > 1) {
   $90 = HEAP32[$0 >> 2] | 0;
   $91 = Math_imul($17, $6) | 0;
   $95 = HEAP32[$1 >> 2] | 0;
   HEAPF64[$95 + ($17 << 3) >> 3] = +HEAPF64[$90 + ($91 + $17 << 3) >> 3];
   $97 = $6 + -1 | 0;
   HEAPF64[(HEAP32[$2 >> 2] | 0) + ($17 << 3) >> 3] = +HEAPF64[$90 + ($97 + $91 << 3) >> 3];
   $$pre$phiZ2D = $97;
   $107 = $90;
   $110 = $95;
   label = 27;
  } else if (($6 | 0) == 1) {
   $$pre$phiZ2D = 0;
   $107 = HEAP32[$0 >> 2] | 0;
   $110 = HEAP32[$1 >> 2] | 0;
   label = 27;
  } else $$1$in = $6;
  if ((label | 0) == 27) {
   $106 = $107 + ((Math_imul($$pre$phiZ2D, $6) | 0) + $$pre$phiZ2D << 3) | 0;
   $$1$in$ph = $6;
   $$sink = +HEAPF64[$106 >> 3];
   $$sink171 = $110 + ($$pre$phiZ2D << 3) | 0;
   label = 28;
  }
  while (1) {
   if ((label | 0) == 28) {
    label = 0;
    HEAPF64[$$sink171 >> 3] = $$sink;
    $$1$in = $$1$in$ph;
   }
   $$1 = $$1$in + -1 | 0;
   if (($$1$in | 0) <= 0) {
    $$0164 = 0;
    break L1;
   }
   $114 = (HEAP32[$0 >> 2] | 0) + ((Math_imul($$1, $6) | 0) << 3) | 0;
   L42 : do if (($$1$in | 0) <= ($17 | 0)) {
    $117 = $6 - $$1 + -1 | 0;
    $118 = $114 + ($$1$in << 3) | 0;
    $$2162 = $$1$in;
    while (1) {
     if (($$2162 | 0) >= ($6 | 0)) break L42;
     HEAP32[$19 >> 2] = $117;
     HEAP32[$18 >> 2] = $117;
     HEAP32[$3 >> 2] = $118;
     $121 = Math_imul($$2162, $6) | 0;
     HEAP32[$4 >> 2] = (HEAP32[$0 >> 2] | 0) + ($121 + $$1$in << 3);
     $124 = +_arVecInnerproduct($3, $4);
     $$3 = $$1$in;
     while (1) {
      if (($$3 | 0) >= ($6 | 0)) break;
      $131 = (HEAP32[$0 >> 2] | 0) + ($$3 + $121 << 3) | 0;
      HEAPF64[$131 >> 3] = +HEAPF64[$131 >> 3] - $124 * +HEAPF64[$114 + ($$3 << 3) >> 3];
      $$3 = $$3 + 1 | 0;
     }
     $$2162 = $$2162 + 1 | 0;
    }
   } while (0);
   $$3163 = 0;
   while (1) {
    if (($$3163 | 0) >= ($6 | 0)) break;
    HEAPF64[$114 + ($$3163 << 3) >> 3] = 0.0;
    $$3163 = $$3163 + 1 | 0;
   }
   $$1$in$ph = $$1;
   $$sink = 1.0;
   $$sink171 = $114 + ($$1 << 3) | 0;
   label = 28;
  }
 } else $$0164 = -1; else $$0164 = -1; else $$0164 = -1; while (0);
 STACKTOP = sp;
 return $$0164 | 0;
}

function __ZN6vision21HoughSimilarityVoting11voteAtIndexEij($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i$i$i = 0, $$052$i$i$i$i$i = 0, $$153$i$i$i$i$i = 0, $$pn$i$i$i$i$i = 0, $$pre$phi$i$i$i$i$iZ2D = 0, $102 = 0, $108 = 0, $11 = 0, $16 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $30 = 0, $36 = 0, $37 = 0, $4 = 0, $41 = 0, $46 = 0, $51 = 0, $54 = 0.0, $57 = 0.0, $67 = 0, $70 = 0, $72 = 0, $73 = 0, $81 = 0, $83 = 0, $89 = 0, $90 = 0, $93 = 0, $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp + 8 | 0;
 $4 = sp;
 if (($1 | 0) <= -1) {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30875) | 0, 30431) | 0, 33528) | 0, 290) | 0, 33535) | 0, 30909) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 63]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 $21 = $0 + 92 | 0;
 HEAP32[$3 >> 2] = $1;
 $22 = __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE4findIjEENS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_($21, $3) | 0;
 if (!$22) {
  HEAP32[$4 >> 2] = $1;
  HEAP32[$4 + 4 >> 2] = $2;
  $25 = $0 + 96 | 0;
  $26 = HEAP32[$25 >> 2] | 0;
  $27 = ($26 | 0) == 0;
  L6 : do if ($27) {
   $$052$i$i$i$i$i = 0;
   label = 19;
  } else {
   $28 = $26 + -1 | 0;
   $30 = ($28 & $26 | 0) == 0;
   if ($30) $36 = $28 & $1; else if ($26 >>> 0 > $1 >>> 0) $36 = $1; else $36 = ($1 >>> 0) % ($26 >>> 0) | 0;
   $37 = HEAP32[(HEAP32[$21 >> 2] | 0) + ($36 << 2) >> 2] | 0;
   if (!$37) {
    $$052$i$i$i$i$i = $36;
    label = 19;
   } else {
    $$pn$i$i$i$i$i = $37;
    do {
     $$pn$i$i$i$i$i = HEAP32[$$pn$i$i$i$i$i >> 2] | 0;
     if (!$$pn$i$i$i$i$i) {
      $$052$i$i$i$i$i = $36;
      label = 19;
      break L6;
     }
     $41 = HEAP32[$$pn$i$i$i$i$i + 4 >> 2] | 0;
     if (($41 | 0) != ($1 | 0)) {
      if ($30) $46 = $41 & $28; else if ($41 >>> 0 < $26 >>> 0) $46 = $41; else $46 = ($41 >>> 0) % ($26 >>> 0) | 0;
      if (($46 | 0) != ($36 | 0)) {
       $$052$i$i$i$i$i = $36;
       label = 19;
       break L6;
      }
     }
    } while ((HEAP32[$$pn$i$i$i$i$i + 8 >> 2] | 0) != ($1 | 0));
   }
  } while (0);
  if ((label | 0) == 19) {
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE21__construct_node_hashINS_4pairIjjEEJEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISK_EEEEEEmOT_DpOT0_($3, $21, $1, $4);
   $51 = $0 + 104 | 0;
   $54 = +(((HEAP32[$51 >> 2] | 0) + 1 | 0) >>> 0);
   $57 = +HEAPF32[$0 + 108 >> 2];
   do if ($27 | $57 * +($26 >>> 0) < $54) {
    $67 = $26 << 1 | ($26 >>> 0 < 3 | ($26 + -1 & $26 | 0) != 0) & 1;
    $70 = ~~+Math_ceil(+($54 / $57)) >>> 0;
    __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE6rehashEm($21, $67 >>> 0 < $70 >>> 0 ? $70 : $67);
    $72 = HEAP32[$25 >> 2] | 0;
    $73 = $72 + -1 | 0;
    if (!($73 & $72)) {
     $$0$i$i$i$i$i = $72;
     $$153$i$i$i$i$i = $73 & $1;
     break;
    }
    if ($72 >>> 0 > $1 >>> 0) {
     $$0$i$i$i$i$i = $72;
     $$153$i$i$i$i$i = $1;
    } else {
     $$0$i$i$i$i$i = $72;
     $$153$i$i$i$i$i = ($1 >>> 0) % ($72 >>> 0) | 0;
    }
   } else {
    $$0$i$i$i$i$i = $26;
    $$153$i$i$i$i$i = $$052$i$i$i$i$i;
   } while (0);
   $81 = HEAP32[(HEAP32[$21 >> 2] | 0) + ($$153$i$i$i$i$i << 2) >> 2] | 0;
   if (!$81) {
    $83 = $0 + 100 | 0;
    HEAP32[HEAP32[$3 >> 2] >> 2] = HEAP32[$83 >> 2];
    HEAP32[$83 >> 2] = HEAP32[$3 >> 2];
    HEAP32[(HEAP32[$21 >> 2] | 0) + ($$153$i$i$i$i$i << 2) >> 2] = $83;
    $89 = HEAP32[$3 >> 2] | 0;
    $90 = HEAP32[$89 >> 2] | 0;
    if (!$90) $$pre$phi$i$i$i$i$iZ2D = $3; else {
     $93 = HEAP32[$90 + 4 >> 2] | 0;
     $94 = $$0$i$i$i$i$i + -1 | 0;
     if (!($94 & $$0$i$i$i$i$i)) $102 = $93 & $94; else if ($93 >>> 0 < $$0$i$i$i$i$i >>> 0) $102 = $93; else $102 = ($93 >>> 0) % ($$0$i$i$i$i$i >>> 0) | 0;
     HEAP32[(HEAP32[$21 >> 2] | 0) + ($102 << 2) >> 2] = $89;
     $$pre$phi$i$i$i$i$iZ2D = $3;
    }
   } else {
    HEAP32[HEAP32[$3 >> 2] >> 2] = HEAP32[$81 >> 2];
    HEAP32[$81 >> 2] = HEAP32[$3 >> 2];
    $$pre$phi$i$i$i$i$iZ2D = $3;
   }
   HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + 1;
   HEAP32[$$pre$phi$i$i$i$i$iZ2D >> 2] = 0;
  }
 } else {
  $108 = $22 + 12 | 0;
  HEAP32[$108 >> 2] = (HEAP32[$108 >> 2] | 0) + $2;
 }
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110parse_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i91 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i90 = 0, $$3 = 0, $14 = 0, $16 = 0, $18 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $3 = 0, $34 = 0, $35 = 0, $39 = 0, $4 = 0, $41 = 0, $46 = 0, $48 = 0, $55 = 0, $60 = 0, $61 = 0, $68 = 0, $73 = 0, $75 = 0, $76 = 0, $83 = 0, $88 = 0, $89 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp + 8 | 0;
 $4 = sp;
 L1 : do if (($1 - $0 | 0) > 1) {
  $spec$select = (HEAP8[$0 >> 0] | 0) == 76 ? $0 + 1 | 0 : $0;
  switch (HEAP8[$spec$select >> 0] | 0) {
  case 78:
   {
    $14 = __ZN10__cxxabiv112_GLOBAL__N_117parse_nested_nameINS0_2DbEEEPKcS4_S4_RT_($spec$select, $1, $2) | 0;
    $$3 = ($14 | 0) == ($spec$select | 0) ? $0 : $14;
    break L1;
    break;
   }
  case 90:
   {
    $16 = __ZN10__cxxabiv112_GLOBAL__N_116parse_local_nameINS0_2DbEEEPKcS4_S4_RT_($spec$select, $1, $2) | 0;
    $$3 = ($16 | 0) == ($spec$select | 0) ? $0 : $16;
    break L1;
    break;
   }
  default:
   {
    $18 = __ZN10__cxxabiv112_GLOBAL__N_119parse_unscoped_nameINS0_2DbEEEPKcS4_S4_RT_($spec$select, $1, $2) | 0;
    if (($18 | 0) == ($spec$select | 0)) {
     $68 = __ZN10__cxxabiv112_GLOBAL__N_118parse_substitutionINS0_2DbEEEPKcS4_S4_RT_($spec$select, $1, $2) | 0;
     if (($68 | 0) == ($spec$select | 0) | ($68 | 0) == ($1 | 0)) {
      $$3 = $0;
      break L1;
     }
     if ((HEAP8[$68 >> 0] | 0) != 73) {
      $$3 = $0;
      break L1;
     }
     $73 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($68, $1, $2) | 0;
     if (($73 | 0) == ($68 | 0)) {
      $$3 = $0;
      break L1;
     }
     $75 = $2 + 4 | 0;
     $76 = HEAP32[$75 >> 2] | 0;
     if ((($76 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$3 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $76 + -24 | 0);
     $83 = HEAP32[$75 >> 2] | 0;
     $$0$i$i$idx$i90 = 0;
     while (1) {
      if (($$0$i$i$idx$i90 | 0) == -1) break;
      $$0$i$i$add$i91 = $$0$i$i$idx$i90 + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($83 + ($$0$i$i$add$i91 * 24 | 0) | 0);
      $$0$i$i$idx$i90 = $$0$i$i$add$i91;
     }
     HEAP32[$75 >> 2] = $83 + -24;
     $88 = HEAP8[$3 + 11 >> 0] | 0;
     $89 = $88 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($83 + -48 | 0, $89 ? HEAP32[$3 >> 2] | 0 : $3, $89 ? HEAP32[$3 + 4 >> 2] | 0 : $88 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $73;
     break L1;
    }
    if (($18 | 0) == ($1 | 0)) {
     $$3 = $1;
     break L1;
    }
    if ((HEAP8[$18 >> 0] | 0) != 73) {
     $$3 = $18;
     break L1;
    }
    $24 = $2 + 4 | 0;
    $25 = HEAP32[$24 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($25 | 0)) {
     $$3 = $0;
     break L1;
    }
    HEAP32[$4 >> 2] = HEAP32[$2 + 12 >> 2];
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($3, $25 + -24 | 0, $4);
    $28 = $2 + 20 | 0;
    $29 = HEAP32[$28 >> 2] | 0;
    if ($29 >>> 0 < (HEAP32[$2 + 24 >> 2] | 0) >>> 0) {
     HEAP32[$29 >> 2] = 0;
     $34 = $29 + 4 | 0;
     HEAP32[$34 >> 2] = 0;
     $35 = $29 + 8 | 0;
     HEAP32[$35 >> 2] = 0;
     HEAP32[$29 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
     HEAP32[$29 >> 2] = HEAP32[$3 >> 2];
     $39 = $3 + 4 | 0;
     HEAP32[$34 >> 2] = HEAP32[$39 >> 2];
     $41 = $3 + 8 | 0;
     HEAP32[$35 >> 2] = HEAP32[$41 >> 2];
     HEAP32[$41 >> 2] = 0;
     HEAP32[$39 >> 2] = 0;
     HEAP32[$3 >> 2] = 0;
     HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 16;
    } else __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($2 + 16 | 0, $3);
    __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($3);
    $46 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($18, $1, $2) | 0;
    if (($46 | 0) == ($18 | 0)) {
     $$3 = $0;
     break L1;
    }
    $48 = HEAP32[$24 >> 2] | 0;
    if ((($48 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
     $$3 = $0;
     break L1;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $48 + -24 | 0);
    $55 = HEAP32[$24 >> 2] | 0;
    $$0$i$i$idx$i = 0;
    while (1) {
     if (($$0$i$i$idx$i | 0) == -1) break;
     $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($55 + ($$0$i$i$add$i * 24 | 0) | 0);
     $$0$i$i$idx$i = $$0$i$i$add$i;
    }
    HEAP32[$24 >> 2] = $55 + -24;
    $60 = HEAP8[$3 + 11 >> 0] | 0;
    $61 = $60 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($55 + -48 | 0, $61 ? HEAP32[$3 >> 2] | 0 : $3, $61 ? HEAP32[$3 + 4 >> 2] | 0 : $60 & 255) | 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$3 = $46;
    break L1;
   }
  }
 } else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function _jpeg_idct_float($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0242 = 0, $$0244 = 0, $$0246 = 0, $$1 = 0, $$2 = 0, $$sink = 0.0, $$sink249 = 0, $103 = 0.0, $108 = 0.0, $109 = 0.0, $110 = 0.0, $12 = 0, $127 = 0, $130 = 0, $131 = 0.0, $133 = 0.0, $134 = 0.0, $135 = 0.0, $137 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $149 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0.0, $155 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $160 = 0.0, $164 = 0.0, $169 = 0.0, $170 = 0.0, $171 = 0.0, $35 = 0.0, $45 = 0.0, $47 = 0, $5 = 0, $50 = 0.0, $56 = 0.0, $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0.0, $71 = 0.0, $72 = 0.0, $76 = 0.0, $82 = 0.0, $88 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $5 = sp;
 $7 = HEAP32[$0 + 324 >> 2] | 0;
 $$0 = 8;
 $$0242 = $5;
 $$0244 = HEAP32[$1 + 80 >> 2] | 0;
 $$0246 = $2;
 while (1) {
  if (!$$0) break;
  $12 = HEAP16[$$0246 + 16 >> 1] | 0;
  $14 = HEAP16[$$0246 + 32 >> 1] | 0;
  if (!(($12 | $14) << 16 >> 16)) if (!(HEAP16[$$0246 + 48 >> 1] | 0)) if (!(HEAP16[$$0246 + 64 >> 1] | 0)) if (!(HEAP16[$$0246 + 80 >> 1] | 0)) if (!(HEAP16[$$0246 + 96 >> 1] | 0)) if (!(HEAP16[$$0246 + 112 >> 1] | 0)) {
   $35 = +HEAPF32[$$0244 >> 2] * +(HEAP16[$$0246 >> 1] | 0);
   HEAPF32[$$0242 >> 2] = $35;
   HEAPF32[$$0242 + 32 >> 2] = $35;
   HEAPF32[$$0242 + 64 >> 2] = $35;
   HEAPF32[$$0242 + 96 >> 2] = $35;
   HEAPF32[$$0242 + 128 >> 2] = $35;
   HEAPF32[$$0242 + 160 >> 2] = $35;
   HEAPF32[$$0242 + 192 >> 2] = $35;
   $$sink = $35;
   $$sink249 = 56;
  } else {
   $47 = 0;
   label = 10;
  } else {
   $47 = 0;
   label = 10;
  } else {
   $47 = 0;
   label = 10;
  } else {
   $47 = 0;
   label = 10;
  } else {
   $47 = 0;
   label = 10;
  } else {
   $47 = $14;
   label = 10;
  }
  if ((label | 0) == 10) {
   label = 0;
   $45 = +HEAPF32[$$0244 >> 2] * +(HEAP16[$$0246 >> 1] | 0);
   $50 = +HEAPF32[$$0244 + 64 >> 2] * +($47 << 16 >> 16);
   $56 = +HEAPF32[$$0244 + 128 >> 2] * +(HEAP16[$$0246 + 64 >> 1] | 0);
   $62 = +HEAPF32[$$0244 + 192 >> 2] * +(HEAP16[$$0246 + 96 >> 1] | 0);
   $63 = $45 + $56;
   $64 = $45 - $56;
   $65 = $50 + $62;
   $68 = ($50 - $62) * 1.4142135381698608 - $65;
   $69 = $63 + $65;
   $70 = $63 - $65;
   $71 = $64 + $68;
   $72 = $64 - $68;
   $76 = +HEAPF32[$$0244 + 32 >> 2] * +($12 << 16 >> 16);
   $82 = +HEAPF32[$$0244 + 96 >> 2] * +(HEAP16[$$0246 + 48 >> 1] | 0);
   $88 = +HEAPF32[$$0244 + 160 >> 2] * +(HEAP16[$$0246 + 80 >> 1] | 0);
   $94 = +HEAPF32[$$0244 + 224 >> 2] * +(HEAP16[$$0246 + 112 >> 1] | 0);
   $95 = $82 + $88;
   $96 = $88 - $82;
   $97 = $76 + $94;
   $98 = $76 - $94;
   $99 = $95 + $97;
   $103 = ($96 + $98) * 1.8477590084075928;
   $108 = $103 - $96 * 2.613126039505005 - $99;
   $109 = ($97 - $95) * 1.4142135381698608 - $108;
   $110 = $98 * 1.0823922157287598 - $103 + $109;
   HEAPF32[$$0242 >> 2] = $69 + $99;
   HEAPF32[$$0242 + 224 >> 2] = $69 - $99;
   HEAPF32[$$0242 + 32 >> 2] = $71 + $108;
   HEAPF32[$$0242 + 192 >> 2] = $71 - $108;
   HEAPF32[$$0242 + 64 >> 2] = $72 + $109;
   HEAPF32[$$0242 + 160 >> 2] = $72 - $109;
   HEAPF32[$$0242 + 128 >> 2] = $70 + $110;
   $$sink = $70 - $110;
   $$sink249 = 24;
  }
  HEAPF32[$$0242 + ($$sink249 << 2) >> 2] = $$sink;
  $$0 = $$0 + -1 | 0;
  $$0242 = $$0242 + 4 | 0;
  $$0244 = $$0244 + 4 | 0;
  $$0246 = $$0246 + 2 | 0;
 }
 $127 = $7 + 128 | 0;
 $$1 = 0;
 $$2 = $5;
 while (1) {
  if (($$1 | 0) == 8) break;
  $130 = (HEAP32[$3 + ($$1 << 2) >> 2] | 0) + $4 | 0;
  $131 = +HEAPF32[$$2 >> 2];
  $133 = +HEAPF32[$$2 + 16 >> 2];
  $134 = $131 + $133;
  $135 = $131 - $133;
  $137 = +HEAPF32[$$2 + 8 >> 2];
  $139 = +HEAPF32[$$2 + 24 >> 2];
  $140 = $137 + $139;
  $143 = ($137 - $139) * 1.4142135381698608 - $140;
  $144 = $134 + $140;
  $145 = $134 - $140;
  $146 = $135 + $143;
  $147 = $135 - $143;
  $149 = +HEAPF32[$$2 + 20 >> 2];
  $151 = +HEAPF32[$$2 + 12 >> 2];
  $152 = $149 + $151;
  $153 = $149 - $151;
  $155 = +HEAPF32[$$2 + 4 >> 2];
  $157 = +HEAPF32[$$2 + 28 >> 2];
  $158 = $155 + $157;
  $159 = $155 - $157;
  $160 = $152 + $158;
  $164 = ($153 + $159) * 1.8477590084075928;
  $169 = $164 - $153 * 2.613126039505005 - $160;
  $170 = ($158 - $152) * 1.4142135381698608 - $169;
  $171 = $159 * 1.0823922157287598 - $164 + $170;
  HEAP8[$130 >> 0] = HEAP8[$127 + ((~~($144 + $160) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[$130 + 7 >> 0] = HEAP8[$127 + ((~~($144 - $160) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[$130 + 1 >> 0] = HEAP8[$127 + ((~~($146 + $169) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[$130 + 6 >> 0] = HEAP8[$127 + ((~~($146 - $169) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[$130 + 2 >> 0] = HEAP8[$127 + ((~~($147 + $170) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[$130 + 5 >> 0] = HEAP8[$127 + ((~~($147 - $170) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[$130 + 4 >> 0] = HEAP8[$127 + ((~~($145 + $171) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  HEAP8[$130 + 3 >> 0] = HEAP8[$127 + ((~~($145 - $171) + 4 | 0) >>> 3 & 1023) >> 0] | 0;
  $$1 = $$1 + 1 | 0;
  $$2 = $$2 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNK6vision4NodeILi96EE7nearestERNSt3__26vectorIPKS1_NS2_9allocatorIS5_EEEERNS2_14priority_queueINS_17PriorityQueueItemILi96EEENS3_ISC_NS6_ISC_EEEENS2_4lessISC_EEEEPKh($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$043 = 0, $$045 = 0, $$046 = 0, $$byval_copy = 0, $$byval_copy1 = 0, $101 = 0, $102 = 0, $107 = 0, $109 = 0, $110 = 0, $14 = 0, $25 = 0, $31 = 0, $36 = 0, $37 = 0, $4 = 0, $41 = 0, $48 = 0, $5 = 0, $53 = 0, $57 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $68 = 0, $69 = 0, $7 = 0, $71 = 0, $78 = 0, $8 = 0, $85 = 0, $86 = 0, $92 = 0, $93 = 0, $96 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy1 = sp + 8 | 0;
 $$byval_copy = sp + 36 | 0;
 $4 = sp + 32 | 0;
 $5 = sp + 28 | 0;
 $6 = sp;
 $7 = sp + 16 | 0;
 $8 = $0 + 104 | 0;
 __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEEC2Em($7, (HEAP32[$0 + 108 >> 2] | 0) - (HEAP32[$8 >> 2] | 0) >> 2);
 $14 = $7 + 4 | 0;
 $$043 = -1;
 $$045 = 0;
 $$046 = -1;
 while (1) {
  if ($$045 >>> 0 >= (HEAP32[$14 >> 2] | 0) - (HEAP32[$7 >> 2] | 0) >> 3 >>> 0) break;
  $25 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_((HEAP32[(HEAP32[$8 >> 2] | 0) + ($$045 << 2) >> 2] | 0) + 4 | 0, $3) | 0;
  __ZN6vision17PriorityQueueItemILi96EEC2EPKNS_4NodeILi96EEEj($$byval_copy1, HEAP32[(HEAP32[$8 >> 2] | 0) + ($$045 << 2) >> 2] | 0, $25);
  $31 = $$byval_copy1;
  $36 = HEAP32[$31 + 4 >> 2] | 0;
  $37 = (HEAP32[$7 >> 2] | 0) + ($$045 << 3) | 0;
  HEAP32[$37 >> 2] = HEAP32[$31 >> 2];
  HEAP32[$37 + 4 >> 2] = $36;
  __ZN6vision17PriorityQueueItemILi96EED2Ev($$byval_copy1);
  $41 = $25 >>> 0 < $$043 >>> 0;
  $spec$select = $41 ? $$045 : $$046;
  $$043 = $41 ? $25 : $$043;
  $$045 = $$045 + 1 | 0;
  $$046 = $spec$select;
 }
 if (($$046 | 0) == -1) {
  $48 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30341) | 0, 27286) | 0, 33528) | 0, 155) | 0, 33535) | 0, 30375) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy1, $48 + (HEAP32[(HEAP32[$48 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $53 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy1, 57884) | 0;
  $57 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$53 >> 2] | 0) + 28 >> 2] & 63]($53, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($48, $57) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($48) | 0;
  _abort();
 }
 $60 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($$046 << 2) >> 2] | 0;
 HEAP32[$$byval_copy1 >> 2] = $60;
 $61 = $1 + 4 | 0;
 $62 = HEAP32[$61 >> 2] | 0;
 $63 = $1 + 8 | 0;
 if ($62 >>> 0 < (HEAP32[$63 >> 2] | 0) >>> 0) {
  HEAP32[$62 >> 2] = $60;
  HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + 4;
 } else __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($1, $$byval_copy1);
 $68 = $2 + 4 | 0;
 $69 = $2 + 8 | 0;
 $$0 = 0;
 while (1) {
  $71 = HEAP32[$7 >> 2] | 0;
  if ($$0 >>> 0 >= (HEAP32[$14 >> 2] | 0) - $71 >> 3 >>> 0) break;
  do if (($$0 | 0) != ($$046 | 0)) {
   $78 = __ZNK6vision17PriorityQueueItemILi96EE4distEv($71 + ($$0 << 3) | 0) | 0;
   if (($78 | 0) == (__ZNK6vision17PriorityQueueItemILi96EE4distEv((HEAP32[$7 >> 2] | 0) + ($$046 << 3) | 0) | 0)) {
    $85 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
    HEAP32[$$byval_copy1 >> 2] = $85;
    $86 = HEAP32[$61 >> 2] | 0;
    if ($86 >>> 0 < (HEAP32[$63 >> 2] | 0) >>> 0) {
     HEAP32[$86 >> 2] = $85;
     HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + 4;
    } else __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($1, $$byval_copy1);
    break;
   } else {
    $92 = (HEAP32[$7 >> 2] | 0) + ($$0 << 3) | 0;
    $93 = HEAP32[$68 >> 2] | 0;
    if (($93 | 0) == (HEAP32[$69 >> 2] | 0)) {
     __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($2, $92);
     $110 = HEAP32[$68 >> 2] | 0;
    } else {
     $96 = $92;
     $101 = HEAP32[$96 + 4 >> 2] | 0;
     $102 = $93;
     HEAP32[$102 >> 2] = HEAP32[$96 >> 2];
     HEAP32[$102 + 4 >> 2] = $101;
     $107 = (HEAP32[$68 >> 2] | 0) + 8 | 0;
     HEAP32[$68 >> 2] = $107;
     $110 = $107;
    }
    $109 = HEAP32[$2 >> 2] | 0;
    HEAP32[$4 >> 2] = $109;
    HEAP32[$5 >> 2] = $110;
    HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
    HEAP32[$$byval_copy1 >> 2] = HEAP32[$5 >> 2];
    __ZNSt3__29__sift_upIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeE($$byval_copy, $$byval_copy1, $6, $110 - $109 >> 3);
    break;
   }
  } while (0);
  $$0 = $$0 + 1 | 0;
 }
 __ZNSt3__213__vector_baseIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZNK6vision25GaussianScaleSpacePyramid6locateERiS1_f($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = +$3;
 var $$sink = 0, $100 = 0, $11 = 0.0, $16 = 0, $17 = 0, $23 = 0, $26 = 0, $31 = 0, $38 = 0, $4 = 0, $43 = 0, $47 = 0, $56 = 0, $61 = 0, $65 = 0, $66 = 0, $7 = 0, $73 = 0, $78 = 0, $82 = 0, $90 = 0, $95 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 $7 = ~~+Math_floor(+(+__ZN6vision4log2IfEET_S1_($3)));
 HEAP32[$1 >> 2] = $7;
 $11 = +Math_log(+($3 / +(1 << $7 | 0)));
 $16 = ~~+__ZN6vision5roundIfEET_S1_(+HEAPF32[$0 + 28 >> 2] * $11);
 HEAP32[$2 >> 2] = $16;
 $17 = $0 + 20 | 0;
 if (((HEAP32[$17 >> 2] | 0) + -1 | 0) == ($16 | 0)) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1;
  HEAP32[$2 >> 2] = 0;
  $100 = 0;
 } else $100 = $16;
 $23 = HEAP32[$1 >> 2] | 0;
 if (($23 | 0) < 0) {
  HEAP32[$1 >> 2] = 0;
  $$sink = 0;
  label = 7;
 } else {
  $26 = HEAP32[$0 + 16 >> 2] | 0;
  if (($23 | 0) < ($26 | 0)) $66 = $100; else {
   HEAP32[$1 >> 2] = $26 + -1;
   $$sink = (HEAP32[$17 >> 2] | 0) + -1 | 0;
   label = 7;
  }
 }
 if ((label | 0) == 7) {
  HEAP32[$2 >> 2] = $$sink;
  $66 = $$sink;
 }
 $31 = HEAP32[$1 >> 2] | 0;
 if (($31 | 0) <= -1) {
  $38 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32285) | 0, 32320) | 0, 33528) | 0, 268) | 0, 33535) | 0, 32449) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $38 + (HEAP32[(HEAP32[$38 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $43 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $47 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$43 >> 2] | 0) + 28 >> 2] & 63]($43, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($38, $47) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($38) | 0;
  _abort();
 }
 if (($31 | 0) >= (HEAP32[$0 + 16 >> 2] | 0)) {
  $56 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32473) | 0, 32320) | 0, 33528) | 0, 269) | 0, 33535) | 0, 32517) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $56 + (HEAP32[(HEAP32[$56 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $61 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $65 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$61 >> 2] | 0) + 28 >> 2] & 63]($61, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($56, $65) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($56) | 0;
  _abort();
 }
 if (($66 | 0) <= -1) {
  $73 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32560) | 0, 32320) | 0, 33528) | 0, 270) | 0, 33535) | 0, 32594) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $73 + (HEAP32[(HEAP32[$73 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $78 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $82 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$78 >> 2] | 0) + 28 >> 2] & 63]($78, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($73, $82) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($73) | 0;
  _abort();
 }
 if (($66 | 0) < (HEAP32[$17 >> 2] | 0)) {
  STACKTOP = sp;
  return;
 } else {
  $90 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32617) | 0, 32320) | 0, 33528) | 0, 271) | 0, 33535) | 0, 32668) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $90 + (HEAP32[(HEAP32[$90 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $95 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $99 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$95 >> 2] | 0) + 28 >> 2] & 63]($95, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($90, $99) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($90) | 0;
  _abort();
 }
}

function __ZN6vision14BinarykMedoidsILi96EE6assignERNSt3__26vectorIiNS2_9allocatorIiEEEEPKhiPKiiSB_i($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$038 = 0, $$039 = 0, $$040 = 0, $$1 = 0, $20 = 0, $25 = 0, $29 = 0, $36 = 0, $41 = 0, $45 = 0, $52 = 0, $57 = 0, $61 = 0, $68 = 0, $73 = 0, $77 = 0, $79 = 0, $8 = 0, $85 = 0, $91 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 if (((HEAP32[$1 + 4 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) >> 2 | 0) != ($5 | 0)) {
  $20 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27230) | 0, 27767) | 0, 33528) | 0, 198) | 0, 33535) | 0, 28135) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $20 + (HEAP32[(HEAP32[$20 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $25 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
  $29 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$25 >> 2] | 0) + 28 >> 2] & 63]($25, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($20, $29) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($20) | 0;
  _abort();
 }
 if (($3 | 0) <= 0) {
  $36 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27920) | 0, 27767) | 0, 33528) | 0, 199) | 0, 33535) | 0, 27960) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $36 + (HEAP32[(HEAP32[$36 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $41 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
  $45 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$41 >> 2] | 0) + 28 >> 2] & 63]($41, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($36, $45) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($36) | 0;
  _abort();
 }
 if (($5 | 0) > ($3 | 0)) {
  $52 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 27996) | 0, 27767) | 0, 33528) | 0, 200) | 0, 33535) | 0, 28047) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $52 + (HEAP32[(HEAP32[$52 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $57 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
  $61 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$57 >> 2] | 0) + 28 >> 2] & 63]($57, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($52, $61) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($52) | 0;
  _abort();
 }
 if (($7 | 0) <= 0) {
  $68 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 28164) | 0, 27767) | 0, 33528) | 0, 201) | 0, 33535) | 0, 28203) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $68 + (HEAP32[(HEAP32[$68 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $73 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
  $77 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$73 >> 2] | 0) + 28 >> 2] & 63]($73, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($68, $77) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($68) | 0;
  _abort();
 }
 $$0 = 0;
 $$040 = 0;
 while (1) {
  if (($$040 | 0) >= ($5 | 0)) break;
  $79 = $4 + ($$040 << 2) | 0;
  $$038 = 0;
  $$039 = -1;
  while (1) {
   if (($$038 | 0) == ($7 | 0)) break;
   $85 = $6 + ($$038 << 2) | 0;
   $91 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_($2 + ((HEAP32[$79 >> 2] | 0) * 96 | 0) | 0, $2 + ((HEAP32[$4 + (HEAP32[$85 >> 2] << 2) >> 2] | 0) * 96 | 0) | 0) | 0;
   if ($91 >>> 0 < $$039 >>> 0) {
    HEAP32[(HEAP32[$1 >> 2] | 0) + ($$040 << 2) >> 2] = HEAP32[$85 >> 2];
    $$1 = $91;
   } else $$1 = $$039;
   $$038 = $$038 + 1 | 0;
   $$039 = $$1;
  }
  $$0 = $$039 + $$0 | 0;
  $$040 = $$040 + 1 | 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _get_dqt($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0137 = 0, $$0138 = 0, $$0147 = 0, $$0149 = 0, $$0150 = 0, $$1 = 0, $$1139 = 0, $$1151 = 0, $$2 = 0, $$2140 = 0, $$3 = 0, $$3141 = 0, $$3141$pn = 0, $$4 = 0, $$4$in = 0, $$4142 = 0, $$5 = 0, $$5143 = 0, $$6 = 0, $$6144 = 0, $$6144$pn = 0, $$7 = 0, $$7145 = 0, $$8$in = 0, $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $143 = 0, $17 = 0, $2 = 0, $3 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $49 = 0, $54 = 0, $55 = 0, $57 = 0, $58 = 0, $60 = 0, $66 = 0, $67 = 0, $70 = 0, $91 = 0, $98 = 0, label = 0;
 $2 = HEAP32[$0 + 24 >> 2] | 0;
 $3 = $2 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) $$0 = 0; else {
  $$0137 = HEAP32[$3 >> 2] | 0;
  label = 4;
 } else {
  $$0137 = $4;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $$0138 = HEAP32[$2 >> 2] | 0;
  $11 = $$0137 + -1 | 0;
  $14 = (HEAPU8[$$0138 >> 0] | 0) << 8;
  if (!$11) {
   $17 = $2 + 12 | 0;
   if (!(FUNCTION_TABLE_ii[HEAP32[$17 >> 2] & 127]($0) | 0)) {
    $$0 = 0;
    break;
   }
   $$1 = HEAP32[$3 >> 2] | 0;
   $$1139 = HEAP32[$2 >> 2] | 0;
   $$pre$phiZ2D = $17;
  } else {
   $$1 = $11;
   $$1139 = $$0138 + 1 | 0;
   $$pre$phiZ2D = $2 + 12 | 0;
  }
  $$0147 = ($14 | (HEAPU8[$$1139 >> 0] | 0)) + -2 | 0;
  $$2 = $$1 + -1 | 0;
  $$2140 = $$1139 + 1 | 0;
  while (1) {
   if (($$0147 | 0) <= 0) break;
   if (!$$2) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$$pre$phiZ2D >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     break L4;
    }
    $$3 = HEAP32[$3 >> 2] | 0;
    $$3141 = HEAP32[$2 >> 2] | 0;
   } else {
    $$3 = $$2;
    $$3141 = $$2140;
   }
   $37 = HEAPU8[$$3141 >> 0] | 0;
   $38 = $37 >>> 4;
   $39 = $37 & 15;
   $40 = HEAP32[$0 >> 2] | 0;
   HEAP32[$40 + 20 >> 2] = 81;
   HEAP32[$40 + 24 >> 2] = $39;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $38;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
   if ($39 >>> 0 > 3) {
    $49 = HEAP32[$0 >> 2] | 0;
    HEAP32[$49 + 20 >> 2] = 31;
    HEAP32[$49 + 24 >> 2] = $39;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
   $54 = $0 + 164 + ($39 << 2) | 0;
   $55 = HEAP32[$54 >> 2] | 0;
   if (!$55) {
    $57 = _jpeg_alloc_quant_table($0) | 0;
    HEAP32[$54 >> 2] = $57;
    $91 = $57;
   } else $91 = $55;
   $58 = ($38 | 0) == 0;
   $$0150 = 0;
   $$3141$pn = $$3141;
   $$4$in = $$3;
   while (1) {
    $$4 = $$4$in + -1 | 0;
    $$4142 = $$3141$pn + 1 | 0;
    if ($$0150 >>> 0 >= 64) break;
    $60 = ($$4 | 0) == 0;
    if ($58) {
     if ($60) {
      if (!(FUNCTION_TABLE_ii[HEAP32[$$pre$phiZ2D >> 2] & 127]($0) | 0)) {
       $$0 = 0;
       break L4;
      }
      $$7 = HEAP32[$3 >> 2] | 0;
      $$7145 = HEAP32[$2 >> 2] | 0;
     } else {
      $$7 = $$4;
      $$7145 = $$4142;
     }
     $$0149 = HEAPU8[$$7145 >> 0] | 0;
     $$6144$pn = $$7145;
     $$8$in = $$7;
    } else {
     if ($60) {
      if (!(FUNCTION_TABLE_ii[HEAP32[$$pre$phiZ2D >> 2] & 127]($0) | 0)) {
       $$0 = 0;
       break L4;
      }
      $$5 = HEAP32[$3 >> 2] | 0;
      $$5143 = HEAP32[$2 >> 2] | 0;
     } else {
      $$5 = $$4;
      $$5143 = $$4142;
     }
     $66 = $$5 + -1 | 0;
     $67 = $$5143 + 1 | 0;
     $70 = (HEAPU8[$$5143 >> 0] | 0) << 8;
     if (!$66) {
      if (!(FUNCTION_TABLE_ii[HEAP32[$$pre$phiZ2D >> 2] & 127]($0) | 0)) {
       $$0 = 0;
       break L4;
      }
      $$6 = HEAP32[$3 >> 2] | 0;
      $$6144 = HEAP32[$2 >> 2] | 0;
     } else {
      $$6 = $66;
      $$6144 = $67;
     }
     $$0149 = $70 | (HEAPU8[$$6144 >> 0] | 0);
     $$6144$pn = $$6144;
     $$8$in = $$6;
    }
    HEAP16[$91 + (HEAP32[2560 + ($$0150 << 2) >> 2] << 1) >> 1] = $$0149;
    $$0150 = $$0150 + 1 | 0;
    $$3141$pn = $$6144$pn;
    $$4$in = $$8$in;
   }
   L44 : do if ((HEAP32[(HEAP32[$0 >> 2] | 0) + 104 >> 2] | 0) > 1) {
    $$1151 = 0;
    while (1) {
     if ($$1151 >>> 0 >= 64) break L44;
     $98 = HEAP32[$0 >> 2] | 0;
     HEAP32[$98 + 24 >> 2] = HEAPU16[$91 + ($$1151 << 1) >> 1];
     HEAP32[$98 + 28 >> 2] = HEAPU16[$91 + (($$1151 | 1) << 1) >> 1];
     HEAP32[$98 + 32 >> 2] = HEAPU16[$91 + (($$1151 | 2) << 1) >> 1];
     HEAP32[$98 + 36 >> 2] = HEAPU16[$91 + (($$1151 | 3) << 1) >> 1];
     HEAP32[$98 + 40 >> 2] = HEAPU16[$91 + (($$1151 | 4) << 1) >> 1];
     HEAP32[$98 + 44 >> 2] = HEAPU16[$91 + (($$1151 | 5) << 1) >> 1];
     HEAP32[$98 + 48 >> 2] = HEAPU16[$91 + (($$1151 | 6) << 1) >> 1];
     HEAP32[$98 + 52 >> 2] = HEAPU16[$91 + (($$1151 | 7) << 1) >> 1];
     HEAP32[$98 + 20 >> 2] = 93;
     FUNCTION_TABLE_vii[HEAP32[$98 + 4 >> 2] & 63]($0, 2);
     $$1151 = $$1151 + 8 | 0;
    }
   } while (0);
   $$0147 = ($58 ? -65 : -129) + $$0147 | 0;
   $$2 = $$4;
   $$2140 = $$4142;
  }
  if ($$0147 | 0) {
   $143 = HEAP32[$0 >> 2] | 0;
   HEAP32[$143 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[$143 >> 2] & 255]($0);
  }
  HEAP32[$2 >> 2] = $$2140;
  HEAP32[$3 >> 2] = $$2;
  $$0 = 1;
 } while (0);
 return $$0 | 0;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i39 = 0, $$0$i$i41 = 0, $$037 = 0, $$038 = 0, $$byval_copy = 0, $$sink72 = 0, $$sink73 = 0, $$sink74 = 0, $$sroa$050$0 = 0, $$sroa$058$0 = 0, $$sroa$067$0 = 0, $10 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $29 = 0, $32 = 0, $33 = 0, $48 = 0, $49 = 0, $55 = 0, $6 = 0, $63 = 0, $7 = 0, $73 = 0, $8 = 0, $81 = 0, $89 = 0, $9 = 0, $92 = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 992 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(992);
 $$byval_copy = sp + 912 | 0;
 $vararg_buffer1 = sp + 904 | 0;
 $6 = sp + 800 | 0;
 $7 = sp + 984 | 0;
 $8 = sp + 400 | 0;
 $9 = sp + 980 | 0;
 $10 = sp + 988 | 0;
 $11 = sp + 976 | 0;
 $12 = sp + 972 | 0;
 $13 = sp + 960 | 0;
 $14 = sp + 948 | 0;
 $15 = sp + 936 | 0;
 $16 = sp + 932 | 0;
 $17 = sp;
 $18 = sp + 928 | 0;
 $19 = sp + 920 | 0;
 $20 = sp + 924 | 0;
 HEAP32[$7 >> 2] = $6;
 HEAPF64[$$byval_copy >> 3] = $5;
 $21 = _snprintf($6, 100, 48236, $$byval_copy) | 0;
 if ($21 >>> 0 > 99) {
  $23 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[$vararg_buffer1 >> 3] = $5;
  $24 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $23, 48236, $vararg_buffer1) | 0;
  $25 = HEAP32[$7 >> 2] | 0;
  if (!$25) __ZSt17__throw_bad_allocv();
  $29 = _malloc($24 << 2) | 0;
  if (!$29) __ZSt17__throw_bad_allocv(); else {
   $$0 = $29;
   $$038 = $24;
   $$sroa$058$0 = $29;
   $$sroa$067$0 = $25;
  }
 } else {
  $$0 = $8;
  $$038 = $21;
  $$sroa$058$0 = 0;
  $$sroa$067$0 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv($9, $3);
 $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($9, 57916) | 0;
 $33 = HEAP32[$7 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$32 >> 2] | 0) + 48 >> 2] & 15]($32, $33, $33 + $$038 | 0, $$0) | 0;
 if (!$$038) $48 = 0; else $48 = (HEAP8[HEAP32[$7 >> 2] >> 0] | 0) == 45;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$13 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 $$0$i$i39 = 0;
 while (1) {
  if (($$0$i$i39 | 0) == 3) break;
  HEAP32[$14 + ($$0$i$i39 << 2) >> 2] = 0;
  $$0$i$i39 = $$0$i$i39 + 1 | 0;
 }
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 $$0$i$i41 = 0;
 while (1) {
  if (($$0$i$i41 | 0) == 3) break;
  HEAP32[$15 + ($$0$i$i41 << 2) >> 2] = 0;
  $$0$i$i41 = $$0$i$i41 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($2, $48, $9, $10, $11, $12, $13, $14, $15, $16);
 $49 = HEAP32[$16 >> 2] | 0;
 if (($$038 | 0) > ($49 | 0)) {
  $55 = HEAP8[$15 + 8 + 3 >> 0] | 0;
  $63 = HEAP8[$14 + 8 + 3 >> 0] | 0;
  $$sink72 = $63 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $63 & 255;
  $$sink73 = $49 + 1 + ($$038 - $49 << 1) | 0;
  $$sink74 = $55 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $55 & 255;
 } else {
  $73 = HEAP8[$15 + 8 + 3 >> 0] | 0;
  $81 = HEAP8[$14 + 8 + 3 >> 0] | 0;
  $$sink72 = $81 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $81 & 255;
  $$sink73 = $49 + 2 | 0;
  $$sink74 = $73 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $73 & 255;
 }
 $89 = $$sink73 + $$sink74 + $$sink72 | 0;
 if ($89 >>> 0 > 100) {
  $92 = _malloc($89 << 2) | 0;
  if (!$92) __ZSt17__throw_bad_allocv(); else {
   $$037 = $92;
   $$sroa$050$0 = $92;
  }
 } else {
  $$037 = $17;
  $$sroa$050$0 = 0;
 }
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($$037, $18, $19, HEAP32[$3 + 4 >> 2] | 0, $$0, $$0 + ($$038 << 2) | 0, $32, $48, $10, HEAP32[$11 >> 2] | 0, HEAP32[$12 >> 2] | 0, $13, $14, $15, $49);
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 $101 = HEAP32[$18 >> 2] | 0;
 $102 = HEAP32[$19 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$20 >> 2];
 $103 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $101, $102, $3, $4) | 0;
 if ($$sroa$050$0 | 0) _free($$sroa$050$0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($15);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($14);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__26localeD2Ev($9);
 if ($$sroa$058$0 | 0) _free($$sroa$058$0);
 if ($$sroa$067$0 | 0) _free($$sroa$067$0);
 STACKTOP = sp;
 return $103 | 0;
}

function _decode_mcu_AC_first($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0109 = 0, $$0114 = 0, $$0118 = 0, $$0128 = 0, $$1115 = 0, $$1119 = 0, $$1129 = 0, $$1131 = 0, $$2 = 0, $$2113$ph = 0, $$2116 = 0, $$2120 = 0, $$2132 = 0, $$4$ph = 0, $$4122$ph = 0, $$5 = 0, $$5123 = 0, $$6 = 0, $$6124 = 0, $$8 = 0, $$8126 = 0, $$9 = 0, $$9127 = 0, $100 = 0, $104 = 0, $107 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $26 = 0, $30 = 0, $31 = 0, $33 = 0, $35 = 0, $37 = 0, $4 = 0, $40 = 0, $41 = 0, $46 = 0, $47 = 0, $51 = 0, $53 = 0, $59 = 0, $6 = 0, $63 = 0, $64 = 0, $66 = 0, $72 = 0, $76 = 0, $8 = 0, $84 = 0, $91 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $4 = HEAP32[$0 + 444 >> 2] | 0;
 $6 = HEAP32[$0 + 404 >> 2] | 0;
 $8 = HEAP32[$0 + 412 >> 2] | 0;
 if (!(HEAP32[$0 + 276 >> 2] | 0)) label = 4; else if (!(HEAP32[$4 + 40 >> 2] | 0)) if (!(_process_restart_49($0) | 0)) $$2 = 0; else label = 4; else label = 4;
 L4 : do if ((label | 0) == 4) {
  if (!(HEAP32[$4 + 8 >> 2] | 0)) {
   $20 = $4 + 20 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   if (!$21) {
    HEAP32[$2 + 16 >> 2] = $0;
    $25 = $0 + 24 | 0;
    $26 = HEAP32[$25 >> 2] | 0;
    HEAP32[$2 >> 2] = HEAP32[$26 >> 2];
    $30 = $2 + 4 | 0;
    HEAP32[$30 >> 2] = HEAP32[$26 + 4 >> 2];
    $31 = $4 + 12 | 0;
    $33 = $4 + 16 | 0;
    $35 = HEAP32[$1 >> 2] | 0;
    $37 = HEAP32[$4 + 60 >> 2] | 0;
    $40 = $2 + 8 | 0;
    $41 = $2 + 12 | 0;
    $$0114 = HEAP32[$33 >> 2] | 0;
    $$0118 = HEAP32[$31 >> 2] | 0;
    $$0128 = HEAP32[$0 + 400 >> 2] | 0;
    while (1) {
     if (($$0128 | 0) > ($6 | 0)) {
      $$1131 = 0;
      $$9 = $$0114;
      $$9127 = $$0118;
      break;
     }
     if (($$0114 | 0) < 8) {
      if (!(_jpeg_fill_bit_buffer($2, $$0118, $$0114, 0) | 0)) {
       $$2 = 0;
       break L4;
      }
      $46 = HEAP32[$40 >> 2] | 0;
      $47 = HEAP32[$41 >> 2] | 0;
      if (($47 | 0) < 8) {
       $$0109 = 1;
       $$2116 = $47;
       $$2120 = $46;
       label = 14;
      } else {
       $$1115 = $47;
       $$1119 = $46;
       label = 12;
      }
     } else {
      $$1115 = $$0114;
      $$1119 = $$0118;
      label = 12;
     }
     if ((label | 0) == 12) {
      label = 0;
      $51 = $$1119 >> $$1115 + -8 & 255;
      $53 = HEAP32[$37 + 144 + ($51 << 2) >> 2] | 0;
      if (!$53) {
       $$0109 = 9;
       $$2116 = $$1115;
       $$2120 = $$1119;
       label = 14;
      } else {
       $$2113$ph = HEAPU8[$37 + 1168 + $51 >> 0] | 0;
       $$4$ph = $$1115 - $53 | 0;
       $$4122$ph = $$1119;
      }
     }
     if ((label | 0) == 14) {
      label = 0;
      $59 = _jpeg_huff_decode($2, $$2120, $$2116, $37, $$0109) | 0;
      if (($59 | 0) < 0) {
       $$2 = 0;
       break L4;
      }
      $$2113$ph = $59;
      $$4$ph = HEAP32[$41 >> 2] | 0;
      $$4122$ph = HEAP32[$40 >> 2] | 0;
     }
     $63 = $$2113$ph >>> 4;
     $64 = $$2113$ph & 15;
     if (!$64) {
      if (($63 | 0) != 15) {
       label = 25;
       break;
      }
      $$1129 = $$0128 + 15 | 0;
      $$8 = $$4$ph;
      $$8126 = $$4122$ph;
     } else {
      $66 = $63 + $$0128 | 0;
      if (($$4$ph | 0) < ($64 | 0)) {
       if (!(_jpeg_fill_bit_buffer($2, $$4122$ph, $$4$ph, $64) | 0)) {
        $$2 = 0;
        break L4;
       }
       $$5 = HEAP32[$41 >> 2] | 0;
       $$5123 = HEAP32[$40 >> 2] | 0;
      } else {
       $$5 = $$4$ph;
       $$5123 = $$4122$ph;
      }
      $72 = $$5 - $64 | 0;
      $76 = $$5123 >> $72 & (1 << $64) + -1;
      if (($76 | 0) < (HEAP32[2880 + ($64 << 2) >> 2] | 0)) $84 = (HEAP32[2944 + ($64 << 2) >> 2] | 0) + $76 | 0; else $84 = $76;
      HEAP16[$35 + (HEAP32[2560 + ($66 << 2) >> 2] << 1) >> 1] = $84 << $8;
      $$1129 = $66;
      $$8 = $72;
      $$8126 = $$5123;
     }
     $$0114 = $$8;
     $$0118 = $$8126;
     $$0128 = $$1129 + 1 | 0;
    }
    if ((label | 0) == 25) {
     $91 = 1 << $63;
     if (!$63) {
      $$1131 = 0;
      $$9 = $$4$ph;
      $$9127 = $$4122$ph;
     } else {
      if (($$4$ph | 0) < ($63 | 0)) {
       if (!(_jpeg_fill_bit_buffer($2, $$4122$ph, $$4$ph, $63) | 0)) {
        $$2 = 0;
        break;
       }
       $$6 = HEAP32[$41 >> 2] | 0;
       $$6124 = HEAP32[$40 >> 2] | 0;
      } else {
       $$6 = $$4$ph;
       $$6124 = $$4122$ph;
      }
      $98 = $$6 - $63 | 0;
      $100 = $91 + -1 | 0;
      $$1131 = $100 + ($$6124 >> $98 & $100) | 0;
      $$9 = $98;
      $$9127 = $$6124;
     }
    }
    $104 = HEAP32[$25 >> 2] | 0;
    HEAP32[$104 >> 2] = HEAP32[$2 >> 2];
    HEAP32[$104 + 4 >> 2] = HEAP32[$30 >> 2];
    HEAP32[$31 >> 2] = $$9127;
    HEAP32[$33 >> 2] = $$9;
    $$2132 = $$1131;
   } else $$2132 = $21 + -1 | 0;
   HEAP32[$20 >> 2] = $$2132;
  }
  $107 = $4 + 40 | 0;
  HEAP32[$107 >> 2] = (HEAP32[$107 >> 2] | 0) + -1;
  $$2 = 1;
 } while (0);
 STACKTOP = sp;
 return $$2 | 0;
}

function _arGetContour($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0137 = 0, $$0138 = 0, $$0140 = 0, $$0141 = 0, $$0143 = 0, $$1 = 0, $$1144 = 0, $$1144$in = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $10 = 0, $103 = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $39 = 0, $40 = 0, $42 = 0, $51 = 0, $53 = 0, $54 = 0, $59 = 0, $61 = 0, $62 = 0, $68 = 0, $7 = 0, $73 = 0, $74 = 0, $77 = 0, $79 = 0, $8 = 0, $80 = 0, $91 = 0, $94 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80032 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80032);
 $vararg_buffer3 = sp + 80016 | 0;
 $vararg_buffer1 = sp + 80008 | 0;
 $vararg_buffer = sp + 8e4 | 0;
 $7 = sp + 4e4 | 0;
 $8 = sp;
 $10 = HEAP32[$5 + 8 >> 2] | 0;
 $11 = Math_imul($10, $1) | 0;
 $12 = HEAP32[$5 >> 2] | 0;
 $16 = HEAP32[$5 + 4 >> 2] | 0;
 $$0137 = $12;
 $$0140 = $0 + ($11 + $12 << 1) | 0;
 while (1) {
  if (($$0137 | 0) > ($16 | 0)) {
   label = 7;
   break;
  }
  $18 = HEAP16[$$0140 >> 1] | 0;
  if ($18 << 16 >> 16 > 0) if ((HEAP32[$3 + (($18 << 16 >> 16) + -1 << 2) >> 2] | 0) == ($4 | 0)) {
   label = 6;
   break;
  }
  $$0137 = $$0137 + 1 | 0;
  $$0140 = $$0140 + 2 | 0;
 }
 do if ((label | 0) == 6) if (($$0137 | 0) == -1) label = 7; else {
  $28 = $6 + 24 | 0;
  HEAP32[$28 >> 2] = 1;
  $29 = $6 + 28 | 0;
  HEAP32[$29 >> 2] = $$0137;
  $30 = $6 + 40028 | 0;
  HEAP32[$30 >> 2] = $10;
  $$0143 = 5;
  $32 = $10;
  $34 = $$0137;
  $53 = 1;
  while (1) {
   $35 = $0 + ((Math_imul($32, $1) | 0) + $34 << 1) | 0;
   $$1 = 0;
   $$1144$in = $$0143 + 5 | 0;
   while (1) {
    $$1144 = ($$1144$in | 0) % 8 | 0;
    if ($$1 >>> 0 >= 8) {
     label = 13;
     break;
    }
    $39 = HEAP32[48 + ($$1144 << 2) >> 2] | 0;
    $40 = Math_imul($39, $1) | 0;
    $42 = HEAP32[80 + ($$1144 << 2) >> 2] | 0;
    if ((HEAP16[$35 + ($40 + $42 << 1) >> 1] | 0) > 0) {
     $51 = $42;
     $59 = $39;
     break;
    }
    $$1 = $$1 + 1 | 0;
    $$1144$in = $$1144 + 1 | 0;
   }
   if ((label | 0) == 13) {
    label = 0;
    if (($$1 | 0) == 8) {
     label = 15;
     break;
    }
    $51 = HEAP32[80 + ($$1144 << 2) >> 2] | 0;
    $59 = HEAP32[48 + ($$1144 << 2) >> 2] | 0;
   }
   HEAP32[$6 + 28 + ($53 << 2) >> 2] = $51 + $34;
   $54 = HEAP32[$28 >> 2] | 0;
   HEAP32[$6 + 40028 + ($54 << 2) >> 2] = $59 + (HEAP32[$6 + 40028 + ($54 + -1 << 2) >> 2] | 0);
   $61 = HEAP32[$28 >> 2] | 0;
   $62 = $6 + 28 + ($61 << 2) | 0;
   if ((HEAP32[$62 >> 2] | 0) == ($$0137 | 0)) if ((HEAP32[$6 + 40028 + ($61 << 2) >> 2] | 0) == ($10 | 0)) {
    label = 18;
    break;
   }
   $68 = $61 + 1 | 0;
   HEAP32[$28 >> 2] = $68;
   if (($68 | 0) == 9999) {
    label = 21;
    break;
   }
   $$0143 = $$1144;
   $32 = HEAP32[$6 + 40028 + ($61 << 2) >> 2] | 0;
   $34 = HEAP32[$62 >> 2] | 0;
   $53 = $68;
  }
  if ((label | 0) == 15) {
   _arLog(0, 3, 17964, $vararg_buffer1);
   $$0 = -1;
   break;
  } else if ((label | 0) == 18) {
   $$0138 = 0;
   $$0141 = 0;
   $$2 = 1;
   while (1) {
    if (($$2 | 0) >= ($61 | 0)) break;
    $73 = (HEAP32[$6 + 28 + ($$2 << 2) >> 2] | 0) - $$0137 | 0;
    $74 = Math_imul($73, $73) | 0;
    $77 = (HEAP32[$6 + 40028 + ($$2 << 2) >> 2] | 0) - $10 | 0;
    $79 = (Math_imul($77, $77) | 0) + $74 | 0;
    $80 = ($79 | 0) > ($$0141 | 0);
    $$0138 = $80 ? $$2 : $$0138;
    $$0141 = $80 ? $79 : $$0141;
    $$2 = $$2 + 1 | 0;
   }
   $$3 = 0;
   while (1) {
    if (($$3 | 0) >= ($$0138 | 0)) break;
    HEAP32[$7 + ($$3 << 2) >> 2] = HEAP32[$6 + 28 + ($$3 << 2) >> 2];
    HEAP32[$8 + ($$3 << 2) >> 2] = HEAP32[$6 + 40028 + ($$3 << 2) >> 2];
    $$3 = $$3 + 1 | 0;
   }
   $$4 = $$0138;
   $91 = $61;
   while (1) {
    if (($$4 | 0) >= ($91 | 0)) break;
    $94 = $$4 - $$0138 | 0;
    HEAP32[$6 + 28 + ($94 << 2) >> 2] = HEAP32[$6 + 28 + ($$4 << 2) >> 2];
    HEAP32[$6 + 40028 + ($94 << 2) >> 2] = HEAP32[$6 + 40028 + ($$4 << 2) >> 2];
    $$4 = $$4 + 1 | 0;
    $91 = HEAP32[$28 >> 2] | 0;
   }
   $$5 = 0;
   while (1) {
    if (($$5 | 0) >= ($$0138 | 0)) break;
    $103 = $$5 - $$0138 | 0;
    HEAP32[$6 + 28 + ((HEAP32[$28 >> 2] | 0) + $103 << 2) >> 2] = HEAP32[$7 + ($$5 << 2) >> 2];
    HEAP32[$6 + 40028 + ((HEAP32[$28 >> 2] | 0) + $103 << 2) >> 2] = HEAP32[$8 + ($$5 << 2) >> 2];
    $$5 = $$5 + 1 | 0;
   }
   HEAP32[$6 + 28 + (HEAP32[$28 >> 2] << 2) >> 2] = HEAP32[$29 >> 2];
   HEAP32[$6 + 40028 + (HEAP32[$28 >> 2] << 2) >> 2] = HEAP32[$30 >> 2];
   HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
   $$0 = 0;
   break;
  } else if ((label | 0) == 21) {
   _arLog(0, 3, 17971, $vararg_buffer3);
   $$0 = -1;
   break;
  }
 } while (0);
 if ((label | 0) == 7) {
  _arLog(0, 3, 17957, $vararg_buffer);
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision21ComputePolarGradientsEPfPKfmm($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0184 = 0, $$0185 = 0, $$0186 = 0, $$0187 = 0, $$0192 = 0, $$0196 = 0, $$0196$pn = 0, $$1 = 0, $$1$pn = 0, $$1189 = 0, $$1189$pn = 0, $$1193 = 0, $$1197 = 0, $$1197$pn = 0, $$2 = 0, $$2190 = 0, $$2194 = 0, $$2198 = 0, $$3191 = 0, $$3195 = 0, $$3199 = 0, $$pn = 0, $$pn200 = 0, $$pn201 = 0, $101 = 0.0, $105 = 0.0, $11 = 0.0, $110 = 0.0, $115 = 0, $119 = 0.0, $122 = 0.0, $126 = 0.0, $131 = 0.0, $135 = 0.0, $138 = 0.0, $140 = 0.0, $144 = 0.0, $149 = 0.0, $15 = 0.0, $150 = 0, $154 = 0.0, $157 = 0.0, $161 = 0.0, $166 = 0.0, $20 = 0.0, $22 = 0, $23 = 0.0, $26 = 0.0, $28 = 0.0, $32 = 0.0, $37 = 0.0, $39 = 0, $4 = 0, $43 = 0.0, $46 = 0.0, $5 = 0, $50 = 0.0, $55 = 0.0, $59 = 0, $6 = 0, $61 = 0, $62 = 0, $64 = 0.0, $65 = 0.0, $67 = 0.0, $71 = 0.0, $76 = 0.0, $77 = 0, $8 = 0.0, $80 = 0.0, $83 = 0.0, $87 = 0.0, $9 = 0.0, $92 = 0.0, $98 = 0.0;
 $4 = $2 + -1 | 0;
 $5 = $1 + ($2 << 2) | 0;
 $6 = $1 + 4 | 0;
 $8 = +HEAPF32[$1 >> 2];
 $9 = +HEAPF32[$6 >> 2] - $8;
 $11 = +HEAPF32[$5 >> 2] - $8;
 $15 = +Math_atan2(+$11, +$9) + 3.141592653589793;
 HEAPF32[$0 >> 2] = $15;
 $20 = +Math_sqrt(+($9 * $9 + $11 * $11));
 HEAPF32[$0 + 4 >> 2] = $20;
 $$0186 = 1;
 $$0192 = $6;
 $$pn = $5;
 $$pn201 = $0;
 while (1) {
  $$0196 = $$pn201 + 8 | 0;
  $$0187 = $$pn + 4 | 0;
  if ($$0186 >>> 0 >= $4 >>> 0) break;
  $39 = $$0192 + 4 | 0;
  $43 = +HEAPF32[$39 >> 2] - +HEAPF32[$$0192 + -4 >> 2];
  $46 = +HEAPF32[$$0187 >> 2] - +HEAPF32[$$0192 >> 2];
  $50 = +Math_atan2(+$46, +$43) + 3.141592653589793;
  HEAPF32[$$0196 >> 2] = $50;
  $55 = +Math_sqrt(+($43 * $43 + $46 * $46));
  HEAPF32[$$pn201 + 12 >> 2] = $55;
  $$0186 = $$0186 + 1 | 0;
  $$0192 = $39;
  $$pn = $$0187;
  $$pn201 = $$0196;
 }
 $22 = $3 + -1 | 0;
 $23 = +HEAPF32[$$0192 >> 2];
 $26 = $23 - +HEAPF32[$$0192 + -4 >> 2];
 $28 = +HEAPF32[$$0187 >> 2] - $23;
 $32 = +Math_atan2(+$28, +$26) + 3.141592653589793;
 HEAPF32[$$0196 >> 2] = $32;
 $37 = +Math_sqrt(+($26 * $26 + $28 * $28));
 HEAPF32[$$pn201 + 12 >> 2] = $37;
 $$0185 = 1;
 $$0196$pn = $$0196;
 $$1 = $5 + ($2 << 2) | 0;
 $$1189 = $1;
 $$1193 = $5;
 while (1) {
  $$1197 = $$0196$pn + 8 | 0;
  if ($$0185 >>> 0 >= $22 >>> 0) break;
  $77 = $$1193 + 4 | 0;
  $80 = +HEAPF32[$77 >> 2] - +HEAPF32[$$1193 >> 2];
  $83 = +HEAPF32[$$1 >> 2] - +HEAPF32[$$1189 >> 2];
  $87 = +Math_atan2(+$83, +$80) + 3.141592653589793;
  HEAPF32[$$1197 >> 2] = $87;
  $92 = +Math_sqrt(+($80 * $80 + $83 * $83));
  HEAPF32[$$0196$pn + 12 >> 2] = $92;
  $$0184 = 1;
  $$1$pn = $$1;
  $$1189$pn = $$1189;
  $$2194 = $77;
  $$2198 = $$0196$pn + 16 | 0;
  while (1) {
   $$2 = $$1$pn + 4 | 0;
   $$2190 = $$1189$pn + 4 | 0;
   if ($$0184 >>> 0 >= $4 >>> 0) break;
   $115 = $$2194 + 4 | 0;
   $119 = +HEAPF32[$115 >> 2] - +HEAPF32[$$2194 + -4 >> 2];
   $122 = +HEAPF32[$$2 >> 2] - +HEAPF32[$$2190 >> 2];
   $126 = +Math_atan2(+$122, +$119) + 3.141592653589793;
   HEAPF32[$$2198 >> 2] = $126;
   $131 = +Math_sqrt(+($119 * $119 + $122 * $122));
   HEAPF32[$$2198 + 4 >> 2] = $131;
   $$0184 = $$0184 + 1 | 0;
   $$1$pn = $$2;
   $$1189$pn = $$2190;
   $$2194 = $115;
   $$2198 = $$2198 + 8 | 0;
  }
  $98 = +HEAPF32[$$2194 >> 2] - +HEAPF32[$$2194 + -4 >> 2];
  $101 = +HEAPF32[$$2 >> 2] - +HEAPF32[$$2190 >> 2];
  $105 = +Math_atan2(+$101, +$98) + 3.141592653589793;
  HEAPF32[$$2198 >> 2] = $105;
  $110 = +Math_sqrt(+($98 * $98 + $101 * $101));
  HEAPF32[$$2198 + 4 >> 2] = $110;
  $$0185 = $$0185 + 1 | 0;
  $$0196$pn = $$2198;
  $$1 = $$1$pn + 8 | 0;
  $$1189 = $$1189$pn + 8 | 0;
  $$1193 = $$2194 + 4 | 0;
 }
 $59 = $1 + ((Math_imul($22, $2) | 0) << 2) | 0;
 $61 = $59 + (0 - $2 << 2) | 0;
 $62 = $59 + 4 | 0;
 $64 = +HEAPF32[$59 >> 2];
 $65 = +HEAPF32[$62 >> 2] - $64;
 $67 = $64 - +HEAPF32[$61 >> 2];
 $71 = +Math_atan2(+$67, +$65) + 3.141592653589793;
 HEAPF32[$$1197 >> 2] = $71;
 $76 = +Math_sqrt(+($65 * $65 + $67 * $67));
 HEAPF32[$$0196$pn + 12 >> 2] = $76;
 $$0 = 1;
 $$1197$pn = $$1197;
 $$3195 = $62;
 $$pn200 = $61;
 while (1) {
  $$3199 = $$1197$pn + 8 | 0;
  $$3191 = $$pn200 + 4 | 0;
  if ($$0 >>> 0 >= $4 >>> 0) break;
  $150 = $$3195 + 4 | 0;
  $154 = +HEAPF32[$150 >> 2] - +HEAPF32[$$3195 + -4 >> 2];
  $157 = +HEAPF32[$$3195 >> 2] - +HEAPF32[$$3191 >> 2];
  $161 = +Math_atan2(+$157, +$154) + 3.141592653589793;
  HEAPF32[$$3199 >> 2] = $161;
  $166 = +Math_sqrt(+($154 * $154 + $157 * $157));
  HEAPF32[$$1197$pn + 12 >> 2] = $166;
  $$0 = $$0 + 1 | 0;
  $$1197$pn = $$3199;
  $$3195 = $150;
  $$pn200 = $$3191;
 }
 $135 = +HEAPF32[$$3195 >> 2];
 $138 = $135 - +HEAPF32[$$3195 + -4 >> 2];
 $140 = $135 - +HEAPF32[$$3191 >> 2];
 $144 = +Math_atan2(+$140, +$138) + 3.141592653589793;
 HEAPF32[$$3199 >> 2] = $144;
 $149 = +Math_sqrt(+($138 * $138 + $140 * $140));
 HEAPF32[$$1197$pn + 12 >> 2] = $149;
 return;
}

function __ZNSt3__213unordered_mapIiP14AR2SurfaceSetTNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS2_EEEEEixERS9_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$pn$i = 0, $0 = 0, $1 = 0, $11 = 0, $16 = 0, $17 = 0, $18 = 0, $23 = 0, $3 = 0, $4 = 0, $7 = 0.0, $9 = 0, $__bc$0$i = 0, $__chash$0$i = 0, $__chash$1$i = 0, $__h$i = 0, $__nd$0$i = 0, $__nd$1$i = 0, $__value_$i$i$i = 0, $__value_$i$i$i1$i$i = 0, $__value_$i$i$i38$pre$phi$iZZZZ2D = 0, $__value_$i$i$i79$i = 0, $add32$i = 0, $cmp$i = 0, $cond3$i$i = 0, $cond3$i70$i = 0, $cond3$i88$i = 0, $conv$i = 0.0, $conv39$i = 0, $ref$tmp2 = 0, $ref$tmp5 = 0, $sub$i$i = 0, $sub$i55$i = 0, $sub$i64$i = 0, $tobool$i66$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $__h$i = sp + 4 | 0;
 $ref$tmp2 = sp;
 $ref$tmp5 = sp + 16 | 0;
 HEAP32[$ref$tmp2 >> 2] = $__k;
 $0 = HEAP32[$__k >> 2] | 0;
 $__value_$i$i$i1$i$i = $this + 4 | 0;
 $1 = HEAP32[$__value_$i$i$i1$i$i >> 2] | 0;
 $cmp$i = ($1 | 0) == 0;
 L1 : do if ($cmp$i) {
  $__chash$0$i = 0;
  label = 16;
 } else {
  $sub$i64$i = $1 + -1 | 0;
  $tobool$i66$i = ($sub$i64$i & $1 | 0) == 0;
  if ($tobool$i66$i) $cond3$i70$i = $sub$i64$i & $0; else if ($0 >>> 0 < $1 >>> 0) $cond3$i70$i = $0; else $cond3$i70$i = ($0 >>> 0) % ($1 >>> 0) | 0;
  $3 = HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i70$i << 2) >> 2] | 0;
  if (!$3) {
   $__chash$0$i = $cond3$i70$i;
   label = 16;
  } else {
   $$pn$i = $3;
   while (1) {
    $__nd$0$i = HEAP32[$$pn$i >> 2] | 0;
    if (!$__nd$0$i) {
     $__chash$0$i = $cond3$i70$i;
     label = 16;
     break L1;
    }
    $4 = HEAP32[$__nd$0$i + 4 >> 2] | 0;
    if (($4 | 0) != ($0 | 0)) {
     if ($tobool$i66$i) $cond3$i88$i = $4 & $sub$i64$i; else if ($4 >>> 0 < $1 >>> 0) $cond3$i88$i = $4; else $cond3$i88$i = ($4 >>> 0) % ($1 >>> 0) | 0;
     if (($cond3$i88$i | 0) != ($cond3$i70$i | 0)) {
      $__chash$0$i = $cond3$i70$i;
      label = 16;
      break L1;
     }
    }
    if ((HEAP32[$__nd$0$i + 8 >> 2] | 0) == ($0 | 0)) {
     $__nd$1$i = $__nd$0$i;
     break;
    } else $$pn$i = $__nd$0$i;
   }
  }
 } while (0);
 if ((label | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSK_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSD_ISS_EEEEEEmOT_DpOT0_($__h$i, $this, $0, 58325, $ref$tmp2, $ref$tmp5);
  $__value_$i$i$i79$i = $this + 12 | 0;
  $conv$i = +(((HEAP32[$__value_$i$i$i79$i >> 2] | 0) + 1 | 0) >>> 0);
  $7 = +HEAPF32[$this + 16 >> 2];
  do if ($cmp$i | $7 * +($1 >>> 0) < $conv$i) {
   $add32$i = $1 << 1 | ($1 >>> 0 < 3 | ($1 + -1 & $1 | 0) != 0) & 1;
   $conv39$i = ~~+Math_ceil(+($conv$i / $7)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE6rehashEm($this, $add32$i >>> 0 < $conv39$i >>> 0 ? $conv39$i : $add32$i);
   $9 = HEAP32[$__value_$i$i$i1$i$i >> 2] | 0;
   $sub$i55$i = $9 + -1 | 0;
   if (!($sub$i55$i & $9)) {
    $__bc$0$i = $9;
    $__chash$1$i = $sub$i55$i & $0;
    break;
   }
   if ($0 >>> 0 < $9 >>> 0) {
    $__bc$0$i = $9;
    $__chash$1$i = $0;
   } else {
    $__bc$0$i = $9;
    $__chash$1$i = ($0 >>> 0) % ($9 >>> 0) | 0;
   }
  } else {
   $__bc$0$i = $1;
   $__chash$1$i = $__chash$0$i;
  } while (0);
  $11 = HEAP32[(HEAP32[$this >> 2] | 0) + ($__chash$1$i << 2) >> 2] | 0;
  if (!$11) {
   $__value_$i$i$i = $this + 8 | 0;
   HEAP32[HEAP32[$__h$i >> 2] >> 2] = HEAP32[$__value_$i$i$i >> 2];
   HEAP32[$__value_$i$i$i >> 2] = HEAP32[$__h$i >> 2];
   HEAP32[(HEAP32[$this >> 2] | 0) + ($__chash$1$i << 2) >> 2] = $__value_$i$i$i;
   $16 = HEAP32[$__h$i >> 2] | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (!$17) $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i; else {
    $18 = HEAP32[$17 + 4 >> 2] | 0;
    $sub$i$i = $__bc$0$i + -1 | 0;
    if (!($sub$i$i & $__bc$0$i)) $cond3$i$i = $18 & $sub$i$i; else if ($18 >>> 0 < $__bc$0$i >>> 0) $cond3$i$i = $18; else $cond3$i$i = ($18 >>> 0) % ($__bc$0$i >>> 0) | 0;
    HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i$i << 2) >> 2] = $16;
    $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i;
   }
  } else {
   HEAP32[HEAP32[$__h$i >> 2] >> 2] = HEAP32[$11 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$__h$i >> 2];
   $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i;
  }
  $23 = HEAP32[$__value_$i$i$i38$pre$phi$iZZZZ2D >> 2] | 0;
  HEAP32[$__value_$i$i$i79$i >> 2] = (HEAP32[$__value_$i$i$i79$i >> 2] | 0) + 1;
  HEAP32[$__value_$i$i$i38$pre$phi$iZZZZ2D >> 2] = 0;
  $__nd$1$i = $23;
 }
 STACKTOP = sp;
 return $__nd$1$i + 12 | 0;
}

function __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$pn$i = 0, $0 = 0, $1 = 0, $11 = 0, $16 = 0, $17 = 0, $18 = 0, $23 = 0, $3 = 0, $4 = 0, $7 = 0.0, $9 = 0, $__bc$0$i = 0, $__chash$0$i = 0, $__chash$1$i = 0, $__h$i = 0, $__nd$0$i = 0, $__nd$1$i = 0, $__value_$i$i$i = 0, $__value_$i$i$i1$i$i = 0, $__value_$i$i$i38$pre$phi$iZZZZ2D = 0, $__value_$i$i$i85$i = 0, $add32$i = 0, $cmp$i = 0, $cond3$i$i = 0, $cond3$i64$i = 0, $cond3$i93$i = 0, $conv$i = 0.0, $conv39$i = 0, $ref$tmp2 = 0, $ref$tmp5 = 0, $sub$i$i = 0, $sub$i58$i = 0, $sub$i68$i = 0, $tobool$i60$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $__h$i = sp + 4 | 0;
 $ref$tmp2 = sp;
 $ref$tmp5 = sp + 16 | 0;
 HEAP32[$ref$tmp2 >> 2] = $__k;
 $0 = HEAP32[$__k >> 2] | 0;
 $__value_$i$i$i1$i$i = $this + 4 | 0;
 $1 = HEAP32[$__value_$i$i$i1$i$i >> 2] | 0;
 $cmp$i = ($1 | 0) == 0;
 L1 : do if ($cmp$i) {
  $__chash$0$i = 0;
  label = 16;
 } else {
  $sub$i58$i = $1 + -1 | 0;
  $tobool$i60$i = ($sub$i58$i & $1 | 0) == 0;
  if ($tobool$i60$i) $cond3$i64$i = $sub$i58$i & $0; else if ($0 >>> 0 < $1 >>> 0) $cond3$i64$i = $0; else $cond3$i64$i = ($0 >>> 0) % ($1 >>> 0) | 0;
  $3 = HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i64$i << 2) >> 2] | 0;
  if (!$3) {
   $__chash$0$i = $cond3$i64$i;
   label = 16;
  } else {
   $$pn$i = $3;
   while (1) {
    $__nd$0$i = HEAP32[$$pn$i >> 2] | 0;
    if (!$__nd$0$i) {
     $__chash$0$i = $cond3$i64$i;
     label = 16;
     break L1;
    }
    $4 = HEAP32[$__nd$0$i + 4 >> 2] | 0;
    if (($4 | 0) != ($0 | 0)) {
     if ($tobool$i60$i) $cond3$i93$i = $4 & $sub$i58$i; else if ($4 >>> 0 < $1 >>> 0) $cond3$i93$i = $4; else $cond3$i93$i = ($4 >>> 0) % ($1 >>> 0) | 0;
     if (($cond3$i93$i | 0) != ($cond3$i64$i | 0)) {
      $__chash$0$i = $cond3$i64$i;
      label = 16;
      break L1;
     }
    }
    if ((HEAP32[$__nd$0$i + 8 >> 2] | 0) == ($0 | 0)) {
     $__nd$1$i = $__nd$0$i;
     break;
    } else $$pn$i = $__nd$0$i;
   }
  }
 } while (0);
 if ((label | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_($__h$i, $this, $0, 58325, $ref$tmp2, $ref$tmp5);
  $__value_$i$i$i85$i = $this + 12 | 0;
  $conv$i = +(((HEAP32[$__value_$i$i$i85$i >> 2] | 0) + 1 | 0) >>> 0);
  $7 = +HEAPF32[$this + 16 >> 2];
  do if ($cmp$i | $7 * +($1 >>> 0) < $conv$i) {
   $add32$i = $1 << 1 | ($1 >>> 0 < 3 | ($1 + -1 & $1 | 0) != 0) & 1;
   $conv39$i = ~~+Math_ceil(+($conv$i / $7)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm($this, $add32$i >>> 0 < $conv39$i >>> 0 ? $conv39$i : $add32$i);
   $9 = HEAP32[$__value_$i$i$i1$i$i >> 2] | 0;
   $sub$i68$i = $9 + -1 | 0;
   if (!($sub$i68$i & $9)) {
    $__bc$0$i = $9;
    $__chash$1$i = $sub$i68$i & $0;
    break;
   }
   if ($0 >>> 0 < $9 >>> 0) {
    $__bc$0$i = $9;
    $__chash$1$i = $0;
   } else {
    $__bc$0$i = $9;
    $__chash$1$i = ($0 >>> 0) % ($9 >>> 0) | 0;
   }
  } else {
   $__bc$0$i = $1;
   $__chash$1$i = $__chash$0$i;
  } while (0);
  $11 = HEAP32[(HEAP32[$this >> 2] | 0) + ($__chash$1$i << 2) >> 2] | 0;
  if (!$11) {
   $__value_$i$i$i = $this + 8 | 0;
   HEAP32[HEAP32[$__h$i >> 2] >> 2] = HEAP32[$__value_$i$i$i >> 2];
   HEAP32[$__value_$i$i$i >> 2] = HEAP32[$__h$i >> 2];
   HEAP32[(HEAP32[$this >> 2] | 0) + ($__chash$1$i << 2) >> 2] = $__value_$i$i$i;
   $16 = HEAP32[$__h$i >> 2] | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (!$17) $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i; else {
    $18 = HEAP32[$17 + 4 >> 2] | 0;
    $sub$i$i = $__bc$0$i + -1 | 0;
    if (!($sub$i$i & $__bc$0$i)) $cond3$i$i = $18 & $sub$i$i; else if ($18 >>> 0 < $__bc$0$i >>> 0) $cond3$i$i = $18; else $cond3$i$i = ($18 >>> 0) % ($__bc$0$i >>> 0) | 0;
    HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i$i << 2) >> 2] = $16;
    $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i;
   }
  } else {
   HEAP32[HEAP32[$__h$i >> 2] >> 2] = HEAP32[$11 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$__h$i >> 2];
   $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i;
  }
  $23 = HEAP32[$__value_$i$i$i38$pre$phi$iZZZZ2D >> 2] | 0;
  HEAP32[$__value_$i$i$i85$i >> 2] = (HEAP32[$__value_$i$i$i85$i >> 2] | 0) + 1;
  HEAP32[$__value_$i$i$i38$pre$phi$iZZZZ2D >> 2] = 0;
  $__nd$1$i = $23;
 }
 STACKTOP = sp;
 return $__nd$1$i + 16 | 0;
}
function _arPattLoadFromBuffer($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0140 = 0, $$0141 = 0, $$0143 = 0, $$0146 = 0, $$0149 = 0, $$0150 = 0, $$0151 = 0, $$0152 = 0, $$1 = 0, $$1142 = 0, $$1144 = 0, $$1147 = 0, $$2 = 0, $$2145 = 0, $$2148 = 0, $$3 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $29 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $44 = 0, $47 = 0, $51 = 0, $57 = 0, $6 = 0, $64 = 0, $67 = 0, $69 = 0, $75 = 0, $77 = 0, $79 = 0, $82 = 0.0, $87 = 0, $92 = 0, $94 = 0, $96 = 0, $99 = 0.0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 do if (!$0) {
  _arLog(0, 3, 18012, sp);
  $$0 = -1;
 } else {
  if (!$1) {
   _arLog(0, 3, 18037, $vararg_buffer1);
   $$0 = -1;
   break;
  }
  $4 = $0 + 8 | 0;
  $6 = HEAP32[$0 + 4 >> 2] | 0;
  $$0146 = 0;
  while (1) {
   if (($$0146 | 0) >= ($6 | 0)) break;
   if (!(HEAP32[(HEAP32[$4 >> 2] | 0) + ($$0146 << 2) >> 2] | 0)) break;
   $$0146 = $$0146 + 1 | 0;
  }
  if (($$0146 | 0) == ($6 | 0)) $$0 = -1; else {
   $14 = ___strdup($1) | 0;
   if (!$14) {
    _arLog(0, 3, 18082, $vararg_buffer3);
    $$0 = -1;
    break;
   }
   $17 = $0 + 28 | 0;
   $18 = $0 + 12 | 0;
   $19 = $$0146 << 2;
   $20 = $0 + 20 | 0;
   $21 = $0 + 16 | 0;
   $22 = $0 + 24 | 0;
   $$0140 = _strtok($14, 18105) | 0;
   $$0152 = 0;
   L16 : while (1) {
    if ($$0152 >>> 0 >= 4) {
     label = 36;
     break;
    }
    $24 = $$0152 + $19 | 0;
    $$0143 = 0;
    $$0149 = 0;
    $$1 = $$0140;
    while (1) {
     if ($$0149 >>> 0 >= 3) break;
     $26 = ($$0149 | 0) == 0;
     $27 = ($$0149 | 0) == 2;
     $$0150 = 0;
     $$1144 = $$0143;
     $$2 = $$1;
     $29 = HEAP32[$17 >> 2] | 0;
     while (1) {
      if (($$0150 | 0) >= ($29 | 0)) break;
      $$0151 = 0;
      $$2145 = $$1144;
      $$3 = $$2;
      $31 = $29;
      while (1) {
       if (($$0151 | 0) >= ($31 | 0)) break;
       if (!$$3) {
        label = 21;
        break L16;
       }
       $33 = _atoi($$3) | 0;
       $34 = _strtok(0, 18105) | 0;
       $35 = 255 - $33 | 0;
       $44 = (HEAP32[(HEAP32[$18 >> 2] | 0) + ($24 << 2) >> 2] | 0) + ((((Math_imul(HEAP32[$17 >> 2] | 0, $$0150) | 0) + $$0151 | 0) * 3 | 0) + $$0149 << 2) | 0;
       HEAP32[$44 >> 2] = $35;
       $47 = HEAP32[(HEAP32[$20 >> 2] | 0) + ($24 << 2) >> 2] | 0;
       $51 = $47 + ((Math_imul(HEAP32[$17 >> 2] | 0, $$0150) | 0) + $$0151 << 2) | 0;
       if ($26) HEAP32[$51 >> 2] = $35; else {
        HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + $35;
        if ($27) {
         $57 = $47 + ((Math_imul(HEAP32[$17 >> 2] | 0, $$0150) | 0) + $$0151 << 2) | 0;
         HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) / 3 | 0;
        }
       }
       $$0151 = $$0151 + 1 | 0;
       $$2145 = $35 + $$2145 | 0;
       $$3 = $34;
       $31 = HEAP32[$17 >> 2] | 0;
      }
      $$0150 = $$0150 + 1 | 0;
      $$1144 = $$2145;
      $$2 = $$3;
      $29 = $31;
     }
     $$0143 = $$1144;
     $$0149 = $$0149 + 1 | 0;
     $$1 = $$2;
    }
    $64 = HEAP32[$17 >> 2] | 0;
    $67 = ($$0143 | 0) / (Math_imul($64 * 3 | 0, $64) | 0) | 0;
    $$0141 = 0;
    $$1147 = 0;
    $69 = $64;
    while (1) {
     if ($$1147 >>> 0 >= (Math_imul($69 * 3 | 0, $69) | 0) >>> 0) break;
     $75 = (HEAP32[(HEAP32[$18 >> 2] | 0) + ($24 << 2) >> 2] | 0) + ($$1147 << 2) | 0;
     $77 = (HEAP32[$75 >> 2] | 0) - $67 | 0;
     HEAP32[$75 >> 2] = $77;
     $79 = (Math_imul($77, $77) | 0) + $$0141 | 0;
     $$0141 = $79;
     $$1147 = $$1147 + 1 | 0;
     $69 = HEAP32[$17 >> 2] | 0;
    }
    $82 = +Math_sqrt(+(+($$0141 | 0)));
    HEAPF64[(HEAP32[$21 >> 2] | 0) + ($24 << 3) >> 3] = $82 == 0.0 ? 1.0e-07 : $82;
    $$1142 = 0;
    $$2148 = 0;
    $87 = $69;
    while (1) {
     if ($$2148 >>> 0 >= (Math_imul($87, $87) | 0) >>> 0) break;
     $92 = (HEAP32[(HEAP32[$20 >> 2] | 0) + ($24 << 2) >> 2] | 0) + ($$2148 << 2) | 0;
     $94 = (HEAP32[$92 >> 2] | 0) - $67 | 0;
     HEAP32[$92 >> 2] = $94;
     $96 = (Math_imul($94, $94) | 0) + $$1142 | 0;
     $$1142 = $96;
     $$2148 = $$2148 + 1 | 0;
     $87 = HEAP32[$17 >> 2] | 0;
    }
    $99 = +Math_sqrt(+(+($$1142 | 0)));
    HEAPF64[(HEAP32[$22 >> 2] | 0) + ($24 << 3) >> 3] = $99 == 0.0 ? 1.0e-07 : $99;
    $$0140 = $$1;
    $$0152 = $$0152 + 1 | 0;
   }
   if ((label | 0) == 21) {
    _arLog(0, 3, 18110, $vararg_buffer5);
    _free($14);
    $$0 = -1;
    break;
   } else if ((label | 0) == 36) {
    _free($14);
    HEAP32[(HEAP32[$4 >> 2] | 0) + ($$0146 << 2) >> 2] = 1;
    HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + 1;
    $$0 = $$0146;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i41 = 0, $$0$i$i44 = 0, $$037 = 0, $$038 = 0, $$byval_copy = 0, $$sink75 = 0, $$sink76 = 0, $$sink77 = 0, $$sroa$053$0 = 0, $$sroa$061$0 = 0, $$sroa$070$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $31 = 0, $32 = 0, $47 = 0, $48 = 0, $53 = 0, $6 = 0, $60 = 0, $69 = 0, $7 = 0, $76 = 0, $8 = 0, $84 = 0, $86 = 0, $9 = 0, $95 = 0, $96 = 0, $97 = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 $$byval_copy = sp + 336 | 0;
 $vararg_buffer1 = sp + 328 | 0;
 $6 = sp + 224 | 0;
 $7 = sp + 400 | 0;
 $8 = sp + 112 | 0;
 $9 = sp + 396 | 0;
 $10 = sp + 408 | 0;
 $11 = sp + 405 | 0;
 $12 = sp + 404 | 0;
 $13 = sp + 384 | 0;
 $14 = sp + 372 | 0;
 $15 = sp + 360 | 0;
 $16 = sp + 356 | 0;
 $17 = sp;
 $18 = sp + 352 | 0;
 $19 = sp + 344 | 0;
 $20 = sp + 348 | 0;
 HEAP32[$7 >> 2] = $6;
 HEAPF64[$$byval_copy >> 3] = $5;
 $21 = _snprintf($6, 100, 48236, $$byval_copy) | 0;
 if ($21 >>> 0 > 99) {
  $23 = __ZNSt3__26__clocEv() | 0;
  HEAPF64[$vararg_buffer1 >> 3] = $5;
  $24 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $23, 48236, $vararg_buffer1) | 0;
  $25 = HEAP32[$7 >> 2] | 0;
  if (!$25) __ZSt17__throw_bad_allocv();
  $28 = _malloc($24) | 0;
  if (!$28) __ZSt17__throw_bad_allocv(); else {
   $$0 = $28;
   $$038 = $24;
   $$sroa$061$0 = $28;
   $$sroa$070$0 = $25;
  }
 } else {
  $$0 = $8;
  $$038 = $21;
  $$sroa$061$0 = 0;
  $$sroa$070$0 = 0;
 }
 __ZNKSt3__28ios_base6getlocEv($9, $3);
 $31 = __ZNKSt3__26locale9use_facetERNS0_2idE($9, 57884) | 0;
 $32 = HEAP32[$7 >> 2] | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$31 >> 2] | 0) + 32 >> 2] & 15]($31, $32, $32 + $$038 | 0, $$0) | 0;
 if (!$$038) $47 = 0; else $47 = (HEAP8[HEAP32[$7 >> 2] >> 0] | 0) == 45;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$13 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 + 8 >> 2] = 0;
 $$0$i$i41 = 0;
 while (1) {
  if (($$0$i$i41 | 0) == 3) break;
  HEAP32[$14 + ($$0$i$i41 << 2) >> 2] = 0;
  $$0$i$i41 = $$0$i$i41 + 1 | 0;
 }
 HEAP32[$15 >> 2] = 0;
 HEAP32[$15 + 4 >> 2] = 0;
 HEAP32[$15 + 8 >> 2] = 0;
 $$0$i$i44 = 0;
 while (1) {
  if (($$0$i$i44 | 0) == 3) break;
  HEAP32[$15 + ($$0$i$i44 << 2) >> 2] = 0;
  $$0$i$i44 = $$0$i$i44 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($2, $47, $9, $10, $11, $12, $13, $14, $15, $16);
 $48 = HEAP32[$16 >> 2] | 0;
 if (($$038 | 0) > ($48 | 0)) {
  $53 = HEAP8[$15 + 11 >> 0] | 0;
  $60 = HEAP8[$14 + 11 >> 0] | 0;
  $$sink75 = $60 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $60 & 255;
  $$sink76 = $48 + 1 + ($$038 - $48 << 1) | 0;
  $$sink77 = $53 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $53 & 255;
 } else {
  $69 = HEAP8[$15 + 11 >> 0] | 0;
  $76 = HEAP8[$14 + 11 >> 0] | 0;
  $$sink75 = $76 << 24 >> 24 < 0 ? HEAP32[$14 + 4 >> 2] | 0 : $76 & 255;
  $$sink76 = $48 + 2 | 0;
  $$sink77 = $69 << 24 >> 24 < 0 ? HEAP32[$15 + 4 >> 2] | 0 : $69 & 255;
 }
 $84 = $$sink76 + $$sink77 + $$sink75 | 0;
 if ($84 >>> 0 > 100) {
  $86 = _malloc($84) | 0;
  if (!$86) __ZSt17__throw_bad_allocv(); else {
   $$037 = $86;
   $$sroa$053$0 = $86;
  }
 } else {
  $$037 = $17;
  $$sroa$053$0 = 0;
 }
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($$037, $18, $19, HEAP32[$3 + 4 >> 2] | 0, $$0, $$0 + $$038 | 0, $31, $47, $10, HEAP8[$11 >> 0] | 0, HEAP8[$12 >> 0] | 0, $13, $14, $15, $48);
 HEAP32[$20 >> 2] = HEAP32[$1 >> 2];
 $95 = HEAP32[$18 >> 2] | 0;
 $96 = HEAP32[$19 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$20 >> 2];
 $97 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $95, $96, $3, $4) | 0;
 if ($$sroa$053$0 | 0) _free($$sroa$053$0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($15);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($14);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($13);
 __ZNSt3__26localeD2Ev($9);
 if ($$sroa$061$0 | 0) _free($$sroa$061$0);
 if ($$sroa$070$0 | 0) _free($$sroa$070$0);
 STACKTOP = sp;
 return $97 | 0;
}

function __ZNSt3__213unordered_mapIi7ARParamNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$pn$i = 0, $0 = 0, $1 = 0, $11 = 0, $16 = 0, $17 = 0, $18 = 0, $23 = 0, $3 = 0, $4 = 0, $7 = 0.0, $9 = 0, $__bc$0$i = 0, $__chash$0$i = 0, $__chash$1$i = 0, $__h$i = 0, $__nd$0$i = 0, $__nd$1$i = 0, $__value_$i$i$i = 0, $__value_$i$i$i1$i$i = 0, $__value_$i$i$i38$pre$phi$iZZZZ2D = 0, $__value_$i$i$i79$i = 0, $add32$i = 0, $cmp$i = 0, $cond3$i$i = 0, $cond3$i70$i = 0, $cond3$i88$i = 0, $conv$i = 0.0, $conv39$i = 0, $ref$tmp2 = 0, $ref$tmp5 = 0, $sub$i$i = 0, $sub$i55$i = 0, $sub$i64$i = 0, $tobool$i66$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $__h$i = sp + 4 | 0;
 $ref$tmp2 = sp;
 $ref$tmp5 = sp + 16 | 0;
 HEAP32[$ref$tmp2 >> 2] = $__k;
 $0 = HEAP32[$__k >> 2] | 0;
 $__value_$i$i$i1$i$i = $this + 4 | 0;
 $1 = HEAP32[$__value_$i$i$i1$i$i >> 2] | 0;
 $cmp$i = ($1 | 0) == 0;
 L1 : do if ($cmp$i) {
  $__chash$0$i = 0;
  label = 16;
 } else {
  $sub$i64$i = $1 + -1 | 0;
  $tobool$i66$i = ($sub$i64$i & $1 | 0) == 0;
  if ($tobool$i66$i) $cond3$i70$i = $sub$i64$i & $0; else if ($0 >>> 0 < $1 >>> 0) $cond3$i70$i = $0; else $cond3$i70$i = ($0 >>> 0) % ($1 >>> 0) | 0;
  $3 = HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i70$i << 2) >> 2] | 0;
  if (!$3) {
   $__chash$0$i = $cond3$i70$i;
   label = 16;
  } else {
   $$pn$i = $3;
   while (1) {
    $__nd$0$i = HEAP32[$$pn$i >> 2] | 0;
    if (!$__nd$0$i) {
     $__chash$0$i = $cond3$i70$i;
     label = 16;
     break L1;
    }
    $4 = HEAP32[$__nd$0$i + 4 >> 2] | 0;
    if (($4 | 0) != ($0 | 0)) {
     if ($tobool$i66$i) $cond3$i88$i = $4 & $sub$i64$i; else if ($4 >>> 0 < $1 >>> 0) $cond3$i88$i = $4; else $cond3$i88$i = ($4 >>> 0) % ($1 >>> 0) | 0;
     if (($cond3$i88$i | 0) != ($cond3$i70$i | 0)) {
      $__chash$0$i = $cond3$i70$i;
      label = 16;
      break L1;
     }
    }
    if ((HEAP32[$__nd$0$i + 8 >> 2] | 0) == ($0 | 0)) {
     $__nd$1$i = $__nd$0$i;
     break;
    } else $$pn$i = $__nd$0$i;
   }
  }
 } while (0);
 if ((label | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_($__h$i, $this, $0, 58325, $ref$tmp2, $ref$tmp5);
  $__value_$i$i$i79$i = $this + 12 | 0;
  $conv$i = +(((HEAP32[$__value_$i$i$i79$i >> 2] | 0) + 1 | 0) >>> 0);
  $7 = +HEAPF32[$this + 16 >> 2];
  do if ($cmp$i | $7 * +($1 >>> 0) < $conv$i) {
   $add32$i = $1 << 1 | ($1 >>> 0 < 3 | ($1 + -1 & $1 | 0) != 0) & 1;
   $conv39$i = ~~+Math_ceil(+($conv$i / $7)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm($this, $add32$i >>> 0 < $conv39$i >>> 0 ? $conv39$i : $add32$i);
   $9 = HEAP32[$__value_$i$i$i1$i$i >> 2] | 0;
   $sub$i55$i = $9 + -1 | 0;
   if (!($sub$i55$i & $9)) {
    $__bc$0$i = $9;
    $__chash$1$i = $sub$i55$i & $0;
    break;
   }
   if ($0 >>> 0 < $9 >>> 0) {
    $__bc$0$i = $9;
    $__chash$1$i = $0;
   } else {
    $__bc$0$i = $9;
    $__chash$1$i = ($0 >>> 0) % ($9 >>> 0) | 0;
   }
  } else {
   $__bc$0$i = $1;
   $__chash$1$i = $__chash$0$i;
  } while (0);
  $11 = HEAP32[(HEAP32[$this >> 2] | 0) + ($__chash$1$i << 2) >> 2] | 0;
  if (!$11) {
   $__value_$i$i$i = $this + 8 | 0;
   HEAP32[HEAP32[$__h$i >> 2] >> 2] = HEAP32[$__value_$i$i$i >> 2];
   HEAP32[$__value_$i$i$i >> 2] = HEAP32[$__h$i >> 2];
   HEAP32[(HEAP32[$this >> 2] | 0) + ($__chash$1$i << 2) >> 2] = $__value_$i$i$i;
   $16 = HEAP32[$__h$i >> 2] | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (!$17) $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i; else {
    $18 = HEAP32[$17 + 4 >> 2] | 0;
    $sub$i$i = $__bc$0$i + -1 | 0;
    if (!($sub$i$i & $__bc$0$i)) $cond3$i$i = $18 & $sub$i$i; else if ($18 >>> 0 < $__bc$0$i >>> 0) $cond3$i$i = $18; else $cond3$i$i = ($18 >>> 0) % ($__bc$0$i >>> 0) | 0;
    HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i$i << 2) >> 2] = $16;
    $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i;
   }
  } else {
   HEAP32[HEAP32[$__h$i >> 2] >> 2] = HEAP32[$11 >> 2];
   HEAP32[$11 >> 2] = HEAP32[$__h$i >> 2];
   $__value_$i$i$i38$pre$phi$iZZZZ2D = $__h$i;
  }
  $23 = HEAP32[$__value_$i$i$i38$pre$phi$iZZZZ2D >> 2] | 0;
  HEAP32[$__value_$i$i$i79$i >> 2] = (HEAP32[$__value_$i$i$i79$i >> 2] | 0) + 1;
  HEAP32[$__value_$i$i$i38$pre$phi$iZZZZ2D >> 2] = 0;
  $__nd$1$i = $23;
 }
 STACKTOP = sp;
 return $__nd$1$i + 16 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_128parse_sizeof_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$idx$i = 0, $$045 = 0, $$045$in = 0, $$046 = 0, $$148 = 0, $16 = 0, $19 = 0, $23 = 0, $24 = 0, $28 = 0, $3 = 0, $35 = 0, $36 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $51 = 0, $52 = 0, $59 = 0, $6 = 0, $65 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 48 | 0;
 $4 = sp + 24 | 0;
 $5 = sp;
 $6 = sp + 12 | 0;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 90) {
  $16 = $0 + 2 | 0;
  if ((HEAP8[$16 >> 0] | 0) == 84) {
   $19 = $2 + 4 | 0;
   $23 = ((HEAP32[$19 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   $24 = __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
   $28 = ((HEAP32[$19 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0;
   if (($24 | 0) == ($16 | 0)) $$148 = $0; else {
    HEAP32[$3 >> 2] = 0;
    HEAP32[$3 + 4 >> 2] = 0;
    HEAP32[$3 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, 49842, __ZNSt3__211char_traitsIcE6lengthEPKc(49842) | 0);
    L7 : do if (($23 | 0) != ($28 | 0)) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($4, (HEAP32[$2 >> 2] | 0) + ($23 * 24 | 0) | 0);
     $35 = HEAP8[$4 + 11 >> 0] | 0;
     $36 = $35 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($3, $36 ? HEAP32[$4 >> 2] | 0 : $4, $36 ? HEAP32[$4 + 4 >> 2] | 0 : $35 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     $43 = $4 + 11 | 0;
     $44 = $4 + 4 | 0;
     $$045$in = $23;
     while (1) {
      $$045 = $$045$in + 1 | 0;
      if (($$045 | 0) == ($28 | 0)) break L7;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, (HEAP32[$2 >> 2] | 0) + ($$045 * 24 | 0) | 0);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($5, 0, 49853) | 0;
      HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
      HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
      HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
      $$0$i$i$i = 0;
      while (1) {
       if (($$0$i$i$i | 0) == 3) break;
       HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
       $$0$i$i$i = $$0$i$i$i + 1 | 0;
      }
      $51 = HEAP8[$43 >> 0] | 0;
      $52 = $51 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($3, $52 ? HEAP32[$4 >> 2] | 0 : $4, $52 ? HEAP32[$44 >> 2] | 0 : $51 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
      $$045$in = $$045;
     }
    } while (0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($3, 49629) | 0;
    $$046 = $28;
    while (1) {
     if (($$046 | 0) == ($23 | 0)) break;
     $59 = HEAP32[$19 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($59 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$19 >> 2] = $59 + -24;
     $$046 = $$046 + -1 | 0;
    }
    HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
    HEAP32[$6 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
    HEAP32[$6 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
    $$0$i$i = 0;
    while (1) {
     if (($$0$i$i | 0) == 3) break;
     HEAP32[$3 + ($$0$i$i << 2) >> 2] = 0;
     $$0$i$i = $$0$i$i + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $6);
    $65 = HEAP32[$19 >> 2] | 0;
    if ($65 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($65, $4);
     HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
    $$148 = $24;
   }
  } else $$148 = $0;
 } else $$148 = $0; else $$148 = $0; else $$148 = $0;
 STACKTOP = sp;
 return $$148 | 0;
}

function ___cxa_demangle($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i55 = 0, $$158 = 0, $$2 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $26 = 0, $29 = 0, $30 = 0, $34 = 0, $4 = 0, $41 = 0, $42 = 0, $45 = 0, $47 = 0, $48 = 0, $5 = 0, $51 = 0, $54 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $63 = 0, $66 = 0, $67 = 0, $70 = 0, $71 = 0, $79 = 0, $8 = 0, $84 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 4192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(4192);
 $4 = sp + 4176 | 0;
 $5 = sp;
 $6 = sp + 4112 | 0;
 if (!$0) label = 3; else {
  $8 = ($1 | 0) != 0;
  $9 = ($2 | 0) == 0;
  if ($8 & $9) label = 3; else {
   if ($8) $62 = HEAP32[$2 >> 2] | 0; else $62 = 0;
   __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EEC2Ev($5);
   __ZN10__cxxabiv112_GLOBAL__N_12DbC2ILm4096EEERNS0_5arenaIXT_EEE($6, $5);
   $12 = $6 + 48 | 0;
   $13 = $6 + 61 | 0;
   HEAP32[$12 >> 2] = 0;
   HEAP32[$12 + 4 >> 2] = 0;
   HEAP32[$12 + 8 >> 2] = 0;
   HEAP8[$12 + 12 >> 0] = 0;
   HEAP8[$13 >> 0] = 1;
   $14 = $6 + 32 | 0;
   $15 = $6 + 36 | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   if ($16 >>> 0 < (HEAP32[$6 + 40 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE($4, $5);
    HEAP32[$16 >> 2] = 0;
    HEAP32[$16 + 4 >> 2] = 0;
    HEAP32[$16 + 8 >> 2] = 0;
    HEAP32[$16 + 12 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 16;
   } else __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJRNS2_5arenaILm4096EEEEEEvDpOT_($14, $5);
   $26 = $6 + 62 | 0;
   HEAP8[$26 >> 0] = 0;
   HEAP8[$6 + 63 >> 0] = 1;
   HEAP32[$4 >> 2] = 0;
   $29 = $0 + (_strlen($0) | 0) | 0;
   __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($0, $29, $6, $4);
   $30 = HEAP32[$4 >> 2] | 0;
   do if (($30 | 0) != 0 | (HEAP8[$26 >> 0] | 0) == 0) {
    $54 = $30;
    label = 22;
   } else {
    $34 = HEAP32[$14 >> 2] | 0;
    if (($34 | 0) == (HEAP32[$15 >> 2] | 0)) label = 23; else if ((HEAP32[$34 >> 2] | 0) == (HEAP32[$34 + 4 >> 2] | 0)) label = 23; else {
     HEAP8[$26 >> 0] = 0;
     HEAP8[$13 >> 0] = 0;
     $41 = HEAP32[$6 >> 2] | 0;
     $42 = $6 + 4 | 0;
     $$0$i$i$i = HEAP32[$42 >> 2] | 0;
     while (1) {
      if (($$0$i$i$i | 0) == ($41 | 0)) break;
      $45 = $$0$i$i$i + -24 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($45);
      $$0$i$i$i = $45;
     }
     HEAP32[$42 >> 2] = $41;
     $47 = HEAP32[$6 + 16 >> 2] | 0;
     $48 = $6 + 20 | 0;
     $$0$i$i$i55 = HEAP32[$48 >> 2] | 0;
     while (1) {
      if (($$0$i$i$i55 | 0) == ($47 | 0)) break;
      $51 = $$0$i$i$i55 + -16 | 0;
      __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($51);
      $$0$i$i$i55 = $51;
     }
     HEAP32[$48 >> 2] = $47;
     __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($0, $29, $6, $4);
     if (!(HEAP8[$26 >> 0] | 0)) {
      $54 = HEAP32[$4 >> 2] | 0;
      label = 22;
      break;
     } else {
      HEAP32[$4 >> 2] = -2;
      $$2 = 0;
      $87 = -2;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 22) if (!$54) label = 23; else {
    $$2 = 0;
    $87 = $54;
   }
   do if ((label | 0) == 23) {
    $56 = $6 + 4 | 0;
    $59 = __ZNK10__cxxabiv112_GLOBAL__N_111string_pair4sizeEv((HEAP32[$56 >> 2] | 0) + -24 | 0) | 0;
    $60 = $59 + 1 | 0;
    if ($60 >>> 0 > $62 >>> 0) {
     $63 = _realloc($1, $60) | 0;
     if (!$63) {
      HEAP32[$4 >> 2] = -1;
      $$2 = 0;
      $87 = -1;
      break;
     }
     if ($9) $$158 = $63; else {
      HEAP32[$2 >> 2] = $60;
      $$158 = $63;
     }
    } else if (!$1) {
     $$2 = 0;
     $87 = 0;
     break;
    } else $$158 = $1;
    $66 = HEAP32[$56 >> 2] | 0;
    $67 = $66 + -12 | 0;
    $70 = HEAP8[$67 + 11 >> 0] | 0;
    $71 = $70 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($66 + -24 | 0, $71 ? HEAP32[$67 >> 2] | 0 : $67, $71 ? HEAP32[$66 + -8 >> 2] | 0 : $70 & 255) | 0;
    $79 = (HEAP32[$56 >> 2] | 0) + -24 | 0;
    if ((HEAP8[$79 + 11 >> 0] | 0) < 0) $84 = HEAP32[$79 >> 2] | 0; else $84 = $79;
    _memcpy($$158 | 0, $84 | 0, $59 | 0) | 0;
    HEAP8[$$158 + $59 >> 0] = 0;
    $$2 = $$158;
    $87 = 0;
   } while (0);
   if ($3 | 0) HEAP32[$3 >> 2] = $87;
   __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($6);
   __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EED2Ev($5);
   $$0 = $$2;
  }
 }
 if ((label | 0) == 3) if (!$3) $$0 = 0; else {
  HEAP32[$3 >> 2] = -3;
  $$0 = 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision14ExtractFREAK84ERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS5_9allocatorIS7_EEEEPKfSE_SE_SE_SE_SE_ffffffff($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = +$9;
 $10 = +$10;
 $11 = +$11;
 $12 = +$12;
 $13 = +$13;
 $14 = +$14;
 $15 = +$15;
 $16 = +$16;
 var $$0 = 0, $$036 = 0, $$1 = 0, $17 = 0, $24 = 0, $29 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $46 = 0, $51 = 0, $55 = 0, $57 = 0, $58 = 0, $59 = 0, $62 = 0, $67 = 0, $68 = 0, $76 = 0, $81 = 0, $85 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $17 = sp;
 if (!$1) {
  $24 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31972) | 0, 32003) | 0, 33528) | 0, 537) | 0, 33535) | 0, 32108) | 0;
  __ZNKSt3__28ios_base6getlocEv($17, $24 + (HEAP32[(HEAP32[$24 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $29 = __ZNKSt3__26locale9use_facetERNS0_2idE($17, 57884) | 0;
  $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$29 >> 2] | 0) + 28 >> 2] & 63]($29, 10) | 0;
  __ZNSt3__26localeD2Ev($17);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($24, $33) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($24) | 0;
  _abort();
 }
 $34 = __ZNK6vision18BinaryFeatureStore4sizeEv($0) | 0;
 $35 = $2 + 4 | 0;
 $36 = HEAP32[$35 >> 2] | 0;
 $37 = HEAP32[$2 >> 2] | 0;
 if (($34 | 0) != (($36 - $37 | 0) / 20 | 0 | 0)) {
  $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32124) | 0, 32003) | 0, 33528) | 0, 538) | 0, 33535) | 0, 32177) | 0;
  __ZNKSt3__28ios_base6getlocEv($17, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($17, 57884) | 0;
  $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 63]($51, 10) | 0;
  __ZNSt3__26localeD2Ev($17);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
  _abort();
 }
 $$0 = 0;
 $$036 = 0;
 $57 = $37;
 $58 = $36;
 while (1) {
  $59 = ($58 - $57 | 0) / 20 | 0;
  if ($$0 >>> 0 >= $59 >>> 0) break;
  $62 = __ZN6vision18BinaryFeatureStore7featureEm($0, $$036) | 0;
  if (__ZN6vision14ExtractFREAK84EPhPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff($62, $1, (HEAP32[$2 >> 2] | 0) + ($$0 * 20 | 0) | 0, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16) | 0) {
   $67 = (HEAP32[$2 >> 2] | 0) + ($$0 * 20 | 0) | 0;
   $68 = __ZN6vision18BinaryFeatureStore5pointEm($0, $$036) | 0;
   HEAP32[$68 >> 2] = HEAP32[$67 >> 2];
   HEAP32[$68 + 4 >> 2] = HEAP32[$67 + 4 >> 2];
   HEAP32[$68 + 8 >> 2] = HEAP32[$67 + 8 >> 2];
   HEAP32[$68 + 12 >> 2] = HEAP32[$67 + 12 >> 2];
   HEAP8[$68 + 16 >> 0] = HEAP8[$67 + 16 >> 0] | 0;
   $$1 = $$036 + 1 | 0;
  } else $$1 = $$036;
  $$0 = $$0 + 1 | 0;
  $$036 = $$1;
  $57 = HEAP32[$2 >> 2] | 0;
  $58 = HEAP32[$35 >> 2] | 0;
 }
 if (($$036 | 0) == ($59 | 0)) {
  __ZN6vision18BinaryFeatureStore6resizeEm($0, $$036);
  STACKTOP = sp;
  return;
 } else {
  $76 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32214) | 0, 32003) | 0, 33528) | 0, 617) | 0, 33535) | 0, 32265) | 0;
  __ZNKSt3__28ios_base6getlocEv($17, $76 + (HEAP32[(HEAP32[$76 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $81 = __ZNKSt3__26locale9use_facetERNS0_2idE($17, 57884) | 0;
  $85 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$81 >> 2] | 0) + 28 >> 2] & 63]($81, 10) | 0;
  __ZNSt3__26localeD2Ev($17);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($76, $85) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($76) | 0;
  _abort();
 }
}

function _jpeg_idct_4x4($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0152 = 0, $$0154 = 0, $$0155 = 0, $$1 = 0, $$1153 = 0, $$sink = 0, $$sink165 = 0, $$sink166 = 0, $$sink168 = 0, $109 = 0, $11 = 0, $112 = 0, $114 = 0, $116 = 0, $13 = 0, $136 = 0, $140 = 0, $142 = 0, $146 = 0, $150 = 0, $152 = 0, $154 = 0, $161 = 0, $168 = 0, $169 = 0, $181 = 0, $32 = 0, $39 = 0, $41 = 0, $5 = 0, $53 = 0, $61 = 0, $67 = 0, $7 = 0, $73 = 0, $77 = 0, $84 = 0, $91 = 0, $92 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 $5 = sp;
 $7 = HEAP32[$0 + 324 >> 2] | 0;
 $$0 = 8;
 $$0152 = $5;
 $$0154 = HEAP32[$1 + 80 >> 2] | 0;
 $$0155 = $2;
 L1 : while (1) {
  switch ($$0 | 0) {
  case 0:
   {
    break L1;
    break;
   }
  case 4:
   break;
  default:
   {
    $11 = HEAP16[$$0155 + 16 >> 1] | 0;
    $13 = HEAP16[$$0155 + 32 >> 1] | 0;
    if (!(($11 | $13) << 16 >> 16)) if (!(HEAP16[$$0155 + 48 >> 1] | 0)) if (!(HEAP16[$$0155 + 80 >> 1] | 0)) if (!(HEAP16[$$0155 + 96 >> 1] | 0)) if (!(HEAP16[$$0155 + 112 >> 1] | 0)) {
     $32 = Math_imul(HEAP16[$$0155 >> 1] << 2, HEAP32[$$0154 >> 2] | 0) | 0;
     HEAP32[$$0152 >> 2] = $32;
     HEAP32[$$0152 + 32 >> 2] = $32;
     HEAP32[$$0152 + 64 >> 2] = $32;
     $$sink = $32;
     $$sink165 = 24;
    } else {
     $41 = 0;
     label = 9;
    } else {
     $41 = 0;
     label = 9;
    } else {
     $41 = 0;
     label = 9;
    } else {
     $41 = 0;
     label = 9;
    } else {
     $41 = $13;
     label = 9;
    }
    if ((label | 0) == 9) {
     label = 0;
     $39 = Math_imul(HEAP16[$$0155 >> 1] << 14, HEAP32[$$0154 >> 2] | 0) | 0;
     $53 = (Math_imul(Math_imul(HEAP16[$$0155 + 96 >> 1] | 0, -6270) | 0, HEAP32[$$0154 + 192 >> 2] | 0) | 0) + (Math_imul(($41 << 16 >> 16) * 15137 | 0, HEAP32[$$0154 + 64 >> 2] | 0) | 0) | 0;
     $61 = Math_imul(HEAP32[$$0154 + 224 >> 2] | 0, HEAP16[$$0155 + 112 >> 1] | 0) | 0;
     $67 = Math_imul(HEAP32[$$0154 + 160 >> 2] | 0, HEAP16[$$0155 + 80 >> 1] | 0) | 0;
     $73 = Math_imul(HEAP32[$$0154 + 96 >> 2] | 0, HEAP16[$$0155 + 48 >> 1] | 0) | 0;
     $77 = Math_imul(HEAP32[$$0154 + 32 >> 2] | 0, $11 << 16 >> 16) | 0;
     $84 = ($67 * 11893 | 0) + (Math_imul($61, -1730) | 0) + (Math_imul($73, -17799) | 0) + ($77 * 8697 | 0) | 0;
     $91 = (Math_imul($67, -4926) | 0) + (Math_imul($61, -4176) | 0) + ($73 * 7373 | 0) + ($77 * 20995 | 0) | 0;
     $92 = $53 + $39 + 2048 | 0;
     HEAP32[$$0152 >> 2] = $92 + $91 >> 12;
     HEAP32[$$0152 + 96 >> 2] = $92 - $91 >> 12;
     $98 = $39 - $53 + 2048 | 0;
     HEAP32[$$0152 + 32 >> 2] = $98 + $84 >> 12;
     $$sink = $98 - $84 >> 12;
     $$sink165 = 16;
    }
    HEAP32[$$0152 + ($$sink165 << 2) >> 2] = $$sink;
   }
  }
  $$0 = $$0 + -1 | 0;
  $$0152 = $$0152 + 4 | 0;
  $$0154 = $$0154 + 4 | 0;
  $$0155 = $$0155 + 2 | 0;
 }
 $109 = $7 + 128 | 0;
 $$1 = 0;
 $$1153 = $5;
 while (1) {
  if (($$1 | 0) == 4) break;
  $112 = (HEAP32[$3 + ($$1 << 2) >> 2] | 0) + $4 | 0;
  $114 = HEAP32[$$1153 + 4 >> 2] | 0;
  $116 = HEAP32[$$1153 + 8 >> 2] | 0;
  if (!($114 | $116)) if (!(HEAP32[$$1153 + 12 >> 2] | 0)) if (!(HEAP32[$$1153 + 20 >> 2] | 0)) if (!(HEAP32[$$1153 + 24 >> 2] | 0)) if (!(HEAP32[$$1153 + 28 >> 2] | 0)) {
   $136 = HEAP8[$109 + (((HEAP32[$$1153 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$112 >> 0] = $136;
   HEAP8[$112 + 1 >> 0] = $136;
   HEAP8[$112 + 2 >> 0] = $136;
   $$sink166 = $136;
   $$sink168 = 3;
  } else {
   $142 = 0;
   label = 20;
  } else {
   $142 = 0;
   label = 20;
  } else {
   $142 = 0;
   label = 20;
  } else {
   $142 = 0;
   label = 20;
  } else {
   $142 = $116;
   label = 20;
  }
  if ((label | 0) == 20) {
   label = 0;
   $140 = HEAP32[$$1153 >> 2] << 14;
   $146 = (Math_imul(HEAP32[$$1153 + 24 >> 2] | 0, -6270) | 0) + ($142 * 15137 | 0) | 0;
   $150 = HEAP32[$$1153 + 28 >> 2] | 0;
   $152 = HEAP32[$$1153 + 20 >> 2] | 0;
   $154 = HEAP32[$$1153 + 12 >> 2] | 0;
   $161 = (Math_imul($150, -1730) | 0) + ($114 * 8697 | 0) + ($152 * 11893 | 0) + (Math_imul($154, -17799) | 0) | 0;
   $168 = (Math_imul($150, -4176) | 0) + ($114 * 20995 | 0) + (Math_imul($152, -4926) | 0) + ($154 * 7373 | 0) | 0;
   $169 = $146 + $140 + 262144 | 0;
   HEAP8[$112 >> 0] = HEAP8[$109 + (($169 + $168 | 0) >>> 19 & 1023) >> 0] | 0;
   HEAP8[$112 + 3 >> 0] = HEAP8[$109 + (($169 - $168 | 0) >>> 19 & 1023) >> 0] | 0;
   $181 = $140 - $146 + 262144 | 0;
   HEAP8[$112 + 1 >> 0] = HEAP8[$109 + (($181 + $161 | 0) >>> 19 & 1023) >> 0] | 0;
   $$sink166 = HEAP8[$109 + (($181 - $161 | 0) >>> 19 & 1023) >> 0] | 0;
   $$sink168 = 2;
  }
  HEAP8[$112 + $$sink168 >> 0] = $$sink166;
  $$1 = $$1 + 1 | 0;
  $$1153 = $$1153 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_template_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$067 = 0, $$068 = 0, $$1 = 0, $$sroa$077$0 = 0, $$sroa$083$0 = 0, $12 = 0, $17 = 0, $20 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, $38 = 0, $4 = 0, $49 = 0, $58 = 0, $60 = 0, $64 = 0, $68 = 0, $72 = 0, $73 = 0, $74 = 0, $77 = 0, $83 = 0, $84 = 0, $85 = 0, $isdigittmp = 0, $isdigittmp71 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp + 16 | 0;
 $4 = sp;
 L1 : do if (($1 - $0 | 0) > 1) if ((HEAP8[$0 >> 0] | 0) == 84) {
  $12 = HEAP8[$0 + 1 >> 0] | 0;
  if ($12 << 24 >> 24 == 95) {
   $17 = HEAP32[$2 + 36 >> 2] | 0;
   if ((HEAP32[$2 + 32 >> 2] | 0) == ($17 | 0)) {
    $$1 = $0;
    break;
   }
   $20 = HEAP32[$17 + -16 >> 2] | 0;
   if (($20 | 0) == (HEAP32[$17 + -12 >> 2] | 0)) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm3EEERAT__Kc($3);
    $37 = $2 + 4 | 0;
    $38 = HEAP32[$37 >> 2] | 0;
    if ($38 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($38, $3);
     HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    HEAP8[$2 + 62 >> 0] = 1;
    $$1 = $0 + 2 | 0;
    break;
   }
   $26 = HEAP32[$20 + 4 >> 2] | 0;
   $27 = $2 + 4 | 0;
   $28 = $2 + 8 | 0;
   $$sroa$083$0 = HEAP32[$20 >> 2] | 0;
   while (1) {
    if (($$sroa$083$0 | 0) == ($26 | 0)) break;
    $31 = HEAP32[$27 >> 2] | 0;
    if (($31 | 0) == (HEAP32[$28 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($2, $$sroa$083$0); else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($31, $$sroa$083$0);
     HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 24;
    }
    $$sroa$083$0 = $$sroa$083$0 + 24 | 0;
   }
   $$1 = $0 + 2 | 0;
   break;
  }
  $isdigittmp = ($12 << 24 >> 24) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) {
   $$067 = $isdigittmp;
   $$068 = $0 + 2 | 0;
   while (1) {
    if (($$068 | 0) == ($1 | 0)) {
     $$1 = $0;
     break L1;
    }
    $49 = HEAP8[$$068 >> 0] | 0;
    $isdigittmp71 = ($49 << 24 >> 24) + -48 | 0;
    if ($isdigittmp71 >>> 0 >= 10) break;
    $$067 = $isdigittmp71 + ($$067 * 10 | 0) | 0;
    $$068 = $$068 + 1 | 0;
   }
   if ($49 << 24 >> 24 == 95) {
    $58 = HEAP32[$2 + 36 >> 2] | 0;
    if ((HEAP32[$2 + 32 >> 2] | 0) == ($58 | 0)) $$1 = $0; else {
     $60 = $$067 + 1 | 0;
     $64 = HEAP32[$58 + -16 >> 2] | 0;
     $68 = $64;
     if ($60 >>> 0 >= (HEAP32[$58 + -12 >> 2] | 0) - $64 >> 4 >>> 0) {
      $83 = $$068 + 1 | 0;
      HEAP32[$4 >> 2] = 0;
      HEAP32[$4 + 4 >> 2] = 0;
      HEAP32[$4 + 8 >> 2] = 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($4, $0, $83);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
      $84 = $2 + 4 | 0;
      $85 = HEAP32[$84 >> 2] | 0;
      if ($85 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($85, $3);
       HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
      HEAP8[$2 + 62 >> 0] = 1;
      $$1 = $83;
      break;
     }
     $72 = HEAP32[$68 + ($60 << 4) + 4 >> 2] | 0;
     $73 = $2 + 4 | 0;
     $74 = $2 + 8 | 0;
     $$sroa$077$0 = HEAP32[$68 + ($60 << 4) >> 2] | 0;
     while (1) {
      if (($$sroa$077$0 | 0) == ($72 | 0)) break;
      $77 = HEAP32[$73 >> 2] | 0;
      if (($77 | 0) == (HEAP32[$74 >> 2] | 0)) __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($2, $$sroa$077$0); else {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($77, $$sroa$077$0);
       HEAP32[$73 >> 2] = (HEAP32[$73 >> 2] | 0) + 24;
      }
      $$sroa$077$0 = $$sroa$077$0 + 24 | 0;
     }
     $$1 = $$068 + 1 | 0;
    }
   } else $$1 = $0;
  } else $$1 = $0;
 } else $$1 = $0; else $$1 = $0; while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_115parse_call_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$add$i = 0, $$0$i$i$i$i = 0, $$0$i$i$idx$i = 0, $$063 = 0, $$066 = 0, $$1 = 0, $$164 = 0, $$6 = 0, $14 = 0, $15 = 0, $19 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $3 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $40 = 0, $46 = 0, $47 = 0, $50 = 0, $54 = 0, $57 = 0, $59 = 0, $60 = 0, $61 = 0, $64 = 0, $72 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp + 12 | 0;
 $4 = sp;
 L1 : do if (($1 - $0 | 0) > 3) if ((HEAP8[$0 >> 0] | 0) == 99) if ((HEAP8[$0 + 1 >> 0] | 0) == 108) {
  $14 = $0 + 2 | 0;
  $15 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
  if (($15 | 0) == ($14 | 0) | ($15 | 0) == ($1 | 0)) $$6 = $0; else {
   $19 = $2 + 4 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($20 | 0)) $$6 = $0; else {
    $22 = $20 + -12 | 0;
    $25 = HEAP8[$22 + 11 >> 0] | 0;
    $26 = $25 << 24 >> 24 < 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($20 + -24 | 0, $26 ? HEAP32[$22 >> 2] | 0 : $22, $26 ? HEAP32[$20 + -8 >> 2] | 0 : $25 & 255) | 0;
    HEAP32[$4 >> 2] = 0;
    HEAP32[$4 + 4 >> 2] = 0;
    HEAP32[$4 + 8 >> 2] = 0;
    $$0$i$i = 0;
    while (1) {
     if (($$0$i$i | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
     $$0$i$i = $$0$i$i + 1 | 0;
    }
    $35 = HEAP32[$19 >> 2] | 0;
    $36 = $35 + -12 | 0;
    $37 = $36 + 11 | 0;
    if ((HEAP8[$37 >> 0] | 0) < 0) {
     $40 = HEAP32[$36 >> 2] | 0;
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($40, $3);
     HEAP32[$35 + -8 >> 2] = 0;
    } else {
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($36, $3);
     HEAP8[$37 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($36);
    HEAP32[$36 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$36 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$36 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i$i | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc((HEAP32[$19 >> 2] | 0) + -24 | 0, 49631) | 0;
    $46 = $3 + 11 | 0;
    $47 = $3 + 4 | 0;
    $$0 = 0;
    $$063 = $15;
    while (1) {
     if ((HEAP8[$$063 >> 0] | 0) == 69) break;
     $50 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($$063, $1, $2) | 0;
     if (($50 | 0) == ($$063 | 0) | ($50 | 0) == ($1 | 0)) {
      $$6 = $0;
      break L1;
     }
     $54 = HEAP32[$19 >> 2] | 0;
     if ((HEAP32[$2 >> 2] | 0) == ($54 | 0)) {
      $$6 = $0;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $54 + -24 | 0);
     $57 = HEAP32[$19 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($57 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     $59 = $57 + -24 | 0;
     HEAP32[$19 >> 2] = $59;
     $60 = HEAP8[$46 >> 0] | 0;
     $61 = $60 << 24 >> 24 < 0;
     $64 = $61 ? HEAP32[$47 >> 2] | 0 : $60 & 255;
     if (!$64) {
      $$066 = 1;
      $$1 = $$0;
      $$164 = $50;
     } else if ((HEAP32[$2 >> 2] | 0) == ($59 | 0)) {
      $$066 = 0;
      $$1 = $0;
      $$164 = $$063;
     } else {
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($57 + -48 | 0, $61 ? HEAP32[$3 >> 2] | 0 : $3, $64) | 0;
      $$066 = 1;
      $$1 = $$0;
      $$164 = $50;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     if ($$066) {
      $$0 = $$1;
      $$063 = $$164;
     } else {
      $$6 = $$1;
      break L1;
     }
    }
    $72 = HEAP32[$19 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($72 | 0)) $$6 = $0; else {
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($72 + -24 | 0, 49629) | 0;
     $$6 = $$063 + 1 | 0;
    }
   }
  }
 } else $$6 = $0; else $$6 = $0; else $$6 = $0; while (0);
 STACKTOP = sp;
 return $$6 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_127parse_reinterpret_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i47 = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$idx$i = 0, $$341 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $3 = sp + 88 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 48 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 114) if ((HEAP8[$0 + 1 >> 0] | 0) == 99) {
  $19 = $0 + 2 | 0;
  $20 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($19, $1, $2) | 0;
  if (($20 | 0) == ($19 | 0)) $$341 = $0; else {
   $22 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($20, $1, $2) | 0;
   if (($22 | 0) == ($20 | 0)) $$341 = $0; else {
    $24 = $2 + 4 | 0;
    $25 = HEAP32[$24 >> 2] | 0;
    if ((($25 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$341 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $25 + -24 | 0);
     $32 = HEAP32[$24 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$24 >> 2] = $32 + -24;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $32 + -48 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($9, 0, 49881) | 0;
     HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
     HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 49878) | 0;
     HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     $$0$i$i$i47 = 0;
     while (1) {
      if (($$0$i$i$i47 | 0) == 3) break;
      HEAP32[$8 + ($$0$i$i$i47 << 2) >> 2] = 0;
      $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
     }
     $43 = HEAP8[$3 + 11 >> 0] | 0;
     $44 = $43 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($7, $44 ? HEAP32[$3 >> 2] | 0 : $3, $44 ? HEAP32[$3 + 4 >> 2] | 0 : $43 & 255) | 0;
     HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     $$0$i$i$i50 = 0;
     while (1) {
      if (($$0$i$i$i50 | 0) == 3) break;
      HEAP32[$7 + ($$0$i$i$i50 << 2) >> 2] = 0;
      $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 49629) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i53 = 0;
     while (1) {
      if (($$0$i$i$i53 | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i53 << 2) >> 2] = 0;
      $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$24 >> 2] | 0) + -24 | 0, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$341 = $22;
    }
   }
  }
 } else $$341 = $0; else $$341 = $0; else $$341 = $0;
 STACKTOP = sp;
 return $$341 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_dynamic_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i47 = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$idx$i = 0, $$341 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $3 = sp + 88 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 48 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 100) if ((HEAP8[$0 + 1 >> 0] | 0) == 99) {
  $19 = $0 + 2 | 0;
  $20 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($19, $1, $2) | 0;
  if (($20 | 0) == ($19 | 0)) $$341 = $0; else {
   $22 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($20, $1, $2) | 0;
   if (($22 | 0) == ($20 | 0)) $$341 = $0; else {
    $24 = $2 + 4 | 0;
    $25 = HEAP32[$24 >> 2] | 0;
    if ((($25 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$341 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $25 + -24 | 0);
     $32 = HEAP32[$24 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$24 >> 2] = $32 + -24;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $32 + -48 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($9, 0, 50781) | 0;
     HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
     HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 49878) | 0;
     HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     $$0$i$i$i47 = 0;
     while (1) {
      if (($$0$i$i$i47 | 0) == 3) break;
      HEAP32[$8 + ($$0$i$i$i47 << 2) >> 2] = 0;
      $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
     }
     $43 = HEAP8[$3 + 11 >> 0] | 0;
     $44 = $43 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($7, $44 ? HEAP32[$3 >> 2] | 0 : $3, $44 ? HEAP32[$3 + 4 >> 2] | 0 : $43 & 255) | 0;
     HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     $$0$i$i$i50 = 0;
     while (1) {
      if (($$0$i$i$i50 | 0) == 3) break;
      HEAP32[$7 + ($$0$i$i$i50 << 2) >> 2] = 0;
      $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 49629) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i53 = 0;
     while (1) {
      if (($$0$i$i$i53 | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i53 << 2) >> 2] = 0;
      $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$24 >> 2] | 0) + -24 | 0, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$341 = $22;
    }
   }
  }
 } else $$341 = $0; else $$341 = $0; else $$341 = $0;
 STACKTOP = sp;
 return $$341 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_static_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i47 = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$idx$i = 0, $$341 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $3 = sp + 88 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 48 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 99) {
  $19 = $0 + 2 | 0;
  $20 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($19, $1, $2) | 0;
  if (($20 | 0) == ($19 | 0)) $$341 = $0; else {
   $22 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($20, $1, $2) | 0;
   if (($22 | 0) == ($20 | 0)) $$341 = $0; else {
    $24 = $2 + 4 | 0;
    $25 = HEAP32[$24 >> 2] | 0;
    if ((($25 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$341 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $25 + -24 | 0);
     $32 = HEAP32[$24 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$24 >> 2] = $32 + -24;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $32 + -48 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($9, 0, 49865) | 0;
     HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
     HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 49878) | 0;
     HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     $$0$i$i$i47 = 0;
     while (1) {
      if (($$0$i$i$i47 | 0) == 3) break;
      HEAP32[$8 + ($$0$i$i$i47 << 2) >> 2] = 0;
      $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
     }
     $43 = HEAP8[$3 + 11 >> 0] | 0;
     $44 = $43 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($7, $44 ? HEAP32[$3 >> 2] | 0 : $3, $44 ? HEAP32[$3 + 4 >> 2] | 0 : $43 & 255) | 0;
     HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     $$0$i$i$i50 = 0;
     while (1) {
      if (($$0$i$i$i50 | 0) == 3) break;
      HEAP32[$7 + ($$0$i$i$i50 << 2) >> 2] = 0;
      $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 49629) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i53 = 0;
     while (1) {
      if (($$0$i$i$i53 | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i53 << 2) >> 2] = 0;
      $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$24 >> 2] | 0) + -24 | 0, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$341 = $22;
    }
   }
  }
 } else $$341 = $0; else $$341 = $0; else $$341 = $0;
 STACKTOP = sp;
 return $$341 | 0;
}

function _ar2ReadFeatureSet($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$067 = 0, $$068 = 0, $$069 = 0, $$070 = 0, $10 = 0, $12 = 0, $2 = 0, $24 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $33 = 0, $5 = 0, $7 = 0, $vararg_buffer = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer19 = 0, $vararg_buffer2 = 0, $vararg_buffer21 = 0, $vararg_buffer23 = 0, $vararg_buffer25 = 0, $vararg_buffer27 = 0, $vararg_buffer29 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 640 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(640);
 $vararg_buffer29 = sp + 624 | 0;
 $vararg_buffer27 = sp + 616 | 0;
 $vararg_buffer25 = sp + 608 | 0;
 $vararg_buffer23 = sp + 600 | 0;
 $vararg_buffer21 = sp + 592 | 0;
 $vararg_buffer19 = sp + 584 | 0;
 $vararg_buffer17 = sp + 576 | 0;
 $vararg_buffer15 = sp + 568 | 0;
 $vararg_buffer13 = sp + 560 | 0;
 $vararg_buffer11 = sp + 552 | 0;
 $vararg_buffer9 = sp + 544 | 0;
 $vararg_buffer7 = sp + 536 | 0;
 $vararg_buffer5 = sp + 528 | 0;
 $vararg_buffer2 = sp + 520 | 0;
 $vararg_buffer = sp + 512 | 0;
 $2 = sp;
 HEAP32[$vararg_buffer >> 2] = $0;
 HEAP32[$vararg_buffer + 4 >> 2] = $1;
 _sprintf($2, 20471, $vararg_buffer) | 0;
 $3 = _fopen($2, 20063) | 0;
 if (!$3) {
  HEAP32[$vararg_buffer2 >> 2] = $0;
  _arLog(0, 3, 19645, $vararg_buffer2);
  $$070 = 0;
 } else {
  $5 = _malloc(8) | 0;
  if (!$5) {
   _arLog(0, 3, 20454, $vararg_buffer5);
   _exit(1);
  }
  $7 = $5 + 4 | 0;
  L7 : do if ((_fread($7, 4, 1, $3) | 0) == 1) {
   $10 = HEAP32[$7 >> 2] | 0;
   $12 = _malloc($10 * 20 | 0) | 0;
   HEAP32[$5 >> 2] = $12;
   if (!$12) {
    _arLog(0, 3, 20454, $vararg_buffer9);
    _exit(1);
   }
   $$068 = 0;
   L12 : while (1) {
    if (($$068 | 0) >= ($10 | 0)) {
     $$069 = $5;
     break L7;
    }
    if ((_fread($12 + ($$068 * 20 | 0) + 8 | 0, 4, 1, $3) | 0) != 1) {
     label = 12;
     break;
    }
    if ((_fread($12 + ($$068 * 20 | 0) + 12 | 0, 4, 1, $3) | 0) != 1) {
     label = 15;
     break;
    }
    if ((_fread($12 + ($$068 * 20 | 0) + 16 | 0, 4, 1, $3) | 0) != 1) {
     label = 17;
     break;
    }
    $24 = $12 + ($$068 * 20 | 0) + 4 | 0;
    if ((_fread($24, 4, 1, $3) | 0) != 1) {
     label = 19;
     break;
    }
    $27 = HEAP32[$24 >> 2] | 0;
    $29 = _malloc($27 * 20 | 0) | 0;
    $30 = $12 + ($$068 * 20 | 0) | 0;
    HEAP32[$30 >> 2] = $29;
    if (!$29) {
     label = 22;
     break;
    }
    $$067 = 0;
    $33 = $27;
    while (1) {
     if (($$067 | 0) >= ($33 | 0)) break;
     if ((_fread((HEAP32[$30 >> 2] | 0) + ($$067 * 20 | 0) | 0, 4, 1, $3) | 0) != 1) {
      label = 25;
      break L12;
     }
     if ((_fread((HEAP32[$30 >> 2] | 0) + ($$067 * 20 | 0) + 4 | 0, 4, 1, $3) | 0) != 1) {
      label = 27;
      break L12;
     }
     if ((_fread((HEAP32[$30 >> 2] | 0) + ($$067 * 20 | 0) + 8 | 0, 4, 1, $3) | 0) != 1) {
      label = 29;
      break L12;
     }
     if ((_fread((HEAP32[$30 >> 2] | 0) + ($$067 * 20 | 0) + 12 | 0, 4, 1, $3) | 0) != 1) {
      label = 31;
      break L12;
     }
     if ((_fread((HEAP32[$30 >> 2] | 0) + ($$067 * 20 | 0) + 16 | 0, 4, 1, $3) | 0) != 1) {
      label = 34;
      break L12;
     }
     $$067 = $$067 + 1 | 0;
     $33 = HEAP32[$24 >> 2] | 0;
    }
    $$068 = $$068 + 1 | 0;
   }
   switch (label | 0) {
   case 12:
    {
     _arLog(0, 3, 19666, $vararg_buffer11);
     break;
    }
   case 15:
    {
     _arLog(0, 3, 19666, $vararg_buffer13);
     break;
    }
   case 17:
    {
     _arLog(0, 3, 19666, $vararg_buffer15);
     break;
    }
   case 19:
    {
     _arLog(0, 3, 19666, $vararg_buffer17);
     break;
    }
   case 22:
    {
     _arLog(0, 3, 20454, $vararg_buffer19);
     _exit(1);
     break;
    }
   case 25:
    {
     _arLog(0, 3, 19666, $vararg_buffer21);
     break;
    }
   case 27:
    {
     _arLog(0, 3, 19666, $vararg_buffer23);
     break;
    }
   case 29:
    {
     _arLog(0, 3, 19666, $vararg_buffer25);
     break;
    }
   case 31:
    {
     _arLog(0, 3, 19666, $vararg_buffer27);
     break;
    }
   case 34:
    {
     _arLog(0, 3, 19666, $vararg_buffer29);
     break;
    }
   }
   $$0 = 0;
   while (1) {
    if (($$0 | 0) == ($$068 | 0)) break;
    _free(HEAP32[$12 + ($$0 * 20 | 0) >> 2] | 0);
    $$0 = $$0 + 1 | 0;
   }
   _free($12);
   label = 39;
  } else {
   _arLog(0, 3, 19666, $vararg_buffer7);
   label = 39;
  } while (0);
  if ((label | 0) == 39) {
   _free($5);
   $$069 = 0;
  }
  _fclose($3) | 0;
  $$070 = $$069;
 }
 STACKTOP = sp;
 return $$070 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_const_cast_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$i = 0, $$0$i$i$i47 = 0, $$0$i$i$i50 = 0, $$0$i$i$i53 = 0, $$0$i$i$idx$i = 0, $$341 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $3 = 0, $32 = 0, $4 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $3 = sp + 88 | 0;
 $4 = sp + 64 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 48 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 12 | 0;
 $9 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 99) if ((HEAP8[$0 + 1 >> 0] | 0) == 99) {
  $19 = $0 + 2 | 0;
  $20 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($19, $1, $2) | 0;
  if (($20 | 0) == ($19 | 0)) $$341 = $0; else {
   $22 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($20, $1, $2) | 0;
   if (($22 | 0) == ($20 | 0)) $$341 = $0; else {
    $24 = $2 + 4 | 0;
    $25 = HEAP32[$24 >> 2] | 0;
    if ((($25 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$341 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $25 + -24 | 0);
     $32 = HEAP32[$24 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($32 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$24 >> 2] = $32 + -24;
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($9, $32 + -48 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($9, 0, 50798) | 0;
     HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
     HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
     HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$9 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($8, 49878) | 0;
     HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
     HEAP32[$7 + 4 >> 2] = HEAP32[$8 + 4 >> 2];
     HEAP32[$7 + 8 >> 2] = HEAP32[$8 + 8 >> 2];
     $$0$i$i$i47 = 0;
     while (1) {
      if (($$0$i$i$i47 | 0) == 3) break;
      HEAP32[$8 + ($$0$i$i$i47 << 2) >> 2] = 0;
      $$0$i$i$i47 = $$0$i$i$i47 + 1 | 0;
     }
     $43 = HEAP8[$3 + 11 >> 0] | 0;
     $44 = $43 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($7, $44 ? HEAP32[$3 >> 2] | 0 : $3, $44 ? HEAP32[$3 + 4 >> 2] | 0 : $43 & 255) | 0;
     HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
     HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
     HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
     $$0$i$i$i50 = 0;
     while (1) {
      if (($$0$i$i$i50 | 0) == 3) break;
      HEAP32[$7 + ($$0$i$i$i50 << 2) >> 2] = 0;
      $$0$i$i$i50 = $$0$i$i$i50 + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 49629) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i53 = 0;
     while (1) {
      if (($$0$i$i$i53 | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i53 << 2) >> 2] = 0;
      $$0$i$i$i53 = $$0$i$i$i53 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$24 >> 2] | 0) + -24 | 0, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($9);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$341 = $22;
    }
   }
  }
 } else $$341 = $0; else $$341 = $0; else $$341 = $0;
 STACKTOP = sp;
 return $$341 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$i$i$i = 0, $$0$i$i$i56 = 0, $$2 = 0, $$3 = 0, $17 = 0, $18 = 0, $25 = 0, $26 = 0, $3 = 0, $34 = 0, $39 = 0, $4 = 0, $40 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $3 = sp + 64 | 0;
 $4 = sp + 40 | 0;
 $5 = sp + 12 | 0;
 $6 = sp + 24 | 0;
 $7 = sp;
 L1 : do if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 102) {
  switch (HEAP8[$0 + 1 >> 0] | 0) {
  case 112:
   {
    $17 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($0 + 2 | 0, $1, $3) | 0;
    $18 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($17, $1) | 0;
    if (($18 | 0) == ($1 | 0)) $$0 = $0; else if ((HEAP8[$18 >> 0] | 0) == 95) {
     HEAP32[$6 >> 2] = 0;
     HEAP32[$6 + 4 >> 2] = 0;
     HEAP32[$6 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($6, $17, $18);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($6, 0, 50820) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
     $25 = $2 + 4 | 0;
     $26 = HEAP32[$25 >> 2] | 0;
     if ($26 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($26, $4);
      HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     $$0 = $18 + 1 | 0;
    } else $$0 = $0;
    $$3 = $$0;
    break L1;
    break;
   }
  case 76:
   break;
  default:
   {
    $$3 = $0;
    break L1;
   }
  }
  $34 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($0 + 2 | 0, $1) | 0;
  if (($34 | 0) == ($1 | 0)) $$2 = $0; else if ((HEAP8[$34 >> 0] | 0) == 112) {
   $39 = __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($34 + 1 | 0, $1, $3) | 0;
   $40 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($39, $1) | 0;
   if (($40 | 0) == ($1 | 0)) $$2 = $0; else if ((HEAP8[$40 >> 0] | 0) == 95) {
    HEAP32[$6 >> 2] = 0;
    HEAP32[$6 + 4 >> 2] = 0;
    HEAP32[$6 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($6, $39, $40);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($6, 0, 50820) | 0;
    HEAP32[$7 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$7 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$7 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i56 = 0;
    while (1) {
     if (($$0$i$i$i56 | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i56 << 2) >> 2] = 0;
     $$0$i$i$i56 = $$0$i$i$i56 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $7);
    $47 = $2 + 4 | 0;
    $48 = HEAP32[$47 >> 2] | 0;
    if ($48 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($48, $4);
     HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$2 = $40 + 1 | 0;
   } else $$2 = $0;
  } else $$2 = $0;
  $$3 = $$2;
 } else $$3 = $0; else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function _decode_mcu_DC_first($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0100 = 0, $$0104 = 0, $$094 = 0, $$099 = 0, $$1101 = 0, $$1105 = 0, $$2 = 0, $$2102 = 0, $$2106 = 0, $$298$ph = 0, $$3 = 0, $$4$ph = 0, $$4108$ph = 0, $$5 = 0, $$5109 = 0, $$6 = 0, $$6110 = 0, $2 = 0, $20 = 0, $21 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $45 = 0, $49 = 0, $5 = 0, $50 = 0, $54 = 0, $56 = 0, $62 = 0, $7 = 0, $72 = 0, $76 = 0, $83 = 0, $85 = 0, $90 = 0, $93 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $2 = sp + 20 | 0;
 $3 = sp;
 $5 = HEAP32[$0 + 444 >> 2] | 0;
 $7 = HEAP32[$0 + 412 >> 2] | 0;
 if (!(HEAP32[$0 + 276 >> 2] | 0)) label = 4; else if (!(HEAP32[$5 + 40 >> 2] | 0)) if (!(_process_restart_49($0) | 0)) $$2 = 0; else label = 4; else label = 4;
 L4 : do if ((label | 0) == 4) {
  if (!(HEAP32[$5 + 8 >> 2] | 0)) {
   HEAP32[$2 + 16 >> 2] = $0;
   $20 = $0 + 24 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   HEAP32[$2 >> 2] = HEAP32[$21 >> 2];
   $25 = $2 + 4 | 0;
   HEAP32[$25 >> 2] = HEAP32[$21 + 4 >> 2];
   $26 = $5 + 12 | 0;
   $27 = HEAP32[$26 >> 2] | 0;
   $28 = $5 + 16 | 0;
   $29 = HEAP32[$28 >> 2] | 0;
   $30 = $5 + 20 | 0;
   HEAP32[$3 >> 2] = HEAP32[$30 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$30 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$30 + 8 >> 2];
   HEAP32[$3 + 12 >> 2] = HEAP32[$30 + 12 >> 2];
   HEAP32[$3 + 16 >> 2] = HEAP32[$30 + 16 >> 2];
   $31 = $0 + 356 | 0;
   $32 = $2 + 8 | 0;
   $33 = $2 + 12 | 0;
   $$0100 = $29;
   $$0104 = $27;
   $$099 = 0;
   while (1) {
    if (($$099 | 0) >= (HEAP32[$31 >> 2] | 0)) break;
    $37 = HEAP32[$1 + ($$099 << 2) >> 2] | 0;
    $39 = HEAP32[$0 + 360 + ($$099 << 2) >> 2] | 0;
    $45 = HEAP32[$5 + 44 + (HEAP32[(HEAP32[$0 + 332 + ($39 << 2) >> 2] | 0) + 20 >> 2] << 2) >> 2] | 0;
    if (($$0100 | 0) < 8) {
     if (!(_jpeg_fill_bit_buffer($2, $$0104, $$0100, 0) | 0)) {
      $$2 = 0;
      break L4;
     }
     $49 = HEAP32[$32 >> 2] | 0;
     $50 = HEAP32[$33 >> 2] | 0;
     if (($50 | 0) < 8) {
      $$094 = 1;
      $$2102 = $50;
      $$2106 = $49;
      label = 12;
     } else {
      $$1101 = $50;
      $$1105 = $49;
      label = 10;
     }
    } else {
     $$1101 = $$0100;
     $$1105 = $$0104;
     label = 10;
    }
    if ((label | 0) == 10) {
     label = 0;
     $54 = $$1105 >> $$1101 + -8 & 255;
     $56 = HEAP32[$45 + 144 + ($54 << 2) >> 2] | 0;
     if (!$56) {
      $$094 = 9;
      $$2102 = $$1101;
      $$2106 = $$1105;
      label = 12;
     } else {
      $$298$ph = HEAPU8[$45 + 1168 + $54 >> 0] | 0;
      $$4$ph = $$1101 - $56 | 0;
      $$4108$ph = $$1105;
     }
    }
    if ((label | 0) == 12) {
     label = 0;
     $62 = _jpeg_huff_decode($2, $$2106, $$2102, $45, $$094) | 0;
     if (($62 | 0) < 0) {
      $$2 = 0;
      break L4;
     }
     $$298$ph = $62;
     $$4$ph = HEAP32[$33 >> 2] | 0;
     $$4108$ph = HEAP32[$32 >> 2] | 0;
    }
    if (!$$298$ph) {
     $$3 = 0;
     $$6 = $$4$ph;
     $$6110 = $$4108$ph;
    } else {
     if (($$4$ph | 0) < ($$298$ph | 0)) {
      if (!(_jpeg_fill_bit_buffer($2, $$4108$ph, $$4$ph, $$298$ph) | 0)) {
       $$2 = 0;
       break L4;
      }
      $$5 = HEAP32[$33 >> 2] | 0;
      $$5109 = HEAP32[$32 >> 2] | 0;
     } else {
      $$5 = $$4$ph;
      $$5109 = $$4108$ph;
     }
     $72 = $$5 - $$298$ph | 0;
     $76 = $$5109 >> $72 & (1 << $$298$ph) + -1;
     if (($76 | 0) < (HEAP32[2880 + ($$298$ph << 2) >> 2] | 0)) {
      $$3 = (HEAP32[2944 + ($$298$ph << 2) >> 2] | 0) + $76 | 0;
      $$6 = $72;
      $$6110 = $$5109;
     } else {
      $$3 = $76;
      $$6 = $72;
      $$6110 = $$5109;
     }
    }
    $83 = $3 + 4 + ($39 << 2) | 0;
    $85 = (HEAP32[$83 >> 2] | 0) + $$3 | 0;
    HEAP32[$83 >> 2] = $85;
    HEAP16[$37 >> 1] = $85 << $7;
    $$0100 = $$6;
    $$0104 = $$6110;
    $$099 = $$099 + 1 | 0;
   }
   $90 = HEAP32[$20 >> 2] | 0;
   HEAP32[$90 >> 2] = HEAP32[$2 >> 2];
   HEAP32[$90 + 4 >> 2] = HEAP32[$25 >> 2];
   HEAP32[$26 >> 2] = $$0104;
   HEAP32[$28 >> 2] = $$0100;
   HEAP32[$30 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$30 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
   HEAP32[$30 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
   HEAP32[$30 + 12 >> 2] = HEAP32[$3 + 12 >> 2];
   HEAP32[$30 + 16 >> 2] = HEAP32[$3 + 16 >> 2];
  }
  $93 = $5 + 40 | 0;
  HEAP32[$93 >> 2] = (HEAP32[$93 >> 2] | 0) + -1;
  $$2 = 1;
 } while (0);
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZN6vision21HoughSimilarityVoting19autoAdjustXYNumBinsEPKfS2_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$041 = 0, $103 = 0.0, $16 = 0, $21 = 0, $25 = 0, $33 = 0, $38 = 0, $4 = 0, $42 = 0, $5 = 0, $50 = 0, $55 = 0, $59 = 0, $60 = 0.0, $61 = 0, $67 = 0.0, $7 = 0, $76 = 0, $77 = 0, $86 = 0, $89 = 0, $9 = 0, $93 = 0, $95 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp + 12 | 0;
 $5 = sp;
 $7 = $0 + 4 | 0;
 $9 = __ZN6vision4max2IiEET_S1_S1_(HEAP32[$0 >> 2] | 0, HEAP32[$7 >> 2] | 0) | 0;
 __ZNSt3__26vectorIfNS_9allocatorIfEEEC2Em($5, $3);
 if (($3 | 0) <= 0) {
  $16 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31456) | 0, 31488) | 0, 33528) | 0, 208) | 0, 33535) | 0, 31613) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $16 + (HEAP32[(HEAP32[$16 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($16, $25) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($16) | 0;
  _abort();
 }
 if ((HEAP32[$0 >> 2] | 0) <= 0) {
  $33 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31635) | 0, 31488) | 0, 33528) | 0, 209) | 0, 33535) | 0, 31677) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $33 + (HEAP32[(HEAP32[$33 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $38 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $42 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$38 >> 2] | 0) + 28 >> 2] & 63]($38, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($33, $42) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($33) | 0;
  _abort();
 }
 if ((HEAP32[$7 >> 2] | 0) <= 0) {
  $50 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31700) | 0, 31488) | 0, 33528) | 0, 210) | 0, 33535) | 0, 31743) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $50 + (HEAP32[(HEAP32[$50 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $55 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $59 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$55 >> 2] | 0) + 28 >> 2] & 63]($55, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($50, $59) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($50) | 0;
  _abort();
 }
 $60 = +($9 | 0);
 $$041 = 0;
 while (1) {
  if (($$041 | 0) == ($3 | 0)) break;
  $95 = $$041 << 2;
  $103 = +__ZN6vision12SafeDivisionIfEET_S1_S1_(+HEAPF32[$1 + ($95 << 2) + 12 >> 2], +HEAPF32[$2 + ($95 << 2) + 12 >> 2]) * $60;
  HEAPF32[(HEAP32[$5 >> 2] | 0) + ($$041 << 2) >> 2] = $103;
  $$041 = $$041 + 1 | 0;
 }
 $61 = HEAP32[$5 >> 2] | 0;
 $67 = +__ZN6vision10FastMedianIfEET_PS1_i($61, (HEAP32[$5 + 4 >> 2] | 0) - $61 >> 2) * .25;
 $76 = __ZN6vision4max2IiEET_S1_S1_(5, ~~+Math_ceil(+((+HEAPF32[$0 + 24 >> 2] - +HEAPF32[$0 + 20 >> 2]) / $67))) | 0;
 $77 = $0 + 52 | 0;
 HEAP32[$77 >> 2] = $76;
 $86 = __ZN6vision4max2IiEET_S1_S1_(5, ~~+Math_ceil(+((+HEAPF32[$0 + 32 >> 2] - +HEAPF32[$0 + 28 >> 2]) / $67))) | 0;
 HEAP32[$0 + 56 >> 2] = $86;
 $89 = Math_imul(HEAP32[$77 >> 2] | 0, $86) | 0;
 HEAP32[$0 + 84 >> 2] = $89;
 $93 = Math_imul(HEAP32[$0 + 60 >> 2] | 0, $89) | 0;
 HEAP32[$0 + 88 >> 2] = $93;
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($5);
 STACKTOP = sp;
 return;
}

function __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$add$i$i = 0, $$0$i$i$idx$i$i = 0, $$024 = 0, $$byval_copy3 = 0, $$byval_copy4 = 0, $$byval_copy5 = 0, $10 = 0, $11 = 0, $16 = 0, $19 = 0, $21 = 0, $24 = 0, $28 = 0, $37 = 0, $38 = 0, $4 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $56 = 0, $6 = 0, $60 = 0, $65 = 0, $66 = 0, $7 = 0, $70 = 0, $77 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy5 = sp + 8 | 0;
 $$byval_copy4 = sp + 56 | 0;
 $$byval_copy3 = sp + 52 | 0;
 $4 = sp + 44 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 28 | 0;
 $7 = sp;
 $8 = sp + 48 | 0;
 $9 = sp + 40 | 0;
 $10 = sp + 32 | 0;
 $11 = sp + 16 | 0;
 if (__ZNK6vision4NodeILi96EE4leafEv($2) | 0) {
  HEAP32[$8 >> 2] = HEAP32[$0 + 76 >> 2];
  $16 = __ZNK6vision4NodeILi96EE12reverseIndexEv($2) | 0;
  HEAP32[$9 >> 2] = HEAP32[$16 >> 2];
  $19 = (__ZNK6vision4NodeILi96EE12reverseIndexEv($2) | 0) + 4 | 0;
  HEAP32[$10 >> 2] = HEAP32[$19 >> 2];
  HEAP32[$$byval_copy3 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$$byval_copy4 >> 2] = HEAP32[$9 >> 2];
  HEAP32[$$byval_copy5 >> 2] = HEAP32[$10 >> 2];
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPKiEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPiEEE4typeES8_SA_SA_($0 + 72 | 0, $$byval_copy3, $$byval_copy4, $$byval_copy5) | 0;
 } else {
  HEAP32[$11 >> 2] = 0;
  $21 = $11 + 4 | 0;
  HEAP32[$21 >> 2] = 0;
  HEAP32[$11 + 8 >> 2] = 0;
  __ZNK6vision4NodeILi96EE7nearestERNSt3__26vectorIPKS1_NS2_9allocatorIS5_EEEERNS2_14priority_queueINS_17PriorityQueueItemILi96EEENS3_ISC_NS6_ISC_EEEENS2_4lessISC_EEEEPKh($2, $11, $1, $3);
  $$024 = 0;
  while (1) {
   $24 = HEAP32[$11 >> 2] | 0;
   if ($$024 >>> 0 >= (HEAP32[$21 >> 2] | 0) - $24 >> 2 >>> 0) break;
   __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh($0, $1, HEAP32[$24 + ($$024 << 2) >> 2] | 0, $3);
   $$024 = $$024 + 1 | 0;
  }
  $28 = $0 + 100 | 0;
  if ((HEAP32[$28 >> 2] | 0) < (HEAP32[$0 + 104 >> 2] | 0)) {
   $37 = HEAP32[$1 >> 2] | 0;
   $38 = $1 + 4 | 0;
   if (($37 | 0) != (HEAP32[$38 >> 2] | 0)) {
    $41 = __ZNK6vision17PriorityQueueItemILi96EE4nodeEv($37) | 0;
    $42 = HEAP32[$1 >> 2] | 0;
    $43 = HEAP32[$38 >> 2] | 0;
    $45 = $43 - $42 | 0;
    if (($45 | 0) > 8) {
     $48 = $42;
     $49 = $43 + -8 | 0;
     $50 = $48;
     $52 = HEAP32[$50 >> 2] | 0;
     $55 = HEAP32[$50 + 4 >> 2] | 0;
     $56 = $$byval_copy5;
     HEAP32[$56 >> 2] = $52;
     HEAP32[$56 + 4 >> 2] = $55;
     $60 = $49;
     $65 = HEAP32[$60 + 4 >> 2] | 0;
     $66 = $48;
     HEAP32[$66 >> 2] = HEAP32[$60 >> 2];
     HEAP32[$66 + 4 >> 2] = $65;
     $70 = $49;
     HEAP32[$70 >> 2] = $52;
     HEAP32[$70 + 4 >> 2] = $55;
     __ZN6vision17PriorityQueueItemILi96EED2Ev($$byval_copy5);
     HEAP32[$4 >> 2] = $42;
     HEAP32[$5 >> 2] = $49;
     HEAP32[$6 >> 2] = $42;
     HEAP32[$$byval_copy3 >> 2] = HEAP32[$4 >> 2];
     HEAP32[$$byval_copy4 >> 2] = HEAP32[$5 >> 2];
     HEAP32[$$byval_copy5 >> 2] = HEAP32[$6 >> 2];
     __ZNSt3__211__sift_downIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_($$byval_copy3, $$byval_copy4, $7, ($45 >>> 3) + -1 | 0, $$byval_copy5);
     $77 = HEAP32[$38 >> 2] | 0;
    } else $77 = $43;
    $$0$i$i$idx$i$i = 0;
    while (1) {
     if (($$0$i$i$idx$i$i | 0) == -1) break;
     $$0$i$i$add$i$i = $$0$i$i$idx$i$i + -1 | 0;
     __ZN6vision17PriorityQueueItemILi96EED2Ev($77 + ($$0$i$i$add$i$i << 3) | 0);
     $$0$i$i$idx$i$i = $$0$i$i$add$i$i;
    }
    HEAP32[$38 >> 2] = $77 + -8;
    HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1;
    __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh($0, $1, $41, $3);
   }
  }
  __ZNSt3__213__vector_baseIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEED2Ev($11);
 }
 STACKTOP = sp;
 return;
}

function _examine_app0($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$pre$phi106Z2D = 0, $101 = 0, $103 = 0, $107 = 0, $126 = 0, $128 = 0, $134 = 0, $140 = 0, $146 = 0, $156 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $38 = 0, $39 = 0, $4 = 0, $48 = 0, $49 = 0, $51 = 0, $62 = 0, $65 = 0, $67 = 0, $70 = 0, $73 = 0, $76 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $87 = 0, $99 = 0, label = 0;
 $4 = $3 + $2 | 0;
 if ($2 >>> 0 > 13) if ((HEAP8[$1 >> 0] | 0) == 74) if ((HEAP8[$1 + 1 >> 0] | 0) == 70) if ((HEAP8[$1 + 2 >> 0] | 0) == 73) if ((HEAP8[$1 + 3 >> 0] | 0) == 70) if (!(HEAP8[$1 + 4 >> 0] | 0)) {
  HEAP32[$0 + 280 >> 2] = 1;
  $22 = HEAP8[$1 + 5 >> 0] | 0;
  $23 = $0 + 284 | 0;
  HEAP8[$23 >> 0] = $22;
  $25 = HEAP8[$1 + 6 >> 0] | 0;
  $26 = $0 + 285 | 0;
  HEAP8[$26 >> 0] = $25;
  $28 = HEAP8[$1 + 7 >> 0] | 0;
  $29 = $0 + 286 | 0;
  HEAP8[$29 >> 0] = $28;
  $38 = (HEAPU8[$1 + 8 >> 0] << 8 | HEAPU8[$1 + 9 >> 0]) & 65535;
  $39 = $0 + 288 | 0;
  HEAP16[$39 >> 1] = $38;
  $48 = (HEAPU8[$1 + 10 >> 0] << 8 | HEAPU8[$1 + 11 >> 0]) & 65535;
  $49 = $0 + 290 | 0;
  HEAP16[$49 >> 1] = $48;
  if ($22 << 24 >> 24 == 1) {
   $$pre$phi106Z2D = $0;
   $65 = 1;
   $67 = $25;
   $70 = $38;
   $73 = $48;
   $76 = $28;
  } else {
   $51 = HEAP32[$0 >> 2] | 0;
   HEAP32[$51 + 20 >> 2] = 119;
   HEAP32[$51 + 24 >> 2] = $22 & 255;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = HEAPU8[$26 >> 0];
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, -1);
   $$pre$phi106Z2D = $0;
   $65 = HEAP8[$23 >> 0] | 0;
   $67 = HEAP8[$26 >> 0] | 0;
   $70 = HEAP16[$39 >> 1] | 0;
   $73 = HEAP16[$49 >> 1] | 0;
   $76 = HEAP8[$29 >> 0] | 0;
  }
  $62 = HEAP32[$0 >> 2] | 0;
  HEAP32[$62 + 24 >> 2] = $65 & 255;
  HEAP32[$62 + 28 >> 2] = $67 & 255;
  HEAP32[$62 + 32 >> 2] = $70 & 65535;
  HEAP32[$62 + 36 >> 2] = $73 & 65535;
  HEAP32[$62 + 40 >> 2] = $76 & 255;
  HEAP32[$62 + 20 >> 2] = 87;
  FUNCTION_TABLE_vii[HEAP32[$62 + 4 >> 2] & 63]($$pre$phi106Z2D, 1);
  $81 = $1 + 12 | 0;
  $82 = HEAP8[$81 >> 0] | 0;
  $83 = $1 + 13 | 0;
  $84 = HEAP8[$83 >> 0] | 0;
  if (!(($84 | $82) << 24 >> 24)) {
   $101 = $82;
   $103 = $84;
  } else {
   $87 = HEAP32[$0 >> 2] | 0;
   HEAP32[$87 + 20 >> 2] = 90;
   HEAP32[$87 + 24 >> 2] = HEAPU8[$81 >> 0];
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = HEAPU8[$83 >> 0];
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($$pre$phi106Z2D, 1);
   $101 = HEAP8[$81 >> 0] | 0;
   $103 = HEAP8[$83 >> 0] | 0;
  }
  $99 = $4 + -14 | 0;
  if (($99 | 0) != (Math_imul(($101 & 255) * 3 | 0, $103 & 255) | 0)) {
   $107 = HEAP32[$0 >> 2] | 0;
   HEAP32[$107 + 20 >> 2] = 88;
   HEAP32[$107 + 24 >> 2] = $99;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($$pre$phi106Z2D, 1);
  }
 } else label = 16; else label = 16; else label = 16; else label = 16; else label = 25; else if ($2 >>> 0 > 5) if ((HEAP8[$1 >> 0] | 0) == 74) label = 16; else label = 25; else label = 25;
 L18 : do if ((label | 0) == 16) if ((HEAP8[$1 + 1 >> 0] | 0) == 70) if ((HEAP8[$1 + 2 >> 0] | 0) == 88) if ((HEAP8[$1 + 3 >> 0] | 0) == 88) if (!(HEAP8[$1 + 4 >> 0] | 0)) {
  $126 = $1 + 5 | 0;
  switch (HEAP8[$126 >> 0] | 0) {
  case 16:
   {
    $128 = HEAP32[$0 >> 2] | 0;
    HEAP32[$128 + 20 >> 2] = 108;
    HEAP32[$128 + 24 >> 2] = $4;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
    break L18;
    break;
   }
  case 17:
   {
    $134 = HEAP32[$0 >> 2] | 0;
    HEAP32[$134 + 20 >> 2] = 109;
    HEAP32[$134 + 24 >> 2] = $4;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
    break L18;
    break;
   }
  case 19:
   {
    $140 = HEAP32[$0 >> 2] | 0;
    HEAP32[$140 + 20 >> 2] = 110;
    HEAP32[$140 + 24 >> 2] = $4;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
    break L18;
    break;
   }
  default:
   {
    $146 = HEAP32[$0 >> 2] | 0;
    HEAP32[$146 + 20 >> 2] = 89;
    HEAP32[$146 + 24 >> 2] = HEAPU8[$126 >> 0];
    HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $4;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
    break L18;
   }
  }
 } else label = 25; else label = 25; else label = 25; else label = 25; while (0);
 if ((label | 0) == 25) {
  $156 = HEAP32[$0 >> 2] | 0;
  HEAP32[$156 + 20 >> 2] = 77;
  HEAP32[$156 + 24 >> 2] = $4;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
 }
 return;
}

function ___get_locale($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$093$lcssa = 0, $$093118 = 0, $$094114 = 0, $$1 = 0, $$1100111 = 0, $$195112 = 0, $$2122 = 0, $$2123 = 0, $$2124 = 0, $$4 = 0, $11 = 0, $15 = 0, $2 = 0, $23 = 0, $3 = 0, $40 = 0, $48 = 0, $54 = 0, $58 = 0, $6 = 0, $62 = 0, $63 = 0, $64 = 0, $68 = 0, $70 = 0, $72 = 0, $76 = 0, $78 = 0, $82 = 0, $86 = 0, $93 = 0, $98 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(272);
 $2 = sp;
 $3 = sp + 256 | 0;
 do if (!(HEAP8[$1 >> 0] | 0)) {
  $6 = _getenv(46126) | 0;
  if ($6 | 0) if (HEAP8[$6 >> 0] | 0) {
   $$1 = $6;
   break;
  }
  $11 = _getenv(6400 + ($0 * 12 | 0) | 0) | 0;
  if ($11 | 0) if (HEAP8[$11 >> 0] | 0) {
   $$1 = $11;
   break;
  }
  $15 = _getenv(46133) | 0;
  if ($15 | 0) if (HEAP8[$15 >> 0] | 0) {
   $$1 = $15;
   break;
  }
  $$1 = 46138;
 } else $$1 = $1; while (0);
 $$093118 = 0;
 L13 : while (1) {
  switch (HEAP8[$$1 + $$093118 >> 0] | 0) {
  case 47:
  case 0:
   {
    $$093$lcssa = $$093118;
    break L13;
    break;
   }
  default:
   {}
  }
  $$093118 = $$093118 + 1 | 0;
  if ($$093118 >>> 0 >= 15) {
   $$093$lcssa = 15;
   break;
  }
 }
 $23 = HEAP8[$$1 >> 0] | 0;
 if ($23 << 24 >> 24 == 46) {
  $$2122 = 46138;
  label = 15;
 } else if (!(HEAP8[$$1 + $$093$lcssa >> 0] | 0)) if ($23 << 24 >> 24 == 67) {
  $$2122 = $$1;
  label = 15;
 } else {
  $$2123 = $$1;
  label = 16;
 } else {
  $$2122 = 46138;
  label = 15;
 }
 if ((label | 0) == 15) if (!(HEAP8[$$2122 + 1 >> 0] | 0)) {
  $$2124 = $$2122;
  label = 18;
 } else {
  $$2123 = $$2122;
  label = 16;
 }
 L22 : do if ((label | 0) == 16) if (!(_strcmp($$2123, 46138) | 0)) {
  $$2124 = $$2123;
  label = 18;
 } else if (!(_strcmp($$2123, 46146) | 0)) {
  $$2124 = $$2123;
  label = 18;
 } else {
  $40 = HEAP32[14077] | 0;
  if ($40 | 0) {
   $$094114 = $40;
   do {
    if (!(_strcmp($$2123, $$094114 + 8 | 0) | 0)) {
     $$0 = $$094114;
     break L22;
    }
    $$094114 = HEAP32[$$094114 + 24 >> 2] | 0;
   } while (($$094114 | 0) != 0);
  }
  ___lock(56312);
  $48 = HEAP32[14077] | 0;
  L32 : do if ($48 | 0) {
   $$195112 = $48;
   while (1) {
    if (!(_strcmp($$2123, $$195112 + 8 | 0) | 0)) break;
    $54 = HEAP32[$$195112 + 24 >> 2] | 0;
    if (!$54) break L32; else $$195112 = $54;
   }
   ___unlock(56312);
   $$0 = $$195112;
   break L22;
  } while (0);
  L39 : do if (!(HEAP32[14050] | 0)) {
   $58 = _getenv(46152) | 0;
   if (!$58) label = 41; else if (!(HEAP8[$58 >> 0] | 0)) label = 41; else {
    $62 = 254 - $$093$lcssa | 0;
    $63 = $$093$lcssa + 1 | 0;
    $$1100111 = $58;
    while (1) {
     $64 = ___strchrnul($$1100111, 58) | 0;
     $68 = HEAP8[$64 >> 0] | 0;
     $70 = $64 - $$1100111 + (($68 << 24 >> 24 != 0) << 31 >> 31) | 0;
     if ($70 >>> 0 < $62 >>> 0) {
      _memcpy($2 | 0, $$1100111 | 0, $70 | 0) | 0;
      $72 = $2 + $70 | 0;
      HEAP8[$72 >> 0] = 47;
      _memcpy($72 + 1 | 0, $$2123 | 0, $$093$lcssa | 0) | 0;
      HEAP8[$2 + ($63 + $70) >> 0] = 0;
      $76 = ___map_file($2 | 0, $3 | 0) | 0;
      if ($76 | 0) break;
      $86 = HEAP8[$64 >> 0] | 0;
     } else $86 = $68;
     $$1100111 = $64 + ($86 << 24 >> 24 != 0 & 1) | 0;
     if (!(HEAP8[$$1100111 >> 0] | 0)) {
      label = 41;
      break L39;
     }
    }
    $78 = _malloc(28) | 0;
    if (!$78) {
     ___munmap($76, HEAP32[$3 >> 2] | 0) | 0;
     label = 41;
     break;
    } else {
     HEAP32[$78 >> 2] = $76;
     HEAP32[$78 + 4 >> 2] = HEAP32[$3 >> 2];
     $82 = $78 + 8 | 0;
     _memcpy($82 | 0, $$2123 | 0, $$093$lcssa | 0) | 0;
     HEAP8[$82 + $$093$lcssa >> 0] = 0;
     HEAP32[$78 + 24 >> 2] = HEAP32[14077];
     HEAP32[14077] = $78;
     $$4 = $78;
     break;
    }
   }
  } else label = 41; while (0);
  if ((label | 0) == 41) {
   $93 = _malloc(28) | 0;
   if (!$93) $$4 = $93; else {
    HEAP32[$93 >> 2] = HEAP32[3440];
    HEAP32[$93 + 4 >> 2] = HEAP32[3441];
    $98 = $93 + 8 | 0;
    _memcpy($98 | 0, $$2123 | 0, $$093$lcssa | 0) | 0;
    HEAP8[$98 + $$093$lcssa >> 0] = 0;
    HEAP32[$93 + 24 >> 2] = HEAP32[14077];
    HEAP32[14077] = $93;
    $$4 = $93;
   }
  }
  ___unlock(56312);
  $$0 = ($0 | 0) == 0 & ($$4 | 0) == 0 ? 13760 : $$4;
 } while (0);
 do if ((label | 0) == 18) {
  if (!$0) if ((HEAP8[$$2124 + 1 >> 0] | 0) == 46) {
   $$0 = 13760;
   break;
  }
  $$0 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$081$off0 = 0, $$084 = 0, $$085$off0 = 0, $$1 = 0, $$182$off0 = 0, $$186$off0 = 0, $$2 = 0, $$283$off0 = 0, $13 = 0, $19 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $47 = 0, $55 = 0, $58 = 0, $59 = 0, $60 = 0, $63 = 0, $66 = 0, $69 = 0, $76 = 0, $77 = 0, $86 = 0, label = 0;
 L1 : do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $4) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, $1, $2, $3); else {
  if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 >> 2] | 0, $4) | 0)) {
   $58 = HEAP32[$0 + 12 >> 2] | 0;
   $59 = $0 + 16 + ($58 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0 + 16 | 0, $1, $2, $3, $4);
   $60 = $0 + 24 | 0;
   if (($58 | 0) <= 1) break;
   $63 = HEAP32[$0 + 8 >> 2] | 0;
   if (!($63 & 2)) {
    $66 = $1 + 36 | 0;
    if ((HEAP32[$66 >> 2] | 0) != 1) {
     if (!($63 & 1)) {
      $86 = $1 + 54 | 0;
      $$2 = $60;
      while (1) {
       if (HEAP8[$86 >> 0] | 0) break L1;
       if ((HEAP32[$66 >> 2] | 0) == 1) break L1;
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$2, $1, $2, $3, $4);
       $$2 = $$2 + 8 | 0;
       if ($$2 >>> 0 >= $59 >>> 0) break L1;
      }
     }
     $76 = $1 + 24 | 0;
     $77 = $1 + 54 | 0;
     $$1 = $60;
     while (1) {
      if (HEAP8[$77 >> 0] | 0) break L1;
      if ((HEAP32[$66 >> 2] | 0) == 1) if ((HEAP32[$76 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$1, $1, $2, $3, $4);
      $$1 = $$1 + 8 | 0;
      if ($$1 >>> 0 >= $59 >>> 0) break L1;
     }
    }
   }
   $69 = $1 + 54 | 0;
   $$0 = $60;
   while (1) {
    if (HEAP8[$69 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($$0, $1, $2, $3, $4);
    $$0 = $$0 + 8 | 0;
    if ($$0 >>> 0 >= $59 >>> 0) break L1;
   }
  }
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0)) {
   $13 = $1 + 20 | 0;
   if ((HEAP32[$13 >> 2] | 0) != ($2 | 0)) {
    HEAP32[$1 + 32 >> 2] = $3;
    $19 = $1 + 44 | 0;
    if ((HEAP32[$19 >> 2] | 0) == 4) break;
    $25 = $0 + 16 + (HEAP32[$0 + 12 >> 2] << 3) | 0;
    $26 = $1 + 52 | 0;
    $27 = $1 + 53 | 0;
    $28 = $1 + 54 | 0;
    $29 = $0 + 8 | 0;
    $30 = $1 + 24 | 0;
    $$081$off0 = 0;
    $$084 = $0 + 16 | 0;
    $$085$off0 = 0;
    L32 : while (1) {
     if ($$084 >>> 0 >= $25 >>> 0) {
      $$283$off0 = $$081$off0;
      label = 18;
      break;
     }
     HEAP8[$26 >> 0] = 0;
     HEAP8[$27 >> 0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$084, $1, $2, $2, 1, $4);
     if (HEAP8[$28 >> 0] | 0) {
      $$283$off0 = $$081$off0;
      label = 18;
      break;
     }
     do if (!(HEAP8[$27 >> 0] | 0)) {
      $$182$off0 = $$081$off0;
      $$186$off0 = $$085$off0;
     } else {
      if (!(HEAP8[$26 >> 0] | 0)) if (!(HEAP32[$29 >> 2] & 1)) {
       $$283$off0 = 1;
       label = 18;
       break L32;
      } else {
       $$182$off0 = 1;
       $$186$off0 = $$085$off0;
       break;
      }
      if ((HEAP32[$30 >> 2] | 0) == 1) {
       label = 23;
       break L32;
      }
      if (!(HEAP32[$29 >> 2] & 2)) {
       label = 23;
       break L32;
      } else {
       $$182$off0 = 1;
       $$186$off0 = 1;
      }
     } while (0);
     $$081$off0 = $$182$off0;
     $$084 = $$084 + 8 | 0;
     $$085$off0 = $$186$off0;
    }
    do if ((label | 0) == 18) {
     if (!$$085$off0) {
      HEAP32[$13 >> 2] = $2;
      $47 = $1 + 40 | 0;
      HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 1;
      if ((HEAP32[$1 + 36 >> 2] | 0) == 1) if ((HEAP32[$30 >> 2] | 0) == 2) {
       HEAP8[$28 >> 0] = 1;
       if ($$283$off0) {
        label = 23;
        break;
       } else {
        $55 = 4;
        break;
       }
      }
     }
     if ($$283$off0) label = 23; else $55 = 4;
    } while (0);
    if ((label | 0) == 23) $55 = 3;
    HEAP32[$19 >> 2] = $55;
    break;
   }
  }
  if (($3 | 0) == 1) HEAP32[$1 + 32 >> 2] = 1;
 } while (0);
 return;
}

function _arDetectMarker2($0, $1, $2, $3, $4, $5, $6, $7, $8) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = +$6;
 $7 = $7 | 0;
 $8 = $8 | 0;
 var $$0 = 0, $$0127 = 0, $$0128 = 0, $$0131 = 0, $$0132 = 0, $$0133 = 0, $$0134 = 0, $$1 = 0, $$1$in = 0, $$1129 = 0, $$2 = 0, $$2130 = 0, $$3 = 0, $$ph = 0, $$pre136 = 0, $102 = 0, $105 = 0, $108 = 0, $113 = 0, $116 = 0, $122 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $24 = 0, $52 = 0, $57 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $67 = 0, $71 = 0.0, $76 = 0.0, $78 = 0.0, $79 = 0, $80 = 0, $81 = 0, $9 = 0, $91 = 0, $96 = 0, $99 = 0, label = 0;
 $9 = ($3 | 0) == 1;
 if ($9) {
  $$0 = ($0 | 0) / 2 | 0;
  $$0132 = ($1 | 0) / 2 | 0;
  $$0133 = ($4 | 0) / 4 | 0;
  $$0134 = ($5 | 0) / 4 | 0;
 } else {
  $$0 = $0;
  $$0132 = $1;
  $$0133 = $4;
  $$0134 = $5;
 }
 HEAP32[$8 >> 2] = 0;
 $14 = $2 + 8 | 0;
 $15 = $$0 + -2 | 0;
 $16 = $$0132 + -2 | 0;
 $17 = $2 + 1179664 | 0;
 $$0128 = 0;
 while (1) {
  if (($$0128 | 0) >= (HEAP32[$14 >> 2] | 0)) {
   label = 5;
   break;
  }
  $20 = $2 + 12 + ($$0128 << 2) | 0;
  $21 = HEAP32[$20 >> 2] | 0;
  if (!(($21 | 0) < ($$0134 | 0) | ($21 | 0) > ($$0133 | 0))) {
   $24 = $2 + 131084 + ($$0128 << 4) | 0;
   if ((HEAP32[$24 >> 2] | 0) != 1) if ((HEAP32[$2 + 131084 + ($$0128 << 4) + 4 >> 2] | 0) != ($15 | 0)) if ((HEAP32[$2 + 131084 + ($$0128 << 4) + 8 >> 2] | 0) != 1) if ((HEAP32[$2 + 131084 + ($$0128 << 4) + 12 >> 2] | 0) != ($16 | 0)) if ((_arGetContour(HEAP32[$2 >> 2] | 0, $$0, 0, $17, $$0128 + 1 | 0, $24, $7 + ((HEAP32[$8 >> 2] | 0) * 80048 | 0) | 0) | 0) >= 0) if ((_check_square(HEAP32[$20 >> 2] | 0, $7 + ((HEAP32[$8 >> 2] | 0) * 80048 | 0) | 0, $6) | 0) >= 0) {
    HEAP32[$7 + ((HEAP32[$8 >> 2] | 0) * 80048 | 0) >> 2] = HEAP32[$20 >> 2];
    $52 = HEAP32[$8 >> 2] | 0;
    HEAPF64[$7 + ($52 * 80048 | 0) + 8 >> 3] = +HEAPF64[$2 + 655376 + ($$0128 << 4) >> 3];
    HEAPF64[$7 + ($52 * 80048 | 0) + 16 >> 3] = +HEAPF64[$2 + 655376 + ($$0128 << 4) + 8 >> 3];
    $57 = $52 + 1 | 0;
    HEAP32[$8 >> 2] = $57;
    if (($57 | 0) == 60) {
     $$ph = 60;
     break;
    }
   }
  }
  $$0128 = $$0128 + 1 | 0;
 }
 if ((label | 0) == 5) $$ph = HEAP32[$8 >> 2] | 0;
 $$1129 = 0;
 $61 = $$ph;
 while (1) {
  if (($$1129 | 0) >= ($61 | 0)) break;
  $62 = $$1129 + 1 | 0;
  $63 = $7 + ($$1129 * 80048 | 0) + 8 | 0;
  $64 = $7 + ($$1129 * 80048 | 0) + 16 | 0;
  $65 = $7 + ($$1129 * 80048 | 0) | 0;
  $$0127 = $62;
  $67 = $61;
  while (1) {
   if (($$0127 | 0) >= ($67 | 0)) break;
   $71 = +HEAPF64[$63 >> 3] - +HEAPF64[$7 + ($$0127 * 80048 | 0) + 8 >> 3];
   $76 = +HEAPF64[$64 >> 3] - +HEAPF64[$7 + ($$0127 * 80048 | 0) + 16 >> 3];
   $78 = $71 * $71 + $76 * $76;
   $79 = HEAP32[$65 >> 2] | 0;
   $80 = $7 + ($$0127 * 80048 | 0) | 0;
   $81 = HEAP32[$80 >> 2] | 0;
   if (($79 | 0) > ($81 | 0)) {
    if ($78 < +(($79 | 0) / 4 | 0 | 0)) HEAP32[$80 >> 2] = 0;
   } else if ($78 < +(($81 | 0) / 4 | 0 | 0)) HEAP32[$65 >> 2] = 0;
   $$0127 = $$0127 + 1 | 0;
   $67 = HEAP32[$8 >> 2] | 0;
  }
  $$1129 = $62;
  $61 = $67;
 }
 $$2130 = 0;
 $91 = $61;
 while (1) {
  if (($$2130 | 0) >= ($91 | 0)) break;
  if (!(HEAP32[$7 + ($$2130 * 80048 | 0) >> 2] | 0)) {
   $$1$in = $$2130;
   $96 = $91;
   while (1) {
    $$1 = $$1$in + 1 | 0;
    if (($$1 | 0) >= ($96 | 0)) break;
    _memcpy($7 + ($$1$in * 80048 | 0) | 0, $7 + ($$1 * 80048 | 0) | 0, 80048) | 0;
    $$1$in = $$1;
    $96 = HEAP32[$8 >> 2] | 0;
   }
   $99 = $96 + -1 | 0;
   HEAP32[$8 >> 2] = $99;
   $122 = $99;
  } else $122 = $91;
  $$2130 = $$2130 + 1 | 0;
  $91 = $122;
 }
 L44 : do if ($9) {
  $$0131 = $7;
  $$3 = 0;
  $102 = $91;
  while (1) {
   if (($$3 | 0) >= ($102 | 0)) break L44;
   HEAP32[$$0131 >> 2] = HEAP32[$$0131 >> 2] << 2;
   $105 = $$0131 + 8 | 0;
   HEAPF64[$105 >> 3] = +HEAPF64[$105 >> 3] * 2.0;
   $108 = $$0131 + 16 | 0;
   HEAPF64[$108 >> 3] = +HEAPF64[$108 >> 3] * 2.0;
   $$pre136 = HEAP32[$$0131 + 24 >> 2] | 0;
   $$2 = 0;
   while (1) {
    if (($$2 | 0) >= ($$pre136 | 0)) break;
    $113 = $$0131 + 28 + ($$2 << 2) | 0;
    HEAP32[$113 >> 2] = HEAP32[$113 >> 2] << 1;
    $116 = $$0131 + 40028 + ($$2 << 2) | 0;
    HEAP32[$116 >> 2] = HEAP32[$116 >> 2] << 1;
    $$2 = $$2 + 1 | 0;
   }
   $$0131 = $$0131 + 80048 | 0;
   $$3 = $$3 + 1 | 0;
   $102 = HEAP32[$8 >> 2] | 0;
  }
 } while (0);
 return 0;
}
function __ZN6vision25DoGScaleInvariantDetector13pruneFeaturesEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $12 = 0, $15 = 0, $17 = 0, $2 = 0, $26 = 0, $3 = 0, $31 = 0, $35 = 0, $4 = 0, $42 = 0, $51 = 0, $56 = 0, $60 = 0, $77 = 0, $82 = 0, $86 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp + 12 | 0;
 $2 = sp;
 $3 = $0 + 60 | 0;
 $4 = $0 + 64 | 0;
 $9 = $0 + 84 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 do if ((((HEAP32[$4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0) / 36 | 0) >>> 0 > $10 >>> 0) {
  $12 = $0 + 16 | 0;
  $15 = HEAP32[$12 >> 2] | 0;
  $17 = ((HEAP32[$0 + 20 >> 2] | 0) - $15 | 0) / 12 | 0;
  if (($17 | 0) != (HEAP32[$0 + 8 >> 2] | 0)) {
   $26 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21855) | 0, 20520) | 0, 33528) | 0, 454) | 0, 33535) | 0, 21910) | 0;
   __ZNKSt3__28ios_base6getlocEv($1, $26 + (HEAP32[(HEAP32[$26 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $31 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 57884) | 0;
   $35 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$31 >> 2] | 0) + 28 >> 2] & 63]($31, 10) | 0;
   __ZNSt3__26localeD2Ev($1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($26, $35) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($26) | 0;
   _abort();
  }
  $42 = ((HEAP32[$15 + 4 >> 2] | 0) - (HEAP32[$15 >> 2] | 0) | 0) / 12 | 0;
  if (($42 | 0) != (HEAP32[$0 + 12 >> 2] | 0)) {
   $51 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21936) | 0, 20520) | 0, 33528) | 0, 455) | 0, 33535) | 0, 21910) | 0;
   __ZNKSt3__28ios_base6getlocEv($1, $51 + (HEAP32[(HEAP32[$51 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $56 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 57884) | 0;
   $60 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$56 >> 2] | 0) + 28 >> 2] & 63]($56, 10) | 0;
   __ZNSt3__26localeD2Ev($1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($51, $60) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($51) | 0;
   _abort();
  }
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = 0;
  HEAP32[$2 + 8 >> 2] = 0;
  __ZN6vision16PruneDoGFeaturesERNSt3__26vectorINS1_INS1_INS0_4pairIfmEENS0_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEEERNS1_INS_25DoGScaleInvariantDetector12FeaturePointENS4_ISD_EEEERKSF_iiiii($12, $2, $3, $17, $42, HEAP32[$0 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0, $10);
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE4swapERS6_($3, $2);
  if ((((HEAP32[$4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0) / 36 | 0) >>> 0 > (HEAP32[$9 >> 2] | 0) >>> 0) {
   $77 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21994) | 0, 20520) | 0, 33528) | 0, 469) | 0, 33535) | 0, 22063) | 0;
   __ZNKSt3__28ios_base6getlocEv($1, $77 + (HEAP32[(HEAP32[$77 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $82 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 57884) | 0;
   $86 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$82 >> 2] | 0) + 28 >> 2] & 63]($82, 10) | 0;
   __ZNSt3__26localeD2Ev($1);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($77, $86) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($77) | 0;
   _abort();
  } else {
   __ZNSt3__213__vector_baseIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEED2Ev($2);
   break;
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i26 = 0, $$0$i$i28 = 0, $$byval_copy = 0, $$sink46 = 0, $$sink47 = 0, $$sink48 = 0, $$sroa$040$0 = 0, $10 = 0, $102 = 0, $103 = 0, $104 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $30 = 0, $42 = 0, $43 = 0, $44 = 0, $47 = 0, $48 = 0, $54 = 0, $6 = 0, $62 = 0, $7 = 0, $72 = 0, $8 = 0, $80 = 0, $88 = 0, $9 = 0, $91 = 0, $97 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 480 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(480);
 $$byval_copy = sp + 464 | 0;
 $6 = sp + 460 | 0;
 $7 = sp + 468 | 0;
 $8 = sp + 456 | 0;
 $9 = sp + 452 | 0;
 $10 = sp + 440 | 0;
 $11 = sp + 428 | 0;
 $12 = sp + 416 | 0;
 $13 = sp + 412 | 0;
 $14 = sp;
 $15 = sp + 408 | 0;
 $16 = sp + 404 | 0;
 $17 = sp + 400 | 0;
 __ZNKSt3__28ios_base6getlocEv($6, $3);
 $18 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57916) | 0;
 $20 = $5 + 8 + 3 | 0;
 $21 = HEAP8[$20 >> 0] | 0;
 $22 = $21 << 24 >> 24 < 0;
 $23 = $5 + 4 | 0;
 if (!(($22 ? HEAP32[$23 >> 2] | 0 : $21 & 255) | 0)) $42 = 0; else {
  $30 = HEAP32[($22 ? HEAP32[$5 >> 2] | 0 : $5) >> 2] | 0;
  $42 = ($30 | 0) == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 44 >> 2] & 63]($18, 45) | 0);
 };
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 $$0$i$i26 = 0;
 while (1) {
  if (($$0$i$i26 | 0) == 3) break;
  HEAP32[$11 + ($$0$i$i26 << 2) >> 2] = 0;
  $$0$i$i26 = $$0$i$i26 + 1 | 0;
 }
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 $$0$i$i28 = 0;
 while (1) {
  if (($$0$i$i28 | 0) == 3) break;
  HEAP32[$12 + ($$0$i$i28 << 2) >> 2] = 0;
  $$0$i$i28 = $$0$i$i28 + 1 | 0;
 }
 __ZNSt3__211__money_putIwE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERwS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS9_IwNSA_IwEENSC_IwEEEESJ_Ri($2, $42, $6, $7, $8, $9, $10, $11, $12, $13);
 $43 = HEAP8[$20 >> 0] | 0;
 $44 = $43 << 24 >> 24 < 0;
 $47 = $44 ? HEAP32[$23 >> 2] | 0 : $43 & 255;
 $48 = HEAP32[$13 >> 2] | 0;
 if (($47 | 0) > ($48 | 0)) {
  $54 = HEAP8[$12 + 8 + 3 >> 0] | 0;
  $62 = HEAP8[$11 + 8 + 3 >> 0] | 0;
  $$sink46 = $62 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $62 & 255;
  $$sink47 = $48 + 1 + ($47 - $48 << 1) | 0;
  $$sink48 = $54 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $54 & 255;
 } else {
  $72 = HEAP8[$12 + 8 + 3 >> 0] | 0;
  $80 = HEAP8[$11 + 8 + 3 >> 0] | 0;
  $$sink46 = $80 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $80 & 255;
  $$sink47 = $48 + 2 | 0;
  $$sink48 = $72 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $72 & 255;
 }
 $88 = $$sink47 + $$sink48 + $$sink46 | 0;
 if ($88 >>> 0 > 100) {
  $91 = _malloc($88 << 2) | 0;
  if (!$91) __ZSt17__throw_bad_allocv(); else {
   $$0 = $91;
   $$sroa$040$0 = $91;
  }
 } else {
  $$0 = $14;
  $$sroa$040$0 = 0;
 }
 $97 = $44 ? HEAP32[$5 >> 2] | 0 : $5;
 __ZNSt3__211__money_putIwE8__formatEPwRS2_S3_jPKwS5_RKNS_5ctypeIwEEbRKNS_10money_base7patternEwwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNSE_IwNSF_IwEENSH_IwEEEESQ_i($$0, $15, $16, HEAP32[$3 + 4 >> 2] | 0, $97, $97 + ($47 << 2) | 0, $18, $42, $7, HEAP32[$8 >> 2] | 0, HEAP32[$9 >> 2] | 0, $10, $11, $12, $48);
 HEAP32[$17 >> 2] = HEAP32[$1 >> 2];
 $102 = HEAP32[$15 >> 2] | 0;
 $103 = HEAP32[$16 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$17 >> 2];
 $104 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$0, $102, $103, $3, $4) | 0;
 if ($$sroa$040$0 | 0) _free($$sroa$040$0);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($12);
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__26localeD2Ev($6);
 STACKTOP = sp;
 return $104 | 0;
}

function __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i78 = 0, $$07$i$i = 0, $$07$i$i77 = 0, $$072 = 0, $$073 = 0, $$075 = 0, $$1 = 0, $$174 = 0, $$176 = 0, $$pre$phiZ2D = 0, $103 = 0, $104 = 0, $112 = 0, $13 = 0, $14 = 0, $16 = 0, $25 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $42 = 0, $47 = 0, $48 = 0, $55 = 0, $56 = 0, $59 = 0, $61 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $75 = 0, $77 = 0, $8 = 0, $85 = 0, $89 = 0, $9 = 0, $91 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57916) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57924) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 63]($7, $9);
 $13 = $7 + 11 | 0;
 $14 = HEAP8[$13 >> 0] | 0;
 $16 = $7 + 4 | 0;
 if (!(($14 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $14 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 48 >> 2] & 15]($8, $0, $2, $3) | 0;
  $25 = $0;
  $27 = $3 + ($2 - $25 << 2) | 0;
  HEAP32[$5 >> 2] = $27;
  $$pre$phiZ2D = $25;
  $112 = $27;
 } else {
  HEAP32[$5 >> 2] = $3;
  $28 = HEAP8[$0 >> 0] | 0;
  switch ($28 << 24 >> 24) {
  case 43:
  case 45:
   {
    $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, $28) | 0;
    $34 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $34 + 4;
    HEAP32[$34 >> 2] = $33;
    $$075 = $0 + 1 | 0;
    break;
   }
  default:
   $$075 = $0;
  }
  L7 : do if (($2 - $$075 | 0) > 1) if ((HEAP8[$$075 >> 0] | 0) == 48) {
   $42 = $$075 + 1 | 0;
   switch (HEAP8[$42 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $$176 = $$075;
     break L7;
    }
   }
   $47 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, 48) | 0;
   $48 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $48 + 4;
   HEAP32[$48 >> 2] = $47;
   $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$42 >> 0] | 0) | 0;
   $56 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $56 + 4;
   HEAP32[$56 >> 2] = $55;
   $$176 = $$075 + 2 | 0;
  } else $$176 = $$075; else $$176 = $$075; while (0);
  L12 : do if (($$176 | 0) != ($2 | 0)) {
   $$0$i$i = $2;
   $$07$i$i = $$176;
   while (1) {
    $59 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $59 >>> 0) break L12;
    $61 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$59 >> 0] | 0;
    HEAP8[$59 >> 0] = $61;
    $$0$i$i = $59;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$176;
  $$072 = 0;
  $$073 = 0;
  while (1) {
   if ($$0 >>> 0 >= $2 >>> 0) break;
   $85 = HEAP8[((HEAP8[$13 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$072 >> 0] | 0;
   if ($85 << 24 >> 24 != 0 & ($$073 | 0) == ($85 << 24 >> 24 | 0)) {
    $89 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $89 + 4;
    HEAP32[$89 >> 2] = $67;
    $91 = HEAP8[$13 >> 0] | 0;
    $$1 = $$072 + ($$072 >>> 0 < (($91 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $91 & 255) + -1 | 0) >>> 0 & 1) | 0;
    $$174 = 0;
   } else {
    $$1 = $$072;
    $$174 = $$073;
   }
   $103 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 44 >> 2] & 63]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $104 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $104 + 4;
   HEAP32[$104 >> 2] = $103;
   $$0 = $$0 + 1 | 0;
   $$072 = $$1;
   $$073 = $$174 + 1 | 0;
  }
  $70 = $0;
  $72 = $3 + ($$176 - $70 << 2) | 0;
  $73 = HEAP32[$5 >> 2] | 0;
  if (($72 | 0) == ($73 | 0)) {
   $$pre$phiZ2D = $70;
   $112 = $72;
  } else {
   $$0$i$i78 = $73;
   $$07$i$i77 = $72;
   while (1) {
    $75 = $$0$i$i78 + -4 | 0;
    if ($$07$i$i77 >>> 0 >= $75 >>> 0) break;
    $77 = HEAP32[$$07$i$i77 >> 2] | 0;
    HEAP32[$$07$i$i77 >> 2] = HEAP32[$75 >> 2];
    HEAP32[$75 >> 2] = $77;
    $$0$i$i78 = $75;
    $$07$i$i77 = $$07$i$i77 + 4 | 0;
   }
   $$pre$phiZ2D = $70;
   $112 = HEAP32[$5 >> 2] | 0;
  }
 }
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $112 : $3 + ($1 - $$pre$phiZ2D << 2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i76 = 0, $$07$i$i = 0, $$07$i$i75 = 0, $$070 = 0, $$071 = 0, $$073 = 0, $$1 = 0, $$172 = 0, $$174 = 0, $$pre$phiZ2D = 0, $103 = 0, $104 = 0, $112 = 0, $13 = 0, $14 = 0, $16 = 0, $25 = 0, $27 = 0, $28 = 0, $33 = 0, $34 = 0, $42 = 0, $47 = 0, $48 = 0, $55 = 0, $56 = 0, $59 = 0, $61 = 0, $67 = 0, $7 = 0, $70 = 0, $72 = 0, $73 = 0, $75 = 0, $77 = 0, $8 = 0, $85 = 0, $89 = 0, $9 = 0, $91 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $8 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
 $9 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57900) | 0;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$9 >> 2] | 0) + 20 >> 2] & 63]($7, $9);
 $13 = $7 + 11 | 0;
 $14 = HEAP8[$13 >> 0] | 0;
 $16 = $7 + 4 | 0;
 if (!(($14 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $14 & 255) | 0)) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 32 >> 2] & 15]($8, $0, $2, $3) | 0;
  $25 = $0;
  $27 = $3 + ($2 - $25) | 0;
  HEAP32[$5 >> 2] = $27;
  $$pre$phiZ2D = $25;
  $112 = $27;
 } else {
  HEAP32[$5 >> 2] = $3;
  $28 = HEAP8[$0 >> 0] | 0;
  switch ($28 << 24 >> 24) {
  case 43:
  case 45:
   {
    $33 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, $28) | 0;
    $34 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $34 + 1;
    HEAP8[$34 >> 0] = $33;
    $$073 = $0 + 1 | 0;
    break;
   }
  default:
   $$073 = $0;
  }
  L7 : do if (($2 - $$073 | 0) > 1) if ((HEAP8[$$073 >> 0] | 0) == 48) {
   $42 = $$073 + 1 | 0;
   switch (HEAP8[$42 >> 0] | 0) {
   case 88:
   case 120:
    break;
   default:
    {
     $$174 = $$073;
     break L7;
    }
   }
   $47 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, 48) | 0;
   $48 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $48 + 1;
   HEAP8[$48 >> 0] = $47;
   $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$42 >> 0] | 0) | 0;
   $56 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $56 + 1;
   HEAP8[$56 >> 0] = $55;
   $$174 = $$073 + 2 | 0;
  } else $$174 = $$073; else $$174 = $$073; while (0);
  L12 : do if (($$174 | 0) != ($2 | 0)) {
   $$0$i$i = $2;
   $$07$i$i = $$174;
   while (1) {
    $59 = $$0$i$i + -1 | 0;
    if ($$07$i$i >>> 0 >= $59 >>> 0) break L12;
    $61 = HEAP8[$$07$i$i >> 0] | 0;
    HEAP8[$$07$i$i >> 0] = HEAP8[$59 >> 0] | 0;
    HEAP8[$59 >> 0] = $61;
    $$0$i$i = $59;
    $$07$i$i = $$07$i$i + 1 | 0;
   }
  } while (0);
  $67 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 16 >> 2] & 127]($9) | 0;
  $$0 = $$174;
  $$070 = 0;
  $$071 = 0;
  while (1) {
   if ($$0 >>> 0 >= $2 >>> 0) break;
   $85 = HEAP8[((HEAP8[$13 >> 0] | 0) < 0 ? HEAP32[$7 >> 2] | 0 : $7) + $$070 >> 0] | 0;
   if ($85 << 24 >> 24 != 0 & ($$071 | 0) == ($85 << 24 >> 24 | 0)) {
    $89 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $89 + 1;
    HEAP8[$89 >> 0] = $67;
    $91 = HEAP8[$13 >> 0] | 0;
    $$1 = $$070 + ($$070 >>> 0 < (($91 << 24 >> 24 < 0 ? HEAP32[$16 >> 2] | 0 : $91 & 255) + -1 | 0) >>> 0 & 1) | 0;
    $$172 = 0;
   } else {
    $$1 = $$070;
    $$172 = $$071;
   }
   $103 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 63]($8, HEAP8[$$0 >> 0] | 0) | 0;
   $104 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = $104 + 1;
   HEAP8[$104 >> 0] = $103;
   $$0 = $$0 + 1 | 0;
   $$070 = $$1;
   $$071 = $$172 + 1 | 0;
  }
  $70 = $0;
  $72 = $3 + ($$174 - $70) | 0;
  $73 = HEAP32[$5 >> 2] | 0;
  if (($72 | 0) == ($73 | 0)) {
   $$pre$phiZ2D = $70;
   $112 = $72;
  } else {
   $$0$i$i76 = $73;
   $$07$i$i75 = $72;
   while (1) {
    $75 = $$0$i$i76 + -1 | 0;
    if ($$07$i$i75 >>> 0 >= $75 >>> 0) break;
    $77 = HEAP8[$$07$i$i75 >> 0] | 0;
    HEAP8[$$07$i$i75 >> 0] = HEAP8[$75 >> 0] | 0;
    HEAP8[$75 >> 0] = $77;
    $$0$i$i76 = $75;
    $$07$i$i75 = $$07$i$i75 + 1 | 0;
   }
   $$pre$phiZ2D = $70;
   $112 = HEAP32[$5 >> 2] | 0;
  }
 }
 HEAP32[$4 >> 2] = ($1 | 0) == ($2 | 0) ? $112 : $3 + ($1 - $$pre$phiZ2D) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($7);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$0$lcssa$i = 0, $$025 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $$sroa$027$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $20 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $33 = 0, $39 = 0, $40 = 0, $42 = 0, $45 = 0, $59 = 0, $62 = 0, $7 = 0, $74 = 0, $77 = 0, $8 = 0, $9 = 0, $91 = 0, $95 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 592 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(592);
 $$byval_copy = sp + 512 | 0;
 $vararg_buffer = sp + 552 | 0;
 $7 = sp + 112 | 0;
 $8 = sp + 568 | 0;
 $9 = sp + 564 | 0;
 $10 = sp + 560 | 0;
 $11 = sp + 576 | 0;
 $12 = sp + 556 | 0;
 $13 = sp;
 HEAP32[$8 >> 2] = $7;
 HEAP32[$8 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 57916) | 0;
 HEAP8[$11 >> 0] = 0;
 HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
 $20 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($1, $$byval_copy, $3, $10, $20, $5, $11, $17, $8, $9, $7 + 400 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 48 >> 2] & 15]($17, 48130, 48140, $$byval_copy) | 0;
  $25 = HEAP32[$9 >> 2] | 0;
  $26 = HEAP32[$8 >> 2] | 0;
  $27 = $25 - $26 | 0;
  $29 = $26;
  $30 = $25;
  if (($27 | 0) > 392) {
   $33 = _malloc(($27 >>> 2) + 2 | 0) | 0;
   if (!$33) __ZSt17__throw_bad_allocv(); else {
    $$025 = $33;
    $$sroa$027$0 = $33;
   }
  } else {
   $$025 = $13;
   $$sroa$027$0 = 0;
  }
  if (!(HEAP8[$11 >> 0] | 0)) $$1 = $$025; else {
   HEAP8[$$025 >> 0] = 45;
   $$1 = $$025 + 1 | 0;
  }
  $39 = $$byval_copy + 40 | 0;
  $40 = $$byval_copy;
  $$0 = $29;
  $$2 = $$1;
  $42 = $30;
  while (1) {
   if ($$0 >>> 0 >= $42 >>> 0) break;
   $45 = HEAP32[$$0 >> 2] | 0;
   $$0$i = $$byval_copy;
   while (1) {
    if (($$0$i | 0) == ($39 | 0)) {
     $$0$lcssa$i = $39;
     break;
    }
    if ((HEAP32[$$0$i >> 2] | 0) == ($45 | 0)) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $$0$i = $$0$i + 4 | 0;
   }
   HEAP8[$$2 >> 0] = HEAP8[48130 + ($$0$lcssa$i - $40 >> 2) >> 0] | 0;
   $$0 = $$0 + 4 | 0;
   $$2 = $$2 + 1 | 0;
   $42 = HEAP32[$9 >> 2] | 0;
  }
  HEAP8[$$2 >> 0] = 0;
  HEAP32[$vararg_buffer >> 2] = $6;
  if ((_sscanf($13, 48031, $vararg_buffer) | 0) != 1) __ZNSt3__221__throw_runtime_errorEPKc(0);
  if ($$sroa$027$0 | 0) _free($$sroa$027$0);
 }
 $59 = HEAP32[$1 >> 2] | 0;
 do if (!$59) $95 = 1; else {
  $62 = HEAP32[$59 + 12 >> 2] | 0;
  if (($62 | 0) == (HEAP32[$59 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$59 >> 2] | 0) + 36 >> 2] & 127]($59) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$62 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $95 = 1;
   break;
  } else {
   $95 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $74 = HEAP32[$2 >> 2] | 0;
 do if (!$74) label = 32; else {
  $77 = HEAP32[$74 + 12 >> 2] | 0;
  if (($77 | 0) == (HEAP32[$74 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$74 >> 2] | 0) + 36 >> 2] & 127]($74) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$77 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 32;
   break;
  } else if ($95) break; else {
   label = 34;
   break;
  }
 } while (0);
 if ((label | 0) == 32) if ($95) label = 34;
 if ((label | 0) == 34) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $91 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($91 | 0) FUNCTION_TABLE_vi[HEAP32[$8 + 4 >> 2] & 255]($91);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i26 = 0, $$0$i$i29 = 0, $$byval_copy = 0, $$sink47 = 0, $$sink48 = 0, $$sink49 = 0, $$sroa$041$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $29 = 0, $41 = 0, $42 = 0, $43 = 0, $46 = 0, $47 = 0, $52 = 0, $59 = 0, $6 = 0, $68 = 0, $7 = 0, $75 = 0, $8 = 0, $83 = 0, $85 = 0, $9 = 0, $91 = 0, $96 = 0, $97 = 0, $98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 $$byval_copy = sp + 156 | 0;
 $6 = sp + 152 | 0;
 $7 = sp + 164 | 0;
 $8 = sp + 161 | 0;
 $9 = sp + 160 | 0;
 $10 = sp + 140 | 0;
 $11 = sp + 128 | 0;
 $12 = sp + 116 | 0;
 $13 = sp + 112 | 0;
 $14 = sp;
 $15 = sp + 108 | 0;
 $16 = sp + 104 | 0;
 $17 = sp + 100 | 0;
 __ZNKSt3__28ios_base6getlocEv($6, $3);
 $18 = __ZNKSt3__26locale9use_facetERNS0_2idE($6, 57884) | 0;
 $19 = $5 + 11 | 0;
 $20 = HEAP8[$19 >> 0] | 0;
 $21 = $20 << 24 >> 24 < 0;
 $22 = $5 + 4 | 0;
 if (!(($21 ? HEAP32[$22 >> 2] | 0 : $20 & 255) | 0)) $41 = 0; else {
  $29 = HEAP8[($21 ? HEAP32[$5 >> 2] | 0 : $5) >> 0] | 0;
  $41 = $29 << 24 >> 24 == (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$18 >> 2] | 0) + 28 >> 2] & 63]($18, 45) | 0) << 24 >> 24;
 };
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 $$0$i$i26 = 0;
 while (1) {
  if (($$0$i$i26 | 0) == 3) break;
  HEAP32[$11 + ($$0$i$i26 << 2) >> 2] = 0;
  $$0$i$i26 = $$0$i$i26 + 1 | 0;
 }
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 $$0$i$i29 = 0;
 while (1) {
  if (($$0$i$i29 | 0) == 3) break;
  HEAP32[$12 + ($$0$i$i29 << 2) >> 2] = 0;
  $$0$i$i29 = $$0$i$i29 + 1 | 0;
 }
 __ZNSt3__211__money_putIcE13__gather_infoEbbRKNS_6localeERNS_10money_base7patternERcS8_RNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESF_SF_Ri($2, $41, $6, $7, $8, $9, $10, $11, $12, $13);
 $42 = HEAP8[$19 >> 0] | 0;
 $43 = $42 << 24 >> 24 < 0;
 $46 = $43 ? HEAP32[$22 >> 2] | 0 : $42 & 255;
 $47 = HEAP32[$13 >> 2] | 0;
 if (($46 | 0) > ($47 | 0)) {
  $52 = HEAP8[$12 + 11 >> 0] | 0;
  $59 = HEAP8[$11 + 11 >> 0] | 0;
  $$sink47 = $59 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $59 & 255;
  $$sink48 = $47 + 1 + ($46 - $47 << 1) | 0;
  $$sink49 = $52 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $52 & 255;
 } else {
  $68 = HEAP8[$12 + 11 >> 0] | 0;
  $75 = HEAP8[$11 + 11 >> 0] | 0;
  $$sink47 = $75 << 24 >> 24 < 0 ? HEAP32[$11 + 4 >> 2] | 0 : $75 & 255;
  $$sink48 = $47 + 2 | 0;
  $$sink49 = $68 << 24 >> 24 < 0 ? HEAP32[$12 + 4 >> 2] | 0 : $68 & 255;
 }
 $83 = $$sink48 + $$sink49 + $$sink47 | 0;
 if ($83 >>> 0 > 100) {
  $85 = _malloc($83) | 0;
  if (!$85) __ZSt17__throw_bad_allocv(); else {
   $$0 = $85;
   $$sroa$041$0 = $85;
  }
 } else {
  $$0 = $14;
  $$sroa$041$0 = 0;
 }
 $91 = $43 ? HEAP32[$5 >> 2] | 0 : $5;
 __ZNSt3__211__money_putIcE8__formatEPcRS2_S3_jPKcS5_RKNS_5ctypeIcEEbRKNS_10money_base7patternEccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEESL_SL_i($$0, $15, $16, HEAP32[$3 + 4 >> 2] | 0, $91, $91 + $46 | 0, $18, $41, $7, HEAP8[$8 >> 0] | 0, HEAP8[$9 >> 0] | 0, $10, $11, $12, $47);
 HEAP32[$17 >> 2] = HEAP32[$1 >> 2];
 $96 = HEAP32[$15 >> 2] | 0;
 $97 = HEAP32[$16 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$17 >> 2];
 $98 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$0, $96, $97, $3, $4) | 0;
 if ($$sroa$041$0 | 0) _free($$sroa$041$0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($12);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($11);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
 __ZNSt3__26localeD2Ev($6);
 STACKTOP = sp;
 return $98 | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$0$lcssa$i = 0, $$025 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $$sroa$028$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $20 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $32 = 0, $38 = 0, $39 = 0, $41 = 0, $44 = 0, $57 = 0, $60 = 0, $7 = 0, $72 = 0, $75 = 0, $8 = 0, $89 = 0, $9 = 0, $93 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $$byval_copy = sp + 240 | 0;
 $vararg_buffer = sp + 216 | 0;
 $7 = sp + 112 | 0;
 $8 = sp + 232 | 0;
 $9 = sp + 228 | 0;
 $10 = sp + 224 | 0;
 $11 = sp + 250 | 0;
 $12 = sp + 220 | 0;
 $13 = sp;
 HEAP32[$8 >> 2] = $7;
 HEAP32[$8 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 57884) | 0;
 HEAP8[$11 >> 0] = 0;
 HEAP32[$12 >> 2] = HEAP32[$2 >> 2];
 $20 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($1, $$byval_copy, $3, $10, $20, $5, $11, $17, $8, $9, $7 + 100 | 0) | 0) {
  FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$17 >> 2] | 0) + 32 >> 2] & 15]($17, 48020, 48030, $$byval_copy) | 0;
  $25 = HEAP32[$9 >> 2] | 0;
  $26 = HEAP32[$8 >> 2] | 0;
  $27 = $25 - $26 | 0;
  $29 = $26;
  $30 = $25;
  if (($27 | 0) > 98) {
   $32 = _malloc($27 + 2 | 0) | 0;
   if (!$32) __ZSt17__throw_bad_allocv(); else {
    $$025 = $32;
    $$sroa$028$0 = $32;
   }
  } else {
   $$025 = $13;
   $$sroa$028$0 = 0;
  }
  if (!(HEAP8[$11 >> 0] | 0)) $$1 = $$025; else {
   HEAP8[$$025 >> 0] = 45;
   $$1 = $$025 + 1 | 0;
  }
  $38 = $$byval_copy + 10 | 0;
  $39 = $$byval_copy;
  $$0 = $29;
  $$2 = $$1;
  $41 = $30;
  while (1) {
   if ($$0 >>> 0 >= $41 >>> 0) break;
   $44 = HEAP8[$$0 >> 0] | 0;
   $$0$i = $$byval_copy;
   while (1) {
    if (($$0$i | 0) == ($38 | 0)) {
     $$0$lcssa$i = $38;
     break;
    }
    if ((HEAP8[$$0$i >> 0] | 0) == $44 << 24 >> 24) {
     $$0$lcssa$i = $$0$i;
     break;
    }
    $$0$i = $$0$i + 1 | 0;
   }
   HEAP8[$$2 >> 0] = HEAP8[48020 + ($$0$lcssa$i - $39) >> 0] | 0;
   $$0 = $$0 + 1 | 0;
   $$2 = $$2 + 1 | 0;
   $41 = HEAP32[$9 >> 2] | 0;
  }
  HEAP8[$$2 >> 0] = 0;
  HEAP32[$vararg_buffer >> 2] = $6;
  if ((_sscanf($13, 48031, $vararg_buffer) | 0) != 1) __ZNSt3__221__throw_runtime_errorEPKc(0);
  if ($$sroa$028$0 | 0) _free($$sroa$028$0);
 }
 $57 = HEAP32[$1 >> 2] | 0;
 do if (!$57) $93 = 1; else {
  $60 = HEAP32[$57 + 12 >> 2] | 0;
  if (($60 | 0) == (HEAP32[$57 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$57 >> 2] | 0) + 36 >> 2] & 127]($57) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$60 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $93 = 1;
   break;
  } else {
   $93 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $72 = HEAP32[$2 >> 2] | 0;
 do if (!$72) label = 32; else {
  $75 = HEAP32[$72 + 12 >> 2] | 0;
  if (($75 | 0) == (HEAP32[$72 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$72 >> 2] | 0) + 36 >> 2] & 127]($72) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$75 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 32;
   break;
  } else if ($93) break; else {
   label = 34;
   break;
  }
 } while (0);
 if ((label | 0) == 32) if ($93) label = 34;
 if ((label | 0) == 34) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $89 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($89 | 0) FUNCTION_TABLE_vi[HEAP32[$8 + 4 >> 2] & 255]($89);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EE5matchEPKNS_18BinaryFeatureStoreES4_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$055 = 0, $$056 = 0, $$057 = 0, $$058 = 0, $$061 = 0, $$2 = 0, $$260 = 0, $$263 = 0, $11 = 0, $12 = 0, $18 = 0, $21 = 0, $23 = 0, $27 = 0, $29 = 0, $3 = 0, $33 = 0, $34 = 0, $38 = 0, $41 = 0, $46 = 0, $47 = 0, $5 = 0, $58 = 0, $61 = 0, $66 = 0, $67 = 0, $79 = 0, $84 = 0, $88 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $5 = $0 + 4 | 0;
 HEAP32[$5 >> 2] = HEAP32[$0 >> 2];
 do if (!(__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0)) $$0 = 0; else if (!(__ZNK6vision18BinaryFeatureStore4sizeEv($2) | 0)) $$0 = 0; else {
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm($0, __ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0);
  $11 = $0 + 8 | 0;
  $12 = $0 + 12 | 0;
  $$055 = 0;
  while (1) {
   if ($$055 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) break;
   $21 = __ZNK6vision18BinaryFeatureStore7featureEm($1, $$055) | 0;
   $23 = (__ZNK6vision18BinaryFeatureStore5pointEm($1, $$055) | 0) + 16 | 0;
   $$056 = 0;
   $$057 = -1;
   $$058 = 2147483647;
   $$061 = -1;
   while (1) {
    if ($$056 >>> 0 >= (__ZNK6vision18BinaryFeatureStore4sizeEv($2) | 0) >>> 0) break;
    $27 = HEAP8[$23 >> 0] | 0;
    $29 = (__ZNK6vision18BinaryFeatureStore5pointEm($2, $$056) | 0) + 16 | 0;
    if ($27 << 24 >> 24 == (HEAP8[$29 >> 0] | 0)) {
     $33 = __ZN6vision15HammingDistanceILi96EEEjPKhS2_($21, __ZNK6vision18BinaryFeatureStore7featureEm($2, $$056) | 0) | 0;
     $34 = $33 >>> 0 < $$057 >>> 0;
     $$2 = $34 ? $33 : $$057;
     $$260 = $34 ? $$056 : $$058;
     $$263 = $34 ? $$057 : $33 >>> 0 < $$061 >>> 0 ? $33 : $$061;
    } else {
     $$2 = $$057;
     $$260 = $$058;
     $$263 = $$061;
    }
    $$056 = $$056 + 1 | 0;
    $$057 = $$2;
    $$058 = $$260;
    $$061 = $$263;
   }
   do if (($$057 | 0) != -1) {
    if (($$061 | 0) == -1) {
     __ZN6vision7match_tC2Eii($3, $$055, $$058);
     $38 = HEAP32[$5 >> 2] | 0;
     if ($38 >>> 0 < (HEAP32[$11 >> 2] | 0) >>> 0) {
      $41 = $3;
      $46 = HEAP32[$41 + 4 >> 2] | 0;
      $47 = $38;
      HEAP32[$47 >> 2] = HEAP32[$41 >> 2];
      HEAP32[$47 + 4 >> 2] = $46;
      HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $3);
     break;
    }
    if (+($$057 >>> 0) / +($$061 >>> 0) < +HEAPF32[$12 >> 2]) {
     __ZN6vision7match_tC2Eii($3, $$055, $$058);
     $58 = HEAP32[$5 >> 2] | 0;
     if ($58 >>> 0 < (HEAP32[$11 >> 2] | 0) >>> 0) {
      $61 = $3;
      $66 = HEAP32[$61 + 4 >> 2] | 0;
      $67 = $58;
      HEAP32[$67 >> 2] = HEAP32[$61 >> 2];
      HEAP32[$67 + 4 >> 2] = $66;
      HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 8;
     } else __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $3);
    }
   } while (0);
   $$055 = $$055 + 1 | 0;
  }
  $18 = (HEAP32[$5 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
  if ($18 >>> 0 > (__ZNK6vision18BinaryFeatureStore4sizeEv($1) | 0) >>> 0) {
   $79 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 29606) | 0, 29361) | 0, 33528) | 0, 112) | 0, 33535) | 0, 29666) | 0;
   __ZNKSt3__28ios_base6getlocEv($3, $79 + (HEAP32[(HEAP32[$79 >> 2] | 0) + -12 >> 2] | 0) | 0);
   $84 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
   $88 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$84 >> 2] | 0) + 28 >> 2] & 63]($84, 10) | 0;
   __ZNSt3__26localeD2Ev($3);
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($79, $88) | 0;
   __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($79) | 0;
   _abort();
  } else {
   $$0 = (HEAP32[$5 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _jpeg_make_d_derived_tbl($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0122 = 0, $$0124 = 0, $$0125 = 0, $$0126 = 0, $$0129 = 0, $$0130 = 0, $$1 = 0, $$1123 = 0, $$1127 = 0, $$1131 = 0, $$2 = 0, $$2128 = 0, $$2132 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $101 = 0, $12 = 0, $15 = 0, $17 = 0, $22 = 0, $27 = 0, $29 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $4 = 0, $45 = 0, $47 = 0, $5 = 0, $51 = 0, $56 = 0, $61 = 0, $7 = 0, $70 = 0, $78 = 0, $79 = 0, $80 = 0, $87 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1312 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1312);
 $4 = sp + 1040 | 0;
 $5 = sp;
 if ($2 >>> 0 > 3) {
  $7 = HEAP32[$0 >> 2] | 0;
  HEAP32[$7 + 20 >> 2] = 50;
  HEAP32[$7 + 24 >> 2] = $2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $12 = ($1 | 0) != 0;
 $15 = HEAP32[($12 ? $0 + 180 + ($2 << 2) | 0 : $0 + 196 + ($2 << 2) | 0) >> 2] | 0;
 if (!$15) {
  $17 = HEAP32[$0 >> 2] | 0;
  HEAP32[$17 + 20 >> 2] = 50;
  HEAP32[$17 + 24 >> 2] = $2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $22 = HEAP32[$3 >> 2] | 0;
 if (!$22) {
  $27 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, 1424) | 0;
  HEAP32[$3 >> 2] = $27;
  $$pre$phiZ2D = $0;
  $29 = $27;
 } else {
  $$pre$phiZ2D = $0;
  $29 = $22;
 }
 HEAP32[$29 + 140 >> 2] = $15;
 $$0 = 0;
 $$0130 = 1;
 while (1) {
  if (($$0130 | 0) == 17) break;
  $32 = HEAPU8[$15 + $$0130 >> 0] | 0;
  $33 = $$0 + $32 | 0;
  if (($33 | 0) > 256) {
   $35 = HEAP32[$0 >> 2] | 0;
   HEAP32[$35 + 20 >> 2] = 8;
   FUNCTION_TABLE_vi[HEAP32[$35 >> 2] & 255]($$pre$phiZ2D);
  }
  $38 = $$0130 & 255;
  $$0126 = $32;
  $$1 = $$0;
  while (1) {
   if (!$$0126) break;
   HEAP8[$4 + $$1 >> 0] = $38;
   $$0126 = $$0126 + -1 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $$0 = $33;
  $$0130 = $$0130 + 1 | 0;
 }
 HEAP8[$4 + $$0 >> 0] = 0;
 $45 = HEAP8[$4 >> 0] | 0;
 $$0122 = 0;
 $$0129 = $45 << 24 >> 24;
 $$2 = 0;
 $47 = $45;
 while (1) {
  if (!($47 << 24 >> 24)) break;
  $$1123 = $$0122;
  $$3 = $$2;
  $$pre = $47;
  while (1) {
   if (($$0129 | 0) != ($$pre << 24 >> 24 | 0)) break;
   $51 = $$3 + 1 | 0;
   HEAP32[$5 + ($$3 << 2) >> 2] = $$1123;
   $$1123 = $$1123 + 1 | 0;
   $$3 = $51;
   $$pre = HEAP8[$4 + $51 >> 0] | 0;
  }
  if (($$1123 | 0) >= (1 << $$0129 | 0)) {
   $56 = HEAP32[$0 >> 2] | 0;
   HEAP32[$56 + 20 >> 2] = 8;
   FUNCTION_TABLE_vi[HEAP32[$56 >> 2] & 255]($$pre$phiZ2D);
  }
  $$0122 = $$1123 << 1;
  $$0129 = $$0129 + 1 | 0;
  $$2 = $$3;
  $47 = $$pre;
 }
 $$1131 = 1;
 $$4 = 0;
 while (1) {
  if (($$1131 | 0) == 17) break;
  $61 = $15 + $$1131 | 0;
  if (!(HEAP8[$61 >> 0] | 0)) {
   $$5 = $$4;
   $$sink = -1;
  } else {
   HEAP32[$29 + 72 + ($$1131 << 2) >> 2] = $$4 - (HEAP32[$5 + ($$4 << 2) >> 2] | 0);
   $70 = $$4 + (HEAPU8[$61 >> 0] | 0) | 0;
   $$5 = $70;
   $$sink = HEAP32[$5 + ($70 + -1 << 2) >> 2] | 0;
  }
  HEAP32[$29 + ($$1131 << 2) >> 2] = $$sink;
  $$1131 = $$1131 + 1 | 0;
  $$4 = $$5;
 }
 HEAP32[$29 + 68 >> 2] = 1048575;
 _memset($29 + 144 | 0, 0, 1024) | 0;
 $$2132 = 1;
 $$6 = 0;
 while (1) {
  if (($$2132 | 0) == 9) break;
  $78 = $15 + $$2132 | 0;
  $79 = 8 - $$2132 | 0;
  $80 = 1 << $79;
  $$1127 = 1;
  $$7 = $$6;
  while (1) {
   if ($$1127 >>> 0 > (HEAPU8[$78 >> 0] | 0) >>> 0) break;
   $87 = $15 + 17 + $$7 | 0;
   $$0124 = $80;
   $$0125 = HEAP32[$5 + ($$7 << 2) >> 2] << $79;
   while (1) {
    if (($$0124 | 0) <= 0) break;
    HEAP32[$29 + 144 + ($$0125 << 2) >> 2] = $$2132;
    HEAP8[$29 + 1168 + $$0125 >> 0] = HEAP8[$87 >> 0] | 0;
    $$0124 = $$0124 + -1 | 0;
    $$0125 = $$0125 + 1 | 0;
   }
   $$1127 = $$1127 + 1 | 0;
   $$7 = $$7 + 1 | 0;
  }
  $$2132 = $$2132 + 1 | 0;
  $$6 = $$7;
 }
 L52 : do if ($12) {
  $$2128 = 0;
  while (1) {
   if (($$2128 | 0) >= ($$0 | 0)) break L52;
   if ((HEAPU8[$15 + 17 + $$2128 >> 0] | 0) > 15) {
    $101 = HEAP32[$0 >> 2] | 0;
    HEAP32[$101 + 20 >> 2] = 8;
    FUNCTION_TABLE_vi[HEAP32[$101 >> 2] & 255]($$pre$phiZ2D);
   }
   $$2128 = $$2128 + 1 | 0;
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function _ar2ReadImageSetOld($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$089 = 0, $$091 = 0, $$1 = 0, $$190 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0, $$7 = 0, $1 = 0, $12 = 0, $17 = 0, $3 = 0, $51 = 0, $57 = 0, $6 = 0, $60 = 0, $67 = 0, $68 = 0, $75 = 0, $9 = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $1 = _malloc(8) | 0;
 if (!$1) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 }
 $3 = $1 + 4 | 0;
 L4 : do if ((_fread($3, 4, 1, $0) | 0) == 1) {
  $6 = HEAP32[$3 >> 2] | 0;
  if (($6 | 0) < 1) label = 5; else {
   $9 = _malloc($6 << 2) | 0;
   HEAP32[$1 >> 2] = $9;
   if (!$9) {
    _arLog(0, 3, 20454, $vararg_buffer3);
    _exit(1);
   }
   $$089 = 0;
   while (1) {
    if (($$089 | 0) >= ($6 | 0)) break;
    $12 = _malloc(16) | 0;
    HEAP32[$9 + ($$089 << 2) >> 2] = $12;
    if (!$12) {
     label = 12;
     break;
    } else $$089 = $$089 + 1 | 0;
   }
   if ((label | 0) == 12) {
    _arLog(0, 3, 20454, $vararg_buffer5);
    _exit(1);
   }
   $$190 = 0;
   while (1) {
    if (($$190 | 0) >= ($6 | 0)) {
     label = 44;
     break;
    }
    $17 = $9 + ($$190 << 2) | 0;
    if ((_fread((HEAP32[$17 >> 2] | 0) + 4 | 0, 4, 1, $0) | 0) != 1) {
     label = 15;
     break;
    }
    if ((_fread((HEAP32[$17 >> 2] | 0) + 8 | 0, 4, 1, $0) | 0) != 1) {
     label = 22;
     break;
    }
    if ((_fread((HEAP32[$17 >> 2] | 0) + 12 | 0, 4, 1, $0) | 0) != 1) {
     label = 29;
     break;
    }
    $51 = HEAP32[$17 >> 2] | 0;
    $57 = _malloc(Math_imul(HEAP32[$51 + 8 >> 2] | 0, HEAP32[$51 + 4 >> 2] | 0) | 0) | 0;
    HEAP32[HEAP32[$17 >> 2] >> 2] = $57;
    if (!$57) {
     label = 36;
     break;
    }
    $60 = HEAP32[$17 >> 2] | 0;
    $67 = _fread(HEAP32[$60 >> 2] | 0, 1, Math_imul(HEAP32[$60 + 8 >> 2] | 0, HEAP32[$60 + 4 >> 2] | 0) | 0, $0) | 0;
    $68 = HEAP32[$17 >> 2] | 0;
    $75 = $$190 + 1 | 0;
    if (($67 | 0) == (Math_imul(HEAP32[$68 + 8 >> 2] | 0, HEAP32[$68 + 4 >> 2] | 0) | 0)) $$190 = $75; else {
     label = 38;
     break;
    }
   }
   L23 : do if ((label | 0) == 15) {
    $$0 = 0;
    while (1) {
     if (($$0 | 0) == ($$190 | 0)) break;
     _free(HEAP32[HEAP32[$9 + ($$0 << 2) >> 2] >> 2] | 0);
     $$0 = $$0 + 1 | 0;
    }
    $$1 = 0;
    while (1) {
     if (($$1 | 0) == ($6 | 0)) break L23;
     _free(HEAP32[$9 + ($$1 << 2) >> 2] | 0);
     $$1 = $$1 + 1 | 0;
    }
   } else if ((label | 0) == 22) {
    $$2 = 0;
    while (1) {
     if (($$2 | 0) == ($$190 | 0)) break;
     _free(HEAP32[HEAP32[$9 + ($$2 << 2) >> 2] >> 2] | 0);
     $$2 = $$2 + 1 | 0;
    }
    $$3 = 0;
    while (1) {
     if (($$3 | 0) == ($6 | 0)) break L23;
     _free(HEAP32[$9 + ($$3 << 2) >> 2] | 0);
     $$3 = $$3 + 1 | 0;
    }
   } else if ((label | 0) == 29) {
    $$4 = 0;
    while (1) {
     if (($$4 | 0) == ($$190 | 0)) break;
     _free(HEAP32[HEAP32[$9 + ($$4 << 2) >> 2] >> 2] | 0);
     $$4 = $$4 + 1 | 0;
    }
    $$5 = 0;
    while (1) {
     if (($$5 | 0) == ($6 | 0)) break L23;
     _free(HEAP32[$9 + ($$5 << 2) >> 2] | 0);
     $$5 = $$5 + 1 | 0;
    }
   } else if ((label | 0) == 36) {
    _arLog(0, 3, 20454, $vararg_buffer7);
    _exit(1);
   } else if ((label | 0) == 38) {
    $$6 = 0;
    while (1) {
     if (($$6 | 0) == ($75 | 0)) break;
     _free(HEAP32[HEAP32[$9 + ($$6 << 2) >> 2] >> 2] | 0);
     $$6 = $$6 + 1 | 0;
    }
    $$7 = 0;
    while (1) {
     if (($$7 | 0) == ($6 | 0)) break L23;
     _free(HEAP32[$9 + ($$7 << 2) >> 2] | 0);
     $$7 = $$7 + 1 | 0;
    }
   } else if ((label | 0) == 44) {
    _fclose($0) | 0;
    $$091 = $1;
    break L4;
   } while (0);
   _free($9);
   label = 46;
  }
 } else label = 5; while (0);
 if ((label | 0) == 5) {
  _arLog(0, 3, 19470, $vararg_buffer1);
  label = 46;
 }
 if ((label | 0) == 46) {
  _free($1);
  _fclose($0) | 0;
  $$091 = 0;
 }
 STACKTOP = sp;
 return $$091 | 0;
}

function _arParamLoad($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $$05254 = 0, $$053 = 0, $$056 = 0, $$059 = 0, $$1 = 0, $$pre$phi64Z2D = 0, $10 = 0, $12 = 0, $14 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $25 = 0, $28 = 0, $3 = 0, $30 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0.0, $42 = 0, $44 = 0, $51 = 0, $52 = 0, $61 = 0.0, $8 = 0, $vararg_buffer = 0, $vararg_buffer13 = 0, $vararg_buffer15 = 0, $vararg_buffer18 = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $vararg_buffer18 = sp + 248 | 0;
 $vararg_buffer15 = sp + 240 | 0;
 $vararg_buffer13 = sp + 232 | 0;
 $vararg_buffer9 = sp + 224 | 0;
 $vararg_buffer6 = sp + 216 | 0;
 $vararg_buffer2 = sp + 208 | 0;
 $vararg_buffer = sp + 200 | 0;
 $3 = sp;
 $4 = sp + 16 | 0;
 do if (($0 | 0) != 0 & ($1 | 0) > 0 & ($2 | 0) != 0) {
  $8 = _fopen($0, 20063) | 0;
  if (!$8) {
   $10 = ___errno_location() | 0;
   HEAP32[$vararg_buffer >> 2] = HEAP32[$10 >> 2];
   HEAP32[$vararg_buffer + 4 >> 2] = $0;
   _arLog(0, 3, 18171, $vararg_buffer);
   $12 = ___errno_location() | 0;
   $14 = _strerror(HEAP32[$12 >> 2] | 0) | 0;
   HEAP32[$vararg_buffer2 >> 2] = 58334;
   HEAP32[$vararg_buffer2 + 4 >> 2] = $14;
   _arLog(0, 3, 19708, $vararg_buffer2);
   $$056 = -1;
   break;
  }
  _fseek($8, 0, 2) | 0;
  L6 : do if (!(_ferror($8) | 0)) {
   $22 = _ftell($8) | 0;
   _rewind($8);
   $$053 = 0;
   while (1) {
    if ($$053 >>> 0 >= 4) {
     label = 9;
     break;
    }
    $25 = HEAP32[1712 + ($$053 << 3) + 4 >> 2] | 0;
    $28 = $$053 + 1 | 0;
    if (!(($22 | 0) % ($25 | 0) | 0)) {
     $$05254 = $28;
     $30 = $25;
     break;
    } else $$053 = $28;
   }
   do if ((label | 0) == 9) if (($$053 | 0) == 4) {
    _arLog(0, 3, 18285, $vararg_buffer13);
    $$059 = -1;
    break L6;
   } else {
    $$05254 = 0;
    $30 = HEAP32[1712 + (0 << 3) + 4 >> 2] | 0;
    break;
   } while (0);
   if ((_fread($4, $30, 1, $8) | 0) != 1) {
    $33 = ___errno_location() | 0;
    HEAP32[$vararg_buffer15 >> 2] = HEAP32[$33 >> 2];
    _arLog(0, 3, 18365, $vararg_buffer15);
    $35 = ___errno_location() | 0;
    $37 = _strerror(HEAP32[$35 >> 2] | 0) | 0;
    HEAP32[$vararg_buffer18 >> 2] = 58334;
    HEAP32[$vararg_buffer18 + 4 >> 2] = $37;
    _arLog(0, 3, 19708, $vararg_buffer18);
    $$059 = -1;
    break;
   }
   $38 = $4 + 176 | 0;
   HEAP32[$38 >> 2] = $$05254;
   _byteswap($4);
   $39 = ($$05254 | 0) == 1;
   $40 = $4 + 120 | 0;
   if ($39) {
    $41 = +HEAPF64[$40 >> 3];
    $42 = $4 + 128 | 0;
    HEAPF64[$40 >> 3] = +HEAPF64[$42 >> 3];
    HEAPF64[$42 >> 3] = $41;
    $$pre$phi64Z2D = $42;
   } else $$pre$phi64Z2D = $4 + 128 | 0;
   _memcpy($2 | 0, $4 | 0, 184) | 0;
   HEAP32[$3 >> 2] = $varargs;
   $44 = $2 + 176 | 0;
   $$1 = 1;
   while (1) {
    if (($$1 | 0) >= ($1 | 0)) {
     $$059 = 0;
     break L6;
    }
    $51 = (HEAP32[$3 >> 2] | 0) + (4 - 1) & ~(4 - 1);
    $52 = HEAP32[$51 >> 2] | 0;
    HEAP32[$3 >> 2] = $51 + 4;
    HEAP32[$52 + 176 >> 2] = HEAP32[$44 >> 2];
    if ((_fread($4, HEAP32[1712 + ((HEAP32[$44 >> 2] | 0) + -1 << 3) + 4 >> 2] | 0, 1, $8) | 0) != 1) {
     $$059 = -1;
     break L6;
    }
    HEAP32[$38 >> 2] = $$05254;
    _byteswap($4);
    if ($39) {
     $61 = +HEAPF64[$40 >> 3];
     HEAPF64[$40 >> 3] = +HEAPF64[$$pre$phi64Z2D >> 3];
     HEAPF64[$$pre$phi64Z2D >> 3] = $61;
    }
    _memcpy($52 | 0, $4 | 0, 184) | 0;
    $$1 = $$1 + 1 | 0;
   }
  } else {
   $17 = ___errno_location() | 0;
   HEAP32[$vararg_buffer6 >> 2] = HEAP32[$17 >> 2];
   _arLog(0, 3, 18240, $vararg_buffer6);
   $19 = ___errno_location() | 0;
   $21 = _strerror(HEAP32[$19 >> 2] | 0) | 0;
   HEAP32[$vararg_buffer9 >> 2] = 58334;
   HEAP32[$vararg_buffer9 + 4 >> 2] = $21;
   _arLog(0, 3, 19708, $vararg_buffer9);
   $$059 = -1;
  } while (0);
  _fclose($8) | 0;
  $$056 = $$059;
 } else $$056 = -1; while (0);
 STACKTOP = sp;
 return $$056 | 0;
}

function _ar2ReadImageSet($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$079 = 0, $$080 = 0, $$1 = 0, $1 = 0, $10 = 0, $13 = 0, $15 = 0, $16 = 0, $18 = 0, $20 = 0, $30 = 0, $4 = 0, $43 = 0, $50 = 0, $53 = 0, $6 = 0, $8 = 0, $vararg_buffer1 = 0, $vararg_buffer10 = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0, $vararg_buffer17 = 0, $vararg_buffer19 = 0, $vararg_buffer23 = 0, $vararg_buffer4 = 0, $vararg_buffer8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $vararg_buffer23 = sp + 72 | 0;
 $vararg_buffer19 = sp + 64 | 0;
 $vararg_buffer17 = sp + 56 | 0;
 $vararg_buffer15 = sp + 48 | 0;
 $vararg_buffer12 = sp + 40 | 0;
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer8 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $1 = sp + 80 | 0;
 $4 = _malloc((_strlen($0) | 0) + 6 | 0) | 0;
 if (!$4) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 }
 HEAP32[$vararg_buffer1 >> 2] = $0;
 HEAP32[$vararg_buffer1 + 4 >> 2] = 19416;
 _sprintf($4, 19411, $vararg_buffer1) | 0;
 $6 = _fopen($4, 20063) | 0;
 _free($4);
 L4 : do if (!$6) {
  HEAP32[$vararg_buffer4 >> 2] = $0;
  HEAP32[$vararg_buffer4 + 4 >> 2] = 19416;
  _arLog(0, 3, 19422, $vararg_buffer4);
  $$0 = 0;
 } else {
  $8 = _malloc(8) | 0;
  if (!$8) {
   _arLog(0, 3, 20454, $vararg_buffer8);
   _exit(1);
  }
  $10 = $8 + 4 | 0;
  if ((_fread($10, 4, 1, $6) | 0) == 1) {
   $13 = HEAP32[$10 >> 2] | 0;
   if (($13 | 0) < 1) label = 9; else {
    HEAP32[$vararg_buffer12 >> 2] = $13;
    _arLog(0, 1, 19495, $vararg_buffer12);
    $15 = $13 << 2;
    $16 = _malloc($15) | 0;
    HEAP32[$8 >> 2] = $16;
    if (!$16) {
     _arLog(0, 3, 20454, $vararg_buffer15);
     _exit(1);
    }
    $18 = _malloc(16) | 0;
    HEAP32[$16 >> 2] = $18;
    if (!$18) {
     _arLog(0, 3, 20454, $vararg_buffer17);
     _exit(1);
    }
    $20 = _ar2ReadJpegImage2($6) | 0;
    if (!$20) {
     HEAP32[$vararg_buffer19 >> 2] = $0;
     HEAP32[$vararg_buffer19 + 4 >> 2] = 19416;
     _arLog(0, 2, 19525, $vararg_buffer19);
     _free(HEAP32[$16 >> 2] | 0);
     _free($16);
     _free($8);
     _rewind($6);
     $$0 = _ar2ReadImageSetOld($6) | 0;
     break;
    }
    if ((HEAP32[$20 + 4 >> 2] | 0) != 1) {
     HEAP32[$vararg_buffer23 >> 2] = $0;
     HEAP32[$vararg_buffer23 + 4 >> 2] = 19416;
     _arLog(0, 2, 19525, $vararg_buffer23);
     _free(HEAP32[$16 >> 2] | 0);
     _free($16);
     _free($8);
     _free($20);
     _fclose($6) | 0;
     $$0 = 0;
     break;
    }
    $30 = HEAP32[$16 >> 2] | 0;
    HEAP32[$30 + 4 >> 2] = HEAP32[$20 + 8 >> 2];
    HEAP32[$30 + 8 >> 2] = HEAP32[$20 + 12 >> 2];
    HEAP32[$30 + 12 >> 2] = HEAP32[$20 + 16 >> 2];
    HEAP32[$30 >> 2] = HEAP32[$20 >> 2];
    _free($20);
    _fseek($6, 4 - $15 | 0, 2) | 0;
    $$079 = 1;
    while (1) {
     if (($$079 | 0) >= ($13 | 0)) {
      label = 29;
      break;
     }
     if ((_fread($1, 4, 1, $6) | 0) != 1) {
      label = 21;
      break;
     }
     $50 = _ar2GenImageLayer2(HEAP32[$16 >> 2] | 0, +HEAPF32[$1 >> 2]) | 0;
     HEAP32[$16 + ($$079 << 2) >> 2] = $50;
     if (!$50) {
      label = 25;
      break;
     }
     $$079 = $$079 + 1 | 0;
    }
    L30 : do if ((label | 0) == 21) {
     $$080 = 0;
     while (1) {
      if (($$080 | 0) == ($$079 | 0)) break L30;
      $43 = $16 + ($$080 << 2) | 0;
      _free(HEAP32[HEAP32[$43 >> 2] >> 2] | 0);
      _free(HEAP32[$43 >> 2] | 0);
      $$080 = $$080 + 1 | 0;
     }
    } else if ((label | 0) == 25) {
     $$1 = 0;
     while (1) {
      if (($$1 | 0) == ($$079 | 0)) break L30;
      $53 = $16 + ($$1 << 2) | 0;
      _free(HEAP32[HEAP32[$53 >> 2] >> 2] | 0);
      _free(HEAP32[$53 >> 2] | 0);
      $$1 = $$1 + 1 | 0;
     }
    } else if ((label | 0) == 29) {
     _fclose($6) | 0;
     $$0 = $8;
     break L4;
    } while (0);
    _free($16);
   }
  } else label = 9;
  if ((label | 0) == 9) _arLog(0, 3, 19470, $vararg_buffer10);
  _free($8);
  _fclose($6) | 0;
  $$0 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEEixERSD_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$053$i = 0, $$054$i = 0, $$1$i = 0, $$155$i = 0, $$pn$i = 0, $$pre$phi$iZ2D = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $27 = 0, $3 = 0, $32 = 0, $35 = 0.0, $38 = 0.0, $4 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $6 = 0, $62 = 0, $64 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $75 = 0, $8 = 0, $83 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 4 | 0;
 $3 = sp;
 $4 = sp + 16 | 0;
 HEAP32[$3 >> 2] = $1;
 $5 = HEAP32[$1 >> 2] | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = ($7 | 0) == 0;
 L1 : do if ($8) {
  $$054$i = 0;
  label = 16;
 } else {
  $9 = $7 + -1 | 0;
  $11 = ($9 & $7 | 0) == 0;
  if ($11) $17 = $9 & $5; else if ($5 >>> 0 < $7 >>> 0) $17 = $5; else $17 = ($5 >>> 0) % ($7 >>> 0) | 0;
  $18 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($17 << 2) >> 2] | 0;
  if (!$18) {
   $$054$i = $17;
   label = 16;
  } else {
   $$pn$i = $18;
   while (1) {
    $$053$i = HEAP32[$$pn$i >> 2] | 0;
    if (!$$053$i) {
     $$054$i = $17;
     label = 16;
     break L1;
    }
    $22 = HEAP32[$$053$i + 4 >> 2] | 0;
    if (($22 | 0) != ($5 | 0)) {
     if ($11) $27 = $22 & $9; else if ($22 >>> 0 < $7 >>> 0) $27 = $22; else $27 = ($22 >>> 0) % ($7 >>> 0) | 0;
     if (($27 | 0) != ($17 | 0)) {
      $$054$i = $17;
      label = 16;
      break L1;
     }
    }
    if ((HEAP32[$$053$i + 8 >> 2] | 0) == ($5 | 0)) {
     $$1$i = $$053$i;
     break;
    } else $$pn$i = $$053$i;
   }
  }
 } while (0);
 if ((label | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISW_EEEEEEmOT_DpOT0_($2, $0, $5, 58324, $3, $4);
  $32 = $0 + 12 | 0;
  $35 = +(((HEAP32[$32 >> 2] | 0) + 1 | 0) >>> 0);
  $38 = +HEAPF32[$0 + 16 >> 2];
  do if ($8 | $38 * +($7 >>> 0) < $35) {
   $48 = $7 << 1 | ($7 >>> 0 < 3 | ($7 + -1 & $7 | 0) != 0) & 1;
   $51 = ~~+Math_ceil(+($35 / $38)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE6rehashEm($0, $48 >>> 0 < $51 >>> 0 ? $51 : $48);
   $53 = HEAP32[$6 >> 2] | 0;
   $54 = $53 + -1 | 0;
   if (!($54 & $53)) {
    $$0$i = $53;
    $$155$i = $54 & $5;
    break;
   }
   if ($5 >>> 0 < $53 >>> 0) {
    $$0$i = $53;
    $$155$i = $5;
   } else {
    $$0$i = $53;
    $$155$i = ($5 >>> 0) % ($53 >>> 0) | 0;
   }
  } else {
   $$0$i = $7;
   $$155$i = $$054$i;
  } while (0);
  $62 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] | 0;
  if (!$62) {
   $64 = $0 + 8 | 0;
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$64 >> 2];
   HEAP32[$64 >> 2] = HEAP32[$2 >> 2];
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] = $64;
   $70 = HEAP32[$2 >> 2] | 0;
   $71 = HEAP32[$70 >> 2] | 0;
   if (!$71) $$pre$phi$iZ2D = $2; else {
    $74 = HEAP32[$71 + 4 >> 2] | 0;
    $75 = $$0$i + -1 | 0;
    if (!($75 & $$0$i)) $83 = $74 & $75; else if ($74 >>> 0 < $$0$i >>> 0) $83 = $74; else $83 = ($74 >>> 0) % ($$0$i >>> 0) | 0;
    HEAP32[(HEAP32[$0 >> 2] | 0) + ($83 << 2) >> 2] = $70;
    $$pre$phi$iZ2D = $2;
   }
  } else {
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$62 >> 2];
   HEAP32[$62 >> 2] = HEAP32[$2 >> 2];
   $$pre$phi$iZ2D = $2;
  }
  $87 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
  HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 1;
  HEAP32[$$pre$phi$iZ2D >> 2] = 0;
  $$1$i = $87;
 }
 STACKTOP = sp;
 return $$1$i + 12 | 0;
}

function __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEEixERSC_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$053$i = 0, $$054$i = 0, $$1$i = 0, $$155$i = 0, $$pn$i = 0, $$pre$phi$iZ2D = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $27 = 0, $3 = 0, $32 = 0, $35 = 0.0, $38 = 0.0, $4 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $6 = 0, $62 = 0, $64 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $75 = 0, $8 = 0, $83 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 4 | 0;
 $3 = sp;
 $4 = sp + 16 | 0;
 HEAP32[$3 >> 2] = $1;
 $5 = HEAP32[$1 >> 2] | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = ($7 | 0) == 0;
 L1 : do if ($8) {
  $$054$i = 0;
  label = 16;
 } else {
  $9 = $7 + -1 | 0;
  $11 = ($9 & $7 | 0) == 0;
  if ($11) $17 = $9 & $5; else if ($5 >>> 0 < $7 >>> 0) $17 = $5; else $17 = ($5 >>> 0) % ($7 >>> 0) | 0;
  $18 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($17 << 2) >> 2] | 0;
  if (!$18) {
   $$054$i = $17;
   label = 16;
  } else {
   $$pn$i = $18;
   while (1) {
    $$053$i = HEAP32[$$pn$i >> 2] | 0;
    if (!$$053$i) {
     $$054$i = $17;
     label = 16;
     break L1;
    }
    $22 = HEAP32[$$053$i + 4 >> 2] | 0;
    if (($22 | 0) != ($5 | 0)) {
     if ($11) $27 = $22 & $9; else if ($22 >>> 0 < $7 >>> 0) $27 = $22; else $27 = ($22 >>> 0) % ($7 >>> 0) | 0;
     if (($27 | 0) != ($17 | 0)) {
      $$054$i = $17;
      label = 16;
      break L1;
     }
    }
    if ((HEAP32[$$053$i + 8 >> 2] | 0) == ($5 | 0)) {
     $$1$i = $$053$i;
     break;
    } else $$pn$i = $$053$i;
   }
  }
 } while (0);
 if ((label | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_($2, $0, $5, 58324, $3, $4);
  $32 = $0 + 12 | 0;
  $35 = +(((HEAP32[$32 >> 2] | 0) + 1 | 0) >>> 0);
  $38 = +HEAPF32[$0 + 16 >> 2];
  do if ($8 | $38 * +($7 >>> 0) < $35) {
   $48 = $7 << 1 | ($7 >>> 0 < 3 | ($7 + -1 & $7 | 0) != 0) & 1;
   $51 = ~~+Math_ceil(+($35 / $38)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE6rehashEm($0, $48 >>> 0 < $51 >>> 0 ? $51 : $48);
   $53 = HEAP32[$6 >> 2] | 0;
   $54 = $53 + -1 | 0;
   if (!($54 & $53)) {
    $$0$i = $53;
    $$155$i = $54 & $5;
    break;
   }
   if ($5 >>> 0 < $53 >>> 0) {
    $$0$i = $53;
    $$155$i = $5;
   } else {
    $$0$i = $53;
    $$155$i = ($5 >>> 0) % ($53 >>> 0) | 0;
   }
  } else {
   $$0$i = $7;
   $$155$i = $$054$i;
  } while (0);
  $62 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] | 0;
  if (!$62) {
   $64 = $0 + 8 | 0;
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$64 >> 2];
   HEAP32[$64 >> 2] = HEAP32[$2 >> 2];
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] = $64;
   $70 = HEAP32[$2 >> 2] | 0;
   $71 = HEAP32[$70 >> 2] | 0;
   if (!$71) $$pre$phi$iZ2D = $2; else {
    $74 = HEAP32[$71 + 4 >> 2] | 0;
    $75 = $$0$i + -1 | 0;
    if (!($75 & $$0$i)) $83 = $74 & $75; else if ($74 >>> 0 < $$0$i >>> 0) $83 = $74; else $83 = ($74 >>> 0) % ($$0$i >>> 0) | 0;
    HEAP32[(HEAP32[$0 >> 2] | 0) + ($83 << 2) >> 2] = $70;
    $$pre$phi$iZ2D = $2;
   }
  } else {
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$62 >> 2];
   HEAP32[$62 >> 2] = HEAP32[$2 >> 2];
   $$pre$phi$iZ2D = $2;
  }
  $87 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
  HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 1;
  HEAP32[$$pre$phi$iZ2D >> 2] = 0;
  $$1$i = $87;
 }
 STACKTOP = sp;
 return $$1$i + 12 | 0;
}

function _minv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0128 = 0.0, $$0129 = 0, $$0131 = 0, $$0133 = 0, $$0136 = 0, $$0140 = 0, $$0143 = 0, $$1130 = 0, $$1134 = 0, $$1137 = 0, $$1141 = 0, $$1144 = 0, $$2 = 0, $$2135 = 0, $$2138 = 0, $$2142 = 0, $$2145 = 0, $$3 = 0, $$3139 = 0, $$4 = 0, $13 = 0, $15 = 0.0, $16 = 0, $21 = 0, $22 = 0, $23 = 0, $27 = 0.0, $3 = 0, $32 = 0.0, $33 = 0, $40 = 0, $41 = 0.0, $42 = 0, $56 = 0, $65 = 0.0, $indvars$iv = 0, $indvars$iv152 = 0, $scevgep = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2e3 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2e3);
 $3 = sp;
 L1 : do if (($1 | 0) > 500) $$0 = 0; else {
  switch ($1 | 0) {
  case 0:
   {
    $$0 = 0;
    break L1;
    break;
   }
  case 1:
   {
    HEAPF64[$0 >> 3] = 1.0 / +HEAPF64[$0 >> 3];
    $$0 = $0;
    break L1;
    break;
   }
  default:
   {}
  }
  $$0133 = 0;
  while (1) {
   if (($$0133 | 0) >= ($1 | 0)) break;
   HEAP32[$3 + ($$0133 << 2) >> 2] = $$0133;
   $$0133 = $$0133 + 1 | 0;
  }
  $scevgep = $0 + ($1 + -1 << 3) | 0;
  $$1134 = 0;
  $indvars$iv = $scevgep;
  while (1) {
   if (($$1134 | 0) >= ($1 | 0)) break;
   $13 = $0 + ((Math_imul($$1134, $2) | 0) << 3) | 0;
   $$0128 = 0.0;
   $$0129 = $13;
   $$0131 = -1;
   $$0140 = $$1134;
   while (1) {
    if (($$0140 | 0) == ($1 | 0)) break;
    $15 = +Math_abs(+(+HEAPF64[$$0129 >> 3]));
    $16 = $$0128 < $15;
    $$0128 = $16 ? $15 : $$0128;
    $$0129 = $$0129 + ($2 << 3) | 0;
    $$0131 = $16 ? $$0140 : $$0131;
    $$0140 = $$0140 + 1 | 0;
   }
   if (($$0131 | 0) == -1 | $$0128 <= 1.0e-10) {
    $$0 = 0;
    break L1;
   }
   $21 = $3 + ($$0131 << 2) | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   $23 = $3 + ($$1134 << 2) | 0;
   HEAP32[$21 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$23 >> 2] = $22;
   $$0136 = 0;
   $$0143 = $13;
   $$1130 = $0 + ((Math_imul($$0131, $2) | 0) << 3) | 0;
   while (1) {
    if (($$0136 | 0) == ($1 | 0)) break;
    $27 = +HEAPF64[$$1130 >> 3];
    HEAPF64[$$1130 >> 3] = +HEAPF64[$$0143 >> 3];
    HEAPF64[$$0143 >> 3] = $27;
    $$0136 = $$0136 + 1 | 0;
    $$0143 = $$0143 + 8 | 0;
    $$1130 = $$1130 + 8 | 0;
   }
   $32 = +HEAPF64[$13 >> 3];
   $$1137 = 1;
   $$2 = $13;
   while (1) {
    if (($$1137 | 0) == ($1 | 0)) break;
    $33 = $$2 + 8 | 0;
    HEAPF64[$$2 >> 3] = +HEAPF64[$33 >> 3] / $32;
    $$1137 = $$1137 + 1 | 0;
    $$2 = $33;
   }
   HEAPF64[$indvars$iv >> 3] = 1.0 / $32;
   $$1141 = 0;
   $indvars$iv152 = $scevgep;
   while (1) {
    if (($$1141 | 0) == ($1 | 0)) break;
    if (($$1141 | 0) != ($$1134 | 0)) {
     $40 = $0 + ((Math_imul($$1141, $2) | 0) << 3) | 0;
     $41 = +HEAPF64[$40 >> 3];
     $$1144 = $13;
     $$2138 = 1;
     $$3 = $40;
     while (1) {
      if (($$2138 | 0) == ($1 | 0)) break;
      $42 = $$3 + 8 | 0;
      HEAPF64[$$3 >> 3] = +HEAPF64[$42 >> 3] - $41 * +HEAPF64[$$1144 >> 3];
      $$1144 = $$1144 + 8 | 0;
      $$2138 = $$2138 + 1 | 0;
      $$3 = $42;
     }
     HEAPF64[$indvars$iv152 >> 3] = -($41 * +HEAPF64[$indvars$iv >> 3]);
    }
    $$1141 = $$1141 + 1 | 0;
    $indvars$iv152 = $indvars$iv152 + ($2 << 3) | 0;
   }
   $$1134 = $$1134 + 1 | 0;
   $indvars$iv = $indvars$iv + ($2 << 3) | 0;
  }
  $$2135 = 0;
  while (1) {
   if (($$2135 | 0) >= ($1 | 0)) {
    $$0 = $0;
    break L1;
   }
   $$3139 = $$2135;
   while (1) {
    $56 = $3 + ($$3139 << 2) | 0;
    if (($$3139 | 0) >= ($1 | 0)) break;
    if ((HEAP32[$56 >> 2] | 0) == ($$2135 | 0)) break;
    $$3139 = $$3139 + 1 | 0;
   }
   HEAP32[$56 >> 2] = HEAP32[$3 + ($$2135 << 2) >> 2];
   $$2142 = 0;
   $$2145 = $0 + ($$2135 << 3) | 0;
   $$4 = $0 + ($$3139 << 3) | 0;
   while (1) {
    if (($$2142 | 0) >= ($1 | 0)) break;
    $65 = +HEAPF64[$$4 >> 3];
    HEAPF64[$$4 >> 3] = +HEAPF64[$$2145 >> 3];
    HEAPF64[$$2145 >> 3] = $65;
    $$2142 = $$2142 + 1 | 0;
    $$2145 = $$2145 + ($2 << 3) | 0;
    $$4 = $$4 + ($2 << 3) | 0;
   }
   $$2135 = $$2135 + 1 | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$8 = 0, $$pre$phiZ2D = 0, $$sink = 0, $10 = 0, $104 = 0, $106 = 0, $11 = 0, $110 = 0, $113 = 0, $134 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $30 = 0, $42 = 0, $48 = 0, $57 = 0, $59 = 0, $66 = 0, $75 = 0, $85 = 0, $87 = 0, $89 = 0, $95 = 0, $98 = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 if (!($7 & 4)) $$pre$phiZ2D = $1; else {
  $10 = HEAP32[$2 >> 2] | 0;
  $11 = $1;
  if (($11 - $10 | 0) > 2) if ((HEAP8[$10 >> 0] | 0) == -17) if ((HEAP8[$10 + 1 >> 0] | 0) == -69) if ((HEAP8[$10 + 2 >> 0] | 0) == -65) {
   HEAP32[$2 >> 2] = $10 + 3;
   $$pre$phiZ2D = $11;
  } else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11;
 }
 $24 = $4;
 L9 : while (1) {
  $25 = HEAP32[$2 >> 2] | 0;
  if ($25 >>> 0 >= $1 >>> 0) {
   $$8 = 0;
   break;
  }
  $27 = HEAP32[$5 >> 2] | 0;
  if ($27 >>> 0 >= $4 >>> 0) {
   $$8 = 1;
   break;
  }
  $29 = HEAP8[$25 >> 0] | 0;
  $30 = $29 & 255;
  if ($30 >>> 0 > $6 >>> 0) {
   $$8 = 2;
   break;
  }
  do if ($29 << 24 >> 24 > -1) {
   HEAP16[$27 >> 1] = $29 & 255;
   $$sink = $25 + 1 | 0;
  } else {
   if (($29 & 255) < 194) {
    $$8 = 2;
    break L9;
   }
   if (($29 & 255) < 224) {
    if (($$pre$phiZ2D - $25 | 0) < 2) {
     $$8 = 1;
     break L9;
    }
    $42 = HEAPU8[$25 + 1 >> 0] | 0;
    if (($42 & 192 | 0) != 128) {
     $$8 = 2;
     break L9;
    }
    $48 = $42 & 63 | $30 << 6 & 1984;
    if ($48 >>> 0 > $6 >>> 0) {
     $$8 = 2;
     break L9;
    }
    HEAP16[$27 >> 1] = $48;
    $$sink = $25 + 2 | 0;
    break;
   }
   if (($29 & 255) < 240) {
    if (($$pre$phiZ2D - $25 | 0) < 3) {
     $$8 = 1;
     break L9;
    }
    $57 = HEAP8[$25 + 1 >> 0] | 0;
    $59 = HEAP8[$25 + 2 >> 0] | 0;
    switch ($29 << 24 >> 24) {
    case -32:
     {
      if (($57 & -32) << 24 >> 24 != -96) {
       $$8 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if (($57 & -32) << 24 >> 24 != -128) {
       $$8 = 2;
       break L9;
      }
      break;
     }
    default:
     if (($57 & -64) << 24 >> 24 != -128) {
      $$8 = 2;
      break L9;
     }
    }
    $66 = $59 & 255;
    if (($66 & 192 | 0) != 128) {
     $$8 = 2;
     break L9;
    }
    $75 = ($57 & 63) << 6 | $30 << 12 | $66 & 63;
    if (($75 & 65535) >>> 0 > $6 >>> 0) {
     $$8 = 2;
     break L9;
    }
    HEAP16[$27 >> 1] = $75;
    $$sink = $25 + 3 | 0;
    break;
   }
   if (($29 & 255) >= 245) {
    $$8 = 2;
    break L9;
   }
   if (($$pre$phiZ2D - $25 | 0) < 4) {
    $$8 = 1;
    break L9;
   }
   $85 = HEAP8[$25 + 1 >> 0] | 0;
   $87 = HEAP8[$25 + 2 >> 0] | 0;
   $89 = HEAP8[$25 + 3 >> 0] | 0;
   switch ($29 << 24 >> 24) {
   case -16:
    {
     if (($85 + 112 & 255) >= 48) {
      $$8 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if (($85 & -16) << 24 >> 24 != -128) {
      $$8 = 2;
      break L9;
     }
     break;
    }
   default:
    if (($85 & -64) << 24 >> 24 != -128) {
     $$8 = 2;
     break L9;
    }
   }
   $95 = $87 & 255;
   if (($95 & 192 | 0) != 128) {
    $$8 = 2;
    break L9;
   }
   $98 = $89 & 255;
   if (($98 & 192 | 0) != 128) {
    $$8 = 2;
    break L9;
   }
   if (($24 - $27 | 0) < 4) {
    $$8 = 1;
    break L9;
   }
   $104 = $30 & 7;
   $106 = $85 & 255;
   $110 = $95 << 6;
   $113 = $98 & 63;
   if (($106 << 12 & 258048 | $104 << 18 | $110 & 4032 | $113) >>> 0 > $6 >>> 0) {
    $$8 = 2;
    break L9;
   }
   HEAP16[$27 >> 1] = $106 << 2 & 60 | $95 >>> 4 & 3 | (($106 >>> 4 & 3 | $104 << 2) << 6) + 16320 | 55296;
   $134 = $27 + 2 | 0;
   HEAP32[$5 >> 2] = $134;
   HEAP16[$134 >> 1] = $113 | $110 & 960 | 56320;
   $$sink = (HEAP32[$2 >> 2] | 0) + 4 | 0;
  } while (0);
  HEAP32[$2 >> 2] = $$sink;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2;
 }
 return $$8 | 0;
}

function _arParamDecompMat($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0117 = 0, $$1 = 0, $$1118 = 0, $$2 = 0, $$2119 = 0, $$3 = 0, $$3120 = 0, $101 = 0.0, $102 = 0.0, $113 = 0.0, $117 = 0.0, $131 = 0, $22 = 0.0, $24 = 0.0, $26 = 0.0, $27 = 0.0, $28 = 0, $29 = 0.0, $3 = 0, $30 = 0, $32 = 0.0, $33 = 0, $35 = 0.0, $36 = 0, $41 = 0, $43 = 0.0, $45 = 0.0, $47 = 0.0, $48 = 0.0, $49 = 0, $52 = 0.0, $55 = 0.0, $58 = 0.0, $59 = 0.0, $60 = 0, $62 = 0, $65 = 0, $68 = 0, $72 = 0.0, $74 = 0.0, $76 = 0.0, $77 = 0.0, $78 = 0, $82 = 0.0, $83 = 0, $89 = 0.0, $95 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $3 = sp;
 L1 : do if (!(+HEAPF64[$0 + 88 >> 3] >= 0.0)) {
  $$1 = 0;
  while (1) {
   if (($$1 | 0) == 3) break L1;
   $$1118 = 0;
   while (1) {
    if (($$1118 | 0) == 4) break;
    HEAPF64[$3 + ($$1 << 5) + ($$1118 << 3) >> 3] = -+HEAPF64[$0 + ($$1 << 5) + ($$1118 << 3) >> 3];
    $$1118 = $$1118 + 1 | 0;
   }
   $$1 = $$1 + 1 | 0;
  }
 } else {
  $$0 = 0;
  while (1) {
   if (($$0 | 0) == 3) break L1;
   $$0117 = 0;
   while (1) {
    if (($$0117 | 0) == 4) break;
    HEAPF64[$3 + ($$0 << 5) + ($$0117 << 3) >> 3] = +HEAPF64[$0 + ($$0 << 5) + ($$0117 << 3) >> 3];
    $$0117 = $$0117 + 1 | 0;
   }
   $$0 = $$0 + 1 | 0;
  }
 } while (0);
 $$2 = 0;
 while (1) {
  if (($$2 | 0) == 3) break;
  $$2119 = 0;
  while (1) {
   if (($$2119 | 0) == 4) break;
   HEAPF64[$1 + ($$2 << 5) + ($$2119 << 3) >> 3] = 0.0;
   $$2119 = $$2119 + 1 | 0;
  }
  $$2 = $$2 + 1 | 0;
 }
 $22 = +HEAPF64[$3 + 64 >> 3];
 $24 = +HEAPF64[$3 + 72 >> 3];
 $26 = +HEAPF64[$3 + 80 >> 3];
 $27 = +_norm($22, $24, $26);
 $28 = $1 + 80 | 0;
 HEAPF64[$28 >> 3] = $27;
 $29 = $22 / $27;
 $30 = $2 + 64 | 0;
 HEAPF64[$30 >> 3] = $29;
 $32 = $24 / +HEAPF64[$28 >> 3];
 $33 = $2 + 72 | 0;
 HEAPF64[$33 >> 3] = $32;
 $35 = $26 / +HEAPF64[$28 >> 3];
 $36 = $2 + 80 | 0;
 HEAPF64[$36 >> 3] = $35;
 $41 = $2 + 88 | 0;
 HEAPF64[$41 >> 3] = +HEAPF64[$3 + 88 >> 3] / +HEAPF64[$28 >> 3];
 $43 = +HEAPF64[$3 + 32 >> 3];
 $45 = +HEAPF64[$3 + 40 >> 3];
 $47 = +HEAPF64[$3 + 48 >> 3];
 $48 = +_dot($29, $32, $35, $43, $45, $47);
 $49 = $1 + 48 | 0;
 HEAPF64[$49 >> 3] = $48;
 $52 = $43 - $48 * +HEAPF64[$30 >> 3];
 $55 = $45 - $48 * +HEAPF64[$33 >> 3];
 $58 = $47 - $48 * +HEAPF64[$36 >> 3];
 $59 = +_norm($52, $55, $58);
 $60 = $1 + 40 | 0;
 HEAPF64[$60 >> 3] = $59;
 $62 = $2 + 32 | 0;
 HEAPF64[$62 >> 3] = $52 / $59;
 $65 = $2 + 40 | 0;
 HEAPF64[$65 >> 3] = $55 / +HEAPF64[$60 >> 3];
 $68 = $2 + 48 | 0;
 HEAPF64[$68 >> 3] = $58 / +HEAPF64[$60 >> 3];
 $72 = +HEAPF64[$3 >> 3];
 $74 = +HEAPF64[$3 + 8 >> 3];
 $76 = +HEAPF64[$3 + 16 >> 3];
 $77 = +_dot(+HEAPF64[$30 >> 3], +HEAPF64[$33 >> 3], +HEAPF64[$36 >> 3], $72, $74, $76);
 $78 = $1 + 16 | 0;
 HEAPF64[$78 >> 3] = $77;
 $82 = +_dot(+HEAPF64[$62 >> 3], +HEAPF64[$65 >> 3], +HEAPF64[$68 >> 3], $72, $74, $76);
 $83 = $1 + 8 | 0;
 HEAPF64[$83 >> 3] = $82;
 $89 = $72 - $82 * +HEAPF64[$62 >> 3] - $77 * +HEAPF64[$30 >> 3];
 $95 = $74 - $82 * +HEAPF64[$65 >> 3] - $77 * +HEAPF64[$33 >> 3];
 $101 = $76 - $82 * +HEAPF64[$68 >> 3] - $77 * +HEAPF64[$36 >> 3];
 $102 = +_norm($89, $95, $101);
 HEAPF64[$1 >> 3] = $102;
 HEAPF64[$2 >> 3] = $89 / $102;
 HEAPF64[$2 + 8 >> 3] = $95 / +HEAPF64[$1 >> 3];
 HEAPF64[$2 + 16 >> 3] = $101 / +HEAPF64[$1 >> 3];
 $113 = +HEAPF64[$41 >> 3];
 $117 = (+HEAPF64[$3 + 56 >> 3] - +HEAPF64[$49 >> 3] * $113) / +HEAPF64[$60 >> 3];
 HEAPF64[$2 + 56 >> 3] = $117;
 HEAPF64[$2 + 24 >> 3] = (+HEAPF64[$3 + 24 >> 3] - $117 * +HEAPF64[$83 >> 3] - $113 * +HEAPF64[$78 >> 3]) / +HEAPF64[$1 >> 3];
 $$3 = 0;
 while (1) {
  if (($$3 | 0) == 3) break;
  $$3120 = 0;
  while (1) {
   if (($$3120 | 0) == 3) break;
   $131 = $1 + ($$3 << 5) + ($$3120 << 3) | 0;
   HEAPF64[$131 >> 3] = +HEAPF64[$131 >> 3] / +HEAPF64[$28 >> 3];
   $$3120 = $$3120 + 1 | 0;
  }
  $$3 = $$3 + 1 | 0;
 }
 STACKTOP = sp;
 return 0;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEEixERSA_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $$053$i = 0, $$054$i = 0, $$1$i = 0, $$155$i = 0, $$pn$i = 0, $$pre$phi$iZ2D = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $27 = 0, $3 = 0, $32 = 0, $35 = 0.0, $38 = 0.0, $4 = 0, $48 = 0, $5 = 0, $51 = 0, $53 = 0, $54 = 0, $6 = 0, $62 = 0, $64 = 0, $7 = 0, $70 = 0, $71 = 0, $74 = 0, $75 = 0, $8 = 0, $83 = 0, $87 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 4 | 0;
 $3 = sp;
 $4 = sp + 16 | 0;
 HEAP32[$3 >> 2] = $1;
 $5 = HEAP32[$1 >> 2] | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $8 = ($7 | 0) == 0;
 L1 : do if ($8) {
  $$054$i = 0;
  label = 16;
 } else {
  $9 = $7 + -1 | 0;
  $11 = ($9 & $7 | 0) == 0;
  if ($11) $17 = $9 & $5; else if ($5 >>> 0 < $7 >>> 0) $17 = $5; else $17 = ($5 >>> 0) % ($7 >>> 0) | 0;
  $18 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($17 << 2) >> 2] | 0;
  if (!$18) {
   $$054$i = $17;
   label = 16;
  } else {
   $$pn$i = $18;
   while (1) {
    $$053$i = HEAP32[$$pn$i >> 2] | 0;
    if (!$$053$i) {
     $$054$i = $17;
     label = 16;
     break L1;
    }
    $22 = HEAP32[$$053$i + 4 >> 2] | 0;
    if (($22 | 0) != ($5 | 0)) {
     if ($11) $27 = $22 & $9; else if ($22 >>> 0 < $7 >>> 0) $27 = $22; else $27 = ($22 >>> 0) % ($7 >>> 0) | 0;
     if (($27 | 0) != ($17 | 0)) {
      $$054$i = $17;
      label = 16;
      break L1;
     }
    }
    if ((HEAP32[$$053$i + 8 >> 2] | 0) == ($5 | 0)) {
     $$1$i = $$053$i;
     break;
    } else $$pn$i = $$053$i;
   }
  }
 } while (0);
 if ((label | 0) == 16) {
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_($2, $0, $5, 58324, $3, $4);
  $32 = $0 + 12 | 0;
  $35 = +(((HEAP32[$32 >> 2] | 0) + 1 | 0) >>> 0);
  $38 = +HEAPF32[$0 + 16 >> 2];
  do if ($8 | $38 * +($7 >>> 0) < $35) {
   $48 = $7 << 1 | ($7 >>> 0 < 3 | ($7 + -1 & $7 | 0) != 0) & 1;
   $51 = ~~+Math_ceil(+($35 / $38)) >>> 0;
   __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE6rehashEm($0, $48 >>> 0 < $51 >>> 0 ? $51 : $48);
   $53 = HEAP32[$6 >> 2] | 0;
   $54 = $53 + -1 | 0;
   if (!($54 & $53)) {
    $$0$i = $53;
    $$155$i = $54 & $5;
    break;
   }
   if ($5 >>> 0 < $53 >>> 0) {
    $$0$i = $53;
    $$155$i = $5;
   } else {
    $$0$i = $53;
    $$155$i = ($5 >>> 0) % ($53 >>> 0) | 0;
   }
  } else {
   $$0$i = $7;
   $$155$i = $$054$i;
  } while (0);
  $62 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] | 0;
  if (!$62) {
   $64 = $0 + 8 | 0;
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$64 >> 2];
   HEAP32[$64 >> 2] = HEAP32[$2 >> 2];
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$155$i << 2) >> 2] = $64;
   $70 = HEAP32[$2 >> 2] | 0;
   $71 = HEAP32[$70 >> 2] | 0;
   if (!$71) $$pre$phi$iZ2D = $2; else {
    $74 = HEAP32[$71 + 4 >> 2] | 0;
    $75 = $$0$i + -1 | 0;
    if (!($75 & $$0$i)) $83 = $74 & $75; else if ($74 >>> 0 < $$0$i >>> 0) $83 = $74; else $83 = ($74 >>> 0) % ($$0$i >>> 0) | 0;
    HEAP32[(HEAP32[$0 >> 2] | 0) + ($83 << 2) >> 2] = $70;
    $$pre$phi$iZ2D = $2;
   }
  } else {
   HEAP32[HEAP32[$2 >> 2] >> 2] = HEAP32[$62 >> 2];
   HEAP32[$62 >> 2] = HEAP32[$2 >> 2];
   $$pre$phi$iZ2D = $2;
  }
  $87 = HEAP32[$$pre$phi$iZ2D >> 2] | 0;
  HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 1;
  HEAP32[$$pre$phi$iZ2D >> 2] = 0;
  $$1$i = $87;
 }
 STACKTOP = sp;
 return $$1$i + 12 | 0;
}

function __ZN6vision10DoGPyramid7computeEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$017 = 0, $12 = 0, $17 = 0, $2 = 0, $21 = 0, $29 = 0, $34 = 0, $38 = 0, $46 = 0, $51 = 0, $55 = 0, $56 = 0, $57 = 0, $63 = 0, $64 = 0, $65 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 if ((HEAP32[$0 + 4 >> 2] | 0) == (HEAP32[$0 >> 2] | 0)) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 20715) | 0, 20520) | 0, 33528) | 0, 72) | 0, 33535) | 0, 20757) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 63]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 if ((__ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv($1) | 0) <= 0) {
  $29 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 20798) | 0, 20520) | 0, 33528) | 0, 73) | 0, 33535) | 0, 20847) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $29 + (HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $34 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $38 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$34 >> 2] | 0) + 28 >> 2] & 63]($34, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($29, $38) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($29) | 0;
  _abort();
 }
 if ($1 | 0) if (___dynamic_cast($1, 10992, 11e3, 0) | 0) {
  $56 = $0 + 12 | 0;
  $57 = $0 + 16 | 0;
  $$017 = 0;
  while (1) {
   if ($$017 >>> 0 >= (HEAP32[$56 >> 2] | 0) >>> 0) break;
   $$0 = 0;
   while (1) {
    if ($$0 >>> 0 >= (HEAP32[$57 >> 2] | 0) >>> 0) break;
    $63 = __ZN6vision10DoGPyramid3getEmm($0, $$017, $$0) | 0;
    $64 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, $$017, $$0) | 0;
    $65 = $$0 + 1 | 0;
    __ZN6vision10DoGPyramid25difference_image_binomialERNS_5ImageERKS1_S4_(0, $63, $64, __ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, $$017, $65) | 0);
    $$0 = $65;
   }
   $$017 = $$017 + 1 | 0;
  }
  STACKTOP = sp;
  return;
 }
 $46 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 20883) | 0, 20520) | 0, 33528) | 0, 74) | 0, 33535) | 0, 20955) | 0;
 __ZNKSt3__28ios_base6getlocEv($2, $46 + (HEAP32[(HEAP32[$46 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $51 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
 $55 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$51 >> 2] | 0) + 28 >> 2] & 63]($51, 10) | 0;
 __ZNSt3__26localeD2Ev($2);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($46, $55) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($46) | 0;
 _abort();
}

function __ZN6vision11PartialSortIfiEENSt3__24pairIT_T0_EEPS5_ii($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$040 = 0, $$042 = 0, $$044 = 0, $$1 = 0, $$145 = 0, $$2 = 0, $$246 = 0, $11 = 0, $16 = 0, $20 = 0, $27 = 0, $32 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0.0, $43 = 0, $44 = 0, $45 = 0.0, $52 = 0, $53 = 0.0, $61 = 0, $62 = 0, $63 = 0, $70 = 0, $75 = 0, $76 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if (($2 | 0) <= 0) {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31767) | 0, 31796) | 0, 33528) | 0, 82) | 0, 33535) | 0, 31905) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 63]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 if (($3 | 0) <= 0) {
  $27 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31924) | 0, 31796) | 0, 33528) | 0, 83) | 0, 33535) | 0, 31953) | 0;
  __ZNKSt3__28ios_base6getlocEv($4, $27 + (HEAP32[(HEAP32[$27 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($4, 57884) | 0;
  $36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 63]($32, 10) | 0;
  __ZNSt3__26localeD2Ev($4);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($27, $36) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($27) | 0;
  _abort();
 }
 $37 = $3 + -1 | 0;
 $39 = $1 + ($37 << 3) | 0;
 $40 = $1 + ($37 << 3) + 4 | 0;
 $$040 = $2 + -1 | 0;
 $$042 = 0;
 while (1) {
  if (($$042 | 0) >= ($$040 | 0)) break;
  $42 = +HEAPF32[$39 >> 2];
  $43 = HEAP32[$40 >> 2] | 0;
  $$0 = $$042;
  $$044 = $$040;
  while (1) {
   $$1 = $$0;
   while (1) {
    $44 = $1 + ($$1 << 3) | 0;
    $45 = +HEAPF32[$44 >> 2];
    if (!($45 < $42)) {
     if ($42 < $45) break;
     if ((HEAP32[$1 + ($$1 << 3) + 4 >> 2] | 0) >= ($43 | 0)) break;
    }
    $$1 = $$1 + 1 | 0;
   }
   $$145 = $$044;
   while (1) {
    $52 = $1 + ($$145 << 3) | 0;
    $53 = +HEAPF32[$52 >> 2];
    if (!($42 < $53)) {
     if ($53 < $42) break;
     if (($43 | 0) >= (HEAP32[$1 + ($$145 << 3) + 4 >> 2] | 0)) break;
    }
    $$145 = $$145 + -1 | 0;
   }
   if (($$1 | 0) > ($$145 | 0)) {
    $$2 = $$1;
    $$246 = $$145;
   } else {
    HEAPF32[$44 >> 2] = $53;
    HEAPF32[$52 >> 2] = $45;
    $61 = $1 + ($$1 << 3) + 4 | 0;
    $62 = $1 + ($$145 << 3) + 4 | 0;
    $63 = HEAP32[$61 >> 2] | 0;
    HEAP32[$61 >> 2] = HEAP32[$62 >> 2];
    HEAP32[$62 >> 2] = $63;
    $$2 = $$1 + 1 | 0;
    $$246 = $$145 + -1 | 0;
   }
   if (($$2 | 0) > ($$246 | 0)) break; else {
    $$0 = $$2;
    $$044 = $$246;
   }
  }
  $$040 = ($$2 | 0) < ($3 | 0) ? $$040 : $$246;
  $$042 = ($$246 | 0) < ($37 | 0) ? $$2 : $$042;
 }
 $70 = $39;
 $75 = HEAP32[$70 + 4 >> 2] | 0;
 $76 = $0;
 HEAP32[$76 >> 2] = HEAP32[$70 >> 2];
 HEAP32[$76 + 4 >> 2] = $75;
 STACKTOP = sp;
 return;
}

function _kpmLoadRefDataSet($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$071 = 0, $$1 = 0, $11 = 0, $13 = 0, $16 = 0, $19 = 0, $22 = 0, $3 = 0, $44 = 0, $47 = 0, $51 = 0, $52 = 0, $55 = 0, $6 = 0, $64 = 0, $66 = 0, $68 = 0, $75 = 0, $77 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $vararg_buffer13 = sp + 56 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $3 = sp + 60 | 0;
 HEAP8[$3 >> 0] = HEAP8[20063] | 0;
 HEAP8[$3 + 1 >> 0] = HEAP8[20064] | 0;
 HEAP8[$3 + 2 >> 0] = HEAP8[20065] | 0;
 L1 : do if (($0 | 0) != 0 & ($2 | 0) != 0) {
  $6 = _kpmFopen($0, $1, $3) | 0;
  if (!$6) {
   $8 = ($1 | 0) != 0;
   HEAP32[$vararg_buffer1 >> 2] = $0;
   HEAP32[$vararg_buffer1 + 4 >> 2] = $8 ? 49920 : 58334;
   HEAP32[$vararg_buffer1 + 8 >> 2] = $8 ? $1 : 58334;
   _arLog(0, 3, 20117, $vararg_buffer1);
   $$0 = -1;
   break;
  }
  $11 = _calloc(1, 16) | 0;
  if (!$11) {
   _arLog(0, 3, 20454, $vararg_buffer5);
   _exit(1);
  }
  $13 = $11 + 4 | 0;
  L9 : do if ((_fread($13, 4, 1, $6) | 0) == 1) {
   $16 = HEAP32[$13 >> 2] | 0;
   if (($16 | 0) >= 1) {
    $19 = _malloc($16 * 132 | 0) | 0;
    HEAP32[$11 >> 2] = $19;
    if (!$19) {
     _arLog(0, 3, 20454, $vararg_buffer7);
     _exit(1);
    }
    $$071 = 0;
    $22 = $16;
    while (1) {
     if (($$071 | 0) >= ($22 | 0)) break;
     if ((_fread((HEAP32[$11 >> 2] | 0) + ($$071 * 132 | 0) | 0, 8, 1, $6) | 0) != 1) break L9;
     if ((_fread((HEAP32[$11 >> 2] | 0) + ($$071 * 132 | 0) + 8 | 0, 8, 1, $6) | 0) != 1) break L9;
     if ((_fread((HEAP32[$11 >> 2] | 0) + ($$071 * 132 | 0) + 16 | 0, 108, 1, $6) | 0) != 1) break L9;
     if ((_fread((HEAP32[$11 >> 2] | 0) + ($$071 * 132 | 0) + 124 | 0, 4, 1, $6) | 0) != 1) break L9;
     if ((_fread((HEAP32[$11 >> 2] | 0) + ($$071 * 132 | 0) + 128 | 0, 4, 1, $6) | 0) != 1) break L9;
     $$071 = $$071 + 1 | 0;
     $22 = HEAP32[$13 >> 2] | 0;
    }
    $44 = $11 + 12 | 0;
    if ((_fread($44, 4, 1, $6) | 0) == 1) {
     $47 = HEAP32[$44 >> 2] | 0;
     if (($47 | 0) < 1) {
      HEAP32[$11 + 8 >> 2] = 0;
      break;
     }
     $51 = _malloc($47 * 12 | 0) | 0;
     $52 = $11 + 8 | 0;
     HEAP32[$52 >> 2] = $51;
     if (!$51) {
      _arLog(0, 3, 20454, $vararg_buffer9);
      _exit(1);
     }
     $$1 = 0;
     $55 = $47;
     while (1) {
      if (($$1 | 0) >= ($55 | 0)) {
       label = 32;
       break;
      }
      if ((_fread((HEAP32[$52 >> 2] | 0) + ($$1 * 12 | 0) + 8 | 0, 4, 1, $6) | 0) != 1) break L9;
      if ((_fread((HEAP32[$52 >> 2] | 0) + ($$1 * 12 | 0) + 4 | 0, 4, 1, $6) | 0) != 1) break L9;
      $64 = HEAP32[$52 >> 2] | 0;
      $66 = HEAP32[$64 + ($$1 * 12 | 0) + 4 >> 2] | 0;
      $68 = _malloc($66 * 12 | 0) | 0;
      HEAP32[$64 + ($$1 * 12 | 0) >> 2] = $68;
      if (!$68) {
       label = 29;
       break;
      }
      if ((_fread($68, 12, $66, $6) | 0) != ($66 | 0)) break L9;
      $$1 = $$1 + 1 | 0;
      $55 = HEAP32[$44 >> 2] | 0;
     }
     if ((label | 0) == 29) {
      _arLog(0, 3, 20454, $vararg_buffer11);
      _exit(1);
     } else if ((label | 0) == 32) {
      HEAP32[$2 >> 2] = $11;
      _fclose($6) | 0;
      $$0 = 0;
      break L1;
     }
    }
   }
  } while (0);
  _arLog(0, 3, 20184, $vararg_buffer13);
  $75 = HEAP32[$11 + 8 >> 2] | 0;
  if ($75 | 0) _free($75);
  $77 = HEAP32[$11 >> 2] | 0;
  if ($77 | 0) _free($77);
  _free($11);
  _fclose($6) | 0;
  $$0 = -1;
 } else {
  _arLog(0, 3, 20066, $vararg_buffer);
  $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _ar2ReadMarkerSet($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$056 = 0, $$057 = 0, $$058 = 0, $12 = 0, $15 = 0, $18 = 0, $21 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $44 = 0, $5 = 0, $6 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0, $vararg_buffer2 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1088 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1088);
 $vararg_buffer15 = sp + 1072 | 0;
 $vararg_buffer12 = sp + 1064 | 0;
 $vararg_buffer9 = sp + 1056 | 0;
 $vararg_buffer7 = sp + 1048 | 0;
 $vararg_buffer4 = sp + 1040 | 0;
 $vararg_buffer2 = sp + 1032 | 0;
 $vararg_buffer = sp + 1024 | 0;
 $3 = sp + 768 | 0;
 $4 = sp + 512 | 0;
 $5 = sp;
 HEAP32[$vararg_buffer >> 2] = $0;
 HEAP32[$vararg_buffer + 4 >> 2] = $1;
 _sprintf($5, 20471, $vararg_buffer) | 0;
 $6 = _fopen($5, 19680) | 0;
 if (!$6) $$058 = 0; else {
  $8 = _malloc(8) | 0;
  if (!$8) {
   _arLog(0, 3, 20454, $vararg_buffer2);
   _exit(1);
  }
  L6 : do if (!(_get_buff_345($3, $6) | 0)) {
   _free($8);
   $$057 = 0;
  } else {
   $12 = $8 + 4 | 0;
   HEAP32[$vararg_buffer4 >> 2] = $12;
   if ((_sscanf($3, 19714, $vararg_buffer4) | 0) != 1) {
    _free($8);
    $$057 = 0;
    break;
   }
   $15 = HEAP32[$12 >> 2] | 0;
   if (($15 | 0) < 1) {
    _free($8);
    $$057 = 0;
    break;
   }
   $18 = _malloc($15 * 56 | 0) | 0;
   HEAP32[$8 >> 2] = $18;
   if (!$18) {
    _arLog(0, 3, 20454, $vararg_buffer7);
    _exit(1);
   }
   $$056 = 0;
   $21 = $15;
   L18 : while (1) {
    if (($$056 | 0) >= ($21 | 0)) {
     $$057 = $8;
     break L6;
    }
    if (!(_get_buff_345($3, $6) | 0)) {
     label = 15;
     break;
    }
    HEAP32[$vararg_buffer9 >> 2] = $4;
    if ((_sscanf($3, 19741, $vararg_buffer9) | 0) != 1) {
     label = 17;
     break;
    }
    $28 = _arPattLoad($2, $4) | 0;
    $29 = HEAP32[$8 >> 2] | 0;
    HEAP32[$29 + ($$056 * 56 | 0) + 4 >> 2] = $28;
    if (($28 | 0) < 0) {
     label = 19;
     break;
    }
    if (!(_get_buff_345($3, $6) | 0)) {
     label = 21;
     break;
    }
    HEAP32[$vararg_buffer12 >> 2] = (HEAP32[$8 >> 2] | 0) + ($$056 * 56 | 0);
    if ((_sscanf($3, 19642, $vararg_buffer12) | 0) != 1) {
     label = 24;
     break;
    }
    $$0 = 0;
    while (1) {
     if ($$0 >>> 0 >= 3) break;
     if (!(_get_buff_345($3, $6) | 0)) {
      label = 27;
      break L18;
     }
     $44 = HEAP32[$8 >> 2] | 0;
     HEAP32[$vararg_buffer15 >> 2] = $44 + ($$056 * 56 | 0) + 8 + ($$0 << 4);
     HEAP32[$vararg_buffer15 + 4 >> 2] = $44 + ($$056 * 56 | 0) + 8 + ($$0 << 4) + 4;
     HEAP32[$vararg_buffer15 + 8 >> 2] = $44 + ($$056 * 56 | 0) + 8 + ($$0 << 4) + 8;
     HEAP32[$vararg_buffer15 + 12 >> 2] = $44 + ($$056 * 56 | 0) + 8 + ($$0 << 4) + 12;
     if ((_sscanf($3, 19907, $vararg_buffer15) | 0) == 4) $$0 = $$0 + 1 | 0; else {
      label = 29;
      break L18;
     }
    }
    $$056 = $$056 + 1 | 0;
    $21 = HEAP32[$12 >> 2] | 0;
   }
   if ((label | 0) == 15) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 17) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 19) {
    _free($29);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 21) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 24) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 27) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   } else if ((label | 0) == 29) {
    _free(HEAP32[$8 >> 2] | 0);
    _free($8);
    $$057 = 0;
    break;
   }
  } while (0);
  _fclose($6) | 0;
  $$058 = $$057;
 }
 STACKTOP = sp;
 return $$058 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_126parse_base_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$add$i69 = 0, $$0$i$i$idx$i = 0, $$0$i$i$idx$i68 = 0, $$2 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $39 = 0, $41 = 0, $43 = 0, $45 = 0, $47 = 0, $48 = 0, $55 = 0, $60 = 0, $61 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 L1 : do if (($1 - $0 | 0) > 1) {
  $8 = HEAP8[$0 >> 0] | 0;
  switch ($8 << 24 >> 24) {
  case 100:
  case 111:
   {
    if ((HEAP8[$0 + 1 >> 0] | 0) == 110) {
     $13 = $0 + 2 | 0;
     if ($8 << 24 >> 24 != 111) {
      $39 = __ZN10__cxxabiv112_GLOBAL__N_121parse_destructor_nameINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
      $$2 = ($39 | 0) == ($13 | 0) ? $0 : $39;
      break L1;
     }
     $14 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
     if (($14 | 0) == ($13 | 0)) {
      $$2 = $0;
      break L1;
     }
     $16 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
     if (($16 | 0) == ($14 | 0)) {
      $$2 = $14;
      break L1;
     }
     $18 = $2 + 4 | 0;
     $19 = HEAP32[$18 >> 2] | 0;
     if ((($19 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) {
      $$2 = $16;
      break L1;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $19 + -24 | 0);
     $26 = HEAP32[$18 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$18 >> 2] = $26 + -24;
     $31 = HEAP8[$3 + 11 >> 0] | 0;
     $32 = $31 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($26 + -48 | 0, $32 ? HEAP32[$3 >> 2] | 0 : $3, $32 ? HEAP32[$3 + 4 >> 2] | 0 : $31 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$2 = $16;
     break L1;
    }
    break;
   }
  default:
   {}
  }
  $41 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
  if (($41 | 0) == ($0 | 0)) {
   $43 = __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   if (($43 | 0) == ($0 | 0)) $$2 = $0; else {
    $45 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($43, $1, $2) | 0;
    if (($45 | 0) == ($43 | 0)) $$2 = $43; else {
     $47 = $2 + 4 | 0;
     $48 = HEAP32[$47 >> 2] | 0;
     if ((($48 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$2 = $45; else {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $48 + -24 | 0);
      $55 = HEAP32[$47 >> 2] | 0;
      $$0$i$i$idx$i68 = 0;
      while (1) {
       if (($$0$i$i$idx$i68 | 0) == -1) break;
       $$0$i$i$add$i69 = $$0$i$i$idx$i68 + -1 | 0;
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($55 + ($$0$i$i$add$i69 * 24 | 0) | 0);
       $$0$i$i$idx$i68 = $$0$i$i$add$i69;
      }
      HEAP32[$47 >> 2] = $55 + -24;
      $60 = HEAP8[$3 + 11 >> 0] | 0;
      $61 = $60 << 24 >> 24 < 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($55 + -48 | 0, $61 ? HEAP32[$3 >> 2] | 0 : $3, $61 ? HEAP32[$3 + 4 >> 2] | 0 : $60 & 255) | 0;
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
      $$2 = $45;
     }
    }
   }
  } else $$2 = $41;
 } else $$2 = $0; while (0);
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $23 = 0, $26 = 0, $37 = 0, $39 = 0, $40 = 0, $45 = 0, $48 = 0, $62 = 0, $7 = 0, $77 = 0, $8 = 0, $81 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 432 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(432);
 $$byval_copy = sp + 424 | 0;
 $7 = sp;
 $8 = sp + 416 | 0;
 $9 = sp + 408 | 0;
 $10 = sp + 400 | 0;
 $11 = sp + 428 | 0;
 $12 = sp + 404 | 0;
 HEAP32[$8 >> 2] = $7;
 HEAP32[$8 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 57916) | 0;
 HEAP8[$11 >> 0] = 0;
 $17 = HEAP32[$2 >> 2] | 0;
 HEAP32[$12 >> 2] = $17;
 $19 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 $21 = $17;
 if (__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIwEERNS_10unique_ptrIwPFvPvEEERPwSM_($1, $$byval_copy, $3, $10, $19, $5, $11, $16, $8, $9, $7 + 400 | 0) | 0) {
  $23 = $6 + 8 + 3 | 0;
  if ((HEAP8[$23 >> 0] | 0) < 0) {
   $26 = HEAP32[$6 >> 2] | 0;
   HEAP32[$$byval_copy >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($26, $$byval_copy);
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP32[$$byval_copy >> 2] = 0;
   __ZNSt3__211char_traitsIwE6assignERwRKw($6, $$byval_copy);
   HEAP8[$23 >> 0] = 0;
  }
  if (HEAP8[$11 >> 0] | 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 44 >> 2] & 63]($16, 45) | 0);
  $37 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 44 >> 2] & 63]($16, 48) | 0;
  $39 = HEAP32[$9 >> 2] | 0;
  $40 = $39 + -4 | 0;
  $$0 = HEAP32[$8 >> 2] | 0;
  while (1) {
   if ($$0 >>> 0 >= $40 >>> 0) break;
   if ((HEAP32[$$0 >> 2] | 0) != ($37 | 0)) break;
   $$0 = $$0 + 4 | 0;
  }
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_($6, $$0, $39) | 0;
 }
 $45 = HEAP32[$1 >> 2] | 0;
 do if (!$45) $81 = 1; else {
  $48 = HEAP32[$45 + 12 >> 2] | 0;
  if (($48 | 0) == (HEAP32[$45 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$45 >> 2] | 0) + 36 >> 2] & 127]($45) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$48 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $81 = 1;
   break;
  } else {
   $81 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$17) label = 25; else {
  $62 = HEAP32[$21 + 12 >> 2] | 0;
  if (($62 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 127]($21) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$62 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 25;
   break;
  } else if ($81) break; else {
   label = 27;
   break;
  }
 } while (0);
 if ((label | 0) == 25) if ($81) label = 27;
 if ((label | 0) == 27) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $77 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($77 | 0) FUNCTION_TABLE_vi[HEAP32[$8 + 4 >> 2] & 255]($77);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0$i$i$i$i = 0, $$0$i$i2$i$i = 0, $$byval_copy = 0, $$sroa$0$0$copyload = 0, $10 = 0, $11 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $25 = 0, $36 = 0, $38 = 0, $39 = 0, $44 = 0, $47 = 0, $61 = 0, $7 = 0, $76 = 0, $8 = 0, $80 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 $$byval_copy = sp + 120 | 0;
 $7 = sp;
 $8 = sp + 112 | 0;
 $9 = sp + 108 | 0;
 $10 = sp + 100 | 0;
 $11 = sp + 124 | 0;
 $12 = sp + 104 | 0;
 HEAP32[$8 >> 2] = $7;
 HEAP32[$8 + 4 >> 2] = 143;
 __ZNKSt3__28ios_base6getlocEv($10, $4);
 $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($10, 57884) | 0;
 HEAP8[$11 >> 0] = 0;
 $17 = HEAP32[$2 >> 2] | 0;
 HEAP32[$12 >> 2] = $17;
 $19 = HEAP32[$4 + 4 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$12 >> 2];
 $21 = $17;
 if (__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE8__do_getERS4_S4_bRKNS_6localeEjRjRbRKNS_5ctypeIcEERNS_10unique_ptrIcPFvPvEEERPcSM_($1, $$byval_copy, $3, $10, $19, $5, $11, $16, $8, $9, $7 + 100 | 0) | 0) {
  $22 = $6 + 11 | 0;
  if ((HEAP8[$22 >> 0] | 0) < 0) {
   $25 = HEAP32[$6 >> 2] | 0;
   HEAP8[$$byval_copy >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($25, $$byval_copy);
   HEAP32[$6 + 4 >> 2] = 0;
  } else {
   HEAP8[$$byval_copy >> 0] = 0;
   __ZNSt3__211char_traitsIcE6assignERcRKc($6, $$byval_copy);
   HEAP8[$22 >> 0] = 0;
  }
  if (HEAP8[$11 >> 0] | 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($6, FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 63]($16, 45) | 0);
  $36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 63]($16, 48) | 0;
  $38 = HEAP32[$9 >> 2] | 0;
  $39 = $38 + -1 | 0;
  $$0 = HEAP32[$8 >> 2] | 0;
  while (1) {
   if ($$0 >>> 0 >= $39 >>> 0) break;
   if ((HEAP8[$$0 >> 0] | 0) != $36 << 24 >> 24) break;
   $$0 = $$0 + 1 | 0;
  }
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_($6, $$0, $38) | 0;
 }
 $44 = HEAP32[$1 >> 2] | 0;
 do if (!$44) $80 = 1; else {
  $47 = HEAP32[$44 + 12 >> 2] | 0;
  if (($47 | 0) == (HEAP32[$44 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$44 >> 2] | 0) + 36 >> 2] & 127]($44) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$47 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $80 = 1;
   break;
  } else {
   $80 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$17) label = 25; else {
  $61 = HEAP32[$21 + 12 >> 2] | 0;
  if (($61 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$17 >> 2] | 0) + 36 >> 2] & 127]($21) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$61 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 25;
   break;
  } else if ($80) break; else {
   label = 27;
   break;
  }
 } while (0);
 if ((label | 0) == 25) if ($80) label = 27;
 if ((label | 0) == 27) HEAP32[$5 >> 2] = HEAP32[$5 >> 2] | 2;
 $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
 __ZNSt3__26localeD2Ev($10);
 $76 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = 0;
 if ($76 | 0) FUNCTION_TABLE_vi[HEAP32[$8 + 4 >> 2] & 255]($76);
 STACKTOP = sp;
 return $$sroa$0$0$copyload | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i7 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i13 = 0, $100 = 0, $101 = 0, $21 = 0, $24 = 0, $36 = 0, $38 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $67 = 0, $70 = 0, $82 = 0, $85 = 0, $9 = 0, $99 = 0, label = 0;
 $5 = $4 + 8 | 0;
 L1 : while (1) {
  $6 = HEAP32[$1 >> 2] | 0;
  do if (!$6) $99 = 1; else {
   $9 = HEAP32[$6 + 12 >> 2] | 0;
   if (($9 | 0) == (HEAP32[$6 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 36 >> 2] & 127]($6) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$9 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $99 = 1;
    break;
   } else {
    $99 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $21 = HEAP32[$2 >> 2] | 0;
  do if (!$21) label = 15; else {
   $24 = HEAP32[$21 + 12 >> 2] | 0;
   if (($24 | 0) == (HEAP32[$21 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$21 >> 2] | 0) + 36 >> 2] & 127]($21) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$24 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 15;
    break;
   } else if ($99) {
    $100 = $21;
    break;
   } else {
    $82 = $21;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($99) {
    $82 = 0;
    break;
   } else $100 = 0;
  }
  $36 = HEAP32[$1 >> 2] | 0;
  $38 = HEAP32[$36 + 12 >> 2] | 0;
  if (($38 | 0) == (HEAP32[$36 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$36 >> 2] | 0) + 36 >> 2] & 127]($36) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$38 >> 0] | 0) | 0;
  if (($$0$i$i & 255) << 24 >> 24 <= -1) {
   $82 = $100;
   break;
  }
  if (!(HEAP16[(HEAP32[$5 >> 2] | 0) + ($$0$i$i << 24 >> 24 << 1) >> 1] & 8192)) {
   $82 = $100;
   break;
  }
  $56 = HEAP32[$1 >> 2] | 0;
  $57 = $56 + 12 | 0;
  $58 = HEAP32[$57 >> 2] | 0;
  if (($58 | 0) == (HEAP32[$56 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 40 >> 2] & 127]($56) | 0; else {
   HEAP32[$57 >> 2] = $58 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$58 >> 0] | 0) | 0;
  }
 }
 $67 = HEAP32[$1 >> 2] | 0;
 do if (!$67) $101 = 1; else {
  $70 = HEAP32[$67 + 12 >> 2] | 0;
  if (($70 | 0) == (HEAP32[$67 + 16 >> 2] | 0)) $$0$i$i$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$67 >> 2] | 0) + 36 >> 2] & 127]($67) | 0; else $$0$i$i$i$i7 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$70 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i7, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $101 = 1;
   break;
  } else {
   $101 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$82) label = 39; else {
  $85 = HEAP32[$82 + 12 >> 2] | 0;
  if (($85 | 0) == (HEAP32[$82 + 16 >> 2] | 0)) $$0$i$i2$i$i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$82 >> 2] | 0) + 36 >> 2] & 127]($82) | 0; else $$0$i$i2$i$i13 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$85 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i13, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 39;
   break;
  } else if ($101) break; else {
   label = 41;
   break;
  }
 } while (0);
 if ((label | 0) == 39) if ($101) label = 41;
 if ((label | 0) == 41) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i8 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i14 = 0, $100 = 0, $101 = 0, $20 = 0, $23 = 0, $37 = 0, $39 = 0, $5 = 0, $57 = 0, $58 = 0, $59 = 0, $68 = 0, $71 = 0, $8 = 0, $83 = 0, $86 = 0, label = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 do if (!$5) $100 = 1; else {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$8 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $100 = 1;
   break;
  } else {
   $100 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $20 = HEAP32[$2 >> 2] | 0;
 do if (!$20) label = 14; else {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$23 >> 0] | 0) | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 14;
   break;
  } else if ($100) {
   $83 = $20;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($100) label = 16; else {
  $83 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 6; else if ((label | 0) == 17) {
  $37 = HEAP32[$1 >> 2] | 0;
  $39 = HEAP32[$37 + 12 >> 2] | 0;
  if (($39 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] & 127]($37) | 0; else $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$39 >> 0] | 0) | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 36 >> 2] & 63]($4, $$0$i$i & 255, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 4;
   break;
  }
  $57 = HEAP32[$1 >> 2] | 0;
  $58 = $57 + 12 | 0;
  $59 = HEAP32[$58 >> 2] | 0;
  if (($59 | 0) == (HEAP32[$57 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$57 >> 2] | 0) + 40 >> 2] & 127]($57) | 0; else {
   HEAP32[$58 >> 2] = $59 + 1;
   __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$59 >> 0] | 0) | 0;
  }
  $68 = HEAP32[$1 >> 2] | 0;
  do if (!$68) $101 = 1; else {
   $71 = HEAP32[$68 + 12 >> 2] | 0;
   if (($71 | 0) == (HEAP32[$68 + 16 >> 2] | 0)) $$0$i$i$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$68 >> 2] | 0) + 36 >> 2] & 127]($68) | 0; else $$0$i$i$i$i8 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$71 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i8, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $101 = 1;
    break;
   } else {
    $101 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$83) label = 38; else {
   $86 = HEAP32[$83 + 12 >> 2] | 0;
   if (($86 | 0) == (HEAP32[$83 + 16 >> 2] | 0)) $$0$i$i2$i$i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$83 >> 2] | 0) + 36 >> 2] & 127]($83) | 0; else $$0$i$i2$i$i14 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$86 >> 0] | 0) | 0;
   if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i2$i$i14, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 38;
    break;
   } else if ($101) break L22; else break;
  } while (0);
  if ((label | 0) == 38) if (!$101) break;
  HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 } while (0);
 return;
}

function _realize_virt_arrays($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0$in = 0, $$0101 = 0, $$0102 = 0, $$0104 = 0, $$099 = 0, $$099$in = 0, $$1 = 0, $$1$in = 0, $$1100 = 0, $$1100$in = 0, $$1103 = 0, $$1105 = 0, $$2 = 0, $$2106 = 0, $$3 = 0, $$3107 = 0, $$pre$phi113Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $12 = 0, $18 = 0, $2 = 0, $25 = 0, $28 = 0, $3 = 0, $38 = 0, $40 = 0, $42 = 0, $47 = 0, $50 = 0, $55 = 0, $56 = 0, $58 = 0, $63 = 0, $64 = 0, $75 = 0, $78 = 0, $83 = 0, $84 = 0, $86 = 0, $92 = 0, $93 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $2 + 68 | 0;
 $$0102 = 0;
 $$0104 = 0;
 $$099$in = $3;
 while (1) {
  $$099 = HEAP32[$$099$in >> 2] | 0;
  if (!$$099) break;
  if (!(HEAP32[$$099 >> 2] | 0)) {
   $10 = HEAP32[$$099 + 8 >> 2] | 0;
   $12 = (Math_imul($10, HEAP32[$$099 + 12 >> 2] | 0) | 0) + $$0102 | 0;
   $$1103 = $12;
   $$1105 = (Math_imul(HEAP32[$$099 + 4 >> 2] | 0, $10) | 0) + $$0104 | 0;
  } else {
   $$1103 = $$0102;
   $$1105 = $$0104;
  }
  $$0102 = $$1103;
  $$0104 = $$1105;
  $$099$in = $$099 + 44 | 0;
 }
 $18 = $2 + 72 | 0;
 $$0$in = $18;
 $$2 = $$0102;
 $$2106 = $$0104;
 while (1) {
  $$0 = HEAP32[$$0$in >> 2] | 0;
  if (!$$0) break;
  if (!(HEAP32[$$0 >> 2] | 0)) {
   $25 = HEAP32[$$0 + 8 >> 2] | 0;
   $28 = (Math_imul(HEAP32[$$0 + 12 >> 2] << 7, $25) | 0) + $$2 | 0;
   $$3 = $28;
   $$3107 = (Math_imul($25 << 7, HEAP32[$$0 + 4 >> 2] | 0) | 0) + $$2106 | 0;
  } else {
   $$3 = $$2;
   $$3107 = $$2106;
  }
  $$0$in = $$0 + 44 | 0;
  $$2 = $$3;
  $$2106 = $$3107;
 }
 L15 : do if (($$2 | 0) >= 1) {
  $38 = _jpeg_mem_available($0, $$2, $$2106, HEAP32[$2 + 76 >> 2] | 0) | 0;
  if (($38 | 0) < ($$2106 | 0)) {
   $40 = ($38 | 0) / ($$2 | 0) | 0;
   $$0101 = ($40 | 0) > 1 ? $40 : 1;
  } else $$0101 = 1e9;
  $42 = $2 + 80 | 0;
  $$1100$in = $3;
  while (1) {
   $$1100 = HEAP32[$$1100$in >> 2] | 0;
   if (!$$1100) break;
   if (!(HEAP32[$$1100 >> 2] | 0)) {
    $47 = HEAP32[$$1100 + 4 >> 2] | 0;
    $50 = HEAP32[$$1100 + 12 >> 2] | 0;
    if ((((($47 + -1 | 0) >>> 0) / ($50 >>> 0) | 0) + 1 | 0) > ($$0101 | 0)) {
     $55 = Math_imul($50, $$0101) | 0;
     $56 = $$1100 + 16 | 0;
     HEAP32[$56 >> 2] = $55;
     $58 = $$1100 + 8 | 0;
     _jpeg_open_backing_store($0, $$1100 + 48 | 0, Math_imul(HEAP32[$58 >> 2] | 0, $47) | 0);
     HEAP32[$$1100 + 40 >> 2] = 1;
     $$pre$phi113Z2D = $58;
     $63 = HEAP32[$56 >> 2] | 0;
    } else {
     HEAP32[$$1100 + 16 >> 2] = $47;
     $$pre$phi113Z2D = $$1100 + 8 | 0;
     $63 = $47;
    }
    $64 = _alloc_sarray($0, 1, HEAP32[$$pre$phi113Z2D >> 2] | 0, $63) | 0;
    HEAP32[$$1100 >> 2] = $64;
    HEAP32[$$1100 + 20 >> 2] = HEAP32[$42 >> 2];
    HEAP32[$$1100 + 24 >> 2] = 0;
    HEAP32[$$1100 + 28 >> 2] = 0;
    HEAP32[$$1100 + 36 >> 2] = 0;
   }
   $$1100$in = $$1100 + 44 | 0;
  }
  $$1$in = $18;
  while (1) {
   $$1 = HEAP32[$$1$in >> 2] | 0;
   if (!$$1) break L15;
   if (!(HEAP32[$$1 >> 2] | 0)) {
    $75 = HEAP32[$$1 + 4 >> 2] | 0;
    $78 = HEAP32[$$1 + 12 >> 2] | 0;
    if ((((($75 + -1 | 0) >>> 0) / ($78 >>> 0) | 0) + 1 | 0) > ($$0101 | 0)) {
     $83 = Math_imul($78, $$0101) | 0;
     $84 = $$1 + 16 | 0;
     HEAP32[$84 >> 2] = $83;
     $86 = $$1 + 8 | 0;
     _jpeg_open_backing_store($0, $$1 + 48 | 0, Math_imul($75 << 7, HEAP32[$86 >> 2] | 0) | 0);
     HEAP32[$$1 + 40 >> 2] = 1;
     $$pre$phiZ2D = $86;
     $92 = HEAP32[$84 >> 2] | 0;
    } else {
     HEAP32[$$1 + 16 >> 2] = $75;
     $$pre$phiZ2D = $$1 + 8 | 0;
     $92 = $75;
    }
    $93 = _alloc_barray($0, 1, HEAP32[$$pre$phiZ2D >> 2] | 0, $92) | 0;
    HEAP32[$$1 >> 2] = $93;
    HEAP32[$$1 + 20 >> 2] = HEAP32[$42 >> 2];
    HEAP32[$$1 + 24 >> 2] = 0;
    HEAP32[$$1 + 28 >> 2] = 0;
    HEAP32[$$1 + 36 >> 2] = 0;
   }
   $$1$in = $$1 + 44 | 0;
  }
 } while (0);
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_percentERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i8 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i14 = 0, $100 = 0, $20 = 0, $23 = 0, $37 = 0, $39 = 0, $5 = 0, $56 = 0, $57 = 0, $58 = 0, $67 = 0, $70 = 0, $8 = 0, $82 = 0, $85 = 0, $99 = 0, label = 0;
 $5 = HEAP32[$1 >> 2] | 0;
 do if (!$5) $99 = 1; else {
  $8 = HEAP32[$5 + 12 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$8 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $99 = 1;
   break;
  } else {
   $99 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 $20 = HEAP32[$2 >> 2] | 0;
 do if (!$20) label = 14; else {
  $23 = HEAP32[$20 + 12 >> 2] | 0;
  if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$23 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 14;
   break;
  } else if ($99) {
   $82 = $20;
   label = 17;
   break;
  } else {
   label = 16;
   break;
  }
 } while (0);
 if ((label | 0) == 14) if ($99) label = 16; else {
  $82 = 0;
  label = 17;
 }
 L22 : do if ((label | 0) == 16) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 6; else if ((label | 0) == 17) {
  $37 = HEAP32[$1 >> 2] | 0;
  $39 = HEAP32[$37 + 12 >> 2] | 0;
  if (($39 | 0) == (HEAP32[$37 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$37 >> 2] | 0) + 36 >> 2] & 127]($37) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$39 >> 2] | 0) | 0;
  if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 52 >> 2] & 63]($4, $$0$i$i, 0) | 0) << 24 >> 24 != 37) {
   HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 4;
   break;
  }
  $56 = HEAP32[$1 >> 2] | 0;
  $57 = $56 + 12 | 0;
  $58 = HEAP32[$57 >> 2] | 0;
  if (($58 | 0) == (HEAP32[$56 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$56 >> 2] | 0) + 40 >> 2] & 127]($56) | 0; else {
   HEAP32[$57 >> 2] = $58 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$58 >> 2] | 0) | 0;
  }
  $67 = HEAP32[$1 >> 2] | 0;
  do if (!$67) $100 = 1; else {
   $70 = HEAP32[$67 + 12 >> 2] | 0;
   if (($70 | 0) == (HEAP32[$67 + 16 >> 2] | 0)) $$0$i$i$i$i8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$67 >> 2] | 0) + 36 >> 2] & 127]($67) | 0; else $$0$i$i$i$i8 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$70 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i8, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $100 = 1;
    break;
   } else {
    $100 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  do if (!$82) label = 38; else {
   $85 = HEAP32[$82 + 12 >> 2] | 0;
   if (($85 | 0) == (HEAP32[$82 + 16 >> 2] | 0)) $$0$i$i2$i$i14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$82 >> 2] | 0) + 36 >> 2] & 127]($82) | 0; else $$0$i$i2$i$i14 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$85 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i14, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 38;
    break;
   } else if ($100) break L22; else break;
  } while (0);
  if ((label | 0) == 38) if (!$100) break;
  HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 } while (0);
 return;
}

function __ZN6vision25DoGScaleInvariantDetector23findFeatureOrientationsEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$025 = 0, $$026 = 0, $13 = 0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $23 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $36 = 0, $4 = 0, $45 = 0.0, $5 = 0, $53 = 0.0, $54 = 0.0, $6 = 0, $62 = 0.0, $64 = 0, $79 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $2 = sp + 48 | 0;
 $3 = sp + 44 | 0;
 $4 = sp + 40 | 0;
 $5 = sp + 36 | 0;
 $6 = sp;
 L1 : do if (!(HEAP8[$0 + 28 >> 0] | 0)) {
  $13 = HEAP32[$0 + 60 >> 2] | 0;
  $15 = ((HEAP32[$0 + 64 >> 2] | 0) - $13 | 0) / 36 | 0;
  $16 = $13;
  $$026 = 0;
  while (1) {
   if (($$026 | 0) == ($15 | 0)) break L1;
   HEAPF32[$16 + ($$026 * 36 | 0) + 8 >> 2] = 0.0;
   $$026 = $$026 + 1 | 0;
  }
 } else {
  $19 = $0 + 72 | 0;
  $21 = $0 + 76 | 0;
  HEAP32[$21 >> 2] = HEAP32[$19 >> 2];
  $22 = $0 + 60 | 0;
  $23 = $0 + 64 | 0;
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm($19, (HEAP32[$23 >> 2] | 0) - (HEAP32[$22 >> 2] | 0) | 0);
  $27 = $0 + 92 | 0;
  __ZN6vision21OrientationAssignment16computeGradientsEPKNS_25GaussianScaleSpacePyramidE($27, $1);
  $28 = $0 + 144 | 0;
  $29 = $6 + 8 | 0;
  $30 = $0 + 80 | 0;
  $$025 = 0;
  while (1) {
   $32 = HEAP32[$22 >> 2] | 0;
   $36 = $32;
   if ($$025 >>> 0 >= (((HEAP32[$23 >> 2] | 0) - $32 | 0) / 36 | 0) >>> 0) break;
   __ZN6vision25bilinear_downsample_pointERfS0_S0_fffi($3, $4, $5, +HEAPF32[$36 + ($$025 * 36 | 0) >> 2], +HEAPF32[$36 + ($$025 * 36 | 0) + 4 >> 2], +HEAPF32[$36 + ($$025 * 36 | 0) + 28 >> 2], HEAP32[$36 + ($$025 * 36 | 0) + 12 >> 2] | 0);
   $45 = +HEAPF32[$3 >> 2];
   $53 = +__ZN6vision10ClipScalarIfEET_S1_S1_S1_($45, 0.0, +(((__ZNK6vision5Image5widthEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, HEAP32[(HEAP32[$22 >> 2] | 0) + ($$025 * 36 | 0) + 12 >> 2] | 0, 0) | 0) | 0) + -1 | 0) >>> 0));
   HEAPF32[$3 >> 2] = $53;
   $54 = +HEAPF32[$4 >> 2];
   $62 = +__ZN6vision10ClipScalarIfEET_S1_S1_S1_($54, 0.0, +(((__ZNK6vision5Image6heightEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, HEAP32[(HEAP32[$22 >> 2] | 0) + ($$025 * 36 | 0) + 12 >> 2] | 0, 0) | 0) | 0) + -1 | 0) >>> 0));
   HEAPF32[$4 >> 2] = $62;
   $64 = HEAP32[$22 >> 2] | 0;
   __ZN6vision21OrientationAssignment7computeEPfRiiifff($27, HEAP32[$28 >> 2] | 0, $2, HEAP32[$64 + ($$025 * 36 | 0) + 12 >> 2] | 0, HEAP32[$64 + ($$025 * 36 | 0) + 16 >> 2] | 0, +HEAPF32[$3 >> 2], $62, +HEAPF32[$5 >> 2]);
   $$0 = 0;
   while (1) {
    if (($$0 | 0) >= (HEAP32[$2 >> 2] | 0)) break;
    dest = $6;
    src = (HEAP32[$22 >> 2] | 0) + ($$025 * 36 | 0) | 0;
    stop = dest + 36 | 0;
    do {
     HEAP32[dest >> 2] = HEAP32[src >> 2];
     dest = dest + 4 | 0;
     src = src + 4 | 0;
    } while ((dest | 0) < (stop | 0));
    HEAP32[$29 >> 2] = HEAP32[(HEAP32[$28 >> 2] | 0) + ($$0 << 2) >> 2];
    $79 = HEAP32[$21 >> 2] | 0;
    if (($79 | 0) == (HEAP32[$30 >> 2] | 0)) __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($19, $6); else {
     dest = $79;
     src = $6;
     stop = dest + 36 | 0;
     do {
      HEAP32[dest >> 2] = HEAP32[src >> 2];
      dest = dest + 4 | 0;
      src = src + 4 | 0;
     } while ((dest | 0) < (stop | 0));
     HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 36;
    }
    $$0 = $$0 + 1 | 0;
   }
   $$025 = $$025 + 1 | 0;
  }
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE4swapERS6_($22, $19);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$4 = 0, $$pre80 = 0, $100 = 0, $109 = 0, $114 = 0, $117 = 0, $129 = 0, $134 = 0, $137 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $25 = 0, $32 = 0, $43 = 0, $46 = 0, $58 = 0, $63 = 0, $69 = 0, $71 = 0, $77 = 0, $87 = 0, $91 = 0, label = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 $$pre80 = $4;
 if (!($7 & 2)) label = 4; else if (($$pre80 - $3 | 0) < 3) $$4 = 1; else {
  HEAP32[$5 >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = -17;
  $14 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $14 + 1;
  HEAP8[$14 >> 0] = -69;
  $16 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $16 + 1;
  HEAP8[$16 >> 0] = -65;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $18 = $1;
  $19 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if ($19 >>> 0 >= $1 >>> 0) {
    $$4 = 0;
    break L4;
   }
   $21 = HEAP16[$19 >> 1] | 0;
   $22 = $21 & 65535;
   if ($22 >>> 0 > $6 >>> 0) {
    $$4 = 2;
    break L4;
   }
   do if (($21 & 65535) < 128) {
    $25 = HEAP32[$5 >> 2] | 0;
    if (($$pre80 - $25 | 0) < 1) {
     $$4 = 1;
     break L4;
    }
    HEAP32[$5 >> 2] = $25 + 1;
    HEAP8[$25 >> 0] = $21;
   } else {
    if (($21 & 65535) < 2048) {
     $32 = HEAP32[$5 >> 2] | 0;
     if (($$pre80 - $32 | 0) < 2) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $32 + 1;
     HEAP8[$32 >> 0] = $22 >>> 6 | 192;
     $43 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $43 + 1;
     HEAP8[$43 >> 0] = $22 & 63 | 128;
     break;
    }
    if (($21 & 65535) < 55296) {
     $46 = HEAP32[$5 >> 2] | 0;
     if (($$pre80 - $46 | 0) < 3) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $46 + 1;
     HEAP8[$46 >> 0] = $22 >>> 12 | 224;
     $58 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $58 + 1;
     HEAP8[$58 >> 0] = $22 >>> 6 & 63 | 128;
     $63 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $63 + 1;
     HEAP8[$63 >> 0] = $22 & 63 | 128;
     break;
    }
    if (($21 & 65535) >= 56320) {
     if (($21 & 65535) < 57344) {
      $$4 = 2;
      break L4;
     }
     $117 = HEAP32[$5 >> 2] | 0;
     if (($$pre80 - $117 | 0) < 3) {
      $$4 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $117 + 1;
     HEAP8[$117 >> 0] = $22 >>> 12 | 224;
     $129 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $129 + 1;
     HEAP8[$129 >> 0] = $22 >>> 6 & 63 | 128;
     $134 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $134 + 1;
     HEAP8[$134 >> 0] = $22 & 63 | 128;
     break;
    }
    if (($18 - $19 | 0) < 4) {
     $$4 = 1;
     break L4;
    }
    $69 = $19 + 2 | 0;
    $71 = HEAPU16[$69 >> 1] | 0;
    if (($71 & 64512 | 0) != 56320) {
     $$4 = 2;
     break L4;
    }
    if (($$pre80 - (HEAP32[$5 >> 2] | 0) | 0) < 4) {
     $$4 = 1;
     break L4;
    }
    $77 = $22 & 960;
    if ((($77 << 10) + 65536 | $22 << 10 & 64512 | $71 & 1023) >>> 0 > $6 >>> 0) {
     $$4 = 2;
     break L4;
    }
    HEAP32[$2 >> 2] = $69;
    $87 = ($77 >>> 6) + 1 | 0;
    $91 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $91 + 1;
    HEAP8[$91 >> 0] = $87 >>> 2 | 240;
    $100 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $100 + 1;
    HEAP8[$100 >> 0] = $22 >>> 2 & 15 | $87 << 4 & 48 | 128;
    $109 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $109 + 1;
    HEAP8[$109 >> 0] = $22 << 4 & 48 | $71 >>> 6 & 15 | 128;
    $114 = HEAP32[$5 >> 2] | 0;
    HEAP32[$5 >> 2] = $114 + 1;
    HEAP8[$114 >> 0] = $71 & 63 | 128;
   } while (0);
   $137 = (HEAP32[$2 >> 2] | 0) + 2 | 0;
   HEAP32[$2 >> 2] = $137;
   $19 = $137;
  }
 } while (0);
 return $$4 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_white_spaceERS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i7 = 0, $$0$i$i2$i$i = 0, $$0$i$i2$i$i13 = 0, $20 = 0, $23 = 0, $35 = 0, $37 = 0, $5 = 0, $51 = 0, $52 = 0, $53 = 0, $62 = 0, $65 = 0, $77 = 0, $8 = 0, $80 = 0, $94 = 0, $95 = 0, $96 = 0, label = 0;
 L1 : while (1) {
  $5 = HEAP32[$1 >> 2] | 0;
  do if (!$5) $94 = 1; else {
   $8 = HEAP32[$5 + 12 >> 2] | 0;
   if (($8 | 0) == (HEAP32[$5 + 16 >> 2] | 0)) $$0$i$i$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 36 >> 2] & 127]($5) | 0; else $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$8 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$1 >> 2] = 0;
    $94 = 1;
    break;
   } else {
    $94 = (HEAP32[$1 >> 2] | 0) == 0;
    break;
   }
  } while (0);
  $20 = HEAP32[$2 >> 2] | 0;
  do if (!$20) label = 15; else {
   $23 = HEAP32[$20 + 12 >> 2] | 0;
   if (($23 | 0) == (HEAP32[$20 + 16 >> 2] | 0)) $$0$i$i2$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$20 >> 2] | 0) + 36 >> 2] & 127]($20) | 0; else $$0$i$i2$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$23 >> 2] | 0) | 0;
   if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
    HEAP32[$2 >> 2] = 0;
    label = 15;
    break;
   } else if ($94) {
    $95 = $20;
    break;
   } else {
    $77 = $20;
    break L1;
   }
  } while (0);
  if ((label | 0) == 15) {
   label = 0;
   if ($94) {
    $77 = 0;
    break;
   } else $95 = 0;
  }
  $35 = HEAP32[$1 >> 2] | 0;
  $37 = HEAP32[$35 + 12 >> 2] | 0;
  if (($37 | 0) == (HEAP32[$35 + 16 >> 2] | 0)) $$0$i$i = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$35 >> 2] | 0) + 36 >> 2] & 127]($35) | 0; else $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$37 >> 2] | 0) | 0;
  if (!(FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 12 >> 2] & 63]($4, 8192, $$0$i$i) | 0)) {
   $77 = $95;
   break;
  }
  $51 = HEAP32[$1 >> 2] | 0;
  $52 = $51 + 12 | 0;
  $53 = HEAP32[$52 >> 2] | 0;
  if (($53 | 0) == (HEAP32[$51 + 16 >> 2] | 0)) FUNCTION_TABLE_ii[HEAP32[(HEAP32[$51 >> 2] | 0) + 40 >> 2] & 127]($51) | 0; else {
   HEAP32[$52 >> 2] = $53 + 4;
   __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$53 >> 2] | 0) | 0;
  }
 }
 $62 = HEAP32[$1 >> 2] | 0;
 do if (!$62) $96 = 1; else {
  $65 = HEAP32[$62 + 12 >> 2] | 0;
  if (($65 | 0) == (HEAP32[$62 + 16 >> 2] | 0)) $$0$i$i$i$i7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$62 >> 2] | 0) + 36 >> 2] & 127]($62) | 0; else $$0$i$i$i$i7 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$65 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i7, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$1 >> 2] = 0;
   $96 = 1;
   break;
  } else {
   $96 = (HEAP32[$1 >> 2] | 0) == 0;
   break;
  }
 } while (0);
 do if (!$77) label = 38; else {
  $80 = HEAP32[$77 + 12 >> 2] | 0;
  if (($80 | 0) == (HEAP32[$77 + 16 >> 2] | 0)) $$0$i$i2$i$i13 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$77 >> 2] | 0) + 36 >> 2] & 127]($77) | 0; else $$0$i$i2$i$i13 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$80 >> 2] | 0) | 0;
  if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i2$i$i13, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) {
   HEAP32[$2 >> 2] = 0;
   label = 38;
   break;
  } else if ($96) break; else {
   label = 40;
   break;
  }
 } while (0);
 if ((label | 0) == 38) if ($96) label = 40;
 if ((label | 0) == 40) HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | 2;
 return;
}

function __ZN6vision20VisualDatabaseFacade30addFreakFeaturesAndDescriptorsERKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEERKNS2_IhNS4_IhEEEERKNS2_INS_7Point3dIfEENS4_ISE_EEEEmmi($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $18 = 0, $19 = 0, $26 = 0, $32 = 0, $33 = 0, $39 = 0, $45 = 0, $49 = 0, $51 = 0, $57 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 24 | 0;
 $7 = sp + 12 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 8 | 0;
 $10 = sp;
 HEAP32[$7 >> 2] = $6;
 $11 = __Znwm(148) | 0;
 __ZN6vision8KeyframeILi96EEC2Ev($11);
 HEAP32[$9 >> 2] = 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$9 >> 2];
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE($8, $11, $$byval_copy);
 __ZN6vision8KeyframeILi96EE8setWidthEi(HEAP32[$8 >> 2] | 0, $4);
 __ZN6vision8KeyframeILi96EE9setHeightEi(HEAP32[$8 >> 2] | 0, $5);
 __ZN6vision18BinaryFeatureStore21setNumBytesPerFeatureEi(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$8 >> 2] | 0) | 0, 96);
 $18 = __ZN6vision18BinaryFeatureStore6pointsEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$8 >> 2] | 0) | 0) | 0;
 $19 = $1 + 4 | 0;
 __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6resizeEm($18, ((HEAP32[$19 >> 2] | 0) - (HEAP32[$1 >> 2] | 0) | 0) / 20 | 0);
 $26 = __ZN6vision18BinaryFeatureStore6pointsEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$8 >> 2] | 0) | 0) | 0;
 if (($26 | 0) != ($1 | 0)) __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($26, HEAP32[$1 >> 2] | 0, HEAP32[$19 >> 2] | 0);
 $32 = __ZN6vision18BinaryFeatureStore8featuresEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$8 >> 2] | 0) | 0) | 0;
 $33 = $2 + 4 | 0;
 __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEm($32, (HEAP32[$33 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) | 0);
 $39 = __ZN6vision18BinaryFeatureStore8featuresEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$8 >> 2] | 0) | 0) | 0;
 if (($39 | 0) != ($2 | 0)) __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($39, HEAP32[$2 >> 2] | 0, HEAP32[$33 >> 2] | 0);
 __ZN6vision8KeyframeILi96EE10buildIndexEv(HEAP32[$8 >> 2] | 0);
 $45 = HEAP32[HEAP32[$0 >> 2] >> 2] | 0;
 HEAP32[$10 >> 2] = HEAP32[$8 >> 2];
 $49 = HEAP32[$8 + 4 >> 2] | 0;
 HEAP32[$10 + 4 >> 2] = $49;
 if ($49 | 0) {
  $51 = $49 + 4 | 0;
  HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + 1;
 }
 __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE11addKeyframeENSt3__210shared_ptrINS_8KeyframeILi96EEEEEi($45, $10, HEAP32[$7 >> 2] | 0);
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($10);
 $57 = __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEEixERSD_((HEAP32[$0 >> 2] | 0) + 4 | 0, $7) | 0;
 if (($57 | 0) != ($3 | 0)) __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($57, HEAP32[$3 >> 2] | 0, HEAP32[$3 + 4 >> 2] | 0);
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($8);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$038 = 0, $$040$in = 0, $$3 = 0, $12 = 0, $20 = 0, $22 = 0, $3 = 0, $31 = 0, $32 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $9 = 0, $isdigittmp = 0, $isdigittmp47 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 40 | 0;
 $4 = sp + 16 | 0;
 $5 = sp;
 L1 : do if (($0 | 0) == ($1 | 0)) $$3 = $0; else {
  $isdigittmp = (HEAP8[$0 >> 0] | 0) + -48 | 0;
  if ($isdigittmp >>> 0 < 10) {
   $9 = $0 + 1 | 0;
   if (($9 | 0) == ($1 | 0)) $$3 = $0; else {
    $$038 = $isdigittmp;
    $$040$in = $9;
    while (1) {
     $isdigittmp47 = (HEAP8[$$040$in >> 0] | 0) + -48 | 0;
     if ($isdigittmp47 >>> 0 >= 10) break;
     $12 = $$040$in + 1 | 0;
     if (($12 | 0) == ($1 | 0)) {
      $$3 = $0;
      break L1;
     }
     $$038 = $isdigittmp47 + ($$038 * 10 | 0) | 0;
     $$040$in = $12;
    }
    if (($1 - $$040$in | 0) >>> 0 < $$038 >>> 0) $$3 = $0; else {
     HEAP32[$3 >> 2] = 0;
     HEAP32[$3 + 4 >> 2] = 0;
     HEAP32[$3 + 8 >> 2] = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($3, $$040$in, $$038);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_($4, $3, 10);
     $20 = __ZNSt3__211char_traitsIcE6lengthEPKc(51011) | 0;
     $22 = HEAP8[$4 + 11 >> 0] | 0;
     if (($20 | 0) == (($22 << 24 >> 24 < 0 ? HEAP32[$4 + 4 >> 2] | 0 : $22 & 255) | 0)) $$0$i = (__ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($4, 51011, $20) | 0) == 0; else $$0$i = 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     if ($$0$i) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm22EEERAT__Kc($4);
      $31 = $2 + 4 | 0;
      $32 = HEAP32[$31 >> 2] | 0;
      if ($32 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($32, $4);
       HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $4);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
     } else {
      HEAP32[$5 >> 2] = HEAP32[$3 >> 2];
      HEAP32[$5 + 4 >> 2] = HEAP32[$3 + 4 >> 2];
      HEAP32[$5 + 8 >> 2] = HEAP32[$3 + 8 >> 2];
      $$0$i$i = 0;
      while (1) {
       if (($$0$i$i | 0) == 3) break;
       HEAP32[$3 + ($$0$i$i << 2) >> 2] = 0;
       $$0$i$i = $$0$i$i + 1 | 0;
      }
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
      $40 = $2 + 4 | 0;
      $41 = HEAP32[$40 >> 2] | 0;
      if ($41 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
       __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($41, $4);
       HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 24;
      } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $4);
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
      __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $$040$in + $$038 | 0;
    }
   }
  } else $$3 = $0;
 } while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $$069 = 0, $$070 = 0, $$070$lcssa = 0, $$077 = 0, $$079 = 0, $$171 = 0, $$173 = 0, $$178 = 0, $$2 = 0, $$2$lcssa = 0, $$375$ph = 0, $$476 = 0, $$5$ph85 = 0, $14 = 0, $15 = 0, $18 = 0, $23 = 0, $24 = 0, $35 = 0, $36 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $48 = 0, $51 = 0, $55 = 0, $56 = 0, $64 = 0, $66 = 0, $67 = 0, $74 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 $9 = sp + 8 | 0;
 $$070 = $2;
 while (1) {
  if (($$070 | 0) == ($3 | 0)) {
   $$070$lcssa = $3;
   break;
  }
  if (!(HEAP32[$$070 >> 2] | 0)) {
   $$070$lcssa = $$070;
   break;
  }
  $$070 = $$070 + 4 | 0;
 }
 HEAP32[$7 >> 2] = $5;
 HEAP32[$4 >> 2] = $2;
 $14 = $6;
 $15 = $0 + 8 | 0;
 $$077 = $2;
 $$079 = $5;
 $$171 = $$070$lcssa;
 L6 : while (1) {
  if (($$079 | 0) == ($6 | 0) | ($$077 | 0) == ($3 | 0)) {
   $74 = $$077;
   label = 36;
   break;
  }
  $18 = $1;
  $23 = HEAP32[$18 + 4 >> 2] | 0;
  $24 = $8;
  HEAP32[$24 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$24 + 4 >> 2] = $23;
  $35 = ___uselocale(HEAP32[$15 >> 2] | 0) | 0;
  $36 = _wcsnrtombs($$079, $4, $$171 - $$077 >> 2, $14 - $$079 | 0, $1) | 0;
  if ($35 | 0) ___uselocale($35) | 0;
  switch ($36 | 0) {
  case -1:
   {
    label = 10;
    break L6;
    break;
   }
  case 0:
   {
    $$375$ph = 1;
    label = 33;
    break L6;
    break;
   }
  default:
   {}
  }
  $51 = (HEAP32[$7 >> 2] | 0) + $36 | 0;
  HEAP32[$7 >> 2] = $51;
  if (($51 | 0) == ($6 | 0)) {
   label = 34;
   break;
  }
  if (($$171 | 0) == ($3 | 0)) {
   $$5$ph85 = $3;
   $77 = $51;
   $78 = HEAP32[$4 >> 2] | 0;
  } else {
   $55 = ___uselocale(HEAP32[$15 >> 2] | 0) | 0;
   $56 = _wcrtomb($9, 0, $1) | 0;
   if ($55 | 0) ___uselocale($55) | 0;
   if (($56 | 0) == -1) {
    $$173 = 2;
    label = 32;
    break;
   }
   if ($56 >>> 0 > ($14 - (HEAP32[$7 >> 2] | 0) | 0) >>> 0) {
    $$173 = 1;
    label = 32;
    break;
   }
   $$0 = $9;
   $$069 = $56;
   while (1) {
    if (!$$069) break;
    $66 = HEAP8[$$0 >> 0] | 0;
    $67 = HEAP32[$7 >> 2] | 0;
    HEAP32[$7 >> 2] = $67 + 1;
    HEAP8[$67 >> 0] = $66;
    $$0 = $$0 + 1 | 0;
    $$069 = $$069 + -1 | 0;
   }
   $64 = (HEAP32[$4 >> 2] | 0) + 4 | 0;
   HEAP32[$4 >> 2] = $64;
   $$2 = $64;
   while (1) {
    if (($$2 | 0) == ($3 | 0)) {
     $$2$lcssa = $3;
     break;
    }
    if (!(HEAP32[$$2 >> 2] | 0)) {
     $$2$lcssa = $$2;
     break;
    }
    $$2 = $$2 + 4 | 0;
   }
   $$5$ph85 = $$2$lcssa;
   $77 = HEAP32[$7 >> 2] | 0;
   $78 = $64;
  }
  $$077 = $78;
  $$079 = $77;
  $$171 = $$5$ph85;
 }
 if ((label | 0) == 10) {
  HEAP32[$7 >> 2] = $$079;
  $$178 = $$077;
  $43 = $$079;
  while (1) {
   if (($$178 | 0) == (HEAP32[$4 >> 2] | 0)) break;
   $40 = HEAP32[$$178 >> 2] | 0;
   $42 = ___uselocale(HEAP32[$15 >> 2] | 0) | 0;
   $44 = _wcrtomb($43, $40, $8) | 0;
   if ($42 | 0) ___uselocale($42) | 0;
   if (($44 | 0) == -1) break;
   $48 = (HEAP32[$7 >> 2] | 0) + $44 | 0;
   HEAP32[$7 >> 2] = $48;
   $$178 = $$178 + 4 | 0;
   $43 = $48;
  }
  HEAP32[$4 >> 2] = $$178;
  $$375$ph = 2;
  label = 33;
 } else if ((label | 0) == 32) {
  $$375$ph = $$173;
  label = 33;
 } else if ((label | 0) == 34) {
  $74 = HEAP32[$4 >> 2] | 0;
  label = 36;
 }
 if ((label | 0) == 33) $$476 = $$375$ph; else if ((label | 0) == 36) $$476 = ($74 | 0) != ($3 | 0) & 1;
 STACKTOP = sp;
 return $$476 | 0;
}

function _pass2_fs_dither($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0184 = 0, $$0185 = 0, $$0186 = 0, $$0187 = 0, $$0188 = 0, $$0189 = 0, $$0190 = 0, $$0191 = 0, $$0192 = 0, $$0193 = 0, $$0194 = 0, $$0195 = 0, $$0196 = 0, $$0197 = 0, $$0199 = 0, $$1 = 0, $$1198 = 0, $$1200 = 0, $102 = 0, $106 = 0, $11 = 0, $110 = 0, $115 = 0, $122 = 0, $129 = 0, $13 = 0, $15 = 0, $16 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $29 = 0, $31 = 0, $39 = 0, $40 = 0, $41 = 0, $43 = 0, $5 = 0, $7 = 0, $80 = 0, $83 = 0, $86 = 0, $87 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $96 = 0, $97 = 0, $scevgep = 0, $storemerge = 0;
 $5 = HEAP32[$0 + 460 >> 2] | 0;
 $7 = HEAP32[$5 + 24 >> 2] | 0;
 $9 = HEAP32[$0 + 112 >> 2] | 0;
 $11 = HEAP32[$0 + 324 >> 2] | 0;
 $13 = HEAP32[$5 + 40 >> 2] | 0;
 $15 = HEAP32[$0 + 136 >> 2] | 0;
 $16 = HEAP32[$15 >> 2] | 0;
 $18 = HEAP32[$15 + 4 >> 2] | 0;
 $20 = HEAP32[$15 + 8 >> 2] | 0;
 $21 = $5 + 36 | 0;
 $22 = $5 + 32 | 0;
 $23 = $9 + -1 | 0;
 $24 = $23 * 3 | 0;
 $26 = ($9 * 3 | 0) + 3 | 0;
 $$0193 = 0;
 while (1) {
  if (($$0193 | 0) >= ($3 | 0)) break;
  $29 = HEAP32[$1 + ($$0193 << 2) >> 2] | 0;
  $31 = HEAP32[$2 + ($$0193 << 2) >> 2] | 0;
  if (!(HEAP32[$21 >> 2] | 0)) {
   $$0194 = 3;
   $$0195 = 1;
   $$0196 = HEAP32[$22 >> 2] | 0;
   $$0197 = $31;
   $$0199 = $29;
   $storemerge = 1;
  } else {
   $$0194 = -3;
   $$0195 = -1;
   $$0196 = (HEAP32[$22 >> 2] | 0) + ($26 << 1) | 0;
   $$0197 = $31 + $23 | 0;
   $$0199 = $29 + $24 | 0;
   $storemerge = 0;
  }
  HEAP32[$21 >> 2] = $storemerge;
  $39 = $$0194 + 1 | 0;
  $40 = $$0194 + 2 | 0;
  $41 = Math_imul($9, $$0194) | 0;
  $$0 = 0;
  $$0184 = 0;
  $$0185 = 0;
  $$0186 = 0;
  $$0187 = 0;
  $$0188 = 0;
  $$0189 = 0;
  $$0190 = 0;
  $$0191 = 0;
  $$0192 = $9;
  $$1 = $$0196;
  $$1198 = $$0197;
  $$1200 = $$0199;
  while (1) {
   if (!$$0192) break;
   $43 = $$1 + ($$0194 << 1) | 0;
   $80 = HEAPU8[$11 + ((HEAP32[$13 + ($$0 + 8 + (HEAP16[$43 >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[$$1200 >> 0] | 0)) >> 0] | 0;
   $83 = HEAPU8[$11 + ((HEAP32[$13 + ($$0184 + 8 + (HEAP16[$$1 + ($39 << 1) >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[$$1200 + 1 >> 0] | 0)) >> 0] | 0;
   $86 = HEAPU8[$11 + ((HEAP32[$13 + ($$0185 + 8 + (HEAP16[$$1 + ($40 << 1) >> 1] | 0) >> 4 << 2) >> 2] | 0) + (HEAPU8[$$1200 + 2 >> 0] | 0)) >> 0] | 0;
   $87 = $80 >>> 3;
   $90 = $83 >>> 2;
   $91 = $86 >>> 3;
   $92 = (HEAP32[$7 + ($87 << 2) >> 2] | 0) + ($90 << 6) + ($91 << 1) | 0;
   $93 = HEAP16[$92 >> 1] | 0;
   if (!($93 << 16 >> 16)) {
    _fill_inverse_cmap($0, $87, $90, $91);
    $96 = HEAP16[$92 >> 1] | 0;
   } else $96 = $93;
   $97 = ($96 & 65535) + -1 | 0;
   HEAP8[$$1198 >> 0] = $97;
   $102 = $80 - (HEAPU8[$16 + $97 >> 0] | 0) | 0;
   $106 = $83 - (HEAPU8[$18 + $97 >> 0] | 0) | 0;
   $110 = $86 - (HEAPU8[$20 + $97 >> 0] | 0) | 0;
   HEAP16[$$1 >> 1] = ($102 * 3 | 0) + $$0189;
   $115 = ($102 * 5 | 0) + $$0186 | 0;
   HEAP16[$$1 + 2 >> 1] = ($106 * 3 | 0) + $$0190;
   $122 = ($106 * 5 | 0) + $$0187 | 0;
   HEAP16[$$1 + 4 >> 1] = ($110 * 3 | 0) + $$0191;
   $129 = ($110 * 5 | 0) + $$0188 | 0;
   $$0 = $102 * 7 | 0;
   $$0184 = $106 * 7 | 0;
   $$0185 = $110 * 7 | 0;
   $$0186 = $102;
   $$0187 = $106;
   $$0188 = $110;
   $$0189 = $115;
   $$0190 = $122;
   $$0191 = $129;
   $$0192 = $$0192 + -1 | 0;
   $$1 = $43;
   $$1198 = $$1198 + $$0195 | 0;
   $$1200 = $$1200 + $$0194 | 0;
  }
  $scevgep = $$0196 + ($41 << 1) | 0;
  HEAP16[$scevgep >> 1] = $$0189;
  HEAP16[$scevgep + 2 >> 1] = $$0190;
  HEAP16[$scevgep + 4 >> 1] = $$0191;
  $$0193 = $$0193 + 1 | 0;
 }
 return;
}

function __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$9 = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink107 = 0, $10 = 0, $104 = 0, $11 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $39 = 0, $45 = 0, $52 = 0, $54 = 0, $61 = 0, $71 = 0, $78 = 0, $80 = 0, $82 = 0, $88 = 0, $91 = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 if (!($7 & 4)) $$pre$phiZ2D = $1; else {
  $10 = HEAP32[$2 >> 2] | 0;
  $11 = $1;
  if (($11 - $10 | 0) > 2) if ((HEAP8[$10 >> 0] | 0) == -17) if ((HEAP8[$10 + 1 >> 0] | 0) == -69) if ((HEAP8[$10 + 2 >> 0] | 0) == -65) {
   HEAP32[$2 >> 2] = $10 + 3;
   $$pre$phiZ2D = $11;
  } else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11; else $$pre$phiZ2D = $11;
 }
 L9 : while (1) {
  $24 = HEAP32[$2 >> 2] | 0;
  if ($24 >>> 0 >= $1 >>> 0) {
   $$9 = 0;
   break;
  }
  $26 = HEAP32[$5 >> 2] | 0;
  if ($26 >>> 0 >= $4 >>> 0) {
   $$9 = 1;
   break;
  }
  $28 = HEAP8[$24 >> 0] | 0;
  $29 = $28 & 255;
  do if ($28 << 24 >> 24 > -1) if ($29 >>> 0 > $6 >>> 0) {
   $$9 = 2;
   break L9;
  } else {
   $$sink = $29;
   $$sink107 = 1;
  } else {
   if (($28 & 255) < 194) {
    $$9 = 2;
    break L9;
   }
   if (($28 & 255) < 224) {
    if (($$pre$phiZ2D - $24 | 0) < 2) {
     $$9 = 1;
     break L9;
    }
    $39 = HEAPU8[$24 + 1 >> 0] | 0;
    if (($39 & 192 | 0) != 128) {
     $$9 = 2;
     break L9;
    }
    $45 = $39 & 63 | $29 << 6 & 1984;
    if ($45 >>> 0 > $6 >>> 0) {
     $$9 = 2;
     break L9;
    } else {
     $$sink = $45;
     $$sink107 = 2;
     break;
    }
   }
   if (($28 & 255) < 240) {
    if (($$pre$phiZ2D - $24 | 0) < 3) {
     $$9 = 1;
     break L9;
    }
    $52 = HEAP8[$24 + 1 >> 0] | 0;
    $54 = HEAP8[$24 + 2 >> 0] | 0;
    switch ($28 << 24 >> 24) {
    case -32:
     {
      if (($52 & -32) << 24 >> 24 != -96) {
       $$9 = 2;
       break L9;
      }
      break;
     }
    case -19:
     {
      if (($52 & -32) << 24 >> 24 != -128) {
       $$9 = 2;
       break L9;
      }
      break;
     }
    default:
     if (($52 & -64) << 24 >> 24 != -128) {
      $$9 = 2;
      break L9;
     }
    }
    $61 = $54 & 255;
    if (($61 & 192 | 0) != 128) {
     $$9 = 2;
     break L9;
    }
    $71 = ($52 & 63) << 6 | $29 << 12 & 61440 | $61 & 63;
    if ($71 >>> 0 > $6 >>> 0) {
     $$9 = 2;
     break L9;
    } else {
     $$sink = $71;
     $$sink107 = 3;
     break;
    }
   }
   if (($28 & 255) >= 245) {
    $$9 = 2;
    break L9;
   }
   if (($$pre$phiZ2D - $24 | 0) < 4) {
    $$9 = 1;
    break L9;
   }
   $78 = HEAP8[$24 + 1 >> 0] | 0;
   $80 = HEAP8[$24 + 2 >> 0] | 0;
   $82 = HEAP8[$24 + 3 >> 0] | 0;
   switch ($28 << 24 >> 24) {
   case -16:
    {
     if (($78 + 112 & 255) >= 48) {
      $$9 = 2;
      break L9;
     }
     break;
    }
   case -12:
    {
     if (($78 & -16) << 24 >> 24 != -128) {
      $$9 = 2;
      break L9;
     }
     break;
    }
   default:
    if (($78 & -64) << 24 >> 24 != -128) {
     $$9 = 2;
     break L9;
    }
   }
   $88 = $80 & 255;
   if (($88 & 192 | 0) != 128) {
    $$9 = 2;
    break L9;
   }
   $91 = $82 & 255;
   if (($91 & 192 | 0) != 128) {
    $$9 = 2;
    break L9;
   }
   $104 = ($78 & 63) << 12 | $29 << 18 & 1835008 | $88 << 6 & 4032 | $91 & 63;
   if ($104 >>> 0 > $6 >>> 0) {
    $$9 = 2;
    break L9;
   } else {
    $$sink = $104;
    $$sink107 = 4;
   }
  } while (0);
  HEAP32[$26 >> 2] = $$sink;
  HEAP32[$2 >> 2] = $24 + $$sink107;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 4;
 }
 return $$9 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$070 = 0, $$070$lcssa = 0, $$074 = 0, $$077 = 0, $$1 = 0, $$172$ph = 0, $$175 = 0, $$2 = 0, $$2$lcssa = 0, $$273 = 0, $$4$ph = 0, $$pre = 0, $$sink = 0, $13 = 0, $14 = 0, $17 = 0, $22 = 0, $23 = 0, $34 = 0, $35 = 0, $38 = 0, $44 = 0, $45 = 0, $53 = 0, $57 = 0, $58 = 0, $64 = 0, $69 = 0, $72 = 0, $73 = 0, $8 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 $$070 = $2;
 while (1) {
  if (($$070 | 0) == ($3 | 0)) {
   $$070$lcssa = $3;
   break;
  }
  if (!(HEAP8[$$070 >> 0] | 0)) {
   $$070$lcssa = $$070;
   break;
  }
  $$070 = $$070 + 1 | 0;
 }
 HEAP32[$7 >> 2] = $5;
 HEAP32[$4 >> 2] = $2;
 $13 = $6;
 $14 = $0 + 8 | 0;
 $$074 = $2;
 $$077 = $5;
 $$1 = $$070$lcssa;
 while (1) {
  if (($$077 | 0) == ($6 | 0) | ($$074 | 0) == ($3 | 0)) {
   $69 = $$074;
   label = 33;
   break;
  }
  $17 = $1;
  $22 = HEAP32[$17 + 4 >> 2] | 0;
  $23 = $8;
  HEAP32[$23 >> 2] = HEAP32[$17 >> 2];
  HEAP32[$23 + 4 >> 2] = $22;
  $34 = ___uselocale(HEAP32[$14 >> 2] | 0) | 0;
  $35 = _mbsnrtowcs($$077, $4, $$1 - $$074 | 0, $13 - $$077 >> 2, $1) | 0;
  if ($34 | 0) ___uselocale($34) | 0;
  if (($35 | 0) == -1) {
   label = 10;
   break;
  }
  $53 = (HEAP32[$7 >> 2] | 0) + ($35 << 2) | 0;
  HEAP32[$7 >> 2] = $53;
  if (($53 | 0) == ($6 | 0)) {
   label = 30;
   break;
  }
  $$pre = HEAP32[$4 >> 2] | 0;
  if (($$1 | 0) == ($3 | 0)) {
   $$4$ph = $3;
   $72 = $53;
   $73 = $$pre;
  } else {
   $57 = ___uselocale(HEAP32[$14 >> 2] | 0) | 0;
   $58 = _mbrtowc($53, $$pre, 1, $1) | 0;
   if ($57 | 0) ___uselocale($57) | 0;
   if ($58 | 0) {
    $$172$ph = 2;
    label = 29;
    break;
   }
   HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 4;
   $64 = (HEAP32[$4 >> 2] | 0) + 1 | 0;
   HEAP32[$4 >> 2] = $64;
   $$2 = $64;
   while (1) {
    if (($$2 | 0) == ($3 | 0)) {
     $$2$lcssa = $3;
     break;
    }
    if (!(HEAP8[$$2 >> 0] | 0)) {
     $$2$lcssa = $$2;
     break;
    }
    $$2 = $$2 + 1 | 0;
   }
   $$4$ph = $$2$lcssa;
   $72 = HEAP32[$7 >> 2] | 0;
   $73 = $64;
  }
  $$074 = $73;
  $$077 = $72;
  $$1 = $$4$ph;
 }
 do if ((label | 0) == 10) {
  $38 = $$1;
  $$175 = $$074;
  $storemerge = $$077;
  L29 : while (1) {
   HEAP32[$7 >> 2] = $storemerge;
   if (($$175 | 0) == (HEAP32[$4 >> 2] | 0)) {
    label = 19;
    break;
   }
   $44 = ___uselocale(HEAP32[$14 >> 2] | 0) | 0;
   $45 = _mbrtowc($storemerge, $$175, $38 - $$175 | 0, $8) | 0;
   if ($44 | 0) ___uselocale($44) | 0;
   switch ($45 | 0) {
   case -1:
    {
     label = 15;
     break L29;
     break;
    }
   case -2:
    {
     label = 16;
     break L29;
     break;
    }
   case 0:
    {
     $$sink = 1;
     break;
    }
   default:
    $$sink = $45;
   }
   $$175 = $$175 + $$sink | 0;
   $storemerge = (HEAP32[$7 >> 2] | 0) + 4 | 0;
  }
  if ((label | 0) == 15) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = 2;
   label = 29;
   break;
  } else if ((label | 0) == 16) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = 1;
   label = 29;
   break;
  } else if ((label | 0) == 19) {
   HEAP32[$4 >> 2] = $$175;
   $$172$ph = ($$175 | 0) != ($3 | 0) & 1;
   label = 29;
   break;
  }
 } else if ((label | 0) == 30) {
  $69 = HEAP32[$4 >> 2] | 0;
  label = 33;
 } while (0);
 if ((label | 0) == 29) $$273 = $$172$ph; else if ((label | 0) == 33) $$273 = ($69 | 0) != ($3 | 0) & 1;
 STACKTOP = sp;
 return $$273 | 0;
}

function _initial_setup_35($0) {
 $0 = $0 | 0;
 var $$ = 0, $$0 = 0, $$078 = 0, $$1 = 0, $$179 = 0, $$pre$phi90Z2D = 0, $$pre91 = 0, $$sink = 0, $1 = 0, $106 = 0, $107 = 0, $13 = 0, $15 = 0, $20 = 0, $21 = 0, $23 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $36 = 0, $37 = 0, $39 = 0, $41 = 0, $44 = 0, $46 = 0, $47 = 0, $49 = 0, $50 = 0, $55 = 0, $57 = 0, $60 = 0, $62 = 0, $65 = 0, $68 = 0, $7 = 0, $70 = 0, $73 = 0, $77 = 0, $79 = 0, $83 = 0, $85 = 0, $94 = 0, label = 0;
 $1 = $0 + 32 | 0;
 if ((HEAP32[$1 >> 2] | 0) > 65500) label = 3; else if ((HEAP32[$0 + 28 >> 2] | 0) > 65500) label = 3;
 if ((label | 0) == 3) {
  $7 = HEAP32[$0 >> 2] | 0;
  HEAP32[$7 + 20 >> 2] = 41;
  HEAP32[$7 + 24 >> 2] = 65500;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $13 = HEAP32[$0 + 212 >> 2] | 0;
 if (($13 | 0) != 8) {
  $15 = HEAP32[$0 >> 2] | 0;
  HEAP32[$15 + 20 >> 2] = 15;
  HEAP32[$15 + 24 >> 2] = $13;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $20 = $0 + 36 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 if (($21 | 0) > 10) {
  $23 = HEAP32[$0 >> 2] | 0;
  HEAP32[$23 + 20 >> 2] = 26;
  HEAP32[$23 + 24 >> 2] = $21;
  HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = 10;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  $$pre$phi90Z2D = $0;
 } else $$pre$phi90Z2D = $0;
 $30 = $0 + 308 | 0;
 HEAP32[$30 >> 2] = 1;
 $31 = $0 + 312 | 0;
 HEAP32[$31 >> 2] = 1;
 $32 = $0 + 216 | 0;
 $$0 = HEAP32[$32 >> 2] | 0;
 $$078 = 0;
 $106 = 1;
 $107 = 1;
 while (1) {
  $34 = HEAP32[$20 >> 2] | 0;
  if (($$078 | 0) >= ($34 | 0)) break;
  $36 = $$0 + 8 | 0;
  $37 = HEAP32[$36 >> 2] | 0;
  $$pre91 = $$0 + 12 | 0;
  if (($37 + -1 | 0) >>> 0 > 3) label = 13; else {
   $39 = HEAP32[$$pre91 >> 2] | 0;
   if (($39 + -1 | 0) >>> 0 > 3) label = 13; else {
    $44 = $107;
    $46 = $37;
    $47 = $106;
    $49 = $39;
   }
  }
  if ((label | 0) == 13) {
   label = 0;
   $41 = HEAP32[$0 >> 2] | 0;
   HEAP32[$41 + 20 >> 2] = 18;
   FUNCTION_TABLE_vi[HEAP32[$41 >> 2] & 255]($$pre$phi90Z2D);
   $44 = HEAP32[$30 >> 2] | 0;
   $46 = HEAP32[$36 >> 2] | 0;
   $47 = HEAP32[$31 >> 2] | 0;
   $49 = HEAP32[$$pre91 >> 2] | 0;
  }
  $$ = ($44 | 0) > ($46 | 0) ? $44 : $46;
  HEAP32[$30 >> 2] = $$;
  $50 = ($47 | 0) > ($49 | 0) ? $47 : $49;
  HEAP32[$31 >> 2] = $50;
  $$0 = $$0 + 84 | 0;
  $$078 = $$078 + 1 | 0;
  $106 = $50;
  $107 = $$;
 }
 HEAP32[$0 + 316 >> 2] = 8;
 $55 = $0 + 28 | 0;
 $$1 = HEAP32[$32 >> 2] | 0;
 $$179 = 0;
 $57 = $34;
 while (1) {
  if (($$179 | 0) >= ($57 | 0)) break;
  HEAP32[$$1 + 36 >> 2] = 8;
  $60 = $$1 + 8 | 0;
  $62 = Math_imul(HEAP32[$60 >> 2] | 0, HEAP32[$55 >> 2] | 0) | 0;
  $65 = _jdiv_round_up($62, HEAP32[$30 >> 2] << 3) | 0;
  HEAP32[$$1 + 28 >> 2] = $65;
  $68 = $$1 + 12 | 0;
  $70 = Math_imul(HEAP32[$68 >> 2] | 0, HEAP32[$1 >> 2] | 0) | 0;
  $73 = _jdiv_round_up($70, HEAP32[$31 >> 2] << 3) | 0;
  HEAP32[$$1 + 32 >> 2] = $73;
  $77 = Math_imul(HEAP32[$60 >> 2] | 0, HEAP32[$55 >> 2] | 0) | 0;
  $79 = _jdiv_round_up($77, HEAP32[$30 >> 2] | 0) | 0;
  HEAP32[$$1 + 40 >> 2] = $79;
  $83 = Math_imul(HEAP32[$68 >> 2] | 0, HEAP32[$1 >> 2] | 0) | 0;
  $85 = _jdiv_round_up($83, HEAP32[$31 >> 2] | 0) | 0;
  HEAP32[$$1 + 44 >> 2] = $85;
  HEAP32[$$1 + 48 >> 2] = 1;
  HEAP32[$$1 + 76 >> 2] = 0;
  $$1 = $$1 + 84 | 0;
  $$179 = $$179 + 1 | 0;
  $57 = HEAP32[$20 >> 2] | 0;
 }
 $94 = _jdiv_round_up(HEAP32[$1 >> 2] | 0, HEAP32[$31 >> 2] << 3) | 0;
 HEAP32[$0 + 320 >> 2] = $94;
 if ((HEAP32[$0 + 328 >> 2] | 0) < (HEAP32[$20 >> 2] | 0)) $$sink = 1; else $$sink = (HEAP32[$0 + 220 >> 2] | 0) != 0 & 1;
 HEAP32[(HEAP32[$0 + 436 >> 2] | 0) + 16 >> 2] = $$sink;
 return;
}

function __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryEPKh($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$add$i$i = 0, $$0$i$i$idx$i$i = 0, $$byval_copy = 0, $$byval_copy1 = 0, $$byval_copy2 = 0, $14 = 0, $19 = 0, $2 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $54 = 0, $55 = 0, $59 = 0, $6 = 0, $66 = 0, $67 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 8 | 0;
 $$byval_copy1 = sp + 32 | 0;
 $$byval_copy = sp + 28 | 0;
 $2 = sp + 24 | 0;
 $3 = sp + 20 | 0;
 $4 = sp + 16 | 0;
 $5 = sp;
 $6 = $0 + 8 | 0;
 if (!(HEAP32[$6 >> 2] | 0)) {
  $14 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30286) | 0, 27286) | 0, 33528) | 0, 405) | 0, 33535) | 0, 30321) | 0;
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $14 + (HEAP32[(HEAP32[$14 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $19 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 57884) | 0;
  $23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 63]($19, 10) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($14, $23) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($14) | 0;
  _abort();
 }
 HEAP32[$0 + 100 >> 2] = 0;
 $25 = $0 + 72 | 0;
 $27 = $0 + 76 | 0;
 HEAP32[$27 >> 2] = HEAP32[$25 >> 2];
 $28 = $0 + 84 | 0;
 $29 = $0 + 88 | 0;
 $32 = HEAP32[$29 >> 2] | 0;
 while (1) {
  $30 = HEAP32[$28 >> 2] | 0;
  $33 = $30;
  if (($30 | 0) == ($32 | 0)) break;
  $35 = $32 - $33 | 0;
  if (($35 | 0) > 8) {
   $38 = $32 + -8 | 0;
   $39 = $30;
   $41 = HEAP32[$39 >> 2] | 0;
   $44 = HEAP32[$39 + 4 >> 2] | 0;
   $45 = $$byval_copy2;
   HEAP32[$45 >> 2] = $41;
   HEAP32[$45 + 4 >> 2] = $44;
   $49 = $38;
   $54 = HEAP32[$49 + 4 >> 2] | 0;
   $55 = $30;
   HEAP32[$55 >> 2] = HEAP32[$49 >> 2];
   HEAP32[$55 + 4 >> 2] = $54;
   $59 = $38;
   HEAP32[$59 >> 2] = $41;
   HEAP32[$59 + 4 >> 2] = $44;
   __ZN6vision17PriorityQueueItemILi96EED2Ev($$byval_copy2);
   HEAP32[$2 >> 2] = $33;
   HEAP32[$3 >> 2] = $38;
   HEAP32[$4 >> 2] = $33;
   HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
   HEAP32[$$byval_copy1 >> 2] = HEAP32[$3 >> 2];
   HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
   __ZNSt3__211__sift_downIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_($$byval_copy, $$byval_copy1, $5, ($35 >>> 3) + -1 | 0, $$byval_copy2);
   $66 = HEAP32[$29 >> 2] | 0;
  } else $66 = $32;
  $$0$i$i$idx$i$i = 0;
  while (1) {
   if (($$0$i$i$idx$i$i | 0) == -1) break;
   $$0$i$i$add$i$i = $$0$i$i$idx$i$i + -1 | 0;
   __ZN6vision17PriorityQueueItemILi96EED2Ev($66 + ($$0$i$i$add$i$i << 3) | 0);
   $$0$i$i$idx$i$i = $$0$i$i$add$i$i;
  }
  $67 = $66 + -8 | 0;
  HEAP32[$29 >> 2] = $67;
  $32 = $67;
 }
 __ZNK6vision28BinaryHierarchicalClusteringILi96EE5queryERNSt3__214priority_queueINS_17PriorityQueueItemILi96EEENS2_6vectorIS5_NS2_9allocatorIS5_EEEENS2_4lessIS5_EEEEPKNS_4NodeILi96EEEPKh($0, $28, HEAP32[$6 >> 2] | 0, $1);
 STACKTOP = sp;
 return (HEAP32[$27 >> 2] | 0) - (HEAP32[$25 >> 2] | 0) >> 2 | 0;
}

function __ZNK6vision21HoughSimilarityVoting17mapCorrespondenceERfS1_S1_S1_ffffffff($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 $6 = +$6;
 $7 = +$7;
 $8 = +$8;
 $9 = +$9;
 $10 = +$10;
 $11 = +$11;
 $12 = +$12;
 var $$sink = 0.0, $13 = 0, $14 = 0, $15 = 0.0, $16 = 0.0, $23 = 0.0, $24 = 0.0, $31 = 0, $36 = 0, $40 = 0, $47 = 0, $52 = 0, $56 = 0, $57 = 0.0, $60 = 0.0, $64 = 0.0, $67 = 0.0, $71 = 0.0, $74 = 0.0, $79 = 0, $82 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $13 = sp + 16 | 0;
 $14 = sp;
 $15 = $7 - $11;
 HEAPF32[$3 >> 2] = $15;
 $16 = $15;
 if (!($16 <= -3.141592653589793)) if ($16 > 3.141592653589793) {
  $$sink = $16 + -6.283185307179586;
  label = 5;
 } else $24 = $15; else {
  $$sink = $16 + 6.283185307179586;
  label = 5;
 }
 if ((label | 0) == 5) {
  HEAPF32[$3 >> 2] = $$sink;
  $24 = $$sink;
 }
 $23 = $24;
 if (!($23 > -3.141592653589793)) {
  $31 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30684) | 0, 30431) | 0, 33528) | 0, 468) | 0, 33535) | 0, 30719) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $31 + (HEAP32[(HEAP32[$31 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $36 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 57884) | 0;
  $40 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$36 >> 2] | 0) + 28 >> 2] & 63]($36, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($31, $40) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($31) | 0;
  _abort();
 }
 if (!($23 <= 3.141592653589793)) {
  $47 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30738) | 0, 30431) | 0, 33528) | 0, 469) | 0, 33535) | 0, 30719) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $47 + (HEAP32[(HEAP32[$47 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $52 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 57884) | 0;
  $56 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$52 >> 2] | 0) + 28 >> 2] & 63]($52, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($47, $56) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($47) | 0;
  _abort();
 } else {
  $57 = +__ZN6vision12SafeDivisionIfEET_S1_S1_($8, $12);
  HEAPF32[$4 >> 2] = $57;
  __ZN6vision13Similarity2x2IfEEvPT_S1_S1_($14, +HEAPF32[$3 >> 2], $57);
  $60 = +Math_log(+(+HEAPF32[$4 >> 2]));
  HEAPF32[$4 >> 2] = $60 * +HEAPF32[$0 + 48 >> 2];
  $64 = +HEAPF32[$14 >> 2];
  $67 = +HEAPF32[$14 + 4 >> 2];
  $71 = +HEAPF32[$14 + 8 >> 2];
  $74 = +HEAPF32[$14 + 12 >> 2];
  $79 = $0 + 8 | 0;
  $82 = $0 + 12 | 0;
  HEAPF32[$1 >> 2] = $5 - ($64 * $9 + $67 * $10) + ($64 * +HEAPF32[$79 >> 2] + $67 * +HEAPF32[$82 >> 2]);
  HEAPF32[$2 >> 2] = $6 - ($71 * $9 + $74 * $10) + ($71 * +HEAPF32[$79 >> 2] + $74 * +HEAPF32[$82 >> 2]);
  STACKTOP = sp;
  return;
 }
}

function _decompress_onepass($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$0100 = 0, $$0101 = 0, $$0102 = 0, $$0103 = 0, $$0104 = 0, $$0105 = 0, $$0106 = 0, $$099 = 0, $$1 = 0, $$2 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $32 = 0, $36 = 0, $45 = 0, $47 = 0, $48 = 0, $50 = 0, $53 = 0, $54 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, $73 = 0, $79 = 0, $84 = 0, $88 = 0, $9 = 0, $95 = 0, $96 = 0, label = 0;
 $3 = HEAP32[$0 + 428 >> 2] | 0;
 $6 = (HEAP32[$0 + 348 >> 2] | 0) + -1 | 0;
 $7 = $0 + 320 | 0;
 $9 = (HEAP32[$7 >> 2] | 0) + -1 | 0;
 $10 = $3 + 24 | 0;
 $12 = $3 + 28 | 0;
 $13 = $3 + 20 | 0;
 $14 = $3 + 32 | 0;
 $15 = $0 + 356 | 0;
 $16 = $0 + 444 | 0;
 $17 = $0 + 328 | 0;
 $18 = $0 + 448 | 0;
 $19 = $0 + 148 | 0;
 $$0104 = HEAP32[$10 >> 2] | 0;
 L1 : while (1) {
  if (($$0104 | 0) >= (HEAP32[$12 >> 2] | 0)) {
   label = 22;
   break;
  }
  $$099 = HEAP32[$13 >> 2] | 0;
  while (1) {
   if ($$099 >>> 0 > $6 >>> 0) break;
   _jzero_far(HEAP32[$14 >> 2] | 0, HEAP32[$15 >> 2] << 7);
   if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 4 >> 2] & 63]($0, $14) | 0)) {
    label = 6;
    break L1;
   }
   $32 = $$099 >>> 0 < $6 >>> 0;
   $$0101 = 0;
   $$0103 = 0;
   while (1) {
    if (($$0103 | 0) >= (HEAP32[$17 >> 2] | 0)) break;
    $36 = HEAP32[$0 + 332 + ($$0103 << 2) >> 2] | 0;
    L11 : do if (!(HEAP32[$36 + 48 >> 2] | 0)) $$2 = (HEAP32[$36 + 60 >> 2] | 0) + $$0101 | 0; else {
     $45 = HEAP32[$36 + 4 >> 2] | 0;
     $47 = HEAP32[(HEAP32[$18 >> 2] | 0) + 4 + ($45 << 2) >> 2] | 0;
     $48 = $36 + 52 | 0;
     $50 = HEAP32[($32 ? $48 : $36 + 68 | 0) >> 2] | 0;
     $53 = $36 + 36 | 0;
     $54 = HEAP32[$53 >> 2] | 0;
     $56 = (HEAP32[$1 + ($45 << 2) >> 2] | 0) + ((Math_imul($54, $$0104) | 0) << 2) | 0;
     $59 = Math_imul(HEAP32[$36 + 64 >> 2] | 0, $$099) | 0;
     $60 = $36 + 56 | 0;
     $61 = $36 + 72 | 0;
     $$0102 = $56;
     $$0105 = 0;
     $$1 = $$0101;
     $95 = $54;
     while (1) {
      if (($$0105 | 0) >= (HEAP32[$60 >> 2] | 0)) {
       $$2 = $$1;
       break L11;
      }
      if ((HEAP32[$19 >> 2] | 0) >>> 0 < $9 >>> 0) label = 15; else if (($$0105 + $$0104 | 0) < (HEAP32[$61 >> 2] | 0)) label = 15; else $79 = $95;
      L19 : do if ((label | 0) == 15) {
       label = 0;
       $$0100 = $59;
       $$0106 = 0;
       $96 = $95;
       while (1) {
        if (($$0106 | 0) >= ($50 | 0)) {
         $79 = $96;
         break L19;
        }
        FUNCTION_TABLE_viiiii[$47 & 31]($0, $36, HEAP32[$3 + 32 + ($$0106 + $$1 << 2) >> 2] | 0, $$0102, $$0100);
        $73 = HEAP32[$53 >> 2] | 0;
        $$0100 = $73 + $$0100 | 0;
        $$0106 = $$0106 + 1 | 0;
        $96 = $73;
       }
      } while (0);
      $$0102 = $$0102 + ($79 << 2) | 0;
      $$0105 = $$0105 + 1 | 0;
      $$1 = (HEAP32[$48 >> 2] | 0) + $$1 | 0;
      $95 = $79;
     }
    } while (0);
    $$0101 = $$2;
    $$0103 = $$0103 + 1 | 0;
   }
   $$099 = $$099 + 1 | 0;
  }
  HEAP32[$13 >> 2] = 0;
  $$0104 = $$0104 + 1 | 0;
 }
 do if ((label | 0) == 6) {
  HEAP32[$10 >> 2] = $$0104;
  HEAP32[$13 >> 2] = $$099;
  $$0 = 0;
 } else if ((label | 0) == 22) {
  $84 = $0 + 156 | 0;
  HEAP32[$84 >> 2] = (HEAP32[$84 >> 2] | 0) + 1;
  $88 = (HEAP32[$19 >> 2] | 0) + 1 | 0;
  HEAP32[$19 >> 2] = $88;
  if ($88 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
   _start_iMCU_row_28($0);
   $$0 = 3;
   break;
  } else {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 436 >> 2] | 0) + 12 >> 2] & 255]($0);
   $$0 = 4;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_integer_literalINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$i = 0, $$025 = 0, $$1 = 0, $12 = 0, $13 = 0, $15 = 0, $23 = 0, $24 = 0, $30 = 0, $31 = 0, $39 = 0, $4 = 0, $45 = 0, $46 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $4 = sp + 24 | 0;
 $5 = sp;
 $6 = sp + 12 | 0;
 $7 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($0, $1) | 0;
 if (($7 | 0) == ($0 | 0) | ($7 | 0) == ($1 | 0)) $$1 = $0; else if ((HEAP8[$7 >> 0] | 0) == 69) {
  $12 = $2 + 11 | 0;
  $13 = HEAP8[$12 >> 0] | 0;
  $15 = $2 + 4 | 0;
  do if (($13 << 24 >> 24 < 0 ? HEAP32[$15 >> 2] | 0 : $13 & 255) >>> 0 > 3) {
   __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($6, 49631, $2);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 49629) | 0;
   HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($4, $5);
   $23 = $3 + 4 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   if ($24 >>> 0 < (HEAP32[$3 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($24, $4);
    HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($3, $4);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
  } else {
   $30 = $3 + 4 | 0;
   $31 = HEAP32[$30 >> 2] | 0;
   if ($31 >>> 0 < (HEAP32[$3 + 8 >> 2] | 0) >>> 0) {
    HEAP32[$31 >> 2] = 0;
    HEAP32[$31 + 4 >> 2] = 0;
    HEAP32[$31 + 8 >> 2] = 0;
    HEAP32[$31 + 12 >> 2] = 0;
    HEAP32[$31 + 16 >> 2] = 0;
    HEAP32[$31 + 20 >> 2] = 0;
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($31);
    HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + 24;
    break;
   } else {
    __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($3);
    break;
   }
  } while (0);
  $39 = $3 + 4 | 0;
  if ((HEAP8[$0 >> 0] | 0) == 110) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc((HEAP32[$39 >> 2] | 0) + -24 | 0, 45);
   $$025 = $0 + 1 | 0;
  } else $$025 = $0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_((HEAP32[$39 >> 2] | 0) + -24 | 0, $$025, $7);
  $45 = HEAP8[$12 >> 0] | 0;
  $46 = $45 << 24 >> 24 < 0;
  $49 = $46 ? HEAP32[$15 >> 2] | 0 : $45 & 255;
  if ($49 >>> 0 < 4) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$39 >> 2] | 0) + -24 | 0, $46 ? HEAP32[$2 >> 2] | 0 : $2, $49) | 0;
  $$1 = $7 + 1 | 0;
 } else $$1 = $0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$059 = 0, $$1 = 0, $$byval_copy = 0, $$sroa$0$1 = 0, $10 = 0, $12 = 0, $13 = 0, $16 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $58 = 0, $6 = 0, $68 = 0, $7 = 0, $72 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 16 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = $0 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $8 = $7 << 24 >> 24 < 0;
 if ($8) $10 = HEAP32[$0 >> 2] | 0; else $10 = $0;
 $12 = HEAP32[$1 >> 2] | 0;
 $13 = $12 - $10 | 0;
 $16 = $3 - $2 | 0;
 do if (!$16) {
  $68 = $7;
  label = 27;
 } else {
  if ($8) {
   $23 = HEAP32[$0 >> 2] | 0;
   $24 = HEAP32[$0 + 4 >> 2] | 0;
  } else {
   $23 = $0;
   $24 = $7 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($2, $23, $23 + $24 | 0) | 0) {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($4, $2, $3);
   HEAP32[$5 >> 2] = $12;
   $27 = HEAP8[$4 + 11 >> 0] | 0;
   $28 = $27 << 24 >> 24 < 0;
   $33 = $28 ? HEAP32[$4 >> 2] | 0 : $4;
   $35 = $33 + ($28 ? HEAP32[$4 + 4 >> 2] | 0 : $27 & 255) | 0;
   HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
   $36 = __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertIPKcEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr38__libcpp_string_gets_noexcept_iteratorISC_EE5valueENS_11__wrap_iterIPcEEE4typeENSD_ISA_EESC_SC_($0, $$byval_copy, $33, $35) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   $$sroa$0$1 = $36;
   break;
  }
  $37 = HEAP8[$6 >> 0] | 0;
  $38 = $37 << 24 >> 24 < 0;
  if ($38) {
   $46 = HEAP32[$0 + 4 >> 2] | 0;
   $47 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
  } else {
   $46 = $37 & 255;
   $47 = 10;
  }
  if (($47 - $46 | 0) >>> 0 < $16 >>> 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm($0, $47, $46 + $16 - $47 | 0, $46, $13, $16);
   $$0 = HEAP32[$0 >> 2] | 0;
  } else {
   if ($38) $53 = HEAP32[$0 >> 2] | 0; else $53 = $0;
   $50 = $46 - $13 | 0;
   if (!$50) $$0 = $53; else {
    $52 = $53 + $13 | 0;
    __ZNSt3__211char_traitsIcE4moveEPcPKcm($52 + $16 | 0, $52, $50) | 0;
    $$0 = $53;
   }
  }
  $58 = $46 + $16 | 0;
  if ((HEAP8[$6 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $58; else HEAP8[$6 >> 0] = $58;
  HEAP8[$$byval_copy >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + $58 | 0, $$byval_copy);
  $$059 = $2;
  $$1 = $$0 + $13 | 0;
  while (1) {
   if (($$059 | 0) == ($3 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc($$1, $$059);
   $$059 = $$059 + 1 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $68 = HEAP8[$6 >> 0] | 0;
  label = 27;
 } while (0);
 if ((label | 0) == 27) {
  if ($68 << 24 >> 24 < 0) $72 = HEAP32[$0 >> 2] | 0; else $72 = $0;
  $$sroa$0$1 = $72 + $13 | 0;
 }
 STACKTOP = sp;
 return $$sroa$0$1 | 0;
}

function _find_nearby_colors($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$0153 = 0, $$0156 = 0, $$0158 = 0, $$0160 = 0, $$1 = 0, $$1154 = 0, $$1159 = 0, $$1161 = 0, $$2 = 0, $$2155 = 0, $$pn = 0, $$pn162 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $23 = 0, $26 = 0, $29 = 0, $33 = 0, $36 = 0, $40 = 0, $43 = 0, $49 = 0, $5 = 0, $52 = 0, $56 = 0, $60 = 0, $64 = 0, $68 = 0, $7 = 0, $71 = 0, $77 = 0, $79 = 0, $8 = 0, $82 = 0, $85 = 0, $88 = 0, $91 = 0, $93 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1024 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1024);
 $5 = sp;
 $7 = HEAP32[$0 + 132 >> 2] | 0;
 $8 = $1 + 24 | 0;
 $10 = $8 + $1 >> 1;
 $11 = $2 + 28 | 0;
 $13 = $11 + $2 >> 1;
 $14 = $3 + 24 | 0;
 $16 = $14 + $3 >> 1;
 $17 = $0 + 136 | 0;
 $$0156 = 2147483647;
 $$0160 = 0;
 while (1) {
  if (($$0160 | 0) >= ($7 | 0)) break;
  $19 = HEAP32[$17 >> 2] | 0;
  $23 = HEAPU8[(HEAP32[$19 >> 2] | 0) + $$0160 >> 0] | 0;
  do if (($23 | 0) < ($1 | 0)) {
   $26 = $23 - $1 << 1;
   $29 = $23 - $8 << 1;
   $$0 = Math_imul($29, $29) | 0;
   $$0153 = Math_imul($26, $26) | 0;
  } else {
   if (($8 | 0) < ($23 | 0)) {
    $33 = $23 - $8 << 1;
    $36 = $23 - $1 << 1;
    $$0 = Math_imul($36, $36) | 0;
    $$0153 = Math_imul($33, $33) | 0;
    break;
   }
   if (($10 | 0) < ($23 | 0)) {
    $43 = $23 - $1 << 1;
    $$0 = Math_imul($43, $43) | 0;
    $$0153 = 0;
    break;
   } else {
    $40 = $23 - $8 << 1;
    $$0 = Math_imul($40, $40) | 0;
    $$0153 = 0;
    break;
   }
  } while (0);
  $49 = HEAPU8[(HEAP32[$19 + 4 >> 2] | 0) + $$0160 >> 0] | 0;
  do if (($49 | 0) < ($2 | 0)) {
   $52 = ($49 - $2 | 0) * 3 | 0;
   $56 = ($49 - $11 | 0) * 3 | 0;
   $$1154 = (Math_imul($52, $52) | 0) + $$0153 | 0;
   $$pn = Math_imul($56, $56) | 0;
  } else {
   if (($11 | 0) < ($49 | 0)) {
    $60 = ($49 - $11 | 0) * 3 | 0;
    $64 = ($49 - $2 | 0) * 3 | 0;
    $$1154 = (Math_imul($60, $60) | 0) + $$0153 | 0;
    $$pn = Math_imul($64, $64) | 0;
    break;
   }
   if (($13 | 0) < ($49 | 0)) {
    $71 = ($49 - $2 | 0) * 3 | 0;
    $$1154 = $$0153;
    $$pn = Math_imul($71, $71) | 0;
    break;
   } else {
    $68 = ($49 - $11 | 0) * 3 | 0;
    $$1154 = $$0153;
    $$pn = Math_imul($68, $68) | 0;
    break;
   }
  } while (0);
  $$1 = $$pn + $$0 | 0;
  $77 = HEAPU8[(HEAP32[$19 + 8 >> 2] | 0) + $$0160 >> 0] | 0;
  do if (($77 | 0) < ($3 | 0)) {
   $79 = $77 - $3 | 0;
   $82 = $77 - $14 | 0;
   $$2155 = (Math_imul($79, $79) | 0) + $$1154 | 0;
   $$pn162 = Math_imul($82, $82) | 0;
  } else {
   if (($14 | 0) < ($77 | 0)) {
    $85 = $77 - $14 | 0;
    $88 = $77 - $3 | 0;
    $$2155 = (Math_imul($85, $85) | 0) + $$1154 | 0;
    $$pn162 = Math_imul($88, $88) | 0;
    break;
   }
   if (($16 | 0) < ($77 | 0)) {
    $93 = $77 - $3 | 0;
    $$2155 = $$1154;
    $$pn162 = Math_imul($93, $93) | 0;
    break;
   } else {
    $91 = $77 - $14 | 0;
    $$2155 = $$1154;
    $$pn162 = Math_imul($91, $91) | 0;
    break;
   }
  } while (0);
  $$2 = $$1 + $$pn162 | 0;
  HEAP32[$5 + ($$0160 << 2) >> 2] = $$2155;
  $$0156 = ($$2 | 0) < ($$0156 | 0) ? $$2 : $$0156;
  $$0160 = $$0160 + 1 | 0;
 }
 $$0158 = 0;
 $$1161 = 0;
 while (1) {
  if (($$1161 | 0) >= ($7 | 0)) break;
  if ((HEAP32[$5 + ($$1161 << 2) >> 2] | 0) > ($$0156 | 0)) $$1159 = $$0158; else {
   HEAP8[$4 + $$0158 >> 0] = $$1161;
   $$1159 = $$0158 + 1 | 0;
  }
  $$0158 = $$1159;
  $$1161 = $$1161 + 1 | 0;
 }
 STACKTOP = sp;
 return $$0158 | 0;
}

function _h2v2_merged_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0158 = 0, $$0159 = 0, $$0160 = 0, $$0161 = 0, $$0162 = 0, $$0163 = 0, $103 = 0, $11 = 0, $121 = 0, $123 = 0, $125 = 0, $13 = 0, $131 = 0, $133 = 0, $135 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $22 = 0, $26 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $42 = 0, $45 = 0, $47 = 0, $5 = 0, $53 = 0, $55 = 0, $58 = 0, $7 = 0, $73 = 0, $88 = 0, $9 = 0, $scevgep = 0, $scevgep164 = 0, $scevgep165 = 0, $scevgep167 = 0;
 $5 = HEAP32[$0 + 452 >> 2] | 0;
 $7 = HEAP32[$0 + 324 >> 2] | 0;
 $9 = HEAP32[$5 + 16 >> 2] | 0;
 $11 = HEAP32[$5 + 20 >> 2] | 0;
 $13 = HEAP32[$5 + 24 >> 2] | 0;
 $15 = HEAP32[$5 + 28 >> 2] | 0;
 $16 = HEAP32[$1 >> 2] | 0;
 $17 = $2 << 1;
 $19 = HEAP32[$16 + ($17 << 2) >> 2] | 0;
 $22 = HEAP32[$16 + (($17 | 1) << 2) >> 2] | 0;
 $26 = HEAP32[(HEAP32[$1 + 4 >> 2] | 0) + ($2 << 2) >> 2] | 0;
 $30 = HEAP32[(HEAP32[$1 + 8 >> 2] | 0) + ($2 << 2) >> 2] | 0;
 $31 = HEAP32[$3 >> 2] | 0;
 $33 = HEAP32[$3 + 4 >> 2] | 0;
 $34 = $0 + 112 | 0;
 $35 = HEAP32[$34 >> 2] | 0;
 $36 = $35 >>> 1;
 $37 = $36 * 6 | 0;
 $scevgep = $31 + $37 | 0;
 $38 = $35 & -2;
 $scevgep165 = $19 + $38 | 0;
 $scevgep167 = $26 + $36 | 0;
 $$0 = $36;
 $$0158 = $30;
 $$0159 = $26;
 $$0160 = $22;
 $$0161 = $19;
 $$0162 = $33;
 $$0163 = $31;
 while (1) {
  if (!$$0) break;
  $42 = HEAPU8[$$0159 >> 0] | 0;
  $45 = HEAPU8[$$0158 >> 0] | 0;
  $47 = HEAP32[$9 + ($45 << 2) >> 2] | 0;
  $53 = (HEAP32[$13 + ($45 << 2) >> 2] | 0) + (HEAP32[$15 + ($42 << 2) >> 2] | 0) >> 16;
  $55 = HEAP32[$11 + ($42 << 2) >> 2] | 0;
  $58 = HEAPU8[$$0161 >> 0] | 0;
  HEAP8[$$0163 >> 0] = HEAP8[$7 + ($47 + $58) >> 0] | 0;
  HEAP8[$$0163 + 1 >> 0] = HEAP8[$7 + ($53 + $58) >> 0] | 0;
  HEAP8[$$0163 + 2 >> 0] = HEAP8[$7 + ($55 + $58) >> 0] | 0;
  $73 = HEAPU8[$$0161 + 1 >> 0] | 0;
  HEAP8[$$0163 + 3 >> 0] = HEAP8[$7 + ($47 + $73) >> 0] | 0;
  HEAP8[$$0163 + 4 >> 0] = HEAP8[$7 + ($53 + $73) >> 0] | 0;
  HEAP8[$$0163 + 5 >> 0] = HEAP8[$7 + ($55 + $73) >> 0] | 0;
  $88 = HEAPU8[$$0160 >> 0] | 0;
  HEAP8[$$0162 >> 0] = HEAP8[$7 + ($47 + $88) >> 0] | 0;
  HEAP8[$$0162 + 1 >> 0] = HEAP8[$7 + ($53 + $88) >> 0] | 0;
  HEAP8[$$0162 + 2 >> 0] = HEAP8[$7 + ($55 + $88) >> 0] | 0;
  $103 = HEAPU8[$$0160 + 1 >> 0] | 0;
  HEAP8[$$0162 + 3 >> 0] = HEAP8[$7 + ($47 + $103) >> 0] | 0;
  HEAP8[$$0162 + 4 >> 0] = HEAP8[$7 + ($53 + $103) >> 0] | 0;
  HEAP8[$$0162 + 5 >> 0] = HEAP8[$7 + ($55 + $103) >> 0] | 0;
  $$0 = $$0 + -1 | 0;
  $$0158 = $$0158 + 1 | 0;
  $$0159 = $$0159 + 1 | 0;
  $$0160 = $$0160 + 2 | 0;
  $$0161 = $$0161 + 2 | 0;
  $$0162 = $$0162 + 6 | 0;
  $$0163 = $$0163 + 6 | 0;
 }
 $scevgep164 = $33 + $37 | 0;
 if (HEAP32[$34 >> 2] & 1 | 0) {
  $121 = HEAPU8[$scevgep167 >> 0] | 0;
  $123 = HEAPU8[$30 + $36 >> 0] | 0;
  $125 = HEAP32[$9 + ($123 << 2) >> 2] | 0;
  $131 = (HEAP32[$13 + ($123 << 2) >> 2] | 0) + (HEAP32[$15 + ($121 << 2) >> 2] | 0) >> 16;
  $133 = HEAP32[$11 + ($121 << 2) >> 2] | 0;
  $135 = HEAPU8[$scevgep165 >> 0] | 0;
  HEAP8[$scevgep >> 0] = HEAP8[$7 + ($125 + $135) >> 0] | 0;
  HEAP8[$scevgep + 1 >> 0] = HEAP8[$7 + ($131 + $135) >> 0] | 0;
  HEAP8[$scevgep + 2 >> 0] = HEAP8[$7 + ($133 + $135) >> 0] | 0;
  $148 = HEAPU8[$22 + $38 >> 0] | 0;
  HEAP8[$scevgep164 >> 0] = HEAP8[$7 + ($125 + $148) >> 0] | 0;
  HEAP8[$scevgep164 + 1 >> 0] = HEAP8[$7 + ($131 + $148) >> 0] | 0;
  HEAP8[$scevgep164 + 2 >> 0] = HEAP8[$7 + ($133 + $148) >> 0] | 0;
 }
 return;
}

function _start_pass_phuff_decoder($0) {
 $0 = $0 | 0;
 var $$0107 = 0, $$0109 = 0, $$1$in = 0, $$1108 = 0, $$2$in = 0, $$phi$trans$insert = 0, $$pre$phi121Z2D = 0, $$pre$phiZ2D = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $2 = 0, $21 = 0, $25 = 0, $3 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $46 = 0, $47 = 0, $5 = 0, $51 = 0, $6 = 0, $62 = 0, $63 = 0, $67 = 0, $7 = 0, $81 = 0, $83 = 0, $85 = 0, $89 = 0, $92 = 0, $93 = 0, $97 = 0;
 $2 = HEAP32[$0 + 444 >> 2] | 0;
 $3 = $0 + 400 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = ($4 | 0) == 0;
 $6 = $0 + 404 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 if ($5) $$1$in = ($7 | 0) != 0; else $$1$in = ($4 | 0) > ($7 | 0) | ($7 | 0) > 63 | (HEAP32[$0 + 328 >> 2] | 0) != 1;
 $14 = $0 + 408 | 0;
 $15 = HEAP32[$14 >> 2] | 0;
 if (!$15) {
  $$phi$trans$insert = $0 + 412 | 0;
  $$2$in = $$1$in;
  $$pre$phiZ2D = $$phi$trans$insert;
  $21 = HEAP32[$$phi$trans$insert >> 2] | 0;
 } else {
  $18 = $0 + 412 | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  $$2$in = $$1$in | ($19 | 0) != ($15 + -1 | 0);
  $$pre$phiZ2D = $18;
  $21 = $19;
 }
 if (($21 | 0) < 14 & ($$2$in ^ 1)) $$pre$phi121Z2D = $0; else {
  $25 = HEAP32[$0 >> 2] | 0;
  HEAP32[$25 + 20 >> 2] = 16;
  HEAP32[$25 + 24 >> 2] = $4;
  HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = HEAP32[$6 >> 2];
  HEAP32[(HEAP32[$0 >> 2] | 0) + 32 >> 2] = HEAP32[$14 >> 2];
  HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  $$pre$phi121Z2D = $0;
 }
 $39 = $0 + 328 | 0;
 $40 = $0 + 160 | 0;
 $$0107 = 0;
 while (1) {
  $41 = HEAP32[$39 >> 2] | 0;
  if (($$0107 | 0) >= ($41 | 0)) break;
  $46 = HEAP32[(HEAP32[$0 + 332 + ($$0107 << 2) >> 2] | 0) + 4 >> 2] | 0;
  $47 = HEAP32[$40 >> 2] | 0;
  if (!$5) if ((HEAP32[$47 + ($46 << 8) >> 2] | 0) < 0) {
   $51 = HEAP32[$0 >> 2] | 0;
   HEAP32[$51 + 20 >> 2] = 115;
   HEAP32[$51 + 24 >> 2] = $46;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = 0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($$pre$phi121Z2D, -1);
  }
  $$0109 = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0109 | 0) > (HEAP32[$6 >> 2] | 0)) break;
   $62 = $47 + ($46 << 8) + ($$0109 << 2) | 0;
   $63 = HEAP32[$62 >> 2] | 0;
   if ((HEAP32[$14 >> 2] | 0) != ((($63 | 0) > 0 ? $63 : 0) | 0)) {
    $67 = HEAP32[$0 >> 2] | 0;
    HEAP32[$67 + 20 >> 2] = 115;
    HEAP32[$67 + 24 >> 2] = $46;
    HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $$0109;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($$pre$phi121Z2D, -1);
   }
   HEAP32[$62 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
   $$0109 = $$0109 + 1 | 0;
  }
  $$0107 = $$0107 + 1 | 0;
 }
 HEAP32[$2 + 4 >> 2] = (HEAP32[$14 >> 2] | 0) == 0 ? ($5 ? 25 : 24) : $5 ? 27 : 26;
 $81 = $2 + 60 | 0;
 $$1108 = 0;
 $83 = $41;
 while (1) {
  if (($$1108 | 0) >= ($83 | 0)) break;
  $85 = HEAP32[$0 + 332 + ($$1108 << 2) >> 2] | 0;
  if ($5) {
   if (!(HEAP32[$14 >> 2] | 0)) {
    $89 = HEAP32[$85 + 20 >> 2] | 0;
    _jpeg_make_d_derived_tbl($0, 1, $89, $2 + 44 + ($89 << 2) | 0);
   }
  } else {
   $92 = HEAP32[$85 + 24 >> 2] | 0;
   $93 = $2 + 44 + ($92 << 2) | 0;
   _jpeg_make_d_derived_tbl($0, 0, $92, $93);
   HEAP32[$81 >> 2] = HEAP32[$93 >> 2];
  }
  HEAP32[$2 + 24 + ($$1108 << 2) >> 2] = 0;
  $$1108 = $$1108 + 1 | 0;
  $83 = HEAP32[$39 >> 2] | 0;
 }
 $97 = $2 + 8 | 0;
 HEAP32[$97 >> 2] = 0;
 HEAP32[$97 + 4 >> 2] = 0;
 HEAP32[$97 + 8 >> 2] = 0;
 HEAP32[$97 + 12 >> 2] = 0;
 HEAP32[$2 + 40 >> 2] = HEAP32[$0 + 276 >> 2];
 return;
}

function _icpGetJ_Xc_S($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0108 = 0, $$0109 = 0, $104 = 0.0, $11 = 0, $111 = 0.0, $118 = 0.0, $12 = 0.0, $128 = 0, $134 = 0.0, $135 = 0.0, $15 = 0, $17 = 0, $18 = 0.0, $24 = 0, $26 = 0.0, $28 = 0, $32 = 0, $4 = 0, $40 = 0, $43 = 0, $45 = 0.0, $48 = 0, $5 = 0, $56 = 0.0, $60 = 0.0, $63 = 0.0, $70 = 0.0, $80 = 0.0, $87 = 0.0, $9 = 0, $94 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 864 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(864);
 $4 = sp + 576 | 0;
 $5 = sp;
 $9 = $2 + 8 | 0;
 $11 = $3 + 8 | 0;
 $12 = +HEAPF64[$11 >> 3];
 $15 = $2 + 16 | 0;
 $17 = $3 + 16 | 0;
 $18 = +HEAPF64[$17 >> 3];
 HEAPF64[$1 >> 3] = +HEAPF64[$2 + 24 >> 3] + (+HEAPF64[$2 >> 3] * +HEAPF64[$3 >> 3] + +HEAPF64[$9 >> 3] * $12 + +HEAPF64[$15 >> 3] * $18);
 $24 = $2 + 32 | 0;
 $26 = +HEAPF64[$3 >> 3];
 $28 = $2 + 40 | 0;
 $32 = $2 + 48 | 0;
 HEAPF64[$1 + 8 >> 3] = +HEAPF64[$2 + 56 >> 3] + (+HEAPF64[$24 >> 3] * $26 + $12 * +HEAPF64[$28 >> 3] + $18 * +HEAPF64[$32 >> 3]);
 $40 = $2 + 64 | 0;
 $43 = $2 + 72 | 0;
 $45 = +HEAPF64[$11 >> 3];
 $48 = $2 + 80 | 0;
 HEAPF64[$1 + 16 >> 3] = +HEAPF64[$2 + 88 >> 3] + ($26 * +HEAPF64[$40 >> 3] + +HEAPF64[$43 >> 3] * $45 + $18 * +HEAPF64[$48 >> 3]);
 $56 = +HEAPF64[$2 >> 3];
 HEAPF64[$4 >> 3] = $26 * $56;
 HEAPF64[$4 + 8 >> 3] = $45 * $56;
 $60 = +HEAPF64[$17 >> 3];
 HEAPF64[$4 + 16 >> 3] = $56 * $60;
 $63 = +HEAPF64[$9 >> 3];
 HEAPF64[$4 + 24 >> 3] = $26 * $63;
 HEAPF64[$4 + 32 >> 3] = $45 * $63;
 HEAPF64[$4 + 40 >> 3] = $60 * $63;
 $70 = +HEAPF64[$15 >> 3];
 HEAPF64[$4 + 48 >> 3] = $26 * $70;
 HEAPF64[$4 + 56 >> 3] = $45 * $70;
 HEAPF64[$4 + 64 >> 3] = $60 * $70;
 HEAPF64[$4 + 72 >> 3] = $56;
 HEAPF64[$4 + 80 >> 3] = $63;
 HEAPF64[$4 + 88 >> 3] = $70;
 $80 = +HEAPF64[$24 >> 3];
 HEAPF64[$4 + 96 >> 3] = $26 * $80;
 HEAPF64[$4 + 104 >> 3] = $45 * $80;
 HEAPF64[$4 + 112 >> 3] = $60 * $80;
 $87 = +HEAPF64[$28 >> 3];
 HEAPF64[$4 + 120 >> 3] = $26 * $87;
 HEAPF64[$4 + 128 >> 3] = $45 * $87;
 HEAPF64[$4 + 136 >> 3] = $60 * $87;
 $94 = +HEAPF64[$32 >> 3];
 HEAPF64[$4 + 144 >> 3] = $26 * $94;
 HEAPF64[$4 + 152 >> 3] = $45 * $94;
 HEAPF64[$4 + 160 >> 3] = $60 * $94;
 HEAPF64[$4 + 168 >> 3] = $80;
 HEAPF64[$4 + 176 >> 3] = $87;
 HEAPF64[$4 + 184 >> 3] = $94;
 $104 = +HEAPF64[$40 >> 3];
 HEAPF64[$4 + 192 >> 3] = $26 * $104;
 HEAPF64[$4 + 200 >> 3] = $45 * $104;
 HEAPF64[$4 + 208 >> 3] = $60 * $104;
 $111 = +HEAPF64[$43 >> 3];
 HEAPF64[$4 + 216 >> 3] = $26 * $111;
 HEAPF64[$4 + 224 >> 3] = $45 * $111;
 HEAPF64[$4 + 232 >> 3] = $60 * $111;
 $118 = +HEAPF64[$48 >> 3];
 HEAPF64[$4 + 240 >> 3] = $26 * $118;
 HEAPF64[$4 + 248 >> 3] = $45 * $118;
 HEAPF64[$4 + 256 >> 3] = $60 * $118;
 HEAPF64[$4 + 264 >> 3] = $104;
 HEAPF64[$4 + 272 >> 3] = $111;
 HEAPF64[$4 + 280 >> 3] = $118;
 _icpGetJ_T_S($5);
 $$0108 = 0;
 while (1) {
  if (($$0108 | 0) == 3) break;
  $$0109 = 0;
  while (1) {
   if (($$0109 | 0) == 6) break;
   $128 = $0 + ($$0108 * 48 | 0) + ($$0109 << 3) | 0;
   HEAPF64[$128 >> 3] = 0.0;
   $$0 = 0;
   $135 = 0.0;
   while (1) {
    if (($$0 | 0) == 12) break;
    $134 = $135 + +HEAPF64[$4 + ($$0108 * 96 | 0) + ($$0 << 3) >> 3] * +HEAPF64[$5 + ($$0 * 48 | 0) + ($$0109 << 3) >> 3];
    HEAPF64[$128 >> 3] = $134;
    $$0 = $$0 + 1 | 0;
    $135 = $134;
   }
   $$0109 = $$0109 + 1 | 0;
  }
  $$0108 = $$0108 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function _start_pass($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$081 = 0, $$082 = 0, $$083 = 0, $$084 = 0, $$085 = 0, $$087 = 0, $$1 = 0, $$186 = 0, $$188 = 0, $$2 = 0, $$3 = 0, $10 = 0, $11 = 0, $12 = 0, $15 = 0, $2 = 0, $24 = 0, $28 = 0, $31 = 0, $38 = 0, $47 = 0, $5 = 0, $51 = 0, $52 = 0, $6 = 0, $67 = 0;
 $2 = HEAP32[$0 + 448 >> 2] | 0;
 $5 = $0 + 36 | 0;
 $6 = $0 + 72 | 0;
 $$082 = 0;
 $$084 = HEAP32[$0 + 216 >> 2] | 0;
 $$085 = 0;
 $$087 = 0;
 while (1) {
  if (($$082 | 0) >= (HEAP32[$5 >> 2] | 0)) break;
  $10 = HEAP32[$$084 + 36 >> 2] | 0;
  L4 : do switch ($10 | 0) {
  case 1:
   {
    $$186 = 0;
    $$188 = 11;
    break;
   }
  case 2:
   {
    $$186 = 0;
    $$188 = 12;
    break;
   }
  case 4:
   {
    $$186 = 0;
    $$188 = 13;
    break;
   }
  case 8:
   {
    $11 = HEAP32[$6 >> 2] | 0;
    switch ($11 | 0) {
    case 0:
     {
      $$186 = $11;
      $$188 = 14;
      break L4;
      break;
     }
    case 1:
     {
      $$186 = $11;
      $$188 = 15;
      break L4;
      break;
     }
    case 2:
     {
      $$186 = $11;
      $$188 = 16;
      break L4;
      break;
     }
    default:
     {
      $12 = HEAP32[$0 >> 2] | 0;
      HEAP32[$12 + 20 >> 2] = 48;
      FUNCTION_TABLE_vi[HEAP32[$12 >> 2] & 255]($0);
      $$186 = $$085;
      $$188 = $$087;
      break L4;
     }
    }
    break;
   }
  default:
   {
    $15 = HEAP32[$0 >> 2] | 0;
    HEAP32[$15 + 20 >> 2] = 7;
    HEAP32[$15 + 24 >> 2] = $10;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
    $$186 = $$085;
    $$188 = $$087;
   }
  } while (0);
  HEAP32[$2 + 4 + ($$082 << 2) >> 2] = $$188;
  L14 : do if (HEAP32[$$084 + 48 >> 2] | 0) {
   $24 = $2 + 44 + ($$082 << 2) | 0;
   if ((HEAP32[$24 >> 2] | 0) != ($$186 | 0)) {
    $28 = HEAP32[$$084 + 76 >> 2] | 0;
    if ($28 | 0) {
     HEAP32[$24 >> 2] = $$186;
     switch ($$186 | 0) {
     case 0:
      {
       $31 = HEAP32[$$084 + 80 >> 2] | 0;
       $$083 = 0;
       while (1) {
        if (($$083 | 0) == 64) break L14;
        HEAP32[$31 + ($$083 << 2) >> 2] = HEAPU16[$28 + ($$083 << 1) >> 1];
        $$083 = $$083 + 1 | 0;
       }
       break;
      }
     case 1:
      {
       $38 = HEAP32[$$084 + 80 >> 2] | 0;
       $$1 = 0;
       while (1) {
        if (($$1 | 0) == 64) break L14;
        $47 = (Math_imul(HEAP16[3008 + ($$1 << 1) >> 1] | 0, HEAPU16[$28 + ($$1 << 1) >> 1] | 0) | 0) + 2048 >> 12;
        HEAP32[$38 + ($$1 << 2) >> 2] = $47;
        $$1 = $$1 + 1 | 0;
       }
       break;
      }
     case 2:
      {
       $51 = HEAP32[$$084 + 80 >> 2] | 0;
       $$081 = 0;
       $$2 = 0;
       while (1) {
        if (($$081 | 0) == 8) break L14;
        $52 = 3136 + ($$081 << 3) | 0;
        $$0 = 0;
        $$3 = $$2;
        while (1) {
         if (($$0 | 0) == 8) break;
         HEAPF32[$51 + ($$3 << 2) >> 2] = +HEAPF64[$52 >> 3] * +(HEAPU16[$28 + ($$3 << 1) >> 1] | 0) * +HEAPF64[3136 + ($$0 << 3) >> 3];
         $$0 = $$0 + 1 | 0;
         $$3 = $$3 + 1 | 0;
        }
        $$081 = $$081 + 1 | 0;
        $$2 = $$2 + 8 | 0;
       }
       break;
      }
     default:
      {
       $67 = HEAP32[$0 >> 2] | 0;
       HEAP32[$67 + 20 >> 2] = 48;
       FUNCTION_TABLE_vi[HEAP32[$67 >> 2] & 255]($0);
       break L14;
      }
     }
    }
   }
  } while (0);
  $$082 = $$082 + 1 | 0;
  $$084 = $$084 + 84 | 0;
  $$085 = $$186;
  $$087 = $$188;
 }
 return;
}

function __ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i18 = 0, $$0$i21 = 0, $$016$i = 0, $$017$i = 0, $$019$i = 0, $$020$i = 0, $10 = 0, $11 = 0, $12 = 0, $18 = 0, $19 = 0, $24 = 0, $26 = 0, $27 = 0, $34 = 0, $51 = 0, $52 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $71 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 $6 = sp + 168 | 0;
 $7 = sp;
 $8 = sp + 164 | 0;
 $9 = sp + 160 | 0;
 $10 = sp + 128 | 0;
 $11 = sp + 152 | 0;
 $12 = sp + 144 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$10 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 >> 2] = 16692;
 $18 = HEAP8[$5 + 8 + 3 >> 0] | 0;
 $19 = $18 << 24 >> 24 < 0;
 $24 = $19 ? HEAP32[$5 >> 2] | 0 : $5;
 $26 = $24 + (($19 ? HEAP32[$5 + 4 >> 2] | 0 : $18 & 255) << 2) | 0;
 $27 = $7 + 32 | 0;
 $$016$i = $24;
 $$017$i = 0;
 while (1) {
  if (!(($$017$i | 0) != 2 & $$016$i >>> 0 < $26 >>> 0)) break;
  HEAP32[$9 >> 2] = $$016$i;
  $34 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$11 >> 2] | 0) + 12 >> 2] & 15]($11, $6, $$016$i, $26, $9, $7, $27, $8) | 0;
  if (($34 | 0) == 2 ? 1 : (HEAP32[$9 >> 2] | 0) == ($$016$i | 0)) {
   label = 8;
   break;
  }
  $$0$i21 = $7;
  while (1) {
   if ($$0$i21 >>> 0 >= (HEAP32[$8 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($10, HEAP8[$$0$i21 >> 0] | 0);
   $$0$i21 = $$0$i21 + 1 | 0;
  }
  $$016$i = HEAP32[$9 >> 2] | 0;
  $$017$i = $34;
 }
 if ((label | 0) == 8) __ZNSt3__221__throw_runtime_errorEPKc(0);
 __ZNSt3__26locale5facetD2Ev($11);
 $51 = (HEAP8[$10 + 11 >> 0] | 0) < 0 ? HEAP32[$10 >> 2] | 0 : $10;
 $52 = _catgets(($2 | 0) == -1 ? -1 : $2 << 1, $3, $4, $51) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i18 = 0;
 while (1) {
  if (($$0$i$i18 | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i18 << 2) >> 2] = 0;
  $$0$i$i18 = $$0$i$i18 + 1 | 0;
 }
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 >> 2] = 16740;
 $57 = $51 + (_strlen($52) | 0) | 0;
 $58 = $57;
 $59 = $7 + 128 | 0;
 $$019$i = $51;
 $$020$i = 0;
 while (1) {
  if (!(($$020$i | 0) != 2 & $$019$i >>> 0 < $57 >>> 0)) {
   label = 23;
   break;
  }
  HEAP32[$9 >> 2] = $$019$i;
  $71 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 16 >> 2] & 15]($12, $6, $$019$i, ($58 - $$019$i | 0) > 32 ? $$019$i + 32 | 0 : $57, $9, $7, $59, $8) | 0;
  if (($71 | 0) == 2 ? 1 : (HEAP32[$9 >> 2] | 0) == ($$019$i | 0)) {
   label = 19;
   break;
  }
  $$0$i = $7;
  while (1) {
   if ($$0$i >>> 0 >= (HEAP32[$8 >> 2] | 0) >>> 0) break;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($0, HEAP32[$$0$i >> 2] | 0);
   $$0$i = $$0$i + 4 | 0;
  }
  $$019$i = HEAP32[$9 >> 2] | 0;
  $$020$i = $71;
 }
 if ((label | 0) == 19) __ZNSt3__221__throw_runtime_errorEPKc(0); else if ((label | 0) == 23) {
  __ZNSt3__26locale5facetD2Ev($12);
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10);
  STACKTOP = sp;
  return;
 }
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $34 = 0, $39 = 0, $4 = 0, $42 = 0, $44 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $$byval_copy = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 56 | 0;
 $3 = sp + 48 | 0;
 $4 = $0 + 160 | 0;
 $5 = __ZNK6vision25DoGScaleInvariantDetector5widthEv($4) | 0;
 $6 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 if (($5 | 0) == (__ZNK6vision5Image5widthEv(HEAP32[$6 >> 2] | 0) | 0)) {
  $10 = __ZNK6vision25DoGScaleInvariantDetector6heightEv($4) | 0;
  $11 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
  if (($10 | 0) != (__ZNK6vision5Image6heightEv(HEAP32[$11 >> 2] | 0) | 0)) label = 3;
 } else label = 3;
 if ((label | 0) == 3) __ZN6vision25DoGScaleInvariantDetector5allocEPKNS_25GaussianScaleSpacePyramidE($4, $1);
 $15 = $0 + 64 | 0;
 $16 = __Znwm(148) | 0;
 __ZN6vision8KeyframeILi96EEC2Ev($16);
 HEAP32[$3 >> 2] = 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE($2, $16, $$byval_copy);
 $17 = HEAP32[$2 >> 2] | 0;
 HEAP32[$2 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$15 >> 2] = $17;
 $19 = $2 + 4 | 0;
 $20 = $0 + 68 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($2);
 $23 = HEAP32[$15 >> 2] | 0;
 $24 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 __ZN6vision8KeyframeILi96EE8setWidthEi($23, __ZNK6vision5Image5widthEv(HEAP32[$24 >> 2] | 0) | 0);
 $27 = HEAP32[$15 >> 2] | 0;
 $28 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 __ZN6vision8KeyframeILi96EE9setHeightEi($27, __ZNK6vision5Image6heightEv(HEAP32[$28 >> 2] | 0) | 0);
 __ZN6vision11ScopedTimerC2EPKc($$byval_copy, 27213);
 if (__ZN6vision11ScopedTimercvbEv($$byval_copy) | 0) __ZN6vision12FindFeaturesINS_14FREAKExtractorELi96EEEvPNS_8KeyframeIXT0_EEEPKNS_25GaussianScaleSpacePyramidEPNS_25DoGScaleInvariantDetectorEPT_(HEAP32[$15 >> 2] | 0, $1, $4, $0 + 316 | 0);
 __ZN6vision11ScopedTimerD2Ev($$byval_copy);
 $34 = __ZN6vision6Logger11getInstanceEv() | 0;
 __ZN6vision15get_pretty_timeEv($$byval_copy);
 $39 = (HEAP8[$$byval_copy + 11 >> 0] | 0) < 0 ? HEAP32[$$byval_copy >> 2] | 0 : $$byval_copy;
 $42 = __ZNK6vision18BinaryFeatureStore4sizeEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$15 >> 2] | 0) | 0) | 0;
 HEAP32[$vararg_buffer >> 2] = 33657;
 HEAP32[$vararg_buffer + 4 >> 2] = $39;
 HEAP32[$vararg_buffer + 8 >> 2] = 28850;
 HEAP32[$vararg_buffer + 12 >> 2] = $42;
 __ZN6vision6Logger5writeENS_19LoggerPriorityLevelEPKcz($34, 8, 28806, $vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$byval_copy);
 $44 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_8KeyframeILi96EEE($0, HEAP32[$15 >> 2] | 0) | 0;
 STACKTOP = sp;
 return $44 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_ctor_dtor_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$023 = 0, $12 = 0, $13 = 0, $21 = 0, $3 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 40 | 0;
 $4 = sp + 24 | 0;
 $5 = sp;
 $6 = sp + 12 | 0;
 L1 : do if (($1 - $0 | 0) > 1) {
  $12 = $2 + 4 | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if ((HEAP32[$2 >> 2] | 0) == ($13 | 0)) $$023 = $0; else {
   switch (HEAP8[$0 >> 0] | 0) {
   case 67:
    {
     switch (HEAP8[$0 + 1 >> 0] | 0) {
     case 53:
     case 51:
     case 50:
     case 49:
      break;
     default:
      {
       $$023 = $0;
       break L1;
      }
     }
     __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($4, $13 + -24 | 0);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
     $21 = HEAP32[$12 >> 2] | 0;
     if ($21 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($21, $3);
      HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 24;
     } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     HEAP8[$2 + 60 >> 0] = 1;
     $$023 = $0 + 2 | 0;
     break L1;
     break;
    }
   case 68:
    break;
   default:
    {
     $$023 = $0;
     break L1;
    }
   }
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 53:
   case 50:
   case 49:
   case 48:
    break;
   default:
    {
     $$023 = $0;
     break L1;
    }
   }
   __ZN10__cxxabiv112_GLOBAL__N_19base_nameINSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEEEET_RS9_($6, $13 + -24 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($6, 0, 49701) | 0;
   HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $5);
   $36 = HEAP32[$12 >> 2] | 0;
   if ($36 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($36, $3);
    HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 24;
   } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $3);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
   HEAP8[$2 + 60 >> 0] = 1;
   $$023 = $0 + 2 | 0;
  }
 } else $$023 = $0; while (0);
 STACKTOP = sp;
 return $$023 | 0;
}

function _jpeg_calc_output_dimensions($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$076 = 0, $$077 = 0, $$1 = 0, $$178 = 0, $$sink = 0, $$sink81 = 0, $$sink83 = 0, $$sink85 = 0, $10 = 0, $13 = 0, $17 = 0, $2 = 0, $26 = 0, $34 = 0, $35 = 0, $4 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $52 = 0, $53 = 0, $56 = 0, $57 = 0, $62 = 0, $69 = 0, $70 = 0, $72 = 0, $76 = 0, $79 = 0, $82 = 0, $89 = 0, $92 = 0, $97 = 0;
 $2 = HEAP32[$0 + 20 >> 2] | 0;
 if (($2 | 0) != 202) {
  $4 = HEAP32[$0 >> 2] | 0;
  HEAP32[$4 + 20 >> 2] = 20;
  HEAP32[$4 + 24 >> 2] = $2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $10 = HEAP32[$0 + 48 >> 2] | 0;
 $13 = HEAP32[$0 + 52 >> 2] | 0;
 do if ($10 << 3 >>> 0 > $13 >>> 0) {
  if ($10 << 2 >>> 0 <= $13 >>> 0) {
   $26 = _jdiv_round_up(HEAP32[$0 + 28 >> 2] | 0, 4) | 0;
   HEAP32[$0 + 112 >> 2] = $26;
   $$sink81 = 2;
   $$sink83 = _jdiv_round_up(HEAP32[$0 + 32 >> 2] | 0, 4) | 0;
   break;
  }
  $34 = HEAP32[$0 + 28 >> 2] | 0;
  if ($10 << 1 >>> 0 > $13 >>> 0) {
   HEAP32[$0 + 112 >> 2] = $34;
   $$sink81 = 8;
   $$sink83 = HEAP32[$0 + 32 >> 2] | 0;
   break;
  } else {
   $35 = _jdiv_round_up($34, 2) | 0;
   HEAP32[$0 + 112 >> 2] = $35;
   $$sink81 = 4;
   $$sink83 = _jdiv_round_up(HEAP32[$0 + 32 >> 2] | 0, 2) | 0;
   break;
  }
 } else {
  $17 = _jdiv_round_up(HEAP32[$0 + 28 >> 2] | 0, 8) | 0;
  HEAP32[$0 + 112 >> 2] = $17;
  $$sink81 = 1;
  $$sink83 = _jdiv_round_up(HEAP32[$0 + 32 >> 2] | 0, 8) | 0;
 } while (0);
 HEAP32[$0 + 116 >> 2] = $$sink83;
 HEAP32[$0 + 316 >> 2] = $$sink81;
 $46 = HEAP32[$0 + 216 >> 2] | 0;
 $47 = $0 + 36 | 0;
 $48 = HEAP32[$47 >> 2] | 0;
 $49 = $0 + 308 | 0;
 $50 = $0 + 312 | 0;
 $$076 = $46;
 $$077 = 0;
 while (1) {
  if (($$077 | 0) >= ($48 | 0)) break;
  $52 = $$076 + 8 | 0;
  $53 = $$076 + 12 | 0;
  $$0 = $$sink81;
  while (1) {
   if (($$0 | 0) >= 8) break;
   $56 = $$0 << 1;
   $57 = Math_imul($56, HEAP32[$52 >> 2] | 0) | 0;
   if (($57 | 0) > (Math_imul(HEAP32[$49 >> 2] | 0, $$sink81) | 0)) break;
   $62 = Math_imul($56, HEAP32[$53 >> 2] | 0) | 0;
   if (($62 | 0) > (Math_imul(HEAP32[$50 >> 2] | 0, $$sink81) | 0)) break; else $$0 = $56;
  }
  HEAP32[$$076 + 36 >> 2] = $$0;
  $$076 = $$076 + 84 | 0;
  $$077 = $$077 + 1 | 0;
 }
 $69 = $0 + 28 | 0;
 $70 = $0 + 32 | 0;
 $$1 = $46;
 $$178 = 0;
 $72 = $48;
 while (1) {
  if (($$178 | 0) >= ($72 | 0)) break;
  $76 = $$1 + 36 | 0;
  $79 = Math_imul(Math_imul(HEAP32[$$1 + 8 >> 2] | 0, HEAP32[$69 >> 2] | 0) | 0, HEAP32[$76 >> 2] | 0) | 0;
  $82 = _jdiv_round_up($79, HEAP32[$49 >> 2] << 3) | 0;
  HEAP32[$$1 + 40 >> 2] = $82;
  $89 = Math_imul(Math_imul(HEAP32[$$1 + 12 >> 2] | 0, HEAP32[$70 >> 2] | 0) | 0, HEAP32[$76 >> 2] | 0) | 0;
  $92 = _jdiv_round_up($89, HEAP32[$50 >> 2] << 3) | 0;
  HEAP32[$$1 + 44 >> 2] = $92;
  $$1 = $$1 + 84 | 0;
  $$178 = $$178 + 1 | 0;
  $72 = HEAP32[$47 >> 2] | 0;
 }
 $97 = HEAP32[$0 + 44 >> 2] | 0;
 switch ($97 | 0) {
 case 1:
  {
   $$sink85 = $97;
   break;
  }
 case 3:
 case 2:
  {
   $$sink85 = 3;
   break;
  }
 case 5:
 case 4:
  {
   $$sink85 = 4;
   break;
  }
 default:
  $$sink85 = $72;
 }
 HEAP32[$0 + 120 >> 2] = $$sink85;
 HEAP32[$0 + 124 >> 2] = (HEAP32[$0 + 84 >> 2] | 0) == 0 ? $$sink85 : 1;
 if (!(_use_merged_upsample($0) | 0)) $$sink = 1; else $$sink = HEAP32[$50 >> 2] | 0;
 HEAP32[$0 + 128 >> 2] = $$sink;
 return;
}

function __ZNSt3__210__stdinbufIcE9__getcharEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$048 = 0, $$052 = 0, $$10 = 0, $$11 = 0, $$351 = 0, $$9 = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $45 = 0, $5 = 0, $51 = 0, $6 = 0, $61 = 0, $67 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = $0 + 52 | 0;
 if (!(HEAP8[$6 >> 0] | 0)) {
  $13 = HEAP32[$0 + 44 >> 2] | 0;
  $$sroa$speculated = ($13 | 0) > 1 ? $13 : 1;
  $15 = $0 + 32 | 0;
  $$052 = 0;
  while (1) {
   if ($$052 >>> 0 >= $$sroa$speculated >>> 0) {
    label = 9;
    break;
   }
   $18 = _getc(HEAP32[$15 >> 2] | 0) | 0;
   if (($18 | 0) == -1) {
    label = 8;
    break;
   }
   HEAP8[$2 + $$052 >> 0] = $18;
   $$052 = $$052 + 1 | 0;
  }
  if ((label | 0) == 8) $$10 = __ZNSt3__211char_traitsIcE3eofEv() | 0; else if ((label | 0) == 9) {
   do if (!(HEAP8[$0 + 53 >> 0] | 0)) {
    $28 = $0 + 40 | 0;
    $29 = $0 + 36 | 0;
    $30 = $3 + 1 | 0;
    $$048 = $$sroa$speculated;
    L11 : while (1) {
     $31 = HEAP32[$28 >> 2] | 0;
     $32 = $31;
     $34 = HEAP32[$32 >> 2] | 0;
     $37 = HEAP32[$32 + 4 >> 2] | 0;
     $38 = HEAP32[$29 >> 2] | 0;
     $39 = $2 + $$048 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$38 >> 2] | 0) + 16 >> 2] & 15]($38, $31, $2, $39, $4, $3, $30, $5) | 0) {
     case 3:
      {
       label = 15;
       break L11;
       break;
      }
     case 2:
      {
       label = 17;
       break L11;
       break;
      }
     case 1:
      break;
     default:
      break L11;
     }
     $45 = HEAP32[$28 >> 2] | 0;
     HEAP32[$45 >> 2] = $34;
     HEAP32[$45 + 4 >> 2] = $37;
     if (($$048 | 0) == 8) {
      label = 17;
      break;
     }
     $51 = _getc(HEAP32[$15 >> 2] | 0) | 0;
     if (($51 | 0) == -1) {
      label = 17;
      break;
     }
     HEAP8[$39 >> 0] = $51;
     $$048 = $$048 + 1 | 0;
    }
    if ((label | 0) == 15) HEAP8[$3 >> 0] = HEAP8[$2 >> 0] | 0; else if ((label | 0) == 17) {
     $$9 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
     break;
    }
    $$351 = $$048;
    label = 19;
   } else {
    HEAP8[$3 >> 0] = HEAP8[$2 >> 0] | 0;
    $$351 = $$sroa$speculated;
    label = 19;
   } while (0);
   L21 : do if ((label | 0) == 19) {
    L23 : do if ($1) {
     $67 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$3 >> 0] | 0) | 0;
     HEAP32[$0 + 48 >> 2] = $67;
    } else {
     $$0 = $$351;
     do {
      if (($$0 | 0) <= 0) break L23;
      $$0 = $$0 + -1 | 0;
      $61 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$2 + $$0 >> 0] | 0) | 0;
     } while ((_ungetc($61, HEAP32[$15 >> 2] | 0) | 0) != -1);
     $$9 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
     break L21;
    } while (0);
    $$9 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$3 >> 0] | 0) | 0;
   } while (0);
   $$10 = $$9;
  }
  $$11 = $$10;
 } else {
  $9 = $0 + 48 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ($1) {
   $11 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   HEAP32[$9 >> 2] = $11;
   HEAP8[$6 >> 0] = 0;
   $$11 = $10;
  } else $$11 = $10;
 }
 STACKTOP = sp;
 return $$11 | 0;
}

function __ZNSt3__210__stdinbufIwE9__getcharEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$048 = 0, $$052 = 0, $$10 = 0, $$11 = 0, $$351 = 0, $$9 = 0, $$sroa$speculated = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $46 = 0, $5 = 0, $52 = 0, $6 = 0, $64 = 0, $70 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $6 = $0 + 52 | 0;
 if (!(HEAP8[$6 >> 0] | 0)) {
  $13 = HEAP32[$0 + 44 >> 2] | 0;
  $$sroa$speculated = ($13 | 0) > 1 ? $13 : 1;
  $15 = $0 + 32 | 0;
  $$052 = 0;
  while (1) {
   if ($$052 >>> 0 >= $$sroa$speculated >>> 0) {
    label = 9;
    break;
   }
   $18 = _getc(HEAP32[$15 >> 2] | 0) | 0;
   if (($18 | 0) == -1) {
    label = 8;
    break;
   }
   HEAP8[$2 + $$052 >> 0] = $18;
   $$052 = $$052 + 1 | 0;
  }
  if ((label | 0) == 8) $$10 = __ZNSt3__211char_traitsIwE3eofEv() | 0; else if ((label | 0) == 9) {
   do if (!(HEAP8[$0 + 53 >> 0] | 0)) {
    $29 = $0 + 40 | 0;
    $30 = $0 + 36 | 0;
    $31 = $3 + 4 | 0;
    $$048 = $$sroa$speculated;
    L11 : while (1) {
     $32 = HEAP32[$29 >> 2] | 0;
     $33 = $32;
     $35 = HEAP32[$33 >> 2] | 0;
     $38 = HEAP32[$33 + 4 >> 2] | 0;
     $39 = HEAP32[$30 >> 2] | 0;
     $40 = $2 + $$048 | 0;
     switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$39 >> 2] | 0) + 16 >> 2] & 15]($39, $32, $2, $40, $4, $3, $31, $5) | 0) {
     case 3:
      {
       label = 15;
       break L11;
       break;
      }
     case 2:
      {
       label = 17;
       break L11;
       break;
      }
     case 1:
      break;
     default:
      break L11;
     }
     $46 = HEAP32[$29 >> 2] | 0;
     HEAP32[$46 >> 2] = $35;
     HEAP32[$46 + 4 >> 2] = $38;
     if (($$048 | 0) == 8) {
      label = 17;
      break;
     }
     $52 = _getc(HEAP32[$15 >> 2] | 0) | 0;
     if (($52 | 0) == -1) {
      label = 17;
      break;
     }
     HEAP8[$40 >> 0] = $52;
     $$048 = $$048 + 1 | 0;
    }
    if ((label | 0) == 15) HEAP32[$3 >> 2] = HEAP8[$2 >> 0]; else if ((label | 0) == 17) {
     $$9 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
     break;
    }
    $$351 = $$048;
    label = 19;
   } else {
    HEAP32[$3 >> 2] = HEAP8[$2 >> 0];
    $$351 = $$sroa$speculated;
    label = 19;
   } while (0);
   L21 : do if ((label | 0) == 19) {
    L23 : do if ($1) {
     $70 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$3 >> 2] | 0) | 0;
     HEAP32[$0 + 48 >> 2] = $70;
    } else {
     $$0 = $$351;
     do {
      if (($$0 | 0) <= 0) break L23;
      $$0 = $$0 + -1 | 0;
      $64 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP8[$2 + $$0 >> 0] | 0) | 0;
     } while ((_ungetc($64, HEAP32[$15 >> 2] | 0) | 0) != -1);
     $$9 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
     break L21;
    } while (0);
    $$9 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$3 >> 2] | 0) | 0;
   } while (0);
   $$10 = $$9;
  }
  $$11 = $$10;
 } else {
  $9 = $0 + 48 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ($1) {
   $11 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   HEAP32[$9 >> 2] = $11;
   HEAP8[$6 >> 0] = 0;
   $$11 = $10;
  } else $$11 = $10;
 }
 STACKTOP = sp;
 return $$11 | 0;
}

function _setCamera($id, $cameraID) {
 $id = $id | 0;
 $cameraID = $cameraID | 0;
 var $0 = 0, $2 = 0, $arhandle = 0, $call31 = 0, $call34 = 0, $call39 = 0, $call47 = 0, $call7 = 0, $cameraID$addr = 0, $height = 0, $id$addr = 0, $param = 0, $paramLT = 0, $retval$2 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer4 = 0, $vararg_buffer6 = 0, $width = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer6 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer2 = sp + 8 | 0;
 $vararg_buffer = sp;
 $id$addr = sp + 32 | 0;
 $cameraID$addr = sp + 28 | 0;
 HEAP32[$id$addr >> 2] = $id;
 HEAP32[$cameraID$addr >> 2] = $cameraID;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$2 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56164, $cameraID$addr) | 0)) $retval$2 = -1; else {
   $param = $call7 + 8 | 0;
   _memcpy($param | 0, __ZNSt3__213unordered_mapIi7ARParamNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56164, $cameraID$addr) | 0, 184) | 0;
   $0 = HEAP32[$param >> 2] | 0;
   $width = $call7 + 208 | 0;
   $2 = HEAP32[$call7 + 12 >> 2] | 0;
   $height = $call7 + 212 | 0;
   if (($0 | 0) == (HEAP32[$width >> 2] | 0)) {
    if (($2 | 0) != (HEAP32[$height >> 2] | 0)) label = 5;
   } else label = 5;
   if ((label | 0) == 5) {
    HEAP32[$vararg_buffer >> 2] = $0;
    HEAP32[$vararg_buffer + 4 >> 2] = $2;
    _arLog(0, 2, 44701, $vararg_buffer);
    _arParamChangeSize($param, HEAP32[$width >> 2] | 0, HEAP32[$height >> 2] | 0, $param) | 0;
   }
   _deleteHandle($call7);
   $call31 = _arParamLTCreate($param, 15) | 0;
   $paramLT = $call7 + 192 | 0;
   HEAP32[$paramLT >> 2] = $call31;
   if (!$call31) {
    _arLog(0, 3, 44748, $vararg_buffer2);
    $retval$2 = -1;
    break;
   }
   $call34 = _arCreateHandle($call31) | 0;
   $arhandle = $call7 + 216 | 0;
   HEAP32[$arhandle >> 2] = $call34;
   if (!$call34) {
    _arLog(0, 3, 44786, $vararg_buffer4);
    $retval$2 = -1;
    break;
   }
   _arSetPixelFormat($call34, HEAP32[$call7 + 424 >> 2] | 0) | 0;
   $call39 = _ar3DCreateHandle($param) | 0;
   HEAP32[$call7 + 228 >> 2] = $call39;
   if (!$call39) {
    _arLog(0, 3, 44823, $vararg_buffer6);
    $retval$2 = -1;
    break;
   } else {
    _arPattAttach(HEAP32[$arhandle >> 2] | 0, HEAP32[$call7 + 220 >> 2] | 0) | 0;
    _arglCameraFrustumRH(HEAP32[$paramLT >> 2] | 0, +HEAPF64[$call7 + 264 >> 3], +HEAPF64[$call7 + 272 >> 3], $call7 + 296 | 0);
    $call47 = _createKpmHandle(HEAP32[$paramLT >> 2] | 0) | 0;
    HEAP32[$call7 + 232 >> 2] = $call47;
    $retval$2 = 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $retval$2 | 0;
}

function __ZN6vision16FindHoughMatchesERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEERKNS_21HoughSimilarityVotingERKS5_if($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$031 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $34 = 0, $39 = 0, $43 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $78 = 0, $8 = 0, $83 = 0, $84 = 0, $87 = 0, $9 = 0, $92 = 0, $93 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $5 = sp + 32 | 0;
 $6 = sp + 28 | 0;
 $7 = sp + 24 | 0;
 $8 = sp + 20 | 0;
 $9 = sp + 16 | 0;
 $10 = sp + 12 | 0;
 $11 = sp + 8 | 0;
 $12 = sp + 4 | 0;
 $13 = sp;
 __ZNK6vision21HoughSimilarityVoting16getBinsFromIndexERiS1_S1_S1_i($1, $10, $11, $12, $13, $3);
 $15 = $0 + 4 | 0;
 HEAP32[$15 >> 2] = HEAP32[$0 >> 2];
 $16 = __ZNK6vision21HoughSimilarityVoting24getSubBinLocationIndicesEv($1) | 0;
 $21 = (HEAP32[$16 + 4 >> 2] | 0) - (HEAP32[$16 >> 2] | 0) >> 2;
 $22 = __ZNK6vision21HoughSimilarityVoting18getSubBinLocationsEv($1) | 0;
 if ($21 >>> 0 > (HEAP32[$2 + 4 >> 2] | 0) - (HEAP32[$2 >> 2] | 0) >> 3 >>> 0) {
  $34 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30146) | 0, 28235) | 0, 33528) | 0, 342) | 0, 33535) | 0, 30192) | 0;
  __ZNKSt3__28ios_base6getlocEv($5, $34 + (HEAP32[(HEAP32[$34 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $39 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
  $43 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$39 >> 2] | 0) + 28 >> 2] & 63]($39, 10) | 0;
  __ZNSt3__26localeD2Ev($5);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($34, $43) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($34) | 0;
  _abort();
 }
 $45 = $0 + 8 | 0;
 $$0 = HEAP32[$22 >> 2] | 0;
 $$031 = 0;
 while (1) {
  if (($$031 | 0) >= ($21 | 0)) break;
  __ZNK6vision21HoughSimilarityVoting14getBinDistanceERfS1_S1_S1_ffffffff($1, $6, $7, $8, $9, +HEAPF32[$$0 >> 2], +HEAPF32[$$0 + 4 >> 2], +HEAPF32[$$0 + 8 >> 2], +HEAPF32[$$0 + 12 >> 2], +(HEAP32[$10 >> 2] | 0) + .5, +(HEAP32[$11 >> 2] | 0) + .5, +(HEAP32[$12 >> 2] | 0) + .5, +(HEAP32[$13 >> 2] | 0) + .5);
  do if ((+HEAPF32[$6 >> 2] < $4 ? +HEAPF32[$7 >> 2] < $4 : 0) & +HEAPF32[$8 >> 2] < $4 & +HEAPF32[$9 >> 2] < $4) {
   $78 = __ZNK6vision21HoughSimilarityVoting24getSubBinLocationIndicesEv($1) | 0;
   $83 = (HEAP32[$2 >> 2] | 0) + (HEAP32[(HEAP32[$78 >> 2] | 0) + ($$031 << 2) >> 2] << 3) | 0;
   $84 = HEAP32[$15 >> 2] | 0;
   if (($84 | 0) == (HEAP32[$45 >> 2] | 0)) {
    __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0, $83);
    break;
   } else {
    $87 = $83;
    $92 = HEAP32[$87 + 4 >> 2] | 0;
    $93 = $84;
    HEAP32[$93 >> 2] = HEAP32[$87 >> 2];
    HEAP32[$93 + 4 >> 2] = $92;
    HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 8;
    break;
   }
  } while (0);
  $$0 = $$0 + 16 | 0;
  $$031 = $$031 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function _scanexp($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$04858 = 0, $$049 = 0, $$157 = 0, $$251 = 0, $$pre$phi69Z2D = 0, $100 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $22 = 0, $3 = 0, $36 = 0, $4 = 0, $43 = 0, $44 = 0, $49 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $57 = 0, $61 = 0, $68 = 0, $69 = 0, $78 = 0, $86 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $99 = 0, label = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 104 | 0;
 if ($3 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
  HEAP32[$2 >> 2] = $3 + 1;
  $11 = HEAPU8[$3 >> 0] | 0;
 } else $11 = ___shgetc($0) | 0;
 switch ($11 | 0) {
 case 43:
 case 45:
  {
   $13 = ($11 | 0) == 45 & 1;
   $14 = HEAP32[$2 >> 2] | 0;
   if ($14 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$2 >> 2] = $14 + 1;
    $22 = HEAPU8[$14 >> 0] | 0;
   } else $22 = ___shgetc($0) | 0;
   $21 = $22 + -48 | 0;
   if (($1 | 0) != 0 & $21 >>> 0 > 9) if (!(HEAP32[$4 >> 2] | 0)) {
    $100 = 0;
    $99 = -2147483648;
   } else {
    HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
    label = 14;
   } else {
    $$0 = $13;
    $$049 = $22;
    $$pre$phi69Z2D = $21;
    label = 12;
   }
   break;
  }
 default:
  {
   $$0 = 0;
   $$049 = $11;
   $$pre$phi69Z2D = $11 + -48 | 0;
   label = 12;
  }
 }
 if ((label | 0) == 12) if ($$pre$phi69Z2D >>> 0 > 9) label = 14; else {
  $$04858 = 0;
  $$157 = $$049;
  while (1) {
   $$04858 = $$157 + -48 + ($$04858 * 10 | 0) | 0;
   $36 = HEAP32[$2 >> 2] | 0;
   if ($36 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
    HEAP32[$2 >> 2] = $36 + 1;
    $44 = HEAPU8[$36 >> 0] | 0;
   } else $44 = ___shgetc($0) | 0;
   $43 = $44 + -48 | 0;
   if (!($43 >>> 0 < 10 & ($$04858 | 0) < 214748364)) break; else $$157 = $44;
  }
  $49 = (($$04858 | 0) < 0) << 31 >> 31;
  if ($43 >>> 0 < 10) {
   $$251 = $44;
   $51 = $$04858;
   $52 = $49;
   while (1) {
    $53 = ___muldi3($51 | 0, $52 | 0, 10, 0) | 0;
    $54 = getTempRet0() | 0;
    $57 = _i64Add($$251 | 0, (($$251 | 0) < 0) << 31 >> 31 | 0, -48, -1) | 0;
    $51 = _i64Add($57 | 0, getTempRet0() | 0, $53 | 0, $54 | 0) | 0;
    $52 = getTempRet0() | 0;
    $61 = HEAP32[$2 >> 2] | 0;
    if ($61 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
     HEAP32[$2 >> 2] = $61 + 1;
     $69 = HEAPU8[$61 >> 0] | 0;
    } else $69 = ___shgetc($0) | 0;
    $68 = $69 + -48 | 0;
    if (!($68 >>> 0 < 10 & (($52 | 0) < 21474836 | ($52 | 0) == 21474836 & $51 >>> 0 < 2061584302))) break; else $$251 = $69;
   }
   if ($68 >>> 0 < 10) {
    do {
     $78 = HEAP32[$2 >> 2] | 0;
     if ($78 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
      HEAP32[$2 >> 2] = $78 + 1;
      $86 = HEAPU8[$78 >> 0] | 0;
     } else $86 = ___shgetc($0) | 0;
    } while (($86 + -48 | 0) >>> 0 < 10);
    $93 = $51;
    $94 = $52;
   } else {
    $93 = $51;
    $94 = $52;
   }
  } else {
   $93 = $$04858;
   $94 = $49;
  }
  if (HEAP32[$4 >> 2] | 0) HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
  $92 = ($$0 | 0) == 0;
  $95 = _i64Subtract(0, 0, $93 | 0, $94 | 0) | 0;
  $96 = getTempRet0() | 0;
  $100 = $92 ? $93 : $95;
  $99 = $92 ? $94 : $96;
 }
 if ((label | 0) == 14) if (!(HEAP32[$4 >> 2] | 0)) {
  $100 = 0;
  $99 = -2147483648;
 } else {
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + -1;
  $100 = 0;
  $99 = -2147483648;
 }
 setTempRet0($99 | 0);
 return $100 | 0;
}

function _icpPoint($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$088 = 0, $$090 = 0.0, $$091 = 0.0, $$092 = 0, $$1 = 0, $$189 = 0, $$2 = 0, $12 = 0, $15 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $34 = 0, $38 = 0.0, $42 = 0.0, $47 = 0, $5 = 0, $53 = 0.0, $6 = 0, $65 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 $vararg_buffer1 = sp + 168 | 0;
 $vararg_buffer = sp + 160 | 0;
 $5 = sp + 144 | 0;
 $6 = sp + 48 | 0;
 $7 = sp;
 $8 = $1 + 8 | 0;
 $9 = HEAP32[$8 >> 2] | 0;
 do if (($9 | 0) < 3) $$092 = -1; else {
  $12 = _malloc($9 * 96 | 0) | 0;
  if (!$12) {
   _arLog(0, 3, 18493, $vararg_buffer);
   $$092 = -1;
   break;
  }
  $15 = _malloc($9 << 4) | 0;
  if (!$15) {
   _arLog(0, 3, 18493, $vararg_buffer1);
   _free($12);
   $$092 = -1;
   break;
  }
  $$0 = 0;
  while (1) {
   if (($$0 | 0) == 3) break;
   $$088 = 0;
   while (1) {
    if (($$088 | 0) == 4) break;
    HEAPF64[$3 + ($$0 << 5) + ($$088 << 3) >> 3] = +HEAPF64[$2 + ($$0 << 5) + ($$088 << 3) >> 3];
    $$088 = $$088 + 1 | 0;
   }
   $$0 = $$0 + 1 | 0;
  }
  $22 = $1 + 4 | 0;
  $23 = $5 + 8 | 0;
  $24 = $0 + 104 | 0;
  $25 = $0 + 96 | 0;
  $26 = $0 + 120 | 0;
  $27 = $0 + 112 | 0;
  $$091 = 0.0;
  $$189 = 0;
  L17 : while (1) {
   _arUtilMatMul($0, $3, $6) | 0;
   $$090 = 0.0;
   $$1 = 0;
   while (1) {
    $28 = HEAP32[$8 >> 2] | 0;
    if (($$1 | 0) >= ($28 | 0)) break;
    if ((_icpGetU_from_X_by_MatX2U($5, $6, (HEAP32[$22 >> 2] | 0) + ($$1 * 24 | 0) | 0) | 0) < 0) {
     label = 16;
     break L17;
    }
    $34 = HEAP32[$1 >> 2] | 0;
    $38 = +HEAPF64[$34 + ($$1 << 4) >> 3] - +HEAPF64[$5 >> 3];
    $42 = +HEAPF64[$34 + ($$1 << 4) + 8 >> 3] - +HEAPF64[$23 >> 3];
    $47 = $$1 << 1;
    HEAPF64[$15 + ($47 << 3) >> 3] = $38;
    HEAPF64[$15 + (($47 | 1) << 3) >> 3] = $42;
    $$090 = $$090 + ($38 * $38 + $42 * $42);
    $$1 = $$1 + 1 | 0;
   }
   $53 = $$090 / +($28 | 0);
   if ($53 < +HEAPF64[$24 >> 3]) {
    label = 31;
    break;
   }
   if ($$189 | 0) if ($53 < +HEAPF64[$26 >> 3]) if ($53 / $$091 > +HEAPF64[$27 >> 3]) {
    label = 31;
    break;
   }
   if (($$189 | 0) == (HEAP32[$25 >> 2] | 0)) {
    label = 31;
    break;
   }
   $$2 = 0;
   $65 = $28;
   while (1) {
    if (($$2 | 0) >= ($65 | 0)) break;
    if ((_icpGetJ_U_S($12 + ($$2 * 12 << 3) | 0, $0, $3, (HEAP32[$22 >> 2] | 0) + ($$2 * 24 | 0) | 0) | 0) < 0) {
     label = 27;
     break L17;
    }
    $$2 = $$2 + 1 | 0;
    $65 = HEAP32[$8 >> 2] | 0;
   }
   if ((_icpGetDeltaS($7, $15, $12, $65 << 1) | 0) < 0) {
    label = 29;
    break;
   }
   _icpUpdateMat($3, $7) | 0;
   $$091 = $53;
   $$189 = $$189 + 1 | 0;
  }
  if ((label | 0) == 16) {
   _icpGetXw2XcCleanup($12, $15);
   $$092 = -1;
   break;
  } else if ((label | 0) == 27) {
   _icpGetXw2XcCleanup($12, $15);
   $$092 = -1;
   break;
  } else if ((label | 0) == 29) {
   _icpGetXw2XcCleanup($12, $15);
   $$092 = -1;
   break;
  } else if ((label | 0) == 31) {
   HEAPF64[$4 >> 3] = $53;
   _free($12);
   _free($15);
   $$092 = 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$092 | 0;
}

function __ZN6vision26ComputeSubpixelDerivativesERfS0_S0_S0_S0_RKNS_5ImageEii($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $18 = 0, $23 = 0, $27 = 0, $28 = 0, $30 = 0, $38 = 0, $43 = 0, $47 = 0, $49 = 0, $51 = 0, $53 = 0, $54 = 0, $56 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 if (($6 | 0) > 0) if (($6 + 1 | 0) >>> 0 < (__ZNK6vision5Image5widthEv($5) | 0) >>> 0) {
  $28 = $7 + -1 | 0;
  if (($7 | 0) > 0) {
   $30 = $7 + 1 | 0;
   if ($30 >>> 0 < (__ZNK6vision5Image6heightEv($5) | 0) >>> 0) {
    $49 = (__ZNK6vision5Image3getIfEEPKT_m($5, $28) | 0) + ($6 << 2) | 0;
    $51 = (__ZNK6vision5Image3getIfEEPKT_m($5, $7) | 0) + ($6 << 2) | 0;
    $53 = (__ZNK6vision5Image3getIfEEPKT_m($5, $30) | 0) + ($6 << 2) | 0;
    $54 = $51 + 4 | 0;
    $56 = $51 + -4 | 0;
    HEAPF32[$0 >> 2] = (+HEAPF32[$54 >> 2] - +HEAPF32[$56 >> 2]) * .5;
    HEAPF32[$1 >> 2] = (+HEAPF32[$53 >> 2] - +HEAPF32[$49 >> 2]) * .5;
    HEAPF32[$2 >> 2] = +HEAPF32[$54 >> 2] + (+HEAPF32[$56 >> 2] - +HEAPF32[$51 >> 2] * 2.0);
    HEAPF32[$3 >> 2] = +HEAPF32[$53 >> 2] + (+HEAPF32[$49 >> 2] - +HEAPF32[$51 >> 2] * 2.0);
    HEAPF32[$4 >> 2] = (+HEAPF32[$49 + -4 >> 2] + +HEAPF32[$53 + 4 >> 2] - (+HEAPF32[$49 + 4 >> 2] + +HEAPF32[$53 + -4 >> 2])) * .25;
    STACKTOP = sp;
    return;
   }
  }
  $38 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24077) | 0, 22444) | 0, 33528) | 0, 285) | 0, 33535) | 0, 22957) | 0;
  __ZNKSt3__28ios_base6getlocEv($8, $38 + (HEAP32[(HEAP32[$38 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $43 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
  $47 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$43 >> 2] | 0) + 28 >> 2] & 63]($43, 10) | 0;
  __ZNSt3__26localeD2Ev($8);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($38, $47) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($38) | 0;
  _abort();
 }
 $18 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24021) | 0, 22444) | 0, 33528) | 0, 284) | 0, 33535) | 0, 22882) | 0;
 __ZNKSt3__28ios_base6getlocEv($8, $18 + (HEAP32[(HEAP32[$18 >> 2] | 0) + -12 >> 2] | 0) | 0);
 $23 = __ZNKSt3__26locale9use_facetERNS0_2idE($8, 57884) | 0;
 $27 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$23 >> 2] | 0) + 28 >> 2] & 63]($23, 10) | 0;
 __ZNSt3__26localeD2Ev($8);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($18, $27) | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($18) | 0;
 _abort();
}

function __ZNSt3__29__num_getIcE19__stage2_float_loopEcRbRcPcRS4_ccRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjS4_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$2 = 0, $15 = 0, $18 = 0, $25 = 0, $30 = 0, $34 = 0, $43 = 0, $48 = 0, $50 = 0, $56 = 0, $59 = 0, $60 = 0, $69 = 0, $72 = 0, $81 = 0, $88 = 0, $93 = 0, $95 = 0;
 L1 : do if ($0 << 24 >> 24 == $5 << 24 >> 24) if (!(HEAP8[$1 >> 0] | 0)) $$2 = -1; else {
  HEAP8[$1 >> 0] = 0;
  $15 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $15 + 1;
  HEAP8[$15 >> 0] = 46;
  $18 = HEAP8[$7 + 11 >> 0] | 0;
  if (!(($18 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $18 & 255) | 0)) $$2 = 0; else {
   $25 = HEAP32[$9 >> 2] | 0;
   if (($25 - $8 | 0) < 160) {
    $30 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $25 + 4;
    HEAP32[$25 >> 2] = $30;
    $$2 = 0;
   } else $$2 = 0;
  }
 } else {
  if ($0 << 24 >> 24 == $6 << 24 >> 24) {
   $34 = HEAP8[$7 + 11 >> 0] | 0;
   if (($34 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $34 & 255) | 0) {
    if (!(HEAP8[$1 >> 0] | 0)) {
     $$2 = -1;
     break;
    }
    $43 = HEAP32[$9 >> 2] | 0;
    if (($43 - $8 | 0) >= 160) {
     $$2 = 0;
     break;
    }
    $48 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $43 + 4;
    HEAP32[$43 >> 2] = $48;
    HEAP32[$10 >> 2] = 0;
    $$2 = 0;
    break;
   }
  }
  $50 = $11 + 32 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $11 + $$0$i$idx | 0;
   if (($$0$i$idx | 0) == 32) {
    $$0$lcssa$i = $50;
    break;
   }
   if ((HEAP8[$$0$i$ptr >> 0] | 0) == $0 << 24 >> 24) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $56 = $$0$lcssa$i - $11 | 0;
  if (($56 | 0) > 31) $$2 = -1; else {
   $59 = HEAP8[10736 + $56 >> 0] | 0;
   switch ($56 | 0) {
   case 24:
   case 25:
    {
     $60 = HEAP32[$4 >> 2] | 0;
     if (($60 | 0) != ($3 | 0)) if ((HEAP8[$60 + -1 >> 0] & 95) != (HEAP8[$2 >> 0] & 127)) {
      $$2 = -1;
      break L1;
     }
     HEAP32[$4 >> 2] = $60 + 1;
     HEAP8[$60 >> 0] = $59;
     $$2 = 0;
     break L1;
     break;
    }
   case 23:
   case 22:
    {
     HEAP8[$2 >> 0] = 80;
     $69 = HEAP32[$4 >> 2] | 0;
     HEAP32[$4 >> 2] = $69 + 1;
     HEAP8[$69 >> 0] = $59;
     $$2 = 0;
     break L1;
     break;
    }
   default:
    {
     $72 = $59 & 95;
     if (($72 | 0) == (HEAP8[$2 >> 0] | 0)) {
      HEAP8[$2 >> 0] = $72 | 128;
      if (HEAP8[$1 >> 0] | 0) {
       HEAP8[$1 >> 0] = 0;
       $81 = HEAP8[$7 + 11 >> 0] | 0;
       if (($81 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $81 & 255) | 0) {
        $88 = HEAP32[$9 >> 2] | 0;
        if (($88 - $8 | 0) < 160) {
         $93 = HEAP32[$10 >> 2] | 0;
         HEAP32[$9 >> 2] = $88 + 4;
         HEAP32[$88 >> 2] = $93;
        }
       }
      }
     }
     $95 = HEAP32[$4 >> 2] | 0;
     HEAP32[$4 >> 2] = $95 + 1;
     HEAP8[$95 >> 0] = $59;
     if (($56 | 0) > 21) {
      $$2 = 0;
      break L1;
     }
     HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
     $$2 = 0;
     break L1;
    }
   }
  }
 } while (0);
 return $$2 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE6insertINS_11__wrap_iterIPKiEEEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIiNS_15iterator_traitsISA_E9referenceEEE5valueENS5_IPiEEE4typeES8_SA_SA_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$i$i = 0, $$byval_copy2 = 0, $$byval_copy3 = 0, $$sroa$044$059 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $23 = 0, $24 = 0, $29 = 0, $30 = 0, $32 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $46 = 0, $47 = 0, $5 = 0, $51 = 0, $52 = 0, $56 = 0, $6 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy3 = sp + 40 | 0;
 $$byval_copy2 = sp + 36 | 0;
 $4 = sp + 32 | 0;
 $5 = sp + 28 | 0;
 $6 = sp + 8 | 0;
 $7 = sp + 4 | 0;
 $8 = sp;
 $9 = HEAP32[$0 >> 2] | 0;
 $10 = $9;
 $14 = $9 + ((HEAP32[$1 >> 2] | 0) - $10 >> 2 << 2) | 0;
 $15 = HEAP32[$2 >> 2] | 0;
 $16 = HEAP32[$3 >> 2] | 0;
 $17 = $16 - $15 | 0;
 $18 = $17 >> 2;
 L1 : do if (($17 | 0) > 0) {
  $20 = $0 + 8 | 0;
  $23 = HEAP32[$0 + 4 >> 2] | 0;
  $24 = $23;
  if (($18 | 0) > ((HEAP32[$20 >> 2] | 0) - $24 >> 2 | 0)) {
   $46 = ($24 - $10 >> 2) + $18 | 0;
   $47 = __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($0) | 0;
   if ($47 >>> 0 < $46 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
    $51 = HEAP32[$0 >> 2] | 0;
    $52 = (HEAP32[$20 >> 2] | 0) - $51 | 0;
    $56 = $52 >> 1;
    __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_($6, $52 >> 2 >>> 0 < $47 >>> 1 >>> 0 ? ($56 >>> 0 < $46 >>> 0 ? $46 : $56) : $47, $14 - $51 >> 2, $0 + 8 | 0);
    HEAP32[$7 >> 2] = $15;
    HEAP32[$8 >> 2] = $16;
    HEAP32[$$byval_copy2 >> 2] = HEAP32[$7 >> 2];
    HEAP32[$$byval_copy3 >> 2] = HEAP32[$8 >> 2];
    __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endINS_11__wrap_iterIPKiEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_($6, $$byval_copy2, $$byval_copy3);
    $61 = __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EEPi($0, $6, $14) | 0;
    __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev($6);
    $$0 = $61;
    break;
   }
  }
  $29 = $24 - $14 | 0;
  $30 = $29 >> 2;
  $32 = $15;
  $34 = $32 + ($30 << 2) | 0;
  if (($18 | 0) > ($30 | 0)) {
   HEAP32[$4 >> 2] = $34;
   HEAP32[$5 >> 2] = $16;
   HEAP32[$$byval_copy2 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$$byval_copy3 >> 2] = HEAP32[$5 >> 2];
   __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endINS_11__wrap_iterIPKiEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m($0, $$byval_copy2, $$byval_copy3, $18 - $30 | 0);
   if (($29 | 0) > 0) $$sroa$044$059 = $34; else {
    $$0 = $14;
    break;
   }
  } else $$sroa$044$059 = $16;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE12__move_rangeEPiS4_S4_($0, $14, $23, $14 + ($18 << 2) | 0);
  $38 = $$sroa$044$059;
  $$0$i$i = $14;
  $39 = $32;
  while (1) {
   if (($39 | 0) == ($38 | 0)) {
    $$0 = $14;
    break L1;
   }
   HEAP32[$$0$i$i >> 2] = HEAP32[$39 >> 2];
   $$0$i$i = $$0$i$i + 4 | 0;
   $39 = $39 + 4 | 0;
  }
 } else $$0 = $14; while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision11PartialSortIfEET_PS1_ii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$044 = 0, $$047 = 0, $$049 = 0, $$1 = 0, $$145 = 0, $$2 = 0, $$246 = 0, $10 = 0, $15 = 0, $19 = 0, $26 = 0, $3 = 0, $31 = 0, $35 = 0, $36 = 0, $38 = 0, $40 = 0.0, $41 = 0, $42 = 0.0, $44 = 0, $45 = 0, $46 = 0.0, $48 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if (($1 | 0) <= 0) {
  $10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31767) | 0, 31796) | 0, 33528) | 0, 53) | 0, 33535) | 0, 31905) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $10 + (HEAP32[(HEAP32[$10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 28 >> 2] & 63]($15, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($10, $19) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($10) | 0;
  _abort();
 }
 if (($2 | 0) <= 0) {
  $26 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 31924) | 0, 31796) | 0, 33528) | 0, 54) | 0, 33535) | 0, 31953) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $26 + (HEAP32[(HEAP32[$26 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $31 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $35 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$31 >> 2] | 0) + 28 >> 2] & 63]($31, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($26, $35) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($26) | 0;
  _abort();
 }
 $36 = $2 + -1 | 0;
 $38 = $0 + ($36 << 2) | 0;
 $$047 = $1 + -1 | 0;
 $$049 = 0;
 while (1) {
  $40 = +HEAPF32[$38 >> 2];
  if (($$049 | 0) >= ($$047 | 0)) break;
  $$0 = $$049;
  $$044 = $$047;
  while (1) {
   $$1 = $$0;
   while (1) {
    $41 = $0 + ($$1 << 2) | 0;
    $42 = +HEAPF32[$41 >> 2];
    $44 = $$1 + 1 | 0;
    if ($42 < $40) $$1 = $44; else break;
   }
   $$145 = $$044;
   while (1) {
    $45 = $0 + ($$145 << 2) | 0;
    $46 = +HEAPF32[$45 >> 2];
    $48 = $$145 + -1 | 0;
    if ($40 < $46) $$145 = $48; else break;
   }
   if (($$1 | 0) > ($$145 | 0)) {
    $$2 = $$1;
    $$246 = $$145;
   } else {
    HEAPF32[$41 >> 2] = $46;
    HEAPF32[$45 >> 2] = $42;
    $$2 = $44;
    $$246 = $48;
   }
   if (($$2 | 0) > ($$246 | 0)) break; else {
    $$0 = $$2;
    $$044 = $$246;
   }
  }
  $$047 = ($$2 | 0) < ($2 | 0) ? $$047 : $$246;
  $$049 = ($$246 | 0) < ($36 | 0) ? $$2 : $$049;
 }
 STACKTOP = sp;
 return +$40;
}

function _read_markers($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $13 = 0, $2 = 0, $22 = 0, $29 = 0, $3 = 0, $52 = 0, $60 = 0, label = 0;
 $1 = $0 + 416 | 0;
 $2 = $0 + 440 | 0;
 $3 = HEAP32[$1 >> 2] | 0;
 L1 : while (1) {
  if (!$3) {
   if (!(HEAP32[(HEAP32[$2 >> 2] | 0) + 12 >> 2] | 0)) {
    if (!(_first_marker($0) | 0)) {
     $$0 = 0;
     break;
    }
   } else if (!(_next_marker($0) | 0)) {
    $$0 = 0;
    break;
   }
   $13 = HEAP32[$1 >> 2] | 0;
  } else $13 = $3;
  do switch ($13 | 0) {
  case 218:
   {
    label = 14;
    break L1;
    break;
   }
  case 217:
   {
    label = 16;
    break L1;
    break;
   }
  case 216:
   {
    _get_soi($0);
    break;
   }
  case 193:
  case 192:
   {
    if (!(_get_sof($0, 0, 0) | 0)) {
     $$0 = 0;
     break L1;
    }
    break;
   }
  case 194:
   {
    if (!(_get_sof($0, 1, 0) | 0)) {
     $$0 = 0;
     break L1;
    }
    break;
   }
  case 201:
   {
    if (!(_get_sof($0, 0, 1) | 0)) {
     $$0 = 0;
     break L1;
    }
    break;
   }
  case 202:
   {
    if (!(_get_sof($0, 1, 1) | 0)) {
     $$0 = 0;
     break L1;
    }
    break;
   }
  case 207:
  case 206:
  case 205:
  case 203:
  case 200:
  case 199:
  case 198:
  case 197:
  case 195:
   {
    $22 = HEAP32[$0 >> 2] | 0;
    HEAP32[$22 + 20 >> 2] = 60;
    HEAP32[$22 + 24 >> 2] = $13;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
    break;
   }
  case 204:
   {
    if (!(_skip_variable($0) | 0)) {
     $$0 = 0;
     break L1;
    }
    break;
   }
  case 196:
   {
    if (!(_get_dht($0) | 0)) {
     $$0 = 0;
     break L1;
    }
    break;
   }
  case 219:
   {
    if (!(_get_dqt($0) | 0)) {
     $$0 = 0;
     break L1;
    }
    break;
   }
  case 221:
   {
    if (!(_get_dri($0) | 0)) {
     $$0 = 0;
     break L1;
    }
    break;
   }
  case 239:
  case 238:
  case 237:
  case 236:
  case 235:
  case 234:
  case 233:
  case 232:
  case 231:
  case 230:
  case 229:
  case 228:
  case 227:
  case 226:
  case 225:
  case 224:
   {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 32 + ($13 + -224 << 2) >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     break L1;
    }
    break;
   }
  case 254:
   {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] & 127]($0) | 0)) {
     $$0 = 0;
     break L1;
    }
    break;
   }
  case 1:
  case 215:
  case 214:
  case 213:
  case 212:
  case 211:
  case 210:
  case 209:
  case 208:
   {
    $52 = HEAP32[$0 >> 2] | 0;
    HEAP32[$52 + 20 >> 2] = 92;
    HEAP32[$52 + 24 >> 2] = $13;
    FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
    break;
   }
  case 220:
   {
    if (!(_skip_variable($0) | 0)) {
     $$0 = 0;
     break L1;
    }
    break;
   }
  default:
   {
    $60 = HEAP32[$0 >> 2] | 0;
    HEAP32[$60 + 20 >> 2] = 68;
    HEAP32[$60 + 24 >> 2] = $13;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
  } while (0);
  HEAP32[$1 >> 2] = 0;
  $3 = 0;
 }
 if ((label | 0) == 14) if (!(_get_sos($0) | 0)) $$0 = 0; else {
  HEAP32[$1 >> 2] = 0;
  $$0 = 1;
 } else if ((label | 0) == 16) {
  $29 = HEAP32[$0 >> 2] | 0;
  HEAP32[$29 + 20 >> 2] = 85;
  FUNCTION_TABLE_vii[HEAP32[$29 + 4 >> 2] & 63]($0, 1);
  HEAP32[$1 >> 2] = 0;
  $$0 = 2;
 }
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_123parse_prefix_expressionINS0_2DbEEEPKcS4_S4_RKNT_6StringERS5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i20 = 0, $$018 = 0, $12 = 0, $18 = 0, $19 = 0, $32 = 0, $33 = 0, $34 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $4 = sp + 48 | 0;
 $5 = sp + 36 | 0;
 $6 = sp + 24 | 0;
 $7 = sp + 12 | 0;
 $8 = sp;
 $9 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $3) | 0;
 if (($9 | 0) == ($0 | 0)) $$018 = $0; else {
  $12 = $3 + 4 | 0;
  if ((HEAP32[$3 >> 2] | 0) == (HEAP32[$12 >> 2] | 0)) $$018 = $0; else {
   __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($7, $2, 49631);
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($8, (HEAP32[$12 >> 2] | 0) + -24 | 0);
   $18 = HEAP8[$8 + 11 >> 0] | 0;
   $19 = $18 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($7, $19 ? HEAP32[$8 >> 2] | 0 : $8, $19 ? HEAP32[$8 + 4 >> 2] | 0 : $18 & 255) | 0;
   HEAP32[$6 >> 2] = HEAP32[$7 >> 2];
   HEAP32[$6 + 4 >> 2] = HEAP32[$7 + 4 >> 2];
   HEAP32[$6 + 8 >> 2] = HEAP32[$7 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$7 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($6, 49629) | 0;
   HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
   $$0$i$i$i20 = 0;
   while (1) {
    if (($$0$i$i$i20 | 0) == 3) break;
    HEAP32[$6 + ($$0$i$i$i20 << 2) >> 2] = 0;
    $$0$i$i$i20 = $$0$i$i$i20 + 1 | 0;
   }
   $32 = HEAP32[$12 >> 2] | 0;
   $33 = $32 + -24 | 0;
   $34 = $33 + 11 | 0;
   if ((HEAP8[$34 >> 0] | 0) < 0) {
    $37 = HEAP32[$33 >> 2] | 0;
    HEAP8[$4 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($37, $4);
    HEAP32[$32 + -20 >> 2] = 0;
   } else {
    HEAP8[$4 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($33, $4);
    HEAP8[$34 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($33);
   HEAP32[$33 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$33 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$33 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   $$0$i$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i$i | 0) == 3) break;
    HEAP32[$5 + ($$0$i$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($8);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($7);
   $$018 = $9;
  }
 }
 STACKTOP = sp;
 return $$018 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$039$0 = 0, $$sroa$046$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(352);
 $$byval_copy = sp + 344 | 0;
 $vararg_buffer9 = sp + 320 | 0;
 $vararg_buffer5 = sp + 304 | 0;
 $vararg_buffer2 = sp + 296 | 0;
 $vararg_buffer = sp + 280 | 0;
 $5 = sp + 272 | 0;
 $6 = sp + 240 | 0;
 $7 = sp + 340 | 0;
 $8 = sp;
 $9 = sp + 336 | 0;
 $10 = sp + 332 | 0;
 $11 = sp + 328 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 46970, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$046$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$046$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 do if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$039$0 = 1;
  $44 = 0;
 } else {
  $38 = _malloc($$2 << 3) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$039$0 = 0;
   $44 = $38;
   break;
  }
 } while (0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 HEAP32[$1 >> 2] = $43;
 if (!$$sroa$039$0) _free($44);
 _free($$sroa$046$0);
 STACKTOP = sp;
 return $43 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$039$0 = 0, $$sroa$046$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 352 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(352);
 $$byval_copy = sp + 344 | 0;
 $vararg_buffer9 = sp + 320 | 0;
 $vararg_buffer5 = sp + 304 | 0;
 $vararg_buffer2 = sp + 296 | 0;
 $vararg_buffer = sp + 280 | 0;
 $5 = sp + 272 | 0;
 $6 = sp + 240 | 0;
 $7 = sp + 340 | 0;
 $8 = sp;
 $9 = sp + 336 | 0;
 $10 = sp + 332 | 0;
 $11 = sp + 328 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 58334, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$046$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$046$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 do if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$039$0 = 1;
  $44 = 0;
 } else {
  $38 = _malloc($$2 << 3) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$039$0 = 0;
   $44 = $38;
   break;
  }
 } while (0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE23__widen_and_group_floatEPcS2_S2_PwRS3_S4_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 HEAP32[$1 >> 2] = $43;
 if (!$$sroa$039$0) _free($44);
 _free($$sroa$046$0);
 STACKTOP = sp;
 return $43 | 0;
}

function _master_selection($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$pre$phiZ2D = 0, $102 = 0, $108 = 0, $2 = 0, $21 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $64 = 0, $7 = 0, $70 = 0, $78 = 0, $8 = 0, $89 = 0;
 $2 = HEAP32[$0 + 420 >> 2] | 0;
 _jpeg_calc_output_dimensions($0);
 _prepare_range_limit_table($0);
 $3 = $0 + 120 | 0;
 $4 = $2 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 $5 = _use_merged_upsample($0) | 0;
 $6 = $2 + 16 | 0;
 HEAP32[$6 >> 2] = $5;
 $7 = $2 + 20 | 0;
 HEAP32[$7 >> 2] = 0;
 $8 = $2 + 24 | 0;
 HEAP32[$8 >> 2] = 0;
 do if (!(HEAP32[$0 + 84 >> 2] | 0)) {
  HEAP32[$0 + 100 >> 2] = 0;
  HEAP32[$0 + 104 >> 2] = 0;
  HEAP32[$0 + 108 >> 2] = 0;
  $$pre$phiZ2D = $0 + 68 | 0;
 } else {
  if (!(HEAP32[$0 + 64 >> 2] | 0)) {
   HEAP32[$0 + 100 >> 2] = 0;
   HEAP32[$0 + 104 >> 2] = 0;
   HEAP32[$0 + 108 >> 2] = 0;
  }
  $21 = $0 + 68 | 0;
  if (HEAP32[$21 >> 2] | 0) {
   $24 = HEAP32[$0 >> 2] | 0;
   HEAP32[$24 + 20 >> 2] = 47;
   FUNCTION_TABLE_vi[HEAP32[$24 >> 2] & 255]($0);
  }
  do if ((HEAP32[$3 >> 2] | 0) == 3) {
   if (HEAP32[$0 + 136 >> 2] | 0) {
    HEAP32[$0 + 104 >> 2] = 1;
    break;
   }
   if (!(HEAP32[$0 + 92 >> 2] | 0)) {
    HEAP32[$0 + 100 >> 2] = 1;
    break;
   } else {
    HEAP32[$0 + 108 >> 2] = 1;
    break;
   }
  } else {
   HEAP32[$0 + 100 >> 2] = 1;
   HEAP32[$0 + 104 >> 2] = 0;
   HEAP32[$0 + 108 >> 2] = 0;
   HEAP32[$0 + 136 >> 2] = 0;
  } while (0);
  if (HEAP32[$0 + 100 >> 2] | 0) {
   _jinit_1pass_quantizer($0);
   HEAP32[$7 >> 2] = HEAP32[$0 + 460 >> 2];
  }
  if (!(HEAP32[$0 + 108 >> 2] | 0)) if (!(HEAP32[$0 + 104 >> 2] | 0)) {
   $$pre$phiZ2D = $21;
   break;
  }
  _jinit_2pass_quantizer($0);
  HEAP32[$8 >> 2] = HEAP32[$0 + 460 >> 2];
  $$pre$phiZ2D = $21;
 } while (0);
 if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) {
  if (!(HEAP32[$6 >> 2] | 0)) {
   _jinit_color_deconverter($0);
   _jinit_upsampler($0);
  } else _jinit_merged_upsampler($0);
  _jinit_d_post_controller($0, HEAP32[$0 + 108 >> 2] | 0);
 }
 _jinit_inverse_dct($0);
 do if (!(HEAP32[$0 + 224 >> 2] | 0)) if (!(HEAP32[$0 + 220 >> 2] | 0)) {
  _jinit_huff_decoder($0);
  break;
 } else {
  _jinit_phuff_decoder($0);
  break;
 } else {
  $64 = HEAP32[$0 >> 2] | 0;
  HEAP32[$64 + 20 >> 2] = 1;
  FUNCTION_TABLE_vi[HEAP32[$64 >> 2] & 255]($0);
 } while (0);
 $70 = $0 + 436 | 0;
 if (!(HEAP32[(HEAP32[$70 >> 2] | 0) + 16 >> 2] | 0)) $78 = (HEAP32[$0 + 64 >> 2] | 0) != 0 & 1; else $78 = 1;
 _jinit_d_coef_controller($0, $78);
 if (!(HEAP32[$$pre$phiZ2D >> 2] | 0)) _jinit_d_main_controller($0, 0);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 24 >> 2] & 255]($0);
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$70 >> 2] | 0) + 8 >> 2] & 255]($0);
 $89 = HEAP32[$0 + 8 >> 2] | 0;
 if ($89 | 0) if (!(HEAP32[$0 + 64 >> 2] | 0)) if (HEAP32[(HEAP32[$70 >> 2] | 0) + 16 >> 2] | 0) {
  $102 = HEAP32[$0 + 36 >> 2] | 0;
  $$0 = (HEAP32[$0 + 220 >> 2] | 0) == 0 ? $102 : ($102 * 3 | 0) + 2 | 0;
  HEAP32[$89 + 4 >> 2] = 0;
  $108 = Math_imul($$0, HEAP32[$0 + 320 >> 2] | 0) | 0;
  HEAP32[$89 + 8 >> 2] = $108;
  HEAP32[$89 + 12 >> 2] = 0;
  HEAP32[$89 + 16 >> 2] = (HEAP32[$0 + 108 >> 2] | 0) == 0 ? 2 : 3;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 1;
 }
 return;
}

function _arParamIdeal2Observ($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $10 = 0.0, $100 = 0.0, $101 = 0, $104 = 0.0, $110 = 0.0, $12 = 0.0, $122 = 0.0, $128 = 0.0, $131 = 0.0, $132 = 0.0, $133 = 0, $136 = 0.0, $14 = 0.0, $147 = 0.0, $16 = 0.0, $18 = 0.0, $20 = 0.0, $22 = 0.0, $25 = 0.0, $28 = 0.0, $31 = 0.0, $36 = 0.0, $61 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0, $69 = 0.0, $77 = 0.0, $89 = 0.0, $96 = 0.0, $99 = 0.0, $storemerge$sink = 0.0, label = 0;
 L1 : do switch ($5 | 0) {
 case 4:
  {
   $10 = +HEAPF64[$0 + 16 >> 3];
   $12 = +HEAPF64[$0 + 24 >> 3];
   $14 = +HEAPF64[$0 + 32 >> 3];
   $16 = +HEAPF64[$0 + 40 >> 3];
   $18 = +HEAPF64[$0 + 48 >> 3];
   $20 = +HEAPF64[$0 + 56 >> 3];
   $22 = +HEAPF64[$0 + 64 >> 3];
   $25 = ($1 - $18) * $22 / $14;
   $28 = ($2 - $20) * $22 / $16;
   $31 = $25 * $25 + $28 * $28;
   $36 = +HEAPF64[$0 >> 3] * $31 + 1.0 + $31 * (+HEAPF64[$0 + 8 >> 3] * $31);
   HEAPF64[$3 >> 3] = $18 + $14 * ($12 * ($31 + $25 * ($25 * 2.0)) + ($28 * ($10 * 2.0 * $25) + $25 * $36));
   $storemerge$sink = $20 + $16 * ($28 * ($12 * 2.0 * $25) + ($10 * ($31 + $28 * ($28 * 2.0)) + $28 * $36));
   label = 12;
   break;
  }
 case 3:
  {
   $61 = +HEAPF64[$0 >> 3];
   $64 = +HEAPF64[$0 + 16 >> 3];
   $65 = ($1 - $61) * $64;
   $66 = $0 + 8 | 0;
   $69 = $64 * ($2 - +HEAPF64[$66 >> 3]);
   if ($65 == 0.0 & $69 == 0.0) {
    HEAPF64[$3 >> 3] = $61;
    $storemerge$sink = +HEAPF64[$66 >> 3];
    label = 12;
    break L1;
   } else {
    $77 = $65 * $65 + $69 * $69;
    $89 = 1.0 - $77 * (+HEAPF64[$0 + 32 >> 3] / 1.0e8) - $77 * ($77 * (+HEAPF64[$0 + 40 >> 3] / 1.0e8 / 1.0e5));
    HEAPF64[$3 >> 3] = $61 + +HEAPF64[$0 + 24 >> 3] * ($65 * $89);
    $storemerge$sink = +HEAPF64[$66 >> 3] + $69 * $89;
    label = 12;
    break L1;
   }
   break;
  }
 case 2:
  {
   $96 = +HEAPF64[$0 >> 3];
   $99 = +HEAPF64[$0 + 16 >> 3];
   $100 = ($1 - $96) * $99;
   $101 = $0 + 8 | 0;
   $104 = $99 * ($2 - +HEAPF64[$101 >> 3]);
   if ($100 == 0.0 & $104 == 0.0) {
    HEAPF64[$3 >> 3] = $96;
    $storemerge$sink = +HEAPF64[$101 >> 3];
    label = 12;
    break L1;
   } else {
    $110 = $100 * $100 + $104 * $104;
    $122 = 1.0 - $110 * (+HEAPF64[$0 + 24 >> 3] / 1.0e8) - $110 * ($110 * (+HEAPF64[$0 + 32 >> 3] / 1.0e8 / 1.0e5));
    HEAPF64[$3 >> 3] = $96 + $100 * $122;
    $storemerge$sink = +HEAPF64[$101 >> 3] + $104 * $122;
    label = 12;
    break L1;
   }
   break;
  }
 case 1:
  {
   $128 = +HEAPF64[$0 >> 3];
   $131 = +HEAPF64[$0 + 16 >> 3];
   $132 = ($1 - $128) * $131;
   $133 = $0 + 8 | 0;
   $136 = $131 * ($2 - +HEAPF64[$133 >> 3]);
   if ($132 == 0.0 & $136 == 0.0) {
    HEAPF64[$3 >> 3] = $128;
    $storemerge$sink = +HEAPF64[$133 >> 3];
    label = 12;
    break L1;
   } else {
    $147 = 1.0 - ($132 * $132 + $136 * $136) * (+HEAPF64[$0 + 24 >> 3] / 1.0e8);
    HEAPF64[$3 >> 3] = $128 + $132 * $147;
    $storemerge$sink = +HEAPF64[$133 >> 3] + $136 * $147;
    label = 12;
    break L1;
   }
   break;
  }
 default:
  $$0 = -1;
 } while (0);
 if ((label | 0) == 12) {
  HEAPF64[$4 >> 3] = $storemerge$sink;
  $$0 = 0;
 }
 return $$0 | 0;
}

function _jinit_color_deconverter($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$sink = 0, $11 = 0, $17 = 0, $23 = 0, $29 = 0, $33 = 0, $38 = 0, $39 = 0, $4 = 0, $44 = 0, $52 = 0, $59 = 0, $6 = 0, $68 = 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, 24) | 0;
 HEAP32[$0 + 456 >> 2] = $4;
 HEAP32[$4 >> 2] = 126;
 $6 = $0 + 40 | 0;
 switch (HEAP32[$6 >> 2] | 0) {
 case 1:
  {
   if ((HEAP32[$0 + 36 >> 2] | 0) != 1) {
    $11 = HEAP32[$0 >> 2] | 0;
    HEAP32[$11 + 20 >> 2] = 10;
    FUNCTION_TABLE_vi[HEAP32[$11 >> 2] & 255]($0);
   }
   break;
  }
 case 3:
 case 2:
  {
   if ((HEAP32[$0 + 36 >> 2] | 0) != 3) {
    $17 = HEAP32[$0 >> 2] | 0;
    HEAP32[$17 + 20 >> 2] = 10;
    FUNCTION_TABLE_vi[HEAP32[$17 >> 2] & 255]($0);
   }
   break;
  }
 case 5:
 case 4:
  {
   if ((HEAP32[$0 + 36 >> 2] | 0) != 4) {
    $23 = HEAP32[$0 >> 2] | 0;
    HEAP32[$23 + 20 >> 2] = 10;
    FUNCTION_TABLE_vi[HEAP32[$23 >> 2] & 255]($0);
   }
   break;
  }
 default:
  if ((HEAP32[$0 + 36 >> 2] | 0) < 1) {
   $29 = HEAP32[$0 >> 2] | 0;
   HEAP32[$29 + 20 >> 2] = 10;
   FUNCTION_TABLE_vi[HEAP32[$29 >> 2] & 255]($0);
  }
 }
 $33 = HEAP32[$0 + 44 >> 2] | 0;
 L11 : do switch ($33 | 0) {
 case 1:
  {
   HEAP32[$0 + 120 >> 2] = 1;
   switch (HEAP32[$6 >> 2] | 0) {
   case 3:
   case 1:
    break;
   default:
    {
     $44 = HEAP32[$0 >> 2] | 0;
     HEAP32[$44 + 20 >> 2] = 27;
     FUNCTION_TABLE_vi[HEAP32[$44 >> 2] & 255]($0);
     break L11;
    }
   }
   HEAP32[$4 + 4 >> 2] = 6;
   $38 = HEAP32[$0 + 36 >> 2] | 0;
   $39 = $0 + 216 | 0;
   $$0 = 1;
   while (1) {
    if (($$0 | 0) >= ($38 | 0)) break L11;
    HEAP32[(HEAP32[$39 >> 2] | 0) + ($$0 * 84 | 0) + 48 >> 2] = 0;
    $$0 = $$0 + 1 | 0;
   }
   break;
  }
 case 2:
  {
   HEAP32[$0 + 120 >> 2] = 3;
   switch (HEAP32[$6 >> 2] | 0) {
   case 3:
    {
     HEAP32[$4 + 4 >> 2] = 7;
     _build_ycc_rgb_table($0);
     break L11;
     break;
    }
   case 1:
    {
     HEAP32[$4 + 4 >> 2] = 8;
     break L11;
     break;
    }
   case 2:
    {
     HEAP32[$4 + 4 >> 2] = 9;
     break L11;
     break;
    }
   default:
    {
     $52 = HEAP32[$0 >> 2] | 0;
     HEAP32[$52 + 20 >> 2] = 27;
     FUNCTION_TABLE_vi[HEAP32[$52 >> 2] & 255]($0);
     break L11;
    }
   }
   break;
  }
 case 4:
  {
   HEAP32[$0 + 120 >> 2] = 4;
   switch (HEAP32[$6 >> 2] | 0) {
   case 5:
    {
     HEAP32[$4 + 4 >> 2] = 10;
     _build_ycc_rgb_table($0);
     break L11;
     break;
    }
   case 4:
    {
     HEAP32[$4 + 4 >> 2] = 9;
     break L11;
     break;
    }
   default:
    {
     $59 = HEAP32[$0 >> 2] | 0;
     HEAP32[$59 + 20 >> 2] = 27;
     FUNCTION_TABLE_vi[HEAP32[$59 >> 2] & 255]($0);
     break L11;
    }
   }
   break;
  }
 default:
  if (($33 | 0) == (HEAP32[$6 >> 2] | 0)) {
   HEAP32[$0 + 120 >> 2] = HEAP32[$0 + 36 >> 2];
   HEAP32[$4 + 4 >> 2] = 9;
   break L11;
  } else {
   $68 = HEAP32[$0 >> 2] | 0;
   HEAP32[$68 + 20 >> 2] = 27;
   FUNCTION_TABLE_vi[HEAP32[$68 >> 2] & 255]($0);
   break L11;
  }
 } while (0);
 if (!(HEAP32[$0 + 84 >> 2] | 0)) $$sink = HEAP32[$0 + 120 >> 2] | 0; else $$sink = 1;
 HEAP32[$0 + 124 >> 2] = $$sink;
 return;
}

function __ZNSt3__29__num_getIwE19__stage2_float_loopEwRbRcPcRS4_wwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSE_RjPw($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = $10 | 0;
 $11 = $11 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$2 = 0, $15 = 0, $18 = 0, $25 = 0, $30 = 0, $34 = 0, $43 = 0, $48 = 0, $50 = 0, $56 = 0, $60 = 0, $61 = 0, $65 = 0, $75 = 0, $84 = 0, $91 = 0, $96 = 0, $98 = 0;
 L1 : do if (($0 | 0) == ($5 | 0)) if (!(HEAP8[$1 >> 0] | 0)) $$2 = -1; else {
  HEAP8[$1 >> 0] = 0;
  $15 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $15 + 1;
  HEAP8[$15 >> 0] = 46;
  $18 = HEAP8[$7 + 11 >> 0] | 0;
  if (!(($18 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $18 & 255) | 0)) $$2 = 0; else {
   $25 = HEAP32[$9 >> 2] | 0;
   if (($25 - $8 | 0) < 160) {
    $30 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $25 + 4;
    HEAP32[$25 >> 2] = $30;
    $$2 = 0;
   } else $$2 = 0;
  }
 } else {
  if (($0 | 0) == ($6 | 0)) {
   $34 = HEAP8[$7 + 11 >> 0] | 0;
   if (($34 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $34 & 255) | 0) {
    if (!(HEAP8[$1 >> 0] | 0)) {
     $$2 = -1;
     break;
    }
    $43 = HEAP32[$9 >> 2] | 0;
    if (($43 - $8 | 0) >= 160) {
     $$2 = 0;
     break;
    }
    $48 = HEAP32[$10 >> 2] | 0;
    HEAP32[$9 >> 2] = $43 + 4;
    HEAP32[$43 >> 2] = $48;
    HEAP32[$10 >> 2] = 0;
    $$2 = 0;
    break;
   }
  }
  $50 = $11 + 128 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $11 + ($$0$i$idx << 2) | 0;
   if (($$0$i$idx | 0) == 32) {
    $$0$lcssa$i = $50;
    break;
   }
   if ((HEAP32[$$0$i$ptr >> 2] | 0) == ($0 | 0)) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $56 = $$0$lcssa$i - $11 | 0;
  if (($56 | 0) > 124) $$2 = -1; else {
   $60 = HEAP8[10736 + ($56 >> 2) >> 0] | 0;
   $61 = $56 + -88 | 0;
   switch ($61 >>> 2 | $61 << 30 | 0) {
   case 2:
   case 3:
    {
     $65 = HEAP32[$4 >> 2] | 0;
     if (($65 | 0) != ($3 | 0)) if ((HEAP8[$65 + -1 >> 0] & 95) != (HEAP8[$2 >> 0] & 127)) {
      $$2 = -1;
      break L1;
     }
     HEAP32[$4 >> 2] = $65 + 1;
     HEAP8[$65 >> 0] = $60;
     $$2 = 0;
     break L1;
     break;
    }
   case 1:
   case 0:
    {
     HEAP8[$2 >> 0] = 80;
     break;
    }
   default:
    {
     $75 = $60 & 95;
     if (($75 | 0) == (HEAP8[$2 >> 0] | 0)) {
      HEAP8[$2 >> 0] = $75 | 128;
      if (HEAP8[$1 >> 0] | 0) {
       HEAP8[$1 >> 0] = 0;
       $84 = HEAP8[$7 + 11 >> 0] | 0;
       if (($84 << 24 >> 24 < 0 ? HEAP32[$7 + 4 >> 2] | 0 : $84 & 255) | 0) {
        $91 = HEAP32[$9 >> 2] | 0;
        if (($91 - $8 | 0) < 160) {
         $96 = HEAP32[$10 >> 2] | 0;
         HEAP32[$9 >> 2] = $91 + 4;
         HEAP32[$91 >> 2] = $96;
        }
       }
      }
     }
    }
   }
   $98 = HEAP32[$4 >> 2] | 0;
   HEAP32[$4 >> 2] = $98 + 1;
   HEAP8[$98 >> 0] = $60;
   if (($56 | 0) > 84) $$2 = 0; else {
    HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
    $$2 = 0;
   }
  }
 } while (0);
 return $$2 | 0;
}

function _arGetMarkerInfo($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 $10 = +$10;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 var $$0 = 0, $$0113 = 0, $$1 = 0, $$sink = 0, $$sink118 = 0, $$sink119$in = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $42 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $14 = sp + 4 | 0;
 $15 = sp;
 $16 = $8 >>> 0 < 2;
 $17 = ($8 | 0) == 2;
 $$0 = 0;
 $$0113 = 0;
 while (1) {
  if (($$0 | 0) >= ($5 | 0)) break;
  HEAP32[$11 + ($$0113 << 8) >> 2] = HEAP32[$4 + ($$0 * 80048 | 0) >> 2];
  if ((_arParamObserv2IdealLTf($9, +HEAPF64[$4 + ($$0 * 80048 | 0) + 8 >> 3], +HEAPF64[$4 + ($$0 * 80048 | 0) + 16 >> 3], $14, $15) | 0) < 0) $$1 = $$0113; else {
   HEAPF64[$11 + ($$0113 << 8) + 56 >> 3] = +HEAPF32[$14 >> 2];
   HEAPF64[$11 + ($$0113 << 8) + 64 >> 3] = +HEAPF32[$15 >> 2];
   $42 = $11 + ($$0113 << 8) + 168 | 0;
   if ((_arGetLine($4 + ($$0 * 80048 | 0) + 28 | 0, $4 + ($$0 * 80048 | 0) + 40028 | 0, HEAP32[$4 + ($$0 * 80048 | 0) + 24 >> 2] | 0, $4 + ($$0 * 80048 | 0) + 80028 | 0, $9, $11 + ($$0113 << 8) + 72 | 0, $42) | 0) < 0) $$1 = $$0113; else {
    $45 = $11 + ($$0113 << 8) + 8 | 0;
    $46 = $11 + ($$0113 << 8) + 20 | 0;
    $47 = $11 + ($$0113 << 8) + 40 | 0;
    $48 = $11 + ($$0113 << 8) + 12 | 0;
    $49 = $11 + ($$0113 << 8) + 24 | 0;
    $50 = $11 + ($$0113 << 8) + 48 | 0;
    $53 = _arPattGetIDGlobal($6, $7, $8, $0, $1, $2, $3, $9, $42, $10, $45, $46, $47, $48, $49, $50, $13, $11 + ($$0113 << 8) + 240 | 0, $11 + ($$0113 << 8) + 248 | 0) | 0;
    switch ($53 | 0) {
    case 0:
     {
      $$sink = $53;
      label = 12;
      break;
     }
    case -1:
     {
      $$sink = 2;
      label = 12;
      break;
     }
    case -2:
     {
      $$sink = 3;
      label = 12;
      break;
     }
    case -3:
     {
      $$sink = 4;
      label = 12;
      break;
     }
    case -4:
     {
      $$sink = 5;
      label = 12;
      break;
     }
    case -5:
     {
      $$sink = 9;
      label = 12;
      break;
     }
    case -6:
     {
      $$sink = 1;
      label = 12;
      break;
     }
    default:
     {}
    }
    if ((label | 0) == 12) {
     label = 0;
     HEAP32[$11 + ($$0113 << 8) + 236 >> 2] = $$sink;
    }
    if ($16) {
     HEAP32[$11 + ($$0113 << 8) + 4 >> 2] = HEAP32[$45 >> 2];
     $$sink118 = $47;
     $$sink119$in = $46;
     label = 17;
    } else if ($17) {
     HEAP32[$11 + ($$0113 << 8) + 4 >> 2] = HEAP32[$48 >> 2];
     $$sink118 = $50;
     $$sink119$in = $49;
     label = 17;
    }
    if ((label | 0) == 17) {
     label = 0;
     HEAP32[$11 + ($$0113 << 8) + 16 >> 2] = HEAP32[$$sink119$in >> 2];
     HEAPF64[$11 + ($$0113 << 8) + 32 >> 3] = +HEAPF64[$$sink118 >> 3];
    }
    $$1 = $$0113 + 1 | 0;
   }
  }
  $$0 = $$0 + 1 | 0;
  $$0113 = $$1;
 }
 HEAP32[$12 >> 2] = $$0113;
 STACKTOP = sp;
 return 0;
}
function _jpeg_fill_bit_buffer($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$052 = 0, $$054 = 0, $$057 = 0, $$065 = 0, $$069 = 0, $$155 = 0, $$158 = 0, $$2 = 0, $$256 = 0, $$259 = 0, $$267 = 0, $$271 = 0, $$3 = 0, $$360 = 0, $$368 = 0, $$372 = 0, $$4 = 0, $$461 = 0, $$6 = 0, $$663 = 0, $$7 = 0, $$764 = 0, $12 = 0, $20 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $35 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $47 = 0, $5 = 0, $52 = 0, $6 = 0, $8 = 0, $9 = 0, label = 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $8 = HEAP32[$0 + 16 >> 2] | 0;
 $9 = $8 + 416 | 0;
 L1 : do if (!(HEAP32[$9 >> 2] | 0)) {
  $12 = $8 + 24 | 0;
  $$054 = $6;
  $$057 = $4;
  $$065 = $1;
  $$069 = $2;
  L3 : while (1) {
   if (($$069 | 0) >= 25) {
    $$368 = $$065;
    $$372 = $$069;
    $$7 = $$054;
    $$764 = $$057;
    label = 19;
    break L1;
   }
   if (!$$054) {
    if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($8) | 0)) {
     $$2 = 0;
     break L1;
    }
    $20 = HEAP32[$12 >> 2] | 0;
    $$155 = HEAP32[$20 + 4 >> 2] | 0;
    $$158 = HEAP32[$20 >> 2] | 0;
   } else {
    $$155 = $$054;
    $$158 = $$057;
   }
   $24 = $$155 + -1 | 0;
   $25 = $$158 + 1 | 0;
   $26 = HEAP8[$$158 >> 0] | 0;
   $27 = $26 & 255;
   L10 : do if ($26 << 24 >> 24 == -1) {
    $$256 = $24;
    $$259 = $25;
    while (1) {
     if (!$$256) {
      if (!(FUNCTION_TABLE_ii[HEAP32[(HEAP32[$12 >> 2] | 0) + 12 >> 2] & 127]($8) | 0)) {
       $$2 = 0;
       break L1;
      }
      $35 = HEAP32[$12 >> 2] | 0;
      $$3 = HEAP32[$35 + 4 >> 2] | 0;
      $$360 = HEAP32[$35 >> 2] | 0;
     } else {
      $$3 = $$256;
      $$360 = $$259;
     }
     $39 = $$3 + -1 | 0;
     $40 = $$360 + 1 | 0;
     $41 = HEAP8[$$360 >> 0] | 0;
     switch ($41 << 24 >> 24) {
     case 0:
      {
       $$052 = 255;
       $$4 = $39;
       $$461 = $40;
       break L10;
       break;
      }
     case -1:
      {
       $$256 = $39;
       $$259 = $40;
       break;
      }
     default:
      break L3;
     }
    }
   } else {
    $$052 = $27;
    $$4 = $24;
    $$461 = $25;
   } while (0);
   $$054 = $$4;
   $$057 = $$461;
   $$065 = $$052 | $$065 << 8;
   $$069 = $$069 + 8 | 0;
  }
  HEAP32[$9 >> 2] = $41 & 255;
  $$267 = $$065;
  $$271 = $$069;
  $$6 = $39;
  $$663 = $40;
  label = 15;
 } else {
  $$267 = $1;
  $$271 = $2;
  $$6 = $6;
  $$663 = $4;
  label = 15;
 } while (0);
 if ((label | 0) == 15) if (($$271 | 0) < ($3 | 0)) {
  $47 = $8 + 444 | 0;
  if (!(HEAP32[(HEAP32[$47 >> 2] | 0) + 8 >> 2] | 0)) {
   $52 = HEAP32[$8 >> 2] | 0;
   HEAP32[$52 + 20 >> 2] = 117;
   FUNCTION_TABLE_vii[HEAP32[$52 + 4 >> 2] & 63]($8, -1);
   HEAP32[(HEAP32[$47 >> 2] | 0) + 8 >> 2] = 1;
  }
  $$368 = $$267 << 25 - $$271;
  $$372 = 25;
  $$7 = $$6;
  $$764 = $$663;
  label = 19;
 } else {
  $$368 = $$267;
  $$372 = $$271;
  $$7 = $$6;
  $$764 = $$663;
  label = 19;
 }
 if ((label | 0) == 19) {
  HEAP32[$0 >> 2] = $$764;
  HEAP32[$5 >> 2] = $$7;
  HEAP32[$0 + 8 >> 2] = $$368;
  HEAP32[$0 + 12 >> 2] = $$372;
  $$2 = 1;
 }
 return $$2 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$041$0 = 0, $$sroa$048$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 $$byval_copy = sp + 168 | 0;
 $vararg_buffer9 = sp + 144 | 0;
 $vararg_buffer5 = sp + 128 | 0;
 $vararg_buffer2 = sp + 120 | 0;
 $vararg_buffer = sp + 104 | 0;
 $5 = sp + 96 | 0;
 $6 = sp + 64 | 0;
 $7 = sp + 164 | 0;
 $8 = sp;
 $9 = sp + 160 | 0;
 $10 = sp + 156 | 0;
 $11 = sp + 152 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 46970, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$048$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$048$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$041$0 = 0;
 } else {
  $38 = _malloc($$2 << 1) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$041$0 = $38;
  }
 }
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 _free($$sroa$041$0);
 _free($$sroa$048$0);
 STACKTOP = sp;
 return $43 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 var $$0 = 0, $$037 = 0, $$1 = 0, $$2 = 0, $$byval_copy = 0, $$sroa$041$0 = 0, $$sroa$048$0 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $20 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 176 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(176);
 $$byval_copy = sp + 168 | 0;
 $vararg_buffer9 = sp + 144 | 0;
 $vararg_buffer5 = sp + 128 | 0;
 $vararg_buffer2 = sp + 120 | 0;
 $vararg_buffer = sp + 104 | 0;
 $5 = sp + 96 | 0;
 $6 = sp + 64 | 0;
 $7 = sp + 164 | 0;
 $8 = sp;
 $9 = sp + 160 | 0;
 $10 = sp + 156 | 0;
 $11 = sp + 152 | 0;
 $12 = $5;
 HEAP32[$12 >> 2] = 37;
 HEAP32[$12 + 4 >> 2] = 0;
 $19 = __ZNSt3__214__num_put_base14__format_floatEPcPKcj($5 + 1 | 0, 58334, HEAP32[$2 + 4 >> 2] | 0) | 0;
 HEAP32[$7 >> 2] = $6;
 $20 = __ZNSt3__26__clocEv() | 0;
 if ($19) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$2 + 8 >> 2];
  HEAPF64[$vararg_buffer + 8 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer) | 0;
 } else {
  HEAPF64[$vararg_buffer2 >> 3] = $4;
  $$0 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 30, $20, $5, $vararg_buffer2) | 0;
 }
 if (($$0 | 0) > 29) {
  $26 = __ZNSt3__26__clocEv() | 0;
  if ($19) {
   HEAP32[$vararg_buffer5 >> 2] = HEAP32[$2 + 8 >> 2];
   HEAPF64[$vararg_buffer5 + 8 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer5) | 0;
  } else {
   HEAPF64[$vararg_buffer9 >> 3] = $4;
   $$1 = __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($7, $26, $5, $vararg_buffer9) | 0;
  }
  $31 = HEAP32[$7 >> 2] | 0;
  if (!$31) __ZSt17__throw_bad_allocv(); else {
   $$2 = $$1;
   $$sroa$048$0 = $31;
   $34 = $31;
  }
 } else {
  $$2 = $$0;
  $$sroa$048$0 = 0;
  $34 = HEAP32[$7 >> 2] | 0;
 }
 $33 = $34 + $$2 | 0;
 $35 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($34, $33, $2) | 0;
 if (($34 | 0) == ($6 | 0)) {
  $$037 = $8;
  $$sroa$041$0 = 0;
 } else {
  $38 = _malloc($$2 << 1) | 0;
  if (!$38) __ZSt17__throw_bad_allocv(); else {
   $$037 = $38;
   $$sroa$041$0 = $38;
  }
 }
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE23__widen_and_group_floatEPcS2_S2_S2_RS2_S3_RKNS_6localeE($34, $35, $33, $$037, $9, $10, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$11 >> 2] = HEAP32[$1 >> 2];
 $41 = HEAP32[$9 >> 2] | 0;
 $42 = HEAP32[$10 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$11 >> 2];
 $43 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $$037, $41, $42, $2, $3) | 0;
 _free($$sroa$041$0);
 _free($$sroa$048$0);
 STACKTOP = sp;
 return $43 | 0;
}

function _check_square($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 var $$0 = 0, $$092 = 0, $$093 = 0, $$094 = 0, $$sroa$12$0 = 0, $$sroa$4$0 = 0, $$sroa$8$0 = 0, $10 = 0, $11 = 0, $13 = 0, $17 = 0, $18 = 0, $21 = 0, $23 = 0, $24 = 0, $29 = 0.0, $3 = 0, $36 = 0, $38 = 0, $4 = 0, $44 = 0, $5 = 0, $6 = 0, $60 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $3 = sp + 48 | 0;
 $4 = sp + 92 | 0;
 $5 = sp;
 $6 = sp + 88 | 0;
 $7 = $1 + 28 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $1 + 40028 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $1 + 24 | 0;
 $13 = (HEAP32[$11 >> 2] | 0) + -1 | 0;
 $$0 = 1;
 $$093 = 0;
 $$094 = 0;
 while (1) {
  if (($$0 | 0) >= ($13 | 0)) break;
  $17 = (HEAP32[$1 + 28 + ($$0 << 2) >> 2] | 0) - $8 | 0;
  $18 = Math_imul($17, $17) | 0;
  $21 = (HEAP32[$1 + 40028 + ($$0 << 2) >> 2] | 0) - $10 | 0;
  $23 = (Math_imul($21, $21) | 0) + $18 | 0;
  $24 = ($23 | 0) > ($$093 | 0);
  $spec$select = $24 ? $$0 : $$094;
  $$0 = $$0 + 1 | 0;
  $$093 = $24 ? $23 : $$093;
  $$094 = $spec$select;
 }
 $29 = +($0 | 0) / .75 * .01 * $2;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$6 >> 2] = 0;
 L5 : do if ((_get_vertex($7, $9, 0, $$094, $29, $3, $4) | 0) < 0) $$092 = -1; else if ((_get_vertex($7, $9, $$094, (HEAP32[$11 >> 2] | 0) + -1 | 0, $29, $5, $6) | 0) < 0) $$092 = -1; else {
  $36 = HEAP32[$4 >> 2] | 0;
  $38 = HEAP32[$6 >> 2] | 0;
  do if (($36 | 0) == 1 & ($38 | 0) == 1) {
   $$sroa$12$0 = HEAP32[$5 >> 2] | 0;
   $$sroa$4$0 = HEAP32[$3 >> 2] | 0;
   $$sroa$8$0 = $$094;
  } else {
   if (($36 | 0) > 1 & ($38 | 0) == 0) {
    $44 = ($$094 | 0) / 2 | 0;
    HEAP32[$6 >> 2] = 0;
    HEAP32[$4 >> 2] = 0;
    if ((_get_vertex($7, $9, 0, $44, $29, $3, $4) | 0) < 0) {
     $$092 = -1;
     break L5;
    }
    if ((_get_vertex($7, $9, $44, $$094, $29, $5, $6) | 0) < 0) {
     $$092 = -1;
     break L5;
    }
    if (!((HEAP32[$4 >> 2] | 0) == 1 & (HEAP32[$6 >> 2] | 0) == 1)) {
     $$092 = -1;
     break L5;
    }
    $$sroa$12$0 = $$094;
    $$sroa$4$0 = HEAP32[$3 >> 2] | 0;
    $$sroa$8$0 = HEAP32[$5 >> 2] | 0;
    break;
   }
   if (!(($36 | 0) == 0 & ($38 | 0) > 1)) {
    $$092 = -1;
    break L5;
   }
   $60 = ($$094 + -1 + (HEAP32[$11 >> 2] | 0) | 0) / 2 | 0;
   HEAP32[$6 >> 2] = 0;
   HEAP32[$4 >> 2] = 0;
   if ((_get_vertex($7, $9, $$094, $60, $29, $3, $4) | 0) < 0) {
    $$092 = -1;
    break L5;
   }
   if ((_get_vertex($7, $9, $60, (HEAP32[$11 >> 2] | 0) + -1 | 0, $29, $5, $6) | 0) < 0) {
    $$092 = -1;
    break L5;
   }
   if (!((HEAP32[$4 >> 2] | 0) == 1 & (HEAP32[$6 >> 2] | 0) == 1)) {
    $$092 = -1;
    break L5;
   }
   $$sroa$12$0 = HEAP32[$5 >> 2] | 0;
   $$sroa$4$0 = $$094;
   $$sroa$8$0 = HEAP32[$3 >> 2] | 0;
  } while (0);
  HEAP32[$1 + 80028 >> 2] = 0;
  HEAP32[$1 + 80032 >> 2] = $$sroa$4$0;
  HEAP32[$1 + 80036 >> 2] = $$sroa$8$0;
  HEAP32[$1 + 80040 >> 2] = $$sroa$12$0;
  HEAP32[$1 + 80044 >> 2] = (HEAP32[$11 >> 2] | 0) + -1;
  $$092 = 0;
 } while (0);
 STACKTOP = sp;
 return $$092 | 0;
}

function _wcsrtombs($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$05674 = 0, $$057$lcssa = 0, $$05784 = 0, $$05873 = 0, $$1 = 0, $$159 = 0, $$260$lcssa = 0, $$26083 = 0, $$278 = 0, $$3 = 0, $$361 = 0, $$477 = 0, $$5 = 0, $$pn = 0, $11 = 0, $17 = 0, $18 = 0, $23 = 0, $31 = 0, $34 = 0, $35 = 0, $4 = 0, $40 = 0, $51 = 0, $6 = 0, $7 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 L1 : do if (!$0) {
  $6 = HEAP32[$1 >> 2] | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if (!$7) $$0 = 0; else {
   $$05674 = $6;
   $$05873 = 0;
   $9 = $7;
   while (1) {
    if ($9 >>> 0 > 127) {
     $11 = _wcrtomb($4, $9, 0) | 0;
     if (($11 | 0) == -1) {
      $$0 = -1;
      break L1;
     } else $$pn = $11;
    } else $$pn = 1;
    $$159 = $$pn + $$05873 | 0;
    $$05674 = $$05674 + 4 | 0;
    $9 = HEAP32[$$05674 >> 2] | 0;
    if (!$9) {
     $$0 = $$159;
     break;
    } else $$05873 = $$159;
   }
  }
 } else {
  L10 : do if ($2 >>> 0 > 3) {
   $$05784 = $0;
   $$26083 = $2;
   $18 = HEAP32[$1 >> 2] | 0;
   while (1) {
    $17 = HEAP32[$18 >> 2] | 0;
    if (($17 + -1 | 0) >>> 0 > 126) {
     if (!$17) break;
     $23 = _wcrtomb($$05784, $17, 0) | 0;
     if (($23 | 0) == -1) {
      $$0 = -1;
      break L1;
     }
     $$1 = $$05784 + $23 | 0;
     $$361 = $$26083 - $23 | 0;
     $31 = $18;
    } else {
     HEAP8[$$05784 >> 0] = $17;
     $$1 = $$05784 + 1 | 0;
     $$361 = $$26083 + -1 | 0;
     $31 = HEAP32[$1 >> 2] | 0;
    }
    $18 = $31 + 4 | 0;
    HEAP32[$1 >> 2] = $18;
    if ($$361 >>> 0 <= 3) {
     $$057$lcssa = $$1;
     $$260$lcssa = $$361;
     break L10;
    } else {
     $$05784 = $$1;
     $$26083 = $$361;
    }
   }
   HEAP8[$$05784 >> 0] = 0;
   HEAP32[$1 >> 2] = 0;
   $$0 = $2 - $$26083 | 0;
   break L1;
  } else {
   $$057$lcssa = $0;
   $$260$lcssa = $2;
  } while (0);
  if (!$$260$lcssa) $$0 = $2; else {
   $$278 = $$057$lcssa;
   $$477 = $$260$lcssa;
   $35 = HEAP32[$1 >> 2] | 0;
   while (1) {
    $34 = HEAP32[$35 >> 2] | 0;
    if (($34 + -1 | 0) >>> 0 > 126) {
     if (!$34) {
      label = 20;
      break;
     }
     $40 = _wcrtomb($4, $34, 0) | 0;
     if (($40 | 0) == -1) {
      $$0 = -1;
      break L1;
     }
     if ($$477 >>> 0 < $40 >>> 0) {
      label = 23;
      break;
     }
     _wcrtomb($$278, HEAP32[$35 >> 2] | 0, 0) | 0;
     $$3 = $$278 + $40 | 0;
     $$5 = $$477 - $40 | 0;
     $51 = $35;
    } else {
     HEAP8[$$278 >> 0] = $34;
     $$3 = $$278 + 1 | 0;
     $$5 = $$477 + -1 | 0;
     $51 = HEAP32[$1 >> 2] | 0;
    }
    $35 = $51 + 4 | 0;
    HEAP32[$1 >> 2] = $35;
    if (!$$5) {
     $$0 = $2;
     break L1;
    } else {
     $$278 = $$3;
     $$477 = $$5;
    }
   }
   if ((label | 0) == 20) {
    HEAP8[$$278 >> 0] = 0;
    HEAP32[$1 >> 2] = 0;
    $$0 = $2 - $$477 | 0;
    break;
   } else if ((label | 0) == 23) {
    $$0 = $2 - $$477 | 0;
    break;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE8__rehashEm($this, $__nbc) {
 $this = $this | 0;
 $__nbc = $__nbc | 0;
 var $0 = 0, $1 = 0, $17 = 0, $3 = 0, $5 = 0, $8 = 0, $__cp$0 = 0, $__i$0 = 0, $__np$0 = 0, $__phash$0$ph$ph = 0, $__pp$0$ph = 0, $__pp$0$ph$ph = 0, $__value_ = 0, $__value_$i$i = 0, $__value_$i$i$i = 0, $arrayidx$i51 = 0, $call$i$i$i = 0, $cond3$i = 0, $cond3$i61 = 0, $exception$i$i$i = 0, $sub$i55 = 0, $tobool$i57 = 0;
 $__value_$i$i$i = $this + 4 | 0;
 L1 : do if (!$__nbc) {
  $17 = HEAP32[$this >> 2] | 0;
  HEAP32[$this >> 2] = 0;
  if ($17 | 0) __ZdlPv($17);
  HEAP32[$__value_$i$i$i >> 2] = 0;
 } else {
  if ($__nbc >>> 0 > 1073741823) {
   $exception$i$i$i = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($exception$i$i$i, 40521);
   HEAP32[$exception$i$i$i >> 2] = 17440;
   ___cxa_throw($exception$i$i$i | 0, 13288, 107);
  }
  $call$i$i$i = __Znwm($__nbc << 2) | 0;
  $0 = HEAP32[$this >> 2] | 0;
  HEAP32[$this >> 2] = $call$i$i$i;
  if ($0 | 0) __ZdlPv($0);
  HEAP32[$__value_$i$i$i >> 2] = $__nbc;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) == ($__nbc | 0)) break;
   HEAP32[(HEAP32[$this >> 2] | 0) + ($__i$0 << 2) >> 2] = 0;
   $__i$0 = $__i$0 + 1 | 0;
  }
  $__value_$i$i = $this + 8 | 0;
  $1 = HEAP32[$__value_$i$i >> 2] | 0;
  if ($1 | 0) {
   $3 = HEAP32[$1 + 4 >> 2] | 0;
   $sub$i55 = $__nbc + -1 | 0;
   $tobool$i57 = ($sub$i55 & $__nbc | 0) == 0;
   if ($tobool$i57) $cond3$i61 = $3 & $sub$i55; else if ($3 >>> 0 < $__nbc >>> 0) $cond3$i61 = $3; else $cond3$i61 = ($3 >>> 0) % ($__nbc >>> 0) | 0;
   HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i61 << 2) >> 2] = $__value_$i$i;
   $__phash$0$ph$ph = $cond3$i61;
   $__pp$0$ph$ph = $1;
   while (1) {
    $__pp$0$ph = $__pp$0$ph$ph;
    L25 : while (1) {
     while (1) {
      $__cp$0 = HEAP32[$__pp$0$ph >> 2] | 0;
      if (!$__cp$0) break L1;
      $5 = HEAP32[$__cp$0 + 4 >> 2] | 0;
      if ($tobool$i57) $cond3$i = $5 & $sub$i55; else if ($5 >>> 0 < $__nbc >>> 0) $cond3$i = $5; else $cond3$i = ($5 >>> 0) % ($__nbc >>> 0) | 0;
      if (($cond3$i | 0) == ($__phash$0$ph$ph | 0)) break;
      $arrayidx$i51 = (HEAP32[$this >> 2] | 0) + ($cond3$i << 2) | 0;
      if (!(HEAP32[$arrayidx$i51 >> 2] | 0)) break L25;
      $__value_ = $__cp$0 + 8 | 0;
      $__np$0 = $__cp$0;
      while (1) {
       $8 = HEAP32[$__np$0 >> 2] | 0;
       if (!$8) break;
       if ((HEAP32[$__value_ >> 2] | 0) == (HEAP32[$8 + 8 >> 2] | 0)) $__np$0 = $8; else break;
      }
      HEAP32[$__pp$0$ph >> 2] = $8;
      HEAP32[$__np$0 >> 2] = HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] >> 2] = $__cp$0;
     }
     $__pp$0$ph = $__cp$0;
    }
    HEAP32[$arrayidx$i51 >> 2] = $__pp$0$ph;
    $__phash$0$ph$ph = $cond3$i;
    $__pp$0$ph$ph = $__cp$0;
   }
  }
 } while (0);
 return;
}

function _arGetLine($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0108 = 0, $$0109 = 0, $$0110 = 0, $$1 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $22 = 0.0, $25 = 0, $29 = 0, $31 = 0, $33 = 0, $44 = 0, $45 = 0, $54 = 0, $56 = 0.0, $59 = 0.0, $61 = 0, $7 = 0, $72 = 0, $73 = 0, $76 = 0.0, $78 = 0, $8 = 0, $81 = 0.0, $83 = 0.0, $86 = 0, $89 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp + 4 | 0;
 $8 = sp;
 $9 = _arVecAlloc(2) | 0;
 $10 = _arVecAlloc(2) | 0;
 $11 = _arMatrixAlloc(2, 2) | 0;
 $$0109 = 0;
 L1 : while (1) {
  if ($$0109 >>> 0 >= 4) {
   label = 10;
   break;
  }
  $13 = $$0109 + 1 | 0;
  $15 = HEAP32[$3 + ($13 << 2) >> 2] | 0;
  $17 = HEAP32[$3 + ($$0109 << 2) >> 2] | 0;
  $22 = +($15 + 1 - $17 | 0) * .05 + .5;
  $25 = ~~($22 + +($17 | 0));
  $29 = ~~(+($15 | 0) - $22) - $25 | 0;
  $31 = _arMatrixAlloc($29 + 1 | 0, 2) | 0;
  $$0108 = 0;
  while (1) {
   if (($$0108 | 0) > ($29 | 0)) break;
   $33 = $$0108 + $25 | 0;
   if ((_arParamObserv2IdealLTf($4, +(HEAP32[$0 + ($33 << 2) >> 2] | 0), +(HEAP32[$1 + ($33 << 2) >> 2] | 0), $7, $8) | 0) < 0) {
    label = 6;
    break L1;
   }
   $44 = HEAP32[$31 >> 2] | 0;
   $45 = $$0108 << 1;
   HEAPF64[$44 + ($45 << 3) >> 3] = +HEAPF32[$7 >> 2];
   HEAPF64[$44 + (($45 | 1) << 3) >> 3] = +HEAPF32[$8 >> 2];
   $$0108 = $$0108 + 1 | 0;
  }
  if ((_arMatrixPCA($31, $11, $9, $10) | 0) < 0) {
   label = 14;
   break;
  }
  $54 = HEAP32[$11 >> 2] | 0;
  $56 = +HEAPF64[$54 + 8 >> 3];
  HEAPF64[$5 + ($$0109 * 24 | 0) >> 3] = $56;
  $59 = -+HEAPF64[$54 >> 3];
  HEAPF64[$5 + ($$0109 * 24 | 0) + 8 >> 3] = $59;
  $61 = HEAP32[$10 >> 2] | 0;
  HEAPF64[$5 + ($$0109 * 24 | 0) + 16 >> 3] = -($56 * +HEAPF64[$61 >> 3] + +HEAPF64[$61 + 8 >> 3] * $59);
  _arMatrixFree($31) | 0;
  $$0109 = $13;
 }
 L10 : do if ((label | 0) == 6) label = 14; else if ((label | 0) == 10) {
  _arMatrixFree($11) | 0;
  _arVecFree($10) | 0;
  _arVecFree($9) | 0;
  $$1 = 0;
  while (1) {
   if ($$1 >>> 0 >= 4) {
    $$0110 = 0;
    break L10;
   }
   $72 = $$1 + 3 & 3;
   $73 = $5 + ($72 * 24 | 0) | 0;
   $76 = +HEAPF64[$5 + ($$1 * 24 | 0) + 8 >> 3];
   $78 = $5 + ($$1 * 24 | 0) | 0;
   $81 = +HEAPF64[$5 + ($72 * 24 | 0) + 8 >> 3];
   $83 = +HEAPF64[$73 >> 3] * $76 - +HEAPF64[$78 >> 3] * $81;
   if (+Math_abs(+$83) < .0001) {
    $$0110 = -1;
    break L10;
   }
   $86 = $5 + ($$1 * 24 | 0) + 16 | 0;
   $89 = $5 + ($72 * 24 | 0) + 16 | 0;
   HEAPF64[$6 + ($$1 << 4) >> 3] = ($81 * +HEAPF64[$86 >> 3] - $76 * +HEAPF64[$89 >> 3]) / $83;
   HEAPF64[$6 + ($$1 << 4) + 8 >> 3] = (+HEAPF64[$78 >> 3] * +HEAPF64[$89 >> 3] - +HEAPF64[$73 >> 3] * +HEAPF64[$86 >> 3]) / $83;
   $$1 = $$1 + 1 | 0;
  }
 } while (0);
 if ((label | 0) == 14) {
  _arMatrixFree($31) | 0;
  _arMatrixFree($11) | 0;
  _arVecFree($10) | 0;
  _arVecFree($9) | 0;
  $$0110 = -1;
 }
 STACKTOP = sp;
 return $$0110 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $__nbc) {
 $this = $this | 0;
 $__nbc = $__nbc | 0;
 var $0 = 0, $1 = 0, $17 = 0, $3 = 0, $5 = 0, $8 = 0, $__cp$0 = 0, $__i$0 = 0, $__np$0 = 0, $__phash$0$ph$ph = 0, $__pp$0$ph = 0, $__pp$0$ph$ph = 0, $__value_ = 0, $__value_$i$i = 0, $__value_$i$i$i = 0, $arrayidx$i51 = 0, $call$i$i$i = 0, $cond3$i = 0, $cond3$i61 = 0, $exception$i$i$i = 0, $sub$i55 = 0, $tobool$i57 = 0;
 $__value_$i$i$i = $this + 4 | 0;
 L1 : do if (!$__nbc) {
  $17 = HEAP32[$this >> 2] | 0;
  HEAP32[$this >> 2] = 0;
  if ($17 | 0) __ZdlPv($17);
  HEAP32[$__value_$i$i$i >> 2] = 0;
 } else {
  if ($__nbc >>> 0 > 1073741823) {
   $exception$i$i$i = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($exception$i$i$i, 40521);
   HEAP32[$exception$i$i$i >> 2] = 17440;
   ___cxa_throw($exception$i$i$i | 0, 13288, 107);
  }
  $call$i$i$i = __Znwm($__nbc << 2) | 0;
  $0 = HEAP32[$this >> 2] | 0;
  HEAP32[$this >> 2] = $call$i$i$i;
  if ($0 | 0) __ZdlPv($0);
  HEAP32[$__value_$i$i$i >> 2] = $__nbc;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) == ($__nbc | 0)) break;
   HEAP32[(HEAP32[$this >> 2] | 0) + ($__i$0 << 2) >> 2] = 0;
   $__i$0 = $__i$0 + 1 | 0;
  }
  $__value_$i$i = $this + 8 | 0;
  $1 = HEAP32[$__value_$i$i >> 2] | 0;
  if ($1 | 0) {
   $3 = HEAP32[$1 + 4 >> 2] | 0;
   $sub$i55 = $__nbc + -1 | 0;
   $tobool$i57 = ($sub$i55 & $__nbc | 0) == 0;
   if ($tobool$i57) $cond3$i61 = $3 & $sub$i55; else if ($3 >>> 0 < $__nbc >>> 0) $cond3$i61 = $3; else $cond3$i61 = ($3 >>> 0) % ($__nbc >>> 0) | 0;
   HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i61 << 2) >> 2] = $__value_$i$i;
   $__phash$0$ph$ph = $cond3$i61;
   $__pp$0$ph$ph = $1;
   while (1) {
    $__pp$0$ph = $__pp$0$ph$ph;
    L25 : while (1) {
     while (1) {
      $__cp$0 = HEAP32[$__pp$0$ph >> 2] | 0;
      if (!$__cp$0) break L1;
      $5 = HEAP32[$__cp$0 + 4 >> 2] | 0;
      if ($tobool$i57) $cond3$i = $5 & $sub$i55; else if ($5 >>> 0 < $__nbc >>> 0) $cond3$i = $5; else $cond3$i = ($5 >>> 0) % ($__nbc >>> 0) | 0;
      if (($cond3$i | 0) == ($__phash$0$ph$ph | 0)) break;
      $arrayidx$i51 = (HEAP32[$this >> 2] | 0) + ($cond3$i << 2) | 0;
      if (!(HEAP32[$arrayidx$i51 >> 2] | 0)) break L25;
      $__value_ = $__cp$0 + 8 | 0;
      $__np$0 = $__cp$0;
      while (1) {
       $8 = HEAP32[$__np$0 >> 2] | 0;
       if (!$8) break;
       if ((HEAP32[$__value_ >> 2] | 0) == (HEAP32[$8 + 8 >> 2] | 0)) $__np$0 = $8; else break;
      }
      HEAP32[$__pp$0$ph >> 2] = $8;
      HEAP32[$__np$0 >> 2] = HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] >> 2] = $__cp$0;
     }
     $__pp$0$ph = $__cp$0;
    }
    HEAP32[$arrayidx$i51 >> 2] = $__pp$0$ph;
    $__phash$0$ph$ph = $cond3$i;
    $__pp$0$ph$ph = $__cp$0;
   }
  }
 } while (0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i25 = 0, $$1 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 97) if ((HEAP8[$0 + 1 >> 0] | 0) == 122) {
  $16 = $0 + 2 | 0;
  $17 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($17 | 0) == ($16 | 0)) $$1 = $0; else {
   $20 = $2 + 4 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) $$1 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $21 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($6, 0, 50810) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 49629) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i25 = 0;
    while (1) {
     if (($$0$i$i$i25 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i25 << 2) >> 2] = 0;
     $$0$i$i$i25 = $$0$i$i$i25 + 1 | 0;
    }
    $30 = HEAP32[$20 >> 2] | 0;
    $31 = $30 + -24 | 0;
    $32 = $31 + 11 | 0;
    if ((HEAP8[$32 >> 0] | 0) < 0) {
     $35 = HEAP32[$31 >> 2] | 0;
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($35, $3);
     HEAP32[$30 + -20 >> 2] = 0;
    } else {
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($31, $3);
     HEAP8[$32 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($31);
    HEAP32[$31 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$31 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$31 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i$i | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$1 = $17;
   }
  }
 } else $$1 = $0; else $$1 = $0; else $$1 = $0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $__nbc) {
 $this = $this | 0;
 $__nbc = $__nbc | 0;
 var $0 = 0, $1 = 0, $17 = 0, $3 = 0, $5 = 0, $8 = 0, $__cp$0 = 0, $__i$0 = 0, $__np$0 = 0, $__phash$0$ph$ph = 0, $__pp$0$ph = 0, $__pp$0$ph$ph = 0, $__value_ = 0, $__value_$i$i = 0, $__value_$i$i$i = 0, $arrayidx$i51 = 0, $call$i$i$i = 0, $cond3$i = 0, $cond3$i61 = 0, $exception$i$i$i = 0, $sub$i55 = 0, $tobool$i57 = 0;
 $__value_$i$i$i = $this + 4 | 0;
 L1 : do if (!$__nbc) {
  $17 = HEAP32[$this >> 2] | 0;
  HEAP32[$this >> 2] = 0;
  if ($17 | 0) __ZdlPv($17);
  HEAP32[$__value_$i$i$i >> 2] = 0;
 } else {
  if ($__nbc >>> 0 > 1073741823) {
   $exception$i$i$i = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($exception$i$i$i, 40521);
   HEAP32[$exception$i$i$i >> 2] = 17440;
   ___cxa_throw($exception$i$i$i | 0, 13288, 107);
  }
  $call$i$i$i = __Znwm($__nbc << 2) | 0;
  $0 = HEAP32[$this >> 2] | 0;
  HEAP32[$this >> 2] = $call$i$i$i;
  if ($0 | 0) __ZdlPv($0);
  HEAP32[$__value_$i$i$i >> 2] = $__nbc;
  $__i$0 = 0;
  while (1) {
   if (($__i$0 | 0) == ($__nbc | 0)) break;
   HEAP32[(HEAP32[$this >> 2] | 0) + ($__i$0 << 2) >> 2] = 0;
   $__i$0 = $__i$0 + 1 | 0;
  }
  $__value_$i$i = $this + 8 | 0;
  $1 = HEAP32[$__value_$i$i >> 2] | 0;
  if ($1 | 0) {
   $3 = HEAP32[$1 + 4 >> 2] | 0;
   $sub$i55 = $__nbc + -1 | 0;
   $tobool$i57 = ($sub$i55 & $__nbc | 0) == 0;
   if ($tobool$i57) $cond3$i61 = $3 & $sub$i55; else if ($3 >>> 0 < $__nbc >>> 0) $cond3$i61 = $3; else $cond3$i61 = ($3 >>> 0) % ($__nbc >>> 0) | 0;
   HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i61 << 2) >> 2] = $__value_$i$i;
   $__phash$0$ph$ph = $cond3$i61;
   $__pp$0$ph$ph = $1;
   while (1) {
    $__pp$0$ph = $__pp$0$ph$ph;
    L25 : while (1) {
     while (1) {
      $__cp$0 = HEAP32[$__pp$0$ph >> 2] | 0;
      if (!$__cp$0) break L1;
      $5 = HEAP32[$__cp$0 + 4 >> 2] | 0;
      if ($tobool$i57) $cond3$i = $5 & $sub$i55; else if ($5 >>> 0 < $__nbc >>> 0) $cond3$i = $5; else $cond3$i = ($5 >>> 0) % ($__nbc >>> 0) | 0;
      if (($cond3$i | 0) == ($__phash$0$ph$ph | 0)) break;
      $arrayidx$i51 = (HEAP32[$this >> 2] | 0) + ($cond3$i << 2) | 0;
      if (!(HEAP32[$arrayidx$i51 >> 2] | 0)) break L25;
      $__value_ = $__cp$0 + 8 | 0;
      $__np$0 = $__cp$0;
      while (1) {
       $8 = HEAP32[$__np$0 >> 2] | 0;
       if (!$8) break;
       if ((HEAP32[$__value_ >> 2] | 0) == (HEAP32[$8 + 8 >> 2] | 0)) $__np$0 = $8; else break;
      }
      HEAP32[$__pp$0$ph >> 2] = $8;
      HEAP32[$__np$0 >> 2] = HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] >> 2] = $__cp$0;
     }
     $__pp$0$ph = $__cp$0;
    }
    HEAP32[$arrayidx$i51 >> 2] = $__pp$0$ph;
    $__phash$0$ph$ph = $cond3$i;
    $__pp$0$ph$ph = $__cp$0;
   }
  }
 } while (0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_alignof_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i25 = 0, $$1 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 97) if ((HEAP8[$0 + 1 >> 0] | 0) == 116) {
  $16 = $0 + 2 | 0;
  $17 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($17 | 0) == ($16 | 0)) $$1 = $0; else {
   $20 = $2 + 4 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) $$1 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $21 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($6, 0, 50810) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 49629) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i25 = 0;
    while (1) {
     if (($$0$i$i$i25 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i25 << 2) >> 2] = 0;
     $$0$i$i$i25 = $$0$i$i$i25 + 1 | 0;
    }
    $30 = HEAP32[$20 >> 2] | 0;
    $31 = $30 + -24 | 0;
    $32 = $31 + 11 | 0;
    if ((HEAP8[$32 >> 0] | 0) < 0) {
     $35 = HEAP32[$31 >> 2] | 0;
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($35, $3);
     HEAP32[$30 + -20 >> 2] = 0;
    } else {
     HEAP8[$3 >> 0] = 0;
     __ZNSt3__211char_traitsIcE6assignERcRKc($31, $3);
     HEAP8[$32 >> 0] = 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($31);
    HEAP32[$31 >> 2] = HEAP32[$4 >> 2];
    HEAP32[$31 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
    HEAP32[$31 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
    $$0$i$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i$i | 0) == 3) break;
     HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$1 = $17;
   }
  }
 } else $$1 = $0; else $$1 = $0; else $$1 = $0;
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKcm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$014 = 0, $$069 = 0, $$070 = 0, $$074 = 0, $$215 = 0, $$3 = 0, $$316 = 0, $$373 = 0, $$377 = 0, $$4 = 0, $$sroa$speculated18 = 0, $15 = 0, $17 = 0, $2 = 0, $21 = 0, $24 = 0, $3 = 0, $34 = 0, $4 = 0, $41 = 0, $5 = 0, $6 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = $0 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) {
  $9 = HEAP32[$0 + 4 >> 2] | 0;
  $$sroa$speculated18 = $9 >>> 0 < 11 ? $9 : 11;
  $15 = $9;
  $17 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $6 = $4 & 255;
  $$sroa$speculated18 = $6 >>> 0 < 11 ? $6 : 11;
  $15 = $6;
  $17 = 10;
 }
 if (($$sroa$speculated18 - $15 + $17 | 0) >>> 0 < $1 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc($0, $17, $1 - $$sroa$speculated18 + $15 - $17 | 0, $15, 0, $$sroa$speculated18, $1, 51050); else {
  if ($5) $24 = HEAP32[$0 >> 2] | 0; else $24 = $0;
  do if (($$sroa$speculated18 | 0) == ($1 | 0)) {
   $$215 = $1;
   $$3 = 0;
   $$373 = 51050;
   $$377 = $1;
   label = 17;
  } else {
   $21 = $15 - $$sroa$speculated18 | 0;
   if (!$21) {
    $$215 = $$sroa$speculated18;
    $$3 = 0;
    $$373 = 51050;
    $$377 = $1;
    label = 17;
   } else {
    if ($$sroa$speculated18 >>> 0 > $1 >>> 0) {
     __ZNSt3__211char_traitsIcE4moveEPcPKcm($24, 51050, $1) | 0;
     __ZNSt3__211char_traitsIcE4moveEPcPKcm($24 + $1 | 0, $24 + $$sroa$speculated18 | 0, $21) | 0;
     $$316 = $$sroa$speculated18;
     $$4 = $1;
     break;
    }
    do if ($24 >>> 0 < 51050 >>> 0 & ($24 + $15 | 0) >>> 0 > 51050 >>> 0) if (($24 + $$sroa$speculated18 | 0) >>> 0 > 51050 >>> 0) {
     __ZNSt3__211char_traitsIcE4moveEPcPKcm($24, 51050, $$sroa$speculated18) | 0;
     $$014 = 0;
     $$069 = $$sroa$speculated18;
     $$070 = 51050 + $1 | 0;
     $$074 = $1 - $$sroa$speculated18 | 0;
     break;
    } else {
     $$014 = $$sroa$speculated18;
     $$069 = 0;
     $$070 = 51050 + ($1 - $$sroa$speculated18) | 0;
     $$074 = $1;
     break;
    } else {
     $$014 = $$sroa$speculated18;
     $$069 = 0;
     $$070 = 51050;
     $$074 = $1;
    } while (0);
    $34 = $24 + $$069 | 0;
    __ZNSt3__211char_traitsIcE4moveEPcPKcm($34 + $$074 | 0, $34 + $$014 | 0, $21) | 0;
    $$215 = $$014;
    $$3 = $$069;
    $$373 = $$070;
    $$377 = $$074;
    label = 17;
   }
  } while (0);
  if ((label | 0) == 17) {
   __ZNSt3__211char_traitsIcE4moveEPcPKcm($24 + $$3 | 0, $$373, $$377) | 0;
   $$316 = $$215;
   $$4 = $$377;
  }
  $41 = $$4 - $$316 + $15 | 0;
  if ((HEAP8[$3 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $41; else HEAP8[$3 >> 0] = $41;
  HEAP8[$2 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($24 + $41 | 0, $2);
 }
 STACKTOP = sp;
 return;
}

function _arglCameraFrustumRH($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = $3 | 0;
 var $$0 = 0, $$053 = 0, $$1 = 0, $$154 = 0, $$2 = 0, $10 = 0, $15 = 0.0, $19 = 0, $24 = 0.0, $34 = 0.0, $4 = 0, $48 = 0, $5 = 0, $6 = 0, $62 = 0, $64 = 0.0, $7 = 0, $71 = 0, $75 = 0.0, $77 = 0.0, $79 = 0.0, $8 = 0, $81 = 0.0, $82 = 0, $83 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 $4 = sp + 304 | 0;
 $5 = sp + 208 | 0;
 $6 = sp + 128 | 0;
 $7 = sp;
 $8 = HEAP32[$0 >> 2] | 0;
 $10 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if ((_arParamDecompMat($0 + 8 | 0, $4, $5) | 0) < 0) _arLog(0, 3, 18403, sp + 400 | 0); else {
  $15 = +($10 + -1 | 0);
  $$053 = 0;
  while (1) {
   if (($$053 | 0) == 4) break;
   $19 = $4 + 32 + ($$053 << 3) | 0;
   HEAPF64[$19 >> 3] = +HEAPF64[$4 + 64 + ($$053 << 3) >> 3] * $15 - +HEAPF64[$19 >> 3];
   $$053 = $$053 + 1 | 0;
  }
  $24 = +HEAPF64[$4 + 80 >> 3];
  $$154 = 0;
  while (1) {
   if (($$154 | 0) == 3) break;
   $$0 = 0;
   while (1) {
    if (($$0 | 0) == 3) break;
    HEAPF64[$6 + ($$154 * 24 | 0) + ($$0 << 3) >> 3] = +HEAPF64[$4 + ($$154 << 5) + ($$0 << 3) >> 3] / $24;
    $$0 = $$0 + 1 | 0;
   }
   $$154 = $$154 + 1 | 0;
  }
  $34 = +($8 + -1 | 0);
  HEAPF64[$7 >> 3] = +HEAPF64[$6 >> 3] * 2.0 / $34;
  HEAPF64[$7 + 8 >> 3] = +HEAPF64[$6 + 8 >> 3] * 2.0 / $34;
  HEAPF64[$7 + 16 >> 3] = -(+HEAPF64[$6 + 16 >> 3] * 2.0 / $34 + -1.0);
  $48 = $7 + 24 | 0;
  HEAP32[$48 >> 2] = 0;
  HEAP32[$48 + 4 >> 2] = 0;
  HEAP32[$48 + 8 >> 2] = 0;
  HEAP32[$48 + 12 >> 2] = 0;
  HEAPF64[$7 + 40 >> 3] = -(+HEAPF64[$6 + 32 >> 3] * 2.0 / $15);
  HEAPF64[$7 + 48 >> 3] = -(+HEAPF64[$6 + 40 >> 3] * 2.0 / $15 + -1.0);
  $62 = $7 + 56 | 0;
  $64 = $1 - $2;
  HEAP32[$62 >> 2] = 0;
  HEAP32[$62 + 4 >> 2] = 0;
  HEAP32[$62 + 8 >> 2] = 0;
  HEAP32[$62 + 12 >> 2] = 0;
  HEAP32[$62 + 16 >> 2] = 0;
  HEAP32[$62 + 20 >> 2] = 0;
  HEAPF64[$7 + 80 >> 3] = ($1 + $2) / $64;
  HEAPF64[$7 + 88 >> 3] = $2 * 2.0 * $1 / $64;
  $71 = $7 + 96 | 0;
  HEAP32[$71 >> 2] = 0;
  HEAP32[$71 + 4 >> 2] = 0;
  HEAP32[$71 + 8 >> 2] = 0;
  HEAP32[$71 + 12 >> 2] = 0;
  HEAPF64[$7 + 112 >> 3] = -1.0;
  HEAPF64[$7 + 120 >> 3] = 0.0;
  $75 = +HEAPF64[$5 + 24 >> 3];
  $77 = +HEAPF64[$5 + 56 >> 3];
  $79 = +HEAPF64[$5 + 88 >> 3];
  $$2 = 0;
  while (1) {
   if (($$2 | 0) == 4) break L1;
   $81 = +HEAPF64[$7 + ($$2 << 5) >> 3];
   $82 = $7 + ($$2 << 5) + 8 | 0;
   $83 = $7 + ($$2 << 5) + 16 | 0;
   $$1 = 0;
   while (1) {
    if (($$1 | 0) == 3) break;
    HEAPF64[$3 + (($$1 << 2) + $$2 << 3) >> 3] = $81 * +HEAPF64[$5 + ($$1 << 3) >> 3] + +HEAPF64[$82 >> 3] * +HEAPF64[$5 + 32 + ($$1 << 3) >> 3] + +HEAPF64[$83 >> 3] * +HEAPF64[$5 + 64 + ($$1 << 3) >> 3];
    $$1 = $$1 + 1 | 0;
   }
   HEAPF64[$3 + ($$2 + 12 << 3) >> 3] = +HEAPF64[$7 + ($$2 << 5) + 24 >> 3] + ($81 * $75 + +HEAPF64[$82 >> 3] * $77 + +HEAPF64[$83 >> 3] * $79);
   $$2 = $$2 + 1 | 0;
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function _qsort($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$067$lcssa = 0, $$06772 = 0, $$068$lcssa = 0, $$06871 = 0, $$1 = 0, $$169 = 0, $$169$be = 0, $$2 = 0, $$2$be = 0, $$be = 0, $12 = 0, $15 = 0, $15$phi = 0, $16 = 0, $17 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $37 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $47 = 0, $49 = 0, $5 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 $4 = sp;
 $5 = sp + 192 | 0;
 $6 = Math_imul($2, $1) | 0;
 $7 = $5;
 HEAP32[$7 >> 2] = 1;
 HEAP32[$7 + 4 >> 2] = 0;
 L1 : do if ($6 | 0) {
  $12 = 0 - $2 | 0;
  HEAP32[$4 + 4 >> 2] = $2;
  HEAP32[$4 >> 2] = $2;
  $$0 = 2;
  $15 = $2;
  $17 = $2;
  while (1) {
   $16 = $15 + $2 + $17 | 0;
   HEAP32[$4 + ($$0 << 2) >> 2] = $16;
   if ($16 >>> 0 < $6 >>> 0) {
    $15$phi = $17;
    $$0 = $$0 + 1 | 0;
    $17 = $16;
    $15 = $15$phi;
   } else break;
  }
  $22 = $0 + $6 + $12 | 0;
  if ($22 >>> 0 > $0 >>> 0) {
   $24 = $22;
   $$06772 = 1;
   $$06871 = $0;
   $26 = 1;
   while (1) {
    do if (($26 & 3 | 0) == 3) {
     _sift($$06871, $2, $3, $$06772, $4);
     _shr($5, 2);
     $$1 = $$06772 + 2 | 0;
    } else {
     $29 = $$06772 + -1 | 0;
     if ((HEAP32[$4 + ($29 << 2) >> 2] | 0) >>> 0 < ($24 - $$06871 | 0) >>> 0) _sift($$06871, $2, $3, $$06772, $4); else _trinkle($$06871, $2, $3, $5, $$06772, 0, $4);
     if (($$06772 | 0) == 1) {
      _shl($5, 1);
      $$1 = 0;
      break;
     } else {
      _shl($5, $29);
      $$1 = 1;
      break;
     }
    } while (0);
    $37 = HEAP32[$5 >> 2] | 1;
    HEAP32[$5 >> 2] = $37;
    $38 = $$06871 + $2 | 0;
    if ($38 >>> 0 < $22 >>> 0) {
     $$06772 = $$1;
     $$06871 = $38;
     $26 = $37;
    } else {
     $$067$lcssa = $$1;
     $$068$lcssa = $38;
     $61 = $37;
     break;
    }
   }
  } else {
   $$067$lcssa = 1;
   $$068$lcssa = $0;
   $61 = 1;
  }
  _trinkle($$068$lcssa, $2, $3, $5, $$067$lcssa, 0, $4);
  $40 = $5 + 4 | 0;
  $$169 = $$068$lcssa;
  $$2 = $$067$lcssa;
  $42 = $61;
  while (1) {
   if (($$2 | 0) == 1 & ($42 | 0) == 1) if (!(HEAP32[$40 >> 2] | 0)) break L1; else label = 19; else if (($$2 | 0) < 2) label = 19; else {
    _shl($5, 2);
    $49 = $$2 + -2 | 0;
    HEAP32[$5 >> 2] = HEAP32[$5 >> 2] ^ 7;
    _shr($5, 1);
    _trinkle($$169 + (0 - (HEAP32[$4 + ($49 << 2) >> 2] | 0)) + $12 | 0, $2, $3, $5, $$2 + -1 | 0, 1, $4);
    _shl($5, 1);
    $59 = HEAP32[$5 >> 2] | 1;
    HEAP32[$5 >> 2] = $59;
    $60 = $$169 + $12 | 0;
    _trinkle($60, $2, $3, $5, $49, 1, $4);
    $$169$be = $60;
    $$2$be = $49;
    $$be = $59;
   }
   if ((label | 0) == 19) {
    label = 0;
    $47 = _pntz($5) | 0;
    _shr($5, $47);
    $$169$be = $$169 + $12 | 0;
    $$2$be = $47 + $$2 | 0;
    $$be = HEAP32[$5 >> 2] | 0;
   }
   $$169 = $$169$be;
   $$2 = $$2$be;
   $42 = $$be;
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIdNS0_2DbEEEPKcS4_S4_RT0_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$049$idx = 0, $$050 = 0, $$07$i$i = 0, $$247$ph = 0, $$3 = 0, $11 = 0, $12 = 0, $17 = 0, $25 = 0, $27 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(80);
 $vararg_buffer = sp + 40 | 0;
 $3 = sp + 32 | 0;
 $4 = sp;
 $5 = sp + 64 | 0;
 L1 : do if (($1 - $0 | 0) >>> 0 > 16) {
  $$049$idx = 0;
  $$050 = $3;
  while (1) {
   $11 = HEAP8[$0 + $$049$idx >> 0] | 0;
   $12 = $11 << 24 >> 24;
   if (($$049$idx | 0) == 16) {
    label = 6;
    break;
   }
   if (!(_isxdigit($12) | 0)) break;
   $17 = HEAP8[$0 + ($$049$idx | 1) >> 0] | 0;
   HEAP8[$$050 >> 0] = ((($12 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $12 << 4) + $17 + (($17 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   $$049$idx = $$049$idx + 2 | 0;
   $$050 = $$050 + 1 | 0;
  }
  do if ((label | 0) == 6) {
   if ($11 << 24 >> 24 == 69) {
    L11 : do if (($$050 | 0) != ($3 | 0)) {
     $$0$i$i = $$050;
     $$07$i$i = $3;
     while (1) {
      $25 = $$0$i$i + -1 | 0;
      if ($$07$i$i >>> 0 >= $25 >>> 0) break L11;
      $27 = HEAP8[$$07$i$i >> 0] | 0;
      HEAP8[$$07$i$i >> 0] = HEAP8[$25 >> 0] | 0;
      HEAP8[$25 >> 0] = $27;
      $$0$i$i = $25;
      $$07$i$i = $$07$i$i + 1 | 0;
     }
    } while (0);
    HEAP32[$4 >> 2] = 0;
    HEAP32[$4 + 4 >> 2] = 0;
    HEAP32[$4 + 8 >> 2] = 0;
    HEAP32[$4 + 12 >> 2] = 0;
    HEAP32[$4 + 16 >> 2] = 0;
    HEAP32[$4 + 20 >> 2] = 0;
    HEAP32[$4 + 24 >> 2] = 0;
    HEAP32[$4 + 28 >> 2] = 0;
    HEAPF64[$vararg_buffer >> 3] = +HEAPF64[$3 >> 3];
    $31 = _snprintf($4, 32, 50940, $vararg_buffer) | 0;
    if ($31 >>> 0 > 31) break;
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($5, $4, $31);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($vararg_buffer, $5);
    $33 = $2 + 4 | 0;
    $34 = HEAP32[$33 >> 2] | 0;
    if ($34 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($34, $vararg_buffer);
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $vararg_buffer);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($vararg_buffer);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$247$ph = $0 + 17 | 0;
   } else $$247$ph = $0;
   $$3 = $$247$ph;
   break L1;
  } while (0);
  $$3 = $0;
 } else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN6vision18HammingDistance768EPKjS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $100 = 0, $106 = 0, $112 = 0, $118 = 0, $124 = 0, $130 = 0, $136 = 0, $16 = 0, $22 = 0, $28 = 0, $34 = 0, $4 = 0, $40 = 0, $46 = 0, $52 = 0, $58 = 0, $64 = 0, $70 = 0, $76 = 0, $82 = 0, $88 = 0, $94 = 0;
 $4 = __ZN6vision17HammingDistance32Ejj(HEAP32[$0 >> 2] | 0, HEAP32[$1 >> 2] | 0) | 0;
 $10 = (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 4 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0) | 0) + $4 | 0;
 $16 = $10 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 8 >> 2] | 0, HEAP32[$1 + 8 >> 2] | 0) | 0) | 0;
 $22 = $16 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 12 >> 2] | 0, HEAP32[$1 + 12 >> 2] | 0) | 0) | 0;
 $28 = $22 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 16 >> 2] | 0, HEAP32[$1 + 16 >> 2] | 0) | 0) | 0;
 $34 = $28 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 20 >> 2] | 0, HEAP32[$1 + 20 >> 2] | 0) | 0) | 0;
 $40 = $34 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 24 >> 2] | 0, HEAP32[$1 + 24 >> 2] | 0) | 0) | 0;
 $46 = $40 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 28 >> 2] | 0, HEAP32[$1 + 28 >> 2] | 0) | 0) | 0;
 $52 = $46 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 32 >> 2] | 0, HEAP32[$1 + 32 >> 2] | 0) | 0) | 0;
 $58 = $52 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 36 >> 2] | 0, HEAP32[$1 + 36 >> 2] | 0) | 0) | 0;
 $64 = $58 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 40 >> 2] | 0, HEAP32[$1 + 40 >> 2] | 0) | 0) | 0;
 $70 = $64 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 44 >> 2] | 0, HEAP32[$1 + 44 >> 2] | 0) | 0) | 0;
 $76 = $70 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 48 >> 2] | 0, HEAP32[$1 + 48 >> 2] | 0) | 0) | 0;
 $82 = $76 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 52 >> 2] | 0, HEAP32[$1 + 52 >> 2] | 0) | 0) | 0;
 $88 = $82 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 56 >> 2] | 0, HEAP32[$1 + 56 >> 2] | 0) | 0) | 0;
 $94 = $88 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 60 >> 2] | 0, HEAP32[$1 + 60 >> 2] | 0) | 0) | 0;
 $100 = $94 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 64 >> 2] | 0, HEAP32[$1 + 64 >> 2] | 0) | 0) | 0;
 $106 = $100 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 68 >> 2] | 0, HEAP32[$1 + 68 >> 2] | 0) | 0) | 0;
 $112 = $106 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 72 >> 2] | 0, HEAP32[$1 + 72 >> 2] | 0) | 0) | 0;
 $118 = $112 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 76 >> 2] | 0, HEAP32[$1 + 76 >> 2] | 0) | 0) | 0;
 $124 = $118 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 80 >> 2] | 0, HEAP32[$1 + 80 >> 2] | 0) | 0) | 0;
 $130 = $124 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 84 >> 2] | 0, HEAP32[$1 + 84 >> 2] | 0) | 0) | 0;
 $136 = $130 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 88 >> 2] | 0, HEAP32[$1 + 88 >> 2] | 0) | 0) | 0;
 return $136 + (__ZN6vision17HammingDistance32Ejj(HEAP32[$0 + 92 >> 2] | 0, HEAP32[$1 + 92 >> 2] | 0) | 0) | 0;
}

function __ZNSt3__28ios_base4InitC2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $22 = 0, $23 = 0, $3 = 0, $35 = 0, $38 = 0, $4 = 0, $42 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 $1 = HEAP32[3453] | 0;
 __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t(57516, $1, 57572);
 HEAP32[14209] = 14248;
 HEAP32[14211] = 14268;
 HEAP32[14210] = 0;
 __ZNSt3__28ios_base4initEPv(56844, 57516);
 HEAP32[14229] = 0;
 $2 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14230] = $2;
 __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t(57580, $1, 57636);
 HEAP32[14231] = 14296;
 HEAP32[14233] = 14316;
 HEAP32[14232] = 0;
 __ZNSt3__28ios_base4initEPv(56932, 57580);
 HEAP32[14251] = 0;
 $3 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14252] = $3;
 $4 = HEAP32[3455] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(57644, $4, 57692);
 HEAP32[14253] = 14344;
 HEAP32[14254] = 14364;
 __ZNSt3__28ios_base4initEPv(57016, 57644);
 HEAP32[14272] = 0;
 $5 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14273] = $5;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(57700, $4, 57748);
 HEAP32[14274] = 14392;
 HEAP32[14275] = 14412;
 __ZNSt3__28ios_base4initEPv(57100, 57700);
 HEAP32[14293] = 0;
 $6 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14294] = $6;
 $7 = HEAP32[3454] | 0;
 __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t(57756, $7, 57804);
 HEAP32[14295] = 14344;
 HEAP32[14296] = 14364;
 __ZNSt3__28ios_base4initEPv(57184, 57756);
 HEAP32[14314] = 0;
 $8 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14315] = $8;
 $14 = HEAP32[57180 + (HEAP32[(HEAP32[14295] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[14337] = 14344;
 HEAP32[14338] = 14364;
 __ZNSt3__28ios_base4initEPv(57352, $14);
 HEAP32[14356] = 0;
 $15 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[14357] = $15;
 __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t(57812, $7, 57860);
 HEAP32[14316] = 14392;
 HEAP32[14317] = 14412;
 __ZNSt3__28ios_base4initEPv(57268, 57812);
 HEAP32[14335] = 0;
 $16 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14336] = $16;
 $22 = HEAP32[57264 + (HEAP32[(HEAP32[14316] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
 HEAP32[14358] = 14392;
 HEAP32[14359] = 14412;
 __ZNSt3__28ios_base4initEPv(57436, $22);
 HEAP32[14377] = 0;
 $23 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[14378] = $23;
 HEAP32[56836 + (HEAP32[(HEAP32[14209] | 0) + -12 >> 2] | 0) + 72 >> 2] = 57012;
 HEAP32[56924 + (HEAP32[(HEAP32[14231] | 0) + -12 >> 2] | 0) + 72 >> 2] = 57096;
 $35 = (HEAP32[14295] | 0) + -12 | 0;
 $38 = 57180 + (HEAP32[$35 >> 2] | 0) + 4 | 0;
 HEAP32[$38 >> 2] = HEAP32[$38 >> 2] | 8192;
 $42 = (HEAP32[14316] | 0) + -12 | 0;
 $45 = 57264 + (HEAP32[$42 >> 2] | 0) + 4 | 0;
 HEAP32[$45 >> 2] = HEAP32[$45 >> 2] | 8192;
 HEAP32[57180 + (HEAP32[$35 >> 2] | 0) + 72 >> 2] = 57012;
 HEAP32[57264 + (HEAP32[$42 >> 2] | 0) + 72 >> 2] = 57096;
 return;
}

function _jinit_upsampler($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$0100 = 0, $$pre = 0, $1 = 0, $11 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $42 = 0, $43 = 0, $44 = 0, $51 = 0, $54 = 0, $67 = 0, $7 = 0, $71 = 0, $80 = 0, $85 = 0, $88 = 0, $90 = 0, $94 = 0;
 $1 = $0 + 4 | 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 160) | 0;
 HEAP32[$0 + 452 >> 2] = $4;
 HEAP32[$4 >> 2] = 127;
 HEAP32[$4 + 4 >> 2] = 3;
 $7 = $4 + 8 | 0;
 HEAP32[$7 >> 2] = 0;
 if (HEAP32[$0 + 300 >> 2] | 0) {
  $11 = HEAP32[$0 >> 2] | 0;
  HEAP32[$11 + 20 >> 2] = 25;
  FUNCTION_TABLE_vi[HEAP32[$11 >> 2] & 255]($0);
 }
 $$pre = $0 + 316 | 0;
 if (!(HEAP32[$0 + 76 >> 2] | 0)) $94 = 0; else $94 = (HEAP32[$$pre >> 2] | 0) > 1;
 $21 = $0 + 36 | 0;
 $22 = $0 + 308 | 0;
 $23 = $0 + 312 | 0;
 $24 = $4 + 100 | 0;
 $25 = $4 + 52 | 0;
 $26 = $0 + 112 | 0;
 $27 = $4 + 12 | 0;
 $28 = $4 + 140 | 0;
 $29 = $4 + 150 | 0;
 $$0 = 0;
 $$0100 = HEAP32[$0 + 216 >> 2] | 0;
 while (1) {
  if (($$0 | 0) >= (HEAP32[$21 >> 2] | 0)) break;
  $35 = HEAP32[$$0100 + 36 >> 2] | 0;
  $36 = Math_imul($35, HEAP32[$$0100 + 8 >> 2] | 0) | 0;
  $37 = HEAP32[$$pre >> 2] | 0;
  $38 = ($36 | 0) / ($37 | 0) | 0;
  $42 = (Math_imul(HEAP32[$$0100 + 12 >> 2] | 0, $35) | 0) / ($37 | 0) | 0;
  $43 = HEAP32[$22 >> 2] | 0;
  $44 = HEAP32[$23 >> 2] | 0;
  HEAP32[$24 + ($$0 << 2) >> 2] = $42;
  do if (!(HEAP32[$$0100 + 48 >> 2] | 0)) HEAP32[$25 + ($$0 << 2) >> 2] = 11; else {
   $51 = ($42 | 0) == ($44 | 0);
   if (($38 | 0) == ($43 | 0) & $51) {
    HEAP32[$25 + ($$0 << 2) >> 2] = 12;
    break;
   }
   $54 = ($38 << 1 | 0) == ($43 | 0);
   do if ($54 & $51) {
    if ($94) if ((HEAP32[$$0100 + 40 >> 2] | 0) >>> 0 > 2) {
     HEAP32[$25 + ($$0 << 2) >> 2] = 13;
     break;
    }
    HEAP32[$25 + ($$0 << 2) >> 2] = 14;
   } else if ($54 & ($42 << 1 | 0) == ($44 | 0)) {
    if ($94) if ((HEAP32[$$0100 + 40 >> 2] | 0) >>> 0 > 2) {
     HEAP32[$25 + ($$0 << 2) >> 2] = 15;
     HEAP32[$7 >> 2] = 1;
     break;
    }
    HEAP32[$25 + ($$0 << 2) >> 2] = 16;
    break;
   } else {
    $67 = ($43 | 0) / ($38 | 0) | 0;
    if (!($43 - (Math_imul($67, $38) | 0) | 0)) {
     $71 = ($44 | 0) / ($42 | 0) | 0;
     if (!($44 - (Math_imul($71, $42) | 0) | 0)) {
      HEAP32[$25 + ($$0 << 2) >> 2] = 17;
      HEAP8[$28 + $$0 >> 0] = $67;
      HEAP8[$29 + $$0 >> 0] = $71;
      break;
     }
    }
    $80 = HEAP32[$0 >> 2] | 0;
    HEAP32[$80 + 20 >> 2] = 38;
    FUNCTION_TABLE_vi[HEAP32[$80 >> 2] & 255]($0);
    break;
   } while (0);
   $85 = HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] | 0;
   $88 = _jround_up(HEAP32[$26 >> 2] | 0, HEAP32[$22 >> 2] | 0) | 0;
   $90 = FUNCTION_TABLE_iiiii[$85 & 15]($0, 1, $88, HEAP32[$23 >> 2] | 0) | 0;
   HEAP32[$27 + ($$0 << 2) >> 2] = $90;
  } while (0);
  $$0 = $$0 + 1 | 0;
  $$0100 = $$0100 + 84 | 0;
 }
 return;
}

function _jpeg_idct_2x2($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$096 = 0, $$097 = 0, $$098 = 0, $$1 = 0, $$199 = 0, $$sink = 0, $102 = 0, $106 = 0, $107 = 0, $11 = 0, $13 = 0, $26 = 0, $32 = 0, $49 = 0, $5 = 0, $60 = 0, $61 = 0, $7 = 0, $71 = 0, $74 = 0, $76 = 0, $78 = 0, $92 = 0, $97 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $5 = sp;
 $7 = HEAP32[$0 + 324 >> 2] | 0;
 $$0 = 8;
 $$096 = $2;
 $$097 = HEAP32[$1 + 80 >> 2] | 0;
 $$098 = $5;
 L1 : while (1) {
  L3 : do switch ($$0 | 0) {
  case 0:
   {
    break L1;
    break;
   }
  case 2:
  case 4:
  case 6:
   break;
  default:
   {
    $11 = HEAP16[$$096 + 16 >> 1] | 0;
    $13 = HEAP16[$$096 + 48 >> 1] | 0;
    if (!(($11 | $13) << 16 >> 16)) if (!(HEAP16[$$096 + 80 >> 1] | 0)) if (!(HEAP16[$$096 + 112 >> 1] | 0)) {
     $26 = Math_imul(HEAP16[$$096 >> 1] << 2, HEAP32[$$097 >> 2] | 0) | 0;
     HEAP32[$$098 >> 2] = $26;
     HEAP32[$$098 + 32 >> 2] = $26;
     break L3;
    } else $49 = 0; else $49 = 0; else $49 = $13;
    $32 = Math_imul(HEAP16[$$096 >> 1] << 15, HEAP32[$$097 >> 2] | 0) | 0;
    $60 = (Math_imul(Math_imul(HEAP16[$$096 + 112 >> 1] | 0, -5906) | 0, HEAP32[$$097 + 224 >> 2] | 0) | 0) + (Math_imul((HEAP16[$$096 + 80 >> 1] | 0) * 6967 | 0, HEAP32[$$097 + 160 >> 2] | 0) | 0) + (Math_imul(Math_imul($49 << 16 >> 16, -10426) | 0, HEAP32[$$097 + 96 >> 2] | 0) | 0) + (Math_imul(($11 << 16 >> 16) * 29692 | 0, HEAP32[$$097 + 32 >> 2] | 0) | 0) | 0;
    $61 = $32 | 4096;
    HEAP32[$$098 >> 2] = $61 + $60 >> 13;
    HEAP32[$$098 + 32 >> 2] = $61 - $60 >> 13;
   }
  } while (0);
  $$0 = $$0 + -1 | 0;
  $$096 = $$096 + 2 | 0;
  $$097 = $$097 + 4 | 0;
  $$098 = $$098 + 4 | 0;
 }
 $71 = $7 + 128 | 0;
 $$1 = 0;
 $$199 = $5;
 while (1) {
  if (($$1 | 0) == 2) break;
  $74 = (HEAP32[$3 + ($$1 << 2) >> 2] | 0) + $4 | 0;
  $76 = HEAP32[$$199 + 4 >> 2] | 0;
  $78 = HEAP32[$$199 + 12 >> 2] | 0;
  if (!($76 | $78)) if (!(HEAP32[$$199 + 20 >> 2] | 0)) if (!(HEAP32[$$199 + 28 >> 2] | 0)) {
   $92 = HEAP8[$71 + (((HEAP32[$$199 >> 2] | 0) + 16 | 0) >>> 5 & 1023) >> 0] | 0;
   HEAP8[$74 >> 0] = $92;
   $$sink = $92;
  } else {
   $102 = 0;
   label = 15;
  } else {
   $102 = 0;
   label = 15;
  } else {
   $102 = $78;
   label = 15;
  }
  if ((label | 0) == 15) {
   label = 0;
   $97 = Math_imul(HEAP32[$$199 + 28 >> 2] | 0, -5906) | 0;
   $106 = $97 + ($76 * 29692 | 0) + ((HEAP32[$$199 + 20 >> 2] | 0) * 6967 | 0) + (Math_imul($102, -10426) | 0) | 0;
   $107 = (HEAP32[$$199 >> 2] << 15) + 524288 | 0;
   HEAP8[$74 >> 0] = HEAP8[$71 + (($107 + $106 | 0) >>> 20 & 1023) >> 0] | 0;
   $$sink = HEAP8[$71 + (($107 - $106 | 0) >>> 20 & 1023) >> 0] | 0;
  }
  HEAP8[$74 + 1 >> 0] = $$sink;
  $$1 = $$1 + 1 | 0;
  $$199 = $$199 + 32 | 0;
 }
 STACKTOP = sp;
 return;
}

function _default_decompress_parms($0) {
 $0 = $0 | 0;
 var $$sink82 = 0, $$sink84 = 0, $10 = 0, $11 = 0, $19 = 0, $2 = 0, $20 = 0, $22 = 0, $24 = 0, $31 = 0, $42 = 0, $43 = 0;
 $2 = HEAP32[$0 + 36 >> 2] | 0;
 L1 : do switch ($2 | 0) {
 case 1:
  {
   $$sink82 = $2;
   $$sink84 = $2;
   break;
  }
 case 3:
  {
   if (!(HEAP32[$0 + 280 >> 2] | 0)) if (!(HEAP32[$0 + 292 >> 2] | 0)) {
    $19 = HEAP32[$0 + 216 >> 2] | 0;
    $20 = HEAP32[$19 >> 2] | 0;
    $22 = HEAP32[$19 + 84 >> 2] | 0;
    $24 = HEAP32[$19 + 168 >> 2] | 0;
    if (($20 | 0) == 1 & ($22 | 0) == 2 & ($24 | 0) == 3) {
     $$sink82 = 2;
     $$sink84 = 3;
     break L1;
    }
    if (($20 | 0) == 82 & ($22 | 0) == 71 & ($24 | 0) == 66) {
     $$sink82 = 2;
     $$sink84 = 2;
     break L1;
    }
    $31 = HEAP32[$0 >> 2] | 0;
    HEAP32[$31 + 24 >> 2] = $20;
    HEAP32[$31 + 28 >> 2] = $22;
    HEAP32[$31 + 32 >> 2] = $24;
    HEAP32[$31 + 20 >> 2] = 111;
    FUNCTION_TABLE_vii[HEAP32[$31 + 4 >> 2] & 63]($0, 1);
    $$sink82 = 2;
    $$sink84 = 3;
    break L1;
   } else {
    $10 = HEAP8[$0 + 296 >> 0] | 0;
    switch ($10 << 24 >> 24) {
    case 0:
     {
      $$sink82 = 2;
      $$sink84 = 2;
      break L1;
      break;
     }
    case 1:
     {
      $$sink82 = 2;
      $$sink84 = 3;
      break L1;
      break;
     }
    default:
     {
      $11 = HEAP32[$0 >> 2] | 0;
      HEAP32[$11 + 20 >> 2] = 114;
      HEAP32[$11 + 24 >> 2] = $10 & 255;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, -1);
      $$sink82 = 2;
      $$sink84 = 3;
      break L1;
     }
    }
   } else {
    $$sink82 = 2;
    $$sink84 = 3;
   }
   break;
  }
 case 4:
  {
   if (!(HEAP32[$0 + 292 >> 2] | 0)) {
    $$sink82 = 4;
    $$sink84 = 4;
   } else {
    $42 = HEAP8[$0 + 296 >> 0] | 0;
    switch ($42 << 24 >> 24) {
    case 0:
     {
      $$sink82 = 4;
      $$sink84 = 4;
      break L1;
      break;
     }
    case 2:
     {
      $$sink82 = 4;
      $$sink84 = 5;
      break L1;
      break;
     }
    default:
     {
      $43 = HEAP32[$0 >> 2] | 0;
      HEAP32[$43 + 20 >> 2] = 114;
      HEAP32[$43 + 24 >> 2] = $42 & 255;
      FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, -1);
      $$sink82 = 4;
      $$sink84 = 5;
      break L1;
     }
    }
   }
   break;
  }
 default:
  {
   $$sink82 = 0;
   $$sink84 = 0;
  }
 } while (0);
 HEAP32[$0 + 40 >> 2] = $$sink84;
 HEAP32[$0 + 44 >> 2] = $$sink82;
 HEAP32[$0 + 48 >> 2] = 1;
 HEAP32[$0 + 52 >> 2] = 1;
 HEAPF64[$0 + 56 >> 3] = 1.0;
 HEAP32[$0 + 64 >> 2] = 0;
 HEAP32[$0 + 68 >> 2] = 0;
 HEAP32[$0 + 72 >> 2] = 0;
 HEAP32[$0 + 76 >> 2] = 1;
 HEAP32[$0 + 80 >> 2] = 1;
 HEAP32[$0 + 84 >> 2] = 0;
 HEAP32[$0 + 88 >> 2] = 2;
 HEAP32[$0 + 92 >> 2] = 1;
 HEAP32[$0 + 96 >> 2] = 256;
 HEAP32[$0 + 136 >> 2] = 0;
 HEAP32[$0 + 100 >> 2] = 0;
 HEAP32[$0 + 104 >> 2] = 0;
 HEAP32[$0 + 108 >> 2] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIfNS0_2DbEEEPKcS4_S4_RT0_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$049$idx = 0, $$050 = 0, $$07$i$i = 0, $$247$ph = 0, $$3 = 0, $11 = 0, $12 = 0, $17 = 0, $25 = 0, $27 = 0, $3 = 0, $32 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $vararg_buffer = sp + 24 | 0;
 $3 = sp + 60 | 0;
 $4 = sp;
 $5 = sp + 48 | 0;
 L1 : do if (($1 - $0 | 0) >>> 0 > 8) {
  $$049$idx = 0;
  $$050 = $3;
  while (1) {
   $11 = HEAP8[$0 + $$049$idx >> 0] | 0;
   $12 = $11 << 24 >> 24;
   if (($$049$idx | 0) == 8) {
    label = 6;
    break;
   }
   if (!(_isxdigit($12) | 0)) break;
   $17 = HEAP8[$0 + ($$049$idx | 1) >> 0] | 0;
   HEAP8[$$050 >> 0] = ((($12 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $12 << 4) + $17 + (($17 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   $$049$idx = $$049$idx + 2 | 0;
   $$050 = $$050 + 1 | 0;
  }
  do if ((label | 0) == 6) {
   if ($11 << 24 >> 24 == 69) {
    L11 : do if (($$050 | 0) != ($3 | 0)) {
     $$0$i$i = $$050;
     $$07$i$i = $3;
     while (1) {
      $25 = $$0$i$i + -1 | 0;
      if ($$07$i$i >>> 0 >= $25 >>> 0) break L11;
      $27 = HEAP8[$$07$i$i >> 0] | 0;
      HEAP8[$$07$i$i >> 0] = HEAP8[$25 >> 0] | 0;
      HEAP8[$25 >> 0] = $27;
      $$0$i$i = $25;
      $$07$i$i = $$07$i$i + 1 | 0;
     }
    } while (0);
    HEAP32[$4 >> 2] = 0;
    HEAP32[$4 + 4 >> 2] = 0;
    HEAP32[$4 + 8 >> 2] = 0;
    HEAP32[$4 + 12 >> 2] = 0;
    HEAP32[$4 + 16 >> 2] = 0;
    HEAP32[$4 + 20 >> 2] = 0;
    HEAPF64[$vararg_buffer >> 3] = +HEAPF32[$3 >> 2];
    $32 = _snprintf($4, 24, 50943, $vararg_buffer) | 0;
    if ($32 >>> 0 > 23) break;
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($5, $4, $32);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($vararg_buffer, $5);
    $34 = $2 + 4 | 0;
    $35 = HEAP32[$34 >> 2] | 0;
    if ($35 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($35, $vararg_buffer);
     HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $vararg_buffer);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($vararg_buffer);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$247$ph = $0 + 9 | 0;
   } else $$247$ph = $0;
   $$3 = $$247$ph;
   break L1;
  } while (0);
  $$3 = $0;
 } else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function ___stpncpy($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$037$lcssa = 0, $$03754 = 0, $$038$lcssa = 0, $$03867 = 0, $$039$lcssa = 0, $$03966 = 0, $$042$lcssa = 0, $$04265 = 0, $$055 = 0, $$1$lcssa = 0, $$140 = 0, $$143 = 0, $$153 = 0, $$2 = 0, $$24147 = 0, $$24446 = 0, $$345 = 0, $$348 = 0, $$4 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $19 = 0, $22 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $33 = 0, $37 = 0, label = 0;
 $3 = $1;
 L1 : do if (!(($3 ^ $0) & 3)) {
  $10 = ($2 | 0) != 0;
  if ($10 & ($3 & 3 | 0) != 0) {
   $$03867 = $2;
   $$03966 = $1;
   $$04265 = $0;
   while (1) {
    $11 = HEAP8[$$03966 >> 0] | 0;
    HEAP8[$$04265 >> 0] = $11;
    if (!($11 << 24 >> 24)) {
     $$345 = $$04265;
     $$4 = $$03867;
     break L1;
    }
    $13 = $$03867 + -1 | 0;
    $14 = $$03966 + 1 | 0;
    $15 = $$04265 + 1 | 0;
    $19 = ($13 | 0) != 0;
    if ($19 & ($14 & 3 | 0) != 0) {
     $$03867 = $13;
     $$03966 = $14;
     $$04265 = $15;
    } else {
     $$038$lcssa = $13;
     $$039$lcssa = $14;
     $$042$lcssa = $15;
     $$lcssa = $19;
     break;
    }
   }
  } else {
   $$038$lcssa = $2;
   $$039$lcssa = $1;
   $$042$lcssa = $0;
   $$lcssa = $10;
  }
  if ($$lcssa) if (!(HEAP8[$$039$lcssa >> 0] | 0)) {
   $$345 = $$042$lcssa;
   $$4 = $$038$lcssa;
  } else {
   L11 : do if ($$038$lcssa >>> 0 > 3) {
    $$03754 = $$042$lcssa;
    $$055 = $$039$lcssa;
    $$153 = $$038$lcssa;
    while (1) {
     $22 = HEAP32[$$055 >> 2] | 0;
     if (($22 & -2139062144 ^ -2139062144) & $22 + -16843009 | 0) {
      $$0$lcssa = $$055;
      $$037$lcssa = $$03754;
      $$1$lcssa = $$153;
      break L11;
     }
     HEAP32[$$03754 >> 2] = $22;
     $28 = $$153 + -4 | 0;
     $29 = $$055 + 4 | 0;
     $30 = $$03754 + 4 | 0;
     if ($28 >>> 0 > 3) {
      $$03754 = $30;
      $$055 = $29;
      $$153 = $28;
     } else {
      $$0$lcssa = $29;
      $$037$lcssa = $30;
      $$1$lcssa = $28;
      break;
     }
    }
   } else {
    $$0$lcssa = $$039$lcssa;
    $$037$lcssa = $$042$lcssa;
    $$1$lcssa = $$038$lcssa;
   } while (0);
   $$140 = $$0$lcssa;
   $$143 = $$037$lcssa;
   $$2 = $$1$lcssa;
   label = 13;
  } else {
   $$345 = $$042$lcssa;
   $$4 = 0;
  }
 } else {
  $$140 = $1;
  $$143 = $0;
  $$2 = $2;
  label = 13;
 } while (0);
 L17 : do if ((label | 0) == 13) if (!$$2) {
  $$345 = $$143;
  $$4 = 0;
 } else {
  $$24147 = $$140;
  $$24446 = $$143;
  $$348 = $$2;
  while (1) {
   $33 = HEAP8[$$24147 >> 0] | 0;
   HEAP8[$$24446 >> 0] = $33;
   if (!($33 << 24 >> 24)) {
    $$345 = $$24446;
    $$4 = $$348;
    break L17;
   }
   $$348 = $$348 + -1 | 0;
   $37 = $$24446 + 1 | 0;
   if (!$$348) {
    $$345 = $37;
    $$4 = 0;
    break;
   } else {
    $$24147 = $$24147 + 1 | 0;
    $$24446 = $37;
   }
  }
 } while (0);
 _memset($$345 | 0, 0, $$4 | 0) | 0;
 return $$345 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_floating_numberIeNS0_2DbEEEPKcS4_S4_RT0_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $$049$idx = 0, $$050 = 0, $$07$i$i = 0, $$247$ph = 0, $$3 = 0, $11 = 0, $12 = 0, $17 = 0, $25 = 0, $27 = 0, $3 = 0, $31 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $vararg_buffer = sp + 48 | 0;
 $3 = sp + 40 | 0;
 $4 = sp;
 $5 = sp + 72 | 0;
 L1 : do if (($1 - $0 | 0) >>> 0 > 20) {
  $$049$idx = 0;
  $$050 = $3;
  while (1) {
   $11 = HEAP8[$0 + $$049$idx >> 0] | 0;
   $12 = $11 << 24 >> 24;
   if (($$049$idx | 0) == 20) {
    label = 6;
    break;
   }
   if (!(_isxdigit($12) | 0)) break;
   $17 = HEAP8[$0 + ($$049$idx | 1) >> 0] | 0;
   HEAP8[$$050 >> 0] = ((($12 + -48 | 0) >>> 0 < 10 ? 0 : 9) + $12 << 4) + $17 + (($17 + -48 | 0) >>> 0 < 10 ? 208 : 169);
   $$049$idx = $$049$idx + 2 | 0;
   $$050 = $$050 + 1 | 0;
  }
  do if ((label | 0) == 6) {
   if ($11 << 24 >> 24 == 69) {
    L11 : do if (($$050 | 0) != ($3 | 0)) {
     $$0$i$i = $$050;
     $$07$i$i = $3;
     while (1) {
      $25 = $$0$i$i + -1 | 0;
      if ($$07$i$i >>> 0 >= $25 >>> 0) break L11;
      $27 = HEAP8[$$07$i$i >> 0] | 0;
      HEAP8[$$07$i$i >> 0] = HEAP8[$25 >> 0] | 0;
      HEAP8[$25 >> 0] = $27;
      $$0$i$i = $25;
      $$07$i$i = $$07$i$i + 1 | 0;
     }
    } while (0);
    dest = $4;
    stop = dest + 40 | 0;
    do {
     HEAP32[dest >> 2] = 0;
     dest = dest + 4 | 0;
    } while ((dest | 0) < (stop | 0));
    HEAPF64[$vararg_buffer >> 3] = +HEAPF64[$3 >> 3];
    $31 = _snprintf($4, 40, 50935, $vararg_buffer) | 0;
    if ($31 >>> 0 > 39) break;
    HEAP32[$5 >> 2] = 0;
    HEAP32[$5 + 4 >> 2] = 0;
    HEAP32[$5 + 8 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($5, $4, $31);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($vararg_buffer, $5);
    $33 = $2 + 4 | 0;
    $34 = HEAP32[$33 >> 2] | 0;
    if ($34 >>> 0 < (HEAP32[$2 + 8 >> 2] | 0) >>> 0) {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($34, $vararg_buffer);
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 24;
    } else __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($2, $vararg_buffer);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($vararg_buffer);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$247$ph = $0 + 21 | 0;
   } else $$247$ph = $0;
   $$3 = $$247$ph;
   break L1;
  } while (0);
  $$3 = $0;
 } else $$3 = $0; while (0);
 STACKTOP = sp;
 return $$3 | 0;
}

function _consume_data($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$071 = 0, $$072 = 0, $$073 = 0, $$074 = 0, $$075 = 0, $$076 = 0, $$078 = 0, $$1 = 0, $$177 = 0, $$2 = 0, $1 = 0, $10 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $37 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $68 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 $3 = HEAP32[$0 + 428 >> 2] | 0;
 $4 = $0 + 328 | 0;
 $5 = $0 + 4 | 0;
 $6 = $0 + 148 | 0;
 $$075 = 0;
 while (1) {
  if (($$075 | 0) >= (HEAP32[$4 >> 2] | 0)) break;
  $10 = HEAP32[$0 + 332 + ($$075 << 2) >> 2] | 0;
  $20 = HEAP32[$10 + 12 >> 2] | 0;
  $21 = Math_imul($20, HEAP32[$6 >> 2] | 0) | 0;
  $22 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 32 >> 2] & 31]($0, HEAP32[$3 + 72 + (HEAP32[$10 + 4 >> 2] << 2) >> 2] | 0, $21, $20, 1) | 0;
  HEAP32[$1 + ($$075 << 2) >> 2] = $22;
  $$075 = $$075 + 1 | 0;
 }
 $25 = $3 + 24 | 0;
 $27 = $3 + 28 | 0;
 $28 = $3 + 20 | 0;
 $29 = $0 + 348 | 0;
 $30 = $0 + 444 | 0;
 $31 = $3 + 32 | 0;
 $$072 = HEAP32[$25 >> 2] | 0;
 L5 : while (1) {
  if (($$072 | 0) >= (HEAP32[$27 >> 2] | 0)) {
   label = 21;
   break;
  }
  $$078 = HEAP32[$28 >> 2] | 0;
  while (1) {
   if ($$078 >>> 0 >= (HEAP32[$29 >> 2] | 0) >>> 0) break;
   $37 = HEAP32[$4 >> 2] | 0;
   $$076 = 0;
   $$1 = 0;
   while (1) {
    if (($$1 | 0) >= ($37 | 0)) break;
    $40 = HEAP32[$0 + 332 + ($$1 << 2) >> 2] | 0;
    $42 = HEAP32[$40 + 52 >> 2] | 0;
    $43 = Math_imul($42, $$078) | 0;
    $45 = HEAP32[$40 + 56 >> 2] | 0;
    $46 = $1 + ($$1 << 2) | 0;
    $$073 = 0;
    $$177 = $$076;
    while (1) {
     if (($$073 | 0) >= ($45 | 0)) break;
     $$0 = (HEAP32[(HEAP32[$46 >> 2] | 0) + ($$073 + $$072 << 2) >> 2] | 0) + ($43 << 7) | 0;
     $$074 = 0;
     $$2 = $$177;
     while (1) {
      if (($$074 | 0) >= ($42 | 0)) break;
      HEAP32[$3 + 32 + ($$2 << 2) >> 2] = $$0;
      $$0 = $$0 + 128 | 0;
      $$074 = $$074 + 1 | 0;
      $$2 = $$2 + 1 | 0;
     }
     $$073 = $$073 + 1 | 0;
     $$177 = $$2;
    }
    $$076 = $$177;
    $$1 = $$1 + 1 | 0;
   }
   if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$30 >> 2] | 0) + 4 >> 2] & 63]($0, $31) | 0)) {
    label = 18;
    break L5;
   }
   $$078 = $$078 + 1 | 0;
  }
  HEAP32[$28 >> 2] = 0;
  $$072 = $$072 + 1 | 0;
 }
 do if ((label | 0) == 18) {
  HEAP32[$25 >> 2] = $$072;
  HEAP32[$28 >> 2] = $$078;
  $$071 = 0;
 } else if ((label | 0) == 21) {
  $68 = (HEAP32[$6 >> 2] | 0) + 1 | 0;
  HEAP32[$6 >> 2] = $68;
  if ($68 >>> 0 < (HEAP32[$0 + 320 >> 2] | 0) >>> 0) {
   _start_iMCU_row_28($0);
   $$071 = 3;
   break;
  } else {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 436 >> 2] | 0) + 12 >> 2] & 255]($0);
   $$071 = 4;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$071 | 0;
}

function _getNFTMarkerInfo($id, $markerIndex) {
 $id = $id | 0;
 $markerIndex = $markerIndex | 0;
 var $$pre = 0.0, $4 = 0, $5 = 0, $call7 = 0, $err$0 = 0.0, $err$1 = 0.0, $flag$0 = 0, $flag$1 = 0, $i$0 = 0, $id$addr = 0, $j$0 = 0, $k$0 = 0, $kpmResult = 0, $kpmResultNum = 0, $or$cond = 0, $retval$1 = 0, $trans = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $id$addr = sp + 52 | 0;
 $kpmResult = sp + 56 | 0;
 $kpmResultNum = sp + 48 | 0;
 $trans = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = HEAP32[3413] | 0; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  if ((HEAP32[$call7 + 240 >> 2] | 0) <= ($markerIndex | 0)) {
   $retval$1 = HEAP32[3415] | 0;
   break;
  }
  HEAP32[$kpmResult >> 2] = 0;
  HEAP32[$kpmResultNum >> 2] = -1;
  _kpmGetResult(HEAP32[$call7 + 232 >> 2] | 0, $kpmResult, $kpmResultNum) | 0;
  $4 = HEAP32[$kpmResultNum >> 2] | 0;
  $5 = HEAP32[$kpmResult >> 2] | 0;
  $err$0 = -1.0;
  $flag$0 = -1;
  $i$0 = 0;
  while (1) {
   if (($i$0 | 0) >= ($4 | 0)) break;
   if ((HEAP32[$5 + ($i$0 * 68 | 0) + 48 >> 2] | 0) == ($markerIndex | 0)) if (!(HEAP32[$5 + ($i$0 * 68 | 0) + 60 >> 2] | 0)) {
    $$pre = +HEAPF32[$5 + ($i$0 * 68 | 0) + 52 >> 2];
    $or$cond = ($flag$0 | 0) == -1 | $err$0 > $$pre;
    $err$1 = $or$cond ? $$pre : $err$0;
    $flag$1 = $or$cond ? $i$0 : $flag$0;
   } else {
    $err$1 = $err$0;
    $flag$1 = $flag$0;
   } else {
    $err$1 = $err$0;
    $flag$1 = $flag$0;
   }
   $err$0 = $err$1;
   $flag$0 = $flag$1;
   $i$0 = $i$0 + 1 | 0;
  }
  if (($flag$0 | 0) > -1) {
   $j$0 = 0;
   while (1) {
    if (($j$0 | 0) == 3) break;
    $k$0 = 0;
    while (1) {
     if (($k$0 | 0) == 4) break;
     HEAP32[$trans + ($j$0 << 4) + ($k$0 << 2) >> 2] = HEAP32[$5 + ($flag$0 * 68 | 0) + ($j$0 << 4) + ($k$0 << 2) >> 2];
     $k$0 = $k$0 + 1 | 0;
    }
    $j$0 = $j$0 + 1 | 0;
   }
   _emscripten_asm_const_iiddddddddddddd(3, $markerIndex | 0, +$err$0, +(+HEAPF32[$trans >> 2]), +(+HEAPF32[$trans + 4 >> 2]), +(+HEAPF32[$trans + 8 >> 2]), +(+HEAPF32[$trans + 12 >> 2]), +(+HEAPF32[$trans + 16 >> 2]), +(+HEAPF32[$trans + 20 >> 2]), +(+HEAPF32[$trans + 24 >> 2]), +(+HEAPF32[$trans + 28 >> 2]), +(+HEAPF32[$trans + 32 >> 2]), +(+HEAPF32[$trans + 36 >> 2]), +(+HEAPF32[$trans + 40 >> 2]), +(+HEAPF32[$trans + 44 >> 2])) | 0;
  } else _emscripten_asm_const_ii(4, $markerIndex | 0) | 0;
  $retval$1 = 0;
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function _arPattGetIDGlobal($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16, $17, $18) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = +$9;
 $10 = $10 | 0;
 $11 = $11 | 0;
 $12 = $12 | 0;
 $13 = $13 | 0;
 $14 = $14 | 0;
 $15 = $15 | 0;
 $16 = $16 | 0;
 $17 = $17 | 0;
 $18 = $18 | 0;
 var $$0 = 0, $$091 = 0, $$092 = 0, $19 = 0, $20 = 0, $24 = 0, $26 = 0, $28 = 0, $31 = 0, $41 = 0, $45 = 0, $49 = 0, $51 = 0, $56 = 0, $57 = 0, $58 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 12304 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(12304);
 $19 = sp;
 $20 = sp + 12288 | 0;
 do if (($2 + -2 | 0) >>> 0 < 3) {
  if (($16 | 0) != 2830) {
   $45 = $16 & 255;
   if ((_arPattGetImage2($1, 2, $45, $45 * 3 | 0, $3, $4, $5, $6, $7, $8, $9, $19) | 0) < 0) {
    HEAP32[$13 >> 2] = -1;
    $$091 = -6;
    break;
   }
   $49 = _get_matrix_code($19, $45, $13, $14, $15, $16, $17) | 0;
   if (!$18) {
    $$091 = $49;
    break;
   }
   $51 = $18;
   HEAP32[$51 >> 2] = 0;
   HEAP32[$51 + 4 >> 2] = 0;
   $$091 = $49;
   break;
  }
  if ((_arPattGetImage2($1, 2, 14, 42, $3, $4, $5, $6, $7, $8, .875, $19) | 0) < 0) {
   HEAP32[$13 >> 2] = -1;
   $$091 = -6;
   break;
  }
  $24 = _get_global_id_code($19, $20, $14, $15, $17) | 0;
  if (($24 | 0) < 0) {
   HEAP32[$13 >> 2] = -1;
   $$091 = $24;
   break;
  }
  $26 = $20;
  $28 = HEAP32[$26 >> 2] | 0;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  if (($28 | 0) == -1 & ($31 | 0) == -1) {
   HEAP32[$13 >> 2] = -1;
   $$091 = -5;
   break;
  }
  HEAP32[$13 >> 2] = ($28 & -32768 | 0) == 0 & 0 == 0 ? $28 & 32767 : 0;
  if (!$18) $$091 = $24; else {
   $41 = $18;
   HEAP32[$41 >> 2] = $28;
   HEAP32[$41 + 4 >> 2] = $31;
   $$091 = $24;
  }
 } else $$091 = 1; while (0);
 L21 : do switch ($2 | 0) {
 case 0:
 case 1:
 case 3:
 case 4:
  {
   if (!$0) {
    HEAP32[$10 >> 2] = -1;
    $$0 = -1;
    break L21;
   }
   $56 = $0 + 28 | 0;
   $57 = HEAP32[$56 >> 2] | 0;
   $58 = $57 << 2;
   switch ($2 | 0) {
   case 0:
   case 3:
    {
     if ((_arPattGetImage2($1, 0, $57, $58, $3, $4, $5, $6, $7, $8, $9, $19) | 0) < 0) {
      HEAP32[$10 >> 2] = -1;
      $$0 = -6;
      break L21;
     } else {
      $$0 = _pattern_match($0, 0, $19, HEAP32[$56 >> 2] | 0, $10, $11, $12) | 0;
      break L21;
     }
     break;
    }
   default:
    if ((_arPattGetImage2($1, 1, $57, $58, $3, $4, $5, $6, $7, $8, $9, $19) | 0) < 0) {
     HEAP32[$10 >> 2] = -1;
     $$0 = -6;
     break L21;
    } else {
     $$0 = _pattern_match($0, 1, $19, HEAP32[$56 >> 2] | 0, $10, $11, $12) | 0;
     break L21;
    }
   }
   break;
  }
 default:
  $$0 = 1;
 } while (0);
 if (($$091 | 0) == 1) $$092 = $$0; else $$092 = ($$0 | 0) == 1 ? $$091 : ($$0 & $$091 | 0) < 0 ? $$0 : 0;
 STACKTOP = sp;
 return $$092 | 0;
}

function _mbsnrtowcs($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$04975 = 0, $$05374 = 0, $$056 = 0, $$150 = 0, $$154 = 0, $$15773 = 0, $$164 = 0, $$176 = 0, $$2 = 0, $$25170 = 0, $$25569 = 0, $$258 = 0, $$352 = 0, $$359 = 0, $$371 = 0, $$468 = 0, $$cast = 0, $11 = 0, $12 = 0, $15 = 0, $16 = 0, $18 = 0, $21 = 0, $22 = 0, $25 = 0, $30 = 0, $31 = 0, $39 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(1040);
 $5 = sp;
 $6 = sp + 1024 | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP32[$6 >> 2] = $7;
 $8 = ($0 | 0) != 0;
 $$056 = $8 ? $3 : 256;
 $$0 = $8 ? $0 : $5;
 $$cast = $7;
 L1 : do if (($$056 | 0) != 0 & ($7 | 0) != 0) {
  $$04975 = 0;
  $$05374 = $2;
  $$15773 = $$056;
  $$176 = $$0;
  $44 = $$cast;
  while (1) {
   $11 = $$05374 >>> 2;
   $12 = $11 >>> 0 >= $$15773 >>> 0;
   if (!($$05374 >>> 0 > 131 | $12)) {
    $$150 = $$04975;
    $$154 = $$05374;
    $$164 = $$176;
    $$359 = $$15773;
    $25 = $44;
    break L1;
   }
   $spec$select = $12 ? $$15773 : $11;
   $15 = $$05374 - $spec$select | 0;
   $16 = _mbsrtowcs($$176, $6, $spec$select, $4) | 0;
   if (($16 | 0) == -1) break;
   $18 = ($$176 | 0) == ($5 | 0);
   $$258 = $$15773 - ($18 ? 0 : $16) | 0;
   $$2 = $18 ? $$176 : $$176 + ($16 << 2) | 0;
   $21 = $16 + $$04975 | 0;
   $22 = HEAP32[$6 >> 2] | 0;
   if (($$258 | 0) != 0 & ($22 | 0) != 0) {
    $$04975 = $21;
    $$05374 = $15;
    $$15773 = $$258;
    $$176 = $$2;
    $44 = $22;
   } else {
    $$150 = $21;
    $$154 = $15;
    $$164 = $$2;
    $$359 = $$258;
    $25 = $22;
    break L1;
   }
  }
  $$150 = -1;
  $$154 = $15;
  $$164 = $$176;
  $$359 = 0;
  $25 = HEAP32[$6 >> 2] | 0;
 } else {
  $$150 = 0;
  $$154 = $2;
  $$164 = $$0;
  $$359 = $$056;
  $25 = $$cast;
 } while (0);
 L9 : do if (!$25) $$352 = $$150; else if (($$359 | 0) != 0 & ($$154 | 0) != 0) {
  $$25170 = $$150;
  $$25569 = $$154;
  $$371 = $$164;
  $$468 = $$359;
  $30 = $25;
  while (1) {
   $31 = _mbrtowc($$371, $30, $$25569, $4) | 0;
   if (($31 + 2 | 0) >>> 0 < 3) break;
   $30 = (HEAP32[$6 >> 2] | 0) + $31 | 0;
   HEAP32[$6 >> 2] = $30;
   $$25569 = $$25569 - $31 | 0;
   $$468 = $$468 + -1 | 0;
   $39 = $$25170 + 1 | 0;
   if (!(($$468 | 0) != 0 & ($$25569 | 0) != 0)) {
    $$352 = $39;
    break L9;
   } else {
    $$25170 = $39;
    $$371 = $$371 + 4 | 0;
   }
  }
  switch ($31 | 0) {
  case -1:
   {
    $$352 = $31;
    break L9;
    break;
   }
  case 0:
   {
    HEAP32[$6 >> 2] = 0;
    $$352 = $$25170;
    break L9;
    break;
   }
  default:
   {
    HEAP32[$4 >> 2] = 0;
    $$352 = $$25170;
    break L9;
   }
  }
 } else $$352 = $$150; while (0);
 if ($8) HEAP32[$1 >> 2] = HEAP32[$6 >> 2];
 STACKTOP = sp;
 return $$352 | 0;
}

function __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $16 = 0, $20 = 0, $22 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $36 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if ((__ZNK6vision5Image4typeEv($1) | 0) != 2) {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 25663) | 0, 25069) | 0, 33528) | 0, 357) | 0, 33535) | 0, 25710) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 63]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 switch (__ZNK6vision5Image4typeEv($2) | 0) {
 case 1:
  {
   $22 = __ZN6vision5Image3getEv($1) | 0;
   $24 = HEAP32[$0 + 32 >> 2] | 0;
   $25 = __ZNK6vision5Image3getEv($2) | 0;
   __ZN6vision18binomial_4th_orderEPfPtPKhmm($22, $24, $25, __ZNK6vision5Image5widthEv($2) | 0, __ZNK6vision5Image6heightEv($2) | 0);
   break;
  }
 case 2:
  {
   $28 = __ZN6vision5Image3getEv($1) | 0;
   $30 = HEAP32[$0 + 44 >> 2] | 0;
   $31 = __ZNK6vision5Image3getEv($2) | 0;
   __ZN6vision18binomial_4th_orderEPfS0_PKfmm($28, $30, $31, __ZNK6vision5Image5widthEv($2) | 0, __ZNK6vision5Image6heightEv($2) | 0);
   break;
  }
 case 0:
  {
   $34 = ___cxa_allocate_exception(16) | 0;
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($3, 25746, __ZNSt3__211char_traitsIcE6lengthEPKc(25746) | 0);
   __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($34, $3);
   ___cxa_throw($34 | 0, 11016, 5);
   break;
  }
 default:
  {
   $36 = ___cxa_allocate_exception(16) | 0;
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($3, 25765, __ZNSt3__211char_traitsIcE6lengthEPKc(25765) | 0);
   __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($36, $3);
   ___cxa_throw($36 | 0, 11016, 5);
  }
 }
 STACKTOP = sp;
 return;
}

function __Z21kpmUtilGetPose_binaryP9ARParamLTRKNSt3__26vectorIN6vision7match_tENS1_9allocatorIS4_EEEERKNS2_INS3_7Point3dIfEENS5_ISB_EEEERKNS2_INS3_12FeaturePointENS5_ISG_EEEEPA4_fPf($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$064 = 0, $$065 = 0, $$066 = 0, $$1 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $37 = 0, $50 = 0, $53 = 0, $58 = 0.0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $vararg_buffer1 = sp + 208 | 0;
 $vararg_buffer = sp + 200 | 0;
 $6 = sp + 224 | 0;
 $7 = sp + 212 | 0;
 $8 = sp + 96 | 0;
 $9 = sp + 192 | 0;
 $10 = sp;
 $13 = HEAP32[$1 >> 2] | 0;
 $14 = (HEAP32[$1 + 4 >> 2] | 0) - $13 | 0;
 $15 = $14 >> 3;
 $17 = $13;
 do if ($15 >>> 0 < 4) $$1 = -1; else {
  $19 = _malloc($14 << 1) | 0;
  if (!$19) {
   _arLog(0, 3, 20454, $vararg_buffer);
   _exit(1);
  }
  $22 = _malloc($15 * 24 | 0) | 0;
  if (!$22) {
   _arLog(0, 3, 20454, $vararg_buffer1);
   _exit(1);
  }
  $24 = HEAP32[$3 >> 2] | 0;
  $25 = HEAP32[$2 >> 2] | 0;
  $$065 = 0;
  while (1) {
   if (($$065 | 0) == ($15 | 0)) break;
   $27 = HEAP32[$17 + ($$065 << 3) >> 2] | 0;
   HEAPF64[$19 + ($$065 << 4) >> 3] = +HEAPF32[$24 + ($27 * 20 | 0) >> 2];
   HEAPF64[$19 + ($$065 << 4) + 8 >> 3] = +HEAPF32[$24 + ($27 * 20 | 0) + 4 >> 2];
   $37 = HEAP32[$17 + ($$065 << 3) + 4 >> 2] | 0;
   HEAPF64[$22 + ($$065 * 24 | 0) >> 3] = +HEAPF32[$25 + ($37 * 12 | 0) >> 2];
   HEAPF64[$22 + ($$065 * 24 | 0) + 8 >> 3] = +HEAPF32[$25 + ($37 * 12 | 0) + 4 >> 2];
   HEAPF64[$22 + ($$065 * 24 | 0) + 16 >> 3] = 0.0;
   $$065 = $$065 + 1 | 0;
  }
  HEAP32[$7 + 8 >> 2] = $15;
  HEAP32[$7 >> 2] = $19;
  HEAP32[$7 + 4 >> 2] = $22;
  $50 = $0 + 8 | 0;
  if ((_icpGetInitXw2Xc_from_PlanarData($50, $19, $22, $15, $8) | 0) < 0) {
   _free($19);
   _free($22);
   $$1 = -1;
   break;
  }
  $53 = _icpCreateHandle($50) | 0;
  HEAP32[$6 >> 2] = $53;
  if (!$53) {
   _free($19);
   _free($22);
   $$1 = -1;
   break;
  }
  if ((_icpPoint($53, $7, $8, $10, $9) | 0) < 0) {
   _free($19);
   _free($22);
   _icpDeleteHandle($6) | 0;
   $$066 = -1;
  } else {
   $$064 = 0;
   while (1) {
    if (($$064 | 0) == 3) break;
    $$0 = 0;
    while (1) {
     if (($$0 | 0) == 4) break;
     HEAPF32[$4 + ($$064 << 4) + ($$0 << 2) >> 2] = +HEAPF64[$10 + ($$064 << 5) + ($$0 << 3) >> 3];
     $$0 = $$0 + 1 | 0;
    }
    $$064 = $$064 + 1 | 0;
   }
   _icpDeleteHandle($6) | 0;
   _free($19);
   _free($22);
   $58 = +HEAPF64[$9 >> 3];
   HEAPF32[$5 >> 2] = $58;
   $$066 = ($58 > 10.0) << 31 >> 31;
  }
  $$1 = $$066;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_125parse_noexcept_expressionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i18 = 0, $$016 = 0, $10 = 0, $11 = 0, $20 = 0, $21 = 0, $22 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp + 36 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 $7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
 if (($7 | 0) == ($0 | 0)) $$016 = $0; else {
  $10 = $2 + 4 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if ((HEAP32[$2 >> 2] | 0) == ($11 | 0)) $$016 = $0; else {
   __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $11 + -24 | 0);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($6, 0, 49902) | 0;
   HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
   HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
   HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 49629) | 0;
   HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   $$0$i$i$i18 = 0;
   while (1) {
    if (($$0$i$i$i18 | 0) == 3) break;
    HEAP32[$5 + ($$0$i$i$i18 << 2) >> 2] = 0;
    $$0$i$i$i18 = $$0$i$i$i18 + 1 | 0;
   }
   $20 = HEAP32[$10 >> 2] | 0;
   $21 = $20 + -24 | 0;
   $22 = $21 + 11 | 0;
   if ((HEAP8[$22 >> 0] | 0) < 0) {
    $25 = HEAP32[$21 >> 2] | 0;
    HEAP8[$3 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($25, $3);
    HEAP32[$20 + -20 >> 2] = 0;
   } else {
    HEAP8[$3 >> 0] = 0;
    __ZNSt3__211char_traitsIcE6assignERcRKc($21, $3);
    HEAP8[$22 >> 0] = 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($21);
   HEAP32[$21 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$21 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$21 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   $$0$i$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
   $$016 = $7;
  }
 }
 STACKTOP = sp;
 return $$016 | 0;
}

function __ZNSt3__27__sort3IRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEjT0_S9_S9_T_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$09 = 0, $$phi$trans$insert = 0, $$phi$trans$insert16 = 0, $$pre$phi18Z2D = 0, $$pre$phiZ2D = 0, $15 = 0, $16 = 0.0, $24 = 0, $25 = 0, $26 = 0, $28 = 0.0, $29 = 0.0, $32 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0.0, $49 = 0, $5 = 0, $50 = 0, $52 = 0, $53 = 0, $54 = 0, $6 = 0.0, $7 = 0.0;
 $4 = HEAP32[$1 >> 2] | 0;
 $5 = HEAP32[$0 >> 2] | 0;
 $6 = +HEAPF32[$5 >> 2];
 $7 = +HEAPF32[$4 >> 2];
 if ($6 < $7) $53 = 1; else if ($7 < $6) $53 = 0; else $53 = (HEAP32[$5 + 4 >> 2] | 0) >>> 0 < (HEAP32[$4 + 4 >> 2] | 0) >>> 0;
 $15 = HEAP32[$2 >> 2] | 0;
 $16 = +HEAPF32[$15 >> 2];
 if ($7 < $16) $54 = 1; else if ($16 < $7) $54 = 0; else $54 = (HEAP32[$4 + 4 >> 2] | 0) >>> 0 < (HEAP32[$15 + 4 >> 2] | 0) >>> 0;
 do if ($53) {
  if ($54) {
   HEAPF32[$5 >> 2] = $16;
   HEAPF32[$15 >> 2] = $6;
   $38 = $5 + 4 | 0;
   $39 = $15 + 4 | 0;
   $40 = HEAP32[$38 >> 2] | 0;
   HEAP32[$38 >> 2] = HEAP32[$39 >> 2];
   HEAP32[$39 >> 2] = $40;
   $$09 = 1;
   break;
  }
  HEAPF32[$5 >> 2] = $7;
  HEAPF32[$4 >> 2] = $6;
  $42 = $5 + 4 | 0;
  $43 = $4 + 4 | 0;
  $44 = HEAP32[$42 >> 2] | 0;
  HEAP32[$42 >> 2] = HEAP32[$43 >> 2];
  HEAP32[$43 >> 2] = $44;
  $46 = +HEAPF32[$15 >> 2];
  if ($6 < $46) {
   $$phi$trans$insert16 = $15 + 4 | 0;
   $$pre$phiZ2D = $$phi$trans$insert16;
   $52 = HEAP32[$$phi$trans$insert16 >> 2] | 0;
  } else {
   if ($46 < $6) {
    $$09 = 1;
    break;
   }
   $49 = $15 + 4 | 0;
   $50 = HEAP32[$49 >> 2] | 0;
   if ($44 >>> 0 < $50 >>> 0) {
    $$pre$phiZ2D = $49;
    $52 = $50;
   } else {
    $$09 = 1;
    break;
   }
  }
  HEAPF32[$4 >> 2] = $46;
  HEAPF32[$15 >> 2] = $6;
  HEAP32[$43 >> 2] = $52;
  HEAP32[$$pre$phiZ2D >> 2] = $44;
  $$09 = 2;
 } else if ($54) {
  HEAPF32[$4 >> 2] = $16;
  HEAPF32[$15 >> 2] = $7;
  $24 = $4 + 4 | 0;
  $25 = $15 + 4 | 0;
  $26 = HEAP32[$24 >> 2] | 0;
  HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
  HEAP32[$25 >> 2] = $26;
  $28 = +HEAPF32[$5 >> 2];
  $29 = +HEAPF32[$4 >> 2];
  if ($28 < $29) {
   $$phi$trans$insert = $5 + 4 | 0;
   $$pre$phi18Z2D = $$phi$trans$insert;
   $36 = HEAP32[$24 >> 2] | 0;
   $37 = HEAP32[$$phi$trans$insert >> 2] | 0;
  } else {
   if ($29 < $28) {
    $$09 = 1;
    break;
   }
   $32 = $5 + 4 | 0;
   $33 = HEAP32[$32 >> 2] | 0;
   $34 = HEAP32[$24 >> 2] | 0;
   if ($33 >>> 0 < $34 >>> 0) {
    $$pre$phi18Z2D = $32;
    $36 = $34;
    $37 = $33;
   } else {
    $$09 = 1;
    break;
   }
  }
  HEAPF32[$5 >> 2] = $29;
  HEAPF32[$4 >> 2] = $28;
  HEAP32[$$pre$phi18Z2D >> 2] = $36;
  HEAP32[$24 >> 2] = $37;
  $$09 = 2;
 } else $$09 = 0; while (0);
 return $$09 | 0;
}

function _trinkle($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0$lcssa = 0, $$045$lcssa = 0, $$04551 = 0, $$0455780 = 0, $$046$lcssa = 0, $$04653 = 0, $$0465681 = 0, $$047$lcssa = 0, $$0475582 = 0, $$049 = 0, $$05879 = 0, $$05879$phi = 0, $11 = 0, $12 = 0, $16 = 0, $20 = 0, $24 = 0, $27 = 0, $28 = 0, $35 = 0, $37 = 0, $38 = 0, $47 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $7 = sp + 232 | 0;
 $8 = sp;
 $9 = HEAP32[$3 >> 2] | 0;
 HEAP32[$7 >> 2] = $9;
 $11 = HEAP32[$3 + 4 >> 2] | 0;
 $12 = $7 + 4 | 0;
 HEAP32[$12 >> 2] = $11;
 HEAP32[$8 >> 2] = $0;
 L1 : do if (($9 | 0) != 1 | ($11 | 0) != 0) {
  $16 = 0 - $1 | 0;
  $20 = $0 + (0 - (HEAP32[$6 + ($4 << 2) >> 2] | 0)) | 0;
  if ((FUNCTION_TABLE_iii[$2 & 63]($20, $0) | 0) < 1) {
   $$0$lcssa = $0;
   $$045$lcssa = 1;
   $$046$lcssa = $4;
   $$047$lcssa = $5;
   label = 9;
  } else {
   $$0455780 = 1;
   $$0465681 = $4;
   $$0475582 = ($5 | 0) == 0;
   $$05879 = $0;
   $28 = $20;
   while (1) {
    if ($$0475582 & ($$0465681 | 0) > 1) {
     $24 = $$05879 + $16 | 0;
     $27 = HEAP32[$6 + ($$0465681 + -2 << 2) >> 2] | 0;
     if ((FUNCTION_TABLE_iii[$2 & 63]($24, $28) | 0) > -1) {
      $$04551 = $$0455780;
      $$04653 = $$0465681;
      $$049 = $$05879;
      label = 10;
      break L1;
     }
     if ((FUNCTION_TABLE_iii[$2 & 63]($24 + (0 - $27) | 0, $28) | 0) > -1) {
      $$04551 = $$0455780;
      $$04653 = $$0465681;
      $$049 = $$05879;
      label = 10;
      break L1;
     }
    }
    $35 = $$0455780 + 1 | 0;
    HEAP32[$8 + ($$0455780 << 2) >> 2] = $28;
    $37 = _pntz($7) | 0;
    _shr($7, $37);
    $38 = $37 + $$0465681 | 0;
    if (!((HEAP32[$7 >> 2] | 0) != 1 | (HEAP32[$12 >> 2] | 0) != 0)) {
     $$04551 = $35;
     $$04653 = $38;
     $$049 = $28;
     label = 10;
     break L1;
    }
    $47 = $28 + (0 - (HEAP32[$6 + ($38 << 2) >> 2] | 0)) | 0;
    if ((FUNCTION_TABLE_iii[$2 & 63]($47, HEAP32[$8 >> 2] | 0) | 0) < 1) {
     $$0$lcssa = $28;
     $$045$lcssa = $35;
     $$046$lcssa = $38;
     $$047$lcssa = 0;
     label = 9;
     break;
    } else {
     $$05879$phi = $28;
     $$0455780 = $35;
     $$0465681 = $38;
     $$0475582 = 1;
     $28 = $47;
     $$05879 = $$05879$phi;
    }
   }
  }
 } else {
  $$0$lcssa = $0;
  $$045$lcssa = 1;
  $$046$lcssa = $4;
  $$047$lcssa = $5;
  label = 9;
 } while (0);
 if ((label | 0) == 9) if (!$$047$lcssa) {
  $$04551 = $$045$lcssa;
  $$04653 = $$046$lcssa;
  $$049 = $$0$lcssa;
  label = 10;
 }
 if ((label | 0) == 10) {
  _cycle($1, $8, $$04551);
  _sift($$049, $1, $2, $$04653, $6);
 }
 STACKTOP = sp;
 return;
}

function _loadNFTMarker($arc, $surfaceSetCount, $datasetPathname) {
 $arc = $arc | 0;
 $surfaceSetCount = $surfaceSetCount | 0;
 $datasetPathname = $datasetPathname | 0;
 var $0 = 0, $call6 = 0, $call8 = 0, $refDataSet = 0, $refDataSet2 = 0, $retval$0 = 0, $surfaceSetCount$addr = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer16 = 0, $vararg_buffer19 = 0, $vararg_buffer21 = 0, $vararg_buffer23 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $vararg_buffer23 = sp + 80 | 0;
 $vararg_buffer21 = sp + 72 | 0;
 $vararg_buffer19 = sp + 64 | 0;
 $vararg_buffer16 = sp + 56 | 0;
 $vararg_buffer13 = sp + 48 | 0;
 $vararg_buffer11 = sp + 40 | 0;
 $vararg_buffer9 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer4 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $surfaceSetCount$addr = sp + 88 | 0;
 $refDataSet = sp + 92 | 0;
 $refDataSet2 = sp + 84 | 0;
 HEAP32[$surfaceSetCount$addr >> 2] = $surfaceSetCount;
 $0 = HEAP32[$arc + 232 >> 2] | 0;
 HEAP32[$refDataSet >> 2] = 0;
 HEAP32[$vararg_buffer >> 2] = $datasetPathname;
 _arLog(0, 1, 43953, $vararg_buffer);
 do if ((_kpmLoadRefDataSet($datasetPathname, 43971, $refDataSet2) | 0) < 0) {
  HEAP32[$vararg_buffer1 >> 2] = $datasetPathname;
  _arLog(0, 3, 43977, $vararg_buffer1);
  $retval$0 = 0;
 } else {
  HEAP32[$vararg_buffer4 >> 2] = $surfaceSetCount;
  _arLog(0, 1, 44015, $vararg_buffer4);
  if ((_kpmChangePageNoOfRefDataSet(HEAP32[$refDataSet2 >> 2] | 0, -1, $surfaceSetCount) | 0) < 0) {
   _arLog(0, 3, 44040, $vararg_buffer7);
   $retval$0 = 0;
   break;
  }
  if ((_kpmMergeRefDataSet($refDataSet, $refDataSet2) | 0) < 0) {
   _arLog(0, 3, 44076, $vararg_buffer9);
   $retval$0 = 0;
   break;
  }
  _arLog(0, 1, 44103, $vararg_buffer11);
  HEAP32[$vararg_buffer13 >> 2] = $datasetPathname;
  _arLog(0, 1, 44112, $vararg_buffer13);
  $call6 = _ar2ReadSurfaceSet($datasetPathname, 44129, 0) | 0;
  if (!$call6) {
   HEAP32[$vararg_buffer16 >> 2] = $datasetPathname;
   _arLog(0, 3, 44134, $vararg_buffer16);
  }
  _arLog(0, 1, 44103, $vararg_buffer19);
  $call8 = __ZNSt3__213unordered_mapIiP14AR2SurfaceSetTNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS2_EEEEEixERS9_($arc + 244 | 0, $surfaceSetCount$addr) | 0;
  HEAP32[$call8 >> 2] = $call6;
  if ((_kpmSetRefDataSet($0, HEAP32[$refDataSet >> 2] | 0) | 0) < 0) {
   _arLog(0, 3, 44167, $vararg_buffer21);
   $retval$0 = 0;
   break;
  } else {
   _kpmDeleteRefDataSet($refDataSet) | 0;
   _arLog(0, 1, 44192, $vararg_buffer23);
   $retval$0 = 1;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$0 | 0;
}

function _mbrtowc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$03952 = 0, $$03952$pn = 0, $$04051 = 0, $$04350 = 0, $$2 = 0, $$lcssa = 0, $$lcssa56 = 0, $12 = 0, $18 = 0, $22 = 0, $26 = 0, $30 = 0, $31 = 0, $34 = 0, $35 = 0, $4 = 0, $43 = 0, $44 = 0, $47 = 0, $49 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $60 = 0, $spec$select = 0, $spec$select47 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 $spec$select = ($3 | 0) == 0 ? 56296 : $3;
 $6 = HEAP32[$spec$select >> 2] | 0;
 L1 : do if (!$1) if (!$6) $$0 = 0; else label = 19; else {
  $spec$select47 = ($0 | 0) == 0 ? $4 : $0;
  if (!$2) $$0 = -2; else {
   if (!$6) {
    $12 = HEAP8[$1 >> 0] | 0;
    if ($12 << 24 >> 24 > -1) {
     HEAP32[$spec$select47 >> 2] = $12 & 255;
     $$0 = $12 << 24 >> 24 != 0 & 1;
     break;
    }
    $18 = (___pthread_self_303() | 0) + 188 | 0;
    $22 = HEAP8[$1 >> 0] | 0;
    if (!(HEAP32[HEAP32[$18 >> 2] >> 2] | 0)) {
     HEAP32[$spec$select47 >> 2] = $22 << 24 >> 24 & 57343;
     $$0 = 1;
     break;
    }
    $26 = ($22 & 255) + -194 | 0;
    if ($26 >>> 0 > 50) {
     label = 19;
     break;
    }
    $30 = HEAP32[3472 + ($26 << 2) >> 2] | 0;
    $31 = $2 + -1 | 0;
    if (!$31) $$2 = $30; else {
     $$03952 = $1 + 1 | 0;
     $$04051 = $30;
     $$04350 = $31;
     label = 11;
    }
   } else {
    $$03952 = $1;
    $$04051 = $6;
    $$04350 = $2;
    label = 11;
   }
   L14 : do if ((label | 0) == 11) {
    $34 = HEAPU8[$$03952 >> 0] | 0;
    $35 = $34 >>> 3;
    if (($35 + -16 | $35 + ($$04051 >> 26)) >>> 0 > 7) {
     label = 19;
     break L1;
    }
    $43 = $34 + -128 | $$04051 << 6;
    $44 = $$04350 + -1 | 0;
    if (($43 | 0) < 0) {
     $$03952$pn = $$03952;
     $47 = $43;
     $53 = $44;
     while (1) {
      $$03952$pn = $$03952$pn + 1 | 0;
      if (!$53) {
       $$2 = $47;
       break L14;
      }
      $49 = HEAP8[$$03952$pn >> 0] | 0;
      if (($49 & -64) << 24 >> 24 != -128) {
       label = 19;
       break L1;
      }
      $51 = ($49 & 255) + -128 | $47 << 6;
      $52 = $53 + -1 | 0;
      if (($51 | 0) >= 0) {
       $$lcssa = $52;
       $$lcssa56 = $51;
       break;
      } else {
       $47 = $51;
       $53 = $52;
      }
     }
    } else {
     $$lcssa = $44;
     $$lcssa56 = $43;
    }
    HEAP32[$spec$select >> 2] = 0;
    HEAP32[$spec$select47 >> 2] = $$lcssa56;
    $$0 = $2 - $$lcssa | 0;
    break L1;
   } while (0);
   HEAP32[$spec$select >> 2] = $$2;
   $$0 = -2;
  }
 } while (0);
 if ((label | 0) == 19) {
  HEAP32[$spec$select >> 2] = 0;
  $60 = ___errno_location() | 0;
  HEAP32[$60 >> 2] = 84;
  $$0 = -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_mmNS_12codecvt_modeE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0100 = 0, $$194 = 0, $$194$ph = 0, $$2102 = 0, $$598 = 0, $$pre = 0, $21 = 0, $22 = 0, $33 = 0, $47 = 0, $49 = 0, $56 = 0, $76 = 0, $78 = 0, $80 = 0, $86 = 0, $89 = 0;
 $$pre = $1;
 if (!($4 & 4)) $$194$ph = $0; else if (($$pre - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == -17) if ((HEAP8[$0 + 1 >> 0] | 0) == -69) $$194$ph = (HEAP8[$0 + 2 >> 0] | 0) == -65 ? $0 + 3 | 0 : $0; else $$194$ph = $0; else $$194$ph = $0; else $$194$ph = $0;
 $$0100 = 0;
 $$194 = $$194$ph;
 L7 : while (1) {
  if (!($$0100 >>> 0 < $2 >>> 0 & $$194 >>> 0 < $1 >>> 0)) break;
  $21 = HEAP8[$$194 >> 0] | 0;
  $22 = $21 & 255;
  if ($22 >>> 0 > $3 >>> 0) break;
  do if ($21 << 24 >> 24 > -1) {
   $$2102 = $$0100;
   $$598 = $$194 + 1 | 0;
  } else {
   if (($21 & 255) < 194) break L7;
   if (($21 & 255) < 224) {
    if (($$pre - $$194 | 0) < 2) break L7;
    $33 = HEAPU8[$$194 + 1 >> 0] | 0;
    if (($33 & 192 | 0) != 128) break L7;
    if (($33 & 63 | $22 << 6 & 1984) >>> 0 > $3 >>> 0) break L7; else {
     $$2102 = $$0100;
     $$598 = $$194 + 2 | 0;
     break;
    }
   }
   if (($21 & 255) < 240) {
    if (($$pre - $$194 | 0) < 3) break L7;
    $47 = HEAP8[$$194 + 1 >> 0] | 0;
    $49 = HEAP8[$$194 + 2 >> 0] | 0;
    switch ($21 << 24 >> 24) {
    case -32:
     {
      if (($47 & -32) << 24 >> 24 != -96) break L7;
      break;
     }
    case -19:
     {
      if (($47 & -32) << 24 >> 24 != -128) break L7;
      break;
     }
    default:
     if (($47 & -64) << 24 >> 24 != -128) break L7;
    }
    $56 = $49 & 255;
    if (($56 & 192 | 0) != 128) break L7;
    if ((($47 & 63) << 6 | $22 << 12 & 61440 | $56 & 63) >>> 0 > $3 >>> 0) break L7; else {
     $$2102 = $$0100;
     $$598 = $$194 + 3 | 0;
     break;
    }
   }
   if (($21 & 255) >= 245) break L7;
   if (($2 - $$0100 | 0) >>> 0 < 2 | ($$pre - $$194 | 0) < 4) break L7;
   $76 = HEAP8[$$194 + 1 >> 0] | 0;
   $78 = HEAP8[$$194 + 2 >> 0] | 0;
   $80 = HEAP8[$$194 + 3 >> 0] | 0;
   switch ($21 << 24 >> 24) {
   case -16:
    {
     if (($76 + 112 & 255) >= 48) break L7;
     break;
    }
   case -12:
    {
     if (($76 & -16) << 24 >> 24 != -128) break L7;
     break;
    }
   default:
    if (($76 & -64) << 24 >> 24 != -128) break L7;
   }
   $86 = $78 & 255;
   if (($86 & 192 | 0) != 128) break L7;
   $89 = $80 & 255;
   if (($89 & 192 | 0) != 128) break L7;
   if ((($76 & 63) << 12 | $22 << 18 & 1835008 | $86 << 6 & 4032 | $89 & 63) >>> 0 > $3 >>> 0) break L7; else {
    $$2102 = $$0100 + 1 | 0;
    $$598 = $$194 + 4 | 0;
   }
  } while (0);
  $$0100 = $$2102 + 1 | 0;
  $$194 = $$598;
 }
 return $$194 - $0 | 0;
}

function __ZNSt3__2L12init_wmonthsEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[55608] | 0)) if (___cxa_guard_acquire(55608) | 0) {
  $4 = 54736;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 55024);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54736, 15376) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54748, 15408) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54760, 15444) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54772, 15468) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54784, 15492) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54796, 15508) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54808, 15528) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54820, 15548) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54832, 15576) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54844, 15616) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54856, 15648) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54868, 15684) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54880, 15720) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54892, 15736) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54904, 15752) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54916, 15768) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54928, 15492) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54940, 15784) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54952, 15800) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54964, 15816) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54976, 15832) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54988, 15848) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55e3, 15864) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55012, 15880) | 0;
 return;
}

function __ZNSt3__2L11init_monthsEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[55528] | 0)) if (___cxa_guard_acquire(55528) | 0) {
  $4 = 53984;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 54272);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53984, 47240) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53996, 47248) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54008, 47257) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54020, 47263) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54032, 47269) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54044, 47273) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54056, 47278) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54068, 47283) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54080, 47290) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54092, 47300) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54104, 47308) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54116, 47317) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54128, 47326) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54140, 47330) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54152, 47334) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54164, 47338) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54176, 47269) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54188, 47342) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54200, 47346) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54212, 47350) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54224, 47354) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54236, 47358) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54248, 47362) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54260, 47366) | 0;
 return;
}

function __ZN6vision19FindHoughSimilarityERNS_21HoughSimilarityVotingERKNSt3__26vectorINS_12FeaturePointENS2_9allocatorIS4_EEEES9_RKNS3_INS_7match_tENS5_ISA_EEEEiiii($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$065 = 0, $$cast = 0, $10 = 0, $11 = 0, $12 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0.0, $31 = 0.0, $32 = 0.0, $34 = 0.0, $50 = 0, $52 = 0, $55 = 0, $57 = 0, $58 = 0, $69 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $8 = sp + 20 | 0;
 $9 = sp + 8 | 0;
 $10 = sp + 4 | 0;
 $11 = sp;
 $12 = $3 + 4 | 0;
 __ZNSt3__26vectorIfNS_9allocatorIfEEEC2Em($8, (HEAP32[$12 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 1);
 __ZNSt3__26vectorIfNS_9allocatorIfEEEC2Em($9, (HEAP32[$12 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 1);
 $22 = HEAP32[$3 >> 2] | 0;
 $24 = (HEAP32[$12 >> 2] | 0) - $22 >> 3;
 $$cast = $22;
 $25 = HEAP32[$1 >> 2] | 0;
 $26 = HEAP32[$2 >> 2] | 0;
 $27 = HEAP32[$8 >> 2] | 0;
 $28 = HEAP32[$9 >> 2] | 0;
 $$065 = 0;
 while (1) {
  if (($$065 | 0) == ($24 | 0)) break;
  $52 = HEAP32[$$cast + ($$065 << 3) >> 2] | 0;
  $55 = HEAP32[$$cast + ($$065 << 3) + 4 >> 2] | 0;
  $57 = $$065 << 2;
  $58 = $27 + ($57 << 2) | 0;
  HEAP32[$58 >> 2] = HEAP32[$25 + ($52 * 20 | 0) >> 2];
  HEAP32[$58 + 4 >> 2] = HEAP32[$25 + ($52 * 20 | 0) + 4 >> 2];
  HEAP32[$58 + 8 >> 2] = HEAP32[$25 + ($52 * 20 | 0) + 8 >> 2];
  HEAP32[$58 + 12 >> 2] = HEAP32[$25 + ($52 * 20 | 0) + 12 >> 2];
  $69 = $28 + ($57 << 2) | 0;
  HEAP32[$69 >> 2] = HEAP32[$26 + ($55 * 20 | 0) >> 2];
  HEAP32[$69 + 4 >> 2] = HEAP32[$26 + ($55 * 20 | 0) + 4 >> 2];
  HEAP32[$69 + 8 >> 2] = HEAP32[$26 + ($55 * 20 | 0) + 8 >> 2];
  HEAP32[$69 + 12 >> 2] = HEAP32[$26 + ($55 * 20 | 0) + 12 >> 2];
  $$065 = $$065 + 1 | 0;
 }
 $29 = +($4 | 0);
 $31 = $29 * .20000000298023224 + $29;
 $32 = +($5 | 0);
 $34 = $32 * .20000000298023224 + $32;
 __ZN6vision21HoughSimilarityVoting4initEffffiiii($0, -$31, $31, -$34, $34, 0, 0, 12, 10);
 __ZN6vision21HoughSimilarityVoting26setObjectCenterInReferenceEff($0, +($6 >> 1 | 0), +($7 >> 1 | 0));
 __ZN6vision21HoughSimilarityVoting21setRefImageDimensionsEii($0, $6, $7);
 __ZN6vision21HoughSimilarityVoting4voteEPKfS2_i($0, HEAP32[$8 >> 2] | 0, HEAP32[$9 >> 2] | 0, (HEAP32[$12 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 3);
 __ZNK6vision21HoughSimilarityVoting23getMaximumNumberOfVotesERfRi($0, $10, $11);
 $50 = +HEAPF32[$10 >> 2] < 3.0 ? -1 : HEAP32[$11 >> 2] | 0;
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($9);
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($8);
 STACKTOP = sp;
 return $50 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_typeid_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i30 = 0, $$025 = 0, $$127 = 0, $14 = 0, $16 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 40 | 0;
 $4 = sp + 12 | 0;
 $5 = sp + 24 | 0;
 $6 = sp;
 L1 : do if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 116) {
  $14 = HEAP8[$0 + 1 >> 0] | 0;
  switch ($14 << 24 >> 24) {
  case 105:
  case 101:
   break;
  default:
   {
    $$127 = $0;
    break L1;
   }
  }
  $16 = $0 + 2 | 0;
  if ($14 << 24 >> 24 == 101) $$025 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0; else $$025 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($$025 | 0) == ($16 | 0)) $$127 = $0; else {
   $21 = $2 + 4 | 0;
   $22 = HEAP32[$21 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($22 | 0)) $$127 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $22 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($6, 0, 49834) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 49629) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i30 = 0;
    while (1) {
     if (($$0$i$i$i30 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i30 << 2) >> 2] = 0;
     $$0$i$i$i30 = $$0$i$i$i30 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$21 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$127 = $$025;
   }
  }
 } else $$127 = $0; else $$127 = $0; while (0);
 STACKTOP = sp;
 return $$127 | 0;
}

function _pop_arg_731($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $100 = 0, $109 = 0, $11 = 0, $110 = 0.0, $17 = 0, $18 = 0, $21 = 0, $30 = 0, $31 = 0, $32 = 0, $41 = 0, $42 = 0, $44 = 0, $47 = 0, $48 = 0, $57 = 0, $58 = 0, $60 = 0, $63 = 0, $72 = 0, $73 = 0, $74 = 0, $83 = 0, $84 = 0, $86 = 0, $89 = 0, $98 = 0, $99 = 0;
 L1 : do if ($1 >>> 0 <= 20) do switch ($1 | 0) {
 case 9:
  {
   $10 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $11 = HEAP32[$10 >> 2] | 0;
   HEAP32[$2 >> 2] = $10 + 4;
   HEAP32[$0 >> 2] = $11;
   break L1;
   break;
  }
 case 10:
  {
   $17 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $18 = HEAP32[$17 >> 2] | 0;
   HEAP32[$2 >> 2] = $17 + 4;
   $21 = $0;
   HEAP32[$21 >> 2] = $18;
   HEAP32[$21 + 4 >> 2] = (($18 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 11:
  {
   $30 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $31 = HEAP32[$30 >> 2] | 0;
   HEAP32[$2 >> 2] = $30 + 4;
   $32 = $0;
   HEAP32[$32 >> 2] = $31;
   HEAP32[$32 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 12:
  {
   $41 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $42 = $41;
   $44 = HEAP32[$42 >> 2] | 0;
   $47 = HEAP32[$42 + 4 >> 2] | 0;
   HEAP32[$2 >> 2] = $41 + 8;
   $48 = $0;
   HEAP32[$48 >> 2] = $44;
   HEAP32[$48 + 4 >> 2] = $47;
   break L1;
   break;
  }
 case 13:
  {
   $57 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $58 = HEAP32[$57 >> 2] | 0;
   HEAP32[$2 >> 2] = $57 + 4;
   $60 = ($58 & 65535) << 16 >> 16;
   $63 = $0;
   HEAP32[$63 >> 2] = $60;
   HEAP32[$63 + 4 >> 2] = (($60 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 14:
  {
   $72 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $73 = HEAP32[$72 >> 2] | 0;
   HEAP32[$2 >> 2] = $72 + 4;
   $74 = $0;
   HEAP32[$74 >> 2] = $73 & 65535;
   HEAP32[$74 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 15:
  {
   $83 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $84 = HEAP32[$83 >> 2] | 0;
   HEAP32[$2 >> 2] = $83 + 4;
   $86 = ($84 & 255) << 24 >> 24;
   $89 = $0;
   HEAP32[$89 >> 2] = $86;
   HEAP32[$89 + 4 >> 2] = (($86 | 0) < 0) << 31 >> 31;
   break L1;
   break;
  }
 case 16:
  {
   $98 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
   $99 = HEAP32[$98 >> 2] | 0;
   HEAP32[$2 >> 2] = $98 + 4;
   $100 = $0;
   HEAP32[$100 >> 2] = $99 & 255;
   HEAP32[$100 + 4 >> 2] = 0;
   break L1;
   break;
  }
 case 17:
  {
   $109 = (HEAP32[$2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
   $110 = +HEAPF64[$109 >> 3];
   HEAP32[$2 >> 2] = $109 + 8;
   HEAPF64[$0 >> 3] = $110;
   break L1;
   break;
  }
 case 18:
  {
   FUNCTION_TABLE_vii[$3 & 63]($0, $2);
   break L1;
   break;
  }
 default:
  break L1;
 } while (0); while (0);
 return;
}

function _arImageProcLumaHistAndBoxFilterWithBias($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$073 = 0, $$074 = 0, $$075 = 0, $$076 = 0, $$078 = 0, $$082 = 0, $$1 = 0, $$177 = 0, $$179 = 0, $$2 = 0, $$280 = 0, $$3 = 0, $$381 = 0, $$pre$phi86Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $22 = 0, $26 = 0, $28 = 0, $4 = 0, $44 = 0, $50 = 0, $53 = 0, $8 = 0;
 $4 = _arImageProcLumaHist($0, $1) | 0;
 L1 : do if (($4 | 0) < 0) $$0 = $4; else {
  if (!(HEAP32[$0 >> 2] | 0)) {
   $8 = $0 + 4 | 0;
   $10 = $0 + 8 | 0;
   $13 = _malloc(Math_imul(HEAP32[$10 >> 2] | 0, HEAP32[$8 >> 2] | 0) | 0) | 0;
   HEAP32[$0 >> 2] = $13;
   if (!$13) {
    $$0 = -1;
    break;
   } else {
    $$pre$phi86Z2D = $8;
    $$pre$phiZ2D = $10;
   }
  } else {
   $$pre$phi86Z2D = $0 + 4 | 0;
   $$pre$phiZ2D = $0 + 8 | 0;
  }
  $15 = $2 >> 1;
  $16 = 0 - $15 | 0;
  $$082 = 0;
  while (1) {
   $17 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   if (($$082 | 0) >= ($17 | 0)) break;
   $$073 = 0;
   while (1) {
    $19 = HEAP32[$$pre$phi86Z2D >> 2] | 0;
    if (($$073 | 0) >= ($19 | 0)) break;
    $$074 = $16;
    $$076 = 0;
    $$078 = 0;
    while (1) {
     if (($$074 | 0) > ($15 | 0)) break;
     $22 = $$074 + $$082 | 0;
     L16 : do if (($22 | 0) < 0) {
      $$3 = $$076;
      $$381 = $$078;
     } else if (($22 | 0) < (HEAP32[$$pre$phiZ2D >> 2] | 0)) {
      $26 = Math_imul($22, $19) | 0;
      $$075 = $16;
      $$177 = $$076;
      $$179 = $$078;
      while (1) {
       if (($$075 | 0) > ($15 | 0)) {
        $$3 = $$177;
        $$381 = $$179;
        break L16;
       }
       $28 = $$075 + $$073 | 0;
       if (($28 | 0) > -1 & ($28 | 0) < ($19 | 0)) {
        $$2 = $$177 + 1 | 0;
        $$280 = $$179 + (HEAPU8[$1 + ($28 + $26) >> 0] | 0) | 0;
       } else {
        $$2 = $$177;
        $$280 = $$179;
       }
       $$075 = $$075 + 1 | 0;
       $$177 = $$2;
       $$179 = $$280;
      }
     } else {
      $$3 = $$076;
      $$381 = $$078;
     } while (0);
     $$074 = $$074 + 1 | 0;
     $$076 = $$3;
     $$078 = $$381;
    }
    $44 = (HEAP32[$0 >> 2] | 0) + ((Math_imul($19, $$082) | 0) + $$073) | 0;
    HEAP8[$44 >> 0] = ($$078 | 0) / ($$076 | 0) | 0;
    $$073 = $$073 + 1 | 0;
   }
   $$082 = $$082 + 1 | 0;
  }
  if (!$3) $$0 = 0; else {
   $$1 = 0;
   $50 = $17;
   while (1) {
    if (($$1 | 0) >= (Math_imul($50, HEAP32[$$pre$phi86Z2D >> 2] | 0) | 0)) {
     $$0 = 0;
     break L1;
    }
    $53 = (HEAP32[$0 >> 2] | 0) + $$1 | 0;
    HEAP8[$53 >> 0] = (HEAPU8[$53 >> 0] | 0) + $3;
    $$1 = $$1 + 1 | 0;
    $50 = HEAP32[$$pre$phiZ2D >> 2] | 0;
   }
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE($agg$result, $this, $__p) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__p = $__p | 0;
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $13 = 0, $2 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $__next_20$pre$phiZ2D = 0, $__p1_ = 0, $__pn$0 = 0, $__value_$i$i$i = 0, $arrayidx$i48 = 0, $cond3$i = 0, $cond3$i35 = 0, $cond3$i44 = 0, $cond3$i55 = 0, $sub$i49 = 0, $tobool$i51 = 0, label = 0;
 $0 = HEAP32[$__p >> 2] | 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $sub$i49 = $1 + -1 | 0;
 $tobool$i51 = ($sub$i49 & $1 | 0) == 0;
 if ($tobool$i51) $cond3$i55 = $sub$i49 & $2; else if ($2 >>> 0 < $1 >>> 0) $cond3$i55 = $2; else $cond3$i55 = ($2 >>> 0) % ($1 >>> 0) | 0;
 $arrayidx$i48 = (HEAP32[$this >> 2] | 0) + ($cond3$i55 << 2) | 0;
 $__pn$0 = HEAP32[$arrayidx$i48 >> 2] | 0;
 while (1) {
  $5 = HEAP32[$__pn$0 >> 2] | 0;
  if (($5 | 0) == ($0 | 0)) break; else $__pn$0 = $5;
 }
 $__p1_ = $this + 8 | 0;
 if (($__pn$0 | 0) == ($__p1_ | 0)) label = 14; else {
  $6 = HEAP32[$__pn$0 + 4 >> 2] | 0;
  if ($tobool$i51) $cond3$i44 = $6 & $sub$i49; else if ($6 >>> 0 < $1 >>> 0) $cond3$i44 = $6; else $cond3$i44 = ($6 >>> 0) % ($1 >>> 0) | 0;
  if (($cond3$i44 | 0) == ($cond3$i55 | 0)) $__next_20$pre$phiZ2D = $0; else label = 14;
 }
 do if ((label | 0) == 14) {
  $7 = HEAP32[$0 >> 2] | 0;
  if ($7 | 0) {
   $8 = HEAP32[$7 + 4 >> 2] | 0;
   if ($tobool$i51) $cond3$i35 = $8 & $sub$i49; else if ($8 >>> 0 < $1 >>> 0) $cond3$i35 = $8; else $cond3$i35 = ($8 >>> 0) % ($1 >>> 0) | 0;
   if (($cond3$i35 | 0) == ($cond3$i55 | 0)) {
    $__next_20$pre$phiZ2D = $0;
    break;
   }
  }
  HEAP32[$arrayidx$i48 >> 2] = 0;
  $__next_20$pre$phiZ2D = $0;
 } while (0);
 $9 = HEAP32[$__next_20$pre$phiZ2D >> 2] | 0;
 $10 = $9;
 if (!$9) $13 = $10; else {
  $11 = HEAP32[$9 + 4 >> 2] | 0;
  if ($tobool$i51) $cond3$i = $11 & $sub$i49; else if ($11 >>> 0 < $1 >>> 0) $cond3$i = $11; else $cond3$i = ($11 >>> 0) % ($1 >>> 0) | 0;
  if (($cond3$i | 0) == ($cond3$i55 | 0)) $13 = $10; else {
   HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i << 2) >> 2] = $__pn$0;
   $13 = HEAP32[$0 >> 2] | 0;
  }
 }
 HEAP32[$__pn$0 >> 2] = $13;
 HEAP32[$__next_20$pre$phiZ2D >> 2] = 0;
 $__value_$i$i$i = $this + 12 | 0;
 HEAP32[$__value_$i$i$i >> 2] = (HEAP32[$__value_$i$i$i >> 2] | 0) + -1;
 HEAP32[$agg$result >> 2] = $0;
 HEAP32[$agg$result + 4 >> 2] = $__p1_;
 HEAP8[$agg$result + 8 >> 0] = 1;
 return;
}

function _wcsnrtombs($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$04773 = 0, $$05172 = 0, $$054 = 0, $$148 = 0, $$152 = 0, $$15571 = 0, $$162 = 0, $$174 = 0, $$2 = 0, $$24968 = 0, $$25367 = 0, $$256 = 0, $$350 = 0, $$357 = 0, $$369 = 0, $$466 = 0, $$cast = 0, $11 = 0, $14 = 0, $15 = 0, $17 = 0, $20 = 0, $21 = 0, $24 = 0, $30 = 0, $31 = 0, $40 = 0, $45 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(272);
 $5 = sp;
 $6 = sp + 256 | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 HEAP32[$6 >> 2] = $7;
 $8 = ($0 | 0) != 0;
 $$054 = $8 ? $3 : 256;
 $$0 = $8 ? $0 : $5;
 $$cast = $7;
 L1 : do if (($$054 | 0) != 0 & ($7 | 0) != 0) {
  $$04773 = 0;
  $$05172 = $2;
  $$15571 = $$054;
  $$174 = $$0;
  $45 = $$cast;
  while (1) {
   $11 = $$05172 >>> 0 >= $$15571 >>> 0;
   if (!($11 | $$05172 >>> 0 > 32)) {
    $$148 = $$04773;
    $$152 = $$05172;
    $$162 = $$174;
    $$357 = $$15571;
    $24 = $45;
    break L1;
   }
   $spec$select = $11 ? $$15571 : $$05172;
   $14 = $$05172 - $spec$select | 0;
   $15 = _wcsrtombs($$174, $6, $spec$select, 0) | 0;
   if (($15 | 0) == -1) break;
   $17 = ($$174 | 0) == ($5 | 0);
   $$256 = $$15571 - ($17 ? 0 : $15) | 0;
   $$2 = $17 ? $$174 : $$174 + $15 | 0;
   $20 = $15 + $$04773 | 0;
   $21 = HEAP32[$6 >> 2] | 0;
   if (($$256 | 0) != 0 & ($21 | 0) != 0) {
    $$04773 = $20;
    $$05172 = $14;
    $$15571 = $$256;
    $$174 = $$2;
    $45 = $21;
   } else {
    $$148 = $20;
    $$152 = $14;
    $$162 = $$2;
    $$357 = $$256;
    $24 = $21;
    break L1;
   }
  }
  $$148 = -1;
  $$152 = $14;
  $$162 = $$174;
  $$357 = 0;
  $24 = HEAP32[$6 >> 2] | 0;
 } else {
  $$148 = 0;
  $$152 = $2;
  $$162 = $$0;
  $$357 = $$054;
  $24 = $$cast;
 } while (0);
 L9 : do if (!$24) $$350 = $$148; else if (($$357 | 0) != 0 & ($$152 | 0) != 0) {
  $$24968 = $$148;
  $$25367 = $$152;
  $$369 = $$162;
  $$466 = $$357;
  $30 = $24;
  while (1) {
   $31 = _wcrtomb($$369, HEAP32[$30 >> 2] | 0, 0) | 0;
   if (($31 + 1 | 0) >>> 0 < 2) break;
   $30 = (HEAP32[$6 >> 2] | 0) + 4 | 0;
   HEAP32[$6 >> 2] = $30;
   $$25367 = $$25367 + -1 | 0;
   $$466 = $$466 - $31 | 0;
   $40 = $31 + $$24968 | 0;
   if (!(($$466 | 0) != 0 & ($$25367 | 0) != 0)) {
    $$350 = $40;
    break L9;
   } else {
    $$24968 = $40;
    $$369 = $$369 + $31 | 0;
   }
  }
  if (!$31) {
   HEAP32[$6 >> 2] = 0;
   $$350 = $$24968;
  } else $$350 = -1;
 } else $$350 = $$148; while (0);
 if ($8) HEAP32[$1 >> 2] = HEAP32[$6 >> 2];
 STACKTOP = sp;
 return $$350 | 0;
}

function __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$2 = 0, $$pre49 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $25 = 0, $32 = 0, $43 = 0, $46 = 0, $48 = 0, $58 = 0, $63 = 0, $74 = 0, $80 = 0, $85 = 0, $88 = 0, label = 0;
 HEAP32[$2 >> 2] = $0;
 HEAP32[$5 >> 2] = $3;
 $$pre49 = $4;
 if (!($7 & 2)) label = 4; else if (($$pre49 - $3 | 0) < 3) $$2 = 1; else {
  HEAP32[$5 >> 2] = $3 + 1;
  HEAP8[$3 >> 0] = -17;
  $14 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $14 + 1;
  HEAP8[$14 >> 0] = -69;
  $16 = HEAP32[$5 >> 2] | 0;
  HEAP32[$5 >> 2] = $16 + 1;
  HEAP8[$16 >> 0] = -65;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $18 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if ($18 >>> 0 >= $1 >>> 0) {
    $$2 = 0;
    break L4;
   }
   $20 = HEAP32[$18 >> 2] | 0;
   if ($20 >>> 0 > $6 >>> 0 | ($20 & -2048 | 0) == 55296) {
    $$2 = 2;
    break L4;
   }
   do if ($20 >>> 0 < 128) {
    $25 = HEAP32[$5 >> 2] | 0;
    if (($$pre49 - $25 | 0) < 1) {
     $$2 = 1;
     break L4;
    }
    HEAP32[$5 >> 2] = $25 + 1;
    HEAP8[$25 >> 0] = $20;
   } else {
    if ($20 >>> 0 < 2048) {
     $32 = HEAP32[$5 >> 2] | 0;
     if (($$pre49 - $32 | 0) < 2) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $32 + 1;
     HEAP8[$32 >> 0] = $20 >>> 6 | 192;
     $43 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $43 + 1;
     HEAP8[$43 >> 0] = $20 & 63 | 128;
     break;
    }
    $46 = HEAP32[$5 >> 2] | 0;
    $48 = $$pre49 - $46 | 0;
    if ($20 >>> 0 < 65536) {
     if (($48 | 0) < 3) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $46 + 1;
     HEAP8[$46 >> 0] = $20 >>> 12 | 224;
     $58 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $58 + 1;
     HEAP8[$58 >> 0] = $20 >>> 6 & 63 | 128;
     $63 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $63 + 1;
     HEAP8[$63 >> 0] = $20 & 63 | 128;
     break;
    } else {
     if (($48 | 0) < 4) {
      $$2 = 1;
      break L4;
     }
     HEAP32[$5 >> 2] = $46 + 1;
     HEAP8[$46 >> 0] = $20 >>> 18 | 240;
     $74 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $74 + 1;
     HEAP8[$74 >> 0] = $20 >>> 12 & 63 | 128;
     $80 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $80 + 1;
     HEAP8[$80 >> 0] = $20 >>> 6 & 63 | 128;
     $85 = HEAP32[$5 >> 2] | 0;
     HEAP32[$5 >> 2] = $85 + 1;
     HEAP8[$85 >> 0] = $20 & 63 | 128;
     break;
    }
   } while (0);
   $88 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
   HEAP32[$2 >> 2] = $88;
   $18 = $88;
  }
 } while (0);
 return $$2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_decltypeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i30 = 0, $$127 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 40 | 0;
 $4 = sp + 12 | 0;
 $5 = sp + 24 | 0;
 $6 = sp;
 L1 : do if (($1 - $0 | 0) > 3) if ((HEAP8[$0 >> 0] | 0) == 68) {
  switch (HEAP8[$0 + 1 >> 0] | 0) {
  case 84:
  case 116:
   break;
  default:
   {
    $$127 = $0;
    break L1;
   }
  }
  $16 = $0 + 2 | 0;
  $17 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($17 | 0) == ($16 | 0) | ($17 | 0) == ($1 | 0)) $$127 = $0; else if ((HEAP8[$17 >> 0] | 0) == 69) {
   $23 = $2 + 4 | 0;
   $24 = HEAP32[$23 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($24 | 0)) $$127 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $24 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($6, 0, 50947) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 49629) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i30 = 0;
    while (1) {
     if (($$0$i$i$i30 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i30 << 2) >> 2] = 0;
     $$0$i$i$i30 = $$0$i$i$i30 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$23 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$127 = $17 + 1 | 0;
   }
  } else $$127 = $0;
 } else $$127 = $0; else $$127 = $0; while (0);
 STACKTOP = sp;
 return $$127 | 0;
}

function __ZNSt3__211__sift_downIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeESA_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$sroa$024$0 = 0, $$sroa$024$1 = 0, $$sroa$024$2 = 0, $10 = 0, $11 = 0, $12 = 0, $15 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $29 = 0, $34 = 0, $35 = 0, $40 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $59 = 0, $6 = 0, $64 = 0, $69 = 0, $7 = 0, $70 = 0, $8 = 0, sp = 0, $46$looptemp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 $6 = HEAP32[$4 >> 2] | 0;
 $7 = HEAP32[$0 >> 2] | 0;
 $8 = $6 - $7 | 0;
 $10 = $7;
 $11 = $6;
 $12 = $6;
 if (($3 | 0) >= 2) {
  $15 = ($3 + -2 | 0) / 2 | 0;
  if (($15 | 0) >= ($8 >> 3 | 0)) {
   $18 = $8 >> 2 | 1;
   $19 = $10 + ($18 << 3) | 0;
   $20 = $19;
   $21 = $18 + 1 | 0;
   if (($21 | 0) < ($3 | 0)) {
    $23 = $19 + 8 | 0;
    $24 = __ZNK6vision17PriorityQueueItemILi96EEltERKS1_($19, $23) | 0;
    $$0 = $24 ? $21 : $18;
    $$sroa$024$0 = $24 ? $23 : $20;
   } else {
    $$0 = $18;
    $$sroa$024$0 = $20;
   }
   if (!(__ZNK6vision17PriorityQueueItemILi96EEltERKS1_($$sroa$024$0, $11) | 0)) {
    $29 = $6;
    $34 = HEAP32[$29 + 4 >> 2] | 0;
    $35 = $5;
    HEAP32[$35 >> 2] = HEAP32[$29 >> 2];
    HEAP32[$35 + 4 >> 2] = $34;
    $$1 = $$0;
    $$sroa$024$1 = $$sroa$024$0;
    $46 = $12;
    while (1) {
     $46$looptemp = $46;
     $46 = $$sroa$024$1;
     $40 = $46;
     $45 = HEAP32[$40 + 4 >> 2] | 0;
     $47 = $46$looptemp;
     HEAP32[$47 >> 2] = HEAP32[$40 >> 2];
     HEAP32[$47 + 4 >> 2] = $45;
     HEAP32[$4 >> 2] = $$sroa$024$1;
     if (($15 | 0) < ($$1 | 0)) break;
     $53 = $$1 << 1 | 1;
     $54 = $10 + ($53 << 3) | 0;
     $55 = $54;
     $56 = $53 + 1 | 0;
     if (($56 | 0) < ($3 | 0)) {
      $58 = $54 + 8 | 0;
      $59 = __ZNK6vision17PriorityQueueItemILi96EEltERKS1_($54, $58) | 0;
      $$2 = $59 ? $56 : $53;
      $$sroa$024$2 = $59 ? $58 : $55;
     } else {
      $$2 = $53;
      $$sroa$024$2 = $55;
     }
     if (__ZNK6vision17PriorityQueueItemILi96EEltERKS1_($$sroa$024$2, $5) | 0) break; else {
      $$1 = $$2;
      $$sroa$024$1 = $$sroa$024$2;
     }
    }
    $64 = $5;
    $69 = HEAP32[$64 + 4 >> 2] | 0;
    $70 = $$sroa$024$1;
    HEAP32[$70 >> 2] = HEAP32[$64 >> 2];
    HEAP32[$70 + 4 >> 2] = $69;
    __ZN6vision17PriorityQueueItemILi96EED2Ev($5);
   }
  }
 }
 STACKTOP = sp;
 return;
}

function _arPattCreateHandle2($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$043 = 0, $$044 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $23 = 0, $26 = 0, $27 = 0, $28 = 0, $31 = 0, $33 = 0, $34 = 0, $37 = 0, $4 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer13 = 0, $vararg_buffer3 = 0, $vararg_buffer5 = 0, $vararg_buffer7 = 0, $vararg_buffer9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $vararg_buffer13 = sp + 56 | 0;
 $vararg_buffer11 = sp + 48 | 0;
 $vararg_buffer9 = sp + 40 | 0;
 $vararg_buffer7 = sp + 32 | 0;
 $vararg_buffer5 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 L1 : do if (($0 + -16 | 0) >>> 0 > 48 | ($1 | 0) < 1) $$044 = 0; else {
  $4 = _malloc(32) | 0;
  if (!$4) {
   _arLog(0, 3, 20454, $vararg_buffer);
   _exit(1);
  }
  HEAP32[$4 >> 2] = 0;
  HEAP32[$4 + 4 >> 2] = $1;
  HEAP32[$4 + 28 >> 2] = $0;
  $9 = _malloc($1 << 2) | 0;
  HEAP32[$4 + 8 >> 2] = $9;
  if (!$9) {
   _arLog(0, 3, 20454, $vararg_buffer1);
   _exit(1);
  }
  $12 = $1 << 4;
  $13 = _malloc($12) | 0;
  HEAP32[$4 + 12 >> 2] = $13;
  if (!$13) {
   _arLog(0, 3, 20454, $vararg_buffer3);
   _exit(1);
  }
  $16 = _malloc($12) | 0;
  $17 = $4 + 20 | 0;
  HEAP32[$17 >> 2] = $16;
  if (!$16) {
   _arLog(0, 3, 20454, $vararg_buffer5);
   _exit(1);
  }
  $19 = $1 << 5;
  $20 = _malloc($19) | 0;
  HEAP32[$4 + 16 >> 2] = $20;
  if (!$20) {
   _arLog(0, 3, 20454, $vararg_buffer7);
   _exit(1);
  }
  $23 = _malloc($19) | 0;
  HEAP32[$4 + 24 >> 2] = $23;
  if (!$23) {
   _arLog(0, 3, 20454, $vararg_buffer9);
   _exit(1);
  }
  $26 = Math_imul($0, $0) | 0;
  $27 = $26 * 12 | 0;
  $28 = $26 << 2;
  $$043 = 0;
  L21 : while (1) {
   if (($$043 | 0) >= ($1 | 0)) {
    $$044 = $4;
    break L1;
   }
   HEAP32[$9 + ($$043 << 2) >> 2] = 0;
   $31 = $$043 << 2;
   $$0 = 0;
   while (1) {
    if ($$0 >>> 0 >= 4) break;
    $33 = _malloc($27) | 0;
    $34 = $$0 + $31 | 0;
    HEAP32[$13 + ($34 << 2) >> 2] = $33;
    if (!$33) {
     label = 19;
     break L21;
    }
    $37 = _malloc($28) | 0;
    HEAP32[(HEAP32[$17 >> 2] | 0) + ($34 << 2) >> 2] = $37;
    if (!$37) {
     label = 21;
     break L21;
    } else $$0 = $$0 + 1 | 0;
   }
   $$043 = $$043 + 1 | 0;
  }
  if ((label | 0) == 19) {
   _arLog(0, 3, 20454, $vararg_buffer11);
   _exit(1);
  } else if ((label | 0) == 21) {
   _arLog(0, 3, 20454, $vararg_buffer13);
   _exit(1);
  }
 } while (0);
 STACKTOP = sp;
 return $$044 | 0;
}

function __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_mmNS_12codecvt_modeE($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$091 = 0, $$185 = 0, $$185$ph = 0, $$589 = 0, $$pre = 0, $21 = 0, $22 = 0, $33 = 0, $47 = 0, $49 = 0, $56 = 0, $74 = 0, $76 = 0, $78 = 0, $84 = 0, $87 = 0;
 $$pre = $1;
 if (!($4 & 4)) $$185$ph = $0; else if (($$pre - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == -17) if ((HEAP8[$0 + 1 >> 0] | 0) == -69) $$185$ph = (HEAP8[$0 + 2 >> 0] | 0) == -65 ? $0 + 3 | 0 : $0; else $$185$ph = $0; else $$185$ph = $0; else $$185$ph = $0;
 $$091 = 0;
 $$185 = $$185$ph;
 L7 : while (1) {
  if (!($$091 >>> 0 < $2 >>> 0 & $$185 >>> 0 < $1 >>> 0)) break;
  $21 = HEAP8[$$185 >> 0] | 0;
  $22 = $21 & 255;
  do if ($21 << 24 >> 24 > -1) {
   if ($22 >>> 0 > $3 >>> 0) break L7;
   $$589 = $$185 + 1 | 0;
  } else {
   if (($21 & 255) < 194) break L7;
   if (($21 & 255) < 224) {
    if (($$pre - $$185 | 0) < 2) break L7;
    $33 = HEAPU8[$$185 + 1 >> 0] | 0;
    if (($33 & 192 | 0) != 128) break L7;
    if (($33 & 63 | $22 << 6 & 1984) >>> 0 > $3 >>> 0) break L7;
    $$589 = $$185 + 2 | 0;
    break;
   }
   if (($21 & 255) < 240) {
    if (($$pre - $$185 | 0) < 3) break L7;
    $47 = HEAP8[$$185 + 1 >> 0] | 0;
    $49 = HEAP8[$$185 + 2 >> 0] | 0;
    switch ($21 << 24 >> 24) {
    case -32:
     {
      if (($47 & -32) << 24 >> 24 != -96) break L7;
      break;
     }
    case -19:
     {
      if (($47 & -32) << 24 >> 24 != -128) break L7;
      break;
     }
    default:
     if (($47 & -64) << 24 >> 24 != -128) break L7;
    }
    $56 = $49 & 255;
    if (($56 & 192 | 0) != 128) break L7;
    if ((($47 & 63) << 6 | $22 << 12 & 61440 | $56 & 63) >>> 0 > $3 >>> 0) break L7; else {
     $$589 = $$185 + 3 | 0;
     break;
    }
   }
   if (($21 & 255) >= 245) break L7;
   if (($$pre - $$185 | 0) < 4) break L7;
   $74 = HEAP8[$$185 + 1 >> 0] | 0;
   $76 = HEAP8[$$185 + 2 >> 0] | 0;
   $78 = HEAP8[$$185 + 3 >> 0] | 0;
   switch ($21 << 24 >> 24) {
   case -16:
    {
     if (($74 + 112 & 255) >= 48) break L7;
     break;
    }
   case -12:
    {
     if (($74 & -16) << 24 >> 24 != -128) break L7;
     break;
    }
   default:
    if (($74 & -64) << 24 >> 24 != -128) break L7;
   }
   $84 = $76 & 255;
   if (($84 & 192 | 0) != 128) break L7;
   $87 = $78 & 255;
   if (($87 & 192 | 0) != 128) break L7;
   if ((($74 & 63) << 12 | $22 << 18 & 1835008 | $84 << 6 & 4032 | $87 & 63) >>> 0 > $3 >>> 0) break L7; else $$589 = $$185 + 4 | 0;
  } while (0);
  $$091 = $$091 + 1 | 0;
  $$185 = $$589;
 }
 return $$185 - $0 | 0;
}

function _decompress_data($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$078 = 0, $$079 = 0, $$080 = 0, $$081 = 0, $$082 = 0, $$083 = 0, $$084 = 0, $$085 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $48 = 0, $49 = 0, $53 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0;
 $3 = HEAP32[$0 + 428 >> 2] | 0;
 $4 = $0 + 320 | 0;
 $6 = (HEAP32[$4 >> 2] | 0) + -1 | 0;
 $7 = $0 + 144 | 0;
 $8 = $0 + 152 | 0;
 $9 = $0 + 436 | 0;
 $10 = $0 + 148 | 0;
 $11 = $0 + 156 | 0;
 while (1) {
  $12 = HEAP32[$7 >> 2] | 0;
  $13 = HEAP32[$8 >> 2] | 0;
  if (($12 | 0) >= ($13 | 0)) {
   if (($12 | 0) != ($13 | 0)) {
    label = 6;
    break;
   }
   if ((HEAP32[$10 >> 2] | 0) >>> 0 > (HEAP32[$11 >> 2] | 0) >>> 0) {
    label = 6;
    break;
   }
  }
  if (!(FUNCTION_TABLE_ii[HEAP32[HEAP32[$9 >> 2] >> 2] & 127]($0) | 0)) {
   $$0 = 0;
   break;
  }
 }
 if ((label | 0) == 6) {
  $25 = $0 + 36 | 0;
  $26 = $0 + 4 | 0;
  $27 = $0 + 448 | 0;
  $$078 = HEAP32[$0 + 216 >> 2] | 0;
  $$085 = 0;
  while (1) {
   if (($$085 | 0) >= (HEAP32[$25 >> 2] | 0)) break;
   L12 : do if (HEAP32[$$078 + 48 >> 2] | 0) {
    $39 = $$078 + 12 | 0;
    $40 = HEAP32[$39 >> 2] | 0;
    $41 = Math_imul($40, HEAP32[$11 >> 2] | 0) | 0;
    $42 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$26 >> 2] | 0) + 32 >> 2] & 31]($0, HEAP32[$3 + 72 + ($$085 << 2) >> 2] | 0, $41, $40, 0) | 0;
    if ((HEAP32[$11 >> 2] | 0) >>> 0 < $6 >>> 0) $$083 = HEAP32[$39 >> 2] | 0; else {
     $48 = HEAP32[$39 >> 2] | 0;
     $49 = ((HEAP32[$$078 + 32 >> 2] | 0) >>> 0) % ($48 >>> 0) | 0;
     $$083 = ($49 | 0) == 0 ? $48 : $49;
    }
    $53 = HEAP32[(HEAP32[$27 >> 2] | 0) + 4 + ($$085 << 2) >> 2] | 0;
    $56 = $$078 + 28 | 0;
    $57 = $$078 + 36 | 0;
    $$080 = HEAP32[$1 + ($$085 << 2) >> 2] | 0;
    $$084 = 0;
    while (1) {
     if (($$084 | 0) >= ($$083 | 0)) break L12;
     $$079 = 0;
     $$081 = HEAP32[$42 + ($$084 << 2) >> 2] | 0;
     $$082 = 0;
     while (1) {
      if ($$082 >>> 0 >= (HEAP32[$56 >> 2] | 0) >>> 0) break;
      FUNCTION_TABLE_viiiii[$53 & 31]($0, $$078, $$081, $$080, $$079);
      $$079 = (HEAP32[$57 >> 2] | 0) + $$079 | 0;
      $$081 = $$081 + 128 | 0;
      $$082 = $$082 + 1 | 0;
     }
     $$080 = $$080 + (HEAP32[$57 >> 2] << 2) | 0;
     $$084 = $$084 + 1 | 0;
    }
   } while (0);
   $$078 = $$078 + 84 | 0;
   $$085 = $$085 + 1 | 0;
  }
  $73 = (HEAP32[$11 >> 2] | 0) + 1 | 0;
  HEAP32[$11 >> 2] = $73;
  $$0 = $73 >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0 ? 3 : 4;
 }
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_137parse_sizeof_function_param_pack_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i28 = 0, $$125 = 0, $16 = 0, $19 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 40 | 0;
 $4 = sp + 12 | 0;
 $5 = sp + 24 | 0;
 $6 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 90) {
  $16 = $0 + 2 | 0;
  if ((HEAP8[$16 >> 0] | 0) == 102) {
   $19 = __ZN10__cxxabiv112_GLOBAL__N_120parse_function_paramINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
   if (($19 | 0) == ($16 | 0)) $$125 = $0; else {
    $22 = $2 + 4 | 0;
    $23 = HEAP32[$22 >> 2] | 0;
    if ((HEAP32[$2 >> 2] | 0) == ($23 | 0)) $$125 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $23 + -24 | 0);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($6, 0, 49842) | 0;
     HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
     HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
     HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
     $$0$i$i$i = 0;
     while (1) {
      if (($$0$i$i$i | 0) == 3) break;
      HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
      $$0$i$i$i = $$0$i$i$i + 1 | 0;
     }
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 49629) | 0;
     HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
     HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
     HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
     $$0$i$i$i28 = 0;
     while (1) {
      if (($$0$i$i$i28 | 0) == 3) break;
      HEAP32[$5 + ($$0$i$i$i28 << 2) >> 2] = 0;
      $$0$i$i$i28 = $$0$i$i$i28 + 1 | 0;
     }
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$22 >> 2] | 0) + -24 | 0, $3);
     __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
     $$125 = $19;
    }
   }
  } else $$125 = $0;
 } else $$125 = $0; else $$125 = $0; else $$125 = $0;
 STACKTOP = sp;
 return $$125 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$byval_copy = 0, $$sroa$0$0 = 0, $$sroa$0$0$copyload = 0, $$sroa$09$0 = 0, $12 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $33 = 0, $38 = 0, $39 = 0, $41 = 0, $42 = 0, $48 = 0, $49 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $5 = sp;
 if (!(HEAP32[$2 + 4 >> 2] & 1)) {
  $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$12 & 31]($0, $$byval_copy, $2, $3, $4 & 1) | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57924) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $17 = HEAP32[$16 >> 2] | 0;
  if ($4) FUNCTION_TABLE_vii[HEAP32[$17 + 24 >> 2] & 63]($$byval_copy, $16); else FUNCTION_TABLE_vii[HEAP32[$17 + 28 >> 2] & 63]($$byval_copy, $16);
  $23 = $$byval_copy + 8 + 3 | 0;
  $24 = HEAP8[$23 >> 0] | 0;
  $26 = HEAP32[$$byval_copy >> 2] | 0;
  $28 = $$byval_copy + 4 | 0;
  $$sroa$09$0 = $24 << 24 >> 24 < 0 ? $26 : $$byval_copy;
  $29 = $24;
  $33 = $26;
  while (1) {
   $30 = $29 << 24 >> 24 < 0;
   if (($$sroa$09$0 | 0) == (($30 ? $33 : $$byval_copy) + (($30 ? HEAP32[$28 >> 2] | 0 : $29 & 255) << 2) | 0)) break;
   $38 = HEAP32[$$sroa$09$0 >> 2] | 0;
   $39 = HEAP32[$1 >> 2] | 0;
   if ($39 | 0) {
    $41 = $39 + 24 | 0;
    $42 = HEAP32[$41 >> 2] | 0;
    if (($42 | 0) == (HEAP32[$39 + 28 >> 2] | 0)) {
     $48 = HEAP32[(HEAP32[$39 >> 2] | 0) + 52 >> 2] | 0;
     $49 = __ZNSt3__211char_traitsIwE11to_int_typeEw($38) | 0;
     $$0$i$i = FUNCTION_TABLE_iii[$48 & 63]($39, $49) | 0;
    } else {
     HEAP32[$41 >> 2] = $42 + 4;
     HEAP32[$42 >> 2] = $38;
     $$0$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw($38) | 0;
    }
    if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) HEAP32[$1 >> 2] = 0;
   }
   $$sroa$09$0 = $$sroa$09$0 + 4 | 0;
   $29 = HEAP8[$23 >> 0] | 0;
   $33 = HEAP32[$$byval_copy >> 2] | 0;
  }
  $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($$byval_copy);
  $$sroa$0$0 = $$sroa$0$0$copyload;
 }
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$i$i = 0, $$byval_copy = 0, $$sroa$0$0 = 0, $$sroa$0$0$copyload = 0, $$sroa$09$0 = 0, $12 = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $32 = 0, $37 = 0, $38 = 0, $40 = 0, $41 = 0, $47 = 0, $48 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $5 = sp;
 if (!(HEAP32[$2 + 4 >> 2] & 1)) {
  $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] | 0;
  HEAP32[$5 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$5 >> 2];
  $$sroa$0$0 = FUNCTION_TABLE_iiiiii[$12 & 31]($0, $$byval_copy, $2, $3, $4 & 1) | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57900) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $17 = HEAP32[$16 >> 2] | 0;
  if ($4) FUNCTION_TABLE_vii[HEAP32[$17 + 24 >> 2] & 63]($$byval_copy, $16); else FUNCTION_TABLE_vii[HEAP32[$17 + 28 >> 2] & 63]($$byval_copy, $16);
  $22 = $$byval_copy + 11 | 0;
  $23 = HEAP8[$22 >> 0] | 0;
  $25 = HEAP32[$$byval_copy >> 2] | 0;
  $27 = $$byval_copy + 4 | 0;
  $$sroa$09$0 = $23 << 24 >> 24 < 0 ? $25 : $$byval_copy;
  $28 = $23;
  $32 = $25;
  while (1) {
   $29 = $28 << 24 >> 24 < 0;
   if (($$sroa$09$0 | 0) == (($29 ? $32 : $$byval_copy) + ($29 ? HEAP32[$27 >> 2] | 0 : $28 & 255) | 0)) break;
   $37 = HEAP8[$$sroa$09$0 >> 0] | 0;
   $38 = HEAP32[$1 >> 2] | 0;
   if ($38 | 0) {
    $40 = $38 + 24 | 0;
    $41 = HEAP32[$40 >> 2] | 0;
    if (($41 | 0) == (HEAP32[$38 + 28 >> 2] | 0)) {
     $47 = HEAP32[(HEAP32[$38 >> 2] | 0) + 52 >> 2] | 0;
     $48 = __ZNSt3__211char_traitsIcE11to_int_typeEc($37) | 0;
     $$0$i$i = FUNCTION_TABLE_iii[$47 & 63]($38, $48) | 0;
    } else {
     HEAP32[$40 >> 2] = $41 + 1;
     HEAP8[$41 >> 0] = $37;
     $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc($37) | 0;
    }
    if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) HEAP32[$1 >> 2] = 0;
   }
   $$sroa$09$0 = $$sroa$09$0 + 1 | 0;
   $28 = HEAP8[$22 >> 0] | 0;
   $32 = HEAP32[$$byval_copy >> 2] | 0;
  }
  $$sroa$0$0$copyload = HEAP32[$1 >> 2] | 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($$byval_copy);
  $$sroa$0$0 = $$sroa$0$0$copyload;
 }
 STACKTOP = sp;
 return $$sroa$0$0 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$022$0 = 0, $$sroa$022$0$copyload24 = 0, $16 = 0, $19 = 0, $21 = 0, $22 = 0, $31 = 0, $34 = 0, $36 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 40 | 0;
 $$byval_copy = sp;
 $6 = sp + 32 | 0;
 $7 = sp + 36 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 if (!(HEAP32[$3 + 4 >> 2] & 1)) {
  HEAP32[$6 >> 2] = -1;
  $16 = HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$8 >> 2];
  $19 = FUNCTION_TABLE_iiiiiii[$16 & 63]($0, $$byval_copy, $$byval_copy2, $3, $4, $6) | 0;
  HEAP32[$1 >> 2] = $19;
  switch (HEAP32[$6 >> 2] | 0) {
  case 0:
   {
    HEAP8[$5 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[$5 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[$5 >> 0] = 1;
    HEAP32[$4 >> 2] = 4;
   }
  }
  $$sroa$022$0 = HEAP32[$1 >> 2] | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 57916) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 57924) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 24 >> 2] & 63]($$byval_copy, $22);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 63]($$byval_copy + 12 | 0, $22);
  HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
  $31 = $$byval_copy + 24 | 0;
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$9 >> 2];
  $34 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($1, $$byval_copy2, $$byval_copy, $31, $21, $4, 1) | 0) == ($$byval_copy | 0) & 1;
  HEAP8[$5 >> 0] = $34;
  $$sroa$022$0$copyload24 = HEAP32[$1 >> 2] | 0;
  $36 = $31;
  do {
   $36 = $36 + -12 | 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($36);
  } while (($36 | 0) != ($$byval_copy | 0));
  $$sroa$022$0 = $$sroa$022$0$copyload24;
 }
 STACKTOP = sp;
 return $$sroa$022$0 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy2 = 0, $$sroa$022$0 = 0, $$sroa$022$0$copyload24 = 0, $16 = 0, $19 = 0, $21 = 0, $22 = 0, $31 = 0, $34 = 0, $36 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy2 = sp + 40 | 0;
 $$byval_copy = sp;
 $6 = sp + 32 | 0;
 $7 = sp + 36 | 0;
 $8 = sp + 28 | 0;
 $9 = sp + 24 | 0;
 if (!(HEAP32[$3 + 4 >> 2] & 1)) {
  HEAP32[$6 >> 2] = -1;
  $16 = HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$7 >> 2];
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$8 >> 2];
  $19 = FUNCTION_TABLE_iiiiiii[$16 & 63]($0, $$byval_copy, $$byval_copy2, $3, $4, $6) | 0;
  HEAP32[$1 >> 2] = $19;
  switch (HEAP32[$6 >> 2] | 0) {
  case 0:
   {
    HEAP8[$5 >> 0] = 0;
    break;
   }
  case 1:
   {
    HEAP8[$5 >> 0] = 1;
    break;
   }
  default:
   {
    HEAP8[$5 >> 0] = 1;
    HEAP32[$4 >> 2] = 4;
   }
  }
  $$sroa$022$0 = HEAP32[$1 >> 2] | 0;
 } else {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 57884) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  __ZNKSt3__28ios_base6getlocEv($$byval_copy2, $3);
  $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy2, 57900) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy2);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 24 >> 2] & 63]($$byval_copy, $22);
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 63]($$byval_copy + 12 | 0, $22);
  HEAP32[$9 >> 2] = HEAP32[$2 >> 2];
  $31 = $$byval_copy + 24 | 0;
  HEAP32[$$byval_copy2 >> 2] = HEAP32[$9 >> 2];
  $34 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($1, $$byval_copy2, $$byval_copy, $31, $21, $4, 1) | 0) == ($$byval_copy | 0) & 1;
  HEAP8[$5 >> 0] = $34;
  $$sroa$022$0$copyload24 = HEAP32[$1 >> 2] | 0;
  $36 = $31;
  do {
   $36 = $36 + -12 | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($36);
  } while (($36 | 0) != ($$byval_copy | 0));
  $$sroa$022$0 = $$sroa$022$0$copyload24;
 }
 STACKTOP = sp;
 return $$sroa$022$0 | 0;
}

function _find_best_colors($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$0100 = 0, $$087 = 0, $$088 = 0, $$089 = 0, $$090 = 0, $$091 = 0, $$092 = 0, $$093 = 0, $$094 = 0, $$097 = 0, $$098 = 0, $$1 = 0, $$195 = 0, $$199 = 0, $$2 = 0, $$296 = 0, $$3 = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $23 = 0, $29 = 0, $30 = 0, $32 = 0, $38 = 0, $44 = 0, $46 = 0, $52 = 0, $57 = 0, $60 = 0, $7 = 0, $scevgep = 0, $scevgep102 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 512 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(512);
 $7 = sp;
 $$094 = $7;
 $$098 = 127;
 while (1) {
  if (($$098 | 0) <= -1) break;
  HEAP32[$$094 >> 2] = 2147483647;
  $$094 = $$094 + 4 | 0;
  $$098 = $$098 + -1 | 0;
 }
 $11 = $0 + 136 | 0;
 $$199 = 0;
 while (1) {
  if (($$199 | 0) >= ($4 | 0)) break;
  $14 = HEAP8[$5 + $$199 >> 0] | 0;
  $15 = $14 & 255;
  $16 = HEAP32[$11 >> 2] | 0;
  $21 = $1 - (HEAPU8[(HEAP32[$16 >> 2] | 0) + $15 >> 0] | 0) | 0;
  $22 = $21 << 1;
  $23 = Math_imul($22, $22) | 0;
  $29 = $2 - (HEAPU8[(HEAP32[$16 + 4 >> 2] | 0) + $15 >> 0] | 0) | 0;
  $30 = $29 * 3 | 0;
  $32 = (Math_imul($30, $30) | 0) + $23 | 0;
  $38 = $3 - (HEAPU8[(HEAP32[$16 + 8 >> 2] | 0) + $15 >> 0] | 0) | 0;
  $44 = ($29 * 72 | 0) + 144 | 0;
  $46 = ($38 << 4) + 64 | 0;
  $$0 = 3;
  $$089 = ($21 << 6) + 256 | 0;
  $$092 = $32 + (Math_imul($38, $38) | 0) | 0;
  $$093 = $6;
  $$195 = $7;
  while (1) {
   if (($$0 | 0) <= -1) break;
   $scevgep102 = $$195 + 128 | 0;
   $$088 = $44;
   $$091 = $$092;
   $$097 = 7;
   $$1 = $$093;
   $$296 = $$195;
   while (1) {
    if (($$097 | 0) <= -1) break;
    $scevgep = $$296 + 16 | 0;
    $$0100 = 3;
    $$087 = $46;
    $$090 = $$091;
    $$2 = $$1;
    $$3 = $$296;
    while (1) {
     if (($$0100 | 0) <= -1) break;
     if (($$090 | 0) < (HEAP32[$$3 >> 2] | 0)) {
      HEAP32[$$3 >> 2] = $$090;
      HEAP8[$$2 >> 0] = $14;
     }
     $52 = $$087 + $$090 | 0;
     $$0100 = $$0100 + -1 | 0;
     $$087 = $$087 + 128 | 0;
     $$090 = $52;
     $$2 = $$2 + 1 | 0;
     $$3 = $$3 + 4 | 0;
    }
    $57 = $$088 + $$091 | 0;
    $$088 = $$088 + 288 | 0;
    $$091 = $57;
    $$097 = $$097 + -1 | 0;
    $$1 = $$1 + 4 | 0;
    $$296 = $scevgep;
   }
   $60 = $$089 + $$092 | 0;
   $$0 = $$0 + -1 | 0;
   $$089 = $$089 + 512 | 0;
   $$092 = $60;
   $$093 = $$093 + 32 | 0;
   $$195 = $scevgep102;
  }
  $$199 = $$199 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$054$ph$ph = 0, $$055 = 0, $$056$ph = 0, $$056$ph$ph = 0, $$058 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $26 = 0, $29 = 0, $33 = 0, $36 = 0, $39 = 0, $40 = 0, $5 = 0, $54 = 0, $7 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 L1 : do if (!$1) {
  $54 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($54 | 0) __ZdlPv($54);
  HEAP32[$2 >> 2] = 0;
 } else {
  if ($1 >>> 0 > 1073741823) {
   $5 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($5, 40521);
   HEAP32[$5 >> 2] = 17440;
   ___cxa_throw($5 | 0, 13288, 107);
  }
  $7 = __Znwm($1 << 2) | 0;
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $7;
  if ($8 | 0) __ZdlPv($8);
  HEAP32[$2 >> 2] = $1;
  $$058 = 0;
  while (1) {
   if (($$058 | 0) == ($1 | 0)) break;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$058 << 2) >> 2] = 0;
   $$058 = $$058 + 1 | 0;
  }
  $10 = $0 + 8 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if ($11 | 0) {
   $17 = HEAP32[$11 + 4 >> 2] | 0;
   $18 = $1 + -1 | 0;
   $20 = ($18 & $1 | 0) == 0;
   if ($20) $26 = $17 & $18; else if ($17 >>> 0 < $1 >>> 0) $26 = $17; else $26 = ($17 >>> 0) % ($1 >>> 0) | 0;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($26 << 2) >> 2] = $10;
   $$054$ph$ph = $26;
   $$056$ph$ph = $11;
   while (1) {
    $$056$ph = $$056$ph$ph;
    L25 : while (1) {
     while (1) {
      $$055 = HEAP32[$$056$ph >> 2] | 0;
      if (!$$055) break L1;
      $29 = HEAP32[$$055 + 4 >> 2] | 0;
      if ($20) $33 = $29 & $18; else if ($29 >>> 0 < $1 >>> 0) $33 = $29; else $33 = ($29 >>> 0) % ($1 >>> 0) | 0;
      if (($33 | 0) == ($$054$ph$ph | 0)) break;
      $36 = (HEAP32[$0 >> 2] | 0) + ($33 << 2) | 0;
      if (!(HEAP32[$36 >> 2] | 0)) break L25;
      $39 = $$055 + 8 | 0;
      $$0 = $$055;
      while (1) {
       $40 = HEAP32[$$0 >> 2] | 0;
       if (!$40) break;
       if ((HEAP32[$39 >> 2] | 0) == (HEAP32[$40 + 8 >> 2] | 0)) $$0 = $40; else break;
      }
      HEAP32[$$056$ph >> 2] = $40;
      HEAP32[$$0 >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($33 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($33 << 2) >> 2] >> 2] = $$055;
     }
     $$056$ph = $$055;
    }
    HEAP32[$36 >> 2] = $$056$ph;
    $$054$ph$ph = $33;
    $$056$ph$ph = $$055;
   }
  }
 } while (0);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$054$ph$ph = 0, $$055 = 0, $$056$ph = 0, $$056$ph$ph = 0, $$058 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $26 = 0, $29 = 0, $33 = 0, $36 = 0, $39 = 0, $40 = 0, $5 = 0, $54 = 0, $7 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 L1 : do if (!$1) {
  $54 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($54 | 0) __ZdlPv($54);
  HEAP32[$2 >> 2] = 0;
 } else {
  if ($1 >>> 0 > 1073741823) {
   $5 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($5, 40521);
   HEAP32[$5 >> 2] = 17440;
   ___cxa_throw($5 | 0, 13288, 107);
  }
  $7 = __Znwm($1 << 2) | 0;
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $7;
  if ($8 | 0) __ZdlPv($8);
  HEAP32[$2 >> 2] = $1;
  $$058 = 0;
  while (1) {
   if (($$058 | 0) == ($1 | 0)) break;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$058 << 2) >> 2] = 0;
   $$058 = $$058 + 1 | 0;
  }
  $10 = $0 + 8 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if ($11 | 0) {
   $17 = HEAP32[$11 + 4 >> 2] | 0;
   $18 = $1 + -1 | 0;
   $20 = ($18 & $1 | 0) == 0;
   if ($20) $26 = $17 & $18; else if ($17 >>> 0 < $1 >>> 0) $26 = $17; else $26 = ($17 >>> 0) % ($1 >>> 0) | 0;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($26 << 2) >> 2] = $10;
   $$054$ph$ph = $26;
   $$056$ph$ph = $11;
   while (1) {
    $$056$ph = $$056$ph$ph;
    L25 : while (1) {
     while (1) {
      $$055 = HEAP32[$$056$ph >> 2] | 0;
      if (!$$055) break L1;
      $29 = HEAP32[$$055 + 4 >> 2] | 0;
      if ($20) $33 = $29 & $18; else if ($29 >>> 0 < $1 >>> 0) $33 = $29; else $33 = ($29 >>> 0) % ($1 >>> 0) | 0;
      if (($33 | 0) == ($$054$ph$ph | 0)) break;
      $36 = (HEAP32[$0 >> 2] | 0) + ($33 << 2) | 0;
      if (!(HEAP32[$36 >> 2] | 0)) break L25;
      $39 = $$055 + 8 | 0;
      $$0 = $$055;
      while (1) {
       $40 = HEAP32[$$0 >> 2] | 0;
       if (!$40) break;
       if ((HEAP32[$39 >> 2] | 0) == (HEAP32[$40 + 8 >> 2] | 0)) $$0 = $40; else break;
      }
      HEAP32[$$056$ph >> 2] = $40;
      HEAP32[$$0 >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($33 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($33 << 2) >> 2] >> 2] = $$055;
     }
     $$056$ph = $$055;
    }
    HEAP32[$36 >> 2] = $$056$ph;
    $$054$ph$ph = $33;
    $$056$ph$ph = $$055;
   }
  }
 } while (0);
 return;
}

function _per_scan_setup_34($0) {
 $0 = $0 | 0;
 var $$076 = 0, $$077 = 0, $$pre$phi80Z2D = 0, $1 = 0, $10 = 0, $2 = 0, $20 = 0, $21 = 0, $27 = 0, $39 = 0, $46 = 0, $48 = 0, $5 = 0, $52 = 0, $54 = 0, $57 = 0, $59 = 0, $63 = 0, $67 = 0, $72 = 0, $78 = 0, $83 = 0;
 $1 = $0 + 328 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 L1 : do if (($2 | 0) == 1) {
  $5 = HEAP32[$0 + 332 >> 2] | 0;
  HEAP32[$0 + 348 >> 2] = HEAP32[$5 + 28 >> 2];
  $10 = HEAP32[$5 + 32 >> 2] | 0;
  HEAP32[$0 + 352 >> 2] = $10;
  HEAP32[$5 + 52 >> 2] = 1;
  HEAP32[$5 + 56 >> 2] = 1;
  HEAP32[$5 + 60 >> 2] = 1;
  HEAP32[$5 + 64 >> 2] = HEAP32[$5 + 36 >> 2];
  HEAP32[$5 + 68 >> 2] = 1;
  $20 = HEAP32[$5 + 12 >> 2] | 0;
  $21 = ($10 >>> 0) % ($20 >>> 0) | 0;
  HEAP32[$5 + 72 >> 2] = ($21 | 0) == 0 ? $20 : $21;
  HEAP32[$0 + 356 >> 2] = 1;
  HEAP32[$0 + 360 >> 2] = 0;
 } else {
  if (($2 + -1 | 0) >>> 0 > 3) {
   $27 = HEAP32[$0 >> 2] | 0;
   HEAP32[$27 + 20 >> 2] = 26;
   HEAP32[$27 + 24 >> 2] = $2;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = 4;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   $$pre$phi80Z2D = $0;
  } else $$pre$phi80Z2D = $0;
  $39 = _jdiv_round_up(HEAP32[$0 + 28 >> 2] | 0, HEAP32[$0 + 308 >> 2] << 3) | 0;
  HEAP32[$0 + 348 >> 2] = $39;
  $46 = _jdiv_round_up(HEAP32[$0 + 32 >> 2] | 0, HEAP32[$0 + 312 >> 2] << 3) | 0;
  HEAP32[$0 + 352 >> 2] = $46;
  $48 = $0 + 356 | 0;
  HEAP32[$48 >> 2] = 0;
  $$077 = 0;
  while (1) {
   if (($$077 | 0) >= (HEAP32[$1 >> 2] | 0)) break L1;
   $52 = HEAP32[$0 + 332 + ($$077 << 2) >> 2] | 0;
   $54 = HEAP32[$52 + 8 >> 2] | 0;
   HEAP32[$52 + 52 >> 2] = $54;
   $57 = HEAP32[$52 + 12 >> 2] | 0;
   HEAP32[$52 + 56 >> 2] = $57;
   $59 = Math_imul($57, $54) | 0;
   HEAP32[$52 + 60 >> 2] = $59;
   $63 = Math_imul(HEAP32[$52 + 36 >> 2] | 0, $54) | 0;
   HEAP32[$52 + 64 >> 2] = $63;
   $67 = ((HEAP32[$52 + 28 >> 2] | 0) >>> 0) % ($54 >>> 0) | 0;
   HEAP32[$52 + 68 >> 2] = ($67 | 0) == 0 ? $54 : $67;
   $72 = ((HEAP32[$52 + 32 >> 2] | 0) >>> 0) % ($57 >>> 0) | 0;
   HEAP32[$52 + 72 >> 2] = ($72 | 0) == 0 ? $57 : $72;
   if (((HEAP32[$48 >> 2] | 0) + $59 | 0) > 10) {
    $78 = HEAP32[$0 >> 2] | 0;
    HEAP32[$78 + 20 >> 2] = 13;
    FUNCTION_TABLE_vi[HEAP32[$78 >> 2] & 255]($$pre$phi80Z2D);
   }
   $$076 = $59;
   while (1) {
    if (($$076 | 0) <= 0) break;
    $83 = HEAP32[$48 >> 2] | 0;
    HEAP32[$48 >> 2] = $83 + 1;
    HEAP32[$0 + 360 + ($83 << 2) >> 2] = $$077;
    $$076 = $$076 + -1 | 0;
   }
   $$077 = $$077 + 1 | 0;
  }
 } while (0);
 return;
}

function _memchr($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$137$lcssa66 = 0, $$13745 = 0, $$140 = 0, $$23839 = 0, $$in = 0, $$lcssa = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $20 = 0, $23 = 0, $29 = 0, $3 = 0, $30 = 0, $39 = 0, $7 = 0, $8 = 0, label = 0;
 $3 = $1 & 255;
 $7 = ($2 | 0) != 0;
 L1 : do if ($7 & ($0 & 3 | 0) != 0) {
  $8 = $1 & 255;
  $$03555 = $0;
  $$03654 = $2;
  while (1) {
   if ((HEAP8[$$03555 >> 0] | 0) == $8 << 24 >> 24) {
    $$035$lcssa65 = $$03555;
    $$036$lcssa64 = $$03654;
    label = 6;
    break L1;
   }
   $11 = $$03555 + 1 | 0;
   $12 = $$03654 + -1 | 0;
   $16 = ($12 | 0) != 0;
   if ($16 & ($11 & 3 | 0) != 0) {
    $$03555 = $11;
    $$03654 = $12;
   } else {
    $$035$lcssa = $11;
    $$036$lcssa = $12;
    $$lcssa = $16;
    label = 5;
    break;
   }
  }
 } else {
  $$035$lcssa = $0;
  $$036$lcssa = $2;
  $$lcssa = $7;
  label = 5;
 } while (0);
 if ((label | 0) == 5) if ($$lcssa) {
  $$035$lcssa65 = $$035$lcssa;
  $$036$lcssa64 = $$036$lcssa;
  label = 6;
 } else label = 16;
 L8 : do if ((label | 0) == 6) {
  $18 = $1 & 255;
  if ((HEAP8[$$035$lcssa65 >> 0] | 0) == $18 << 24 >> 24) if (!$$036$lcssa64) {
   label = 16;
   break;
  } else {
   $39 = $$035$lcssa65;
   break;
  }
  $20 = Math_imul($3, 16843009) | 0;
  L13 : do if ($$036$lcssa64 >>> 0 > 3) {
   $$046 = $$035$lcssa65;
   $$13745 = $$036$lcssa64;
   while (1) {
    $23 = HEAP32[$$046 >> 2] ^ $20;
    if (($23 & -2139062144 ^ -2139062144) & $23 + -16843009 | 0) {
     $$137$lcssa66 = $$13745;
     $$in = $$046;
     break L13;
    }
    $29 = $$046 + 4 | 0;
    $30 = $$13745 + -4 | 0;
    if ($30 >>> 0 > 3) {
     $$046 = $29;
     $$13745 = $30;
    } else {
     $$0$lcssa = $29;
     $$137$lcssa = $30;
     label = 11;
     break;
    }
   }
  } else {
   $$0$lcssa = $$035$lcssa65;
   $$137$lcssa = $$036$lcssa64;
   label = 11;
  } while (0);
  if ((label | 0) == 11) if (!$$137$lcssa) {
   label = 16;
   break;
  } else {
   $$137$lcssa66 = $$137$lcssa;
   $$in = $$0$lcssa;
  }
  $$140 = $$in;
  $$23839 = $$137$lcssa66;
  while (1) {
   if ((HEAP8[$$140 >> 0] | 0) == $18 << 24 >> 24) {
    $39 = $$140;
    break L8;
   }
   $$23839 = $$23839 + -1 | 0;
   if (!$$23839) {
    label = 16;
    break;
   } else $$140 = $$140 + 1 | 0;
  }
 } while (0);
 if ((label | 0) == 16) $39 = 0;
 return $39 | 0;
}

function __ZN6vision10DoGPyramid5allocEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$026 = 0, $10 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $35 = 0, $36 = 0, $37 = 0, $41 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 if (!(__ZNK6vision25GaussianScaleSpacePyramid4sizeEv($1) | 0)) {
  $10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 20477) | 0, 20520) | 0, 33528) | 0, 53) | 0, 33535) | 0, 20651) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $10 + (HEAP32[(HEAP32[$10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 28 >> 2] & 63]($15, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($10, $19) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($10) | 0;
  _abort();
 }
 $21 = __ZNK6vision5Image4typeEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, 0, 0) | 0) | 0;
 $23 = __ZNK6vision5Image5widthEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, 0, 0) | 0) | 0;
 $25 = __ZNK6vision5Image6heightEv(__ZNK6vision25GaussianScaleSpacePyramid3getEmm($1, 0, 0) | 0) | 0;
 $26 = __ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv($1) | 0;
 $27 = $0 + 12 | 0;
 HEAP32[$27 >> 2] = $26;
 $29 = (__ZNK6vision25GaussianScaleSpacePyramid18numScalesPerOctaveEv($1) | 0) + -1 | 0;
 $30 = $0 + 16 | 0;
 HEAP32[$30 >> 2] = $29;
 __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE6resizeEm($0, Math_imul(HEAP32[$27 >> 2] | 0, $29) | 0);
 $$026 = 0;
 while (1) {
  if ($$026 >>> 0 >= (HEAP32[$27 >> 2] | 0) >>> 0) break;
  $35 = $23 >>> $$026;
  $36 = $25 >>> $$026;
  $$0 = 0;
  while (1) {
   $37 = HEAP32[$30 >> 2] | 0;
   if ($$0 >>> 0 >= $37 >>> 0) break;
   $41 = (Math_imul($37, $$026) | 0) + $$0 | 0;
   __ZN6vision5Image5allocENS_9ImageTypeEmmim((HEAP32[$0 >> 2] | 0) + ($41 << 5) | 0, $21, $35, $36, -1, 1);
   $$0 = $$0 + 1 | 0;
  }
  $$026 = $$026 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$054$ph$ph = 0, $$055 = 0, $$056$ph = 0, $$056$ph$ph = 0, $$058 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $26 = 0, $29 = 0, $33 = 0, $36 = 0, $39 = 0, $40 = 0, $5 = 0, $54 = 0, $7 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 L1 : do if (!$1) {
  $54 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($54 | 0) __ZdlPv($54);
  HEAP32[$2 >> 2] = 0;
 } else {
  if ($1 >>> 0 > 1073741823) {
   $5 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($5, 40521);
   HEAP32[$5 >> 2] = 17440;
   ___cxa_throw($5 | 0, 13288, 107);
  }
  $7 = __Znwm($1 << 2) | 0;
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $7;
  if ($8 | 0) __ZdlPv($8);
  HEAP32[$2 >> 2] = $1;
  $$058 = 0;
  while (1) {
   if (($$058 | 0) == ($1 | 0)) break;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$058 << 2) >> 2] = 0;
   $$058 = $$058 + 1 | 0;
  }
  $10 = $0 + 8 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if ($11 | 0) {
   $17 = HEAP32[$11 + 4 >> 2] | 0;
   $18 = $1 + -1 | 0;
   $20 = ($18 & $1 | 0) == 0;
   if ($20) $26 = $17 & $18; else if ($17 >>> 0 < $1 >>> 0) $26 = $17; else $26 = ($17 >>> 0) % ($1 >>> 0) | 0;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($26 << 2) >> 2] = $10;
   $$054$ph$ph = $26;
   $$056$ph$ph = $11;
   while (1) {
    $$056$ph = $$056$ph$ph;
    L25 : while (1) {
     while (1) {
      $$055 = HEAP32[$$056$ph >> 2] | 0;
      if (!$$055) break L1;
      $29 = HEAP32[$$055 + 4 >> 2] | 0;
      if ($20) $33 = $29 & $18; else if ($29 >>> 0 < $1 >>> 0) $33 = $29; else $33 = ($29 >>> 0) % ($1 >>> 0) | 0;
      if (($33 | 0) == ($$054$ph$ph | 0)) break;
      $36 = (HEAP32[$0 >> 2] | 0) + ($33 << 2) | 0;
      if (!(HEAP32[$36 >> 2] | 0)) break L25;
      $39 = $$055 + 8 | 0;
      $$0 = $$055;
      while (1) {
       $40 = HEAP32[$$0 >> 2] | 0;
       if (!$40) break;
       if ((HEAP32[$39 >> 2] | 0) == (HEAP32[$40 + 8 >> 2] | 0)) $$0 = $40; else break;
      }
      HEAP32[$$056$ph >> 2] = $40;
      HEAP32[$$0 >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($33 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($33 << 2) >> 2] >> 2] = $$055;
     }
     $$056$ph = $$055;
    }
    HEAP32[$36 >> 2] = $$056$ph;
    $$054$ph$ph = $33;
    $$056$ph$ph = $$055;
   }
  }
 } while (0);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$054$ph$ph = 0, $$055 = 0, $$056$ph = 0, $$056$ph$ph = 0, $$058 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $26 = 0, $29 = 0, $33 = 0, $36 = 0, $39 = 0, $40 = 0, $5 = 0, $54 = 0, $7 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 L1 : do if (!$1) {
  $54 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = 0;
  if ($54 | 0) __ZdlPv($54);
  HEAP32[$2 >> 2] = 0;
 } else {
  if ($1 >>> 0 > 1073741823) {
   $5 = ___cxa_allocate_exception(8) | 0;
   __ZNSt11logic_errorC2EPKc($5, 40521);
   HEAP32[$5 >> 2] = 17440;
   ___cxa_throw($5 | 0, 13288, 107);
  }
  $7 = __Znwm($1 << 2) | 0;
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $7;
  if ($8 | 0) __ZdlPv($8);
  HEAP32[$2 >> 2] = $1;
  $$058 = 0;
  while (1) {
   if (($$058 | 0) == ($1 | 0)) break;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$058 << 2) >> 2] = 0;
   $$058 = $$058 + 1 | 0;
  }
  $10 = $0 + 8 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if ($11 | 0) {
   $17 = HEAP32[$11 + 4 >> 2] | 0;
   $18 = $1 + -1 | 0;
   $20 = ($18 & $1 | 0) == 0;
   if ($20) $26 = $17 & $18; else if ($17 >>> 0 < $1 >>> 0) $26 = $17; else $26 = ($17 >>> 0) % ($1 >>> 0) | 0;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($26 << 2) >> 2] = $10;
   $$054$ph$ph = $26;
   $$056$ph$ph = $11;
   while (1) {
    $$056$ph = $$056$ph$ph;
    L25 : while (1) {
     while (1) {
      $$055 = HEAP32[$$056$ph >> 2] | 0;
      if (!$$055) break L1;
      $29 = HEAP32[$$055 + 4 >> 2] | 0;
      if ($20) $33 = $29 & $18; else if ($29 >>> 0 < $1 >>> 0) $33 = $29; else $33 = ($29 >>> 0) % ($1 >>> 0) | 0;
      if (($33 | 0) == ($$054$ph$ph | 0)) break;
      $36 = (HEAP32[$0 >> 2] | 0) + ($33 << 2) | 0;
      if (!(HEAP32[$36 >> 2] | 0)) break L25;
      $39 = $$055 + 8 | 0;
      $$0 = $$055;
      while (1) {
       $40 = HEAP32[$$0 >> 2] | 0;
       if (!$40) break;
       if ((HEAP32[$39 >> 2] | 0) == (HEAP32[$40 + 8 >> 2] | 0)) $$0 = $40; else break;
      }
      HEAP32[$$056$ph >> 2] = $40;
      HEAP32[$$0 >> 2] = HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($33 << 2) >> 2] >> 2];
      HEAP32[HEAP32[(HEAP32[$0 >> 2] | 0) + ($33 << 2) >> 2] >> 2] = $$055;
     }
     $$056$ph = $$055;
    }
    HEAP32[$36 >> 2] = $$056$ph;
    $$054$ph$ph = $33;
    $$056$ph$ph = $$055;
   }
  }
 } while (0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_expr_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i27 = 0, $$124 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 40 | 0;
 $4 = sp + 12 | 0;
 $5 = sp + 24 | 0;
 $6 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 122) {
  $16 = $0 + 2 | 0;
  $17 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($17 | 0) == ($16 | 0)) $$124 = $0; else {
   $20 = $2 + 4 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) $$124 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $21 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($6, 0, 49856) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 49629) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i27 = 0;
    while (1) {
     if (($$0$i$i$i27 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i27 << 2) >> 2] = 0;
     $$0$i$i$i27 = $$0$i$i$i27 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$20 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$124 = $17;
   }
  }
 } else $$124 = $0; else $$124 = $0; else $$124 = $0;
 STACKTOP = sp;
 return $$124 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_sizeof_type_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i27 = 0, $$124 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp + 40 | 0;
 $4 = sp + 12 | 0;
 $5 = sp + 24 | 0;
 $6 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 116) {
  $16 = $0 + 2 | 0;
  $17 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($16, $1, $2) | 0;
  if (($17 | 0) == ($16 | 0)) $$124 = $0; else {
   $20 = $2 + 4 | 0;
   $21 = HEAP32[$20 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) $$124 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($6, $21 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($6, 0, 49856) | 0;
    HEAP32[$5 >> 2] = HEAP32[$6 >> 2];
    HEAP32[$5 + 4 >> 2] = HEAP32[$6 + 4 >> 2];
    HEAP32[$5 + 8 >> 2] = HEAP32[$6 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$6 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($5, 49629) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i27 = 0;
    while (1) {
     if (($$0$i$i$i27 | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i27 << 2) >> 2] = 0;
     $$0$i$i$i27 = $$0$i$i$i27 + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$20 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($6);
    $$124 = $17;
   }
  }
 } else $$124 = $0; else $$124 = $0; else $$124 = $0;
 STACKTOP = sp;
 return $$124 | 0;
}

function _quantize_fs_dither($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0114 = 0, $$0115 = 0, $$0116 = 0, $$0117 = 0, $$0118 = 0, $$0119 = 0, $$0120 = 0, $$0121 = 0, $$0122 = 0, $$0124 = 0, $$1 = 0, $$1123 = 0, $$1125 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $38 = 0, $41 = 0, $42 = 0, $44 = 0, $5 = 0, $55 = 0, $58 = 0, $66 = 0, $7 = 0, $71 = 0, $9 = 0;
 $5 = HEAP32[$0 + 460 >> 2] | 0;
 $7 = HEAP32[$0 + 120 >> 2] | 0;
 $9 = HEAP32[$0 + 112 >> 2] | 0;
 $11 = HEAP32[$0 + 324 >> 2] | 0;
 $12 = $5 + 84 | 0;
 $13 = $5 + 24 | 0;
 $14 = $5 + 16 | 0;
 $15 = $9 + -1 | 0;
 $16 = Math_imul($15, $7) | 0;
 $17 = 0 - $7 | 0;
 $18 = $9 + 1 | 0;
 $$0116 = 0;
 while (1) {
  if (($$0116 | 0) >= ($3 | 0)) break;
  $20 = $2 + ($$0116 << 2) | 0;
  _jzero_far(HEAP32[$20 >> 2] | 0, $9);
  $22 = $1 + ($$0116 << 2) | 0;
  $$0117 = 0;
  while (1) {
   if (($$0117 | 0) >= ($7 | 0)) break;
   $25 = (HEAP32[$22 >> 2] | 0) + $$0117 | 0;
   $26 = HEAP32[$20 >> 2] | 0;
   if (!(HEAP32[$12 >> 2] | 0)) {
    $$0118 = $7;
    $$0119 = 1;
    $$0121 = HEAP32[$5 + 68 + ($$0117 << 2) >> 2] | 0;
    $$0122 = $25;
    $$0124 = $26;
   } else {
    $$0118 = $17;
    $$0119 = -1;
    $$0121 = (HEAP32[$5 + 68 + ($$0117 << 2) >> 2] | 0) + ($18 << 1) | 0;
    $$0122 = $25 + $16 | 0;
    $$0124 = $26 + $15 | 0;
   }
   $38 = HEAP32[(HEAP32[$13 >> 2] | 0) + ($$0117 << 2) >> 2] | 0;
   $41 = HEAP32[(HEAP32[$14 >> 2] | 0) + ($$0117 << 2) >> 2] | 0;
   $42 = Math_imul($9, $$0119) | 0;
   $$0 = 0;
   $$0114 = 0;
   $$0115 = $9;
   $$0120 = 0;
   $$1 = $$0121;
   $$1123 = $$0122;
   $$1125 = $$0124;
   while (1) {
    if (!$$0115) break;
    $44 = $$1 + ($$0119 << 1) | 0;
    $55 = HEAPU8[$11 + (($$0 + 8 + (HEAP16[$44 >> 1] | 0) >> 4) + (HEAPU8[$$1123 >> 0] | 0)) >> 0] | 0;
    $58 = HEAPU8[$38 + $55 >> 0] | 0;
    HEAP8[$$1125 >> 0] = (HEAPU8[$$1125 >> 0] | 0) + $58;
    $66 = $55 - (HEAPU8[$41 + $58 >> 0] | 0) | 0;
    HEAP16[$$1 >> 1] = ($66 * 3 | 0) + $$0120;
    $71 = ($66 * 5 | 0) + $$0114 | 0;
    $$0 = $66 * 7 | 0;
    $$0114 = $66;
    $$0115 = $$0115 + -1 | 0;
    $$0120 = $71;
    $$1 = $44;
    $$1123 = $$1123 + $$0118 | 0;
    $$1125 = $$1125 + $$0119 | 0;
   }
   HEAP16[$$0121 + ($42 << 1) >> 1] = $$0120;
   $$0117 = $$0117 + 1 | 0;
  }
  HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) == 0 & 1;
  $$0116 = $$0116 + 1 | 0;
 }
 return;
}

function _next_marker($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$058 = 0, $$064 = 0, $$2 = 0, $$2$in = 0, $$2$in$be = 0, $$2$in$ph = 0, $$260 = 0, $$361$sink = 0, $$361$sink$be = 0, $$361$sink$ph = 0, $$4 = 0, $$462 = 0, $$5 = 0, $$563 = 0, $17 = 0, $2 = 0, $34 = 0, $38 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, $6 = 0, $7 = 0, label = 0;
 $2 = HEAP32[$0 + 24 >> 2] | 0;
 $4 = $2 + 4 | 0;
 $6 = $2 + 12 | 0;
 $7 = $0 + 440 | 0;
 $$0 = HEAP32[$4 >> 2] | 0;
 $$058 = HEAP32[$2 >> 2] | 0;
 L1 : while (1) {
  if (!$$0) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$6 >> 2] & 127]($0) | 0)) {
    $$064 = 0;
    break;
   }
   $$2$in$ph = HEAP32[$4 >> 2] | 0;
   $$361$sink$ph = HEAP32[$2 >> 2] | 0;
  } else {
   $$2$in$ph = $$0;
   $$361$sink$ph = $$058;
  }
  $$2$in = $$2$in$ph;
  $$361$sink = $$361$sink$ph;
  while (1) {
   $$2 = $$2$in + -1 | 0;
   $$260 = $$361$sink + 1 | 0;
   if ((HEAP8[$$361$sink >> 0] | 0) == -1) break;
   $17 = (HEAP32[$7 >> 2] | 0) + 24 | 0;
   HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 1;
   HEAP32[$2 >> 2] = $$260;
   HEAP32[$4 >> 2] = $$2;
   if (!$$2) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$6 >> 2] & 127]($0) | 0)) {
     $$064 = 0;
     break L1;
    }
    $$2$in$be = HEAP32[$4 >> 2] | 0;
    $$361$sink$be = HEAP32[$2 >> 2] | 0;
   } else {
    $$2$in$be = $$2;
    $$361$sink$be = $$260;
   }
   $$2$in = $$2$in$be;
   $$361$sink = $$361$sink$be;
  }
  $$4 = $$2;
  $$462 = $$260;
  do {
   if (!$$4) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$6 >> 2] & 127]($0) | 0)) {
     $$064 = 0;
     break L1;
    }
    $$5 = HEAP32[$4 >> 2] | 0;
    $$563 = HEAP32[$2 >> 2] | 0;
   } else {
    $$5 = $$4;
    $$563 = $$462;
   }
   $$4 = $$5 + -1 | 0;
   $$462 = $$563 + 1 | 0;
   $34 = HEAP8[$$563 >> 0] | 0;
  } while ($34 << 24 >> 24 == -1);
  $38 = (HEAP32[$7 >> 2] | 0) + 24 | 0;
  $39 = HEAP32[$38 >> 2] | 0;
  if ($34 << 24 >> 24) {
   label = 18;
   break;
  }
  HEAP32[$38 >> 2] = $39 + 2;
  HEAP32[$2 >> 2] = $$462;
  HEAP32[$4 >> 2] = $$4;
  $$0 = $$4;
  $$058 = $$462;
 }
 if ((label | 0) == 18) {
  $41 = $34 & 255;
  if ($39 | 0) {
   $43 = HEAP32[$0 >> 2] | 0;
   HEAP32[$43 + 20 >> 2] = 116;
   HEAP32[$43 + 24 >> 2] = $39;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $41;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, -1);
   HEAP32[(HEAP32[$7 >> 2] | 0) + 24 >> 2] = 0;
  }
  HEAP32[$0 + 416 >> 2] = $41;
  HEAP32[$2 >> 2] = $$462;
  HEAP32[$4 >> 2] = $$4;
  $$064 = 1;
 }
 return $$064 | 0;
}

function _get_interesting_appn($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$066 = 0, $$070 = 0, $$071 = 0, $$072 = 0, $$1 = 0, $$167 = 0, $$167$pn = 0, $$2 = 0, $$2$in = 0, $$268 = 0, $$3 = 0, $$369 = 0, $$pre$phiZ2D = 0, $1 = 0, $12 = 0, $15 = 0, $18 = 0, $2 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $40 = 0, $42 = 0, $43 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 $2 = $0 + 24 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $3 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) if (!(FUNCTION_TABLE_ii[HEAP32[$3 + 12 >> 2] & 127]($0) | 0)) $$070 = 0; else {
  $$0 = HEAP32[$4 >> 2] | 0;
  label = 4;
 } else {
  $$0 = $5;
  label = 4;
 }
 L4 : do if ((label | 0) == 4) {
  $$066 = HEAP32[$3 >> 2] | 0;
  $12 = $$0 + -1 | 0;
  $15 = (HEAPU8[$$066 >> 0] | 0) << 8;
  if (!$12) {
   $18 = $3 + 12 | 0;
   if (!(FUNCTION_TABLE_ii[HEAP32[$18 >> 2] & 127]($0) | 0)) {
    $$070 = 0;
    break;
   }
   $$1 = HEAP32[$4 >> 2] | 0;
   $$167 = HEAP32[$3 >> 2] | 0;
   $$pre$phiZ2D = $18;
  } else {
   $$1 = $12;
   $$167 = $$066 + 1 | 0;
   $$pre$phiZ2D = $3 + 12 | 0;
  }
  $26 = $15 | (HEAPU8[$$167 >> 0] | 0);
  $27 = $26 + -2 | 0;
  $$071 = $26 >>> 0 > 15 ? 14 : $26 >>> 0 > 2 ? $27 : 0;
  $$072 = 0;
  $$167$pn = $$167;
  $$2$in = $$1;
  while (1) {
   $$2 = $$2$in + -1 | 0;
   $$268 = $$167$pn + 1 | 0;
   if ($$072 >>> 0 >= $$071 >>> 0) break;
   if (!$$2) {
    if (!(FUNCTION_TABLE_ii[HEAP32[$$pre$phiZ2D >> 2] & 127]($0) | 0)) {
     $$070 = 0;
     break L4;
    }
    $$3 = HEAP32[$4 >> 2] | 0;
    $$369 = HEAP32[$3 >> 2] | 0;
   } else {
    $$3 = $$2;
    $$369 = $$268;
   }
   HEAP8[$1 + $$072 >> 0] = HEAP8[$$369 >> 0] | 0;
   $$072 = $$072 + 1 | 0;
   $$167$pn = $$369;
   $$2$in = $$3;
  }
  $40 = $27 - $$071 | 0;
  $42 = HEAP32[$0 + 416 >> 2] | 0;
  switch ($42 | 0) {
  case 224:
   {
    _examine_app0($0, $1, $$071, $40);
    break;
   }
  case 238:
   {
    _examine_app14($0, $1, $$071, $40);
    break;
   }
  default:
   {
    $43 = HEAP32[$0 >> 2] | 0;
    HEAP32[$43 + 20 >> 2] = 68;
    HEAP32[$43 + 24 >> 2] = $42;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
  }
  HEAP32[$3 >> 2] = $$268;
  HEAP32[$4 >> 2] = $$2;
  if (($40 | 0) > 0) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$2 >> 2] | 0) + 16 >> 2] & 63]($0, $40);
   $$070 = 1;
  } else $$070 = 1;
 } while (0);
 STACKTOP = sp;
 return $$070 | 0;
}

function _h2v1_merged_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0110 = 0, $$0111 = 0, $$0112 = 0, $$0113 = 0, $11 = 0, $13 = 0, $15 = 0, $18 = 0, $22 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $36 = 0, $39 = 0, $41 = 0, $47 = 0, $49 = 0, $5 = 0, $52 = 0, $67 = 0, $7 = 0, $85 = 0, $87 = 0, $9 = 0, $95 = 0, $97 = 0, $99 = 0, $scevgep = 0, $scevgep115 = 0;
 $5 = HEAP32[$0 + 452 >> 2] | 0;
 $7 = HEAP32[$0 + 324 >> 2] | 0;
 $9 = HEAP32[$5 + 16 >> 2] | 0;
 $11 = HEAP32[$5 + 20 >> 2] | 0;
 $13 = HEAP32[$5 + 24 >> 2] | 0;
 $15 = HEAP32[$5 + 28 >> 2] | 0;
 $18 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($2 << 2) >> 2] | 0;
 $22 = HEAP32[(HEAP32[$1 + 4 >> 2] | 0) + ($2 << 2) >> 2] | 0;
 $26 = HEAP32[(HEAP32[$1 + 8 >> 2] | 0) + ($2 << 2) >> 2] | 0;
 $27 = HEAP32[$3 >> 2] | 0;
 $28 = $0 + 112 | 0;
 $29 = HEAP32[$28 >> 2] | 0;
 $30 = $29 >>> 1;
 $31 = $30 * 6 | 0;
 $32 = $29 & -2;
 $scevgep115 = $22 + $30 | 0;
 $$0 = $30;
 $$0110 = $26;
 $$0111 = $22;
 $$0112 = $18;
 $$0113 = $27;
 while (1) {
  if (!$$0) break;
  $36 = HEAPU8[$$0111 >> 0] | 0;
  $39 = HEAPU8[$$0110 >> 0] | 0;
  $41 = HEAP32[$9 + ($39 << 2) >> 2] | 0;
  $47 = (HEAP32[$13 + ($39 << 2) >> 2] | 0) + (HEAP32[$15 + ($36 << 2) >> 2] | 0) >> 16;
  $49 = HEAP32[$11 + ($36 << 2) >> 2] | 0;
  $52 = HEAPU8[$$0112 >> 0] | 0;
  HEAP8[$$0113 >> 0] = HEAP8[$7 + ($41 + $52) >> 0] | 0;
  HEAP8[$$0113 + 1 >> 0] = HEAP8[$7 + ($47 + $52) >> 0] | 0;
  HEAP8[$$0113 + 2 >> 0] = HEAP8[$7 + ($49 + $52) >> 0] | 0;
  $67 = HEAPU8[$$0112 + 1 >> 0] | 0;
  HEAP8[$$0113 + 3 >> 0] = HEAP8[$7 + ($41 + $67) >> 0] | 0;
  HEAP8[$$0113 + 4 >> 0] = HEAP8[$7 + ($47 + $67) >> 0] | 0;
  HEAP8[$$0113 + 5 >> 0] = HEAP8[$7 + ($49 + $67) >> 0] | 0;
  $$0 = $$0 + -1 | 0;
  $$0110 = $$0110 + 1 | 0;
  $$0111 = $$0111 + 1 | 0;
  $$0112 = $$0112 + 2 | 0;
  $$0113 = $$0113 + 6 | 0;
 }
 $scevgep = $27 + $31 | 0;
 if (HEAP32[$28 >> 2] & 1 | 0) {
  $85 = HEAPU8[$scevgep115 >> 0] | 0;
  $87 = HEAPU8[$26 + $30 >> 0] | 0;
  $95 = (HEAP32[$13 + ($87 << 2) >> 2] | 0) + (HEAP32[$15 + ($85 << 2) >> 2] | 0) >> 16;
  $97 = HEAP32[$11 + ($85 << 2) >> 2] | 0;
  $99 = HEAPU8[$18 + $32 >> 0] | 0;
  HEAP8[$scevgep >> 0] = HEAP8[$7 + ((HEAP32[$9 + ($87 << 2) >> 2] | 0) + $99) >> 0] | 0;
  HEAP8[$scevgep + 1 >> 0] = HEAP8[$7 + ($95 + $99) >> 0] | 0;
  HEAP8[$scevgep + 2 >> 0] = HEAP8[$7 + ($97 + $99) >> 0] | 0;
 }
 return;
}

function _getMarkerInfo($id, $markerIndex) {
 $id = $id | 0;
 $markerIndex = $markerIndex | 0;
 var $1 = 0, $arhandle = 0, $id$addr = 0, $retval$1 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = HEAP32[3413] | 0; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $1 = HEAP32[$arhandle >> 2] | 0;
  if ((HEAP32[$1 + 44 >> 2] | 0) > ($markerIndex | 0)) {
   $spec$select = ($markerIndex | 0) < 0 ? 55208 : $1 + 48 + ($markerIndex << 8) | 0;
   _emscripten_asm_const_iiiiiiiidddddddddddddddddddddddddi(2, HEAP32[$spec$select >> 2] | 0, HEAP32[$spec$select + 4 >> 2] | 0, HEAP32[$spec$select + 8 >> 2] | 0, HEAP32[$spec$select + 12 >> 2] | 0, HEAP32[$spec$select + 16 >> 2] | 0, HEAP32[$spec$select + 20 >> 2] | 0, HEAP32[$spec$select + 24 >> 2] | 0, +(+HEAPF64[$spec$select + 32 >> 3]), +(+HEAPF64[$spec$select + 40 >> 3]), +(+HEAPF64[$spec$select + 48 >> 3]), +(+HEAPF64[$spec$select + 56 >> 3]), +(+HEAPF64[$spec$select + 64 >> 3]), +(+HEAPF64[$spec$select + 72 >> 3]), +(+HEAPF64[$spec$select + 80 >> 3]), +(+HEAPF64[$spec$select + 88 >> 3]), +(+HEAPF64[$spec$select + 96 >> 3]), +(+HEAPF64[$spec$select + 104 >> 3]), +(+HEAPF64[$spec$select + 112 >> 3]), +(+HEAPF64[$spec$select + 120 >> 3]), +(+HEAPF64[$spec$select + 128 >> 3]), +(+HEAPF64[$spec$select + 136 >> 3]), +(+HEAPF64[$spec$select + 144 >> 3]), +(+HEAPF64[$spec$select + 152 >> 3]), +(+HEAPF64[$spec$select + 160 >> 3]), +(+HEAPF64[$spec$select + 168 >> 3]), +(+HEAPF64[$spec$select + 176 >> 3]), +(+HEAPF64[$spec$select + 184 >> 3]), +(+HEAPF64[$spec$select + 192 >> 3]), +(+HEAPF64[$spec$select + 200 >> 3]), +(+HEAPF64[$spec$select + 208 >> 3]), +(+HEAPF64[$spec$select + 216 >> 3]), +(+HEAPF64[$spec$select + 224 >> 3]), HEAP32[$spec$select + 240 >> 2] | 0) | 0;
   $retval$1 = 0;
   break;
  } else {
   $retval$1 = HEAP32[3415] | 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZNSt3__29__num_getIwE17__stage2_int_loopEwiPcRS2_RjwRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKw($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$1 = 0, $10 = 0, $11 = 0, $14 = 0, $21 = 0, $29 = 0, $34 = 0, $36 = 0, $42 = 0, $43 = 0, $56 = 0, $58 = 0, label = 0;
 $10 = HEAP32[$3 >> 2] | 0;
 $11 = ($10 | 0) == ($2 | 0);
 do if ($11) {
  $14 = (HEAP32[$9 + 96 >> 2] | 0) == ($0 | 0);
  if (!$14) if ((HEAP32[$9 + 100 >> 2] | 0) != ($0 | 0)) {
   label = 5;
   break;
  }
  HEAP32[$3 >> 2] = $2 + 1;
  HEAP8[$2 >> 0] = $14 ? 43 : 45;
  HEAP32[$4 >> 2] = 0;
  $$1 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $21 = HEAP8[$6 + 11 >> 0] | 0;
  if (($0 | 0) == ($5 | 0) ? (($21 << 24 >> 24 < 0 ? HEAP32[$6 + 4 >> 2] | 0 : $21 & 255) | 0) != 0 : 0) {
   $29 = HEAP32[$8 >> 2] | 0;
   if (($29 - $7 | 0) >= 160) {
    $$1 = 0;
    break;
   }
   $34 = HEAP32[$4 >> 2] | 0;
   HEAP32[$8 >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $34;
   HEAP32[$4 >> 2] = 0;
   $$1 = 0;
   break;
  }
  $36 = $9 + 104 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $9 + ($$0$i$idx << 2) | 0;
   if (($$0$i$idx | 0) == 26) {
    $$0$lcssa$i = $36;
    break;
   }
   if ((HEAP32[$$0$i$ptr >> 2] | 0) == ($0 | 0)) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $42 = $$0$lcssa$i - $9 | 0;
  $43 = $42 >> 2;
  if (($42 | 0) > 92) $$1 = -1; else {
   switch ($1 | 0) {
   case 10:
   case 8:
    {
     if (($43 | 0) >= ($1 | 0)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($42 | 0) >= 88) {
      if ($11) {
       $$1 = -1;
       break L6;
      }
      if (($10 - $2 | 0) >= 3) {
       $$1 = -1;
       break L6;
      }
      if ((HEAP8[$10 + -1 >> 0] | 0) != 48) {
       $$1 = -1;
       break L6;
      }
      HEAP32[$4 >> 2] = 0;
      $56 = HEAP8[10736 + $43 >> 0] | 0;
      HEAP32[$3 >> 2] = $10 + 1;
      HEAP8[$10 >> 0] = $56;
      $$1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $58 = HEAP8[10736 + $43 >> 0] | 0;
   HEAP32[$3 >> 2] = $10 + 1;
   HEAP8[$10 >> 0] = $58;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 1;
   $$1 = 0;
  }
 } while (0);
 return $$1 | 0;
}

function _access_virt_barray($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$074 = 0, $$075 = 0, $$1 = 0, $14 = 0, $17 = 0, $18 = 0, $27 = 0, $30 = 0, $37 = 0, $39 = 0, $40 = 0, $43 = 0, $44 = 0, $5 = 0, $52 = 0, $53 = 0, $55 = 0, $61 = 0, $70 = 0, $storemerge = 0, label = 0;
 $5 = $3 + $2 | 0;
 if ($5 >>> 0 > (HEAP32[$1 + 4 >> 2] | 0) >>> 0) label = 4; else if ((HEAP32[$1 + 12 >> 2] | 0) >>> 0 < $3 >>> 0) label = 4; else if (!(HEAP32[$1 >> 2] | 0)) label = 4;
 if ((label | 0) == 4) {
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP32[$14 + 20 >> 2] = 22;
  FUNCTION_TABLE_vi[HEAP32[$14 >> 2] & 255]($0);
 }
 $17 = $1 + 24 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if ($18 >>> 0 > $2 >>> 0) label = 7; else if ($5 >>> 0 > ((HEAP32[$1 + 16 >> 2] | 0) + $18 | 0) >>> 0) label = 7;
 if ((label | 0) == 7) {
  if (!(HEAP32[$1 + 40 >> 2] | 0)) {
   $27 = HEAP32[$0 >> 2] | 0;
   HEAP32[$27 + 20 >> 2] = 69;
   FUNCTION_TABLE_vi[HEAP32[$27 >> 2] & 255]($0);
  }
  $30 = $1 + 36 | 0;
  if (HEAP32[$30 >> 2] | 0) {
   _do_barray_io($0, $1, 1);
   HEAP32[$30 >> 2] = 0;
  }
  if ((HEAP32[$17 >> 2] | 0) >>> 0 < $2 >>> 0) $storemerge = $2; else {
   $37 = $5 - (HEAP32[$1 + 16 >> 2] | 0) | 0;
   $storemerge = ($37 | 0) > 0 ? $37 : 0;
  }
  HEAP32[$17 >> 2] = $storemerge;
  _do_barray_io($0, $1, 0);
 }
 $39 = $1 + 28 | 0;
 $40 = HEAP32[$39 >> 2] | 0;
 L21 : do if ($40 >>> 0 < $5 >>> 0) {
  $43 = ($4 | 0) == 0;
  if ($40 >>> 0 < $2 >>> 0) if ($43) {
   $$074 = $2;
   $70 = 0;
  } else {
   $44 = HEAP32[$0 >> 2] | 0;
   HEAP32[$44 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[$44 >> 2] & 255]($0);
   $$075 = $2;
   label = 19;
  } else if ($43) {
   $$074 = $40;
   $70 = 0;
  } else {
   $$075 = $40;
   label = 19;
  }
  if ((label | 0) == 19) {
   HEAP32[$39 >> 2] = $5;
   $$074 = $$075;
   $70 = 1;
  }
  if (!(HEAP32[$1 + 32 >> 2] | 0)) {
   if ($70) break;
   $61 = HEAP32[$0 >> 2] | 0;
   HEAP32[$61 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[$61 >> 2] & 255]($0);
   break;
  }
  $52 = HEAP32[$1 + 8 >> 2] << 7;
  $53 = HEAP32[$17 >> 2] | 0;
  $55 = $5 - $53 | 0;
  $$1 = $$074 - $53 | 0;
  while (1) {
   if ($$1 >>> 0 >= $55 >>> 0) break L21;
   _jzero_far(HEAP32[(HEAP32[$1 >> 2] | 0) + ($$1 << 2) >> 2] | 0, $52);
   $$1 = $$1 + 1 | 0;
  }
 } while (0);
 if ($4 | 0) HEAP32[$1 + 36 >> 2] = 1;
 return (HEAP32[$1 >> 2] | 0) + ($2 - (HEAP32[$17 >> 2] | 0) << 2) | 0;
}

function _access_virt_sarray($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$074 = 0, $$075 = 0, $$1 = 0, $14 = 0, $17 = 0, $18 = 0, $27 = 0, $30 = 0, $37 = 0, $39 = 0, $40 = 0, $43 = 0, $44 = 0, $5 = 0, $51 = 0, $52 = 0, $54 = 0, $60 = 0, $69 = 0, $storemerge = 0, label = 0;
 $5 = $3 + $2 | 0;
 if ($5 >>> 0 > (HEAP32[$1 + 4 >> 2] | 0) >>> 0) label = 4; else if ((HEAP32[$1 + 12 >> 2] | 0) >>> 0 < $3 >>> 0) label = 4; else if (!(HEAP32[$1 >> 2] | 0)) label = 4;
 if ((label | 0) == 4) {
  $14 = HEAP32[$0 >> 2] | 0;
  HEAP32[$14 + 20 >> 2] = 22;
  FUNCTION_TABLE_vi[HEAP32[$14 >> 2] & 255]($0);
 }
 $17 = $1 + 24 | 0;
 $18 = HEAP32[$17 >> 2] | 0;
 if ($18 >>> 0 > $2 >>> 0) label = 7; else if ($5 >>> 0 > ((HEAP32[$1 + 16 >> 2] | 0) + $18 | 0) >>> 0) label = 7;
 if ((label | 0) == 7) {
  if (!(HEAP32[$1 + 40 >> 2] | 0)) {
   $27 = HEAP32[$0 >> 2] | 0;
   HEAP32[$27 + 20 >> 2] = 69;
   FUNCTION_TABLE_vi[HEAP32[$27 >> 2] & 255]($0);
  }
  $30 = $1 + 36 | 0;
  if (HEAP32[$30 >> 2] | 0) {
   _do_sarray_io($0, $1, 1);
   HEAP32[$30 >> 2] = 0;
  }
  if ((HEAP32[$17 >> 2] | 0) >>> 0 < $2 >>> 0) $storemerge = $2; else {
   $37 = $5 - (HEAP32[$1 + 16 >> 2] | 0) | 0;
   $storemerge = ($37 | 0) > 0 ? $37 : 0;
  }
  HEAP32[$17 >> 2] = $storemerge;
  _do_sarray_io($0, $1, 0);
 }
 $39 = $1 + 28 | 0;
 $40 = HEAP32[$39 >> 2] | 0;
 L21 : do if ($40 >>> 0 < $5 >>> 0) {
  $43 = ($4 | 0) == 0;
  if ($40 >>> 0 < $2 >>> 0) if ($43) {
   $$074 = $2;
   $69 = 0;
  } else {
   $44 = HEAP32[$0 >> 2] | 0;
   HEAP32[$44 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[$44 >> 2] & 255]($0);
   $$075 = $2;
   label = 19;
  } else if ($43) {
   $$074 = $40;
   $69 = 0;
  } else {
   $$075 = $40;
   label = 19;
  }
  if ((label | 0) == 19) {
   HEAP32[$39 >> 2] = $5;
   $$074 = $$075;
   $69 = 1;
  }
  if (!(HEAP32[$1 + 32 >> 2] | 0)) {
   if ($69) break;
   $60 = HEAP32[$0 >> 2] | 0;
   HEAP32[$60 + 20 >> 2] = 22;
   FUNCTION_TABLE_vi[HEAP32[$60 >> 2] & 255]($0);
   break;
  }
  $51 = HEAP32[$1 + 8 >> 2] | 0;
  $52 = HEAP32[$17 >> 2] | 0;
  $54 = $5 - $52 | 0;
  $$1 = $$074 - $52 | 0;
  while (1) {
   if ($$1 >>> 0 >= $54 >>> 0) break L21;
   _jzero_far(HEAP32[(HEAP32[$1 >> 2] | 0) + ($$1 << 2) >> 2] | 0, $51);
   $$1 = $$1 + 1 | 0;
  }
 } while (0);
 if ($4 | 0) HEAP32[$1 + 36 >> 2] = 1;
 return (HEAP32[$1 >> 2] | 0) + ($2 - (HEAP32[$17 >> 2] | 0) << 2) | 0;
}

function __ZNSt3__29__num_getIcE17__stage2_int_loopEciPcRS2_RjcRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjRSD_PKc($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0$i$idx = 0, $$0$i$ptr = 0, $$0$lcssa$i = 0, $$1 = 0, $10 = 0, $11 = 0, $14 = 0, $21 = 0, $29 = 0, $34 = 0, $36 = 0, $42 = 0, $55 = 0, $57 = 0, label = 0;
 $10 = HEAP32[$3 >> 2] | 0;
 $11 = ($10 | 0) == ($2 | 0);
 do if ($11) {
  $14 = (HEAP8[$9 + 24 >> 0] | 0) == $0 << 24 >> 24;
  if (!$14) if ((HEAP8[$9 + 25 >> 0] | 0) != $0 << 24 >> 24) {
   label = 5;
   break;
  }
  HEAP32[$3 >> 2] = $2 + 1;
  HEAP8[$2 >> 0] = $14 ? 43 : 45;
  HEAP32[$4 >> 2] = 0;
  $$1 = 0;
 } else label = 5; while (0);
 L6 : do if ((label | 0) == 5) {
  $21 = HEAP8[$6 + 11 >> 0] | 0;
  if ($0 << 24 >> 24 == $5 << 24 >> 24 ? (($21 << 24 >> 24 < 0 ? HEAP32[$6 + 4 >> 2] | 0 : $21 & 255) | 0) != 0 : 0) {
   $29 = HEAP32[$8 >> 2] | 0;
   if (($29 - $7 | 0) >= 160) {
    $$1 = 0;
    break;
   }
   $34 = HEAP32[$4 >> 2] | 0;
   HEAP32[$8 >> 2] = $29 + 4;
   HEAP32[$29 >> 2] = $34;
   HEAP32[$4 >> 2] = 0;
   $$1 = 0;
   break;
  }
  $36 = $9 + 26 | 0;
  $$0$i$idx = 0;
  while (1) {
   $$0$i$ptr = $9 + $$0$i$idx | 0;
   if (($$0$i$idx | 0) == 26) {
    $$0$lcssa$i = $36;
    break;
   }
   if ((HEAP8[$$0$i$ptr >> 0] | 0) == $0 << 24 >> 24) {
    $$0$lcssa$i = $$0$i$ptr;
    break;
   } else $$0$i$idx = $$0$i$idx + 1 | 0;
  }
  $42 = $$0$lcssa$i - $9 | 0;
  if (($42 | 0) > 23) $$1 = -1; else {
   switch ($1 | 0) {
   case 10:
   case 8:
    {
     if (($42 | 0) >= ($1 | 0)) {
      $$1 = -1;
      break L6;
     }
     break;
    }
   case 16:
    {
     if (($42 | 0) >= 22) {
      if ($11) {
       $$1 = -1;
       break L6;
      }
      if (($10 - $2 | 0) >= 3) {
       $$1 = -1;
       break L6;
      }
      if ((HEAP8[$10 + -1 >> 0] | 0) != 48) {
       $$1 = -1;
       break L6;
      }
      HEAP32[$4 >> 2] = 0;
      $55 = HEAP8[10736 + $42 >> 0] | 0;
      HEAP32[$3 >> 2] = $10 + 1;
      HEAP8[$10 >> 0] = $55;
      $$1 = 0;
      break L6;
     }
     break;
    }
   default:
    {}
   }
   $57 = HEAP8[10736 + $42 >> 0] | 0;
   HEAP32[$3 >> 2] = $10 + 1;
   HEAP8[$10 >> 0] = $57;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 1;
   $$1 = 0;
  }
 } while (0);
 return $$1 | 0;
}

function __ZN6vision25DoGScaleInvariantDetector6detectEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $15 = 0, $19 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 if ((__ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv($1) | 0) <= 0) {
  $10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 20798) | 0, 20520) | 0, 33528) | 0, 147) | 0, 33535) | 0, 20847) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $10 + (HEAP32[(HEAP32[$10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 28 >> 2] & 63]($15, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($10, $19) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($10) | 0;
  _abort();
 }
 __ZN6vision11ScopedTimerC2EPKc($2, 21782);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision10DoGPyramid7computeEPKNS_25GaussianScaleSpacePyramidE($0 + 32 | 0, $1);
 __ZN6vision11ScopedTimerD2Ev($2);
 __ZN6vision11ScopedTimerC2EPKc($2, 21794);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision25DoGScaleInvariantDetector15extractFeaturesEPKNS_25GaussianScaleSpacePyramidEPKNS_10DoGPyramidE($0, $1, $0 + 32 | 0);
 __ZN6vision11ScopedTimerD2Ev($2);
 __ZN6vision11ScopedTimerC2EPKc($2, 21814);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision25DoGScaleInvariantDetector21findSubpixelLocationsEPKNS_25GaussianScaleSpacePyramidE($0, $1);
 __ZN6vision11ScopedTimerD2Ev($2);
 __ZN6vision11ScopedTimerC2EPKc($2, 21823);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision25DoGScaleInvariantDetector13pruneFeaturesEv($0);
 __ZN6vision11ScopedTimerD2Ev($2);
 __ZN6vision11ScopedTimerC2EPKc($2, 21837);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision25DoGScaleInvariantDetector23findFeatureOrientationsEPKNS_25GaussianScaleSpacePyramidE($0, $1);
 __ZN6vision11ScopedTimerD2Ev($2);
 STACKTOP = sp;
 return;
}

function _process_data_context_main($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$pre$phi52Z2D = 0, $$pre$phi54Z2D = 0, $$pre$phi56Z2D = 0, $$pre$phiZ2D = 0, $19 = 0, $22 = 0, $32 = 0, $33 = 0, $5 = 0, $52 = 0, $6 = 0, $66 = 0, label = 0;
 $5 = HEAP32[$0 + 424 >> 2] | 0;
 $6 = $5 + 48 | 0;
 if (!(HEAP32[$6 >> 2] | 0)) {
  if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 + 428 >> 2] | 0) + 12 >> 2] & 63]($0, HEAP32[$5 + 56 + (HEAP32[$5 + 64 >> 2] << 2) >> 2] | 0) | 0) {
   HEAP32[$6 >> 2] = 1;
   $19 = $5 + 76 | 0;
   HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
   label = 4;
  }
 } else label = 4;
 L4 : do if ((label | 0) == 4) {
  $22 = $5 + 68 | 0;
  switch (HEAP32[$22 >> 2] | 0) {
  case 2:
   {
    $32 = $5 + 52 | 0;
    $33 = $5 + 72 | 0;
    FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$0 + 432 >> 2] | 0) + 4 >> 2] & 7]($0, HEAP32[$5 + 56 + (HEAP32[$5 + 64 >> 2] << 2) >> 2] | 0, $32, HEAP32[$33 >> 2] | 0, $1, $2, $3);
    if ((HEAP32[$32 >> 2] | 0) >>> 0 < (HEAP32[$33 >> 2] | 0) >>> 0) break L4;
    HEAP32[$22 >> 2] = 0;
    if ((HEAP32[$2 >> 2] | 0) >>> 0 < $3 >>> 0) {
     $$pre$phi52Z2D = $33;
     $$pre$phiZ2D = $32;
     label = 9;
    } else break L4;
    break;
   }
  case 0:
   {
    $$pre$phi52Z2D = $5 + 72 | 0;
    $$pre$phiZ2D = $5 + 52 | 0;
    label = 9;
    break;
   }
  case 1:
   {
    $$pre$phi54Z2D = $5 + 52 | 0;
    $$pre$phi56Z2D = $5 + 72 | 0;
    break;
   }
  default:
   break L4;
  }
  if ((label | 0) == 9) {
   HEAP32[$$pre$phiZ2D >> 2] = 0;
   HEAP32[$$pre$phi52Z2D >> 2] = (HEAP32[$0 + 316 >> 2] | 0) + -1;
   if ((HEAP32[$5 + 76 >> 2] | 0) == (HEAP32[$0 + 320 >> 2] | 0)) _set_bottom_pointers($0);
   HEAP32[$22 >> 2] = 1;
   $$pre$phi54Z2D = $$pre$phiZ2D;
   $$pre$phi56Z2D = $$pre$phi52Z2D;
  }
  $52 = $5 + 64 | 0;
  FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$0 + 432 >> 2] | 0) + 4 >> 2] & 7]($0, HEAP32[$5 + 56 + (HEAP32[$52 >> 2] << 2) >> 2] | 0, $$pre$phi54Z2D, HEAP32[$$pre$phi56Z2D >> 2] | 0, $1, $2, $3);
  if ((HEAP32[$$pre$phi54Z2D >> 2] | 0) >>> 0 >= (HEAP32[$$pre$phi56Z2D >> 2] | 0) >>> 0) {
   if ((HEAP32[$5 + 76 >> 2] | 0) == 1) _set_wraparound_pointers($0);
   HEAP32[$52 >> 2] = HEAP32[$52 >> 2] ^ 1;
   HEAP32[$6 >> 2] = 0;
   $66 = HEAP32[$0 + 316 >> 2] | 0;
   HEAP32[$$pre$phi54Z2D >> 2] = $66 + 1;
   HEAP32[$$pre$phi56Z2D >> 2] = $66 + 2;
   HEAP32[$22 >> 2] = 2;
  }
 } while (0);
 return;
}

function __ZNK6vision25GaussianScaleSpacePyramid3getEmm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $12 = 0, $17 = 0, $21 = 0, $23 = 0, $3 = 0, $30 = 0, $35 = 0, $39 = 0, $41 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if ((HEAP32[$0 + 16 >> 2] | 0) >>> 0 <= $1 >>> 0) {
  $12 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32473) | 0, 32320) | 0, 33528) | 0, 218) | 0, 33535) | 0, 20676) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $12 + (HEAP32[(HEAP32[$12 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $17 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $21 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$17 >> 2] | 0) + 28 >> 2] & 63]($17, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($12, $21) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($12) | 0;
  _abort();
 }
 $23 = HEAP32[$0 + 20 >> 2] | 0;
 if ($23 >>> 0 > $2 >>> 0) {
  $41 = (Math_imul($23, $1) | 0) + $2 | 0;
  STACKTOP = sp;
  return (HEAP32[$0 + 4 >> 2] | 0) + ($41 << 5) | 0;
 } else {
  $30 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32617) | 0, 32320) | 0, 33528) | 0, 219) | 0, 33535) | 0, 20696) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $30 + (HEAP32[(HEAP32[$30 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $35 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $39 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$35 >> 2] | 0) + 28 >> 2] & 63]($35, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($30, $39) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($30) | 0;
  _abort();
 }
 return 0;
}

function _arParamChangeSize($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0103 = 0, $12 = 0.0, $27 = 0, $7 = 0.0, label = 0;
 $7 = +($1 | 0) / +(HEAP32[$0 >> 2] | 0);
 $12 = +($2 | 0) / +(HEAP32[$0 + 4 >> 2] | 0);
 HEAP32[$3 >> 2] = $1;
 HEAP32[$3 + 4 >> 2] = $2;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 4) break;
  HEAPF64[$3 + 8 + ($$0 << 3) >> 3] = $7 * +HEAPF64[$0 + 8 + ($$0 << 3) >> 3];
  HEAPF64[$3 + 40 + ($$0 << 3) >> 3] = $12 * +HEAPF64[$0 + 40 + ($$0 << 3) >> 3];
  HEAPF64[$3 + 72 + ($$0 << 3) >> 3] = +HEAPF64[$0 + 72 + ($$0 << 3) >> 3];
  $$0 = $$0 + 1 | 0;
 }
 $27 = HEAP32[$0 + 176 >> 2] | 0;
 switch ($27 | 0) {
 case 4:
  {
   HEAPF64[$3 + 104 >> 3] = +HEAPF64[$0 + 104 >> 3];
   HEAPF64[$3 + 112 >> 3] = +HEAPF64[$0 + 112 >> 3];
   HEAPF64[$3 + 120 >> 3] = +HEAPF64[$0 + 120 >> 3];
   HEAPF64[$3 + 128 >> 3] = +HEAPF64[$0 + 128 >> 3];
   HEAPF64[$3 + 136 >> 3] = $7 * +HEAPF64[$0 + 136 >> 3];
   HEAPF64[$3 + 144 >> 3] = $12 * +HEAPF64[$0 + 144 >> 3];
   HEAPF64[$3 + 152 >> 3] = $7 * +HEAPF64[$0 + 152 >> 3];
   HEAPF64[$3 + 160 >> 3] = $12 * +HEAPF64[$0 + 160 >> 3];
   HEAPF64[$3 + 168 >> 3] = +HEAPF64[$0 + 168 >> 3];
   label = 9;
   break;
  }
 case 3:
  {
   HEAPF64[$3 + 104 >> 3] = $7 * +HEAPF64[$0 + 104 >> 3];
   HEAPF64[$3 + 112 >> 3] = $12 * +HEAPF64[$0 + 112 >> 3];
   HEAPF64[$3 + 120 >> 3] = +HEAPF64[$0 + 120 >> 3];
   HEAPF64[$3 + 128 >> 3] = +HEAPF64[$0 + 128 >> 3];
   HEAPF64[$3 + 136 >> 3] = +HEAPF64[$0 + 136 >> 3] / ($7 * $12);
   HEAPF64[$3 + 144 >> 3] = +HEAPF64[$0 + 144 >> 3] / ($12 * ($7 * $7 * $12));
   label = 9;
   break;
  }
 case 2:
  {
   HEAPF64[$3 + 104 >> 3] = $7 * +HEAPF64[$0 + 104 >> 3];
   HEAPF64[$3 + 112 >> 3] = $12 * +HEAPF64[$0 + 112 >> 3];
   HEAPF64[$3 + 120 >> 3] = +HEAPF64[$0 + 120 >> 3];
   HEAPF64[$3 + 128 >> 3] = +HEAPF64[$0 + 128 >> 3] / ($7 * $12);
   HEAPF64[$3 + 136 >> 3] = +HEAPF64[$0 + 136 >> 3] / ($12 * ($7 * $7 * $12));
   label = 9;
   break;
  }
 case 1:
  {
   HEAPF64[$3 + 104 >> 3] = $7 * +HEAPF64[$0 + 104 >> 3];
   HEAPF64[$3 + 112 >> 3] = $12 * +HEAPF64[$0 + 112 >> 3];
   HEAPF64[$3 + 120 >> 3] = +HEAPF64[$0 + 120 >> 3];
   HEAPF64[$3 + 128 >> 3] = +HEAPF64[$0 + 128 >> 3] / ($7 * $12);
   label = 9;
   break;
  }
 default:
  $$0103 = -1;
 }
 if ((label | 0) == 9) {
  HEAP32[$3 + 176 >> 2] = $27;
  $$0103 = 0;
 }
 return $$0103 | 0;
}

function __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev($this) {
 $this = $this | 0;
 __embind_register_void(__ZN10emscripten8internal6TypeIDIvE3getEv() | 0, 51068);
 __embind_register_bool(__ZN10emscripten8internal6TypeIDIbE3getEv() | 0, 51073, 1, 1, 0);
 __ZN12_GLOBAL__N_116register_integerIcEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIaEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIhEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIsEEvPKc();
 __ZN12_GLOBAL__N_116register_integerItEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIiEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIjEEvPKc();
 __ZN12_GLOBAL__N_116register_integerIlEEvPKc();
 __ZN12_GLOBAL__N_116register_integerImEEvPKc();
 __ZN12_GLOBAL__N_114register_floatIfEEvPKc();
 __ZN12_GLOBAL__N_114register_floatIdEEvPKc();
 __embind_register_std_string(__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() | 0, 50451);
 __embind_register_std_string(__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() | 0, 44861);
 __embind_register_std_wstring(__ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() | 0, 4, 44894);
 __embind_register_emval(__ZN10emscripten8internal6TypeIDINS_3valEE3getEv() | 0, 44907);
 __ZN12_GLOBAL__N_120register_memory_viewIcEEvPKc();
 __ZN12_GLOBAL__N_120register_memory_viewIaEEvPKc(44923);
 __ZN12_GLOBAL__N_120register_memory_viewIhEEvPKc(44960);
 __ZN12_GLOBAL__N_120register_memory_viewIsEEvPKc(44999);
 __ZN12_GLOBAL__N_120register_memory_viewItEEvPKc(45030);
 __ZN12_GLOBAL__N_120register_memory_viewIiEEvPKc(45070);
 __ZN12_GLOBAL__N_120register_memory_viewIjEEvPKc(45099);
 __ZN12_GLOBAL__N_120register_memory_viewIlEEvPKc();
 __ZN12_GLOBAL__N_120register_memory_viewImEEvPKc();
 __ZN12_GLOBAL__N_120register_memory_viewIaEEvPKc(45137);
 __ZN12_GLOBAL__N_120register_memory_viewIhEEvPKc(45169);
 __ZN12_GLOBAL__N_120register_memory_viewIsEEvPKc(45202);
 __ZN12_GLOBAL__N_120register_memory_viewItEEvPKc(45235);
 __ZN12_GLOBAL__N_120register_memory_viewIiEEvPKc(45269);
 __ZN12_GLOBAL__N_120register_memory_viewIjEEvPKc(45302);
 __ZN12_GLOBAL__N_120register_memory_viewIfEEvPKc();
 __ZN12_GLOBAL__N_120register_memory_viewIdEEvPKc();
 __ZN12_GLOBAL__N_120register_memory_viewIeEEvPKc();
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE23__append_forward_unsafeIPKcEERS7_T_SC_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$040 = 0, $15 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $35 = 0, $36 = 0, $4 = 0, $44 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $scevgep5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = $1;
 $4 = sp;
 $5 = $0 + 11 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) {
  $35 = HEAP32[$0 + 4 >> 2] | 0;
  $36 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $35 = $6 & 255;
  $36 = 10;
 }
 $15 = $2 - $3 | 0;
 do if ($15 | 0) {
  if ($7) {
   $22 = HEAP32[$0 >> 2] | 0;
   $23 = HEAP32[$0 + 4 >> 2] | 0;
  } else {
   $22 = $0;
   $23 = $6 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($1, $22, $22 + $23 | 0) | 0) {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($4, $1, $2);
   $26 = HEAP8[$4 + 11 >> 0] | 0;
   $27 = $26 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($0, $27 ? HEAP32[$4 >> 2] | 0 : $4, $27 ? HEAP32[$4 + 4 >> 2] | 0 : $26 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   break;
  }
  if (($36 - $35 | 0) >>> 0 < $15 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm($0, $36, $35 + $15 - $36 | 0, $35, $35, 0);
  if ((HEAP8[$5 >> 0] | 0) < 0) $44 = HEAP32[$0 >> 2] | 0; else $44 = $0;
  $scevgep5 = $2 + ($35 - $3) | 0;
  $$0 = $44 + $35 | 0;
  $$040 = $1;
  while (1) {
   if (($$040 | 0) == ($2 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc($$0, $$040);
   $$0 = $$0 + 1 | 0;
   $$040 = $$040 + 1 | 0;
  }
  HEAP8[$4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($44 + $scevgep5 | 0, $4);
  $49 = $35 + $15 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $49;
   break;
  } else {
   HEAP8[$5 >> 0] = $49;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp;
 $5 = sp + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp + 4 | 0;
 $8 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[46972] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[46973] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[46974] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[46975] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[46976] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[46977] | 0;
 $10 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 50896, 1, HEAP32[$10 >> 2] | 0);
 $$lobit = (HEAP32[$10 >> 2] | 0) >>> 9 & 1;
 $14 = $$lobit + 13 | 0;
 $15 = _llvm_stacksave() | 0;
 $$alloca_mul = $14;
 $16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $17 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $19 = $16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($16, $14, $17, $5, $$byval_copy) | 0) | 0;
 $20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($16, $19, $2) | 0;
 $$alloca_mul6 = ($$lobit << 1 | 24) + -1 << 2;
 $24 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($16, $20, $19, $24, $6, $7, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 $26 = HEAP32[$6 >> 2] | 0;
 $27 = HEAP32[$7 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $28 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $24, $26, $27, $2, $3) | 0;
 _llvm_stackrestore($15 | 0);
 STACKTOP = sp;
 return $28 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp;
 $5 = sp + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp + 4 | 0;
 $8 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[46972] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[46973] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[46974] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[46975] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[46976] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[46977] | 0;
 $10 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 50896, 1, HEAP32[$10 >> 2] | 0);
 $$lobit = (HEAP32[$10 >> 2] | 0) >>> 9 & 1;
 $14 = $$lobit + 13 | 0;
 $15 = _llvm_stacksave() | 0;
 $$alloca_mul = $14;
 $16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $17 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $19 = $16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($16, $14, $17, $5, $$byval_copy) | 0) | 0;
 $20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($16, $19, $2) | 0;
 $$alloca_mul6 = ($$lobit << 1 | 24) + -1 | 0;
 $24 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($16, $20, $19, $24, $6, $7, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 $26 = HEAP32[$6 >> 2] | 0;
 $27 = HEAP32[$7 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $28 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $24, $26, $27, $2, $3) | 0;
 _llvm_stackrestore($15 | 0);
 STACKTOP = sp;
 return $28 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_dot_suffixINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$0$i$i$i16 = 0, $$014 = 0, $10 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp + 24 | 0;
 $4 = sp + 12 | 0;
 $5 = sp;
 if (($0 | 0) == ($1 | 0)) $$014 = $0; else if ((HEAP8[$0 >> 0] | 0) == 46) {
  $10 = $2 + 4 | 0;
  if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$10 >> 2] | 0)) $$014 = $0; else {
   HEAP32[$5 >> 2] = 0;
   HEAP32[$5 + 4 >> 2] = 0;
   HEAP32[$5 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($5, $0, $1);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($5, 0, 49626) | 0;
   HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
   HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
   HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
   $$0$i$i$i = 0;
   while (1) {
    if (($$0$i$i$i | 0) == 3) break;
    HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
    $$0$i$i$i = $$0$i$i$i + 1 | 0;
   }
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($4, 49629) | 0;
   HEAP32[$3 >> 2] = HEAP32[$4 >> 2];
   HEAP32[$3 + 4 >> 2] = HEAP32[$4 + 4 >> 2];
   HEAP32[$3 + 8 >> 2] = HEAP32[$4 + 8 >> 2];
   $$0$i$i$i16 = 0;
   while (1) {
    if (($$0$i$i$i16 | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i$i16 << 2) >> 2] = 0;
    $$0$i$i$i16 = $$0$i$i$i16 + 1 | 0;
   }
   $22 = HEAP8[$3 + 11 >> 0] | 0;
   $23 = $22 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$10 >> 2] | 0) + -24 | 0, $23 ? HEAP32[$3 >> 2] | 0 : $3, $23 ? HEAP32[$3 + 4 >> 2] | 0 : $22 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
   $$014 = $1;
  }
 } else $$014 = $0;
 STACKTOP = sp;
 return $$014 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp;
 $5 = sp + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp + 4 | 0;
 $8 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[46972] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[46973] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[46974] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[46975] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[46976] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[46977] | 0;
 $10 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 50896, 0, HEAP32[$10 >> 2] | 0);
 $$lobit = (HEAP32[$10 >> 2] | 0) >>> 9 & 1;
 $14 = $$lobit | 12;
 $15 = _llvm_stacksave() | 0;
 $$alloca_mul = $14;
 $16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $17 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $19 = $16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($16, $14, $17, $5, $$byval_copy) | 0) | 0;
 $20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($16, $19, $2) | 0;
 $$alloca_mul6 = ($$lobit << 1 | 21) << 2;
 $23 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($16, $20, $19, $23, $6, $7, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 $25 = HEAP32[$6 >> 2] | 0;
 $26 = HEAP32[$7 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $27 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $23, $25, $26, $2, $3) | 0;
 _llvm_stackrestore($15 | 0);
 STACKTOP = sp;
 return $27 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp;
 $5 = sp + 16 | 0;
 $6 = sp + 12 | 0;
 $7 = sp + 4 | 0;
 $8 = sp + 8 | 0;
 HEAP8[$5 >> 0] = HEAP8[46972] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[46973] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[46974] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[46975] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[46976] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[46977] | 0;
 $10 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($5 + 1 | 0, 50896, 0, HEAP32[$10 >> 2] | 0);
 $$lobit = (HEAP32[$10 >> 2] | 0) >>> 9 & 1;
 $14 = $$lobit | 12;
 $15 = _llvm_stacksave() | 0;
 $$alloca_mul = $14;
 $16 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $17 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $19 = $16 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($16, $14, $17, $5, $$byval_copy) | 0) | 0;
 $20 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($16, $19, $2) | 0;
 $$alloca_mul6 = $$lobit << 1 | 21;
 $23 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($16, $20, $19, $23, $6, $7, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 $25 = HEAP32[$6 >> 2] | 0;
 $26 = HEAP32[$7 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $27 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $23, $25, $26, $2, $3) | 0;
 _llvm_stackrestore($15 | 0);
 STACKTOP = sp;
 return $27 | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid14effectiveSigmaEmf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 var $10 = 0, $15 = 0, $19 = 0, $29 = 0, $3 = 0, $34 = 0, $38 = 0, $44 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if (!($2 >= 0.0)) {
  $10 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32560) | 0, 32320) | 0, 33528) | 0, 232) | 0, 33535) | 0, 32594) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $10 + (HEAP32[(HEAP32[$10 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $15 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $19 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$15 >> 2] | 0) + 28 >> 2] & 63]($15, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($10, $19) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($10) | 0;
  _abort();
 }
 if (+(HEAP32[$0 + 20 >> 2] | 0) > $2) {
  $44 = +Math_pow(+(+HEAPF32[$0 + 24 >> 2]), +$2) * +(1 << $1 | 0);
  STACKTOP = sp;
  return +$44;
 } else {
  $29 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 32617) | 0, 32320) | 0, 33528) | 0, 233) | 0, 33535) | 0, 32668) | 0;
  __ZNKSt3__28ios_base6getlocEv($3, $29 + (HEAP32[(HEAP32[$29 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $34 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57884) | 0;
  $38 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$34 >> 2] | 0) + 28 >> 2] & 63]($34, 10) | 0;
  __ZNSt3__26localeD2Ev($3);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($29, $38) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($29) | 0;
  _abort();
 }
 return +(0.0);
}

function _ar2GenImageLayer2($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 var $$0 = 0, $$087 = 0, $$089 = 0, $$090 = 0, $$091 = 0, $$092 = 0, $$095 = 0, $$096 = 0, $$1 = 0, $$188 = 0, $$197 = 0, $10 = 0, $15 = 0, $16 = 0, $2 = 0, $22 = 0, $26 = 0.0, $29 = 0, $30 = 0, $34 = 0, $35 = 0, $39 = 0.0, $42 = 0, $43 = 0, $47 = 0, $48 = 0, $59 = 0, $6 = 0, $7 = 0.0, $9 = 0, $spec$select = 0, $spec$select98 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = $0 + 4 | 0;
 $6 = $0 + 12 | 0;
 $7 = +HEAPF32[$6 >> 2];
 $9 = _lroundf(+(HEAP32[$2 >> 2] | 0) * $1 / $7) | 0;
 $10 = $0 + 8 | 0;
 $15 = _lroundf(+(HEAP32[$10 >> 2] | 0) * $1 / $7) | 0;
 $16 = _malloc(16) | 0;
 if (!$16) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 }
 HEAP32[$16 + 4 >> 2] = $9;
 HEAP32[$16 + 8 >> 2] = $15;
 HEAPF32[$16 + 12 >> 2] = $1;
 $22 = _malloc(Math_imul($15, $9) | 0) | 0;
 HEAP32[$16 >> 2] = $22;
 if (!$22) {
  _arLog(0, 3, 20454, sp + 8 | 0);
  _exit(1);
 }
 $$091 = 0;
 $$096 = $22;
 while (1) {
  if (($$091 | 0) >= ($15 | 0)) break;
  $26 = +HEAPF32[$6 >> 2];
  $29 = _lroundf($26 * +($$091 | 0) / $1) | 0;
  $30 = $$091 + 1 | 0;
  $34 = _lroundf($26 * +($30 | 0) / $1) | 0;
  $35 = HEAP32[$10 >> 2] | 0;
  $spec$select = ($34 | 0) > ($35 | 0) ? $35 : $34;
  $$092 = 0;
  $$197 = $$096;
  while (1) {
   if (($$092 | 0) >= ($9 | 0)) break;
   $39 = +HEAPF32[$6 >> 2];
   $42 = _lroundf($39 * +($$092 | 0) / $1) | 0;
   $43 = $$092 + 1 | 0;
   $47 = _lroundf($39 * +($43 | 0) / $1) | 0;
   $48 = HEAP32[$2 >> 2] | 0;
   $spec$select98 = ($47 | 0) > ($48 | 0) ? $48 : $47;
   $$0 = 0;
   $$087 = 0;
   $$089 = $29;
   while (1) {
    if (($$089 | 0) >= ($spec$select | 0)) break;
    $$090 = $42;
    $$095 = (HEAP32[$0 >> 2] | 0) + ((Math_imul($$089, $48) | 0) + $42) | 0;
    $$1 = $$0;
    $$188 = $$087;
    while (1) {
     if (($$090 | 0) >= ($spec$select98 | 0)) break;
     $59 = $$1 + (HEAPU8[$$095 >> 0] | 0) | 0;
     $$090 = $$090 + 1 | 0;
     $$095 = $$095 + 1 | 0;
     $$1 = $59;
     $$188 = $$188 + 1 | 0;
    }
    $$0 = $$1;
    $$087 = $$188;
    $$089 = $$089 + 1 | 0;
   }
   HEAP8[$$197 >> 0] = ($$0 | 0) / ($$087 | 0) | 0;
   $$092 = $43;
   $$197 = $$197 + 1 | 0;
  }
  $$091 = $30;
  $$096 = $$197;
 }
 STACKTOP = sp;
 return $16 | 0;
}

function _format_message($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$042 = 0, $$042$in = 0, $$043 = 0, $$1 = 0, $13 = 0, $16 = 0, $2 = 0, $28 = 0, $36 = 0, $38 = 0, $4 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $48 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0 >> 2] | 0;
 $4 = HEAP32[$2 + 20 >> 2] | 0;
 if (($4 | 0) > 0) if (($4 | 0) > (HEAP32[$2 + 116 >> 2] | 0)) label = 4; else {
  $$042$in = (HEAP32[$2 + 112 >> 2] | 0) + ($4 << 2) | 0;
  label = 8;
 } else label = 4;
 if ((label | 0) == 4) {
  $13 = HEAP32[$2 + 120 >> 2] | 0;
  if (!$13) label = 9; else {
   $16 = HEAP32[$2 + 124 >> 2] | 0;
   if (($4 | 0) < ($16 | 0)) label = 9; else if (($4 | 0) > (HEAP32[$2 + 128 >> 2] | 0)) label = 9; else {
    $$042$in = $13 + ($4 - $16 << 2) | 0;
    label = 8;
   }
  }
 }
 if ((label | 0) == 8) {
  $$042 = HEAP32[$$042$in >> 2] | 0;
  if (!$$042) label = 9; else $$1 = $$042;
 }
 if ((label | 0) == 9) {
  HEAP32[$2 + 24 >> 2] = $4;
  $$1 = HEAP32[HEAP32[$2 + 112 >> 2] >> 2] | 0;
 }
 $$043 = $$1;
 L14 : while (1) {
  $28 = $$043 + 1 | 0;
  switch (HEAP8[$$043 >> 0] | 0) {
  case 0:
   {
    label = 14;
    break L14;
    break;
   }
  case 37:
   {
    label = 12;
    break L14;
    break;
   }
  default:
   $$043 = $28;
  }
 }
 if ((label | 0) == 12) if ((HEAP8[$28 >> 0] | 0) == 115) {
  HEAP32[$vararg_buffer >> 2] = $2 + 24;
  _sprintf($1, $$1, $vararg_buffer) | 0;
 } else label = 14;
 if ((label | 0) == 14) {
  $36 = HEAP32[$2 + 28 >> 2] | 0;
  $38 = HEAP32[$2 + 32 >> 2] | 0;
  $40 = HEAP32[$2 + 36 >> 2] | 0;
  $42 = HEAP32[$2 + 40 >> 2] | 0;
  $44 = HEAP32[$2 + 44 >> 2] | 0;
  $46 = HEAP32[$2 + 48 >> 2] | 0;
  $48 = HEAP32[$2 + 52 >> 2] | 0;
  HEAP32[$vararg_buffer1 >> 2] = HEAP32[$2 + 24 >> 2];
  HEAP32[$vararg_buffer1 + 4 >> 2] = $36;
  HEAP32[$vararg_buffer1 + 8 >> 2] = $38;
  HEAP32[$vararg_buffer1 + 12 >> 2] = $40;
  HEAP32[$vararg_buffer1 + 16 >> 2] = $42;
  HEAP32[$vararg_buffer1 + 20 >> 2] = $44;
  HEAP32[$vararg_buffer1 + 24 >> 2] = $46;
  HEAP32[$vararg_buffer1 + 28 >> 2] = $48;
  _sprintf($1, $$1, $vararg_buffer1) | 0;
 }
 STACKTOP = sp;
 return;
}

function ___stdio_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $12 = 0, $13 = 0, $17 = 0, $20 = 0, $25 = 0, $26 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $44 = 0, $5 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer3 = sp + 32 | 0;
 $vararg_buffer = sp + 16 | 0;
 $3 = sp;
 $4 = $0 + 28 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 HEAP32[$3 >> 2] = $5;
 $7 = $0 + 20 | 0;
 $9 = (HEAP32[$7 >> 2] | 0) - $5 | 0;
 HEAP32[$3 + 4 >> 2] = $9;
 HEAP32[$3 + 8 >> 2] = $1;
 HEAP32[$3 + 12 >> 2] = $2;
 $12 = $9 + $2 | 0;
 $13 = $0 + 60 | 0;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$13 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = $3;
 HEAP32[$vararg_buffer + 8 >> 2] = 2;
 $17 = ___syscall_ret(___syscall146(146, $vararg_buffer | 0) | 0) | 0;
 L1 : do if (($12 | 0) == ($17 | 0)) label = 3; else {
  $$04756 = 2;
  $$04855 = $12;
  $$04954 = $3;
  $26 = $17;
  while (1) {
   if (($26 | 0) < 0) break;
   $$04855 = $$04855 - $26 | 0;
   $37 = HEAP32[$$04954 + 4 >> 2] | 0;
   $38 = $26 >>> 0 > $37 >>> 0;
   $$150 = $38 ? $$04954 + 8 | 0 : $$04954;
   $$1 = $$04756 + ($38 << 31 >> 31) | 0;
   $$0 = $26 - ($38 ? $37 : 0) | 0;
   HEAP32[$$150 >> 2] = (HEAP32[$$150 >> 2] | 0) + $$0;
   $44 = $$150 + 4 | 0;
   HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) - $$0;
   HEAP32[$vararg_buffer3 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$vararg_buffer3 + 4 >> 2] = $$150;
   HEAP32[$vararg_buffer3 + 8 >> 2] = $$1;
   $26 = ___syscall_ret(___syscall146(146, $vararg_buffer3 | 0) | 0) | 0;
   if (($$04855 | 0) == ($26 | 0)) {
    label = 3;
    break L1;
   } else {
    $$04756 = $$1;
    $$04954 = $$150;
   }
  }
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$7 >> 2] = 0;
  HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | 32;
  if (($$04756 | 0) == 2) $$051 = 0; else $$051 = $2 - (HEAP32[$$04954 + 4 >> 2] | 0) | 0;
 } while (0);
 if ((label | 0) == 3) {
  $20 = HEAP32[$0 + 44 >> 2] | 0;
  HEAP32[$0 + 16 >> 2] = $20 + (HEAP32[$0 + 48 >> 2] | 0);
  $25 = $20;
  HEAP32[$4 >> 2] = $25;
  HEAP32[$7 >> 2] = $25;
  $$051 = $2;
 }
 STACKTOP = sp;
 return $$051 | 0;
}

function _PCA($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$075 = 0, $$077 = 0, $$078 = 0, $$080 = 0, $$1 = 0, $$176 = 0, $$179 = 0, $$181 = 0, $$2 = 0, $$3 = 0, $20 = 0, $27 = 0, $4 = 0, $6 = 0, $8 = 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = HEAP32[$0 + 8 >> 2] | 0;
 $8 = ($6 | 0) < ($4 | 0) ? $6 : $4;
 L1 : do if (($4 | 0) < 2 | ($6 | 0) < 2) $$077 = -1; else if ((HEAP32[$1 + 8 >> 2] | 0) == ($6 | 0)) if ((HEAP32[$1 + 4 >> 2] | 0) == ($8 | 0)) if ((HEAP32[$2 + 4 >> 2] | 0) == ($8 | 0)) {
  $20 = _arMatrixAlloc($8, $8) | 0;
  if ((HEAP32[$20 + 4 >> 2] | 0) == ($8 | 0)) if ((HEAP32[$20 + 8 >> 2] | 0) == ($8 | 0)) {
   $27 = ($4 | 0) < ($6 | 0);
   if ($27) {
    if ((_x_by_xt($0, $20) | 0) < 0) {
     _arMatrixFree($20) | 0;
     $$077 = -1;
     break;
    }
   } else if ((_xt_by_x($0, $20) | 0) < 0) {
    _arMatrixFree($20) | 0;
    $$077 = -1;
    break;
   }
   if ((_QRM($20, $2) | 0) < 0) {
    _arMatrixFree($20) | 0;
    $$077 = -1;
    break;
   }
   L18 : do if ($27) {
    if ((_EV_create($0, $20, $1, $2) | 0) < 0) {
     _arMatrixFree($20) | 0;
     $$077 = -1;
     break L1;
    }
   } else {
    $$075 = 0;
    $$078 = HEAP32[$20 >> 2] | 0;
    $$080 = HEAP32[$1 >> 2] | 0;
    while (1) {
     if (($$075 | 0) >= ($8 | 0)) break;
     if (+HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$075 << 3) >> 3] < 1.0e-16) break;
     $$0 = 0;
     $$179 = $$078;
     $$181 = $$080;
     while (1) {
      if (($$0 | 0) >= ($8 | 0)) break;
      HEAPF64[$$181 >> 3] = +HEAPF64[$$179 >> 3];
      $$0 = $$0 + 1 | 0;
      $$179 = $$179 + 8 | 0;
      $$181 = $$181 + 8 | 0;
     }
     $$075 = $$075 + 1 | 0;
     $$078 = $$179;
     $$080 = $$181;
    }
    $$176 = $$075;
    $$2 = $$080;
    while (1) {
     if (($$176 | 0) >= ($8 | 0)) break L18;
     HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$176 << 3) >> 3] = 0.0;
     $$1 = 0;
     $$3 = $$2;
     while (1) {
      if (($$1 | 0) >= ($8 | 0)) break;
      HEAPF64[$$3 >> 3] = 0.0;
      $$1 = $$1 + 1 | 0;
      $$3 = $$3 + 8 | 0;
     }
     $$176 = $$176 + 1 | 0;
     $$2 = $$3;
    }
   } while (0);
   _arMatrixFree($20) | 0;
   $$077 = 0;
   break;
  }
  _arMatrixFree($20) | 0;
  $$077 = -1;
 } else $$077 = -1; else $$077 = -1; else $$077 = -1; while (0);
 return $$077 | 0;
}

function _get_cpara($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$1 = 0, $11 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $51 = 0, $6 = 0, $64 = 0, $65 = 0, $71 = 0, $72 = 0, $8 = 0, $9 = 0;
 $3 = _arMatrixAlloc(8, 8) | 0;
 $4 = _arMatrixAlloc(8, 1) | 0;
 $5 = _arMatrixAlloc(8, 1) | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 4) break;
  $6 = $0 + ($$0 << 4) | 0;
  $8 = HEAP32[$3 >> 2] | 0;
  $9 = $$0 << 4;
  HEAPF64[$8 + ($9 << 3) >> 3] = +HEAPF64[$6 >> 3];
  $11 = $0 + ($$0 << 4) + 8 | 0;
  HEAPF64[$8 + (($9 | 1) << 3) >> 3] = +HEAPF64[$11 >> 3];
  HEAPF64[$8 + (($9 | 2) << 3) >> 3] = 1.0;
  HEAPF64[$8 + (($9 | 3) << 3) >> 3] = 0.0;
  HEAPF64[$8 + (($9 | 4) << 3) >> 3] = 0.0;
  HEAPF64[$8 + (($9 | 5) << 3) >> 3] = 0.0;
  $24 = $1 + ($$0 << 4) | 0;
  HEAPF64[$8 + (($9 | 6) << 3) >> 3] = -(+HEAPF64[$6 >> 3] * +HEAPF64[$24 >> 3]);
  HEAPF64[$8 + (($9 | 7) << 3) >> 3] = -(+HEAPF64[$11 >> 3] * +HEAPF64[$24 >> 3]);
  HEAPF64[$8 + (($9 | 8) << 3) >> 3] = 0.0;
  HEAPF64[$8 + (($9 | 9) << 3) >> 3] = 0.0;
  HEAPF64[$8 + (($9 | 10) << 3) >> 3] = 0.0;
  HEAPF64[$8 + (($9 | 11) << 3) >> 3] = +HEAPF64[$6 >> 3];
  HEAPF64[$8 + (($9 | 12) << 3) >> 3] = +HEAPF64[$11 >> 3];
  HEAPF64[$8 + (($9 | 13) << 3) >> 3] = 1.0;
  $51 = $1 + ($$0 << 4) + 8 | 0;
  HEAPF64[$8 + (($9 | 14) << 3) >> 3] = -(+HEAPF64[$6 >> 3] * +HEAPF64[$51 >> 3]);
  HEAPF64[$8 + (($9 | 15) << 3) >> 3] = -(+HEAPF64[$11 >> 3] * +HEAPF64[$51 >> 3]);
  $64 = HEAP32[$4 >> 2] | 0;
  $65 = $$0 << 1;
  HEAPF64[$64 + ($65 << 3) >> 3] = +HEAPF64[$24 >> 3];
  HEAPF64[$64 + (($65 | 1) << 3) >> 3] = +HEAPF64[$51 >> 3];
  $$0 = $$0 + 1 | 0;
 }
 _arMatrixSelfInv($3) | 0;
 _arMatrixMul($5, $3, $4) | 0;
 $71 = HEAP32[$5 >> 2] | 0;
 $$1 = 0;
 while (1) {
  if (($$1 | 0) == 2) break;
  $72 = $$1 * 3 | 0;
  HEAPF64[$2 + ($$1 * 24 | 0) >> 3] = +HEAPF64[$71 + ($72 << 3) >> 3];
  HEAPF64[$2 + ($$1 * 24 | 0) + 8 >> 3] = +HEAPF64[$71 + ($72 + 1 << 3) >> 3];
  HEAPF64[$2 + ($$1 * 24 | 0) + 16 >> 3] = +HEAPF64[$71 + ($72 + 2 << 3) >> 3];
  $$1 = $$1 + 1 | 0;
 }
 HEAPF64[$2 + 48 >> 3] = +HEAPF64[$71 + 48 >> 3];
 HEAPF64[$2 + 56 >> 3] = +HEAPF64[$71 + 56 >> 3];
 HEAPF64[$2 + 64 >> 3] = 1.0;
 _arMatrixFree($3) | 0;
 _arMatrixFree($4) | 0;
 _arMatrixFree($5) | 0;
 return;
}

function __ZNK6vision5Timer19duration_in_secondsEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $18 = 0, $2 = 0.0, $20 = 0.0, $27 = 0, $32 = 0, $36 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 $2 = +HEAPF64[$0 >> 3];
 if (!($2 >= 0.0)) {
  $9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 33380) | 0, 33419) | 0, 33528) | 0, 80) | 0, 33535) | 0, 33538) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $9 + (HEAP32[(HEAP32[$9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $14 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 57884) | 0;
  $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$14 >> 2] | 0) + 28 >> 2] & 63]($14, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($9, $18) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($9) | 0;
  _abort();
 }
 $20 = +HEAPF64[$0 + 8 >> 3];
 if (!($20 >= 0.0)) {
  $27 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 33565) | 0, 33419) | 0, 33528) | 0, 81) | 0, 33535) | 0, 33603) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $27 + (HEAP32[(HEAP32[$27 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $32 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 57884) | 0;
  $36 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$32 >> 2] | 0) + 28 >> 2] & 63]($32, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($27, $36) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($27) | 0;
  _abort();
 } else {
  STACKTOP = sp;
  return +($20 - $2);
 }
 return +(0.0);
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $15 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $28 = 0, $29 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 20 | 0;
 $10 = $6;
 HEAP32[$10 >> 2] = 37;
 HEAP32[$10 + 4 >> 2] = 0;
 $15 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 50901, 1, HEAP32[$15 >> 2] | 0);
 $$lobit = (HEAP32[$15 >> 2] | 0) >>> 9 & 1;
 $19 = $$lobit + 23 | 0;
 $20 = _llvm_stacksave() | 0;
 $$alloca_mul = $19;
 $21 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $22 = __ZNSt3__26__clocEv() | 0;
 $23 = $$byval_copy;
 HEAP32[$23 >> 2] = $4;
 HEAP32[$23 + 4 >> 2] = $5;
 $28 = $21 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($21, $19, $22, $6, $$byval_copy) | 0) | 0;
 $29 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($21, $28, $2) | 0;
 $$alloca_mul6 = ($$lobit << 1 | 44) + -1 << 2;
 $33 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($21, $29, $28, $33, $7, $8, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$9 >> 2] = HEAP32[$1 >> 2];
 $35 = HEAP32[$7 >> 2] | 0;
 $36 = HEAP32[$8 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$9 >> 2];
 $37 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $33, $35, $36, $2, $3) | 0;
 _llvm_stackrestore($20 | 0);
 STACKTOP = sp;
 return $37 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $$lobit = 0, $10 = 0, $15 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $28 = 0, $29 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 20 | 0;
 $10 = $6;
 HEAP32[$10 >> 2] = 37;
 HEAP32[$10 + 4 >> 2] = 0;
 $15 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 50901, 1, HEAP32[$15 >> 2] | 0);
 $$lobit = (HEAP32[$15 >> 2] | 0) >>> 9 & 1;
 $19 = $$lobit + 23 | 0;
 $20 = _llvm_stacksave() | 0;
 $$alloca_mul = $19;
 $21 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $22 = __ZNSt3__26__clocEv() | 0;
 $23 = $$byval_copy;
 HEAP32[$23 >> 2] = $4;
 HEAP32[$23 + 4 >> 2] = $5;
 $28 = $21 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($21, $19, $22, $6, $$byval_copy) | 0) | 0;
 $29 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($21, $28, $2) | 0;
 $$alloca_mul6 = ($$lobit << 1 | 44) + -1 | 0;
 $33 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($21, $29, $28, $33, $7, $8, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$9 >> 2] = HEAP32[$1 >> 2];
 $35 = HEAP32[$7 >> 2] | 0;
 $36 = HEAP32[$8 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$9 >> 2];
 $37 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $33, $35, $36, $2, $3) | 0;
 _llvm_stackrestore($20 | 0);
 STACKTOP = sp;
 return $37 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE23__append_forward_unsafeIPcEERS5_T_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$034 = 0, $15 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $3 = 0, $35 = 0, $36 = 0, $4 = 0, $44 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $scevgep38 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = $1;
 $4 = sp;
 $5 = $0 + 11 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) {
  $35 = HEAP32[$0 + 4 >> 2] | 0;
  $36 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $35 = $6 & 255;
  $36 = 10;
 }
 $15 = $2 - $3 | 0;
 do if ($15 | 0) {
  if ($7) {
   $22 = HEAP32[$0 >> 2] | 0;
   $23 = HEAP32[$0 + 4 >> 2] | 0;
  } else {
   $22 = $0;
   $23 = $6 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($1, $22, $22 + $23 | 0) | 0) {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($4, $1, $2);
   $26 = HEAP8[$4 + 11 >> 0] | 0;
   $27 = $26 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm($0, $27 ? HEAP32[$4 >> 2] | 0 : $4, $27 ? HEAP32[$4 + 4 >> 2] | 0 : $26 & 255) | 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
   break;
  }
  if (($36 - $35 | 0) >>> 0 < $15 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm($0, $36, $35 + $15 - $36 | 0, $35, $35, 0, 0);
  if ((HEAP8[$5 >> 0] | 0) < 0) $44 = HEAP32[$0 >> 2] | 0; else $44 = $0;
  $scevgep38 = $2 + ($35 - $3) | 0;
  $$0 = $44 + $35 | 0;
  $$034 = $1;
  while (1) {
   if (($$034 | 0) == ($2 | 0)) break;
   __ZNSt3__211char_traitsIcE6assignERcRKc($$0, $$034);
   $$0 = $$0 + 1 | 0;
   $$034 = $$034 + 1 | 0;
  }
  HEAP8[$4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($44 + $scevgep38 | 0, $4);
  $49 = $35 + $15 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $49;
   break;
  } else {
   HEAP8[$5 >> 0] = $49;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $10 = 0, $15 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $29 = 0, $30 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 20 | 0;
 $10 = $6;
 HEAP32[$10 >> 2] = 37;
 HEAP32[$10 + 4 >> 2] = 0;
 $15 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 50901, 0, HEAP32[$15 >> 2] | 0);
 $19 = (HEAP32[$15 >> 2] | 0) >>> 9 & 1 | 22;
 $20 = $19 + 1 | 0;
 $21 = _llvm_stacksave() | 0;
 $$alloca_mul = $20;
 $22 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $23 = __ZNSt3__26__clocEv() | 0;
 $24 = $$byval_copy;
 HEAP32[$24 >> 2] = $4;
 HEAP32[$24 + 4 >> 2] = $5;
 $29 = $22 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($22, $20, $23, $6, $$byval_copy) | 0) | 0;
 $30 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($22, $29, $2) | 0;
 $$alloca_mul6 = ($19 << 1) + -1 << 2;
 $33 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIwE21__widen_and_group_intEPcS2_S2_PwRS3_S4_RKNS_6localeE($22, $30, $29, $33, $7, $8, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$9 >> 2] = HEAP32[$1 >> 2];
 $35 = HEAP32[$7 >> 2] | 0;
 $36 = HEAP32[$8 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$9 >> 2];
 $37 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $33, $35, $36, $2, $3) | 0;
 _llvm_stackrestore($21 | 0);
 STACKTOP = sp;
 return $37 | 0;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$alloca_mul = 0, $$alloca_mul6 = 0, $$byval_copy = 0, $10 = 0, $15 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $29 = 0, $30 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $$byval_copy = sp + 8 | 0;
 $6 = sp;
 $7 = sp + 24 | 0;
 $8 = sp + 16 | 0;
 $9 = sp + 20 | 0;
 $10 = $6;
 HEAP32[$10 >> 2] = 37;
 HEAP32[$10 + 4 >> 2] = 0;
 $15 = $2 + 4 | 0;
 __ZNSt3__214__num_put_base12__format_intEPcPKcbj($6 + 1 | 0, 50901, 0, HEAP32[$15 >> 2] | 0);
 $19 = (HEAP32[$15 >> 2] | 0) >>> 9 & 1 | 22;
 $20 = $19 + 1 | 0;
 $21 = _llvm_stacksave() | 0;
 $$alloca_mul = $20;
 $22 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul | 0) + 15 & -16 | 0);
 $23 = __ZNSt3__26__clocEv() | 0;
 $24 = $$byval_copy;
 HEAP32[$24 >> 2] = $4;
 HEAP32[$24 + 4 >> 2] = $5;
 $29 = $22 + (__ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($22, $20, $23, $6, $$byval_copy) | 0) | 0;
 $30 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($22, $29, $2) | 0;
 $$alloca_mul6 = ($19 << 1) + -1 | 0;
 $33 = STACKTOP;
 STACKTOP = STACKTOP + ((1 * $$alloca_mul6 | 0) + 15 & -16) | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow((1 * $$alloca_mul6 | 0) + 15 & -16 | 0);
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 __ZNSt3__29__num_putIcE21__widen_and_group_intEPcS2_S2_S2_RS2_S3_RKNS_6localeE($22, $30, $29, $33, $7, $8, $$byval_copy);
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$9 >> 2] = HEAP32[$1 >> 2];
 $35 = HEAP32[$7 >> 2] | 0;
 $36 = HEAP32[$8 >> 2] | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$9 >> 2];
 $37 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $33, $35, $36, $2, $3) | 0;
 _llvm_stackrestore($21 | 0);
 STACKTOP = sp;
 return $37 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($0) {
 $0 = $0 | 0;
 var $$017$off022 = 0, $$01918 = 0, $$020153134 = 0, $$02016 = 0, $$pre$phi37Z2D = 0, $$pre$phiZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $15 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $28 = 0, $3 = 0, $spec$select$i = 0, label = 0;
 $1 = $0 + 11 | 0;
 $2 = HEAP8[$1 >> 0] | 0;
 $3 = $2 << 24 >> 24 < 0;
 if ($3) {
  $10 = HEAP32[$0 + 4 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $10 = $2 & 255;
  $15 = 10;
 }
 $11 = $10 >>> 0 < 11;
 $spec$select$i = $11 ? 10 : ($10 + 16 & -16) + -1 | 0;
 L5 : do if (($spec$select$i | 0) != ($15 | 0)) {
  do if ($11) {
   $23 = HEAP32[$0 >> 2] | 0;
   if ($3) {
    $$017$off022 = 0;
    $$01918 = $23;
    $$02016 = $0;
    label = 12;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm($0, $23, ($2 & 255) + 1 | 0) | 0;
    __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm($23);
    label = 15;
   }
  } else {
   $17 = $spec$select$i + 1 | 0;
   $18 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm($17) | 0;
   if ($spec$select$i >>> 0 <= $15 >>> 0 & ($18 | 0) == 0) break L5;
   $20 = HEAP8[$1 >> 0] | 0;
   if ($20 << 24 >> 24 < 0) {
    $$017$off022 = 1;
    $$01918 = HEAP32[$0 >> 2] | 0;
    $$02016 = $18;
    label = 12;
    break;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm($18, $0, ($20 & 255) + 1 | 0) | 0;
    $$020153134 = $18;
    $$pre$phi37Z2D = $17;
    $$pre$phiZ2D = $0 + 4 | 0;
    label = 14;
    break;
   }
  } while (0);
  if ((label | 0) == 12) {
   $28 = $0 + 4 | 0;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm($$02016, $$01918, (HEAP32[$28 >> 2] | 0) + 1 | 0) | 0;
   __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm($$01918);
   if ($$017$off022) {
    $$020153134 = $$02016;
    $$pre$phi37Z2D = $spec$select$i + 1 | 0;
    $$pre$phiZ2D = $28;
    label = 14;
   } else label = 15;
  }
  if ((label | 0) == 14) {
   HEAP32[$0 + 8 >> 2] = $$pre$phi37Z2D | -2147483648;
   HEAP32[$$pre$phiZ2D >> 2] = $10;
   HEAP32[$0 >> 2] = $$020153134;
   break;
  } else if ((label | 0) == 15) {
   HEAP8[$1 >> 0] = $10;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE23__append_forward_unsafeIPwEERS5_T_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$034 = 0, $15 = 0, $16 = 0, $23 = 0, $24 = 0, $28 = 0, $29 = 0, $3 = 0, $37 = 0, $38 = 0, $4 = 0, $46 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $4 = $0 + 8 | 0;
 $5 = $4 + 3 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) {
  $37 = HEAP32[$0 + 4 >> 2] | 0;
  $38 = (HEAP32[$4 >> 2] & 2147483647) + -1 | 0;
 } else {
  $37 = $6 & 255;
  $38 = 1;
 }
 $15 = $2 - $1 | 0;
 $16 = $15 >> 2;
 do if ($15 | 0) {
  if ($7) {
   $23 = HEAP32[$0 >> 2] | 0;
   $24 = HEAP32[$0 + 4 >> 2] | 0;
  } else {
   $23 = $0;
   $24 = $6 & 255;
  }
  if (__ZNSt3__214__ptr_in_rangeIwEEbPKT_S3_S3_($1, $23, $23 + ($24 << 2) | 0) | 0) {
   HEAP32[$3 >> 2] = 0;
   HEAP32[$3 + 4 >> 2] = 0;
   HEAP32[$3 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($3, $1, $2);
   $28 = HEAP8[$3 + 8 + 3 >> 0] | 0;
   $29 = $28 << 24 >> 24 < 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm($0, $29 ? HEAP32[$3 >> 2] | 0 : $3, $29 ? HEAP32[$3 + 4 >> 2] | 0 : $28 & 255) | 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($3);
   break;
  }
  if (($38 - $37 | 0) >>> 0 < $16 >>> 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm($0, $38, $37 + $16 - $38 | 0, $37, $37, 0, 0);
  if ((HEAP8[$5 >> 0] | 0) < 0) $46 = HEAP32[$0 >> 2] | 0; else $46 = $0;
  $$0 = $46 + ($37 << 2) | 0;
  $$034 = $1;
  while (1) {
   if (($$034 | 0) == ($2 | 0)) break;
   __ZNSt3__211char_traitsIwE6assignERwRKw($$0, $$034);
   $$0 = $$0 + 4 | 0;
   $$034 = $$034 + 4 | 0;
  }
  HEAP32[$3 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw($$0, $3);
  $50 = $37 + $16 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $50;
   break;
  } else {
   HEAP8[$5 >> 0] = $50;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function _compute_color($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$083 = 0, $$087 = 0, $$091 = 0, $$095 = 0, $$096 = 0, $$097 = 0, $$098 = 0, $$1 = 0, $$184 = 0, $$188 = 0, $$192 = 0, $$2 = 0, $$285 = 0, $$289 = 0, $$293 = 0, $$3 = 0, $$386 = 0, $$390 = 0, $$394 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $26 = 0, $29 = 0, $30 = 0, $44 = 0, $48 = 0, $6 = 0, $9 = 0;
 $6 = HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 24 >> 2] | 0;
 $9 = HEAP32[$1 + 4 >> 2] | 0;
 $11 = HEAP32[$1 + 8 >> 2] | 0;
 $13 = HEAP32[$1 + 12 >> 2] | 0;
 $15 = HEAP32[$1 + 16 >> 2] | 0;
 $17 = HEAP32[$1 + 20 >> 2] | 0;
 $$0 = 0;
 $$083 = 0;
 $$087 = 0;
 $$091 = 0;
 $$096 = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($$096 | 0) > ($9 | 0)) break;
  $19 = $6 + ($$096 << 2) | 0;
  $21 = $$096 << 3 | 4;
  $$097 = $11;
  $$1 = $$0;
  $$184 = $$083;
  $$188 = $$087;
  $$192 = $$091;
  while (1) {
   if (($$097 | 0) > ($13 | 0)) break;
   $26 = $$097 << 2 | 2;
   $$095 = (HEAP32[$19 >> 2] | 0) + ($$097 << 6) + ($15 << 1) | 0;
   $$098 = $15;
   $$2 = $$1;
   $$285 = $$184;
   $$289 = $$188;
   $$293 = $$192;
   while (1) {
    if (($$098 | 0) > ($17 | 0)) break;
    $29 = HEAP16[$$095 >> 1] | 0;
    $30 = $29 & 65535;
    if (!($29 << 16 >> 16)) {
     $$3 = $$2;
     $$386 = $$285;
     $$390 = $$289;
     $$394 = $$293;
    } else {
     $$3 = (Math_imul($$098 << 3 | 4, $30) | 0) + $$2 | 0;
     $$386 = (Math_imul($26, $30) | 0) + $$285 | 0;
     $$390 = (Math_imul($21, $30) | 0) + $$289 | 0;
     $$394 = $$293 + $30 | 0;
    }
    $$095 = $$095 + 2 | 0;
    $$098 = $$098 + 1 | 0;
    $$2 = $$3;
    $$285 = $$386;
    $$289 = $$390;
    $$293 = $$394;
   }
   $$097 = $$097 + 1 | 0;
   $$1 = $$2;
   $$184 = $$285;
   $$188 = $$289;
   $$192 = $$293;
  }
  $$0 = $$1;
  $$083 = $$184;
  $$087 = $$188;
  $$091 = $$192;
  $$096 = $$096 + 1 | 0;
 }
 $44 = $$091 >> 1;
 $48 = $0 + 136 | 0;
 HEAP8[(HEAP32[HEAP32[$48 >> 2] >> 2] | 0) + $2 >> 0] = ($$087 + $44 | 0) / ($$091 | 0) | 0;
 HEAP8[(HEAP32[(HEAP32[$48 >> 2] | 0) + 4 >> 2] | 0) + $2 >> 0] = ($$083 + $44 | 0) / ($$091 | 0) | 0;
 HEAP8[(HEAP32[(HEAP32[$48 >> 2] | 0) + 8 >> 2] | 0) + $2 >> 0] = ($$0 + $44 | 0) / ($$091 | 0) | 0;
 return;
}

function ___shgetc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$phi$trans$insert28 = 0, $$pre = 0, $1 = 0, $12 = 0, $17 = 0, $2 = 0, $23 = 0, $26 = 0, $28 = 0, $31 = 0, $37 = 0, $39 = 0, $4 = 0, $41 = 0, $43 = 0, $49 = 0, $50 = 0, $56 = 0, $61 = 0, $63 = 0, $66 = 0, $69 = 0, $7 = 0, $70 = 0, $76 = 0, $77 = 0, $78 = 0, $83 = 0, $84 = 0, $89 = 0, label = 0;
 $1 = $0 + 112 | 0;
 $2 = $1;
 $4 = HEAP32[$2 >> 2] | 0;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 if (($4 | 0) == 0 & ($7 | 0) == 0) label = 3; else {
  $12 = $0 + 120 | 0;
  $17 = HEAP32[$12 + 4 >> 2] | 0;
  if (($17 | 0) < ($7 | 0) | (($17 | 0) == ($7 | 0) ? (HEAP32[$12 >> 2] | 0) >>> 0 < $4 >>> 0 : 0)) label = 3; else label = 4;
 }
 if ((label | 0) == 3) {
  $23 = ___uflow($0) | 0;
  if (($23 | 0) < 0) label = 4; else {
   $26 = $1;
   $28 = HEAP32[$26 >> 2] | 0;
   $31 = HEAP32[$26 + 4 >> 2] | 0;
   $$pre = HEAP32[$0 + 8 >> 2] | 0;
   if (($28 | 0) == 0 & ($31 | 0) == 0) {
    $89 = $$pre;
    label = 9;
   } else {
    $37 = HEAP32[$0 + 4 >> 2] | 0;
    $39 = $$pre - $37 | 0;
    $41 = (($39 | 0) < 0) << 31 >> 31;
    $43 = $0 + 120 | 0;
    $49 = _i64Subtract($28 | 0, $31 | 0, HEAP32[$43 >> 2] | 0, HEAP32[$43 + 4 >> 2] | 0) | 0;
    $50 = getTempRet0() | 0;
    $56 = $$pre;
    if (($50 | 0) > ($41 | 0) | ($50 | 0) == ($41 | 0) & $49 >>> 0 > $39 >>> 0) {
     $89 = $56;
     label = 9;
    } else {
     HEAP32[$0 + 104 >> 2] = $37 + ($49 + -1);
     $61 = $56;
    }
   }
   if ((label | 0) == 9) {
    HEAP32[$0 + 104 >> 2] = $$pre;
    $61 = $89;
   }
   $$phi$trans$insert28 = $0 + 4 | 0;
   if (!$61) $84 = HEAP32[$$phi$trans$insert28 >> 2] | 0; else {
    $63 = HEAP32[$$phi$trans$insert28 >> 2] | 0;
    $66 = $61 + 1 - $63 | 0;
    $69 = $0 + 120 | 0;
    $70 = $69;
    $76 = _i64Add(HEAP32[$70 >> 2] | 0, HEAP32[$70 + 4 >> 2] | 0, $66 | 0, (($66 | 0) < 0) << 31 >> 31 | 0) | 0;
    $77 = getTempRet0() | 0;
    $78 = $69;
    HEAP32[$78 >> 2] = $76;
    HEAP32[$78 + 4 >> 2] = $77;
    $84 = $63;
   }
   $83 = $84 + -1 | 0;
   if (($23 | 0) == (HEAPU8[$83 >> 0] | 0 | 0)) $$0 = $23; else {
    HEAP8[$83 >> 0] = $23;
    $$0 = $23;
   }
  }
 }
 if ((label | 0) == 4) {
  HEAP32[$0 + 104 >> 2] = 0;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE7reserveEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$017$off042 = 0, $$01938 = 0, $$020355154 = 0, $$02036 = 0, $$pre$phi57Z2D = 0, $$pre$phiZ2D = 0, $$sroa$speculated = 0, $12 = 0, $14 = 0, $18 = 0, $19 = 0, $22 = 0, $24 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $spec$select$i = 0, label = 0;
 if ($1 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $3 = $0 + 8 | 0;
 $4 = $3 + 3 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $12 = HEAP32[$0 + 4 >> 2] | 0;
  $18 = (HEAP32[$3 >> 2] & 2147483647) + -1 | 0;
 } else {
  $12 = $5 & 255;
  $18 = 1;
 }
 $$sroa$speculated = $12 >>> 0 > $1 >>> 0 ? $12 : $1;
 $14 = $$sroa$speculated >>> 0 < 2;
 $spec$select$i = $14 ? 1 : ($$sroa$speculated + 4 & -4) + -1 | 0;
 do if (($spec$select$i | 0) != ($18 | 0)) {
  do if ($14) {
   $24 = HEAP32[$0 >> 2] | 0;
   if ($6) {
    $$017$off042 = 0;
    $$01938 = $24;
    $$02036 = $0;
    label = 15;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwm($0, $24, ($5 & 255) + 1 | 0) | 0;
    __ZdlPv($24);
    label = 18;
   }
  } else {
   $19 = $spec$select$i + 1 | 0;
   if ($19 >>> 0 > 1073741823) _abort();
   $22 = __Znwm($19 << 2) | 0;
   if ($6) {
    $$017$off042 = 1;
    $$01938 = HEAP32[$0 >> 2] | 0;
    $$02036 = $22;
    label = 15;
    break;
   } else {
    __ZNSt3__211char_traitsIwE4copyEPwPKwm($22, $0, ($5 & 255) + 1 | 0) | 0;
    $$020355154 = $22;
    $$pre$phi57Z2D = $19;
    $$pre$phiZ2D = $0 + 4 | 0;
    label = 17;
    break;
   }
  } while (0);
  if ((label | 0) == 15) {
   $29 = $0 + 4 | 0;
   __ZNSt3__211char_traitsIwE4copyEPwPKwm($$02036, $$01938, (HEAP32[$29 >> 2] | 0) + 1 | 0) | 0;
   __ZdlPv($$01938);
   if ($$017$off042) {
    $$020355154 = $$02036;
    $$pre$phi57Z2D = $spec$select$i + 1 | 0;
    $$pre$phiZ2D = $29;
    label = 17;
   } else label = 18;
  }
  if ((label | 0) == 17) {
   HEAP32[$3 >> 2] = $$pre$phi57Z2D | -2147483648;
   HEAP32[$$pre$phiZ2D >> 2] = $12;
   HEAP32[$0 >> 2] = $$020355154;
   break;
  } else if ((label | 0) == 18) {
   HEAP8[$4 >> 0] = $12;
   break;
  }
 } while (0);
 return;
}

function __ZN6vision18EstimateHomographyEPfRKNSt3__26vectorINS_12FeaturePointENS1_9allocatorIS3_EEEES8_RKNS2_INS_7match_tENS4_IS9_EEEERNS_16RobustHomographyIfEEii($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$036 = 0, $$cast = 0, $10 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0.0, $32 = 0.0, $38 = 0, $46 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $7 = sp + 44 | 0;
 $8 = sp + 32 | 0;
 $9 = sp;
 $10 = $3 + 4 | 0;
 __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEEC2Em($7, (HEAP32[$10 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 3);
 __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEEC2Em($8, (HEAP32[$10 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) >> 3);
 $20 = HEAP32[$3 >> 2] | 0;
 $22 = (HEAP32[$10 >> 2] | 0) - $20 >> 3;
 $$cast = $20;
 $23 = HEAP32[$1 >> 2] | 0;
 $24 = HEAP32[$8 >> 2] | 0;
 $25 = HEAP32[$2 >> 2] | 0;
 $26 = HEAP32[$7 >> 2] | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == ($22 | 0)) break;
  $38 = HEAP32[$$cast + ($$0 << 3) >> 2] | 0;
  HEAP32[$24 + ($$0 << 3) >> 2] = HEAP32[$23 + ($38 * 20 | 0) >> 2];
  HEAP32[$24 + ($$0 << 3) + 4 >> 2] = HEAP32[$23 + ($38 * 20 | 0) + 4 >> 2];
  $46 = HEAP32[$$cast + ($$0 << 3) + 4 >> 2] | 0;
  HEAP32[$26 + ($$0 << 3) >> 2] = HEAP32[$25 + ($46 * 20 | 0) >> 2];
  HEAP32[$26 + ($$0 << 3) + 4 >> 2] = HEAP32[$25 + ($46 * 20 | 0) + 4 >> 2];
  $$0 = $$0 + 1 | 0;
 }
 HEAPF32[$9 >> 2] = 0.0;
 HEAPF32[$9 + 4 >> 2] = 0.0;
 $28 = +($5 | 0);
 HEAPF32[$9 + 8 >> 2] = $28;
 HEAPF32[$9 + 12 >> 2] = 0.0;
 HEAPF32[$9 + 16 >> 2] = $28;
 $32 = +($6 | 0);
 HEAPF32[$9 + 20 >> 2] = $32;
 HEAPF32[$9 + 24 >> 2] = 0.0;
 HEAPF32[$9 + 28 >> 2] = $32;
 if (__ZN6vision16RobustHomographyIfE4findEPfPKfS4_iS4_i($4, $0, $26, $24, $22, $9, 4) | 0) $$036 = __ZN6vision25CheckHomographyHeuristicsEPfii($0, $5, $6) | 0; else $$036 = 0;
 __ZNSt3__213__vector_baseIN6vision7Point2dIfEENS_9allocatorIS3_EEED2Ev($8);
 __ZNSt3__213__vector_baseIN6vision7Point2dIfEENS_9allocatorIS3_EEED2Ev($7);
 STACKTOP = sp;
 return $$036 | 0;
}

function __ZN6vision21HoughSimilarityVoting4voteEPKfS2_i($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$040 = 0, $$1 = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $23 = 0, $24 = 0, $4 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp + 12 | 0;
 $5 = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE5clearEv($0 + 92 | 0);
 if ($3 | 0) {
  $10 = $0 + 112 | 0;
  __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm($10, $3 << 2);
  $12 = $0 + 124 | 0;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm($12, $3);
  if (HEAP8[$0 + 16 >> 0] | 0) __ZN6vision21HoughSimilarityVoting19autoAdjustXYNumBinsEPKfS2_i($0, $1, $2, $3);
  $16 = $0 + 68 | 0;
  $17 = $0 + 72 | 0;
  $18 = $0 + 76 | 0;
  $19 = $0 + 80 | 0;
  $$0 = 0;
  $$040 = 0;
  while (1) {
   if (($$040 | 0) >= ($3 | 0)) break;
   $22 = $$040 << 2;
   $23 = $1 + ($22 << 2) | 0;
   $24 = $2 + ($22 << 2) | 0;
   __ZNK6vision21HoughSimilarityVoting17mapCorrespondenceERfS1_S1_S1_ffffffff($0, $4, $5, $6, $7, +HEAPF32[$23 >> 2], +HEAPF32[$23 + 4 >> 2], +HEAPF32[$23 + 8 >> 2], +HEAPF32[$23 + 12 >> 2], +HEAPF32[$24 >> 2], +HEAPF32[$24 + 4 >> 2], +HEAPF32[$24 + 8 >> 2], +HEAPF32[$24 + 12 >> 2]);
   if (__ZN6vision21HoughSimilarityVoting4voteEffff($0, +HEAPF32[$4 >> 2], +HEAPF32[$5 >> 2], +HEAPF32[$6 >> 2], +HEAPF32[$7 >> 2]) | 0) {
    $46 = (HEAP32[$10 >> 2] | 0) + ($$0 << 2 << 2) | 0;
    HEAP32[$46 >> 2] = HEAP32[$16 >> 2];
    HEAP32[$46 + 4 >> 2] = HEAP32[$17 >> 2];
    HEAP32[$46 + 8 >> 2] = HEAP32[$18 >> 2];
    HEAP32[$46 + 12 >> 2] = HEAP32[$19 >> 2];
    HEAP32[(HEAP32[$12 >> 2] | 0) + ($$0 << 2) >> 2] = $$040;
    $$1 = $$0 + 1 | 0;
   } else $$1 = $$0;
   $$0 = $$1;
   $$040 = $$040 + 1 | 0;
  }
  __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm($10, $$0 << 2);
  __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm($12, $$0);
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision21OrientationAssignment16computeGradientsEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $23 = 0, $28 = 0, $3 = 0, $32 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = $0 + 40 | 0;
 $$0 = 0;
 while (1) {
  $4 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
  if ($$0 >>> 0 >= (HEAP32[$4 + 4 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) >> 5 >>> 0) {
   label = 3;
   break;
  }
  $11 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
  $13 = (HEAP32[$11 >> 2] | 0) + ($$0 << 5) | 0;
  $14 = __ZNK6vision5Image5widthEv($13) | 0;
  if (($14 | 0) != ((__ZNK6vision5Image4stepEv($13) | 0) >>> 2 | 0)) {
   label = 5;
   break;
  }
  $35 = __ZN6vision5Image3getIfEEPT_v((HEAP32[$3 >> 2] | 0) + ($$0 << 5) | 0) | 0;
  $36 = __ZNK6vision5Image3getIfEEPKT_v($13) | 0;
  $37 = __ZNK6vision5Image5widthEv($13) | 0;
  __ZN6vision21ComputePolarGradientsEPfPKfmm($35, $36, $37, __ZNK6vision5Image6heightEv($13) | 0);
  $$0 = $$0 + 1 | 0;
 }
 if ((label | 0) == 3) {
  STACKTOP = sp;
  return;
 } else if ((label | 0) == 5) {
  $23 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 25808) | 0, 25869) | 0, 33528) | 0, 96) | 0, 33535) | 0, 25994) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $23 + (HEAP32[(HEAP32[$23 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $28 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $32 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$28 >> 2] | 0) + 28 >> 2] & 63]($28, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($23, $32) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($23) | 0;
  _abort();
 }
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_dot_star_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$idx$i = 0, $$3 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $20 = 0, $27 = 0, $3 = 0, $33 = 0, $34 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp + 12 | 0;
 $4 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 100) if ((HEAP8[$0 + 1 >> 0] | 0) == 115) {
  $14 = $0 + 2 | 0;
  $15 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
  if (($15 | 0) == ($14 | 0)) $$3 = $0; else {
   $17 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($15, $1, $2) | 0;
   if (($17 | 0) == ($15 | 0)) $$3 = $0; else {
    $19 = $2 + 4 | 0;
    $20 = HEAP32[$19 >> 2] | 0;
    if ((($20 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$3 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $20 + -24 | 0);
     $27 = HEAP32[$19 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$19 >> 2] = $27 + -24;
     __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($4, 49922, $3);
     $33 = HEAP8[$4 + 11 >> 0] | 0;
     $34 = $33 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$19 >> 2] | 0) + -24 | 0, $34 ? HEAP32[$4 >> 2] | 0 : $4, $34 ? HEAP32[$4 + 4 >> 2] | 0 : $33 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $17;
    }
   }
  }
 } else $$3 = $0; else $$3 = $0; else $$3 = $0;
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_114parse_dot_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$idx$i = 0, $$3 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $20 = 0, $27 = 0, $3 = 0, $33 = 0, $34 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp + 12 | 0;
 $4 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 100) if ((HEAP8[$0 + 1 >> 0] | 0) == 116) {
  $14 = $0 + 2 | 0;
  $15 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
  if (($15 | 0) == ($14 | 0)) $$3 = $0; else {
   $17 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_nameINS0_2DbEEEPKcS4_S4_RT_($15, $1, $2) | 0;
   if (($17 | 0) == ($15 | 0)) $$3 = $0; else {
    $19 = $2 + 4 | 0;
    $20 = HEAP32[$19 >> 2] | 0;
    if ((($20 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$3 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $20 + -24 | 0);
     $27 = HEAP32[$19 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($27 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$19 >> 2] = $27 + -24;
     __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($4, 49920, $3);
     $33 = HEAP8[$4 + 11 >> 0] | 0;
     $34 = $33 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$19 >> 2] | 0) + -24 | 0, $34 ? HEAP32[$4 >> 2] | 0 : $4, $34 ? HEAP32[$4 + 4 >> 2] | 0 : $33 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $17;
    }
   }
  }
 } else $$3 = $0; else $$3 = $0; else $$3 = $0;
 STACKTOP = sp;
 return $$3 | 0;
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0, aligned_dest_end = 0, block_aligned_dest_end = 0, dest_end = 0;
 if ((num | 0) >= 8192) {
  _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
  return dest | 0;
 }
 ret = dest | 0;
 dest_end = dest + num | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  aligned_dest_end = dest_end & -4 | 0;
  block_aligned_dest_end = aligned_dest_end - 64 | 0;
  while ((dest | 0) <= (block_aligned_dest_end | 0)) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   HEAP32[dest + 4 >> 2] = HEAP32[src + 4 >> 2];
   HEAP32[dest + 8 >> 2] = HEAP32[src + 8 >> 2];
   HEAP32[dest + 12 >> 2] = HEAP32[src + 12 >> 2];
   HEAP32[dest + 16 >> 2] = HEAP32[src + 16 >> 2];
   HEAP32[dest + 20 >> 2] = HEAP32[src + 20 >> 2];
   HEAP32[dest + 24 >> 2] = HEAP32[src + 24 >> 2];
   HEAP32[dest + 28 >> 2] = HEAP32[src + 28 >> 2];
   HEAP32[dest + 32 >> 2] = HEAP32[src + 32 >> 2];
   HEAP32[dest + 36 >> 2] = HEAP32[src + 36 >> 2];
   HEAP32[dest + 40 >> 2] = HEAP32[src + 40 >> 2];
   HEAP32[dest + 44 >> 2] = HEAP32[src + 44 >> 2];
   HEAP32[dest + 48 >> 2] = HEAP32[src + 48 >> 2];
   HEAP32[dest + 52 >> 2] = HEAP32[src + 52 >> 2];
   HEAP32[dest + 56 >> 2] = HEAP32[src + 56 >> 2];
   HEAP32[dest + 60 >> 2] = HEAP32[src + 60 >> 2];
   dest = dest + 64 | 0;
   src = src + 64 | 0;
  }
  while ((dest | 0) < (aligned_dest_end | 0)) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  }
 } else {
  aligned_dest_end = dest_end - 4 | 0;
  while ((dest | 0) < (aligned_dest_end | 0)) {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   HEAP8[dest + 1 >> 0] = HEAP8[src + 1 >> 0] | 0;
   HEAP8[dest + 2 >> 0] = HEAP8[src + 2 >> 0] | 0;
   HEAP8[dest + 3 >> 0] = HEAP8[src + 3 >> 0] | 0;
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  }
 }
 while ((dest | 0) < (dest_end | 0)) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 }
 return ret | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7reserveEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$017$off042 = 0, $$01938 = 0, $$020355154 = 0, $$02036 = 0, $$pre$phi57Z2D = 0, $$pre$phiZ2D = 0, $$sroa$speculated = 0, $12 = 0, $14 = 0, $18 = 0, $19 = 0, $20 = 0, $22 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $spec$select$i = 0, label = 0;
 if ($1 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $3 = $0 + 11 | 0;
 $4 = HEAP8[$3 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) {
  $12 = HEAP32[$0 + 4 >> 2] | 0;
  $18 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $12 = $4 & 255;
  $18 = 10;
 }
 $$sroa$speculated = $12 >>> 0 > $1 >>> 0 ? $12 : $1;
 $14 = $$sroa$speculated >>> 0 < 11;
 $spec$select$i = $14 ? 10 : ($$sroa$speculated + 16 & -16) + -1 | 0;
 do if (($spec$select$i | 0) != ($18 | 0)) {
  do if ($14) {
   $22 = HEAP32[$0 >> 2] | 0;
   if ($5) {
    $$017$off042 = 0;
    $$01938 = $22;
    $$02036 = $0;
    label = 13;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm($0, $22, ($4 & 255) + 1 | 0) | 0;
    __ZdlPv($22);
    label = 16;
   }
  } else {
   $19 = $spec$select$i + 1 | 0;
   $20 = __Znwm($19) | 0;
   if ($5) {
    $$017$off042 = 1;
    $$01938 = HEAP32[$0 >> 2] | 0;
    $$02036 = $20;
    label = 13;
    break;
   } else {
    __ZNSt3__211char_traitsIcE4copyEPcPKcm($20, $0, ($4 & 255) + 1 | 0) | 0;
    $$020355154 = $20;
    $$pre$phi57Z2D = $19;
    $$pre$phiZ2D = $0 + 4 | 0;
    label = 15;
    break;
   }
  } while (0);
  if ((label | 0) == 13) {
   $27 = $0 + 4 | 0;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm($$02036, $$01938, (HEAP32[$27 >> 2] | 0) + 1 | 0) | 0;
   __ZdlPv($$01938);
   if ($$017$off042) {
    $$020355154 = $$02036;
    $$pre$phi57Z2D = $spec$select$i + 1 | 0;
    $$pre$phiZ2D = $27;
    label = 15;
   } else label = 16;
  }
  if ((label | 0) == 15) {
   HEAP32[$0 + 8 >> 2] = $$pre$phi57Z2D | -2147483648;
   HEAP32[$$pre$phiZ2D >> 2] = $12;
   HEAP32[$0 >> 2] = $$020355154;
   break;
  } else if ((label | 0) == 16) {
   HEAP8[$3 >> 0] = $12;
   break;
  }
 } while (0);
 return;
}

function __ZL18genBWImageTwoThirdPhiiPiS0_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$073 = 0, $$074 = 0, $$077 = 0, $$078 = 0, $$079 = 0, $$1 = 0, $$176 = 0, $$pn = 0, $10 = 0, $13 = 0, $25 = 0, $34 = 0, $5 = 0, $51 = 0, $6 = 0, $7 = 0, $71 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = ($1 | 0) / 3 | 0;
 $6 = $5 << 1;
 HEAP32[$3 >> 2] = $6;
 $7 = ($2 | 0) / 3 | 0;
 $8 = $7 << 1;
 HEAP32[$4 >> 2] = $8;
 $10 = _malloc(Math_imul($8, $6) | 0) | 0;
 if (!$10) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 }
 $$0 = 0;
 $$074 = $10;
 $$pn = $10;
 while (1) {
  if (($$0 | 0) >= ($7 | 0)) break;
  $13 = $$0 * 3 | 0;
  $$073 = 0;
  $$077 = $0 + (Math_imul($13 + 2 | 0, $1) | 0) | 0;
  $$078 = $0 + (Math_imul($13 + 1 | 0, $1) | 0) | 0;
  $$079 = $0 + (Math_imul($13, $1) | 0) | 0;
  $$1 = $$074;
  $$176 = $$pn + $6 | 0;
  while (1) {
   if (($$073 | 0) >= ($5 | 0)) break;
   $25 = $$079 + 1 | 0;
   $34 = $$078 + 1 | 0;
   HEAP8[$$1 >> 0] = (((HEAPU8[$25 >> 0] | 0) >>> 1 & 255) + (HEAPU8[$$079 >> 0] | 0) + ((HEAPU8[$$078 >> 0] | 0) >>> 1 & 255) + ((HEAPU8[$34 >> 0] | 0) >>> 2 & 255) << 2 >>> 0) / 9 | 0;
   $51 = $$077 + 1 | 0;
   HEAP8[$$176 >> 0] = ((((HEAPU8[$34 >> 0] | 0) >>> 2) + ((HEAPU8[$$078 >> 0] | 0) >>> 1) & 255) + (HEAPU8[$$077 >> 0] | 0) + ((HEAPU8[$51 >> 0] | 0) >>> 1 & 255) << 2 >>> 0) / 9 | 0;
   $71 = $$078 + 2 | 0;
   HEAP8[$$1 + 1 >> 0] = (((HEAPU8[$25 >> 0] | 0) >>> 1 & 255) + (HEAPU8[$$079 + 2 >> 0] | 0) + ((HEAPU8[$34 >> 0] | 0) >>> 2 & 255) + ((HEAPU8[$71 >> 0] | 0) >>> 1 & 255) << 2 >>> 0) / 9 | 0;
   HEAP8[$$176 + 1 >> 0] = ((((HEAPU8[$71 >> 0] | 0) >>> 1) + ((HEAPU8[$34 >> 0] | 0) >>> 2) & 255) + ((HEAPU8[$51 >> 0] | 0) >>> 1 & 255) + (HEAPU8[$$077 + 2 >> 0] | 0) << 2 >>> 0) / 9 | 0;
   $$073 = $$073 + 1 | 0;
   $$077 = $$077 + 3 | 0;
   $$078 = $$078 + 3 | 0;
   $$079 = $$079 + 3 | 0;
   $$1 = $$1 + 2 | 0;
   $$176 = $$176 + 2 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$074 = $$1 + $6 | 0;
  $$pn = $$176;
 }
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $21 = 0, $25 = 0, $33 = 0, $34 = 0, $39 = 0, $4 = 0, $42 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select = 0;
 $4 = $1;
 $6 = ($2 - $4 | 0) / 20 | 0;
 $7 = $0 + 8 | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 do if ($6 >>> 0 > (((HEAP32[$7 >> 2] | 0) - $9 | 0) / 20 | 0) >>> 0) {
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE10deallocateEv($0);
  $34 = __ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
  if ($34 >>> 0 < $6 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $39 = ((HEAP32[$7 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 20 | 0;
   $42 = $39 << 1;
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8allocateEm($0, $39 >>> 0 < $34 >>> 1 >>> 0 ? ($42 >>> 0 < $6 >>> 0 ? $6 : $42) : $34);
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_m($0, $1, $2, $6);
   break;
  }
 } else {
  $14 = $0 + 4 | 0;
  $17 = ((HEAP32[$14 >> 2] | 0) - $9 | 0) / 20 | 0;
  $18 = $6 >>> 0 > $17 >>> 0;
  $spec$select = $18 ? $1 + ($17 * 20 | 0) | 0 : $2;
  $21 = $spec$select - $4 | 0;
  if ($21 | 0) _memmove($9 | 0, $1 | 0, $21 | 0) | 0;
  $25 = $13 + ((($21 | 0) / 20 | 0) * 20 | 0) | 0;
  if ($18) {
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_m($0, $spec$select, $2, $6 - (((HEAP32[$14 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 20 | 0) | 0);
   break;
  }
  $$0$i$i = HEAP32[$14 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($25 | 0)) break;
   $33 = $$0$i$i + -20 | 0;
   __ZN6vision12FeaturePointD2Ev($33);
   $$0$i$i = $33;
  }
  HEAP32[$14 >> 2] = $25;
 } while (0);
 return;
}

function __ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 var $$0 = 0, $11 = 0, $13 = 0, $16 = 0.0, $17 = 0, $19 = 0, $24 = 0.0, $3 = 0.0, $31 = 0.0, $34 = 0, $37 = 0, $40 = 0.0, $47 = 0.0, $54 = 0.0, $6 = 0.0, $61 = 0.0, $68 = 0.0, $7 = 0, $75 = 0.0, $9 = 0;
 $3 = +__ZN6vision14Determinant3x3IfEET_PKS1_($1);
 if (!(+Math_abs(+$3) <= $2)) {
  $6 = 1.0 / $3;
  $7 = $1 + 16 | 0;
  $9 = $1 + 20 | 0;
  $11 = $1 + 28 | 0;
  $13 = $1 + 32 | 0;
  $16 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$7 >> 2], +HEAPF32[$9 >> 2], +HEAPF32[$11 >> 2], +HEAPF32[$13 >> 2]);
  HEAPF32[$0 >> 2] = $16;
  $17 = $1 + 8 | 0;
  $19 = $1 + 4 | 0;
  $24 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$17 >> 2], +HEAPF32[$19 >> 2], +HEAPF32[$13 >> 2], +HEAPF32[$11 >> 2]);
  HEAPF32[$0 + 4 >> 2] = $24;
  $31 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$19 >> 2], +HEAPF32[$17 >> 2], +HEAPF32[$7 >> 2], +HEAPF32[$9 >> 2]);
  HEAPF32[$0 + 8 >> 2] = $31;
  $34 = $1 + 12 | 0;
  $37 = $1 + 24 | 0;
  $40 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$9 >> 2], +HEAPF32[$34 >> 2], +HEAPF32[$13 >> 2], +HEAPF32[$37 >> 2]);
  HEAPF32[$0 + 12 >> 2] = $40;
  $47 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$1 >> 2], +HEAPF32[$17 >> 2], +HEAPF32[$37 >> 2], +HEAPF32[$13 >> 2]);
  HEAPF32[$0 + 16 >> 2] = $47;
  $54 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$17 >> 2], +HEAPF32[$1 >> 2], +HEAPF32[$9 >> 2], +HEAPF32[$34 >> 2]);
  HEAPF32[$0 + 20 >> 2] = $54;
  $61 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$34 >> 2], +HEAPF32[$7 >> 2], +HEAPF32[$37 >> 2], +HEAPF32[$11 >> 2]);
  HEAPF32[$0 + 24 >> 2] = $61;
  $68 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$19 >> 2], +HEAPF32[$1 >> 2], +HEAPF32[$11 >> 2], +HEAPF32[$37 >> 2]);
  HEAPF32[$0 + 28 >> 2] = $68;
  $75 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$1 >> 2], +HEAPF32[$19 >> 2], +HEAPF32[$34 >> 2], +HEAPF32[$7 >> 2]);
  HEAPF32[$0 + 32 >> 2] = $75;
  $$0 = 1;
 } else $$0 = 0;
 return $$0 | 0;
}

function ___fdopen($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $19 = 0, $2 = 0, $24 = 0, $29 = 0, $31 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $vararg_buffer12 = sp + 40 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $2 = sp + 56 | 0;
 if (!(_strchr(46122, HEAP8[$1 >> 0] | 0) | 0)) {
  $7 = ___errno_location() | 0;
  HEAP32[$7 >> 2] = 22;
  $$0 = 0;
 } else {
  $8 = _malloc(1176) | 0;
  if (!$8) $$0 = 0; else {
   _memset($8 | 0, 0, 144) | 0;
   if (!(_strchr($1, 43) | 0)) HEAP32[$8 >> 2] = (HEAP8[$1 >> 0] | 0) == 114 ? 8 : 4;
   if (_strchr($1, 101) | 0) {
    HEAP32[$vararg_buffer >> 2] = $0;
    HEAP32[$vararg_buffer + 4 >> 2] = 2;
    HEAP32[$vararg_buffer + 8 >> 2] = 1;
    ___syscall221(221, $vararg_buffer | 0) | 0;
   }
   if ((HEAP8[$1 >> 0] | 0) == 97) {
    HEAP32[$vararg_buffer3 >> 2] = $0;
    HEAP32[$vararg_buffer3 + 4 >> 2] = 3;
    $19 = ___syscall221(221, $vararg_buffer3 | 0) | 0;
    if (!($19 & 1024)) {
     HEAP32[$vararg_buffer7 >> 2] = $0;
     HEAP32[$vararg_buffer7 + 4 >> 2] = 4;
     HEAP32[$vararg_buffer7 + 8 >> 2] = $19 | 1024;
     ___syscall221(221, $vararg_buffer7 | 0) | 0;
    }
    $24 = HEAP32[$8 >> 2] | 128;
    HEAP32[$8 >> 2] = $24;
    $31 = $24;
   } else $31 = HEAP32[$8 >> 2] | 0;
   HEAP32[$8 + 60 >> 2] = $0;
   HEAP32[$8 + 44 >> 2] = $8 + 152;
   HEAP32[$8 + 48 >> 2] = 1024;
   $29 = $8 + 75 | 0;
   HEAP8[$29 >> 0] = -1;
   if (!($31 & 8)) {
    HEAP32[$vararg_buffer12 >> 2] = $0;
    HEAP32[$vararg_buffer12 + 4 >> 2] = 21523;
    HEAP32[$vararg_buffer12 + 8 >> 2] = $2;
    if (!(___syscall54(54, $vararg_buffer12 | 0) | 0)) HEAP8[$29 >> 0] = 10;
   }
   HEAP32[$8 + 32 >> 2] = 1;
   HEAP32[$8 + 36 >> 2] = 2;
   HEAP32[$8 + 40 >> 2] = 1;
   HEAP32[$8 + 12 >> 2] = 2;
   if (!(HEAP32[14049] | 0)) HEAP32[$8 + 76 >> 2] = -1;
   ___ofl_add($8) | 0;
   $$0 = $8;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__210__stdinbufIwE9pbackfailEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$07 = 0, $$1 = 0, $$pre$phiZ2D = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $3 = 0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 $7 = __ZNSt3__211char_traitsIwE11eq_int_typeEjj($1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0;
 $8 = $0 + 52 | 0;
 $10 = (HEAP8[$8 >> 0] | 0) != 0;
 do if ($7) if ($10) $$1 = $1; else {
  $12 = HEAP32[$0 + 48 >> 2] | 0;
  $16 = ((__ZNSt3__211char_traitsIwE11eq_int_typeEjj($12, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) ^ 1) & 1;
  HEAP8[$8 >> 0] = $16;
  $$1 = $12;
 } else {
  if ($10) {
   $17 = $0 + 48 | 0;
   $19 = __ZNSt3__211char_traitsIwE12to_char_typeEj(HEAP32[$17 >> 2] | 0) | 0;
   HEAP32[$4 >> 2] = $19;
   $21 = HEAP32[$0 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$21 >> 2] | 0) + 12 >> 2] & 15]($21, HEAP32[$0 + 40 >> 2] | 0, $4, $4 + 4 | 0, $5, $2, $2 + 8 | 0, $3) | 0) {
   case 1:
   case 2:
    {
     label = 11;
     break;
    }
   case 3:
    {
     HEAP8[$2 >> 0] = HEAP32[$17 >> 2];
     HEAP32[$3 >> 2] = $2 + 1;
     label = 8;
     break;
    }
   default:
    label = 8;
   }
   L9 : do if ((label | 0) == 8) {
    $33 = $0 + 32 | 0;
    while (1) {
     $34 = HEAP32[$3 >> 2] | 0;
     if ($34 >>> 0 <= $2 >>> 0) {
      $$0 = 1;
      $$07 = 0;
      break L9;
     }
     $36 = $34 + -1 | 0;
     HEAP32[$3 >> 2] = $36;
     if ((_ungetc(HEAP8[$36 >> 0] | 0, HEAP32[$33 >> 2] | 0) | 0) == -1) {
      label = 11;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 11) {
    $$0 = 0;
    $$07 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   }
   if ($$0) $$pre$phiZ2D = $17; else {
    $$1 = $$07;
    break;
   }
  } else $$pre$phiZ2D = $0 + 48 | 0;
  HEAP32[$$pre$phiZ2D >> 2] = $1;
  HEAP8[$8 >> 0] = 1;
  $$1 = $1;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__210__stdinbufIcE9pbackfailEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$07 = 0, $$1 = 0, $$pre$phiZ2D = 0, $10 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $21 = 0, $3 = 0, $33 = 0, $34 = 0, $36 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 4 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 $7 = __ZNSt3__211char_traitsIcE11eq_int_typeEii($1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0;
 $8 = $0 + 52 | 0;
 $10 = (HEAP8[$8 >> 0] | 0) != 0;
 do if ($7) if ($10) $$1 = $1; else {
  $12 = HEAP32[$0 + 48 >> 2] | 0;
  $16 = ((__ZNSt3__211char_traitsIcE11eq_int_typeEii($12, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) ^ 1) & 1;
  HEAP8[$8 >> 0] = $16;
  $$1 = $12;
 } else {
  if ($10) {
   $17 = $0 + 48 | 0;
   $19 = __ZNSt3__211char_traitsIcE12to_char_typeEi(HEAP32[$17 >> 2] | 0) | 0;
   HEAP8[$4 >> 0] = $19;
   $21 = HEAP32[$0 + 36 >> 2] | 0;
   switch (FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$21 >> 2] | 0) + 12 >> 2] & 15]($21, HEAP32[$0 + 40 >> 2] | 0, $4, $4 + 1 | 0, $5, $2, $2 + 8 | 0, $3) | 0) {
   case 1:
   case 2:
    {
     label = 11;
     break;
    }
   case 3:
    {
     HEAP8[$2 >> 0] = HEAP32[$17 >> 2];
     HEAP32[$3 >> 2] = $2 + 1;
     label = 8;
     break;
    }
   default:
    label = 8;
   }
   L9 : do if ((label | 0) == 8) {
    $33 = $0 + 32 | 0;
    while (1) {
     $34 = HEAP32[$3 >> 2] | 0;
     if ($34 >>> 0 <= $2 >>> 0) {
      $$0 = 1;
      $$07 = 0;
      break L9;
     }
     $36 = $34 + -1 | 0;
     HEAP32[$3 >> 2] = $36;
     if ((_ungetc(HEAP8[$36 >> 0] | 0, HEAP32[$33 >> 2] | 0) | 0) == -1) {
      label = 11;
      break;
     }
    }
   } while (0);
   if ((label | 0) == 11) {
    $$0 = 0;
    $$07 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   }
   if ($$0) $$pre$phiZ2D = $17; else {
    $$1 = $$07;
    break;
   }
  } else $$pre$phiZ2D = $0 + 48 | 0;
  HEAP32[$$pre$phiZ2D >> 2] = $1;
  HEAP8[$8 >> 0] = 1;
  $$1 = $1;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function _fgets($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$05963 = 0, $$06065 = 0, $$06164 = 0, $$1 = 0, $11 = 0, $15 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $30 = 0, $32 = 0, $34 = 0, $35 = 0, $36 = 0, $43 = 0, $50 = 0, $51 = 0, $7 = 0, $9 = 0, label = 0;
 if ((HEAP32[$2 + 76 >> 2] | 0) > -1) $15 = ___lockfile($2) | 0; else $15 = 0;
 $7 = $1 + -1 | 0;
 if (($1 | 0) < 2) {
  $9 = $2 + 74 | 0;
  $11 = HEAP8[$9 >> 0] | 0;
  HEAP8[$9 >> 0] = $11 + 255 | $11;
  if ($15 | 0) ___unlockfile($2);
  if (!$7) {
   HEAP8[$0 >> 0] = 0;
   $$0 = $0;
  } else $$0 = 0;
 } else {
  L11 : do if (!$7) {
   $$1 = $0;
   label = 17;
  } else {
   $19 = $2 + 4 | 0;
   $20 = $2 + 8 | 0;
   $$06065 = $7;
   $$06164 = $0;
   while (1) {
    $21 = HEAP32[$19 >> 2] | 0;
    $23 = $21;
    $24 = (HEAP32[$20 >> 2] | 0) - $23 | 0;
    $25 = _memchr($21, 10, $24) | 0;
    $26 = ($25 | 0) == 0;
    $30 = $26 ? $24 : 1 - $23 + $25 | 0;
    $32 = $30 >>> 0 < $$06065 >>> 0 ? $30 : $$06065;
    _memcpy($$06164 | 0, $21 | 0, $32 | 0) | 0;
    $34 = (HEAP32[$19 >> 2] | 0) + $32 | 0;
    HEAP32[$19 >> 2] = $34;
    $35 = $$06164 + $32 | 0;
    $36 = $$06065 - $32 | 0;
    if (!($26 & ($36 | 0) != 0)) {
     $$1 = $35;
     label = 17;
     break L11;
    }
    if ($34 >>> 0 < (HEAP32[$20 >> 2] | 0) >>> 0) {
     HEAP32[$19 >> 2] = $34 + 1;
     $50 = HEAPU8[$34 >> 0] | 0;
    } else {
     $43 = ___uflow($2) | 0;
     if (($43 | 0) < 0) break; else $50 = $43;
    }
    $51 = $35 + 1 | 0;
    HEAP8[$35 >> 0] = $50;
    $$06065 = $36 + -1 | 0;
    if (($50 & 255 | 0) == 10 | ($$06065 | 0) == 0) {
     $$1 = $51;
     label = 17;
     break L11;
    } else $$06164 = $51;
   }
   if (($35 | 0) == ($0 | 0)) $$05963 = 0; else if (!(HEAP32[$2 >> 2] & 16)) $$05963 = 0; else {
    $$1 = $35;
    label = 17;
   }
  } while (0);
  if ((label | 0) == 17) if (!$0) $$05963 = 0; else {
   HEAP8[$$1 >> 0] = 0;
   $$05963 = $0;
  }
  if (!$15) $$0 = $$05963; else {
   ___unlockfile($2);
   $$0 = $$05963;
  }
 }
 return $$0 | 0;
}

function _addMultiMarker($id, $patt_name) {
 $id = $id | 0;
 $patt_name = $patt_name | 0;
 var $14 = 0, $15 = 0, $3 = 0, $9 = 0, $__end_$i8 = 0, $arMultiMarkerHandle = 0, $call7 = 0, $cond$i$i$i = 0, $id$addr = 0, $marker = 0, $multi_markers = 0, $retval$1 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp + 8 | 0;
 $id$addr = sp + 12 | 0;
 $marker = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  if ((HEAP8[$patt_name + 11 >> 0] | 0) < 0) $cond$i$i$i = HEAP32[$patt_name >> 2] | 0; else $cond$i$i$i = $patt_name;
  $arMultiMarkerHandle = $call7 + 224 | 0;
  if (!(__ZL15loadMultiMarkerPKcP8ARHandlePP12ARPattHandlePP18ARMultiMarkerInfoT($cond$i$i$i, HEAP32[$call7 + 216 >> 2] | 0, $call7 + 220 | 0, $arMultiMarkerHandle) | 0)) {
   _arLog(0, 3, 44223, $vararg_buffer);
   $retval$1 = -1;
   break;
  }
  $multi_markers = $call7 + 280 | 0;
  $__end_$i8 = $call7 + 284 | 0;
  $3 = HEAP32[$__end_$i8 >> 2] | 0;
  HEAP32[$marker >> 2] = $3 - (HEAP32[$multi_markers >> 2] | 0) >> 3;
  HEAP32[$marker + 4 >> 2] = HEAP32[$arMultiMarkerHandle >> 2];
  if ((HEAP32[$call7 + 288 >> 2] | 0) == ($3 | 0)) __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($multi_markers, $marker); else {
   $9 = $marker;
   $14 = HEAP32[$9 + 4 >> 2] | 0;
   $15 = $3;
   HEAP32[$15 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$15 + 4 >> 2] = $14;
   HEAP32[$__end_$i8 >> 2] = (HEAP32[$__end_$i8 >> 2] | 0) + 8;
  }
  $retval$1 = HEAP32[$marker >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis1IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0, $13 = 0, $15 = 0, $17 = 0.0, $18 = 0.0, $2 = 0, $20 = 0.0, $22 = 0.0, $24 = 0.0, $26 = 0.0, $28 = 0.0, $3 = 0, $30 = 0, $31 = 0, $34 = 0, $4 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 36 | 0;
 $4 = $1 + 36 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($3, $0, $4);
 $5 = $0 + 72 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($5, $0, $1 + 72 | 0);
 $7 = $0 + 108 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($7, $0, $1 + 108 | 0);
 $9 = $0 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($9, $0, $1 + 144 | 0);
 $11 = $0 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($11, $0, $1 + 180 | 0);
 $13 = $0 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($13, $0, $1 + 216 | 0);
 $15 = $0 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($15, $0, $1 + 252 | 0);
 $17 = +__ZN6vision11SumSquares9IfEET_PKS1_($3);
 HEAPF32[$2 >> 2] = $17;
 $18 = +__ZN6vision11SumSquares9IfEET_PKS1_($5);
 HEAPF32[$2 + 4 >> 2] = $18;
 $20 = +__ZN6vision11SumSquares9IfEET_PKS1_($7);
 HEAPF32[$2 + 8 >> 2] = $20;
 $22 = +__ZN6vision11SumSquares9IfEET_PKS1_($9);
 HEAPF32[$2 + 12 >> 2] = $22;
 $24 = +__ZN6vision11SumSquares9IfEET_PKS1_($11);
 HEAPF32[$2 + 16 >> 2] = $24;
 $26 = +__ZN6vision11SumSquares9IfEET_PKS1_($13);
 HEAPF32[$2 + 20 >> 2] = $26;
 $28 = +__ZN6vision11SumSquares9IfEET_PKS1_($15);
 HEAPF32[$2 + 24 >> 2] = $28;
 $30 = __ZN6vision9MaxIndex7IfEEiPKT_($2) | 0;
 $31 = $2 + ($30 << 2) | 0;
 if (+HEAPF32[$31 >> 2] == 0.0) $$0 = 0; else {
  $34 = $30 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_($3, $3 + ($34 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_($4, $4 + ($34 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($3, $3, 1.0 / +Math_sqrt(+(+HEAPF32[$31 >> 2])));
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision39HomographyPointsGeometricallyConsistentIfEEbPKT_S3_i($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$062 = 0, $$063 = 0, $$063$phi = 0, $$065 = 0, $$067 = 0, $$068 = 0, $$070 = 0, $$072 = 0, $$4 = 0, $10 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp + 32 | 0;
 $4 = sp + 24 | 0;
 $5 = sp + 16 | 0;
 $6 = sp + 8 | 0;
 $7 = sp;
 L1 : do if (($2 | 0) < 2) $$4 = 1; else {
  $9 = $1 + 8 | 0;
  $10 = $1 + 16 | 0;
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($3, $0, $1);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($4, $0, $9);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($5, $0, $10);
  __ZN6vision11CopyVector2IfEEvPT_PKS1_($6, $3);
  __ZN6vision11CopyVector2IfEEvPT_PKS1_($7, $4);
  if (__ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_($1, $9, $10, $3, $4, $5) | 0) {
   $$062 = 3;
   $$063 = $5;
   $$065 = $4;
   $$067 = $3;
   $$068 = $10;
   $$070 = $9;
   $$072 = $1;
   while (1) {
    if (($$062 | 0) >= ($2 | 0)) break;
    $$072 = $$072 + 8 | 0;
    $14 = $$070 + 8 | 0;
    $15 = $$068 + 8 | 0;
    __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($$067, $0, $15);
    if (!(__ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_($$072, $14, $15, $$065, $$063, $$067) | 0)) {
     $$4 = 0;
     break L1;
    } else {
     $$063$phi = $$067;
     $$062 = $$062 + 1 | 0;
     $$068 = $15;
     $$070 = $14;
     $$067 = $$065;
     $$065 = $$063;
     $$063 = $$063$phi;
    }
   }
   if (__ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_($$070, $$068, $1, $$065, $$063, $6) | 0) $$4 = __ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_($$068, $1, $9, $$063, $6, $7) | 0; else $$4 = 0;
  } else $$4 = 0;
 } while (0);
 STACKTOP = sp;
 return $$4 | 0;
}

function _arGetTransMatSquare($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 $3 = $3 | 0;
 var $$0 = 0, $$0$in = 0, $$031 = 0.0, $19 = 0, $26 = 0, $34 = 0, $4 = 0, $42 = 0, $49 = 0.0, $5 = 0, $50 = 0.0, $6 = 0, $69 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $4 = sp + 192 | 0;
 $5 = sp + 96 | 0;
 $6 = sp + 264 | 0;
 $7 = sp;
 $8 = sp + 256 | 0;
 do if ((HEAP32[$1 + 12 >> 2] | 0) < 0) $$0$in = $1 + 20 | 0; else if ((HEAP32[$1 + 8 >> 2] | 0) < 0) {
  $$0$in = $1 + 24 | 0;
  break;
 } else {
  $$0$in = $1 + 16 | 0;
  break;
 } while (0);
 $$0 = HEAP32[$$0$in >> 2] | 0;
 $19 = (4 - $$0 | 0) % 4 | 0;
 HEAPF64[$4 >> 3] = +HEAPF64[$1 + 168 + ($19 << 4) >> 3];
 HEAPF64[$4 + 8 >> 3] = +HEAPF64[$1 + 168 + ($19 << 4) + 8 >> 3];
 $26 = (5 - $$0 | 0) % 4 | 0;
 HEAPF64[$4 + 16 >> 3] = +HEAPF64[$1 + 168 + ($26 << 4) >> 3];
 HEAPF64[$4 + 24 >> 3] = +HEAPF64[$1 + 168 + ($26 << 4) + 8 >> 3];
 $34 = (6 - $$0 | 0) % 4 | 0;
 HEAPF64[$4 + 32 >> 3] = +HEAPF64[$1 + 168 + ($34 << 4) >> 3];
 HEAPF64[$4 + 40 >> 3] = +HEAPF64[$1 + 168 + ($34 << 4) + 8 >> 3];
 $42 = (7 - $$0 | 0) % 4 | 0;
 HEAPF64[$4 + 48 >> 3] = +HEAPF64[$1 + 168 + ($42 << 4) >> 3];
 HEAPF64[$4 + 56 >> 3] = +HEAPF64[$1 + 168 + ($42 << 4) + 8 >> 3];
 $49 = $2 * -.5;
 HEAPF64[$5 >> 3] = $49;
 $50 = $2 * .5;
 HEAPF64[$5 + 8 >> 3] = $50;
 HEAPF64[$5 + 16 >> 3] = 0.0;
 HEAPF64[$5 + 24 >> 3] = $50;
 HEAPF64[$5 + 32 >> 3] = $50;
 HEAPF64[$5 + 40 >> 3] = 0.0;
 HEAPF64[$5 + 48 >> 3] = $50;
 HEAPF64[$5 + 56 >> 3] = $49;
 HEAPF64[$5 + 64 >> 3] = 0.0;
 HEAPF64[$5 + 72 >> 3] = $49;
 HEAPF64[$5 + 80 >> 3] = $49;
 HEAPF64[$5 + 88 >> 3] = 0.0;
 HEAP32[$6 >> 2] = $4;
 HEAP32[$6 + 4 >> 2] = $5;
 HEAP32[$6 + 8 >> 2] = 4;
 if ((_icpGetInitXw2Xc_from_PlanarData(HEAP32[$0 >> 2] | 0, $4, $5, 4, $7) | 0) < 0) $$031 = 1.0e8; else {
  $69 = (_icpPoint(HEAP32[$0 >> 2] | 0, $6, $7, $3, $8) | 0) < 0;
  $$031 = $69 ? 1.0e8 : +HEAPF64[$8 >> 3];
 }
 STACKTOP = sp;
 return +$$031;
}

function _median_cut($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$072 = 0, $$sink2 = 0, $$sink3 = 0, $10 = 0, $13 = 0, $16 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $31 = 0, $33 = 0, $34 = 0, $35 = 0, $38 = 0, $42 = 0, $44 = 0, $46 = 0, $9 = 0, label = 0;
 $$0 = 1;
 while (1) {
  if (($$0 | 0) >= ($2 | 0)) break;
  if (($$0 << 1 | 0) > ($2 | 0)) $$072 = _find_biggest_volume($1, $$0) | 0; else $$072 = _find_biggest_color_pop($1, $$0) | 0;
  if (!$$072) break;
  $9 = $1 + ($$0 << 5) | 0;
  $10 = $$072 + 4 | 0;
  HEAP32[$1 + ($$0 << 5) + 4 >> 2] = HEAP32[$10 >> 2];
  $13 = $$072 + 12 | 0;
  HEAP32[$1 + ($$0 << 5) + 12 >> 2] = HEAP32[$13 >> 2];
  $16 = $$072 + 20 | 0;
  HEAP32[$1 + ($$0 << 5) + 20 >> 2] = HEAP32[$16 >> 2];
  HEAP32[$9 >> 2] = HEAP32[$$072 >> 2];
  $20 = $$072 + 8 | 0;
  $22 = $1 + ($$0 << 5) + 8 | 0;
  HEAP32[$22 >> 2] = HEAP32[$20 >> 2];
  $23 = $$072 + 16 | 0;
  $25 = $1 + ($$0 << 5) + 16 | 0;
  HEAP32[$25 >> 2] = HEAP32[$23 >> 2];
  $26 = HEAP32[$10 >> 2] | 0;
  $27 = HEAP32[$$072 >> 2] | 0;
  $29 = $26 - $27 << 4;
  $30 = HEAP32[$13 >> 2] | 0;
  $31 = HEAP32[$20 >> 2] | 0;
  $33 = ($30 - $31 | 0) * 12 | 0;
  $34 = HEAP32[$16 >> 2] | 0;
  $35 = HEAP32[$23 >> 2] | 0;
  $38 = ($29 | 0) > ($33 | 0);
  switch ((($34 - $35 << 3 | 0) > (($38 ? $29 : $33) | 0) ? 2 : ($38 ^ 1) & 1) & 3) {
  case 0:
   {
    $42 = ($27 + $26 | 0) / 2 | 0;
    HEAP32[$10 >> 2] = $42;
    $$sink2 = $9;
    $$sink3 = $42;
    label = 11;
    break;
   }
  case 1:
   {
    $44 = ($31 + $30 | 0) / 2 | 0;
    HEAP32[$13 >> 2] = $44;
    $$sink2 = $22;
    $$sink3 = $44;
    label = 11;
    break;
   }
  case 2:
   {
    $46 = ($35 + $34 | 0) / 2 | 0;
    HEAP32[$16 >> 2] = $46;
    $$sink2 = $25;
    $$sink3 = $46;
    label = 11;
    break;
   }
  default:
   {}
  }
  if ((label | 0) == 11) {
   label = 0;
   HEAP32[$$sink2 >> 2] = $$sink3 + 1;
  }
  _update_box($0, $$072);
  _update_box($0, $9);
  $$0 = $$0 + 1 | 0;
 }
 return $$0 | 0;
}

function _EV_create($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$071 = 0, $$072 = 0, $$074 = 0, $$075 = 0, $$077 = 0, $$078 = 0.0, $$079 = 0, $$1 = 0, $$173 = 0, $$176 = 0, $$2 = 0, $$3 = 0, $29 = 0.0, $33 = 0.0, $34 = 0, $42 = 0.0, $5 = 0, $7 = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $7 = HEAP32[$0 + 8 >> 2] | 0;
 L1 : do if (($5 | 0) < 1 | ($7 | 0) < 1) $$074 = -1; else if ((HEAP32[$1 + 4 >> 2] | 0) == ($5 | 0)) if ((HEAP32[$1 + 8 >> 2] | 0) == ($5 | 0)) if ((HEAP32[$2 + 4 >> 2] | 0) == ($5 | 0)) if ((HEAP32[$2 + 8 >> 2] | 0) == ($7 | 0)) if ((HEAP32[$3 + 4 >> 2] | 0) == ($5 | 0)) {
  $$072 = 0;
  $$075 = HEAP32[$2 >> 2] | 0;
  while (1) {
   if (($$072 | 0) >= ($5 | 0)) break;
   $29 = +HEAPF64[(HEAP32[$3 >> 2] | 0) + ($$072 << 3) >> 3];
   if ($29 < 1.0e-16) break;
   $33 = 1.0 / +Math_sqrt(+(+Math_abs(+$29)));
   $34 = Math_imul($$072, $5) | 0;
   $$071 = 0;
   $$176 = $$075;
   while (1) {
    if (($$071 | 0) == ($7 | 0)) break;
    $$0 = 0;
    $$077 = (HEAP32[$1 >> 2] | 0) + ($34 << 3) | 0;
    $$078 = 0.0;
    $$079 = (HEAP32[$0 >> 2] | 0) + ($$071 << 3) | 0;
    while (1) {
     if (($$0 | 0) == ($5 | 0)) break;
     $42 = $$078 + +HEAPF64[$$077 >> 3] * +HEAPF64[$$079 >> 3];
     $$0 = $$0 + 1 | 0;
     $$077 = $$077 + 8 | 0;
     $$078 = $42;
     $$079 = $$079 + ($7 << 3) | 0;
    }
    HEAPF64[$$176 >> 3] = $33 * $$078;
    $$071 = $$071 + 1 | 0;
    $$176 = $$176 + 8 | 0;
   }
   $$072 = $$072 + 1 | 0;
   $$075 = $$075 + ($7 << 3) | 0;
  }
  $$173 = $$072;
  $$2 = $$075;
  while (1) {
   if (($$173 | 0) >= ($5 | 0)) {
    $$074 = 0;
    break L1;
   }
   HEAPF64[(HEAP32[$3 >> 2] | 0) + ($$173 << 3) >> 3] = 0.0;
   $$1 = 0;
   $$3 = $$2;
   while (1) {
    if (($$1 | 0) >= ($7 | 0)) break;
    HEAPF64[$$3 >> 3] = 0.0;
    $$1 = $$1 + 1 | 0;
    $$3 = $$3 + 8 | 0;
   }
   $$173 = $$173 + 1 | 0;
   $$2 = $$3;
  }
 } else $$074 = -1; else $$074 = -1; else $$074 = -1; else $$074 = -1; else $$074 = -1; while (0);
 return $$074 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_arrow_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$idx$i = 0, $$3 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $26 = 0, $3 = 0, $33 = 0, $34 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 112) if ((HEAP8[$0 + 1 >> 0] | 0) == 116) {
  $13 = $0 + 2 | 0;
  $14 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
  if (($14 | 0) == ($13 | 0)) $$3 = $0; else {
   $16 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0;
   if (($16 | 0) == ($14 | 0)) $$3 = $0; else {
    $18 = $2 + 4 | 0;
    $19 = HEAP32[$18 >> 2] | 0;
    if ((($19 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$3 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $19 + -24 | 0);
     $26 = HEAP32[$18 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($26 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$18 >> 2] = $26 + -24;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($26 + -48 | 0, 49899) | 0;
     $33 = HEAP8[$3 + 11 >> 0] | 0;
     $34 = $33 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm((HEAP32[$18 >> 2] | 0) + -24 | 0, $34 ? HEAP32[$3 >> 2] | 0 : $3, $34 ? HEAP32[$3 + 4 >> 2] | 0 : $33 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $16;
    }
   }
  }
 } else $$3 = $0; else $$3 = $0; else $$3 = $0;
 STACKTOP = sp;
 return $$3 | 0;
}

function _smoothing_ok($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$049 = 0, $$050 = 0, $$051 = 0, $$052 = 0, $$053 = 0, $$1 = 0, $$pre$phiZ2D = 0, $10 = 0, $15 = 0, $18 = 0, $2 = 0, $24 = 0, $43 = 0, $47 = 0, $56 = 0, $6 = 0, $9 = 0;
 $2 = HEAP32[$0 + 428 >> 2] | 0;
 L1 : do if (!(HEAP32[$0 + 220 >> 2] | 0)) $$049 = 0; else {
  $6 = $0 + 160 | 0;
  if (!(HEAP32[$6 >> 2] | 0)) $$049 = 0; else {
   $9 = $2 + 112 | 0;
   $10 = HEAP32[$9 >> 2] | 0;
   if (!$10) {
    $15 = $0 + 36 | 0;
    $18 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, (HEAP32[$15 >> 2] | 0) * 24 | 0) | 0;
    HEAP32[$9 >> 2] = $18;
    $$pre$phiZ2D = $15;
    $56 = $18;
   } else {
    $$pre$phiZ2D = $0 + 36 | 0;
    $56 = $10;
   }
   $$0 = $56;
   $$050 = 0;
   $$051 = HEAP32[$0 + 216 >> 2] | 0;
   $$053 = 0;
   while (1) {
    if (($$053 | 0) >= (HEAP32[$$pre$phiZ2D >> 2] | 0)) {
     $$049 = $$050;
     break L1;
    }
    $24 = HEAP32[$$051 + 76 >> 2] | 0;
    if (!$24) {
     $$049 = 0;
     break L1;
    }
    if (!(HEAP16[$24 >> 1] | 0)) {
     $$049 = 0;
     break L1;
    }
    if (!(HEAP16[$24 + 2 >> 1] | 0)) {
     $$049 = 0;
     break L1;
    }
    if (!(HEAP16[$24 + 16 >> 1] | 0)) {
     $$049 = 0;
     break L1;
    }
    if (!(HEAP16[$24 + 32 >> 1] | 0)) {
     $$049 = 0;
     break L1;
    }
    if (!(HEAP16[$24 + 18 >> 1] | 0)) {
     $$049 = 0;
     break L1;
    }
    if (!(HEAP16[$24 + 4 >> 1] | 0)) {
     $$049 = 0;
     break L1;
    }
    $43 = HEAP32[$6 >> 2] | 0;
    if ((HEAP32[$43 + ($$053 << 8) >> 2] | 0) < 0) {
     $$049 = 0;
     break L1;
    }
    $$052 = 1;
    $$1 = $$050;
    while (1) {
     if (($$052 | 0) == 6) break;
     $47 = $43 + ($$053 << 8) + ($$052 << 2) | 0;
     HEAP32[$$0 + ($$052 << 2) >> 2] = HEAP32[$47 >> 2];
     $$052 = $$052 + 1 | 0;
     $$1 = (HEAP32[$47 >> 2] | 0) == 0 ? $$1 : 1;
    }
    $$0 = $$0 + 24 | 0;
    $$050 = $$1;
    $$051 = $$051 + 84 | 0;
    $$053 = $$053 + 1 | 0;
   }
  }
 } while (0);
 return $$049 | 0;
}

function _prepare_for_output_pass($0) {
 $0 = $0 | 0;
 var $15 = 0, $2 = 0, $3 = 0, $36 = 0, $74 = 0, $77 = 0, $82 = 0, $83 = 0;
 $2 = HEAP32[$0 + 420 >> 2] | 0;
 $3 = $2 + 8 | 0;
 if (!(HEAP32[$3 >> 2] | 0)) {
  $15 = $0 + 84 | 0;
  do if (HEAP32[$15 >> 2] | 0) if (!(HEAP32[$0 + 136 >> 2] | 0)) {
   if (HEAP32[$0 + 92 >> 2] | 0) if (HEAP32[$0 + 108 >> 2] | 0) {
    HEAP32[$0 + 460 >> 2] = HEAP32[$2 + 24 >> 2];
    HEAP32[$3 >> 2] = 1;
    break;
   }
   if (!(HEAP32[$0 + 100 >> 2] | 0)) {
    $36 = HEAP32[$0 >> 2] | 0;
    HEAP32[$36 + 20 >> 2] = 46;
    FUNCTION_TABLE_vi[HEAP32[$36 >> 2] & 255]($0);
    break;
   } else {
    HEAP32[$0 + 460 >> 2] = HEAP32[$2 + 20 >> 2];
    break;
   }
  } while (0);
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 + 448 >> 2] >> 2] & 255]($0);
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 428 >> 2] | 0) + 8 >> 2] & 255]($0);
  if (!(HEAP32[$0 + 68 >> 2] | 0)) {
   if (!(HEAP32[$2 + 16 >> 2] | 0)) FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 + 456 >> 2] >> 2] & 255]($0);
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 + 452 >> 2] >> 2] & 255]($0);
   if (HEAP32[$15 >> 2] | 0) FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 460 >> 2] >> 2] & 63]($0, HEAP32[$3 >> 2] | 0);
   FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 432 >> 2] >> 2] & 63]($0, (HEAP32[$3 >> 2] | 0) == 0 ? 0 : 3);
   FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 424 >> 2] >> 2] & 63]($0, 0);
  }
 } else {
  HEAP32[$3 >> 2] = 0;
  FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 460 >> 2] >> 2] & 63]($0, 0);
  FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 432 >> 2] >> 2] & 63]($0, 2);
  FUNCTION_TABLE_vii[HEAP32[HEAP32[$0 + 424 >> 2] >> 2] & 63]($0, 2);
 }
 $74 = HEAP32[$0 + 8 >> 2] | 0;
 if ($74 | 0) {
  $77 = HEAP32[$2 + 12 >> 2] | 0;
  HEAP32[$74 + 12 >> 2] = $77;
  $82 = ((HEAP32[$3 >> 2] | 0) == 0 ? 1 : 2) + $77 | 0;
  $83 = $74 + 16 | 0;
  HEAP32[$83 >> 2] = $82;
  if (HEAP32[$0 + 64 >> 2] | 0) if (!(HEAP32[(HEAP32[$0 + 436 >> 2] | 0) + 20 >> 2] | 0)) HEAP32[$83 >> 2] = ((HEAP32[$0 + 108 >> 2] | 0) == 0 ? 1 : 2) + $82;
 }
 return;
}

function __ZN6vision11FindInliersERNSt3__26vectorINS_7match_tENS0_9allocatorIS2_EEEEPKfRKNS1_INS_12FeaturePointENS3_IS9_EEEESD_RKS5_f($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 var $$0 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $23 = 0, $24 = 0, $37 = 0.0, $50 = 0, $51 = 0, $54 = 0, $59 = 0, $6 = 0, $60 = 0, $7 = 0.0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 $7 = +__ZN6vision3sqrIfEET_S1_($5);
 $8 = $4 + 4 | 0;
 __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm($0, (HEAP32[$8 >> 2] | 0) - (HEAP32[$4 >> 2] | 0) >> 3);
 $13 = $6 + 4 | 0;
 $14 = $0 + 4 | 0;
 $15 = $0 + 8 | 0;
 $$0 = 0;
 while (1) {
  $17 = HEAP32[$4 >> 2] | 0;
  if ($$0 >>> 0 >= (HEAP32[$8 >> 2] | 0) - $17 >> 3 >>> 0) break;
  $23 = HEAP32[$17 + ($$0 << 3) + 4 >> 2] | 0;
  $24 = HEAP32[$3 >> 2] | 0;
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvRT_S2_PKS1_S1_S1_($6, $13, $1, +HEAPF32[$24 + ($23 * 20 | 0) >> 2], +HEAPF32[$24 + ($23 * 20 | 0) + 4 >> 2]);
  $37 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$6 >> 2] - +HEAPF32[(HEAP32[$2 >> 2] | 0) + ((HEAP32[(HEAP32[$4 >> 2] | 0) + ($$0 << 3) >> 2] | 0) * 20 | 0) >> 2]);
  do if ($37 + +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$13 >> 2] - +HEAPF32[(HEAP32[$2 >> 2] | 0) + ((HEAP32[(HEAP32[$4 >> 2] | 0) + ($$0 << 3) >> 2] | 0) * 20 | 0) + 4 >> 2]) <= $7) {
   $50 = (HEAP32[$4 >> 2] | 0) + ($$0 << 3) | 0;
   $51 = HEAP32[$14 >> 2] | 0;
   if (($51 | 0) == (HEAP32[$15 >> 2] | 0)) {
    __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0, $50);
    break;
   } else {
    $54 = $50;
    $59 = HEAP32[$54 + 4 >> 2] | 0;
    $60 = $51;
    HEAP32[$60 >> 2] = HEAP32[$54 >> 2];
    HEAP32[$60 + 4 >> 2] = $59;
    HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 8;
    break;
   }
  } while (0);
  $$0 = $$0 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__stdoutbufIwE8overflowEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$032 = 0, $$4 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $28 = 0, $3 = 0, $38 = 0, $4 = 0, $5 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 do if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($1, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) label = 15; else {
  $8 = __ZNSt3__211char_traitsIwE12to_char_typeEj($1) | 0;
  HEAP32[$3 >> 2] = $8;
  if (HEAP8[$0 + 44 >> 0] | 0) {
   if ((_fwrite($3, 4, 1, HEAP32[$0 + 32 >> 2] | 0) | 0) == 1) {
    label = 15;
    break;
   }
   $$4 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   break;
  }
  HEAP32[$4 >> 2] = $2;
  $17 = $3 + 4 | 0;
  $18 = $0 + 36 | 0;
  $19 = $0 + 40 | 0;
  $20 = $2 + 8 | 0;
  $21 = $2;
  $22 = $0 + 32 | 0;
  $$032 = $3;
  while (1) {
   $23 = HEAP32[$18 >> 2] | 0;
   $28 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$23 >> 2] | 0) + 12 >> 2] & 15]($23, HEAP32[$19 >> 2] | 0, $$032, $17, $5, $2, $20, $4) | 0;
   if ((HEAP32[$5 >> 2] | 0) == ($$032 | 0)) {
    label = 14;
    break;
   }
   if (($28 | 0) == 3) {
    label = 8;
    break;
   }
   if ($28 >>> 0 >= 2) {
    label = 14;
    break;
   }
   $38 = (HEAP32[$4 >> 2] | 0) - $21 | 0;
   if ((_fwrite($2, 1, $38, HEAP32[$22 >> 2] | 0) | 0) != ($38 | 0)) {
    label = 14;
    break;
   }
   if (($28 | 0) == 1) $$032 = HEAP32[$5 >> 2] | 0; else {
    label = 13;
    break;
   }
  }
  if ((label | 0) == 8) if ((_fwrite($$032, 1, 1, HEAP32[$22 >> 2] | 0) | 0) == 1) label = 13; else label = 14;
  if ((label | 0) == 13) {
   label = 15;
   break;
  } else if ((label | 0) == 14) {
   $$4 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
   break;
  }
 } while (0);
 if ((label | 0) == 15) $$4 = __ZNSt3__211char_traitsIwE7not_eofEj($1) | 0;
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZNSt3__211__stdoutbufIcE8overflowEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$032 = 0, $$4 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $28 = 0, $3 = 0, $38 = 0, $4 = 0, $5 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 16 | 0;
 $3 = sp + 8 | 0;
 $4 = sp + 4 | 0;
 $5 = sp;
 do if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($1, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) label = 15; else {
  $8 = __ZNSt3__211char_traitsIcE12to_char_typeEi($1) | 0;
  HEAP8[$3 >> 0] = $8;
  if (HEAP8[$0 + 44 >> 0] | 0) {
   if ((_fwrite($3, 1, 1, HEAP32[$0 + 32 >> 2] | 0) | 0) == 1) {
    label = 15;
    break;
   }
   $$4 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   break;
  }
  HEAP32[$4 >> 2] = $2;
  $17 = $3 + 1 | 0;
  $18 = $0 + 36 | 0;
  $19 = $0 + 40 | 0;
  $20 = $2 + 8 | 0;
  $21 = $2;
  $22 = $0 + 32 | 0;
  $$032 = $3;
  while (1) {
   $23 = HEAP32[$18 >> 2] | 0;
   $28 = FUNCTION_TABLE_iiiiiiiii[HEAP32[(HEAP32[$23 >> 2] | 0) + 12 >> 2] & 15]($23, HEAP32[$19 >> 2] | 0, $$032, $17, $5, $2, $20, $4) | 0;
   if ((HEAP32[$5 >> 2] | 0) == ($$032 | 0)) {
    label = 14;
    break;
   }
   if (($28 | 0) == 3) {
    label = 8;
    break;
   }
   if ($28 >>> 0 >= 2) {
    label = 14;
    break;
   }
   $38 = (HEAP32[$4 >> 2] | 0) - $21 | 0;
   if ((_fwrite($2, 1, $38, HEAP32[$22 >> 2] | 0) | 0) != ($38 | 0)) {
    label = 14;
    break;
   }
   if (($28 | 0) == 1) $$032 = HEAP32[$5 >> 2] | 0; else {
    label = 13;
    break;
   }
  }
  if ((label | 0) == 8) if ((_fwrite($$032, 1, 1, HEAP32[$22 >> 2] | 0) | 0) == 1) label = 13; else label = 14;
  if ((label | 0) == 13) {
   label = 15;
   break;
  } else if ((label | 0) == 14) {
   $$4 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
   break;
  }
 } while (0);
 if ((label | 0) == 15) $$4 = __ZNSt3__211char_traitsIcE7not_eofEi($1) | 0;
 STACKTOP = sp;
 return $$4 | 0;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJRNS2_5arenaILm4096EEEEEEvDpOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 20 | 0;
 $3 = sp;
 $4 = $0 + 4 | 0;
 $9 = ((HEAP32[$4 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 4) + 1 | 0;
 $10 = __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE8max_sizeEv($0) | 0;
 if ($10 >>> 0 < $9 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $15 = HEAP32[$0 >> 2] | 0;
  $16 = (HEAP32[$0 + 8 >> 2] | 0) - $15 | 0;
  $20 = $16 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEEC2EmmSB_($3, $16 >> 4 >>> 0 < $10 >>> 1 >>> 0 ? ($20 >>> 0 < $9 >>> 0 ? $9 : $20) : $10, (HEAP32[$4 >> 2] | 0) - $15 >> 4, $0 + 12 | 0);
  $25 = $3 + 8 | 0;
  $26 = HEAP32[$25 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE($2, $1);
  HEAP32[$26 >> 2] = 0;
  HEAP32[$26 + 4 >> 2] = 0;
  HEAP32[$26 + 8 >> 2] = 0;
  HEAP32[$26 + 12 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$25 >> 2] = $26 + 16;
  __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($0, $3);
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE21__push_back_slow_pathIS6_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $32 = 0, $34 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 4) + 1 | 0;
 $9 = __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEEC2EmmS9_($2, $15 >> 4 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 4, $0 + 12 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  HEAP32[$25 >> 2] = 0;
  $27 = $25 + 4 | 0;
  HEAP32[$27 >> 2] = 0;
  $28 = $25 + 8 | 0;
  HEAP32[$28 >> 2] = 0;
  HEAP32[$25 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
  HEAP32[$25 >> 2] = HEAP32[$1 >> 2];
  $32 = $1 + 4 | 0;
  HEAP32[$27 >> 2] = HEAP32[$32 >> 2];
  $34 = $1 + 8 | 0;
  HEAP32[$28 >> 2] = HEAP32[$34 >> 2];
  HEAP32[$34 >> 2] = 0;
  HEAP32[$32 >> 2] = 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$24 >> 2] = $25 + 16;
  __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($0, $2);
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $15 = 0, $16 = 0, $2 = 0, $20 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp + 20 | 0;
 $3 = sp;
 $4 = $0 + 4 | 0;
 $9 = ((HEAP32[$4 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 4) + 1 | 0;
 $10 = __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE8max_sizeEv($0) | 0;
 if ($10 >>> 0 < $9 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $15 = HEAP32[$0 >> 2] | 0;
  $16 = (HEAP32[$0 + 8 >> 2] | 0) - $15 | 0;
  $20 = $16 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEEC2EmmSB_($3, $16 >> 4 >>> 0 < $10 >>> 1 >>> 0 ? ($20 >>> 0 < $9 >>> 0 ? $9 : $20) : $10, (HEAP32[$4 >> 2] | 0) - $15 >> 4, $0 + 12 | 0);
  $25 = $3 + 8 | 0;
  $26 = HEAP32[$25 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2IS4_EERKNS1_IT_Lm4096EEE($2, $1);
  HEAP32[$26 >> 2] = 0;
  HEAP32[$26 + 4 >> 2] = 0;
  HEAP32[$26 + 8 >> 2] = 0;
  HEAP32[$26 + 12 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$25 >> 2] = $26 + 16;
  __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($0, $3);
  __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEED2Ev($3);
  STACKTOP = sp;
  return;
 }
}

function _get_dri($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$057 = 0, $$061 = 0, $$1 = 0, $$158 = 0, $$2 = 0, $$259 = 0, $$3 = 0, $$360 = 0, $11 = 0, $12 = 0, $15 = 0, $2 = 0, $23 = 0, $24 = 0, $29 = 0, $3 = 0, $39 = 0, $4 = 0, $40 = 0, $43 = 0, $55 = 0, $56 = 0, label = 0;
 $2 = HEAP32[$0 + 24 >> 2] | 0;
 $3 = $2 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) $$061 = 0; else {
  $$0 = HEAP32[$3 >> 2] | 0;
  label = 4;
 } else {
  $$0 = $4;
  label = 4;
 }
 do if ((label | 0) == 4) {
  $$057 = HEAP32[$2 >> 2] | 0;
  $11 = $$0 + -1 | 0;
  $12 = $$057 + 1 | 0;
  $15 = (HEAPU8[$$057 >> 0] | 0) << 8;
  if (!$11) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) {
    $$061 = 0;
    break;
   }
   $$1 = HEAP32[$3 >> 2] | 0;
   $$158 = HEAP32[$2 >> 2] | 0;
  } else {
   $$1 = $11;
   $$158 = $12;
  }
  $23 = $$1 + -1 | 0;
  $24 = $$158 + 1 | 0;
  if (($15 | (HEAPU8[$$158 >> 0] | 0) | 0) != 4) {
   $29 = HEAP32[$0 >> 2] | 0;
   HEAP32[$29 + 20 >> 2] = 11;
   FUNCTION_TABLE_vi[HEAP32[$29 >> 2] & 255]($0);
  }
  if (!$23) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) {
    $$061 = 0;
    break;
   }
   $$2 = HEAP32[$3 >> 2] | 0;
   $$259 = HEAP32[$2 >> 2] | 0;
  } else {
   $$2 = $23;
   $$259 = $24;
  }
  $39 = $$2 + -1 | 0;
  $40 = $$259 + 1 | 0;
  $43 = (HEAPU8[$$259 >> 0] | 0) << 8;
  if (!$39) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) {
    $$061 = 0;
    break;
   }
   $$3 = HEAP32[$3 >> 2] | 0;
   $$360 = HEAP32[$2 >> 2] | 0;
  } else {
   $$3 = $39;
   $$360 = $40;
  }
  $55 = $43 | (HEAPU8[$$360 >> 0] | 0);
  $56 = HEAP32[$0 >> 2] | 0;
  HEAP32[$56 + 20 >> 2] = 82;
  HEAP32[$56 + 24 >> 2] = $55;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
  HEAP32[$0 + 276 >> 2] = $55;
  HEAP32[$2 >> 2] = $$360 + 1;
  HEAP32[$3 >> 2] = $$3 + -1;
  $$061 = 1;
 } while (0);
 return $$061 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$037$off038 = 0, $13 = 0, $19 = 0, $22 = 0, $23 = 0, $25 = 0, $33 = 0, $43 = 0, $45 = 0, label = 0;
 do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $4) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, $1, $2, $3); else {
  if (!(__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 >> 2] | 0, $4) | 0)) {
   $45 = HEAP32[$0 + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$45 >> 2] | 0) + 24 >> 2] & 31]($45, $1, $2, $3, $4);
   break;
  }
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0)) {
   $13 = $1 + 20 | 0;
   if ((HEAP32[$13 >> 2] | 0) != ($2 | 0)) {
    HEAP32[$1 + 32 >> 2] = $3;
    $19 = $1 + 44 | 0;
    if ((HEAP32[$19 >> 2] | 0) == 4) break;
    $22 = $1 + 52 | 0;
    HEAP8[$22 >> 0] = 0;
    $23 = $1 + 53 | 0;
    HEAP8[$23 >> 0] = 0;
    $25 = HEAP32[$0 + 8 >> 2] | 0;
    FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$25 >> 2] | 0) + 20 >> 2] & 7]($25, $1, $2, $2, 1, $4);
    if (!(HEAP8[$23 >> 0] | 0)) {
     $$037$off038 = 0;
     label = 11;
    } else if (!(HEAP8[$22 >> 0] | 0)) {
     $$037$off038 = 1;
     label = 11;
    } else label = 15;
    do if ((label | 0) == 11) {
     HEAP32[$13 >> 2] = $2;
     $33 = $1 + 40 | 0;
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
     if ((HEAP32[$1 + 36 >> 2] | 0) == 1) if ((HEAP32[$1 + 24 >> 2] | 0) == 2) {
      HEAP8[$1 + 54 >> 0] = 1;
      if ($$037$off038) {
       label = 15;
       break;
      } else {
       $43 = 4;
       break;
      }
     }
     if ($$037$off038) label = 15; else $43 = 4;
    } while (0);
    if ((label | 0) == 15) $43 = 3;
    HEAP32[$19 >> 2] = $43;
    break;
   }
  }
  if (($3 | 0) == 1) HEAP32[$1 + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE11addKeyframeENSt3__210shared_ptrINS_8KeyframeILi96EEEEEi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $16 = 0, $20 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp + 4 | 0;
 $4 = sp;
 HEAP32[$4 >> 2] = $2;
 $5 = $0 + 72 | 0;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_($5, $4) | 0) {
  $8 = ___cxa_allocate_exception(16) | 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$3 + 4 >> 2] = 0;
  HEAP32[$3 + 8 >> 2] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($3, 27181, __ZNSt3__211char_traitsIcE6lengthEPKc(27181) | 0);
  __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($8, $3);
  ___cxa_throw($8 | 0, 11016, 5);
 }
 $10 = __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEEixERSC_($5, $4) | 0;
 $11 = HEAP32[$1 >> 2] | 0;
 HEAP32[$3 >> 2] = $11;
 $12 = $3 + 4 | 0;
 $14 = HEAP32[$1 + 4 >> 2] | 0;
 HEAP32[$12 >> 2] = $14;
 if (!$14) {
  $$pre$phi$iZ2D = $12;
  $22 = 0;
 } else {
  $16 = $14 + 4 | 0;
  HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 1;
  $$pre$phi$iZ2D = $12;
  $22 = HEAP32[$12 >> 2] | 0;
 }
 HEAP32[$3 >> 2] = HEAP32[$10 >> 2];
 HEAP32[$10 >> 2] = $11;
 $20 = $10 + 4 | 0;
 HEAP32[$$pre$phi$iZ2D >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $22;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function _icpGetJ_T_S($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $13 = 0, $15 = 0, $17 = 0, $2 = 0, $5 = 0, $7 = 0, $9 = 0, dest = 0, stop = 0;
 $1 = $0 + 64 | 0;
 dest = $0;
 stop = dest + 64 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$1 >> 3] = -1.0;
 $2 = $0 + 72 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP32[$2 + 24 >> 2] = 0;
 HEAP32[$2 + 28 >> 2] = 0;
 HEAPF64[$0 + 104 >> 3] = 1.0;
 $5 = $0 + 160 | 0;
 dest = $0 + 112 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$5 >> 3] = 1.0;
 $7 = $0 + 240 | 0;
 dest = $0 + 168 | 0;
 stop = dest + 72 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$7 >> 3] = -1.0;
 $9 = $0 + 296 | 0;
 dest = $0 + 248 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$9 >> 3] = -1.0;
 $10 = $0 + 304 | 0;
 HEAP32[$10 >> 2] = 0;
 HEAP32[$10 + 4 >> 2] = 0;
 HEAP32[$10 + 8 >> 2] = 0;
 HEAP32[$10 + 12 >> 2] = 0;
 HEAP32[$10 + 16 >> 2] = 0;
 HEAP32[$10 + 20 >> 2] = 0;
 HEAP32[$10 + 24 >> 2] = 0;
 HEAP32[$10 + 28 >> 2] = 0;
 HEAPF64[$0 + 336 >> 3] = 1.0;
 $13 = $0 + 456 | 0;
 dest = $0 + 344 | 0;
 stop = dest + 112 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$13 >> 3] = 1.0;
 $15 = $0 + 512 | 0;
 dest = $0 + 464 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$15 >> 3] = 1.0;
 $17 = $0 + 568 | 0;
 dest = $0 + 520 | 0;
 stop = dest + 48 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAPF64[$17 >> 3] = 1.0;
 return;
}

function ___stpcpy($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$030 = 0, $$037 = 0, $$1 = 0, $$128 = 0, $$22934 = 0, $$235 = 0, $11 = 0, $12 = 0, $16 = 0, $2 = 0, $22 = 0, $23 = 0, $24 = 0, $31 = 0, $34 = 0, $35 = 0, $9 = 0, label = 0;
 $2 = $1;
 L1 : do if (!(($2 ^ $0) & 3)) {
  if (!($2 & 3)) {
   $$026$lcssa = $1;
   $$027$lcssa = $0;
  } else {
   $$02642 = $1;
   $$02741 = $0;
   while (1) {
    $9 = HEAP8[$$02642 >> 0] | 0;
    HEAP8[$$02741 >> 0] = $9;
    if (!($9 << 24 >> 24)) {
     $$030 = $$02741;
     break L1;
    }
    $11 = $$02642 + 1 | 0;
    $12 = $$02741 + 1 | 0;
    if (!($11 & 3)) {
     $$026$lcssa = $11;
     $$027$lcssa = $12;
     break;
    } else {
     $$02642 = $11;
     $$02741 = $12;
    }
   }
  }
  $16 = HEAP32[$$026$lcssa >> 2] | 0;
  if (!(($16 & -2139062144 ^ -2139062144) & $16 + -16843009)) {
   $$02536 = $$027$lcssa;
   $$037 = $$026$lcssa;
   $24 = $16;
   while (1) {
    $22 = $$037 + 4 | 0;
    $23 = $$02536 + 4 | 0;
    HEAP32[$$02536 >> 2] = $24;
    $24 = HEAP32[$22 >> 2] | 0;
    if (($24 & -2139062144 ^ -2139062144) & $24 + -16843009 | 0) {
     $$0$lcssa = $22;
     $$025$lcssa = $23;
     break;
    } else {
     $$02536 = $23;
     $$037 = $22;
    }
   }
  } else {
   $$0$lcssa = $$026$lcssa;
   $$025$lcssa = $$027$lcssa;
  }
  $$1 = $$0$lcssa;
  $$128 = $$025$lcssa;
  label = 10;
 } else {
  $$1 = $1;
  $$128 = $0;
  label = 10;
 } while (0);
 if ((label | 0) == 10) {
  $31 = HEAP8[$$1 >> 0] | 0;
  HEAP8[$$128 >> 0] = $31;
  if (!($31 << 24 >> 24)) $$030 = $$128; else {
   $$22934 = $$128;
   $$235 = $$1;
   while (1) {
    $$235 = $$235 + 1 | 0;
    $34 = $$22934 + 1 | 0;
    $35 = HEAP8[$$235 >> 0] | 0;
    HEAP8[$34 >> 0] = $35;
    if (!($35 << 24 >> 24)) {
     $$030 = $34;
     break;
    } else $$22934 = $34;
   }
  }
 }
 return $$030 | 0;
}

function _h2v2_fancy_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$062 = 0, $$063 = 0, $$064 = 0, $$065 = 0, $$065$phi = 0, $$066 = 0, $$067 = 0, $$068 = 0, $$070 = 0, $$1 = 0, $$169 = 0, $$pn = 0, $10 = 0, $13 = 0, $21 = 0, $29 = 0, $4 = 0, $40 = 0, $42 = 0, $5 = 0, $51 = 0, $52 = 0, $6 = 0, $9 = 0, $scevgep73 = 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $0 + 312 | 0;
 $6 = $1 + 40 | 0;
 $$062 = 0;
 $$063 = 0;
 while (1) {
  if (($$062 | 0) >= (HEAP32[$5 >> 2] | 0)) break;
  $9 = $2 + ($$063 << 2) | 0;
  $$0 = 0;
  $$1 = $$062;
  while (1) {
   if (($$0 | 0) == 2) break;
   $10 = HEAP32[$9 >> 2] | 0;
   $$068 = HEAP32[$2 + ((($$0 | 0) == 0 ? -1 : 1) + $$063 << 2) >> 2] | 0;
   $13 = HEAP32[$4 + ($$1 << 2) >> 2] | 0;
   $21 = ((HEAPU8[$10 >> 0] | 0) * 3 | 0) + (HEAPU8[$$068 >> 0] | 0) | 0;
   $29 = ((HEAPU8[$10 + 1 >> 0] | 0) * 3 | 0) + (HEAPU8[$$068 + 1 >> 0] | 0) | 0;
   HEAP8[$13 >> 0] = (($21 << 2) + 8 | 0) >>> 4;
   HEAP8[$13 + 1 >> 0] = (($21 * 3 | 0) + 7 + $29 | 0) >>> 4;
   $40 = HEAP32[$6 >> 2] | 0;
   $42 = $40 << 1;
   $scevgep73 = $13 + -2 | 0;
   $$064 = $40 + -2 | 0;
   $$065 = $21;
   $$066 = $29;
   $$070 = $10 + 2 | 0;
   $$169 = $$068 + 2 | 0;
   $$pn = $13;
   while (1) {
    $$067 = $$pn + 2 | 0;
    if (!$$064) break;
    $51 = ((HEAPU8[$$070 >> 0] | 0) * 3 | 0) + (HEAPU8[$$169 >> 0] | 0) | 0;
    $52 = $$066 * 3 | 0;
    HEAP8[$$067 >> 0] = ($$065 + 8 + $52 | 0) >>> 4;
    HEAP8[$$pn + 3 >> 0] = ($52 + 7 + $51 | 0) >>> 4;
    $$065$phi = $$066;
    $$064 = $$064 + -1 | 0;
    $$066 = $51;
    $$070 = $$070 + 1 | 0;
    $$169 = $$169 + 1 | 0;
    $$pn = $$067;
    $$065 = $$065$phi;
   }
   HEAP8[$scevgep73 + $42 >> 0] = ($$065 + 8 + ($$066 * 3 | 0) | 0) >>> 4;
   HEAP8[$13 + -4 + $42 + 3 >> 0] = (($$066 << 2) + 7 | 0) >>> 4;
   $$0 = $$0 + 1 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $$062 = $$062 + 2 | 0;
  $$063 = $$063 + 1 | 0;
 }
 return;
}

function __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$038 = 0, $$sroa$0$2 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $38 = 0, $39 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 $7 = HEAP32[$0 >> 2] | 0;
 L1 : do if (!$7) $$sroa$0$2 = 0; else {
  $9 = $3;
  $10 = $1;
  $12 = $9 - $10 >> 2;
  $13 = $4 + 12 | 0;
  $14 = HEAP32[$13 >> 2] | 0;
  $$038 = ($14 | 0) > ($12 | 0) ? $14 - $12 | 0 : 0;
  $17 = $2;
  $18 = $17 - $10 | 0;
  $19 = $18 >> 2;
  if (($18 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $1, $19) | 0) != ($19 | 0)) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  do if (($$038 | 0) > 0) {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw($6, $$038, $5);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, (HEAP8[$6 + 8 + 3 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6, $$038) | 0) == ($$038 | 0)) {
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
    break;
   } else {
    HEAP32[$0 >> 2] = 0;
    __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($6);
    $$sroa$0$2 = 0;
    break L1;
   }
  } while (0);
  $38 = $9 - $17 | 0;
  $39 = $38 >> 2;
  if (($38 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $2, $39) | 0) != ($39 | 0)) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  HEAP32[$13 >> 2] = 0;
  $$sroa$0$2 = $7;
 } while (0);
 STACKTOP = sp;
 return $$sroa$0$2 | 0;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE6assignIPS3_EENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISA_E9referenceEEE5valueEvE4typeESA_SA_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $13 = 0, $14 = 0, $17 = 0, $18 = 0, $21 = 0, $31 = 0, $36 = 0, $39 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0, $spec$select = 0;
 $4 = $1;
 $6 = ($2 - $4 | 0) / 12 | 0;
 $7 = $0 + 8 | 0;
 $9 = HEAP32[$0 >> 2] | 0;
 $13 = $9;
 do if ($6 >>> 0 > (((HEAP32[$7 >> 2] | 0) - $9 | 0) / 12 | 0) >>> 0) {
  __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE10deallocateEv($0);
  $31 = __ZNKSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8max_sizeEv($0) | 0;
  if ($31 >>> 0 < $6 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $36 = ((HEAP32[$7 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 12 | 0;
   $39 = $36 << 1;
   __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8allocateEm($0, $36 >>> 0 < $31 >>> 1 >>> 0 ? ($39 >>> 0 < $6 >>> 0 ? $6 : $39) : $31);
   __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m($0, $1, $2, $6);
   break;
  }
 } else {
  $14 = $0 + 4 | 0;
  $17 = ((HEAP32[$14 >> 2] | 0) - $9 | 0) / 12 | 0;
  $18 = $6 >>> 0 > $17 >>> 0;
  $spec$select = $18 ? $1 + ($17 * 12 | 0) | 0 : $2;
  $21 = $spec$select - $4 | 0;
  if ($21 | 0) _memmove($9 | 0, $1 | 0, $21 | 0) | 0;
  if ($18) {
   __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m($0, $spec$select, $2, $6 - (((HEAP32[$14 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 12 | 0) | 0);
   break;
  } else {
   HEAP32[$14 >> 2] = $13 + ((($21 | 0) / 12 | 0) * 12 | 0);
   break;
  }
 } while (0);
 return;
}

function _free_pool($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$071 = 0, $$071$in = 0, $$072 = 0, $$072$in = 0, $$in = 0, $$in79 = 0, $11 = 0, $13 = 0, $20 = 0, $22 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $33 = 0, $39 = 0, $42 = 0, $43 = 0, $45 = 0, $5 = 0, $51 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 if ($1 >>> 0 > 1) {
  $5 = HEAP32[$0 >> 2] | 0;
  HEAP32[$5 + 20 >> 2] = 14;
  HEAP32[$5 + 24 >> 2] = $1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 } else if (($1 | 0) == 1) {
  $11 = $3 + 68 | 0;
  $$072$in = $11;
  while (1) {
   $$072 = HEAP32[$$072$in >> 2] | 0;
   if (!$$072) break;
   $13 = $$072 + 40 | 0;
   if (HEAP32[$13 >> 2] | 0) {
    HEAP32[$13 >> 2] = 0;
    FUNCTION_TABLE_vii[HEAP32[$$072 + 56 >> 2] & 63]($0, $$072 + 48 | 0);
   }
   $$072$in = $$072 + 44 | 0;
  }
  HEAP32[$11 >> 2] = 0;
  $20 = $3 + 72 | 0;
  $$071$in = $20;
  while (1) {
   $$071 = HEAP32[$$071$in >> 2] | 0;
   if (!$$071) break;
   $22 = $$071 + 40 | 0;
   if (HEAP32[$22 >> 2] | 0) {
    HEAP32[$22 >> 2] = 0;
    FUNCTION_TABLE_vii[HEAP32[$$071 + 56 >> 2] & 63]($0, $$071 + 48 | 0);
   }
   $$071$in = $$071 + 44 | 0;
  }
  HEAP32[$20 >> 2] = 0;
 }
 $29 = $3 + 60 + ($1 << 2) | 0;
 $30 = HEAP32[$29 >> 2] | 0;
 HEAP32[$29 >> 2] = 0;
 $31 = $3 + 76 | 0;
 $$in = $30;
 while (1) {
  if (!$$in) break;
  $33 = HEAP32[$$in >> 2] | 0;
  $39 = (HEAP32[$$in + 4 >> 2] | 0) + 16 + (HEAP32[$$in + 8 >> 2] | 0) | 0;
  _jpeg_free_large($0, $$in, $39);
  HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) - $39;
  $$in = $33;
 }
 $42 = $3 + 52 + ($1 << 2) | 0;
 $43 = HEAP32[$42 >> 2] | 0;
 HEAP32[$42 >> 2] = 0;
 $$in79 = $43;
 while (1) {
  if (!$$in79) break;
  $45 = HEAP32[$$in79 >> 2] | 0;
  $51 = (HEAP32[$$in79 + 4 >> 2] | 0) + 16 + (HEAP32[$$in79 + 8 >> 2] | 0) | 0;
  _jpeg_free_small($0, $$in79, $51);
  HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) - $51;
  $$in79 = $45;
 }
 return;
}

function _arGetTransMatSquareCont($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = +$3;
 $4 = $4 | 0;
 var $$0 = 0, $$0$in = 0, $19 = 0, $26 = 0, $34 = 0, $42 = 0, $49 = 0.0, $5 = 0, $50 = 0.0, $6 = 0, $66 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 $5 = sp + 96 | 0;
 $6 = sp;
 $7 = sp + 168 | 0;
 $8 = sp + 160 | 0;
 do if ((HEAP32[$1 + 12 >> 2] | 0) < 0) $$0$in = $1 + 20 | 0; else if ((HEAP32[$1 + 8 >> 2] | 0) < 0) {
  $$0$in = $1 + 24 | 0;
  break;
 } else {
  $$0$in = $1 + 16 | 0;
  break;
 } while (0);
 $$0 = HEAP32[$$0$in >> 2] | 0;
 $19 = (4 - $$0 | 0) % 4 | 0;
 HEAPF64[$5 >> 3] = +HEAPF64[$1 + 168 + ($19 << 4) >> 3];
 HEAPF64[$5 + 8 >> 3] = +HEAPF64[$1 + 168 + ($19 << 4) + 8 >> 3];
 $26 = (5 - $$0 | 0) % 4 | 0;
 HEAPF64[$5 + 16 >> 3] = +HEAPF64[$1 + 168 + ($26 << 4) >> 3];
 HEAPF64[$5 + 24 >> 3] = +HEAPF64[$1 + 168 + ($26 << 4) + 8 >> 3];
 $34 = (6 - $$0 | 0) % 4 | 0;
 HEAPF64[$5 + 32 >> 3] = +HEAPF64[$1 + 168 + ($34 << 4) >> 3];
 HEAPF64[$5 + 40 >> 3] = +HEAPF64[$1 + 168 + ($34 << 4) + 8 >> 3];
 $42 = (7 - $$0 | 0) % 4 | 0;
 HEAPF64[$5 + 48 >> 3] = +HEAPF64[$1 + 168 + ($42 << 4) >> 3];
 HEAPF64[$5 + 56 >> 3] = +HEAPF64[$1 + 168 + ($42 << 4) + 8 >> 3];
 $49 = $3 * -.5;
 HEAPF64[$6 >> 3] = $49;
 $50 = $3 * .5;
 HEAPF64[$6 + 8 >> 3] = $50;
 HEAPF64[$6 + 16 >> 3] = 0.0;
 HEAPF64[$6 + 24 >> 3] = $50;
 HEAPF64[$6 + 32 >> 3] = $50;
 HEAPF64[$6 + 40 >> 3] = 0.0;
 HEAPF64[$6 + 48 >> 3] = $50;
 HEAPF64[$6 + 56 >> 3] = $49;
 HEAPF64[$6 + 64 >> 3] = 0.0;
 HEAPF64[$6 + 72 >> 3] = $49;
 HEAPF64[$6 + 80 >> 3] = $49;
 HEAPF64[$6 + 88 >> 3] = 0.0;
 HEAP32[$7 >> 2] = $5;
 HEAP32[$7 + 4 >> 2] = $6;
 HEAP32[$7 + 8 >> 2] = 4;
 $66 = (_icpPoint(HEAP32[$0 >> 2] | 0, $7, $2, $4, $8) | 0) < 0;
 STACKTOP = sp;
 return +($66 ? 1.0e8 : +HEAPF64[$8 >> 3]);
}

function __ZN6vision27OrthogonalizePivot8x9Basis2IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0.0, $17 = 0.0, $19 = 0.0, $2 = 0, $21 = 0.0, $23 = 0.0, $25 = 0.0, $27 = 0, $28 = 0, $3 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 72 | 0;
 $4 = $0 + 36 | 0;
 $5 = $1 + 72 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($3, $4, $5);
 $6 = $0 + 108 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($6, $4, $1 + 108 | 0);
 $8 = $0 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($8, $4, $1 + 144 | 0);
 $10 = $0 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($10, $4, $1 + 180 | 0);
 $12 = $0 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($12, $4, $1 + 216 | 0);
 $14 = $0 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($14, $4, $1 + 252 | 0);
 $16 = +__ZN6vision11SumSquares9IfEET_PKS1_($3);
 HEAPF32[$2 >> 2] = $16;
 $17 = +__ZN6vision11SumSquares9IfEET_PKS1_($6);
 HEAPF32[$2 + 4 >> 2] = $17;
 $19 = +__ZN6vision11SumSquares9IfEET_PKS1_($8);
 HEAPF32[$2 + 8 >> 2] = $19;
 $21 = +__ZN6vision11SumSquares9IfEET_PKS1_($10);
 HEAPF32[$2 + 12 >> 2] = $21;
 $23 = +__ZN6vision11SumSquares9IfEET_PKS1_($12);
 HEAPF32[$2 + 16 >> 2] = $23;
 $25 = +__ZN6vision11SumSquares9IfEET_PKS1_($14);
 HEAPF32[$2 + 20 >> 2] = $25;
 $27 = __ZN6vision9MaxIndex6IfEEiPKT_($2) | 0;
 $28 = $2 + ($27 << 2) | 0;
 if (+HEAPF32[$28 >> 2] == 0.0) $$0 = 0; else {
  $31 = $27 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_($3, $3 + ($31 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_($5, $5 + ($31 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($3, $3, 1.0 / +Math_sqrt(+(+HEAPF32[$28 >> 2])));
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _setMarkerInfoVertex($id, $markerIndex) {
 $id = $id | 0;
 $markerIndex = $markerIndex | 0;
 var $1 = 0, $10 = 0.0, $11 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, $arhandle = 0, $id$addr = 0, $retval$1 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = HEAP32[3413] | 0; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $1 = HEAP32[$arhandle >> 2] | 0;
  if ((HEAP32[$1 + 44 >> 2] | 0) > ($markerIndex | 0)) {
   $spec$select = ($markerIndex | 0) < 0 ? 55208 : $1 + 48 + ($markerIndex << 8) | 0;
   $4 = +HEAPF64[6440];
   HEAPF64[$spec$select + 168 >> 3] = $4;
   $5 = +HEAPF64[6441];
   HEAPF64[$spec$select + 176 >> 3] = $5;
   $6 = +HEAPF64[6442];
   HEAPF64[$spec$select + 184 >> 3] = $6;
   $7 = +HEAPF64[6443];
   HEAPF64[$spec$select + 192 >> 3] = $7;
   $8 = +HEAPF64[6444];
   HEAPF64[$spec$select + 200 >> 3] = $8;
   $9 = +HEAPF64[6445];
   HEAPF64[$spec$select + 208 >> 3] = $9;
   $10 = +HEAPF64[6446];
   HEAPF64[$spec$select + 216 >> 3] = $10;
   $11 = +HEAPF64[6447];
   HEAPF64[$spec$select + 224 >> 3] = $11;
   HEAPF64[$spec$select + 56 >> 3] = ($4 + $6 + $8 + $10) * .25;
   HEAPF64[$spec$select + 64 >> 3] = ($5 + $7 + $9 + $11) * .25;
   $retval$1 = 0;
   break;
  } else {
   $retval$1 = HEAP32[3415] | 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_116parse_throw_exprINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$i = 0, $$1 = 0, $15 = 0, $16 = 0, $19 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp + 24 | 0;
 $4 = sp;
 $5 = sp + 12 | 0;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 116) if ((HEAP8[$0 + 1 >> 0] | 0) == 119) {
  $15 = $0 + 2 | 0;
  $16 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($15, $1, $2) | 0;
  if (($16 | 0) == ($15 | 0)) $$1 = $0; else {
   $19 = $2 + 4 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($20 | 0)) $$1 = $0; else {
    __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($5, $20 + -24 | 0);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($5, 0, 49827) | 0;
    HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
    HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
    HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
    $$0$i$i$i = 0;
    while (1) {
     if (($$0$i$i$i | 0) == 3) break;
     HEAP32[$5 + ($$0$i$i$i << 2) >> 2] = 0;
     $$0$i$i$i = $$0$i$i$i + 1 | 0;
    }
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($3, $4);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_((HEAP32[$19 >> 2] | 0) + -24 | 0, $3);
    __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($3);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($4);
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($5);
    $$1 = $16;
   }
  }
 } else $$1 = $0; else $$1 = $0; else $$1 = $0;
 STACKTOP = sp;
 return $$1 | 0;
}

function _jinit_2pass_quantizer($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $12 = 0, $17 = 0, $18 = 0, $22 = 0, $31 = 0, $33 = 0, $39 = 0, $4 = 0, $47 = 0, $51 = 0, $61 = 0, $7 = 0;
 $1 = $0 + 4 | 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 44) | 0;
 HEAP32[$0 + 460 >> 2] = $4;
 HEAP32[$4 >> 2] = 43;
 HEAP32[$4 + 12 >> 2] = 124;
 $7 = $4 + 32 | 0;
 HEAP32[$7 >> 2] = 0;
 HEAP32[$4 + 40 >> 2] = 0;
 if ((HEAP32[$0 + 120 >> 2] | 0) != 3) {
  $12 = HEAP32[$0 >> 2] | 0;
  HEAP32[$12 + 20 >> 2] = 47;
  FUNCTION_TABLE_vi[HEAP32[$12 >> 2] & 255]($0);
 }
 $17 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 128) | 0;
 $18 = $4 + 24 | 0;
 HEAP32[$18 >> 2] = $17;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 32) break;
  $22 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 63]($0, 1, 4096) | 0;
  HEAP32[(HEAP32[$18 >> 2] | 0) + ($$0 << 2) >> 2] = $22;
  $$0 = $$0 + 1 | 0;
 }
 HEAP32[$4 + 28 >> 2] = 1;
 if (!(HEAP32[$0 + 108 >> 2] | 0)) HEAP32[$4 + 16 >> 2] = 0; else {
  $31 = HEAP32[$0 + 96 >> 2] | 0;
  if (($31 | 0) < 8) {
   $33 = HEAP32[$0 >> 2] | 0;
   HEAP32[$33 + 20 >> 2] = 56;
   HEAP32[$33 + 24 >> 2] = 8;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  } else if (($31 | 0) > 256) {
   $39 = HEAP32[$0 >> 2] | 0;
   HEAP32[$39 + 20 >> 2] = 57;
   HEAP32[$39 + 24 >> 2] = 256;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  }
  $47 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 15]($0, 1, $31, 3) | 0;
  HEAP32[$4 + 16 >> 2] = $47;
  HEAP32[$4 + 20 >> 2] = $31;
 }
 $51 = $0 + 88 | 0;
 if (HEAP32[$51 >> 2] | 0) {
  HEAP32[$51 >> 2] = 2;
  $61 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 63]($0, 1, ((HEAP32[$0 + 112 >> 2] | 0) * 6 | 0) + 12 | 0) | 0;
  HEAP32[$7 >> 2] = $61;
  _init_error_limit($0);
 }
 return;
}

function _decode_mcu_DC_refine($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$040 = 0, $$042 = 0, $$043 = 0, $$1 = 0, $$141 = 0, $17 = 0, $18 = 0, $2 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $33 = 0, $39 = 0, $4 = 0, $49 = 0, $52 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $4 = HEAP32[$0 + 444 >> 2] | 0;
 $7 = 1 << HEAP32[$0 + 412 >> 2];
 if (!(HEAP32[$0 + 276 >> 2] | 0)) label = 4; else if (!(HEAP32[$4 + 40 >> 2] | 0)) if (!(_process_restart_49($0) | 0)) $$042 = 0; else label = 4; else label = 4;
 L4 : do if ((label | 0) == 4) {
  HEAP32[$2 + 16 >> 2] = $0;
  $17 = $0 + 24 | 0;
  $18 = HEAP32[$17 >> 2] | 0;
  HEAP32[$2 >> 2] = HEAP32[$18 >> 2];
  $22 = $2 + 4 | 0;
  HEAP32[$22 >> 2] = HEAP32[$18 + 4 >> 2];
  $23 = $4 + 12 | 0;
  $25 = $4 + 16 | 0;
  $27 = $0 + 356 | 0;
  $28 = $2 + 8 | 0;
  $29 = $2 + 12 | 0;
  $$0 = HEAP32[$25 >> 2] | 0;
  $$040 = HEAP32[$23 >> 2] | 0;
  $$043 = 0;
  while (1) {
   if (($$043 | 0) >= (HEAP32[$27 >> 2] | 0)) break;
   $33 = HEAP32[$1 + ($$043 << 2) >> 2] | 0;
   if (($$0 | 0) < 1) {
    if (!(_jpeg_fill_bit_buffer($2, $$040, $$0, 1) | 0)) {
     $$042 = 0;
     break L4;
    }
    $$1 = HEAP32[$29 >> 2] | 0;
    $$141 = HEAP32[$28 >> 2] | 0;
   } else {
    $$1 = $$0;
    $$141 = $$040;
   }
   $39 = $$1 + -1 | 0;
   if (1 << $39 & $$141 | 0) HEAP16[$33 >> 1] = $7 | (HEAPU16[$33 >> 1] | 0);
   $$0 = $39;
   $$040 = $$141;
   $$043 = $$043 + 1 | 0;
  }
  $49 = HEAP32[$17 >> 2] | 0;
  HEAP32[$49 >> 2] = HEAP32[$2 >> 2];
  HEAP32[$49 + 4 >> 2] = HEAP32[$22 >> 2];
  HEAP32[$23 >> 2] = $$040;
  HEAP32[$25 >> 2] = $$0;
  $52 = $4 + 40 | 0;
  HEAP32[$52 >> 2] = (HEAP32[$52 >> 2] | 0) + -1;
  $$042 = 1;
 } while (0);
 STACKTOP = sp;
 return $$042 | 0;
}

function ___vfprintf_internal($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$1 = 0, $15 = 0, $16 = 0, $21 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $30 = 0, $31 = 0, $37 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $spec$select = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(224);
 $5 = sp + 208 | 0;
 $6 = sp + 160 | 0;
 $7 = sp + 80 | 0;
 $8 = sp;
 dest = $6;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$5 >> 2] = HEAP32[$2 >> 2];
 if ((_printf_core(0, $1, $5, $7, $6, $3, $4) | 0) < 0) $$0 = -1; else {
  if ((HEAP32[$0 + 76 >> 2] | 0) > -1) $41 = ___lockfile($0) | 0; else $41 = 0;
  $15 = HEAP32[$0 >> 2] | 0;
  $16 = $15 & 32;
  if ((HEAP8[$0 + 74 >> 0] | 0) < 1) HEAP32[$0 >> 2] = $15 & -33;
  $21 = $0 + 48 | 0;
  if (!(HEAP32[$21 >> 2] | 0)) {
   $25 = $0 + 44 | 0;
   $26 = HEAP32[$25 >> 2] | 0;
   HEAP32[$25 >> 2] = $8;
   $27 = $0 + 28 | 0;
   HEAP32[$27 >> 2] = $8;
   $28 = $0 + 20 | 0;
   HEAP32[$28 >> 2] = $8;
   HEAP32[$21 >> 2] = 80;
   $30 = $0 + 16 | 0;
   HEAP32[$30 >> 2] = $8 + 80;
   $31 = _printf_core($0, $1, $5, $7, $6, $3, $4) | 0;
   if (!$26) $$1 = $31; else {
    FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
    $spec$select = (HEAP32[$28 >> 2] | 0) == 0 ? -1 : $31;
    HEAP32[$25 >> 2] = $26;
    HEAP32[$21 >> 2] = 0;
    HEAP32[$30 >> 2] = 0;
    HEAP32[$27 >> 2] = 0;
    HEAP32[$28 >> 2] = 0;
    $$1 = $spec$select;
   }
  } else $$1 = _printf_core($0, $1, $5, $7, $6, $3, $4) | 0;
  $37 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $37 | $16;
  if ($41 | 0) ___unlockfile($0);
  $$0 = ($37 & 32 | 0) == 0 ? $$1 : -1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$sroa$0$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $35 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 $7 = HEAP32[$0 >> 2] | 0;
 L1 : do if (!$7) $$sroa$0$2 = 0; else {
  $9 = $3;
  $10 = $1;
  $11 = $9 - $10 | 0;
  $12 = $4 + 12 | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  $$0 = ($13 | 0) > ($11 | 0) ? $13 - $11 | 0 : 0;
  $16 = $2;
  $17 = $16 - $10 | 0;
  if (($17 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $1, $17) | 0) != ($17 | 0)) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  do if (($$0 | 0) > 0) {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$6 + 4 >> 2] = 0;
   HEAP32[$6 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc($6, $$0, $5);
   if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, (HEAP8[$6 + 11 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6, $$0) | 0) == ($$0 | 0)) {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    break;
   } else {
    HEAP32[$0 >> 2] = 0;
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
    $$sroa$0$2 = 0;
    break L1;
   }
  } while (0);
  $35 = $9 - $16 | 0;
  if (($35 | 0) > 0) if ((FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$7 >> 2] | 0) + 48 >> 2] & 63]($7, $2, $35) | 0) != ($35 | 0)) {
   HEAP32[$0 >> 2] = 0;
   $$sroa$0$2 = 0;
   break;
  }
  HEAP32[$12 >> 2] = 0;
  $$sroa$0$2 = $7;
 } while (0);
 STACKTOP = sp;
 return $$sroa$0$2 | 0;
}

function _jinit_memory_mgr($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $2 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $33 = 0, $39 = 0, $4 = 0, $41 = 0, $5 = 0, $7 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $1 = sp + 8 | 0;
 $2 = sp + 12 | 0;
 $3 = $0 + 4 | 0;
 HEAP32[$3 >> 2] = 0;
 $4 = _jpeg_mem_init($0) | 0;
 HEAP32[$1 >> 2] = $4;
 $5 = _jpeg_get_small($0, 84) | 0;
 if (!$5) {
  _jpeg_mem_term($0);
  $7 = HEAP32[$0 >> 2] | 0;
  HEAP32[$7 + 20 >> 2] = 54;
  HEAP32[$7 + 24 >> 2] = 0;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 HEAP32[$5 >> 2] = 27;
 HEAP32[$5 + 4 >> 2] = 28;
 HEAP32[$5 + 8 >> 2] = 7;
 HEAP32[$5 + 12 >> 2] = 8;
 HEAP32[$5 + 16 >> 2] = 39;
 HEAP32[$5 + 20 >> 2] = 40;
 HEAP32[$5 + 24 >> 2] = 114;
 HEAP32[$5 + 28 >> 2] = 21;
 HEAP32[$5 + 32 >> 2] = 22;
 HEAP32[$5 + 36 >> 2] = 40;
 HEAP32[$5 + 40 >> 2] = 115;
 HEAP32[$5 + 48 >> 2] = 1e9;
 $23 = $5 + 44 | 0;
 HEAP32[$23 >> 2] = $4;
 $24 = $5 + 52 | 0;
 $25 = $5 + 60 | 0;
 $$0 = 1;
 while (1) {
  if (($$0 | 0) <= -1) break;
  HEAP32[$24 + ($$0 << 2) >> 2] = 0;
  HEAP32[$25 + ($$0 << 2) >> 2] = 0;
  $$0 = $$0 + -1 | 0;
 }
 HEAP32[$5 + 68 >> 2] = 0;
 HEAP32[$5 + 72 >> 2] = 0;
 HEAP32[$5 + 76 >> 2] = 84;
 HEAP32[$3 >> 2] = $5;
 $33 = _getenv(38267) | 0;
 if ($33 | 0) {
  HEAP8[$2 >> 0] = 120;
  HEAP32[$vararg_buffer >> 2] = $1;
  HEAP32[$vararg_buffer + 4 >> 2] = $2;
  if ((_sscanf($33, 38275, $vararg_buffer) | 0) > 0) {
   switch (HEAP8[$2 >> 0] | 0) {
   case 77:
   case 109:
    {
     $39 = (HEAP32[$1 >> 2] | 0) * 1e3 | 0;
     HEAP32[$1 >> 2] = $39;
     $41 = $39;
     break;
    }
   default:
    $41 = HEAP32[$1 >> 2] | 0;
   }
   HEAP32[$23 >> 2] = $41 * 1e3;
  }
 }
 STACKTOP = sp;
 return;
}

function _arParamLTCreate($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$057 = 0, $$058 = 0, $$059 = 0, $$1 = 0, $$160 = 0, $10 = 0, $15 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $26 = 0, $28 = 0, $3 = 0, $32 = 0.0, $36 = 0.0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $2 = sp + 24 | 0;
 $3 = sp + 16 | 0;
 $4 = sp + 8 | 0;
 $5 = sp;
 $6 = _malloc(208) | 0;
 if (!$6) {
  _arLog(0, 3, 20454, sp + 32 | 0);
  _exit(1);
 }
 _memcpy($6 | 0, $0 | 0, 184) | 0;
 $9 = $1 << 1;
 $10 = (HEAP32[$0 >> 2] | 0) + $9 | 0;
 HEAP32[$6 + 192 >> 2] = $10;
 $15 = (HEAP32[$0 + 4 >> 2] | 0) + $9 | 0;
 HEAP32[$6 + 196 >> 2] = $15;
 HEAP32[$6 + 200 >> 2] = $1;
 HEAP32[$6 + 204 >> 2] = $1;
 $20 = Math_imul($10 << 3, $15) | 0;
 $21 = _malloc($20) | 0;
 HEAP32[$6 + 184 >> 2] = $21;
 if (!$21) {
  _arLog(0, 3, 20454, sp + 40 | 0);
  _exit(1);
 }
 $23 = _malloc($20) | 0;
 HEAP32[$6 + 188 >> 2] = $23;
 if (!$23) {
  _arLog(0, 3, 20454, sp + 48 | 0);
  _exit(1);
 }
 $26 = $0 + 104 | 0;
 $28 = HEAP32[$0 + 176 >> 2] | 0;
 $$0 = 0;
 $$058 = $23;
 $$059 = $21;
 while (1) {
  if (($$0 | 0) >= ($15 | 0)) break;
  $32 = +($$0 - $1 | 0);
  $$057 = 0;
  $$1 = $$058;
  $$160 = $$059;
  while (1) {
   if (($$057 | 0) >= ($10 | 0)) break;
   $36 = +($$057 - $1 | 0);
   _arParamIdeal2Observ($26, $36, $32, $4, $5, $28) | 0;
   HEAPF32[$$160 >> 2] = +HEAPF64[$4 >> 3];
   HEAPF32[$$160 + 4 >> 2] = +HEAPF64[$5 >> 3];
   _arParamObserv2Ideal($26, $36, $32, $2, $3, $28) | 0;
   HEAPF32[$$1 >> 2] = +HEAPF64[$2 >> 3];
   HEAPF32[$$1 + 4 >> 2] = +HEAPF64[$3 >> 3];
   $$057 = $$057 + 1 | 0;
   $$1 = $$1 + 8 | 0;
   $$160 = $$160 + 8 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$058 = $$1;
  $$059 = $$160;
 }
 STACKTOP = sp;
 return $6 | 0;
}

function _mbtowc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $13 = 0, $17 = 0, $21 = 0, $23 = 0, $25 = 0, $3 = 0, $33 = 0, $34 = 0, $42 = 0, $47 = 0, $50 = 0, $55 = 0, $59 = 0, $7 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 L1 : do if (!$1) $$0 = 0; else {
  do if ($2 | 0) {
   $spec$select = ($0 | 0) == 0 ? $3 : $0;
   $7 = HEAP8[$1 >> 0] | 0;
   if ($7 << 24 >> 24 > -1) {
    HEAP32[$spec$select >> 2] = $7 & 255;
    $$0 = $7 << 24 >> 24 != 0 & 1;
    break L1;
   }
   $13 = (___pthread_self_293() | 0) + 188 | 0;
   $17 = HEAP8[$1 >> 0] | 0;
   if (!(HEAP32[HEAP32[$13 >> 2] >> 2] | 0)) {
    HEAP32[$spec$select >> 2] = $17 << 24 >> 24 & 57343;
    $$0 = 1;
    break L1;
   }
   $21 = ($17 & 255) + -194 | 0;
   if ($21 >>> 0 <= 50) {
    $23 = $1 + 1 | 0;
    $25 = HEAP32[3472 + ($21 << 2) >> 2] | 0;
    if ($2 >>> 0 < 4) if ($25 & -2147483648 >>> (($2 * 6 | 0) + -6 | 0) | 0) break;
    $33 = HEAPU8[$23 >> 0] | 0;
    $34 = $33 >>> 3;
    if (($34 + -16 | $34 + ($25 >> 26)) >>> 0 <= 7) {
     $42 = $33 + -128 | $25 << 6;
     if (($42 | 0) >= 0) {
      HEAP32[$spec$select >> 2] = $42;
      $$0 = 2;
      break L1;
     }
     $47 = (HEAPU8[$1 + 2 >> 0] | 0) + -128 | 0;
     if ($47 >>> 0 <= 63) {
      $50 = $47 | $42 << 6;
      if (($50 | 0) >= 0) {
       HEAP32[$spec$select >> 2] = $50;
       $$0 = 3;
       break L1;
      }
      $55 = (HEAPU8[$1 + 3 >> 0] | 0) + -128 | 0;
      if ($55 >>> 0 <= 63) {
       HEAP32[$spec$select >> 2] = $55 | $50 << 6;
       $$0 = 4;
       break L1;
      }
     }
    }
   }
  } while (0);
  $59 = ___errno_location() | 0;
  HEAP32[$59 >> 2] = 84;
  $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _jpeg_start_decompress($0) {
 $0 = $0 | 0;
 var $$2 = 0, $1 = 0, $11 = 0, $12 = 0, $13 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $34 = 0, $6 = 0, label = 0;
 $1 = $0 + 20 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 L1 : do switch ($2 | 0) {
 case 202:
  {
   _jinit_master_decompress($0);
   if (!(HEAP32[$0 + 64 >> 2] | 0)) {
    HEAP32[$1 >> 2] = 203;
    label = 5;
    break L1;
   } else {
    HEAP32[$1 >> 2] = 207;
    $$2 = 1;
    break L1;
   }
   break;
  }
 case 203:
  {
   label = 5;
   break;
  }
 case 204:
  {
   label = 16;
   break;
  }
 default:
  {
   $34 = HEAP32[$0 >> 2] | 0;
   HEAP32[$34 + 20 >> 2] = 20;
   HEAP32[$34 + 24 >> 2] = $2;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   label = 16;
  }
 } while (0);
 L7 : do if ((label | 0) == 5) {
  $6 = $0 + 436 | 0;
  L9 : do if (HEAP32[(HEAP32[$6 >> 2] | 0) + 16 >> 2] | 0) {
   $11 = $0 + 8 | 0;
   $12 = $0 + 320 | 0;
   $13 = HEAP32[$11 >> 2] | 0;
   while (1) {
    if ($13 | 0) FUNCTION_TABLE_vi[HEAP32[$13 >> 2] & 255]($0);
    $18 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$6 >> 2] >> 2] & 127]($0) | 0;
    switch ($18 | 0) {
    case 0:
     {
      $$2 = $18;
      break L7;
      break;
     }
    case 2:
     {
      break L9;
      break;
     }
    default:
     {}
    }
    $19 = HEAP32[$11 >> 2] | 0;
    if (($18 | 2 | 0) == 3 & ($19 | 0) != 0) {
     $23 = $19 + 4 | 0;
     $25 = (HEAP32[$23 >> 2] | 0) + 1 | 0;
     HEAP32[$23 >> 2] = $25;
     $26 = $19 + 8 | 0;
     $27 = HEAP32[$26 >> 2] | 0;
     if (($25 | 0) >= ($27 | 0)) HEAP32[$26 >> 2] = (HEAP32[$12 >> 2] | 0) + $27;
    }
    $13 = $19;
   }
  } while (0);
  HEAP32[$0 + 152 >> 2] = HEAP32[$0 + 144 >> 2];
  label = 16;
 } while (0);
 if ((label | 0) == 16) $$2 = _output_pass_setup($0) | 0;
 return $$2 | 0;
}

function _teardown($id) {
 $id = $id | 0;
 var $0 = 0, $3 = 0, $__end_$i = 0, $call7 = 0, $i$0 = 0, $id$addr = 0, $multi_markers = 0, $retval$0 = 0, $videoFrame = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  $videoFrame = $call7 + 196 | 0;
  $0 = HEAP32[$videoFrame >> 2] | 0;
  if ($0 | 0) {
   _free($0);
   HEAP32[$videoFrame >> 2] = 0;
   HEAP32[$call7 + 200 >> 2] = 0;
  }
  _deleteHandle($call7);
  _arPattDeleteHandle(HEAP32[$call7 + 220 >> 2] | 0) | 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE14__erase_uniqueIiEEmRKT_(56144, $id$addr) | 0;
  $multi_markers = $call7 + 280 | 0;
  $__end_$i = $call7 + 284 | 0;
  $i$0 = 0;
  while (1) {
   $3 = HEAP32[$multi_markers >> 2] | 0;
   if ($i$0 >>> 0 >= (HEAP32[$__end_$i >> 2] | 0) - $3 >> 3 >>> 0) break;
   _arMultiFreeConfig(HEAP32[$3 + ($i$0 << 3) + 4 >> 2] | 0) | 0;
   $i$0 = $i$0 + 1 | 0;
  }
  __ZNSt3__213__vector_baseI12multi_markerNS_9allocatorIS1_EEED2Ev($multi_markers);
  __ZdlPv($multi_markers);
  __ZN12arControllerD2Ev($call7);
  __ZdlPv($call7);
  $retval$0 = 0;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function __ZNK6vision21HoughSimilarityVoting14getBinDistanceERfS1_S1_S1_ffffffff($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 $6 = +$6;
 $7 = +$7;
 $8 = +$8;
 $9 = +$9;
 $10 = +$10;
 $11 = +$11;
 $12 = +$12;
 var $13 = 0, $15 = 0.0, $17 = 0.0, $19 = 0.0, $21 = 0.0, $26 = 0.0, $33 = 0, $38 = 0, $42 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $13 = sp;
 $15 = +Math_abs(+($5 - $9));
 HEAPF32[$1 >> 2] = $15;
 $17 = +Math_abs(+($6 - $10));
 HEAPF32[$2 >> 2] = $17;
 $19 = +Math_abs(+($8 - $12));
 HEAPF32[$4 >> 2] = $19;
 $21 = +Math_abs(+($7 - $11));
 $26 = +__ZN6vision4min2IfEET_S1_S1_($21, +(HEAP32[$0 + 60 >> 2] | 0) - $21);
 HEAPF32[$3 >> 2] = $26;
 if (!($26 >= 0.0)) {
  $33 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 30211) | 0, 30431) | 0, 33528) | 0, 333) | 0, 33535) | 0, 30252) | 0;
  __ZNKSt3__28ios_base6getlocEv($13, $33 + (HEAP32[(HEAP32[$33 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $38 = __ZNKSt3__26locale9use_facetERNS0_2idE($13, 57884) | 0;
  $42 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$38 >> 2] | 0) + 28 >> 2] & 63]($38, 10) | 0;
  __ZNSt3__26localeD2Ev($13);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($33, $42) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($33) | 0;
  _abort();
 } else {
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$byval_copy = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $21 = 0, $25 = 0, $26 = 0, $28 = 0, $3 = 0, $31 = 0, $37 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 12 | 0;
 $2 = sp + 8 | 0;
 $3 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  __ZNKSt3__28ios_base6getlocEv($$byval_copy, $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57940) | 0;
  __ZNSt3__26localeD2Ev($$byval_copy);
  $14 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  $16 = HEAP32[$14 + 24 >> 2] | 0;
  $17 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  $18 = $14 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($17, HEAP32[$18 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14);
   $21 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57884) | 0;
   $25 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$21 >> 2] | 0) + 28 >> 2] & 63]($21, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $26 = $25 << 24 >> 24;
   HEAP32[$18 >> 2] = $26;
   $28 = $26;
  } else $28 = HEAP32[$18 >> 2] | 0;
  $31 = HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] | 0;
  HEAP32[$2 >> 2] = $16;
  HEAP32[$$byval_copy >> 2] = HEAP32[$2 >> 2];
  if (!(FUNCTION_TABLE_iiiiii[$31 & 31]($10, $$byval_copy, $14, $28 & 255, $1) | 0)) {
   $37 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($37, HEAP32[$37 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_18demangleINS0_2DbEEEvPKcS4_RT_Ri($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $13 = 0, $14 = 0, $27 = 0, $28 = 0, label = 0;
 L1 : do if ($0 >>> 0 < $1 >>> 0) {
  L3 : do if ((HEAP8[$0 >> 0] | 0) == 95) {
   if (($1 - $0 | 0) <= 3) {
    HEAP32[$3 >> 2] = -2;
    break L1;
   }
   switch (HEAP8[$0 + 1 >> 0] | 0) {
   case 90:
    {
     $13 = $0 + 2 | 0;
     $14 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($13, $1, $2) | 0;
     if (($14 | 0) == ($13 | 0) | ($14 | 0) == ($1 | 0)) $$0 = $14; else if ((HEAP8[$14 >> 0] | 0) == 46) $$0 = __ZN10__cxxabiv112_GLOBAL__N_116parse_dot_suffixINS0_2DbEEEPKcS4_S4_RT_($14, $1, $2) | 0; else $$0 = $14;
     if (($$0 | 0) == ($1 | 0)) break L3;
     HEAP32[$3 >> 2] = -2;
     break L1;
     break;
    }
   case 95:
    {
     label = 11;
     break;
    }
   default:
    {}
   }
   if ((label | 0) == 11) if ((HEAP8[$0 + 2 >> 0] | 0) == 95) if ((HEAP8[$0 + 3 >> 0] | 0) == 90) {
    $27 = $0 + 4 | 0;
    $28 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($27, $1, $2) | 0;
    if (($28 | 0) == ($27 | 0) | ($28 | 0) == ($1 | 0)) {
     HEAP32[$3 >> 2] = -2;
     break L1;
    }
    if ((__ZN10__cxxabiv112_GLOBAL__N_118parse_block_invokeINS0_2DbEEEPKcS4_S4_RT_($28, $1, $2) | 0) == ($1 | 0)) break;
    HEAP32[$3 >> 2] = -2;
    break L1;
   }
   HEAP32[$3 >> 2] = -2;
   break L1;
  } else if ((__ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0) != ($1 | 0)) {
   HEAP32[$3 >> 2] = -2;
   break L1;
  } while (0);
  if (!(HEAP32[$3 >> 2] | 0)) if ((HEAP32[$2 >> 2] | 0) == (HEAP32[$2 + 4 >> 2] | 0)) HEAP32[$3 >> 2] = -2;
 } else HEAP32[$3 >> 2] = -2; while (0);
 return;
}

function __ZNSt3__2L11init_wweeksEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[55624] | 0)) if (___cxa_guard_acquire(55624) | 0) {
  $4 = 55024;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 55192);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55024, 15896) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55036, 15924) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55048, 15952) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55060, 15984) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55072, 16024) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55084, 16060) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55096, 16088) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55108, 16124) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55120, 16140) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55132, 16156) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55144, 16172) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55156, 16188) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55168, 16204) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(55180, 16220) | 0;
 return;
}

function __ZNSt3__2L10init_weeksEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[55544] | 0)) if (___cxa_guard_acquire(55544) | 0) {
  $4 = 54272;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 54440);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54272, 47370) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54284, 47377) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54296, 47384) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54308, 47392) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54320, 47402) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54332, 47411) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54344, 47418) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54356, 47427) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54368, 47431) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54380, 47435) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54392, 47439) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54404, 47443) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54416, 47447) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(54428, 47451) | 0;
 return;
}

function __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$byval_copy = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $26 = 0, $27 = 0, $29 = 0, $3 = 0, $38 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 12 | 0;
 $3 = sp;
 $4 = sp + 8 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($3, $0);
 if (HEAP8[$3 >> 0] | 0) {
  $8 = (HEAP32[$0 >> 2] | 0) + -12 | 0;
  HEAP32[$4 >> 2] = HEAP32[$0 + (HEAP32[$8 >> 2] | 0) + 24 >> 2];
  $14 = $0 + (HEAP32[$8 >> 2] | 0) | 0;
  $16 = HEAP32[$14 + 4 >> 2] | 0;
  $17 = $1 + $2 | 0;
  $18 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
  $19 = $14 + 76 | 0;
  if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($18, HEAP32[$19 >> 2] | 0) | 0) {
   __ZNKSt3__28ios_base6getlocEv($$byval_copy, $14);
   $22 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57884) | 0;
   $26 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$22 >> 2] | 0) + 28 >> 2] & 63]($22, 32) | 0;
   __ZNSt3__26localeD2Ev($$byval_copy);
   $27 = $26 << 24 >> 24;
   HEAP32[$19 >> 2] = $27;
   $29 = $27;
  } else $29 = HEAP32[$19 >> 2] | 0;
  HEAP32[$$byval_copy >> 2] = HEAP32[$4 >> 2];
  if (!(__ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $1, ($16 & 176 | 0) == 32 ? $17 : $1, $17, $14, $29 & 255) | 0)) {
   $38 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($38, HEAP32[$38 + 16 >> 2] | 5);
  }
 }
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($3);
 STACKTOP = sp;
 return $0 | 0;
}

function _arMatrixPCA($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$064 = 0, $$065 = 0.0, $$1 = 0, $$2 = 0, $18 = 0, $24 = 0, $27 = 0.0, $32 = 0, $35 = 0, $39 = 0, $40 = 0, $49 = 0, $5 = 0, $7 = 0, $9 = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $7 = HEAP32[$0 + 8 >> 2] | 0;
 $9 = ($5 | 0) < ($7 | 0) ? $5 : $7;
 L1 : do if (($5 | 0) < 2 | ($7 | 0) < 2) $$064 = -1; else if ((HEAP32[$1 + 8 >> 2] | 0) == ($7 | 0)) if ((HEAP32[$1 + 4 >> 2] | 0) == ($9 | 0)) {
  $18 = $2 + 4 | 0;
  if ((HEAP32[$18 >> 2] | 0) == ($9 | 0)) if ((HEAP32[$3 + 4 >> 2] | 0) == ($7 | 0)) {
   $24 = _arMatrixAllocDup($0) | 0;
   if (!$24) $$064 = -1; else {
    $27 = +Math_sqrt(+(+($5 | 0)));
    if ((_EX($24, $3) | 0) < 0) {
     _arMatrixFree($24) | 0;
     $$064 = -1;
     break;
    }
    if ((_CENTER($24, $3) | 0) < 0) {
     _arMatrixFree($24) | 0;
     $$064 = -1;
     break;
    }
    $32 = Math_imul($7, $5) | 0;
    $$0 = 0;
    while (1) {
     if (($$0 | 0) >= ($32 | 0)) break;
     $35 = (HEAP32[$24 >> 2] | 0) + ($$0 << 3) | 0;
     HEAPF64[$35 >> 3] = +HEAPF64[$35 >> 3] / $27;
     $$0 = $$0 + 1 | 0;
    }
    $39 = _PCA($24, $1, $2) | 0;
    _arMatrixFree($24) | 0;
    $40 = HEAP32[$18 >> 2] | 0;
    $$065 = 0.0;
    $$1 = 0;
    while (1) {
     if (($$1 | 0) >= ($40 | 0)) break;
     $$065 = $$065 + +HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$1 << 3) >> 3];
     $$1 = $$1 + 1 | 0;
    }
    $$2 = 0;
    while (1) {
     if (($$2 | 0) >= ($40 | 0)) {
      $$064 = $39;
      break L1;
     }
     $49 = (HEAP32[$2 >> 2] | 0) + ($$2 << 3) | 0;
     HEAPF64[$49 >> 3] = +HEAPF64[$49 >> 3] / $$065;
     $$2 = $$2 + 1 | 0;
    }
   }
  } else $$064 = -1; else $$064 = -1;
 } else $$064 = -1; else $$064 = -1; while (0);
 return $$064 | 0;
}

function _alloc_small($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$069 = 0, $$070 = 0, $$070$in = 0, $$072 = 0, $$171 = 0, $$2 = 0, $11 = 0, $16 = 0, $20 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $29 = 0, $35 = 0, $36 = 0, $39 = 0, $4 = 0, $6 = 0, label = 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 if ($2 >>> 0 > 999999984) _out_of_memory($0, 1);
 $6 = $2 & 7;
 $$069 = (($6 | 0) == 0 ? 0 : 8 - $6 | 0) + $2 | 0;
 if ($1 >>> 0 > 1) {
  $11 = HEAP32[$0 >> 2] | 0;
  HEAP32[$11 + 20 >> 2] = 14;
  HEAP32[$11 + 24 >> 2] = $1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $16 = $4 + 52 + ($1 << 2) | 0;
 $$070$in = $16;
 $$072 = 0;
 while (1) {
  $$070 = HEAP32[$$070$in >> 2] | 0;
  if (!$$070) {
   label = 9;
   break;
  }
  if ((HEAP32[$$070 + 8 >> 2] | 0) >>> 0 >= $$069 >>> 0) {
   $$171 = $$070;
   break;
  }
  $$070$in = $$070;
  $$072 = $$070;
 }
 do if ((label | 0) == 9) {
  $20 = ($$072 | 0) == 0;
  $$0 = HEAP32[($20 ? 13624 : 13632) + ($1 << 2) >> 2] | 0;
  $21 = 999999984 - $$069 | 0;
  $$2 = $$0 >>> 0 > $21 >>> 0 ? $21 : $$0;
  while (1) {
   $23 = $$2 + $$069 | 0;
   $24 = $23 + 16 | 0;
   $25 = _jpeg_get_small($0, $24) | 0;
   if ($25 | 0) break;
   if ($$2 >>> 0 < 100) _out_of_memory($0, 2);
   $$2 = $$2 >>> 1;
  }
  $29 = $4 + 76 | 0;
  HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + $24;
  HEAP32[$25 >> 2] = 0;
  HEAP32[$25 + 4 >> 2] = 0;
  HEAP32[$25 + 8 >> 2] = $23;
  if ($20) {
   HEAP32[$16 >> 2] = $25;
   $$171 = $25;
   break;
  } else {
   HEAP32[$$072 >> 2] = $25;
   $$171 = $25;
   break;
  }
 } while (0);
 $35 = $$171 + 4 | 0;
 $36 = HEAP32[$35 >> 2] | 0;
 HEAP32[$35 >> 2] = $36 + $$069;
 $39 = $$171 + 8 | 0;
 HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) - $$069;
 return $$171 + 16 + $36 | 0;
}

function _jpeg_huff_decode($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$042 = 0, $$043 = 0, $$044 = 0, $$045 = 0, $$1 = 0, $$146 = 0, $$2 = 0, $$247 = 0, $$pre$phi57Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $12 = 0, $20 = 0, $26 = 0, $33 = 0, $34 = 0, $8 = 0, label = 0;
 if (($2 | 0) < ($4 | 0)) if (!(_jpeg_fill_bit_buffer($0, $1, $2, $4) | 0)) $$043 = -1; else {
  $8 = $0 + 8 | 0;
  $10 = $0 + 12 | 0;
  $$044 = HEAP32[$8 >> 2] | 0;
  $$045 = HEAP32[$10 >> 2] | 0;
  $$pre$phi57Z2D = $10;
  $$pre$phiZ2D = $8;
  label = 5;
 } else {
  $$044 = $1;
  $$045 = $2;
  $$pre$phi57Z2D = $0 + 12 | 0;
  $$pre$phiZ2D = $0 + 8 | 0;
  label = 5;
 }
 L5 : do if ((label | 0) == 5) {
  $12 = $$045 - $4 | 0;
  $$0 = $$044 >> $12 & (1 << $4) + -1;
  $$042 = $4;
  $$1 = $$044;
  $$146 = $12;
  while (1) {
   if (($$0 | 0) <= (HEAP32[$3 + ($$042 << 2) >> 2] | 0)) break;
   $20 = $$0 << 1;
   if (($$146 | 0) < 1) {
    if (!(_jpeg_fill_bit_buffer($0, $$1, $$146, 1) | 0)) {
     $$043 = -1;
     break L5;
    }
    $$2 = HEAP32[$$pre$phiZ2D >> 2] | 0;
    $$247 = HEAP32[$$pre$phi57Z2D >> 2] | 0;
   } else {
    $$2 = $$1;
    $$247 = $$146;
   }
   $26 = $$247 + -1 | 0;
   $$0 = $$2 >>> $26 & 1 | $20;
   $$042 = $$042 + 1 | 0;
   $$1 = $$2;
   $$146 = $26;
  }
  HEAP32[$$pre$phiZ2D >> 2] = $$1;
  HEAP32[$$pre$phi57Z2D >> 2] = $$146;
  if (($$042 | 0) > 16) {
   $33 = HEAP32[$0 + 16 >> 2] | 0;
   $34 = HEAP32[$33 >> 2] | 0;
   HEAP32[$34 + 20 >> 2] = 118;
   FUNCTION_TABLE_vii[HEAP32[$34 + 4 >> 2] & 63]($33, -1);
   $$043 = 0;
   break;
  } else {
   $$043 = HEAPU8[(HEAP32[$3 + 72 + ($$042 << 2) >> 2] | 0) + $$0 + ((HEAP32[$3 + 140 >> 2] | 0) + 17) >> 0] | 0;
   break;
  }
 } while (0);
 return $$043 | 0;
}

function __ZNSt3__216__check_groupingERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPjS8_Rj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i$i = 0, $$029 = 0, $$030 = 0, $$07$i$i = 0, $$pre = 0, $$pre$phiZ2D = 0, $13 = 0, $15 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $28 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond32 = 0, label = 0;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $7 = $0 + 4 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $9 = $5 & 255;
 do if (($5 << 24 >> 24 < 0 ? $8 : $9) | 0) {
  if (($1 | 0) == ($2 | 0)) {
   $$pre$phiZ2D = $9;
   $18 = $5;
   $22 = $8;
  } else {
   $$0$i$i = $2;
   $$07$i$i = $1;
   while (1) {
    $13 = $$0$i$i + -4 | 0;
    if ($$07$i$i >>> 0 >= $13 >>> 0) break;
    $15 = HEAP32[$$07$i$i >> 2] | 0;
    HEAP32[$$07$i$i >> 2] = HEAP32[$13 >> 2];
    HEAP32[$13 >> 2] = $15;
    $$0$i$i = $13;
    $$07$i$i = $$07$i$i + 4 | 0;
   }
   $$pre = HEAP8[$4 >> 0] | 0;
   $$pre$phiZ2D = $$pre & 255;
   $18 = $$pre;
   $22 = HEAP32[$7 >> 2] | 0;
  }
  $19 = $18 << 24 >> 24 < 0;
  $21 = $19 ? HEAP32[$0 >> 2] | 0 : $0;
  $25 = $2 + -4 | 0;
  $26 = $21 + ($19 ? $22 : $$pre$phiZ2D) | 0;
  $$029 = $1;
  $$030 = $21;
  while (1) {
   $28 = HEAP8[$$030 >> 0] | 0;
   $or$cond32 = $28 << 24 >> 24 > 0 & $28 << 24 >> 24 != 127;
   if ($$029 >>> 0 >= $25 >>> 0) break;
   if ($or$cond32) if ((HEAP32[$$029 >> 2] | 0) != ($28 << 24 >> 24 | 0)) {
    label = 11;
    break;
   }
   $$029 = $$029 + 4 | 0;
   $$030 = ($26 - $$030 | 0) > 1 ? $$030 + 1 | 0 : $$030;
  }
  if ((label | 0) == 11) {
   HEAP32[$3 >> 2] = 4;
   break;
  }
  if ($or$cond32) if (((HEAP32[$25 >> 2] | 0) + -1 | 0) >>> 0 >= $28 << 24 >> 24 >>> 0) HEAP32[$3 >> 2] = 4;
 } while (0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairaSEOS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$i$i = 0, $$0$i$i$i$i3 = 0, $10 = 0, $11 = 0, $12 = 0, $15 = 0, $2 = 0, $3 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = $0 + 11 | 0;
 if ((HEAP8[$3 >> 0] | 0) < 0) {
  $6 = HEAP32[$0 >> 2] | 0;
  HEAP8[$2 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($6, $2);
  HEAP32[$0 + 4 >> 2] = 0;
 } else {
  HEAP8[$2 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($0, $2);
  HEAP8[$3 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($0);
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 $$0$i$i$i$i = 0;
 while (1) {
  if (($$0$i$i$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i$i$i << 2) >> 2] = 0;
  $$0$i$i$i$i = $$0$i$i$i$i + 1 | 0;
 }
 $10 = $0 + 12 | 0;
 $11 = $1 + 12 | 0;
 $12 = $10 + 11 | 0;
 if ((HEAP8[$12 >> 0] | 0) < 0) {
  $15 = HEAP32[$10 >> 2] | 0;
  HEAP8[$2 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($15, $2);
  HEAP32[$0 + 16 >> 2] = 0;
 } else {
  HEAP8[$2 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($10, $2);
  HEAP8[$12 >> 0] = 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7reserveEm($10);
 HEAP32[$10 >> 2] = HEAP32[$11 >> 2];
 HEAP32[$10 + 4 >> 2] = HEAP32[$11 + 4 >> 2];
 HEAP32[$10 + 8 >> 2] = HEAP32[$11 + 8 >> 2];
 $$0$i$i$i$i3 = 0;
 while (1) {
  if (($$0$i$i$i$i3 | 0) == 3) break;
  HEAP32[$11 + ($$0$i$i$i$i3 << 2) >> 2] = 0;
  $$0$i$i$i$i3 = $$0$i$i$i$i3 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function _start_pass_huff_decoder($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$064 = 0, $$sink = 0, $15 = 0, $19 = 0, $2 = 0, $23 = 0, $25 = 0, $27 = 0, $32 = 0, $38 = 0, $52 = 0, label = 0;
 $2 = HEAP32[$0 + 444 >> 2] | 0;
 if (!(HEAP32[$0 + 400 >> 2] | 0)) if ((HEAP32[$0 + 404 >> 2] | 0) == 63) if (!(HEAP32[$0 + 408 >> 2] | 0)) {
  if (HEAP32[$0 + 412 >> 2] | 0) label = 5;
 } else label = 5; else label = 5; else label = 5;
 if ((label | 0) == 5) {
  $15 = HEAP32[$0 >> 2] | 0;
  HEAP32[$15 + 20 >> 2] = 122;
  FUNCTION_TABLE_vii[HEAP32[$15 + 4 >> 2] & 63]($0, -1);
 }
 $19 = $0 + 328 | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) >= (HEAP32[$19 >> 2] | 0)) break;
  $23 = HEAP32[$0 + 332 + ($$0 << 2) >> 2] | 0;
  $25 = HEAP32[$23 + 20 >> 2] | 0;
  $27 = HEAP32[$23 + 24 >> 2] | 0;
  _jpeg_make_d_derived_tbl($0, 1, $25, $2 + 40 + ($25 << 2) | 0);
  _jpeg_make_d_derived_tbl($0, 0, $27, $2 + 56 + ($27 << 2) | 0);
  HEAP32[$2 + 20 + ($$0 << 2) >> 2] = 0;
  $$0 = $$0 + 1 | 0;
 }
 $32 = $0 + 356 | 0;
 $$064 = 0;
 while (1) {
  if (($$064 | 0) >= (HEAP32[$32 >> 2] | 0)) break;
  $38 = HEAP32[$0 + 332 + (HEAP32[$0 + 360 + ($$064 << 2) >> 2] << 2) >> 2] | 0;
  HEAP32[$2 + 72 + ($$064 << 2) >> 2] = HEAP32[$2 + 40 + (HEAP32[$38 + 20 >> 2] << 2) >> 2];
  HEAP32[$2 + 112 + ($$064 << 2) >> 2] = HEAP32[$2 + 56 + (HEAP32[$38 + 24 >> 2] << 2) >> 2];
  $52 = $2 + 152 + ($$064 << 2) | 0;
  if (!(HEAP32[$38 + 48 >> 2] | 0)) {
   HEAP32[$52 >> 2] = 0;
   $$sink = 0;
  } else {
   HEAP32[$52 >> 2] = 1;
   $$sink = (HEAP32[$38 + 36 >> 2] | 0) > 1 & 1;
  }
  HEAP32[$2 + 192 + ($$064 << 2) >> 2] = $$sink;
  $$064 = $$064 + 1 | 0;
 }
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 36 >> 2] = HEAP32[$0 + 276 >> 2];
 return;
}

function _ycck_cmyk_convert($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$078 = 0, $$079 = 0, $$080 = 0, $$081 = 0, $$neg83 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $26 = 0, $29 = 0, $32 = 0, $35 = 0, $36 = 0, $42 = 0, $45 = 0, $6 = 0, $8 = 0;
 $6 = HEAP32[$0 + 456 >> 2] | 0;
 $8 = HEAP32[$0 + 112 >> 2] | 0;
 $10 = HEAP32[$0 + 324 >> 2] | 0;
 $12 = HEAP32[$6 + 8 >> 2] | 0;
 $14 = HEAP32[$6 + 12 >> 2] | 0;
 $16 = HEAP32[$6 + 16 >> 2] | 0;
 $18 = HEAP32[$6 + 20 >> 2] | 0;
 $19 = $1 + 4 | 0;
 $20 = $1 + 8 | 0;
 $21 = $1 + 12 | 0;
 $$0 = $2;
 $$078 = $3;
 $$079 = $4;
 while (1) {
  $22 = $$079 + -1 | 0;
  if (($$079 | 0) <= 0) break;
  $26 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $29 = HEAP32[(HEAP32[$19 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $32 = HEAP32[(HEAP32[$20 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $35 = HEAP32[(HEAP32[$21 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $36 = $$0 + 1 | 0;
  $$080 = HEAP32[$$078 >> 2] | 0;
  $$081 = 0;
  while (1) {
   if (($$081 | 0) == ($8 | 0)) break;
   $42 = HEAPU8[$29 + $$081 >> 0] | 0;
   $45 = HEAPU8[$32 + $$081 >> 0] | 0;
   $$neg83 = ~HEAP8[$26 + $$081 >> 0] & 255;
   HEAP8[$$080 >> 0] = HEAP8[$10 + ($$neg83 - (HEAP32[$12 + ($45 << 2) >> 2] | 0)) >> 0] | 0;
   HEAP8[$$080 + 1 >> 0] = HEAP8[$10 + ($$neg83 - ((HEAP32[$16 + ($45 << 2) >> 2] | 0) + (HEAP32[$18 + ($42 << 2) >> 2] | 0) >> 16)) >> 0] | 0;
   HEAP8[$$080 + 2 >> 0] = HEAP8[$10 + ($$neg83 - (HEAP32[$14 + ($42 << 2) >> 2] | 0)) >> 0] | 0;
   HEAP8[$$080 + 3 >> 0] = HEAP8[$35 + $$081 >> 0] | 0;
   $$080 = $$080 + 4 | 0;
   $$081 = $$081 + 1 | 0;
  }
  $$0 = $36;
  $$078 = $$078 + 4 | 0;
  $$079 = $22;
 }
 return;
}

function __ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i17 = 0, $$0$i22 = 0, $10 = 0, $11 = 0, $16 = 0, $18 = 0, $30 = 0, $31 = 0, $35 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $10 = HEAP8[$5 + 11 >> 0] | 0;
 $11 = $10 << 24 >> 24 < 0;
 $16 = $11 ? HEAP32[$5 >> 2] | 0 : $5;
 $18 = $16 + ($11 ? HEAP32[$5 + 4 >> 2] | 0 : $10 & 255) | 0;
 $$0$i22 = $16;
 while (1) {
  if ($$0$i22 >>> 0 >= $18 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($6, HEAP8[$$0$i22 >> 0] | 0);
  $$0$i22 = $$0$i22 + 1 | 0;
 }
 $30 = (HEAP8[$6 + 11 >> 0] | 0) < 0 ? HEAP32[$6 >> 2] | 0 : $6;
 $31 = _catgets(($2 | 0) == -1 ? -1 : $2 << 1, $3, $4, $30) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i17 = 0;
 while (1) {
  if (($$0$i$i17 | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i17 << 2) >> 2] = 0;
  $$0$i$i17 = $$0$i$i17 + 1 | 0;
 }
 $35 = $30 + (_strlen($31) | 0) | 0;
 $$0$i = $30;
 while (1) {
  if ($$0$i >>> 0 >= $35 >>> 0) break;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0, HEAP8[$$0$i >> 0] | 0);
  $$0$i = $$0$i + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($6);
 STACKTOP = sp;
 return;
}

function _create_colorindex($0) {
 $0 = $0 | 0;
 var $$062 = 0, $$063 = 0, $$064 = 0, $$065 = 0, $$067 = 0, $$1 = 0, $$166 = 0, $$168 = 0, $12 = 0, $14 = 0, $15 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $29 = 0, $30 = 0, $33 = 0, $36 = 0, $39 = 0, $5 = 0;
 $2 = HEAP32[$0 + 460 >> 2] | 0;
 $5 = (HEAP32[$0 + 88 >> 2] | 0) == 1;
 HEAP32[$2 + 28 >> 2] = $5 & 1;
 $12 = $0 + 120 | 0;
 $14 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 8 >> 2] & 15]($0, 1, $5 ? 766 : 256, HEAP32[$12 >> 2] | 0) | 0;
 $15 = $2 + 24 | 0;
 HEAP32[$15 >> 2] = $14;
 $$063 = HEAP32[$2 + 20 >> 2] | 0;
 $$064 = 0;
 while (1) {
  if (($$064 | 0) >= (HEAP32[$12 >> 2] | 0)) break;
  $21 = HEAP32[$2 + 32 + ($$064 << 2) >> 2] | 0;
  $22 = ($$063 | 0) / ($21 | 0) | 0;
  if ($5) {
   $24 = (HEAP32[$15 >> 2] | 0) + ($$064 << 2) | 0;
   HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 255;
  }
  $29 = HEAP32[(HEAP32[$15 >> 2] | 0) + ($$064 << 2) >> 2] | 0;
  $30 = $21 + -1 | 0;
  $$062 = 0;
  $$065 = _largest_input_value(0, $30) | 0;
  $$067 = 0;
  while (1) {
   if (($$067 | 0) == 256) break;
   $$1 = $$062;
   $$166 = $$065;
   while (1) {
    if (($$067 | 0) <= ($$166 | 0)) break;
    $33 = $$1 + 1 | 0;
    $$1 = $33;
    $$166 = _largest_input_value($33, $30) | 0;
   }
   $36 = (Math_imul($$1, $22) | 0) & 255;
   HEAP8[$29 + $$067 >> 0] = $36;
   $$062 = $$1;
   $$065 = $$166;
   $$067 = $$067 + 1 | 0;
  }
  L15 : do if ($5) {
   $39 = $29 + 255 | 0;
   $$168 = 1;
   while (1) {
    if (($$168 | 0) == 256) break L15;
    HEAP8[$29 + (0 - $$168) >> 0] = HEAP8[$29 >> 0] | 0;
    HEAP8[$29 + ($$168 + 255) >> 0] = HEAP8[$39 >> 0] | 0;
    $$168 = $$168 + 1 | 0;
   }
  } while (0);
  $$063 = $22;
  $$064 = $$064 + 1 | 0;
 }
 return;
}

function ___dynamic_cast($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $8 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $4 = sp;
 $5 = HEAP32[$0 >> 2] | 0;
 $8 = $0 + (HEAP32[$5 + -8 >> 2] | 0) | 0;
 $10 = HEAP32[$5 + -4 >> 2] | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$4 + 4 >> 2] = $0;
 HEAP32[$4 + 8 >> 2] = $1;
 HEAP32[$4 + 12 >> 2] = $3;
 $14 = $4 + 16 | 0;
 $15 = $4 + 20 | 0;
 $16 = $4 + 24 | 0;
 $17 = $4 + 28 | 0;
 $18 = $4 + 32 | 0;
 $19 = $4 + 40 | 0;
 dest = $14;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$14 + 36 >> 1] = 0;
 HEAP8[$14 + 38 >> 0] = 0;
 L1 : do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($10, $2, 0) | 0) {
  HEAP32[$4 + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 7]($10, $4, $8, $8, 1, 0);
  $$0 = (HEAP32[$16 >> 2] | 0) == 1 ? $8 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 24 >> 2] & 31]($10, $4, $8, 1, 0);
  switch (HEAP32[$4 + 36 >> 2] | 0) {
  case 0:
   {
    $$0 = (HEAP32[$19 >> 2] | 0) == 1 & (HEAP32[$17 >> 2] | 0) == 1 & (HEAP32[$18 >> 2] | 0) == 1 ? HEAP32[$15 >> 2] | 0 : 0;
    break L1;
    break;
   }
  case 1:
   break;
  default:
   {
    $$0 = 0;
    break L1;
   }
  }
  if ((HEAP32[$16 >> 2] | 0) != 1) if (!((HEAP32[$19 >> 2] | 0) == 0 & (HEAP32[$17 >> 2] | 0) == 1 & (HEAP32[$18 >> 2] | 0) == 1)) {
   $$0 = 0;
   break;
  }
  $$0 = HEAP32[$14 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function _create_colormap($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$081 = 0, $$082 = 0, $$083 = 0, $$084 = 0, $$pre$phiZ2D = 0, $2 = 0, $3 = 0, $31 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $42 = 0, $5 = 0, $8 = 0;
 $2 = HEAP32[$0 + 460 >> 2] | 0;
 $3 = $2 + 32 | 0;
 $4 = _select_ncolors($0, $3) | 0;
 $5 = $0 + 120 | 0;
 $8 = HEAP32[$0 >> 2] | 0;
 if ((HEAP32[$5 >> 2] | 0) == 3) {
  HEAP32[$8 + 24 >> 2] = $4;
  HEAP32[$8 + 28 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$8 + 32 >> 2] = HEAP32[$2 + 36 >> 2];
  HEAP32[$8 + 36 >> 2] = HEAP32[$2 + 40 >> 2];
  HEAP32[$8 + 20 >> 2] = 94;
  FUNCTION_TABLE_vii[HEAP32[$8 + 4 >> 2] & 63]($0, 1);
  $$pre$phiZ2D = $0;
 } else {
  HEAP32[$8 + 20 >> 2] = 95;
  HEAP32[$8 + 24 >> 2] = $4;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
  $$pre$phiZ2D = $0;
 }
 $31 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 8 >> 2] & 15]($$pre$phiZ2D, 1, $4, HEAP32[$5 >> 2] | 0) | 0;
 $$0 = 0;
 $$083 = $4;
 while (1) {
  if (($$0 | 0) >= (HEAP32[$5 >> 2] | 0)) break;
  $35 = HEAP32[$2 + 32 + ($$0 << 2) >> 2] | 0;
  $36 = ($$083 | 0) / ($35 | 0) | 0;
  $37 = $35 + -1 | 0;
  $38 = $31 + ($$0 << 2) | 0;
  $$081 = 0;
  while (1) {
   if (($$081 | 0) >= ($35 | 0)) break;
   $42 = (_output_value($$081, $37) | 0) & 255;
   $$082 = Math_imul($$081, $36) | 0;
   while (1) {
    if (($$082 | 0) >= ($4 | 0)) break;
    $$084 = 0;
    while (1) {
     if (($$084 | 0) >= ($36 | 0)) break;
     HEAP8[(HEAP32[$38 >> 2] | 0) + ($$084 + $$082) >> 0] = $42;
     $$084 = $$084 + 1 | 0;
    }
    $$082 = $$082 + $$083 | 0;
   }
   $$081 = $$081 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$083 = $36;
 }
 HEAP32[$2 + 16 >> 2] = $31;
 HEAP32[$2 + 20 >> 2] = $4;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i$add$i = 0, $$0$i$i$idx$i = 0, $$3 = 0, $10 = 0, $17 = 0, $22 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) $$3 = $0; else {
  $5 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
  if (($5 | 0) == ($0 | 0)) $$3 = $0; else {
   $7 = __ZN10__cxxabiv112_GLOBAL__N_119parse_template_argsINS0_2DbEEEPKcS4_S4_RT_($5, $1, $2) | 0;
   if (($7 | 0) == ($5 | 0)) $$3 = $5; else {
    $9 = $2 + 4 | 0;
    $10 = HEAP32[$9 >> 2] | 0;
    if ((($10 - (HEAP32[$2 >> 2] | 0) | 0) / 24 | 0) >>> 0 < 2) $$3 = $0; else {
     __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($3, $10 + -24 | 0);
     $17 = HEAP32[$9 >> 2] | 0;
     $$0$i$i$idx$i = 0;
     while (1) {
      if (($$0$i$i$idx$i | 0) == -1) break;
      $$0$i$i$add$i = $$0$i$i$idx$i + -1 | 0;
      __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($17 + ($$0$i$i$add$i * 24 | 0) | 0);
      $$0$i$i$idx$i = $$0$i$i$add$i;
     }
     HEAP32[$9 >> 2] = $17 + -24;
     $22 = HEAP8[$3 + 11 >> 0] | 0;
     $23 = $22 << 24 >> 24 < 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($17 + -48 | 0, $23 ? HEAP32[$3 >> 2] | 0 : $3, $23 ? HEAP32[$3 + 4 >> 2] | 0 : $22 & 255) | 0;
     __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($3);
     $$3 = $7;
    }
   }
  }
 }
 STACKTOP = sp;
 return $$3 | 0;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((((HEAP32[$3 >> 2] | 0) - $6 | 0) / 36 | 0) >>> 0 < $1 >>> 0) {
  $13 = (($6 - (HEAP32[$0 >> 2] | 0) | 0) / 36 | 0) + $1 | 0;
  $14 = __ZNKSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $20 = ((HEAP32[$3 >> 2] | 0) - $18 | 0) / 36 | 0;
   $23 = $20 << 1;
   __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEEC2EmmS6_($2, $20 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, ((HEAP32[$5 >> 2] | 0) - $18 | 0) / 36 | 0, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
   __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$051 = 0, $$4 = 0, $13 = 0, $17 = 0, $20 = 0, $24 = 0, $25 = 0, $6 = 0, $7 = 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$4 = $0; else switch (HEAP8[$0 >> 0] | 0) {
 case 88:
  {
   $6 = $0 + 1 | 0;
   $7 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($6, $1, $2) | 0;
   if (($7 | 0) == ($6 | 0) | ($7 | 0) == ($1 | 0)) {
    $$4 = $0;
    break L1;
   }
   $$4 = (HEAP8[$7 >> 0] | 0) == 69 ? $7 + 1 | 0 : $0;
   break L1;
   break;
  }
 case 74:
  {
   $13 = $0 + 1 | 0;
   if (($13 | 0) == ($1 | 0)) {
    $$4 = $0;
    break L1;
   }
   $$051 = $13;
   while (1) {
    if ((HEAP8[$$051 >> 0] | 0) == 69) break;
    $17 = __ZN10__cxxabiv112_GLOBAL__N_118parse_template_argINS0_2DbEEEPKcS4_S4_RT_($$051, $1, $2) | 0;
    if (($17 | 0) == ($$051 | 0)) {
     $$4 = $0;
     break L1;
    } else $$051 = $17;
   }
   $$4 = $$051 + 1 | 0;
   break L1;
   break;
  }
 case 76:
  {
   $20 = $0 + 1 | 0;
   if (($20 | 0) != ($1 | 0)) if ((HEAP8[$20 >> 0] | 0) == 90) {
    $24 = $0 + 2 | 0;
    $25 = __ZN10__cxxabiv112_GLOBAL__N_114parse_encodingINS0_2DbEEEPKcS4_S4_RT_($24, $1, $2) | 0;
    if (($25 | 0) == ($24 | 0) | ($25 | 0) == ($1 | 0)) {
     $$4 = $0;
     break L1;
    }
    $$4 = (HEAP8[$25 >> 0] | 0) == 69 ? $25 + 1 | 0 : $0;
    break L1;
   }
   $$4 = __ZN10__cxxabiv112_GLOBAL__N_118parse_expr_primaryINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   break L1;
   break;
  }
 default:
  {
   $$4 = __ZN10__cxxabiv112_GLOBAL__N_110parse_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   break L1;
  }
 } while (0);
 return $$4 | 0;
}

function __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((((HEAP32[$3 >> 2] | 0) - $6 | 0) / 12 | 0) >>> 0 < $1 >>> 0) {
  $13 = (($6 - (HEAP32[$0 >> 2] | 0) | 0) / 12 | 0) + $1 | 0;
  $14 = __ZNKSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $20 = ((HEAP32[$3 >> 2] | 0) - $18 | 0) / 12 | 0;
   $23 = $20 << 1;
   __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEEC2EmmSA_($2, $20 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, ((HEAP32[$5 >> 2] | 0) - $18 | 0) / 12 | 0, $0 + 8 | 0);
   __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE($0, $2);
   __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function ___mo_lookup($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$090 = 0, $$094 = 0, $$4 = 0, $10 = 0, $13 = 0, $17 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $31 = 0, $35 = 0, $4 = 0, $44 = 0, $46 = 0, $49 = 0, $53 = 0, $63 = 0, $7 = 0;
 $4 = (HEAP32[$0 >> 2] | 0) + 1794895138 | 0;
 $7 = _swapc(HEAP32[$0 + 8 >> 2] | 0, $4) | 0;
 $10 = _swapc(HEAP32[$0 + 12 >> 2] | 0, $4) | 0;
 $13 = _swapc(HEAP32[$0 + 16 >> 2] | 0, $4) | 0;
 L1 : do if ($7 >>> 0 < $1 >>> 2 >>> 0) {
  $17 = $1 - ($7 << 2) | 0;
  if ($10 >>> 0 < $17 >>> 0 & $13 >>> 0 < $17 >>> 0) if (!(($13 | $10) & 3)) {
   $23 = $10 >>> 2;
   $24 = $13 >>> 2;
   $$090 = 0;
   $$094 = $7;
   while (1) {
    $25 = $$094 >>> 1;
    $26 = $$090 + $25 | 0;
    $27 = $26 << 1;
    $28 = $27 + $23 | 0;
    $31 = _swapc(HEAP32[$0 + ($28 << 2) >> 2] | 0, $4) | 0;
    $35 = _swapc(HEAP32[$0 + ($28 + 1 << 2) >> 2] | 0, $4) | 0;
    if (!($35 >>> 0 < $1 >>> 0 & $31 >>> 0 < ($1 - $35 | 0) >>> 0)) {
     $$4 = 0;
     break L1;
    }
    if (HEAP8[$0 + ($35 + $31) >> 0] | 0) {
     $$4 = 0;
     break L1;
    }
    $44 = _strcmp($2, $0 + $35 | 0) | 0;
    if (!$44) break;
    $63 = ($44 | 0) < 0;
    if (($$094 | 0) == 1) {
     $$4 = 0;
     break L1;
    }
    $$090 = $63 ? $$090 : $26;
    $$094 = $63 ? $25 : $$094 - $25 | 0;
   }
   $46 = $27 + $24 | 0;
   $49 = _swapc(HEAP32[$0 + ($46 << 2) >> 2] | 0, $4) | 0;
   $53 = _swapc(HEAP32[$0 + ($46 + 1 << 2) >> 2] | 0, $4) | 0;
   if ($53 >>> 0 < $1 >>> 0 & $49 >>> 0 < ($1 - $53 | 0) >>> 0) $$4 = (HEAP8[$0 + ($53 + $49) >> 0] | 0) == 0 ? $0 + $53 | 0 : 0; else $$4 = 0;
  } else $$4 = 0; else $$4 = 0;
 } else $$4 = 0; while (0);
 return $$4 | 0;
}
function __ZN6vision18Condition4Points2dIfEEbPT_S2_S2_S2_RS1_S2_PKS1_S5_S5_S5_($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = $9 | 0;
 var $$0 = 0, $17 = 0.0, $18 = 0, $20 = 0, $23 = 0, $26 = 0, $29 = 0.0, $32 = 0.0, $34 = 0.0, $36 = 0.0, $38 = 0.0, $40 = 0.0, $42 = 0.0, $44 = 0.0, $46 = 0.0, $66 = 0.0, $71 = 0.0;
 $17 = (+HEAPF32[$6 >> 2] + +HEAPF32[$7 >> 2] + +HEAPF32[$8 >> 2] + +HEAPF32[$9 >> 2]) * .25;
 HEAPF32[$5 >> 2] = $17;
 $18 = $6 + 4 | 0;
 $20 = $7 + 4 | 0;
 $23 = $8 + 4 | 0;
 $26 = $9 + 4 | 0;
 $29 = (+HEAPF32[$18 >> 2] + +HEAPF32[$20 >> 2] + +HEAPF32[$23 >> 2] + +HEAPF32[$26 >> 2]) * .25;
 HEAPF32[$5 + 4 >> 2] = $29;
 $32 = +HEAPF32[$6 >> 2] - $17;
 $34 = +HEAPF32[$18 >> 2] - $29;
 $36 = +HEAPF32[$7 >> 2] - $17;
 $38 = +HEAPF32[$20 >> 2] - $29;
 $40 = +HEAPF32[$8 >> 2] - $17;
 $42 = +HEAPF32[$23 >> 2] - $29;
 $44 = +HEAPF32[$9 >> 2] - $17;
 $46 = +HEAPF32[$26 >> 2] - $29;
 $66 = (+Math_sqrt(+($32 * $32 + $34 * $34)) + +Math_sqrt(+($36 * $36 + $38 * $38)) + +Math_sqrt(+($40 * $40 + $42 * $42)) + +Math_sqrt(+($44 * $44 + $46 * $46))) * .25;
 if ($66 == 0.0) $$0 = 0; else {
  $71 = 1.0 / $66 * 1.4142135623730951;
  HEAPF32[$4 >> 2] = $71;
  HEAPF32[$0 >> 2] = $32 * $71;
  HEAPF32[$0 + 4 >> 2] = $34 * +HEAPF32[$4 >> 2];
  HEAPF32[$1 >> 2] = $36 * +HEAPF32[$4 >> 2];
  HEAPF32[$1 + 4 >> 2] = $38 * +HEAPF32[$4 >> 2];
  HEAPF32[$2 >> 2] = $40 * +HEAPF32[$4 >> 2];
  HEAPF32[$2 + 4 >> 2] = $42 * +HEAPF32[$4 >> 2];
  HEAPF32[$3 >> 2] = $44 * +HEAPF32[$4 >> 2];
  HEAPF32[$3 + 4 >> 2] = $46 * +HEAPF32[$4 >> 2];
  $$0 = 1;
 }
 return $$0 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis3IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $14 = 0.0, $15 = 0.0, $17 = 0.0, $19 = 0.0, $2 = 0, $21 = 0.0, $23 = 0, $24 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 108 | 0;
 $4 = $0 + 72 | 0;
 $5 = $1 + 108 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($3, $4, $5);
 $6 = $0 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($6, $4, $1 + 144 | 0);
 $8 = $0 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($8, $4, $1 + 180 | 0);
 $10 = $0 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($10, $4, $1 + 216 | 0);
 $12 = $0 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($12, $4, $1 + 252 | 0);
 $14 = +__ZN6vision11SumSquares9IfEET_PKS1_($3);
 HEAPF32[$2 >> 2] = $14;
 $15 = +__ZN6vision11SumSquares9IfEET_PKS1_($6);
 HEAPF32[$2 + 4 >> 2] = $15;
 $17 = +__ZN6vision11SumSquares9IfEET_PKS1_($8);
 HEAPF32[$2 + 8 >> 2] = $17;
 $19 = +__ZN6vision11SumSquares9IfEET_PKS1_($10);
 HEAPF32[$2 + 12 >> 2] = $19;
 $21 = +__ZN6vision11SumSquares9IfEET_PKS1_($12);
 HEAPF32[$2 + 16 >> 2] = $21;
 $23 = __ZN6vision9MaxIndex5IfEEiPKT_($2) | 0;
 $24 = $2 + ($23 << 2) | 0;
 if (+HEAPF32[$24 >> 2] == 0.0) $$0 = 0; else {
  $27 = $23 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_($3, $3 + ($27 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_($5, $5 + ($27 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($3, $3, 1.0 / +Math_sqrt(+(+HEAPF32[$24 >> 2])));
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _confidenceCutoff($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$049 = 0, $$150 = 0, $$2 = 0, $16 = 0, $18 = 0, $28 = 0, $30 = 0, $36 = 0, $4 = 0, $6 = 0;
 L1 : do switch (HEAP32[$0 + 24 >> 2] | 0) {
 case 1:
 case 0:
  {
   $4 = HEAP32[$0 + 44 >> 2] | 0;
   $$049 = 0;
   while (1) {
    if (($$049 | 0) >= ($4 | 0)) break L1;
    $6 = $0 + 48 + ($$049 << 8) + 4 | 0;
    if ((HEAP32[$6 >> 2] | 0) > -1) if (+HEAPF64[$0 + 48 + ($$049 << 8) + 32 >> 3] < .5) {
     HEAP32[$0 + 48 + ($$049 << 8) + 8 >> 2] = -1;
     HEAP32[$6 >> 2] = -1;
     HEAP32[$0 + 48 + ($$049 << 8) + 236 >> 2] = 6;
    }
    $$049 = $$049 + 1 | 0;
   }
   break;
  }
 case 2:
  {
   $16 = HEAP32[$0 + 44 >> 2] | 0;
   $$150 = 0;
   while (1) {
    if (($$150 | 0) >= ($16 | 0)) break L1;
    $18 = $0 + 48 + ($$150 << 8) + 4 | 0;
    if ((HEAP32[$18 >> 2] | 0) > -1) if (+HEAPF64[$0 + 48 + ($$150 << 8) + 32 >> 3] < .5) {
     HEAP32[$0 + 48 + ($$150 << 8) + 12 >> 2] = -1;
     HEAP32[$18 >> 2] = -1;
     HEAP32[$0 + 48 + ($$150 << 8) + 236 >> 2] = 6;
    }
    $$150 = $$150 + 1 | 0;
   }
   break;
  }
 default:
  {
   $28 = HEAP32[$0 + 44 >> 2] | 0;
   $$2 = 0;
   while (1) {
    if (($$2 | 0) >= ($28 | 0)) break L1;
    $30 = $0 + 48 + ($$2 << 8) + 8 | 0;
    if ((HEAP32[$30 >> 2] | 0) > -1) if (+HEAPF64[$0 + 48 + ($$2 << 8) + 40 >> 3] < .5) {
     HEAP32[$30 >> 2] = -1;
     $$0 = 0;
    } else $$0 = 1; else $$0 = 1;
    $36 = $0 + 48 + ($$2 << 8) + 12 | 0;
    if ((HEAP32[$36 >> 2] | 0) > -1) if (+HEAPF64[$0 + 48 + ($$2 << 8) + 48 >> 3] < .5) {
     HEAP32[$36 >> 2] = -1;
     if (!$$0) HEAP32[$0 + 48 + ($$2 << 8) + 236 >> 2] = 6;
    }
    $$2 = $$2 + 1 | 0;
   }
  }
 } while (0);
 return;
}

function _getMultiEachMarkerInfo($id, $multiMarkerId, $markerIndex) {
 $id = $id | 0;
 $multiMarkerId = $multiMarkerId | 0;
 $markerIndex = $markerIndex | 0;
 var $2 = 0, $5 = 0, $8 = 0, $call7 = 0, $id$addr = 0, $retval$2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$2 = HEAP32[3413] | 0; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  $2 = HEAP32[$call7 + 280 >> 2] | 0;
  if (($multiMarkerId | 0) < 0 ? 1 : (HEAP32[$call7 + 284 >> 2] | 0) - $2 >> 3 >>> 0 <= $multiMarkerId >>> 0) {
   $retval$2 = HEAP32[3414] | 0;
   break;
  }
  $5 = HEAP32[$2 + ($multiMarkerId << 3) + 4 >> 2] | 0;
  if (($markerIndex | 0) < 0 ? 1 : (HEAP32[$5 + 4 >> 2] | 0) <= ($markerIndex | 0)) {
   $retval$2 = HEAP32[3415] | 0;
   break;
  } else {
   $8 = HEAP32[$5 >> 2] | 0;
   _matrixCopy($8 + ($markerIndex * 320 | 0) + 16 | 0, 51520);
   _emscripten_asm_const_iiiid(1, HEAP32[$8 + ($markerIndex * 320 | 0) + 304 >> 2] | 0, HEAP32[$8 + ($markerIndex * 320 | 0) >> 2] | 0, HEAP32[$8 + ($markerIndex * 320 | 0) + 4 >> 2] | 0, +(+HEAPF64[$8 + ($markerIndex * 320 | 0) + 8 >> 3])) | 0;
   $retval$2 = 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$2 | 0;
}

function _arImageProcLumaHistAndOtsu($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$062 = 0, $$064 = 0.0, $$067 = 0.0, $$068 = 0.0, $$070 = 0.0, $$169 = 0.0, $$2 = 0, $$266 = 0.0, $$3 = 0, $$pre$phiZ2D = 0, $15 = 0.0, $17 = 0, $21 = 0.0, $25 = 0.0, $3 = 0, $30 = 0.0, $32 = 0.0, $33 = 0, $34 = 0, $indvars$iv = 0, $indvars$iv71 = 0;
 $3 = _arImageProcLumaHist($0, $1) | 0;
 if (($3 | 0) < 0) $$0 = $3; else {
  $$070 = 0.0;
  $indvars$iv71 = 1;
  do {
   $$070 = $$070 + +((Math_imul(HEAP32[$0 + 12 + ($indvars$iv71 << 2) >> 2] | 0, $indvars$iv71) | 0) >>> 0);
   $indvars$iv71 = $indvars$iv71 + 1 | 0;
  } while (($indvars$iv71 | 0) != 256);
  $15 = +(Math_imul(HEAP32[$0 + 8 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0) | 0);
  $$062 = 0;
  $$064 = 0.0;
  $$067 = 0.0;
  $$068 = 0.0;
  $indvars$iv = 0;
  while (1) {
   $17 = HEAP32[$0 + 12 + ($indvars$iv << 2) >> 2] | 0;
   $$067 = $$067 + +($17 >>> 0);
   if ($$067 != 0.0) {
    $21 = $15 - $$067;
    if ($21 == 0.0) {
     $$3 = $$062;
     break;
    }
    $25 = $$068 + +((Math_imul($17, $indvars$iv) | 0) >>> 0);
    $30 = $25 / $$067 - ($$070 - $25) / $21;
    $32 = $30 * ($$067 * $21 * $30);
    $33 = $32 > $$064;
    $34 = $indvars$iv & 255;
    $$169 = $25;
    $$2 = $33 ? $34 : $$062;
    $$266 = $33 ? $32 : $$064;
    $$pre$phiZ2D = $34;
   } else {
    $$169 = $$068;
    $$2 = $$062;
    $$266 = $$064;
    $$pre$phiZ2D = $indvars$iv & 255;
   }
   if ($$pre$phiZ2D << 24 >> 24 == -1) {
    $$3 = $$2;
    break;
   } else {
    $$062 = $$2;
    $$064 = $$266;
    $$068 = $$169;
    $indvars$iv = $indvars$iv + 1 | 0;
   }
  }
  HEAP8[$2 >> 0] = $$3;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr21__is_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $12 = 0, $14 = 0, $15 = 0, $18 = 0, $25 = 0, $29 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $spec$select = 0;
 $4 = $1;
 $5 = $2 - $4 | 0;
 $6 = $0 + 8 | 0;
 $8 = HEAP32[$0 >> 2] | 0;
 $11 = $8;
 do if ($5 >>> 0 > ((HEAP32[$6 >> 2] | 0) - $8 | 0) >>> 0) {
  __ZNSt3__26vectorIhNS_9allocatorIhEEE10deallocateEv($0);
  $25 = __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($0) | 0;
  if ($25 >>> 0 < $5 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $29 = (HEAP32[$6 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0;
   $32 = $29 << 1;
   __ZNSt3__26vectorIhNS_9allocatorIhEEE8allocateEm($0, $29 >>> 0 < $25 >>> 1 >>> 0 ? ($32 >>> 0 < $5 >>> 0 ? $5 : $32) : $25);
   __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($0, $1, $2, $5);
   break;
  }
 } else {
  $12 = $0 + 4 | 0;
  $14 = (HEAP32[$12 >> 2] | 0) - $8 | 0;
  $15 = $5 >>> 0 > $14 >>> 0;
  $spec$select = $15 ? $1 + $14 | 0 : $2;
  $18 = $spec$select - $4 | 0;
  if ($18 | 0) _memmove($11 | 0, $1 | 0, $18 | 0) | 0;
  if ($15) {
   __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($0, $spec$select, $2, $5 - (HEAP32[$12 >> 2] | 0) + (HEAP32[$0 >> 2] | 0) | 0);
   break;
  } else {
   HEAP32[$12 >> 2] = $11 + $18;
   break;
  }
 } while (0);
 return;
}

function __ZL15genBWImageQuartPhiiPiS0_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$065 = 0, $$066 = 0, $$067 = 0, $$068 = 0, $$069 = 0, $$070 = 0, $$1 = 0, $11 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = ($1 | 0) / 4 | 0;
 HEAP32[$3 >> 2] = $5;
 $6 = ($2 | 0) / 4 | 0;
 HEAP32[$4 >> 2] = $6;
 $8 = _malloc(Math_imul($6, $5) | 0) | 0;
 if (!$8) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 }
 $$0 = 0;
 $$066 = $8;
 while (1) {
  if (($$0 | 0) >= ($6 | 0)) break;
  $11 = $$0 << 2;
  $$065 = 0;
  $$067 = $0 + (Math_imul($11, $1) | 0) | 0;
  $$068 = $0 + (Math_imul($11 | 3, $1) | 0) | 0;
  $$069 = $0 + (Math_imul($11 | 2, $1) | 0) | 0;
  $$070 = $0 + (Math_imul($11 | 1, $1) | 0) | 0;
  $$1 = $$066;
  while (1) {
   if (($$065 | 0) >= ($5 | 0)) break;
   HEAP8[$$1 >> 0] = ((HEAPU8[$$067 + 1 >> 0] | 0) + (HEAPU8[$$067 >> 0] | 0) + (HEAPU8[$$067 + 2 >> 0] | 0) + (HEAPU8[$$067 + 3 >> 0] | 0) + (HEAPU8[$$070 >> 0] | 0) + (HEAPU8[$$070 + 1 >> 0] | 0) + (HEAPU8[$$070 + 2 >> 0] | 0) + (HEAPU8[$$070 + 3 >> 0] | 0) + (HEAPU8[$$069 >> 0] | 0) + (HEAPU8[$$069 + 1 >> 0] | 0) + (HEAPU8[$$069 + 2 >> 0] | 0) + (HEAPU8[$$069 + 3 >> 0] | 0) + (HEAPU8[$$068 >> 0] | 0) + (HEAPU8[$$068 + 1 >> 0] | 0) + (HEAPU8[$$068 + 2 >> 0] | 0) + (HEAPU8[$$068 + 3 >> 0] | 0) | 0) / 16 | 0;
   $$065 = $$065 + 1 | 0;
   $$067 = $$067 + 4 | 0;
   $$068 = $$068 + 4 | 0;
   $$069 = $$069 + 4 | 0;
   $$070 = $$070 + 4 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$066 = $$1;
 }
 STACKTOP = sp;
 return $8 | 0;
}

function __ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 $$byval_copy = sp + 184 | 0;
 $5 = sp + 192 | 0;
 $6 = sp + 160 | 0;
 $7 = sp;
 $8 = sp + 188 | 0;
 HEAP8[$5 >> 0] = HEAP8[46964] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[46965] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[46966] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[46967] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[46968] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[46969] | 0;
 $9 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $10 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 20, $9, $5, $$byval_copy) | 0;
 $11 = $6 + $10 | 0;
 $12 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $11, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 $13 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57916) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$13 >> 2] | 0) + 48 >> 2] & 15]($13, $6, $11, $7) | 0;
 $17 = $7 + ($10 << 2) | 0;
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $24 = __ZNSt3__216__pad_and_outputIwNS_11char_traitsIwEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, ($12 | 0) == ($11 | 0) ? $17 : $7 + ($12 - $6 << 2) | 0, $17, $2, $3) | 0;
 STACKTOP = sp;
 return $24 | 0;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE24__emplace_back_slow_pathIJS5_EEEvDpOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 4) + 1 | 0;
 $9 = __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 3;
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEEC2EmmS9_($2, $15 >> 4 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 4, $0 + 12 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  HEAP32[$25 >> 2] = 0;
  HEAP32[$25 + 4 >> 2] = 0;
  HEAP32[$25 + 8 >> 2] = 0;
  HEAP32[$25 + 12 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$24 >> 2] = $25 + 16;
  __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($0, $2);
  __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZN6vision25MatrixInverseSymmetric3x3IfEEbPT_PKS1_S1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 var $$0 = 0, $11 = 0, $14 = 0.0, $15 = 0, $17 = 0, $23 = 0.0, $24 = 0, $3 = 0.0, $30 = 0.0, $31 = 0, $36 = 0.0, $44 = 0.0, $45 = 0, $50 = 0.0, $6 = 0.0, $7 = 0, $9 = 0;
 $3 = +__ZN6vision23DeterminantSymmetric3x3IfEET_PKS1_($1);
 if (!(+Math_abs(+$3) <= $2)) {
  $6 = 1.0 / $3;
  $7 = $1 + 16 | 0;
  $9 = $1 + 20 | 0;
  $11 = $1 + 32 | 0;
  $14 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_(+HEAPF32[$7 >> 2], +HEAPF32[$9 >> 2], +HEAPF32[$11 >> 2]);
  HEAPF32[$0 >> 2] = $14;
  $15 = $1 + 8 | 0;
  $17 = $1 + 4 | 0;
  $23 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$15 >> 2], +HEAPF32[$17 >> 2], +HEAPF32[$11 >> 2], +HEAPF32[$1 + 28 >> 2]);
  $24 = $0 + 4 | 0;
  HEAPF32[$24 >> 2] = $23;
  $30 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$17 >> 2], +HEAPF32[$15 >> 2], +HEAPF32[$7 >> 2], +HEAPF32[$9 >> 2]);
  $31 = $0 + 8 | 0;
  HEAPF32[$31 >> 2] = $30;
  $36 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_(+HEAPF32[$1 >> 2], +HEAPF32[$15 >> 2], +HEAPF32[$11 >> 2]);
  HEAPF32[$0 + 16 >> 2] = $36;
  $44 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$15 >> 2], +HEAPF32[$1 >> 2], +HEAPF32[$9 >> 2], +HEAPF32[$1 + 12 >> 2]);
  $45 = $0 + 20 | 0;
  HEAPF32[$45 >> 2] = $44;
  $50 = $6 * +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_(+HEAPF32[$1 >> 2], +HEAPF32[$17 >> 2], +HEAPF32[$7 >> 2]);
  HEAPF32[$0 + 32 >> 2] = $50;
  HEAP32[$0 + 12 >> 2] = HEAP32[$24 >> 2];
  HEAP32[$0 + 24 >> 2] = HEAP32[$31 >> 2];
  HEAP32[$0 + 28 >> 2] = HEAP32[$45 >> 2];
  $$0 = 1;
 } else $$0 = 0;
 return $$0 | 0;
}

function _sep_upsample($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$051 = 0, $$052 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $16 = 0, $27 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $38 = 0, $51 = 0, $8 = 0, $9 = 0, $spec$select = 0;
 $8 = HEAP32[$0 + 452 >> 2] | 0;
 $9 = $8 + 92 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 $11 = $0 + 312 | 0;
 $12 = HEAP32[$11 >> 2] | 0;
 if (($10 | 0) < ($12 | 0)) {
  $32 = $10;
  $33 = $12;
 } else {
  $16 = $0 + 36 | 0;
  $$051 = HEAP32[$0 + 216 >> 2] | 0;
  $$052 = 0;
  while (1) {
   if (($$052 | 0) >= (HEAP32[$16 >> 2] | 0)) break;
   $27 = (HEAP32[$1 + ($$052 << 2) >> 2] | 0) + ((Math_imul(HEAP32[$8 + 100 + ($$052 << 2) >> 2] | 0, HEAP32[$2 >> 2] | 0) | 0) << 2) | 0;
   FUNCTION_TABLE_viiii[HEAP32[$8 + 52 + ($$052 << 2) >> 2] & 31]($0, $$051, $27, $8 + 12 + ($$052 << 2) | 0);
   $$051 = $$051 + 84 | 0;
   $$052 = $$052 + 1 | 0;
  }
  HEAP32[$9 >> 2] = 0;
  $32 = 0;
  $33 = HEAP32[$11 >> 2] | 0;
 }
 $31 = $33 - $32 | 0;
 $34 = $8 + 96 | 0;
 $35 = HEAP32[$34 >> 2] | 0;
 $spec$select = $31 >>> 0 > $35 >>> 0 ? $35 : $31;
 $37 = HEAP32[$5 >> 2] | 0;
 $38 = $6 - $37 | 0;
 $$1 = $spec$select >>> 0 > $38 >>> 0 ? $38 : $spec$select;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$0 + 456 >> 2] | 0) + 4 >> 2] & 31]($0, $8 + 12 | 0, $32, $4 + ($37 << 2) | 0, $$1);
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$1;
 HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) - $$1;
 $51 = (HEAP32[$9 >> 2] | 0) + $$1 | 0;
 HEAP32[$9 >> 2] = $51;
 if (($51 | 0) >= (HEAP32[$11 >> 2] | 0)) HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
 return;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryERKNS_5ImageE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $16 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $25 = 0, $3 = 0, $4 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 92 | 0;
 $4 = __ZN6vision25GaussianScaleSpacePyramid6imagesEv($3) | 0;
 if ((HEAP32[$4 + 4 >> 2] | 0) == (HEAP32[$4 >> 2] | 0)) label = 4; else {
  $9 = __ZN6vision25GaussianScaleSpacePyramid6imagesEv($3) | 0;
  $11 = __ZNK6vision5Image5widthEv(HEAP32[$9 >> 2] | 0) | 0;
  if (($11 | 0) == (__ZNK6vision5Image5widthEv($1) | 0)) {
   $14 = __ZN6vision25GaussianScaleSpacePyramid6imagesEv($3) | 0;
   $16 = __ZNK6vision5Image6heightEv(HEAP32[$14 >> 2] | 0) | 0;
   if (($16 | 0) != (__ZNK6vision5Image6heightEv($1) | 0)) label = 4;
  } else label = 4;
 }
 if ((label | 0) == 4) {
  $19 = __ZNK6vision5Image5widthEv($1) | 0;
  $21 = __ZN6vision10numOctavesEiii($19, __ZNK6vision5Image6heightEv($1) | 0, 8) | 0;
  $22 = __ZNK6vision5Image5widthEv($1) | 0;
  __ZN6vision18BinomialPyramid32f5allocEmmi($3, $22, __ZNK6vision5Image6heightEv($1) | 0, $21);
 }
 __ZN6vision11ScopedTimerC2EPKc($2, 27199);
 if (__ZN6vision11ScopedTimercvbEv($2) | 0) __ZN6vision18BinomialPyramid32f5buildERKNS_5ImageE($3, $1);
 __ZN6vision11ScopedTimerD2Ev($2);
 $25 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryEPKNS_25GaussianScaleSpacePyramidE($0, $3) | 0;
 STACKTOP = sp;
 return $25 | 0;
}

function __ZNSt3__29__sift_upIRNS_4lessIN6vision17PriorityQueueItemILi96EEEEENS_11__wrap_iterIPS4_EEEEvT0_SA_T_NS_15iterator_traitsISA_E15difference_typeE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$sroa$0$0$in = 0, $11 = 0, $13 = 0, $18 = 0, $19 = 0, $23 = 0, $28 = 0, $29 = 0, $29$phi = 0, $30 = 0, $37 = 0, $39 = 0, $4 = 0, $44 = 0, $45 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if (($3 | 0) > 1) {
  $7 = ($3 + -2 | 0) / 2 | 0;
  $8 = HEAP32[$0 >> 2] | 0;
  $9 = $8 + ($7 << 3) | 0;
  $11 = (HEAP32[$1 >> 2] | 0) + -8 | 0;
  HEAP32[$1 >> 2] = $11;
  if (__ZNK6vision17PriorityQueueItemILi96EEltERKS1_($9, $11) | 0) {
   $13 = $11;
   $18 = HEAP32[$13 + 4 >> 2] | 0;
   $19 = $4;
   HEAP32[$19 >> 2] = HEAP32[$13 >> 2];
   HEAP32[$19 + 4 >> 2] = $18;
   $$0 = $7;
   $$sroa$0$0$in = $9;
   $29 = $11;
   while (1) {
    $23 = $$sroa$0$0$in;
    $28 = HEAP32[$23 + 4 >> 2] | 0;
    $30 = $29;
    HEAP32[$30 >> 2] = HEAP32[$23 >> 2];
    HEAP32[$30 + 4 >> 2] = $28;
    HEAP32[$1 >> 2] = $$sroa$0$0$in;
    if (!$$0) break;
    $$0 = ($$0 + -1 | 0) / 2 | 0;
    $37 = $8 + ($$0 << 3) | 0;
    if (!(__ZNK6vision17PriorityQueueItemILi96EEltERKS1_($37, $4) | 0)) break; else {
     $29$phi = $$sroa$0$0$in;
     $$sroa$0$0$in = $37;
     $29 = $29$phi;
    }
   }
   $39 = $4;
   $44 = HEAP32[$39 + 4 >> 2] | 0;
   $45 = $$sroa$0$0$in;
   HEAP32[$45 >> 2] = HEAP32[$39 >> 2];
   HEAP32[$45 + 4 >> 2] = $44;
   __ZN6vision17PriorityQueueItemILi96EED2Ev($4);
  }
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$byval_copy = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $24 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $$byval_copy = sp + 72 | 0;
 $5 = sp + 80 | 0;
 $6 = sp + 48 | 0;
 $7 = sp;
 $8 = sp + 76 | 0;
 HEAP8[$5 >> 0] = HEAP8[46964] | 0;
 HEAP8[$5 + 1 >> 0] = HEAP8[46965] | 0;
 HEAP8[$5 + 2 >> 0] = HEAP8[46966] | 0;
 HEAP8[$5 + 3 >> 0] = HEAP8[46967] | 0;
 HEAP8[$5 + 4 >> 0] = HEAP8[46968] | 0;
 HEAP8[$5 + 5 >> 0] = HEAP8[46969] | 0;
 $9 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$$byval_copy >> 2] = $4;
 $10 = __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($6, 20, $9, $5, $$byval_copy) | 0;
 $11 = $6 + $10 | 0;
 $12 = __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($6, $11, $2) | 0;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $2);
 $13 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57884) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$13 >> 2] | 0) + 32 >> 2] & 15]($13, $6, $11, $7) | 0;
 $17 = $7 + $10 | 0;
 HEAP32[$8 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$8 >> 2];
 $24 = __ZNSt3__216__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_($$byval_copy, $7, ($12 | 0) == ($11 | 0) ? $17 : $7 + ($12 - $6) | 0, $17, $2, $3) | 0;
 STACKTOP = sp;
 return $24 | 0;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE24__emplace_back_slow_pathIJEEEvDpOT_($0) {
 $0 = $0 | 0;
 var $1 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $23 = 0, $24 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $1 = sp;
 $2 = $0 + 4 | 0;
 $7 = (((HEAP32[$2 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 $8 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv($0) | 0;
 if ($8 >>> 0 < $7 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $13 = HEAP32[$0 >> 2] | 0;
  $15 = ((HEAP32[$0 + 8 >> 2] | 0) - $13 | 0) / 24 | 0;
  $18 = $15 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_($1, $15 >>> 0 < $8 >>> 1 >>> 0 ? ($18 >>> 0 < $7 >>> 0 ? $7 : $18) : $8, ((HEAP32[$2 >> 2] | 0) - $13 | 0) / 24 | 0, $0 + 12 | 0);
  $23 = $1 + 8 | 0;
  $24 = HEAP32[$23 >> 2] | 0;
  HEAP32[$24 >> 2] = 0;
  HEAP32[$24 + 4 >> 2] = 0;
  HEAP32[$24 + 8 >> 2] = 0;
  HEAP32[$24 + 12 >> 2] = 0;
  HEAP32[$24 + 16 >> 2] = 0;
  HEAP32[$24 + 20 >> 2] = 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($24);
  HEAP32[$23 >> 2] = $24 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $1);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev($1);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, dest = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = (((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 36 | 0) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $16 = ((HEAP32[$0 + 8 >> 2] | 0) - $14 | 0) / 36 | 0;
  $19 = $16 << 1;
  __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEEC2EmmS6_($2, $16 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, ((HEAP32[$3 >> 2] | 0) - $14 | 0) / 36 | 0, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  dest = $25;
  src = $1;
  stop = dest + 36 | 0;
  do {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP32[$24 >> 2] = $25 + 36;
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZN6vision25DoGScaleInvariantDetector5allocEPKNS_25GaussianScaleSpacePyramidE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $22 = 0, $23 = 0, $25 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0;
 __ZN6vision10DoGPyramid5allocEPKNS_25GaussianScaleSpacePyramidE($0 + 32 | 0, $1);
 $4 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $6 = __ZNK6vision5Image5widthEv(HEAP32[$4 >> 2] | 0) | 0;
 $7 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $9 = __ZNK6vision5Image6heightEv(HEAP32[$7 >> 2] | 0) | 0;
 $10 = __ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv($1) | 0;
 __ZN6vision21OrientationAssignment5allocEmmiiiffif($0 + 92 | 0, $6, $9, $10, __ZNK6vision25GaussianScaleSpacePyramid18numScalesPerOctaveEv($1) | 0, 36, 3.0, 1.5, 5, .800000011920929);
 $12 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $14 = __ZNK6vision5Image5widthEv(HEAP32[$12 >> 2] | 0) | 0;
 HEAP32[$0 >> 2] = $14;
 $15 = __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($1) | 0;
 $17 = __ZNK6vision5Image6heightEv(HEAP32[$15 >> 2] | 0) | 0;
 HEAP32[$0 + 4 >> 2] = $17;
 $19 = $0 + 16 | 0;
 __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE6resizeEm($19, HEAP32[$0 + 8 >> 2] | 0);
 $22 = $0 + 20 | 0;
 $23 = $0 + 12 | 0;
 $$0 = 0;
 while (1) {
  $25 = HEAP32[$19 >> 2] | 0;
  if ($$0 >>> 0 >= (((HEAP32[$22 >> 2] | 0) - $25 | 0) / 12 | 0) >>> 0) break;
  __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE6resizeEm($25 + ($$0 * 12 | 0) | 0, HEAP32[$23 >> 2] | 0);
  $$0 = $$0 + 1 | 0;
 }
 return;
}

function _make_funny_pointers($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$068 = 0, $$069 = 0, $$1 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $2 = 0, $22 = 0, $25 = 0, $27 = 0, $28 = 0, $31 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $4 = 0, $42 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 + 424 >> 2] | 0;
 $4 = HEAP32[$0 + 316 >> 2] | 0;
 $8 = HEAP32[$0 + 36 >> 2] | 0;
 $9 = $2 + 56 | 0;
 $10 = $2 + 60 | 0;
 $11 = $4 + 2 | 0;
 $12 = $4 + -2 | 0;
 $$0 = 0;
 $$069 = HEAP32[$0 + 216 >> 2] | 0;
 while (1) {
  if (($$0 | 0) >= ($8 | 0)) break;
  $19 = (Math_imul(HEAP32[$$069 + 36 >> 2] | 0, HEAP32[$$069 + 12 >> 2] | 0) | 0) / ($4 | 0) | 0;
  $22 = HEAP32[(HEAP32[$9 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $25 = HEAP32[(HEAP32[$10 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $27 = HEAP32[$2 + 8 + ($$0 << 2) >> 2] | 0;
  $28 = Math_imul($19, $11) | 0;
  $$068 = 0;
  while (1) {
   if (($$068 | 0) >= ($28 | 0)) break;
   $31 = HEAP32[$27 + ($$068 << 2) >> 2] | 0;
   HEAP32[$25 + ($$068 << 2) >> 2] = $31;
   HEAP32[$22 + ($$068 << 2) >> 2] = $31;
   $$068 = $$068 + 1 | 0;
  }
  $35 = $19 << 1;
  $36 = Math_imul($19, $4) | 0;
  $37 = Math_imul($19, $12) | 0;
  $$1 = 0;
  while (1) {
   if (($$1 | 0) >= ($35 | 0)) break;
   $39 = $$1 + $36 | 0;
   $42 = $$1 + $37 | 0;
   HEAP32[$25 + ($42 << 2) >> 2] = HEAP32[$27 + ($39 << 2) >> 2];
   HEAP32[$25 + ($39 << 2) >> 2] = HEAP32[$27 + ($42 << 2) >> 2];
   $$1 = $$1 + 1 | 0;
  }
  $$2 = 0;
  while (1) {
   if (($$2 | 0) >= ($19 | 0)) break;
   HEAP32[$22 + ($$2 - $19 << 2) >> 2] = HEAP32[$22 >> 2];
   $$2 = $$2 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$069 = $$069 + 84 | 0;
 }
 return;
}

function _setup($width, $height, $cameraID) {
 $width = $width | 0;
 $height = $height | 0;
 $cameraID = $cameraID | 0;
 var $0 = 0, $call = 0, $call10 = 0, $call7 = 0, $call9 = 0, $id = 0, $mul4 = 0, $vararg_buffer1 = 0, $videoFrame = 0, $videoFrameSize = 0, $videoLuma = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer1 = sp + 8 | 0;
 $id = sp + 12 | 0;
 $0 = HEAP32[14047] | 0;
 HEAP32[14047] = $0 + 1;
 HEAP32[$id >> 2] = $0;
 $call = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id) | 0;
 HEAP32[$call >> 2] = HEAP32[$id >> 2];
 HEAP32[$call + 208 >> 2] = $width;
 HEAP32[$call + 212 >> 2] = $height;
 $mul4 = Math_imul($width << 2, $height) | 0;
 $videoFrameSize = $call + 200 | 0;
 HEAP32[$videoFrameSize >> 2] = $mul4;
 $call7 = _malloc($mul4) | 0;
 $videoFrame = $call + 196 | 0;
 HEAP32[$videoFrame >> 2] = $call7;
 $call9 = _malloc((HEAP32[$videoFrameSize >> 2] | 0) / 4 | 0) | 0;
 $videoLuma = $call + 204 | 0;
 HEAP32[$videoLuma >> 2] = $call9;
 $call10 = _arPattCreateHandle() | 0;
 HEAP32[$call + 220 >> 2] = $call10;
 if (!$call10) _arLog(0, 3, 44395, sp);
 _setCamera(HEAP32[$id >> 2] | 0, $cameraID) | 0;
 HEAP32[$vararg_buffer1 >> 2] = HEAP32[$videoFrameSize >> 2];
 _arLog(0, 1, 44432, $vararg_buffer1);
 _emscripten_asm_const_iiiiiii(0, HEAP32[$call >> 2] | 0, HEAP32[$videoFrame >> 2] | 0, HEAP32[$videoFrameSize >> 2] | 0, $call + 296 | 0, 51520, HEAP32[$videoLuma >> 2] | 0) | 0;
 STACKTOP = sp;
 return HEAP32[$call >> 2] | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$sroa$speculated = 0, $11 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $29 = 0, $32 = 0, $33 = 0, $41 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 if ((1073741806 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $11 = $0 + 8 | 0;
 if ((HEAP8[$11 + 3 >> 0] | 0) < 0) $29 = HEAP32[$0 >> 2] | 0; else $29 = $0;
 if ($1 >>> 0 < 536870887) {
  $17 = $2 + $1 | 0;
  $18 = $1 << 1;
  $$sroa$speculated = $17 >>> 0 < $18 >>> 0 ? $18 : $17;
  $23 = $$sroa$speculated >>> 0 < 2 ? 2 : $$sroa$speculated + 4 & -4;
  if ($23 >>> 0 > 1073741823) _abort(); else $26 = $23;
 } else $26 = 1073741807;
 $27 = __Znwm($26 << 2) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm($27, $29, $4) | 0;
 if ($6 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm($27 + ($4 << 2) | 0, $7, $6) | 0;
 $32 = $3 - $5 | 0;
 $33 = $32 - $4 | 0;
 if ($33 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm($27 + ($4 << 2) + ($6 << 2) | 0, $29 + ($4 << 2) + ($5 << 2) | 0, $33) | 0;
 if (($1 | 0) != 1) __ZdlPv($29);
 HEAP32[$0 >> 2] = $27;
 HEAP32[$11 >> 2] = $26 | -2147483648;
 $41 = $32 + $6 | 0;
 HEAP32[$0 + 4 >> 2] = $41;
 HEAP32[$8 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($27 + ($41 << 2) | 0, $8);
 STACKTOP = sp;
 return;
}

function _start_pass_2_quant($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $13 = 0, $18 = 0, $20 = 0, $26 = 0, $3 = 0, $36 = 0, $37 = 0, $38 = 0, $44 = 0, $45 = 0, $5 = 0, $50 = 0, $6 = 0;
 $3 = HEAP32[$0 + 460 >> 2] | 0;
 $5 = HEAP32[$3 + 24 >> 2] | 0;
 $6 = $0 + 88 | 0;
 if (!(HEAP32[$6 >> 2] | 0)) $13 = 0; else {
  HEAP32[$6 >> 2] = 2;
  $13 = 2;
 }
 if (!$1) {
  HEAP32[$3 + 4 >> 2] = ($13 | 0) == 2 ? 23 : 22;
  HEAP32[$3 + 8 >> 2] = 134;
  $18 = HEAP32[$0 + 132 >> 2] | 0;
  if (($18 | 0) < 1) {
   $20 = HEAP32[$0 >> 2] | 0;
   HEAP32[$20 + 20 >> 2] = 56;
   HEAP32[$20 + 24 >> 2] = 1;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  } else if (($18 | 0) > 256) {
   $26 = HEAP32[$0 >> 2] | 0;
   HEAP32[$26 + 20 >> 2] = 57;
   HEAP32[$26 + 24 >> 2] = 256;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  }
  if ((HEAP32[$6 >> 2] | 0) == 2) {
   $36 = ((HEAP32[$0 + 112 >> 2] | 0) * 6 | 0) + 12 | 0;
   $37 = $3 + 32 | 0;
   $38 = HEAP32[$37 >> 2] | 0;
   if (!$38) {
    $44 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 4 >> 2] & 63]($0, 1, $36) | 0;
    HEAP32[$37 >> 2] = $44;
    $45 = $44;
   } else $45 = $38;
   _jzero_far($45, $36);
   if (!(HEAP32[$3 + 40 >> 2] | 0)) _init_error_limit($0);
   HEAP32[$3 + 36 >> 2] = 0;
  }
 } else {
  HEAP32[$3 + 4 >> 2] = 21;
  HEAP32[$3 + 8 >> 2] = 133;
  HEAP32[$3 + 28 >> 2] = 1;
 }
 $50 = $3 + 28 | 0;
 if (HEAP32[$50 >> 2] | 0) {
  $$0 = 0;
  while (1) {
   if (($$0 | 0) == 32) break;
   _jzero_far(HEAP32[$5 + ($$0 << 2) >> 2] | 0, 4096);
   $$0 = $$0 + 1 | 0;
  }
  HEAP32[$50 >> 2] = 0;
 }
 return;
}
function __ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$sroa$04$0$i = 0, $$sroa$04$1$i = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $29 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 416 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(416);
 $7 = sp;
 $8 = sp + 400 | 0;
 HEAP32[$8 >> 2] = $7 + 400;
 __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc($0 + 8 | 0, $7, $8, $4, $5, $6);
 $11 = HEAP32[$8 >> 2] | 0;
 $$0$i$i = $7;
 $$sroa$04$0$i = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($11 | 0)) break;
  $14 = HEAP32[$$0$i$i >> 2] | 0;
  if (!$$sroa$04$0$i) $$sroa$04$1$i = 0; else {
   $16 = $$sroa$04$0$i + 24 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (($17 | 0) == (HEAP32[$$sroa$04$0$i + 28 >> 2] | 0)) {
    $23 = HEAP32[(HEAP32[$$sroa$04$0$i >> 2] | 0) + 52 >> 2] | 0;
    $24 = __ZNSt3__211char_traitsIwE11to_int_typeEw($14) | 0;
    $$0$i$i$i$i = FUNCTION_TABLE_iii[$23 & 63]($$sroa$04$0$i, $24) | 0;
   } else {
    HEAP32[$16 >> 2] = $17 + 4;
    HEAP32[$17 >> 2] = $14;
    $$0$i$i$i$i = __ZNSt3__211char_traitsIwE11to_int_typeEw($14) | 0;
   }
   $29 = __ZNSt3__211char_traitsIwE11eq_int_typeEjj($$0$i$i$i$i, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0;
   $$sroa$04$1$i = $29 ? 0 : $$sroa$04$0$i;
  }
  $$0$i$i = $$0$i$i + 4 | 0;
  $$sroa$04$0$i = $$sroa$04$1$i;
 }
 STACKTOP = sp;
 return $$sroa$04$0$i | 0;
}

function __ZN6vision24OrthogonalizeIdentity8x9IfEEbPT_PKS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $12 = 0.0, $15 = 0.0, $18 = 0.0, $2 = 0, $21 = 0.0, $24 = 0.0, $27 = 0.0, $29 = 0, $3 = 0, $4 = 0.0, $6 = 0.0, $9 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(384);
 $2 = sp + 336 | 0;
 $3 = sp;
 $4 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3, $1, 0);
 HEAPF32[$2 >> 2] = $4;
 $6 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 36 | 0, $1, 1);
 HEAPF32[$2 + 4 >> 2] = $6;
 $9 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 72 | 0, $1, 2);
 HEAPF32[$2 + 8 >> 2] = $9;
 $12 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 108 | 0, $1, 3);
 HEAPF32[$2 + 12 >> 2] = $12;
 $15 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 144 | 0, $1, 4);
 HEAPF32[$2 + 16 >> 2] = $15;
 $18 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 180 | 0, $1, 5);
 HEAPF32[$2 + 20 >> 2] = $18;
 $21 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 216 | 0, $1, 6);
 HEAPF32[$2 + 24 >> 2] = $21;
 $24 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 252 | 0, $1, 7);
 HEAPF32[$2 + 28 >> 2] = $24;
 $27 = +__ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($3 + 288 | 0, $1, 8);
 HEAPF32[$2 + 32 >> 2] = $27;
 $29 = __ZN6vision9MaxIndex9IfEEiPKT_($2) | 0;
 if (+HEAPF32[$2 + ($29 << 2) >> 2] == 0.0) $$0 = 0; else {
  __ZN6vision11CopyVector9IfEEvPT_PKS1_($0, $3 + ($29 * 9 << 2) | 0);
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0$i$i = 0, $$0$i$i$i$i = 0, $$sroa$04$0$i = 0, $$sroa$04$1$i = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $29 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(112);
 $7 = sp;
 $8 = sp + 100 | 0;
 HEAP32[$8 >> 2] = $7 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0 + 8 | 0, $7, $8, $4, $5, $6);
 $11 = HEAP32[$8 >> 2] | 0;
 $$0$i$i = $7;
 $$sroa$04$0$i = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($$0$i$i | 0) == ($11 | 0)) break;
  $14 = HEAP8[$$0$i$i >> 0] | 0;
  if (!$$sroa$04$0$i) $$sroa$04$1$i = 0; else {
   $16 = $$sroa$04$0$i + 24 | 0;
   $17 = HEAP32[$16 >> 2] | 0;
   if (($17 | 0) == (HEAP32[$$sroa$04$0$i + 28 >> 2] | 0)) {
    $23 = HEAP32[(HEAP32[$$sroa$04$0$i >> 2] | 0) + 52 >> 2] | 0;
    $24 = __ZNSt3__211char_traitsIcE11to_int_typeEc($14) | 0;
    $$0$i$i$i$i = FUNCTION_TABLE_iii[$23 & 63]($$sroa$04$0$i, $24) | 0;
   } else {
    HEAP32[$16 >> 2] = $17 + 1;
    HEAP8[$17 >> 0] = $14;
    $$0$i$i$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc($14) | 0;
   }
   $29 = __ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0;
   $$sroa$04$1$i = $29 ? 0 : $$sroa$04$0$i;
  }
  $$0$i$i = $$0$i$i + 1 | 0;
  $$sroa$04$0$i = $$sroa$04$1$i;
 }
 STACKTOP = sp;
 return $$sroa$04$0$i | 0;
}

function __ZL25default_terminate_handlerv() {
 var $0 = 0, $1 = 0, $12 = 0, $22 = 0, $23 = 0, $25 = 0, $3 = 0, $30 = 0, $34 = 0, $7 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer10 = sp + 32 | 0;
 $vararg_buffer7 = sp + 24 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $0 = sp + 36 | 0;
 $1 = ___cxa_get_globals_fast() | 0;
 if ($1 | 0) {
  $3 = HEAP32[$1 >> 2] | 0;
  if ($3 | 0) {
   $7 = $3 + 48 | 0;
   $9 = HEAP32[$7 >> 2] | 0;
   $12 = HEAP32[$7 + 4 >> 2] | 0;
   if (!(($9 & -256 | 0) == 1126902528 & ($12 | 0) == 1129074247)) {
    HEAP32[$vararg_buffer7 >> 2] = 49040;
    _abort_message(48990, $vararg_buffer7);
   }
   if (($9 | 0) == 1126902529 & ($12 | 0) == 1129074247) $22 = HEAP32[$3 + 44 >> 2] | 0; else $22 = $3 + 80 | 0;
   HEAP32[$0 >> 2] = $22;
   $23 = HEAP32[$3 >> 2] | 0;
   $25 = HEAP32[$23 + 4 >> 2] | 0;
   if (FUNCTION_TABLE_iiii[HEAP32[(HEAP32[3302] | 0) + 16 >> 2] & 63](13208, $23, $0) | 0) {
    $30 = HEAP32[$0 >> 2] | 0;
    $34 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$30 >> 2] | 0) + 8 >> 2] & 127]($30) | 0;
    HEAP32[$vararg_buffer >> 2] = 49040;
    HEAP32[$vararg_buffer + 4 >> 2] = $25;
    HEAP32[$vararg_buffer + 8 >> 2] = $34;
    _abort_message(48904, $vararg_buffer);
   } else {
    HEAP32[$vararg_buffer3 >> 2] = 49040;
    HEAP32[$vararg_buffer3 + 4 >> 2] = $25;
    _abort_message(48949, $vararg_buffer3);
   }
  }
 }
 _abort_message(49028, $vararg_buffer10);
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$sroa$speculated = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $38 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 if ((-18 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $25 = HEAP32[$0 >> 2] | 0; else $25 = $0;
 if ($1 >>> 0 < 2147483623) {
  $16 = $2 + $1 | 0;
  $17 = $1 << 1;
  $$sroa$speculated = $16 >>> 0 < $17 >>> 0 ? $17 : $16;
  $22 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $22 = -17;
 $23 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm($22) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($23, $25, $4) | 0;
 if ($6 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($23 + $4 | 0, $7, $6) | 0;
 $28 = $3 - $5 | 0;
 $29 = $28 - $4 | 0;
 if ($29 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($23 + $4 + $6 | 0, $25 + $4 + $5 | 0, $29) | 0;
 if (($1 | 0) != 10) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm($25);
 HEAP32[$0 >> 2] = $23;
 HEAP32[$0 + 8 >> 2] = $22 | -2147483648;
 $38 = $28 + $6 | 0;
 HEAP32[$0 + 4 >> 2] = $38;
 HEAP8[$8 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($23 + $38 | 0, $8);
 STACKTOP = sp;
 return;
}

function _jinit_d_coef_controller($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$050 = 0, $$051 = 0, $12 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $2 = 0, $24 = 0, $29 = 0, $33 = 0, $34 = 0, $44 = 0, $45 = 0, $5 = 0, $spec$select = 0;
 $2 = $0 + 4 | 0;
 $5 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$2 >> 2] >> 2] & 63]($0, 1, 116) | 0;
 HEAP32[$0 + 428 >> 2] = $5;
 HEAP32[$5 >> 2] = 131;
 HEAP32[$5 + 8 >> 2] = 132;
 HEAP32[$5 + 112 >> 2] = 0;
 if (!$1) {
  $44 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 4 >> 2] & 63]($0, 1, 1280) | 0;
  $45 = $5 + 32 | 0;
  $$0 = 0;
  while (1) {
   if (($$0 | 0) == 10) break;
   HEAP32[$45 + ($$0 << 2) >> 2] = $44 + ($$0 << 7);
   $$0 = $$0 + 1 | 0;
  }
  HEAP32[$5 + 4 >> 2] = 72;
  HEAP32[$5 + 12 >> 2] = 22;
  HEAP32[$5 + 16 >> 2] = 0;
 } else {
  $12 = $0 + 36 | 0;
  $13 = $0 + 220 | 0;
  $14 = $5 + 72 | 0;
  $$050 = 0;
  $$051 = HEAP32[$0 + 216 >> 2] | 0;
  while (1) {
   if (($$050 | 0) >= (HEAP32[$12 >> 2] | 0)) break;
   $17 = $$051 + 12 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   $spec$select = (HEAP32[$13 >> 2] | 0) == 0 ? $18 : $18 * 3 | 0;
   $24 = HEAP32[(HEAP32[$2 >> 2] | 0) + 20 >> 2] | 0;
   $29 = _jround_up(HEAP32[$$051 + 28 >> 2] | 0, HEAP32[$$051 + 8 >> 2] | 0) | 0;
   $33 = _jround_up(HEAP32[$$051 + 32 >> 2] | 0, HEAP32[$17 >> 2] | 0) | 0;
   $34 = FUNCTION_TABLE_iiiiiii[$24 & 63]($0, 1, 1, $29, $33, $spec$select) | 0;
   HEAP32[$14 + ($$050 << 2) >> 2] = $34;
   $$050 = $$050 + 1 | 0;
   $$051 = $$051 + 84 | 0;
  }
  HEAP32[$5 + 4 >> 2] = 71;
  HEAP32[$5 + 12 >> 2] = 21;
  HEAP32[$5 + 16 >> 2] = $14;
 }
 return;
}

function _post_process_2pass($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$1 = 0, $$pre$phi43Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $18 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $33 = 0, $40 = 0, $45 = 0, $46 = 0, $8 = 0, $9 = 0, $spec$select = 0;
 $8 = HEAP32[$0 + 432 >> 2] | 0;
 $9 = $8 + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) {
  $18 = $8 + 20 | 0;
  $20 = $8 + 16 | 0;
  $22 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 28 >> 2] & 31]($0, HEAP32[$8 + 8 >> 2] | 0, HEAP32[$18 >> 2] | 0, HEAP32[$20 >> 2] | 0, 0) | 0;
  HEAP32[$8 + 12 >> 2] = $22;
  $$pre$phi43Z2D = $18;
  $$pre$phiZ2D = $20;
  $26 = HEAP32[$9 >> 2] | 0;
  $40 = $22;
 } else {
  $$pre$phi43Z2D = $8 + 20 | 0;
  $$pre$phiZ2D = $8 + 16 | 0;
  $26 = $10;
  $40 = HEAP32[$8 + 12 >> 2] | 0;
 }
 $25 = (HEAP32[$$pre$phiZ2D >> 2] | 0) - $26 | 0;
 $27 = HEAP32[$5 >> 2] | 0;
 $28 = $6 - $27 | 0;
 $spec$select = $25 >>> 0 > $28 >>> 0 ? $28 : $25;
 $33 = (HEAP32[$0 + 116 >> 2] | 0) - (HEAP32[$$pre$phi43Z2D >> 2] | 0) | 0;
 $$1 = $spec$select >>> 0 > $33 >>> 0 ? $33 : $spec$select;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 4 >> 2] & 31]($0, $40 + ($26 << 2) | 0, $4 + ($27 << 2) | 0, $$1);
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$1;
 $45 = (HEAP32[$9 >> 2] | 0) + $$1 | 0;
 HEAP32[$9 >> 2] = $45;
 $46 = HEAP32[$$pre$phiZ2D >> 2] | 0;
 if ($45 >>> 0 >= $46 >>> 0) {
  HEAP32[$$pre$phi43Z2D >> 2] = (HEAP32[$$pre$phi43Z2D >> 2] | 0) + $46;
  HEAP32[$9 >> 2] = 0;
 }
 return;
}

function __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((((HEAP32[$3 >> 2] | 0) - $6 | 0) / 12 | 0) >>> 0 < $1 >>> 0) {
  $13 = (($6 - (HEAP32[$0 >> 2] | 0) | 0) / 12 | 0) + $1 | 0;
  $14 = __ZNKSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $20 = ((HEAP32[$3 >> 2] | 0) - $18 | 0) / 12 | 0;
   $23 = $20 << 1;
   __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEEC2EmmS8_($2, $20 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, ((HEAP32[$5 >> 2] | 0) - $18 | 0) / 12 | 0, $0 + 8 | 0);
   __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS6_EE($0, $2);
   __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function _select_ncolors($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$058 = 0, $$058$ph = 0, $$059 = 0, $$060 = 0, $$063 = 0, $$161 = 0, $$2$ph = 0, $$262 = 0, $$262$ph = 0, $12 = 0, $21 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $31 = 0, $32 = 0, $5 = 0, $6 = 0;
 $3 = HEAP32[$0 + 120 >> 2] | 0;
 $5 = HEAP32[$0 + 96 >> 2] | 0;
 $$063 = 1;
 while (1) {
  $6 = $$063 + 1 | 0;
  $$0 = $6;
  $$060 = 1;
  while (1) {
   if (($$060 | 0) >= ($3 | 0)) break;
   $$0 = Math_imul($$0, $6) | 0;
   $$060 = $$060 + 1 | 0;
  }
  if (($$0 | 0) > ($5 | 0)) break; else $$063 = $6;
 }
 if ($$063 >>> 0 < 2) {
  $12 = HEAP32[$0 >> 2] | 0;
  HEAP32[$12 + 20 >> 2] = 56;
  HEAP32[$12 + 24 >> 2] = $$0;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $$059 = 1;
 $$161 = 0;
 while (1) {
  if (($$161 | 0) >= ($3 | 0)) break;
  HEAP32[$1 + ($$161 << 2) >> 2] = $$063;
  $$059 = Math_imul($$059, $$063) | 0;
  $$161 = $$161 + 1 | 0;
 }
 $21 = $0 + 44 | 0;
 $$058$ph = 0;
 $$2$ph = $$059;
 $$262$ph = 0;
 L15 : while (1) {
  $$058 = $$058$ph;
  $$262 = $$262$ph;
  while (1) {
   if (($$262 | 0) < ($3 | 0)) {
    if ((HEAP32[$21 >> 2] | 0) == 2) $28 = HEAP32[13640 + ($$262 << 2) >> 2] | 0; else $28 = $$262;
    $27 = $1 + ($28 << 2) | 0;
    $29 = HEAP32[$27 >> 2] | 0;
    $31 = $29 + 1 | 0;
    $32 = Math_imul(($$2$ph | 0) / ($29 | 0) | 0, $31) | 0;
    if (($32 | 0) <= ($5 | 0)) break;
   }
   if (!$$058) break L15; else {
    $$058 = 0;
    $$262 = 0;
   }
  }
  HEAP32[$27 >> 2] = $31;
  $$058$ph = 1;
  $$2$ph = $32;
  $$262$ph = $$262 + 1 | 0;
 }
 return $$2$ph | 0;
}

function __ZNSt3__216__selection_sortIRNS_7greaterINS_4pairIfmEEEENS_11__wrap_iterIPS3_EEEEvT0_S9_T_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sroa$0$0$copyload$i = 0, $$sroa$0$0$copyload6$i$ph = 0, $$sroa$0$0$ptr$i = 0, $11 = 0.0, $12 = 0.0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0;
 $3 = HEAP32[$1 >> 2] | 0;
 $4 = $3 + -8 | 0;
 $5 = HEAP32[$0 >> 2] | 0;
 while (1) {
  if (($5 | 0) == ($4 | 0)) break;
  L4 : do if (($5 | 0) == ($3 | 0)) $$sroa$0$0$copyload$i = $3; else {
   $$sroa$0$0$copyload6$i$ph = $5;
   while (1) {
    $8 = $$sroa$0$0$copyload6$i$ph + 4 | 0;
    $$sroa$0$0$ptr$i = $$sroa$0$0$copyload6$i$ph;
    while (1) {
     $9 = $$sroa$0$0$ptr$i + 8 | 0;
     if (($9 | 0) == ($3 | 0)) {
      $$sroa$0$0$copyload$i = $$sroa$0$0$copyload6$i$ph;
      break L4;
     }
     $11 = +HEAPF32[$$sroa$0$0$copyload6$i$ph >> 2];
     $12 = +HEAPF32[$9 >> 2];
     if ($11 < $12) break;
     if (!($12 < $11)) if ((HEAP32[$8 >> 2] | 0) >>> 0 < (HEAP32[$$sroa$0$0$ptr$i + 12 >> 2] | 0) >>> 0) break;
     $$sroa$0$0$ptr$i = $9;
    }
    $$sroa$0$0$copyload6$i$ph = $9;
   }
  } while (0);
  if (($$sroa$0$0$copyload$i | 0) != ($5 | 0)) {
   $20 = HEAP32[$5 >> 2] | 0;
   HEAP32[$5 >> 2] = HEAP32[$$sroa$0$0$copyload$i >> 2];
   HEAP32[$$sroa$0$0$copyload$i >> 2] = $20;
   $22 = $5 + 4 | 0;
   $23 = $$sroa$0$0$copyload$i + 4 | 0;
   $24 = HEAP32[$22 >> 2] | 0;
   HEAP32[$22 >> 2] = HEAP32[$23 >> 2];
   HEAP32[$23 >> 2] = $24;
  }
  $26 = $5 + 8 | 0;
  HEAP32[$0 >> 2] = $26;
  $5 = $26;
 }
 return;
}

function _ycc_rgb_convert($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$071 = 0, $$072 = 0, $$073 = 0, $$074 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $25 = 0, $28 = 0, $31 = 0, $32 = 0, $36 = 0, $39 = 0, $42 = 0, $6 = 0, $8 = 0;
 $6 = HEAP32[$0 + 456 >> 2] | 0;
 $8 = HEAP32[$0 + 112 >> 2] | 0;
 $10 = HEAP32[$0 + 324 >> 2] | 0;
 $12 = HEAP32[$6 + 8 >> 2] | 0;
 $14 = HEAP32[$6 + 12 >> 2] | 0;
 $16 = HEAP32[$6 + 16 >> 2] | 0;
 $18 = HEAP32[$6 + 20 >> 2] | 0;
 $19 = $1 + 4 | 0;
 $20 = $1 + 8 | 0;
 $$0 = $2;
 $$071 = $3;
 $$072 = $4;
 while (1) {
  $21 = $$072 + -1 | 0;
  if (($$072 | 0) <= 0) break;
  $25 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $28 = HEAP32[(HEAP32[$19 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $31 = HEAP32[(HEAP32[$20 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $32 = $$0 + 1 | 0;
  $$073 = HEAP32[$$071 >> 2] | 0;
  $$074 = 0;
  while (1) {
   if (($$074 | 0) == ($8 | 0)) break;
   $36 = HEAPU8[$25 + $$074 >> 0] | 0;
   $39 = HEAPU8[$28 + $$074 >> 0] | 0;
   $42 = HEAPU8[$31 + $$074 >> 0] | 0;
   HEAP8[$$073 >> 0] = HEAP8[$10 + ((HEAP32[$12 + ($42 << 2) >> 2] | 0) + $36) >> 0] | 0;
   HEAP8[$$073 + 1 >> 0] = HEAP8[$10 + (((HEAP32[$16 + ($42 << 2) >> 2] | 0) + (HEAP32[$18 + ($39 << 2) >> 2] | 0) >> 16) + $36) >> 0] | 0;
   HEAP8[$$073 + 2 >> 0] = HEAP8[$10 + ((HEAP32[$14 + ($39 << 2) >> 2] | 0) + $36) >> 0] | 0;
   $$073 = $$073 + 3 | 0;
   $$074 = $$074 + 1 | 0;
  }
  $$0 = $32;
  $$071 = $$071 + 4 | 0;
  $$072 = $21;
 }
 return;
}

function __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE21__push_back_slow_pathIRKS1_EEvOT_($this, $__x) {
 $this = $this | 0;
 $__x = $__x | 0;
 var $11 = 0, $12 = 0, $3 = 0, $6 = 0, $__end_ = 0, $__end_$i = 0, $__v = 0, $add = 0, $call$i = 0, $mul$i = 0, $sub$ptr$sub$i$i$i = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $__v = sp;
 $__end_$i = $this + 4 | 0;
 $add = ((HEAP32[$__end_$i >> 2] | 0) - (HEAP32[$this >> 2] | 0) >> 3) + 1 | 0;
 $call$i = __ZNKSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE8max_sizeEv($this) | 0;
 if ($call$i >>> 0 < $add >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($this); else {
  $3 = HEAP32[$this >> 2] | 0;
  $sub$ptr$sub$i$i$i = (HEAP32[$this + 8 >> 2] | 0) - $3 | 0;
  $mul$i = $sub$ptr$sub$i$i$i >> 2;
  __ZNSt3__214__split_bufferI12multi_markerRNS_9allocatorIS1_EEEC2EmmS4_($__v, $sub$ptr$sub$i$i$i >> 3 >>> 0 < $call$i >>> 1 >>> 0 ? ($mul$i >>> 0 < $add >>> 0 ? $add : $mul$i) : $call$i, (HEAP32[$__end_$i >> 2] | 0) - $3 >> 3, $this + 8 | 0);
  $__end_ = $__v + 8 | 0;
  $6 = $__x;
  $11 = HEAP32[$6 + 4 >> 2] | 0;
  $12 = HEAP32[$__end_ >> 2] | 0;
  HEAP32[$12 >> 2] = HEAP32[$6 >> 2];
  HEAP32[$12 + 4 >> 2] = $11;
  HEAP32[$__end_ >> 2] = (HEAP32[$__end_ >> 2] | 0) + 8;
  __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE($this, $__v);
  __ZNSt3__214__split_bufferI12multi_markerRNS_9allocatorIS1_EEED2Ev($__v);
  STACKTOP = sp;
  return;
 }
}

function _post_process_prepass($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$phi$trans$insert = 0, $$pre$phi40Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $20 = 0, $22 = 0, $23 = 0, $29 = 0, $30 = 0, $32 = 0, $33 = 0, $42 = 0, $43 = 0, $45 = 0, $8 = 0, $9 = 0;
 $8 = HEAP32[$0 + 432 >> 2] | 0;
 $9 = $8 + 24 | 0;
 $10 = HEAP32[$9 >> 2] | 0;
 if (!$10) {
  $20 = $8 + 16 | 0;
  $22 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 28 >> 2] & 31]($0, HEAP32[$8 + 8 >> 2] | 0, HEAP32[$8 + 20 >> 2] | 0, HEAP32[$20 >> 2] | 0, 1) | 0;
  $23 = $8 + 12 | 0;
  HEAP32[$23 >> 2] = $22;
  $$pre$phi40Z2D = $20;
  $$pre$phiZ2D = $23;
  $29 = $22;
  $32 = HEAP32[$9 >> 2] | 0;
 } else {
  $$phi$trans$insert = $8 + 12 | 0;
  $$pre$phi40Z2D = $8 + 16 | 0;
  $$pre$phiZ2D = $$phi$trans$insert;
  $29 = HEAP32[$$phi$trans$insert >> 2] | 0;
  $32 = $10;
 }
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$0 + 452 >> 2] | 0) + 4 >> 2] & 7]($0, $1, $2, $3, $29, $9, HEAP32[$$pre$phi40Z2D >> 2] | 0);
 $30 = HEAP32[$9 >> 2] | 0;
 if ($30 >>> 0 > $32 >>> 0) {
  $33 = $30 - $32 | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 4 >> 2] & 31]($0, (HEAP32[$$pre$phiZ2D >> 2] | 0) + ($32 << 2) | 0, 0, $33);
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $33;
  $43 = HEAP32[$9 >> 2] | 0;
 } else $43 = $30;
 $42 = HEAP32[$$pre$phi40Z2D >> 2] | 0;
 if ($43 >>> 0 >= $42 >>> 0) {
  $45 = $8 + 20 | 0;
  HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + $42;
  HEAP32[$9 >> 2] = 0;
 }
 return;
}

function __ZNK6vision10DoGPyramid15octaveFromIndexEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $19 = 0, $2 = 0, $23 = 0, $25 = 0, $33 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $5 = HEAP32[$0 >> 2] | 0;
 if ((HEAP32[$0 + 4 >> 2] | 0) - $5 >> 5 >>> 0 > $1 >>> 0) {
  $25 = __ZNK6vision5Image5widthEv($5) | 0;
  $33 = ~~+__ZN6vision5roundIfEET_S1_(+__ZN6vision4log2IfEET_S1_(+((($25 >>> 0) / ((__ZNK6vision5Image5widthEv((HEAP32[$0 >> 2] | 0) + ($1 << 5) | 0) | 0) >>> 0) | 0) >>> 0)));
  STACKTOP = sp;
  return $33 | 0;
 } else {
  $14 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 24937) | 0, 22444) | 0, 33528) | 0, 94) | 0, 33535) | 0, 24983) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $14 + (HEAP32[(HEAP32[$14 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $19 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $23 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$19 >> 2] | 0) + 28 >> 2] & 63]($19, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($14, $23) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($14) | 0;
  _abort();
 }
 return 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $15 = 0, $16 = 0, $19 = 0, $20 = 0, $21 = 0, $9 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $5) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4); else {
  $9 = $1 + 52 | 0;
  $10 = HEAP8[$9 >> 0] | 0;
  $11 = $1 + 53 | 0;
  $12 = HEAP8[$11 >> 0] | 0;
  $15 = HEAP32[$0 + 12 >> 2] | 0;
  $16 = $0 + 16 + ($15 << 3) | 0;
  HEAP8[$9 >> 0] = 0;
  HEAP8[$11 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0 + 16 | 0, $1, $2, $3, $4, $5);
  L4 : do if (($15 | 0) > 1) {
   $19 = $1 + 24 | 0;
   $20 = $0 + 8 | 0;
   $21 = $1 + 54 | 0;
   $$0 = $0 + 24 | 0;
   do {
    if (HEAP8[$21 >> 0] | 0) break L4;
    if (!(HEAP8[$9 >> 0] | 0)) {
     if (HEAP8[$11 >> 0] | 0) if (!(HEAP32[$20 >> 2] & 1)) break L4;
    } else {
     if ((HEAP32[$19 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[$20 >> 2] & 2)) break L4;
    }
    HEAP8[$9 >> 0] = 0;
    HEAP8[$11 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($$0, $1, $2, $3, $4, $5);
    $$0 = $$0 + 8 | 0;
   } while ($$0 >>> 0 < $16 >>> 0);
  } while (0);
  HEAP8[$9 >> 0] = $10;
  HEAP8[$11 >> 0] = $12;
 }
 return;
}

function _jpeg_resync_to_restart($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$034$ph = 0, $$035 = 0, $14 = 0, $17 = 0, $2 = 0, $20 = 0, $23 = 0, $24 = 0, $3 = 0, $32 = 0, $4 = 0, $or$cond37 = 0, $spec$select36 = 0, label = 0;
 $2 = $0 + 416 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 HEAP32[$4 + 20 >> 2] = 121;
 HEAP32[$4 + 24 >> 2] = $3;
 HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $1;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, -1);
 $14 = $1 + 1 & 7 | 208;
 $17 = $1 + 2 & 7 | 208;
 $20 = $1 + 7 & 7 | 208;
 $23 = $1 + 6 & 7 | 208;
 $$034$ph = $3;
 L1 : while (1) {
  $24 = ($$034$ph | 0) < 192;
  $or$cond37 = ($$034$ph & -8 | 0) != 208 | ($$034$ph | 0) == ($14 | 0) | ($$034$ph | 0) == ($17 | 0);
  $spec$select36 = ($$034$ph | 0) == ($20 | 0) | ($$034$ph | 0) == ($23 | 0) ? 2 : 1;
  L3 : while (1) {
   $$0 = $24 ? 2 : $or$cond37 ? 3 : $spec$select36;
   $32 = HEAP32[$0 >> 2] | 0;
   HEAP32[$32 + 20 >> 2] = 97;
   HEAP32[$32 + 24 >> 2] = $$034$ph;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $$0;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 4);
   switch ($$0 & 3) {
   case 3:
    {
     $$035 = 1;
     break L1;
     break;
    }
   case 1:
    {
     label = 4;
     break L1;
     break;
    }
   case 2:
    {
     break L3;
     break;
    }
   default:
    {}
   }
  }
  if (!(_next_marker($0) | 0)) {
   $$035 = 0;
   break;
  }
  $$034$ph = HEAP32[$2 >> 2] | 0;
 }
 if ((label | 0) == 4) {
  HEAP32[$2 >> 2] = 0;
  $$035 = 1;
 }
 return $$035 | 0;
}

function _strspn($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$01924 = 0, $$020 = 0, $$1$lcssa = 0, $$121 = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $25 = 0, $27 = 0, $28 = 0, $3 = 0, $36 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP32[$2 + 24 >> 2] = 0;
 HEAP32[$2 + 28 >> 2] = 0;
 $3 = HEAP8[$1 >> 0] | 0;
 do if (!($3 << 24 >> 24)) $$0 = 0; else {
  if (!(HEAP8[$1 + 1 >> 0] | 0)) {
   $$020 = $0;
   while (1) if ((HEAP8[$$020 >> 0] | 0) == $3 << 24 >> 24) $$020 = $$020 + 1 | 0; else break;
   $$0 = $$020 - $0 | 0;
   break;
  }
  $$01924 = $1;
  $15 = $3;
  do {
   $14 = $15 & 255;
   $19 = $2 + ($14 >>> 5 << 2) | 0;
   HEAP32[$19 >> 2] = HEAP32[$19 >> 2] | 1 << ($14 & 31);
   $$01924 = $$01924 + 1 | 0;
   $15 = HEAP8[$$01924 >> 0] | 0;
  } while ($15 << 24 >> 24 != 0);
  $25 = HEAP8[$0 >> 0] | 0;
  L12 : do if (!($25 << 24 >> 24)) $$1$lcssa = $0; else {
   $$121 = $0;
   $28 = $25;
   while (1) {
    $27 = $28 & 255;
    if (!(HEAP32[$2 + ($27 >>> 5 << 2) >> 2] & 1 << ($27 & 31))) {
     $$1$lcssa = $$121;
     break L12;
    }
    $36 = $$121 + 1 | 0;
    $28 = HEAP8[$36 >> 0] | 0;
    if (!($28 << 24 >> 24)) {
     $$1$lcssa = $36;
     break;
    } else $$121 = $36;
   }
  } while (0);
  $$0 = $$1$lcssa - $0 | 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((HEAP32[$3 >> 2] | 0) - $6 >> 2 >>> 0 < $1 >>> 0) {
  $13 = ($6 - (HEAP32[$0 >> 2] | 0) >> 2) + $1 | 0;
  $14 = __ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $19 = (HEAP32[$3 >> 2] | 0) - $18 | 0;
   $23 = $19 >> 1;
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEEC2EmmS6_($2, $19 >> 2 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, (HEAP32[$5 >> 2] | 0) - $18 >> 2, $0 + 16 | 0);
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
   __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$1 = 0, $11 = 0, $17 = 0, $21 = 0, $23 = 0, $24 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 $5 = $0 + 11 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) $11 = HEAP32[$0 + 4 >> 2] | 0; else $11 = $6 & 255;
 if ($11 >>> 0 < $1 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0);
 if ($7) $17 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $17 = 10;
 if (($17 - $11 | 0) >>> 0 < $3 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc($0, $17, $11 + $3 - $17 | 0, $11, $1, 0, $3, $2); else if ($3 | 0) {
  if ($7) $24 = HEAP32[$0 >> 2] | 0; else $24 = $0;
  $21 = $11 - $1 | 0;
  $23 = $24 + $1 | 0;
  if (!$21) $$1 = $2; else {
   __ZNSt3__211char_traitsIcE4moveEPcPKcm($23 + $3 | 0, $23, $21) | 0;
   $$1 = $23 >>> 0 <= $2 >>> 0 & ($24 + $11 | 0) >>> 0 > $2 >>> 0 ? $2 + $3 | 0 : $2;
  }
  __ZNSt3__211char_traitsIcE4moveEPcPKcm($23, $$1, $3) | 0;
  $30 = $11 + $3 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $30; else HEAP8[$5 >> 0] = $30;
  HEAP8[$4 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($24 + $30 | 0, $4);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$pn = 0, $0 = 0, $1 = 0, $3 = 0, $4 = 0, $__nd$0 = 0, $cond3$i = 0, $cond3$i29 = 0, $retval$sroa$0$0 = 0, $sub$i23 = 0, $tobool$i25 = 0;
 $0 = HEAP32[$__k >> 2] | 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 L1 : do if (!$1) $retval$sroa$0$0 = 0; else {
  $sub$i23 = $1 + -1 | 0;
  $tobool$i25 = ($sub$i23 & $1 | 0) == 0;
  if ($tobool$i25) $cond3$i29 = $sub$i23 & $0; else if ($0 >>> 0 < $1 >>> 0) $cond3$i29 = $0; else $cond3$i29 = ($0 >>> 0) % ($1 >>> 0) | 0;
  $3 = HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i29 << 2) >> 2] | 0;
  if (!$3) $retval$sroa$0$0 = 0; else {
   $$pn = $3;
   while (1) {
    $__nd$0 = HEAP32[$$pn >> 2] | 0;
    if (!$__nd$0) {
     $retval$sroa$0$0 = 0;
     break L1;
    }
    $4 = HEAP32[$__nd$0 + 4 >> 2] | 0;
    if (($4 | 0) == ($0 | 0)) {
     if ((HEAP32[$__nd$0 + 8 >> 2] | 0) == ($0 | 0)) {
      $retval$sroa$0$0 = $__nd$0;
      break L1;
     }
    } else {
     if ($tobool$i25) $cond3$i = $4 & $sub$i23; else if ($4 >>> 0 < $1 >>> 0) $cond3$i = $4; else $cond3$i = ($4 >>> 0) % ($1 >>> 0) | 0;
     if (($cond3$i | 0) != ($cond3$i29 | 0)) {
      $retval$sroa$0$0 = 0;
      break L1;
     }
    }
    $$pn = $__nd$0;
   }
  }
 } while (0);
 return $retval$sroa$0$0 | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = (((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 20 | 0) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $16 = ((HEAP32[$0 + 8 >> 2] | 0) - $14 | 0) / 20 | 0;
  $19 = $16 << 1;
  __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEEC2EmmS5_($2, $16 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, ((HEAP32[$3 >> 2] | 0) - $14 | 0) / 20 | 0, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  HEAP32[$25 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$25 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$25 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$25 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
  HEAP32[$25 + 16 >> 2] = HEAP32[$1 + 16 >> 2];
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 20;
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $$pn = 0, $0 = 0, $1 = 0, $3 = 0, $4 = 0, $__nd$0 = 0, $cond3$i = 0, $cond3$i29 = 0, $retval$sroa$0$0 = 0, $sub$i23 = 0, $tobool$i25 = 0;
 $0 = HEAP32[$__k >> 2] | 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 L1 : do if (!$1) $retval$sroa$0$0 = 0; else {
  $sub$i23 = $1 + -1 | 0;
  $tobool$i25 = ($sub$i23 & $1 | 0) == 0;
  if ($tobool$i25) $cond3$i29 = $sub$i23 & $0; else if ($0 >>> 0 < $1 >>> 0) $cond3$i29 = $0; else $cond3$i29 = ($0 >>> 0) % ($1 >>> 0) | 0;
  $3 = HEAP32[(HEAP32[$this >> 2] | 0) + ($cond3$i29 << 2) >> 2] | 0;
  if (!$3) $retval$sroa$0$0 = 0; else {
   $$pn = $3;
   while (1) {
    $__nd$0 = HEAP32[$$pn >> 2] | 0;
    if (!$__nd$0) {
     $retval$sroa$0$0 = 0;
     break L1;
    }
    $4 = HEAP32[$__nd$0 + 4 >> 2] | 0;
    if (($4 | 0) == ($0 | 0)) {
     if ((HEAP32[$__nd$0 + 8 >> 2] | 0) == ($0 | 0)) {
      $retval$sroa$0$0 = $__nd$0;
      break L1;
     }
    } else {
     if ($tobool$i25) $cond3$i = $4 & $sub$i23; else if ($4 >>> 0 < $1 >>> 0) $cond3$i = $4; else $cond3$i = ($4 >>> 0) % ($1 >>> 0) | 0;
     if (($cond3$i | 0) != ($cond3$i29 | 0)) {
      $retval$sroa$0$0 = 0;
      break L1;
     }
    }
    $$pn = $__nd$0;
   }
  }
 } while (0);
 return $retval$sroa$0$0 | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $2 = 0, $20 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((((HEAP32[$3 >> 2] | 0) - $6 | 0) / 20 | 0) >>> 0 < $1 >>> 0) {
  $13 = (($6 - (HEAP32[$0 >> 2] | 0) | 0) / 20 | 0) + $1 | 0;
  $14 = __ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $20 = ((HEAP32[$3 >> 2] | 0) - $18 | 0) / 20 | 0;
   $23 = $20 << 1;
   __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEEC2EmmS5_($2, $20 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, ((HEAP32[$5 >> 2] | 0) - $18 | 0) / 20 | 0, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
   __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEmRKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $11 = 0, $13 = 0, $20 = 0, $21 = 0, $25 = 0, $26 = 0, $3 = 0, $30 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp;
 $4 = $0 + 8 | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 $11 = $7;
 do if ((HEAP32[$4 >> 2] | 0) - $7 >> 2 >>> 0 < $1 >>> 0) {
  $20 = ($7 - (HEAP32[$0 >> 2] | 0) >> 2) + $1 | 0;
  $21 = __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($0) | 0;
  if ($21 >>> 0 < $20 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $25 = HEAP32[$0 >> 2] | 0;
   $26 = (HEAP32[$4 >> 2] | 0) - $25 | 0;
   $30 = $26 >> 1;
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_($3, $26 >> 2 >>> 0 < $21 >>> 1 >>> 0 ? ($30 >>> 0 < $20 >>> 0 ? $20 : $30) : $21, (HEAP32[$6 >> 2] | 0) - $25 >> 2, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endEmRKi($3, $1, $2);
   __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE($0, $3);
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev($3);
   break;
  }
 } else {
  $$0$i = $1;
  $13 = $11;
  while (1) {
   HEAP32[$13 >> 2] = HEAP32[$2 >> 2];
   $$0$i = $$0$i + -1 | 0;
   if (!$$0$i) break; else $13 = $13 + 4 | 0;
  }
  HEAP32[$6 >> 2] = $11 + ($1 << 2);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE6rehashEm($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$sroa$speculated = 0, $0 = 0, $__n$addr$0 = 0, $cond = 0, $conv9 = 0, $shl$i = 0;
 if (($__n | 0) == 1) $__n$addr$0 = 2; else if (!($__n + -1 & $__n)) $__n$addr$0 = $__n; else $__n$addr$0 = __ZNSt3__212__next_primeEm($__n) | 0;
 $0 = HEAP32[$this + 4 >> 2] | 0;
 if ($__n$addr$0 >>> 0 > $0 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE8__rehashEm($this, $__n$addr$0); else if ($__n$addr$0 >>> 0 < $0 >>> 0) {
  $conv9 = ~~+Math_ceil(+(+((HEAP32[$this + 12 >> 2] | 0) >>> 0) / +HEAPF32[$this + 16 >> 2])) >>> 0;
  if ($0 >>> 0 > 2 & ($0 + -1 & $0 | 0) == 0) {
   $shl$i = 1 << 32 - (Math_clz32($conv9 + -1 | 0) | 0);
   $cond = $conv9 >>> 0 < 2 ? $conv9 : $shl$i;
  } else $cond = __ZNSt3__212__next_primeEm($conv9) | 0;
  $$sroa$speculated = $__n$addr$0 >>> 0 < $cond >>> 0 ? $cond : $__n$addr$0;
  if ($$sroa$speculated >>> 0 < $0 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE8__rehashEm($this, $$sroa$speculated);
 }
 return;
}

function ___strchrnul($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $13 = 0, $17 = 0, $18 = 0, $2 = 0, $24 = 0, $25 = 0, $31 = 0, $38 = 0, $39 = 0, $9 = 0;
 $2 = $1 & 255;
 L1 : do if (!$2) $$0 = $0 + (_strlen($0) | 0) | 0; else {
  if (!($0 & 3)) $$030$lcssa = $0; else {
   $9 = $1 & 255;
   $$03039 = $0;
   while (1) {
    $10 = HEAP8[$$03039 >> 0] | 0;
    if ($10 << 24 >> 24 == 0 ? 1 : $10 << 24 >> 24 == $9 << 24 >> 24) {
     $$0 = $$03039;
     break L1;
    }
    $13 = $$03039 + 1 | 0;
    if (!($13 & 3)) {
     $$030$lcssa = $13;
     break;
    } else $$03039 = $13;
   }
  }
  $17 = Math_imul($2, 16843009) | 0;
  $18 = HEAP32[$$030$lcssa >> 2] | 0;
  L10 : do if (!(($18 & -2139062144 ^ -2139062144) & $18 + -16843009)) {
   $$02936 = $$030$lcssa;
   $25 = $18;
   while (1) {
    $24 = $25 ^ $17;
    if (($24 & -2139062144 ^ -2139062144) & $24 + -16843009 | 0) {
     $$029$lcssa = $$02936;
     break L10;
    }
    $31 = $$02936 + 4 | 0;
    $25 = HEAP32[$31 >> 2] | 0;
    if (($25 & -2139062144 ^ -2139062144) & $25 + -16843009 | 0) {
     $$029$lcssa = $31;
     break;
    } else $$02936 = $31;
   }
  } else $$029$lcssa = $$030$lcssa; while (0);
  $38 = $1 & 255;
  $$1 = $$029$lcssa;
  while (1) {
   $39 = HEAP8[$$1 >> 0] | 0;
   if ($39 << 24 >> 24 == 0 ? 1 : $39 << 24 >> 24 == $38 << 24 >> 24) {
    $$0 = $$1;
    break;
   } else $$1 = $$1 + 1 | 0;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$sroa$speculated = 0, $0 = 0, $__n$addr$0 = 0, $cond = 0, $conv9 = 0, $shl$i = 0;
 if (($__n | 0) == 1) $__n$addr$0 = 2; else if (!($__n + -1 & $__n)) $__n$addr$0 = $__n; else $__n$addr$0 = __ZNSt3__212__next_primeEm($__n) | 0;
 $0 = HEAP32[$this + 4 >> 2] | 0;
 if ($__n$addr$0 >>> 0 > $0 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $__n$addr$0); else if ($__n$addr$0 >>> 0 < $0 >>> 0) {
  $conv9 = ~~+Math_ceil(+(+((HEAP32[$this + 12 >> 2] | 0) >>> 0) / +HEAPF32[$this + 16 >> 2])) >>> 0;
  if ($0 >>> 0 > 2 & ($0 + -1 & $0 | 0) == 0) {
   $shl$i = 1 << 32 - (Math_clz32($conv9 + -1 | 0) | 0);
   $cond = $conv9 >>> 0 < 2 ? $conv9 : $shl$i;
  } else $cond = __ZNSt3__212__next_primeEm($conv9) | 0;
  $$sroa$speculated = $__n$addr$0 >>> 0 < $cond >>> 0 ? $cond : $__n$addr$0;
  if ($$sroa$speculated >>> 0 < $0 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $$sroa$speculated);
 }
 return;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIRKS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = (((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $16 = ((HEAP32[$0 + 8 >> 2] | 0) - $14 | 0) / 24 | 0;
  $19 = $16 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_($2, $16 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, ((HEAP32[$3 >> 2] | 0) - $14 | 0) / 24 | 0, $0 + 12 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($25, $1);
  HEAP32[$24 >> 2] = $25 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZN6vision27OrthogonalizePivot8x9Basis4IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0.0, $13 = 0.0, $15 = 0.0, $17 = 0.0, $19 = 0, $2 = 0, $20 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = $0 + 144 | 0;
 $4 = $0 + 108 | 0;
 $5 = $1 + 144 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($3, $4, $5);
 $6 = $0 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($6, $4, $1 + 180 | 0);
 $8 = $0 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($8, $4, $1 + 216 | 0);
 $10 = $0 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($10, $4, $1 + 252 | 0);
 $12 = +__ZN6vision11SumSquares9IfEET_PKS1_($3);
 HEAPF32[$2 >> 2] = $12;
 $13 = +__ZN6vision11SumSquares9IfEET_PKS1_($6);
 HEAPF32[$2 + 4 >> 2] = $13;
 $15 = +__ZN6vision11SumSquares9IfEET_PKS1_($8);
 HEAPF32[$2 + 8 >> 2] = $15;
 $17 = +__ZN6vision11SumSquares9IfEET_PKS1_($10);
 HEAPF32[$2 + 12 >> 2] = $17;
 $19 = __ZN6vision9MaxIndex4IfEEiPKT_($2) | 0;
 $20 = $2 + ($19 << 2) | 0;
 if (+HEAPF32[$20 >> 2] == 0.0) $$0 = 0; else {
  $23 = $19 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_($3, $3 + ($23 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_($5, $5 + ($23 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($3, $3, 1.0 / +Math_sqrt(+(+HEAPF32[$20 >> 2])));
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE21__push_back_slow_pathIS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = (((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 24 | 0) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $16 = ((HEAP32[$0 + 8 >> 2] | 0) - $14 | 0) / 24 | 0;
  $19 = $16 << 1;
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_($2, $16 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, ((HEAP32[$3 >> 2] | 0) - $14 | 0) / 24 | 0, $0 + 12 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($25, $1);
  HEAP32[$24 >> 2] = $25 + 24;
  __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function _output_pass_setup($0) {
 $0 = $0 | 0;
 var $$3 = 0, $$pre$phi35Z2D = 0, $$pre33 = 0, $1 = 0, $14 = 0, $15 = 0, $17 = 0, $27 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 $1 = $0 + 20 | 0;
 $$pre33 = $0 + 420 | 0;
 if ((HEAP32[$1 >> 2] | 0) == 204) $$pre$phi35Z2D = $0 + 140 | 0; else {
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$$pre33 >> 2] >> 2] & 255]($0);
  $6 = $0 + 140 | 0;
  HEAP32[$6 >> 2] = 0;
  HEAP32[$1 >> 2] = 204;
  $$pre$phi35Z2D = $6;
 }
 $7 = $0 + 116 | 0;
 $8 = $0 + 8 | 0;
 $9 = $0 + 424 | 0;
 L5 : while (1) {
  if (!(HEAP32[(HEAP32[$$pre33 >> 2] | 0) + 8 >> 2] | 0)) {
   label = 12;
   break;
  }
  $15 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
  while (1) {
   $14 = HEAP32[$7 >> 2] | 0;
   if ($15 >>> 0 >= $14 >>> 0) break;
   $17 = HEAP32[$8 >> 2] | 0;
   if (!$17) $27 = $15; else {
    HEAP32[$17 + 4 >> 2] = $15;
    HEAP32[$17 + 8 >> 2] = $14;
    FUNCTION_TABLE_vi[HEAP32[$17 >> 2] & 255]($0);
    $27 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
   }
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$9 >> 2] | 0) + 4 >> 2] & 31]($0, 0, $$pre$phi35Z2D, 0);
   $15 = HEAP32[$$pre$phi35Z2D >> 2] | 0;
   if (($15 | 0) == ($27 | 0)) {
    $$3 = 0;
    break L5;
   }
  }
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$$pre33 >> 2] | 0) + 4 >> 2] & 255]($0);
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$$pre33 >> 2] >> 2] & 255]($0);
  HEAP32[$$pre$phi35Z2D >> 2] = 0;
 }
 if ((label | 0) == 12) {
  HEAP32[$1 >> 2] = (HEAP32[$0 + 68 >> 2] | 0) == 0 ? 205 : 206;
  $$3 = 1;
 }
 return $$3 | 0;
}

function _x_by_xt($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$049 = 0, $$050 = 0, $$051 = 0, $$052 = 0, $$053 = 0, $$054 = 0, $$1 = 0, $12 = 0, $14 = 0, $18 = 0, $20 = 0, $23 = 0, $3 = 0, $30 = 0.0, $31 = 0.0, $5 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 L1 : do if ((HEAP32[$1 + 4 >> 2] | 0) == ($3 | 0)) if ((HEAP32[$1 + 8 >> 2] | 0) == ($3 | 0)) {
  $12 = HEAP32[$1 >> 2] | 0;
  $$050 = 0;
  $$053 = $12;
  while (1) {
   if (($$050 | 0) >= ($3 | 0)) {
    $$051 = 0;
    break L1;
   }
   $14 = Math_imul($$050, $5) | 0;
   $$049 = 0;
   $$1 = $$053;
   while (1) {
    if (($$049 | 0) == ($3 | 0)) break;
    L10 : do if ($$049 >>> 0 < $$050 >>> 0) {
     $18 = $12 + ((Math_imul($$049, $3) | 0) + $$050 << 3) | 0;
     HEAPF64[$$1 >> 3] = +HEAPF64[$18 >> 3];
    } else {
     $20 = HEAP32[$0 >> 2] | 0;
     $23 = $20 + ((Math_imul($$049, $5) | 0) << 3) | 0;
     HEAPF64[$$1 >> 3] = 0.0;
     $$0 = 0;
     $$052 = $20 + ($14 << 3) | 0;
     $$054 = $23;
     $31 = 0.0;
     while (1) {
      if (($$0 | 0) >= ($5 | 0)) break L10;
      $30 = $31 + +HEAPF64[$$052 >> 3] * +HEAPF64[$$054 >> 3];
      HEAPF64[$$1 >> 3] = $30;
      $$0 = $$0 + 1 | 0;
      $$052 = $$052 + 8 | 0;
      $$054 = $$054 + 8 | 0;
      $31 = $30;
     }
    } while (0);
    $$049 = $$049 + 1 | 0;
    $$1 = $$1 + 8 | 0;
   }
   $$050 = $$050 + 1 | 0;
   $$053 = $$053 + ($3 << 3) | 0;
  }
 } else $$051 = -1; else $$051 = -1; while (0);
 return $$051 | 0;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEmRKh($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i = 0, $12 = 0, $19 = 0, $20 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp;
 $4 = $0 + 8 | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$6 >> 2] | 0;
 do if (((HEAP32[$4 >> 2] | 0) - $7 | 0) >>> 0 < $1 >>> 0) {
  $19 = $7 - (HEAP32[$0 >> 2] | 0) + $1 | 0;
  $20 = __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($0) | 0;
  if ($20 >>> 0 < $19 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $24 = HEAP32[$0 >> 2] | 0;
   $25 = (HEAP32[$4 >> 2] | 0) - $24 | 0;
   $28 = $25 << 1;
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EmmS3_($3, $25 >>> 0 < $20 >>> 1 >>> 0 ? ($28 >>> 0 < $19 >>> 0 ? $19 : $28) : $20, (HEAP32[$6 >> 2] | 0) - $24 | 0, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE18__construct_at_endEmRKh($3, $1, $2);
   __ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE($0, $3);
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev($3);
   break;
  }
 } else {
  $$0$i = $1;
  $12 = $7;
  do {
   HEAP8[$12 >> 0] = HEAP8[$2 >> 0] | 0;
   $12 = (HEAP32[$6 >> 2] | 0) + 1 | 0;
   HEAP32[$6 >> 2] = $12;
   $$0$i = $$0$i + -1 | 0;
  } while (($$0$i | 0) != 0);
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6rehashEm($this, $__n) {
 $this = $this | 0;
 $__n = $__n | 0;
 var $$sroa$speculated = 0, $0 = 0, $__n$addr$0 = 0, $cond = 0, $conv9 = 0, $shl$i = 0;
 if (($__n | 0) == 1) $__n$addr$0 = 2; else if (!($__n + -1 & $__n)) $__n$addr$0 = $__n; else $__n$addr$0 = __ZNSt3__212__next_primeEm($__n) | 0;
 $0 = HEAP32[$this + 4 >> 2] | 0;
 if ($__n$addr$0 >>> 0 > $0 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $__n$addr$0); else if ($__n$addr$0 >>> 0 < $0 >>> 0) {
  $conv9 = ~~+Math_ceil(+(+((HEAP32[$this + 12 >> 2] | 0) >>> 0) / +HEAPF32[$this + 16 >> 2])) >>> 0;
  if ($0 >>> 0 > 2 & ($0 + -1 & $0 | 0) == 0) {
   $shl$i = 1 << 32 - (Math_clz32($conv9 + -1 | 0) | 0);
   $cond = $conv9 >>> 0 < 2 ? $conv9 : $shl$i;
  } else $cond = __ZNSt3__212__next_primeEm($conv9) | 0;
  $$sroa$speculated = $__n$addr$0 >>> 0 < $cond >>> 0 ? $cond : $__n$addr$0;
  if ($$sroa$speculated >>> 0 < $0 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE8__rehashEm($this, $$sroa$speculated);
 }
 return;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE21__push_back_slow_pathIRKS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 2;
  __ZNSt3__214__split_bufferIN6vision17PriorityQueueItemILi96EEERNS_9allocatorIS3_EEEC2EmmS6_($2, $15 >> 3 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 3, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $26 = $1;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  $32 = HEAP32[$24 >> 2] | 0;
  HEAP32[$32 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$32 + 4 >> 2] = $31;
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 8;
  __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision17PriorityQueueItemILi96EEERNS_9allocatorIS3_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$sroa$speculated = 0, $16 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $28 = 0, $29 = 0, $38 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp;
 if ((-18 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $25 = HEAP32[$0 >> 2] | 0; else $25 = $0;
 if ($1 >>> 0 < 2147483623) {
  $16 = $2 + $1 | 0;
  $17 = $1 << 1;
  $$sroa$speculated = $16 >>> 0 < $17 >>> 0 ? $17 : $16;
  $22 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $22 = -17;
 $23 = __Znwm($22) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($23, $25, $4) | 0;
 if ($6 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($23 + $4 | 0, $7, $6) | 0;
 $28 = $3 - $5 | 0;
 $29 = $28 - $4 | 0;
 if ($29 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($23 + $4 + $6 | 0, $25 + $4 + $5 | 0, $29) | 0;
 if (($1 | 0) != 10) __ZdlPv($25);
 HEAP32[$0 >> 2] = $23;
 HEAP32[$0 + 8 >> 2] = $22 | -2147483648;
 $38 = $28 + $6 | 0;
 HEAP32[$0 + 4 >> 2] = $38;
 HEAP8[$8 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($23 + $38 | 0, $8);
 STACKTOP = sp;
 return;
}

function _fread($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$0 = 0, $$054 = 0, $$056 = 0, $$15759 = 0, $$160 = 0, $10 = 0, $12 = 0, $18 = 0, $19 = 0, $20 = 0, $29 = 0, $33 = 0, $36 = 0, $4 = 0, $40 = 0, $spec$select = 0, label = 0;
 $4 = Math_imul($2, $1) | 0;
 $spec$select = ($1 | 0) == 0 ? 0 : $2;
 if ((HEAP32[$3 + 76 >> 2] | 0) > -1) $36 = ___lockfile($3) | 0; else $36 = 0;
 $10 = $3 + 74 | 0;
 $12 = HEAP8[$10 >> 0] | 0;
 HEAP8[$10 >> 0] = $12 + 255 | $12;
 $18 = $3 + 4 | 0;
 $19 = HEAP32[$18 >> 2] | 0;
 $20 = (HEAP32[$3 + 8 >> 2] | 0) - $19 | 0;
 if (($20 | 0) > 0) {
  $$ = $20 >>> 0 < $4 >>> 0 ? $20 : $4;
  _memcpy($0 | 0, $19 | 0, $$ | 0) | 0;
  HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + $$;
  $$054 = $4 - $$ | 0;
  $$056 = $0 + $$ | 0;
 } else {
  $$054 = $4;
  $$056 = $0;
 }
 L7 : do if (!$$054) label = 13; else {
  $29 = $3 + 32 | 0;
  $$15759 = $$056;
  $$160 = $$054;
  while (1) {
   if (___toread($3) | 0) break;
   $33 = FUNCTION_TABLE_iiii[HEAP32[$29 >> 2] & 63]($3, $$15759, $$160) | 0;
   if (($33 + 1 | 0) >>> 0 < 2) break;
   $40 = $$160 - $33 | 0;
   if (!$40) {
    label = 13;
    break L7;
   } else {
    $$15759 = $$15759 + $33 | 0;
    $$160 = $40;
   }
  }
  if ($36 | 0) ___unlockfile($3);
  $$0 = (($4 - $$160 | 0) >>> 0) / ($1 >>> 0) | 0;
 } while (0);
 if ((label | 0) == 13) if (!$36) $$0 = $spec$select; else {
  ___unlockfile($3);
  $$0 = $spec$select;
 }
 return $$0 | 0;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS8_RS9_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $7 = HEAP32[$5 >> 2] | 0;
  $8 = $7 + -16 | 0;
  $9 = $$0$i + -16 | 0;
  HEAP32[$8 >> 2] = 0;
  $11 = $7 + -12 | 0;
  HEAP32[$11 >> 2] = 0;
  $12 = $7 + -8 | 0;
  HEAP32[$12 >> 2] = 0;
  HEAP32[$7 + -4 >> 2] = HEAP32[$$0$i + -4 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
  $16 = $$0$i + -12 | 0;
  HEAP32[$11 >> 2] = HEAP32[$16 >> 2];
  $18 = $$0$i + -8 | 0;
  HEAP32[$12 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$18 >> 2] = 0;
  HEAP32[$16 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -16;
  $$0$i = $9;
 }
 $22 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $22;
 $24 = $1 + 8 | 0;
 $25 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$24 >> 2];
 HEAP32[$24 >> 2] = $25;
 $27 = $0 + 8 | 0;
 $28 = $1 + 12 | 0;
 $29 = HEAP32[$27 >> 2] | 0;
 HEAP32[$27 >> 2] = HEAP32[$28 >> 2];
 HEAP32[$28 >> 2] = $29;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function __ZNSt3__225__num_get_signed_integralIlEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  $6 = ___errno_location() | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $8 = ___errno_location() | 0;
  HEAP32[$8 >> 2] = 0;
  $10 = _strtoll_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $11 = getTempRet0() | 0;
  $12 = ___errno_location() | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if (!$13) {
   $15 = ___errno_location() | 0;
   HEAP32[$15 >> 2] = $7;
  }
  L7 : do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) {
   do if (($13 | 0) == 34) {
    HEAP32[$2 >> 2] = 4;
    if (($11 | 0) > 0 | ($11 | 0) == 0 & $10 >>> 0 > 0) {
     $$0 = 2147483647;
     break L7;
    }
   } else {
    if (($11 | 0) < -1 | ($11 | 0) == -1 & $10 >>> 0 < 2147483648) {
     HEAP32[$2 >> 2] = 4;
     break;
    }
    if (($11 | 0) > 0 | ($11 | 0) == 0 & $10 >>> 0 > 2147483647) {
     HEAP32[$2 >> 2] = 4;
     $$0 = 2147483647;
     break L7;
    } else {
     $$0 = $10;
     break L7;
    }
   } while (0);
   $$0 = -2147483648;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 }
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis0IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0.0, $14 = 0.0, $17 = 0.0, $2 = 0, $20 = 0.0, $23 = 0.0, $25 = 0, $26 = 0, $3 = 0.0, $4 = 0, $5 = 0.0, $8 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = +__ZN6vision11SumSquares9IfEET_PKS1_($1);
 HEAPF32[$2 >> 2] = $3;
 $4 = $1 + 36 | 0;
 $5 = +__ZN6vision11SumSquares9IfEET_PKS1_($4);
 HEAPF32[$2 + 4 >> 2] = $5;
 $8 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 72 | 0);
 HEAPF32[$2 + 8 >> 2] = $8;
 $11 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 108 | 0);
 HEAPF32[$2 + 12 >> 2] = $11;
 $14 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 144 | 0);
 HEAPF32[$2 + 16 >> 2] = $14;
 $17 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 180 | 0);
 HEAPF32[$2 + 20 >> 2] = $17;
 $20 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 216 | 0);
 HEAPF32[$2 + 24 >> 2] = $20;
 $23 = +__ZN6vision11SumSquares9IfEET_PKS1_($1 + 252 | 0);
 HEAPF32[$2 + 28 >> 2] = $23;
 $25 = __ZN6vision9MaxIndex8IfEEiPKT_($2) | 0;
 $26 = $2 + ($25 << 2) | 0;
 if (+HEAPF32[$26 >> 2] == 0.0) $$0 = 0; else {
  __ZN6vision5Swap9IfEEvPT_S2_($1, $1 + ($25 * 9 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($0, $1, 1.0 / +Math_sqrt(+(+HEAPF32[$26 >> 2])));
  __ZN6vision10CopyVectorIfEEvPT_PKS1_m($0 + 36 | 0, $4, 63);
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $14 = 0, $21 = 0, $27 = 0, $28 = 0, $37 = 0, $39 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] & 127]($7) | 0;
 $14 = HEAP8[$11 + 8 + 3 >> 0] | 0;
 if ($14 << 24 >> 24 < 0) $28 = HEAP32[$11 + 4 >> 2] | 0; else $28 = $14 & 255;
 $21 = HEAP8[$11 + 20 + 3 >> 0] | 0;
 if ($21 << 24 >> 24 < 0) $27 = HEAP32[$11 + 16 >> 2] | 0; else $27 = $21 & 255;
 do if (($28 | 0) == (0 - $27 | 0)) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4; else {
  HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
  $37 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 24 | 0, $5, $4, 0) | 0) - $11 | 0;
  $39 = HEAP32[$1 >> 2] | 0;
  if (($39 | 0) == 12 & ($37 | 0) == 0) {
   HEAP32[$1 >> 2] = 0;
   break;
  }
  if (($39 | 0) < 12 & ($37 | 0) == 12) HEAP32[$1 >> 2] = $39 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function _arLogv($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $17 = 0, $18 = 0, $19 = 0, $28 = 0, $32 = 0, $4 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $vararg_buffer = sp + 16 | 0;
 $4 = sp;
 if (!(($2 | 0) == 0 | (HEAP32[3368] | 0) > ($1 | 0))) if (HEAP8[$2 >> 0] | 0) {
  HEAP32[$4 >> 2] = HEAP32[$3 >> 2];
  $10 = _vsnprintf(0, 0, $2, $4) | 0;
  if ($10 | 0) {
   if ($1 >>> 0 < 4) $$0 = (_strlen(HEAP32[1744 + ($1 << 2) >> 2] | 0) | 0) + 3 | 0; else $$0 = 0;
   $17 = $$0 + $10 | 0;
   $18 = $17 + 1 | 0;
   $19 = _malloc($18) | 0;
   if ($$0 | 0) {
    HEAP32[$vararg_buffer >> 2] = HEAP32[1744 + ($1 << 2) >> 2];
    _snprintf($19, $$0 + 1 | 0, 19380, $vararg_buffer) | 0;
   }
   _vsnprintf($19 + $$0 | 0, $10 + 1 | 0, $2, $3) | 0;
   do if (!0) _fputs($19, HEAP32[3454] | 0) | 0; else if (0) {
    $28 = HEAP32[14030] | 0;
    if ($28 >>> 0 < 0) {
     $32 = 0 + $28 | 0;
     if ($17 >>> 0 > (-4 - $28 + 0 | 0) >>> 0) {
      HEAP8[$32 >> 0] = 46;
      HEAP8[$32 + 1 >> 0] = 46;
      HEAP8[$32 + 2 >> 0] = 46;
      HEAP8[$32 + 3 >> 0] = 0;
      HEAP32[14030] = 0;
      break;
     } else {
      _strncpy($32, $19, $18) | 0;
      HEAP32[14030] = (HEAP32[14030] | 0) + $17;
      break;
     }
    }
   } while (0);
   _free($19);
  }
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision5Swap9IfEEvPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $4 = $0 + 4 | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 $5 = $1 + 4 | 0;
 HEAP32[$1 >> 2] = $2;
 $6 = HEAP32[$4 >> 2] | 0;
 $8 = $0 + 8 | 0;
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 $9 = $1 + 8 | 0;
 HEAP32[$5 >> 2] = $6;
 $10 = HEAP32[$8 >> 2] | 0;
 $12 = $0 + 12 | 0;
 HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
 $13 = $1 + 12 | 0;
 HEAP32[$9 >> 2] = $10;
 $14 = HEAP32[$12 >> 2] | 0;
 $16 = $0 + 16 | 0;
 HEAP32[$12 >> 2] = HEAP32[$13 >> 2];
 $17 = $1 + 16 | 0;
 HEAP32[$13 >> 2] = $14;
 $18 = HEAP32[$16 >> 2] | 0;
 $20 = $0 + 20 | 0;
 HEAP32[$16 >> 2] = HEAP32[$17 >> 2];
 $21 = $1 + 20 | 0;
 HEAP32[$17 >> 2] = $18;
 $22 = HEAP32[$20 >> 2] | 0;
 $24 = $0 + 24 | 0;
 HEAP32[$20 >> 2] = HEAP32[$21 >> 2];
 $25 = $1 + 24 | 0;
 HEAP32[$21 >> 2] = $22;
 $26 = HEAP32[$24 >> 2] | 0;
 $28 = $0 + 28 | 0;
 HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
 $29 = $1 + 28 | 0;
 HEAP32[$25 >> 2] = $26;
 $30 = HEAP32[$28 >> 2] | 0;
 $32 = $0 + 32 | 0;
 HEAP32[$28 >> 2] = HEAP32[$29 >> 2];
 $33 = $1 + 32 | 0;
 HEAP32[$29 >> 2] = $30;
 $34 = HEAP32[$32 >> 2] | 0;
 HEAP32[$32 >> 2] = HEAP32[$33 >> 2];
 HEAP32[$33 >> 2] = $34;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE6rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEm($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm($0, $$0); else if ($$0 >>> 0 < $8 >>> 0) {
  $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
  if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
   $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
   $30 = $22 >>> 0 < 2 ? $22 : $27;
  } else $30 = __ZNSt3__212__next_primeEm($22) | 0;
  $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
  if ($$sroa$speculated >>> 0 < $8 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE8__rehashEm($0, $$sroa$speculated);
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE6rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEm($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm($0, $$0); else if ($$0 >>> 0 < $8 >>> 0) {
  $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
  if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
   $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
   $30 = $22 >>> 0 < 2 ? $22 : $27;
  } else $30 = __ZNSt3__212__next_primeEm($22) | 0;
  $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
  if ($$sroa$speculated >>> 0 < $8 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE8__rehashEm($0, $$sroa$speculated);
 }
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_am_pmERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $13 = 0, $20 = 0, $26 = 0, $27 = 0, $36 = 0, $38 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 8 >> 2] & 127]($7) | 0;
 $13 = HEAP8[$11 + 11 >> 0] | 0;
 if ($13 << 24 >> 24 < 0) $27 = HEAP32[$11 + 4 >> 2] | 0; else $27 = $13 & 255;
 $20 = HEAP8[$11 + 12 + 11 >> 0] | 0;
 if ($20 << 24 >> 24 < 0) $26 = HEAP32[$11 + 16 >> 2] | 0; else $26 = $20 & 255;
 do if (($27 | 0) == (0 - $26 | 0)) HEAP32[$4 >> 2] = HEAP32[$4 >> 2] | 4; else {
  HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
  HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
  $36 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 24 | 0, $5, $4, 0) | 0) - $11 | 0;
  $38 = HEAP32[$1 >> 2] | 0;
  if (($38 | 0) == 12 & ($36 | 0) == 0) {
   HEAP32[$1 >> 2] = 0;
   break;
  }
  if (($38 | 0) < 12 & ($36 | 0) == 12) HEAP32[$1 >> 2] = $38 + 12;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS6_RS7_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $11 = 0, $12 = 0, $16 = 0, $18 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $7 = HEAP32[$5 >> 2] | 0;
  $8 = $7 + -16 | 0;
  $9 = $$0$i + -16 | 0;
  HEAP32[$8 >> 2] = 0;
  $11 = $7 + -12 | 0;
  HEAP32[$11 >> 2] = 0;
  $12 = $7 + -8 | 0;
  HEAP32[$12 >> 2] = 0;
  HEAP32[$7 + -4 >> 2] = HEAP32[$$0$i + -4 >> 2];
  HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
  $16 = $$0$i + -12 | 0;
  HEAP32[$11 >> 2] = HEAP32[$16 >> 2];
  $18 = $$0$i + -8 | 0;
  HEAP32[$12 >> 2] = HEAP32[$18 >> 2];
  HEAP32[$18 >> 2] = 0;
  HEAP32[$16 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -16;
  $$0$i = $9;
 }
 $22 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $22;
 $24 = $1 + 8 | 0;
 $25 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$24 >> 2];
 HEAP32[$24 >> 2] = $25;
 $27 = $0 + 8 | 0;
 $28 = $1 + 12 | 0;
 $29 = HEAP32[$27 >> 2] | 0;
 HEAP32[$27 >> 2] = HEAP32[$28 >> 2];
 HEAP32[$28 >> 2] = $29;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function _icpGetJ_U_Xc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $12 = 0, $15 = 0.0, $20 = 0.0, $21 = 0, $24 = 0, $28 = 0, $3 = 0.0, $34 = 0.0, $35 = 0, $36 = 0.0, $38 = 0, $4 = 0.0, $42 = 0, $48 = 0.0, $50 = 0.0, $6 = 0, $9 = 0.0;
 $3 = +HEAPF64[$1 >> 3];
 $4 = +HEAPF64[$2 >> 3];
 $6 = $1 + 8 | 0;
 $9 = +HEAPF64[$2 + 8 >> 3];
 $12 = $1 + 16 | 0;
 $15 = +HEAPF64[$2 + 16 >> 3];
 $20 = +HEAPF64[$1 + 24 >> 3] + ($3 * $4 + +HEAPF64[$6 >> 3] * $9 + +HEAPF64[$12 >> 3] * $15);
 $21 = $1 + 32 | 0;
 $24 = $1 + 40 | 0;
 $28 = $1 + 48 | 0;
 $34 = +HEAPF64[$1 + 56 >> 3] + ($4 * +HEAPF64[$21 >> 3] + $9 * +HEAPF64[$24 >> 3] + $15 * +HEAPF64[$28 >> 3]);
 $35 = $1 + 64 | 0;
 $36 = +HEAPF64[$35 >> 3];
 $38 = $1 + 72 | 0;
 $42 = $1 + 80 | 0;
 $48 = +HEAPF64[$1 + 88 >> 3] + ($4 * $36 + $9 * +HEAPF64[$38 >> 3] + $15 * +HEAPF64[$42 >> 3]);
 if ($48 == 0.0) $$0 = -1; else {
  $50 = $48 * $48;
  HEAPF64[$0 >> 3] = ($3 * $48 - $20 * $36) / $50;
  HEAPF64[$0 + 8 >> 3] = ($48 * +HEAPF64[$6 >> 3] - $20 * +HEAPF64[$38 >> 3]) / $50;
  HEAPF64[$0 + 16 >> 3] = ($48 * +HEAPF64[$12 >> 3] - $20 * +HEAPF64[$42 >> 3]) / $50;
  HEAPF64[$0 + 24 >> 3] = ($48 * +HEAPF64[$21 >> 3] - $34 * +HEAPF64[$35 >> 3]) / $50;
  HEAPF64[$0 + 32 >> 3] = ($48 * +HEAPF64[$24 >> 3] - $34 * +HEAPF64[$38 >> 3]) / $50;
  HEAPF64[$0 + 40 >> 3] = ($48 * +HEAPF64[$28 >> 3] - $34 * +HEAPF64[$42 >> 3]) / $50;
  $$0 = 0;
 }
 return $$0 | 0;
}

function ___fwritex($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$03846 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $10 = 0, $12 = 0, $14 = 0, $22 = 0, $29 = 0, $3 = 0, $32 = 0, $4 = 0, $9 = 0, label = 0;
 $3 = $2 + 16 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) if (!(___towrite($2) | 0)) {
  $12 = HEAP32[$3 >> 2] | 0;
  label = 5;
 } else $$1 = 0; else {
  $12 = $4;
  label = 5;
 }
 L5 : do if ((label | 0) == 5) {
  $9 = $2 + 20 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $14 = $10;
  if (($12 - $10 | 0) >>> 0 < $1 >>> 0) {
   $$1 = FUNCTION_TABLE_iiii[HEAP32[$2 + 36 >> 2] & 63]($2, $0, $1) | 0;
   break;
  }
  L10 : do if ((HEAP8[$2 + 75 >> 0] | 0) < 0 | ($1 | 0) == 0) {
   $$139 = 0;
   $$141 = $0;
   $$143 = $1;
   $32 = $14;
  } else {
   $$03846 = $1;
   while (1) {
    $22 = $$03846 + -1 | 0;
    if ((HEAP8[$0 + $22 >> 0] | 0) == 10) break;
    if (!$22) {
     $$139 = 0;
     $$141 = $0;
     $$143 = $1;
     $32 = $14;
     break L10;
    } else $$03846 = $22;
   }
   $29 = FUNCTION_TABLE_iiii[HEAP32[$2 + 36 >> 2] & 63]($2, $0, $$03846) | 0;
   if ($29 >>> 0 < $$03846 >>> 0) {
    $$1 = $29;
    break L5;
   }
   $$139 = $$03846;
   $$141 = $0 + $$03846 | 0;
   $$143 = $1 - $$03846 | 0;
   $32 = HEAP32[$9 >> 2] | 0;
  } while (0);
  _memcpy($32 | 0, $$141 | 0, $$143 | 0) | 0;
  HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + $$143;
  $$1 = $$139 + $$143 | 0;
 } while (0);
 return $$1 | 0;
}

function __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((HEAP32[$3 >> 2] | 0) - $6 >> 5 >>> 0 < $1 >>> 0) {
  $13 = ($6 - (HEAP32[$0 >> 2] | 0) >> 5) + $1 | 0;
  $14 = __ZNKSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $19 = (HEAP32[$3 >> 2] | 0) - $18 | 0;
   $23 = $19 >> 4;
   __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEEC2EmmS5_($2, $19 >> 5 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, (HEAP32[$5 >> 2] | 0) - $18 >> 5, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
   __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function _merged_2v_upsample($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$1 = 0, $$2 = 0, $$pre$phiZ2D = 0, $10 = 0, $18 = 0, $19 = 0, $21 = 0, $22 = 0, $7 = 0, $9 = 0, $spec$select = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $9 = HEAP32[$0 + 452 >> 2] | 0;
 $10 = $9 + 36 | 0;
 if (!(HEAP32[$10 >> 2] | 0)) {
  $18 = $9 + 44 | 0;
  $19 = HEAP32[$18 >> 2] | 0;
  $spec$select = $19 >>> 0 < 2 ? $19 : 2;
  $21 = HEAP32[$5 >> 2] | 0;
  $22 = $6 - $21 | 0;
  $$1 = $spec$select >>> 0 > $22 >>> 0 ? $22 : $spec$select;
  HEAP32[$7 >> 2] = HEAP32[$4 + ($21 << 2) >> 2];
  if ($$1 >>> 0 > 1) HEAP32[$7 + 4 >> 2] = HEAP32[$4 + ($21 + 1 << 2) >> 2]; else {
   HEAP32[$7 + 4 >> 2] = HEAP32[$9 + 32 >> 2];
   HEAP32[$10 >> 2] = 1;
  }
  FUNCTION_TABLE_viiii[HEAP32[$9 + 12 >> 2] & 31]($0, $1, HEAP32[$2 >> 2] | 0, $7);
  $$2 = $$1;
  $$pre$phiZ2D = $18;
 } else {
  _jcopy_sample_rows($9 + 32 | 0, 0, $4 + (HEAP32[$5 >> 2] << 2) | 0, 0, 1, HEAP32[$9 + 40 >> 2] | 0);
  HEAP32[$10 >> 2] = 0;
  $$2 = 1;
  $$pre$phiZ2D = $9 + 44 | 0;
 }
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $$2;
 HEAP32[$$pre$phiZ2D >> 2] = (HEAP32[$$pre$phiZ2D >> 2] | 0) - $$2;
 if (!(HEAP32[$10 >> 2] | 0)) HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
 STACKTOP = sp;
 return;
}

function _quantize3_ord_dither($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$070 = 0, $$071 = 0, $$072 = 0, $$073 = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $25 = 0, $26 = 0, $27 = 0, $5 = 0, $7 = 0, $8 = 0;
 $5 = HEAP32[$0 + 460 >> 2] | 0;
 $7 = HEAP32[$5 + 24 >> 2] | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $10 = HEAP32[$7 + 4 >> 2] | 0;
 $12 = HEAP32[$7 + 8 >> 2] | 0;
 $14 = HEAP32[$0 + 112 >> 2] | 0;
 $15 = $5 + 48 | 0;
 $16 = $5 + 52 | 0;
 $17 = $5 + 56 | 0;
 $18 = $5 + 60 | 0;
 $$071 = 0;
 while (1) {
  if (($$071 | 0) >= ($3 | 0)) break;
  $20 = HEAP32[$15 >> 2] | 0;
  $25 = HEAP32[$16 >> 2] | 0;
  $26 = HEAP32[$17 >> 2] | 0;
  $27 = HEAP32[$18 >> 2] | 0;
  $$0 = HEAP32[$1 + ($$071 << 2) >> 2] | 0;
  $$070 = $14;
  $$072 = 0;
  $$073 = HEAP32[$2 + ($$071 << 2) >> 2] | 0;
  while (1) {
   if (!$$070) break;
   HEAP8[$$073 >> 0] = (HEAPU8[$10 + ((HEAP32[$26 + ($20 << 6) + ($$072 << 2) >> 2] | 0) + (HEAPU8[$$0 + 1 >> 0] | 0)) >> 0] | 0) + (HEAPU8[$8 + ((HEAP32[$25 + ($20 << 6) + ($$072 << 2) >> 2] | 0) + (HEAPU8[$$0 >> 0] | 0)) >> 0] | 0) + (HEAPU8[$12 + ((HEAP32[$27 + ($20 << 6) + ($$072 << 2) >> 2] | 0) + (HEAPU8[$$0 + 2 >> 0] | 0)) >> 0] | 0);
   $$0 = $$0 + 3 | 0;
   $$070 = $$070 + -1 | 0;
   $$072 = $$072 + 1 & 15;
   $$073 = $$073 + 1 | 0;
  }
  HEAP32[$15 >> 2] = $20 + 1 & 15;
  $$071 = $$071 + 1 | 0;
 }
 return;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $16 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = (((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) | 0) / 12 | 0) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $16 = ((HEAP32[$0 + 8 >> 2] | 0) - $14 | 0) / 12 | 0;
  $19 = $16 << 1;
  __ZNSt3__214__split_bufferIN6vision7Point3dIfEERNS_9allocatorIS3_EEEC2EmmS6_($2, $16 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, ((HEAP32[$3 >> 2] | 0) - $14 | 0) / 12 | 0, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  HEAP32[$25 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$25 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$25 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 12;
  __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision7Point3dIfEERNS_9allocatorIS3_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function _consume_markers($0) {
 $0 = $0 | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $17 = 0, $2 = 0, $27 = 0, $3 = 0, $30 = 0, $33 = 0, $6 = 0;
 $2 = HEAP32[$0 + 436 >> 2] | 0;
 $3 = $2 + 20 | 0;
 L1 : do if (!(HEAP32[$3 >> 2] | 0)) {
  $6 = $0 + 440 | 0;
  $10 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$6 >> 2] | 0) + 4 >> 2] & 127]($0) | 0;
  switch ($10 | 0) {
  case 1:
   {
    $11 = $2 + 24 | 0;
    if (HEAP32[$11 >> 2] | 0) {
     _initial_setup_35($0);
     HEAP32[$11 >> 2] = 0;
     $$0 = 1;
     break L1;
    }
    if (!(HEAP32[$2 + 16 >> 2] | 0)) {
     $17 = HEAP32[$0 >> 2] | 0;
     HEAP32[$17 + 20 >> 2] = 35;
     FUNCTION_TABLE_vi[HEAP32[$17 >> 2] & 255]($0);
    }
    _start_input_pass_33($0);
    $$0 = 1;
    break L1;
    break;
   }
  case 2:
   {
    HEAP32[$3 >> 2] = 1;
    if (!(HEAP32[$2 + 24 >> 2] | 0)) {
     $30 = $0 + 152 | 0;
     $33 = HEAP32[$0 + 144 >> 2] | 0;
     if ((HEAP32[$30 >> 2] | 0) <= ($33 | 0)) {
      $$0 = 2;
      break L1;
     }
     HEAP32[$30 >> 2] = $33;
     $$0 = 2;
     break L1;
    } else {
     if (!(HEAP32[(HEAP32[$6 >> 2] | 0) + 16 >> 2] | 0)) {
      $$0 = 2;
      break L1;
     }
     $27 = HEAP32[$0 >> 2] | 0;
     HEAP32[$27 + 20 >> 2] = 59;
     FUNCTION_TABLE_vi[HEAP32[$27 >> 2] & 255]($0);
     $$0 = 2;
     break L1;
    }
    break;
   }
  default:
   {
    $$0 = $10;
    break L1;
   }
  }
 } else $$0 = 2; while (0);
 return $$0 | 0;
}

function __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((HEAP32[$3 >> 2] | 0) - $6 >> 3 >>> 0 < $1 >>> 0) {
  $13 = ($6 - (HEAP32[$0 >> 2] | 0) >> 3) + $1 | 0;
  $14 = __ZNKSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $19 = (HEAP32[$3 >> 2] | 0) - $18 | 0;
   $23 = $19 >> 2;
   __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEEC2EmmS5_($2, $19 >> 3 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, (HEAP32[$5 >> 2] | 0) - $18 >> 3, $0 + 8 | 0);
   __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
   __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function _xt_by_x($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$051 = 0, $$052 = 0, $$053 = 0, $$054 = 0, $$055 = 0, $$056 = 0, $$1 = 0, $12 = 0, $17 = 0, $19 = 0, $26 = 0.0, $27 = 0.0, $3 = 0, $5 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 L1 : do if ((HEAP32[$1 + 4 >> 2] | 0) == ($5 | 0)) if ((HEAP32[$1 + 8 >> 2] | 0) == ($5 | 0)) {
  $12 = HEAP32[$1 >> 2] | 0;
  $$052 = 0;
  $$055 = $12;
  while (1) {
   if (($$052 | 0) >= ($5 | 0)) {
    $$053 = 0;
    break L1;
   }
   $$051 = 0;
   $$1 = $$055;
   while (1) {
    if (($$051 | 0) == ($5 | 0)) break;
    L10 : do if ($$051 >>> 0 < $$052 >>> 0) {
     $17 = $12 + ((Math_imul($$051, $5) | 0) + $$052 << 3) | 0;
     HEAPF64[$$1 >> 3] = +HEAPF64[$17 >> 3];
    } else {
     $19 = HEAP32[$0 >> 2] | 0;
     HEAPF64[$$1 >> 3] = 0.0;
     $$0 = 0;
     $$054 = $19 + ($$052 << 3) | 0;
     $$056 = $19 + ($$051 << 3) | 0;
     $27 = 0.0;
     while (1) {
      if (($$0 | 0) >= ($3 | 0)) break L10;
      $26 = $27 + +HEAPF64[$$054 >> 3] * +HEAPF64[$$056 >> 3];
      HEAPF64[$$1 >> 3] = $26;
      $$0 = $$0 + 1 | 0;
      $$054 = $$054 + ($5 << 3) | 0;
      $$056 = $$056 + ($5 << 3) | 0;
      $27 = $26;
     }
    } while (0);
    $$051 = $$051 + 1 | 0;
    $$1 = $$1 + 8 | 0;
   }
   $$052 = $$052 + 1 | 0;
   $$055 = $$055 + ($5 << 3) | 0;
  }
 } else $$053 = -1; else $$053 = -1; while (0);
 return $$053 | 0;
}

function _h2v1_fancy_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$039 = 0, $$040 = 0, $$041 = 0, $$pn = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $24 = 0, $26 = 0, $28 = 0, $31 = 0, $4 = 0, $47 = 0, $5 = 0, $6 = 0, $scevgep42 = 0, $scevgep45 = 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $0 + 312 | 0;
 $6 = $1 + 40 | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) >= (HEAP32[$5 >> 2] | 0)) break;
  $10 = HEAP32[$2 + ($$0 << 2) >> 2] | 0;
  $12 = HEAP32[$4 + ($$0 << 2) >> 2] | 0;
  $13 = $10 + 1 | 0;
  $14 = HEAP8[$10 >> 0] | 0;
  HEAP8[$12 >> 0] = $14;
  HEAP8[$12 + 1 >> 0] = ((($14 & 255) * 3 | 0) + 2 + (HEAPU8[$13 >> 0] | 0) | 0) >>> 2;
  $24 = HEAP32[$6 >> 2] | 0;
  $scevgep42 = $10 + -1 + $24 | 0;
  $26 = $24 << 1;
  $scevgep45 = $12 + -2 | 0;
  $$039 = $24 + -2 | 0;
  $$041 = $13;
  $$pn = $12;
  while (1) {
   $$040 = $$pn + 2 | 0;
   if (!$$039) break;
   $28 = $$041 + 1 | 0;
   $31 = (HEAPU8[$$041 >> 0] | 0) * 3 | 0;
   HEAP8[$$040 >> 0] = ((HEAPU8[$$041 + -1 >> 0] | 0) + 1 + $31 | 0) >>> 2;
   HEAP8[$$pn + 3 >> 0] = ($31 + 2 + (HEAPU8[$28 >> 0] | 0) | 0) >>> 2;
   $$039 = $$039 + -1 | 0;
   $$041 = $28;
   $$pn = $$040;
  }
  $47 = HEAP8[$scevgep42 >> 0] | 0;
  HEAP8[$scevgep45 + $26 >> 0] = ((HEAPU8[$scevgep42 + -1 >> 0] | 0) + 1 + (($47 & 255) * 3 | 0) | 0) >>> 2;
  HEAP8[$12 + -4 + $26 + 3 >> 0] = $47;
  $$0 = $$0 + 1 | 0;
 }
 return;
}

function __ZN6vision21DenormalizeHomographyIfEEvPT_PKS1_S1_S4_S1_S4_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 $3 = $3 | 0;
 $4 = +$4;
 $5 = $5 | 0;
 var $10 = 0, $11 = 0.0, $18 = 0.0, $19 = 0.0, $20 = 0, $21 = 0.0, $30 = 0.0, $31 = 0.0, $33 = 0.0, $34 = 0, $36 = 0.0, $40 = 0, $6 = 0, $7 = 0.0, $70 = 0.0, $73 = 0.0, $8 = 0.0;
 $6 = $1 + 24 | 0;
 $7 = +HEAPF32[$6 >> 2];
 $8 = +HEAPF32[$5 >> 2];
 $10 = $1 + 28 | 0;
 $11 = +HEAPF32[$10 >> 2];
 $18 = $7 * $8 + +HEAPF32[$1 >> 2] / $4;
 $19 = $8 * $11 + +HEAPF32[$1 + 4 >> 2] / $4;
 $20 = $5 + 4 | 0;
 $21 = +HEAPF32[$20 >> 2];
 $30 = $7 * $21 + +HEAPF32[$1 + 12 >> 2] / $4;
 $31 = $11 * $21 + +HEAPF32[$1 + 16 >> 2] / $4;
 $33 = +HEAPF32[$3 >> 2] * $2;
 $34 = $3 + 4 | 0;
 $36 = +HEAPF32[$34 >> 2] * $2;
 HEAPF32[$0 >> 2] = $18 * $2;
 HEAPF32[$0 + 4 >> 2] = $19 * $2;
 $40 = $1 + 32 | 0;
 HEAPF32[$0 + 8 >> 2] = +HEAPF32[$40 >> 2] * +HEAPF32[$5 >> 2] + +HEAPF32[$1 + 8 >> 2] / $4 - $18 * $33 - $19 * $36;
 HEAPF32[$0 + 12 >> 2] = $30 * $2;
 HEAPF32[$0 + 16 >> 2] = $31 * $2;
 HEAPF32[$0 + 20 >> 2] = +HEAPF32[$40 >> 2] * +HEAPF32[$20 >> 2] + +HEAPF32[$1 + 20 >> 2] / $4 - $30 * $33 - $31 * $36;
 $70 = +HEAPF32[$6 >> 2] * $2;
 HEAPF32[$0 + 24 >> 2] = $70;
 $73 = +HEAPF32[$10 >> 2] * $2;
 HEAPF32[$0 + 28 >> 2] = $73;
 HEAPF32[$0 + 32 >> 2] = +HEAPF32[$40 >> 2] - $70 * +HEAPF32[$3 >> 2] - $73 * +HEAPF32[$34 >> 2];
 return;
}

function _arMatrixMul($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$040 = 0, $$041 = 0, $$042 = 0, $$043 = 0, $$044 = 0, $$045 = 0, $$1 = 0, $14 = 0, $20 = 0, $30 = 0.0, $31 = 0.0, $4 = 0, $9 = 0;
 $4 = HEAP32[$1 + 8 >> 2] | 0;
 L1 : do if (($4 | 0) == (HEAP32[$2 + 4 >> 2] | 0)) {
  $9 = HEAP32[$0 + 4 >> 2] | 0;
  if (($9 | 0) == (HEAP32[$1 + 4 >> 2] | 0)) {
   $14 = HEAP32[$0 + 8 >> 2] | 0;
   if (($14 | 0) == (HEAP32[$2 + 8 >> 2] | 0)) {
    $$0 = HEAP32[$0 >> 2] | 0;
    $$044 = 0;
    while (1) {
     if (($$044 | 0) >= ($9 | 0)) {
      $$045 = 0;
      break L1;
     }
     $20 = Math_imul($$044, $4) | 0;
     $$043 = 0;
     $$1 = $$0;
     while (1) {
      if (($$043 | 0) >= ($14 | 0)) break;
      HEAPF64[$$1 >> 3] = 0.0;
      $$040 = (HEAP32[$2 >> 2] | 0) + ($$043 << 3) | 0;
      $$041 = (HEAP32[$1 >> 2] | 0) + ($20 << 3) | 0;
      $$042 = 0;
      $31 = 0.0;
      while (1) {
       if (($$042 | 0) >= ($4 | 0)) break;
       $30 = $31 + +HEAPF64[$$041 >> 3] * +HEAPF64[$$040 >> 3];
       HEAPF64[$$1 >> 3] = $30;
       $$040 = $$040 + ($14 << 3) | 0;
       $$041 = $$041 + 8 | 0;
       $$042 = $$042 + 1 | 0;
       $31 = $30;
      }
      $$043 = $$043 + 1 | 0;
      $$1 = $$1 + 8 | 0;
     }
     $$0 = $$1;
     $$044 = $$044 + 1 | 0;
    }
   } else $$045 = -1;
  } else $$045 = -1;
 } else $$045 = -1; while (0);
 return $$045 | 0;
}

function __ZN6vision25CheckHomographyHeuristicsEPfii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$1 = 0, $10 = 0, $12 = 0.0, $15 = 0.0, $20 = 0.0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(96);
 $3 = sp + 88 | 0;
 $4 = sp + 80 | 0;
 $5 = sp + 72 | 0;
 $6 = sp + 64 | 0;
 $7 = sp;
 $8 = sp + 56 | 0;
 $9 = sp + 48 | 0;
 $10 = sp + 40 | 0;
 if (__ZN6vision16MatrixInverse3x3IfEEbPT_PKS1_S1_($7, $0, 9.999999747378752e-06) | 0) {
  $12 = +($1 | 0);
  HEAPF32[$8 >> 2] = $12;
  HEAPF32[$8 + 4 >> 2] = 0.0;
  HEAPF32[$9 >> 2] = $12;
  $15 = +($2 | 0);
  HEAPF32[$9 + 4 >> 2] = $15;
  HEAPF32[$10 >> 2] = 0.0;
  HEAPF32[$10 + 4 >> 2] = $15;
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($3, $7, 56136);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($4, $7, $8);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($5, $7, $9);
  __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($6, $7, $10);
  $20 = +(Math_imul($2, $1) | 0) * .0001;
  if (+__ZN6vision20SmallestTriangleAreaIfEET_PKS1_S3_S3_S3_($3, $4, $5, $6) < $20) $$0 = 0; else $$0 = __ZN6vision19QuadrilateralConvexIfEEbPKT_S3_S3_S3_($3, $4, $5, $6) | 0;
  $$1 = $$0;
 } else $$1 = 0;
 STACKTOP = sp;
 return $$1 | 0;
}

function _jinit_d_main_controller($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$040 = 0, $$041 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $26 = 0, $27 = 0, $33 = 0, $34 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 $5 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$2 >> 2] >> 2] & 63]($0, 1, 80) | 0;
 HEAP32[$0 + 424 >> 2] = $5;
 HEAP32[$5 >> 2] = 45;
 if ($1 | 0) {
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$8 + 20 >> 2] = 4;
  FUNCTION_TABLE_vi[HEAP32[$8 >> 2] & 255]($0);
 }
 $16 = $0 + 316 | 0;
 $17 = HEAP32[$16 >> 2] | 0;
 if (!(HEAP32[(HEAP32[$0 + 452 >> 2] | 0) + 8 >> 2] | 0)) $$040 = $17; else {
  if (($17 | 0) < 2) {
   $19 = HEAP32[$0 >> 2] | 0;
   HEAP32[$19 + 20 >> 2] = 47;
   FUNCTION_TABLE_vi[HEAP32[$19 >> 2] & 255]($0);
  }
  _alloc_funny_pointers($0);
  $$040 = (HEAP32[$16 >> 2] | 0) + 2 | 0;
 }
 $26 = $0 + 36 | 0;
 $27 = $5 + 8 | 0;
 $$0 = HEAP32[$0 + 216 >> 2] | 0;
 $$041 = 0;
 while (1) {
  if (($$041 | 0) >= (HEAP32[$26 >> 2] | 0)) break;
  $33 = HEAP32[$$0 + 36 >> 2] | 0;
  $34 = Math_imul($33, HEAP32[$$0 + 12 >> 2] | 0) | 0;
  $42 = Math_imul(HEAP32[$$0 + 28 >> 2] | 0, $33) | 0;
  $43 = Math_imul(($34 | 0) / (HEAP32[$16 >> 2] | 0) | 0, $$040) | 0;
  $44 = FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 8 >> 2] & 15]($0, 1, $42, $43) | 0;
  HEAP32[$27 + ($$041 << 2) >> 2] = $44;
  $$0 = $$0 + 84 | 0;
  $$041 = $$041 + 1 | 0;
 }
 return;
}

function _strcspn($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$01823 = 0, $$019$lcssa$sink = 0, $$01920 = 0, $10 = 0, $12 = 0, $13 = 0, $17 = 0, $2 = 0, $23 = 0, $25 = 0, $26 = 0, $3 = 0, $34 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = HEAP8[$1 >> 0] | 0;
 L1 : do if (!($3 << 24 >> 24)) label = 3; else if (!(HEAP8[$1 + 1 >> 0] | 0)) label = 3; else {
  _memset($2 | 0, 0, 32) | 0;
  $10 = HEAP8[$1 >> 0] | 0;
  if ($10 << 24 >> 24) {
   $$01823 = $1;
   $13 = $10;
   do {
    $12 = $13 & 255;
    $17 = $2 + ($12 >>> 5 << 2) | 0;
    HEAP32[$17 >> 2] = HEAP32[$17 >> 2] | 1 << ($12 & 31);
    $$01823 = $$01823 + 1 | 0;
    $13 = HEAP8[$$01823 >> 0] | 0;
   } while ($13 << 24 >> 24 != 0);
  }
  $23 = HEAP8[$0 >> 0] | 0;
  if (!($23 << 24 >> 24)) $$019$lcssa$sink = $0; else {
   $$01920 = $0;
   $26 = $23;
   while (1) {
    $25 = $26 & 255;
    if (HEAP32[$2 + ($25 >>> 5 << 2) >> 2] & 1 << ($25 & 31) | 0) {
     $$019$lcssa$sink = $$01920;
     break L1;
    }
    $34 = $$01920 + 1 | 0;
    $26 = HEAP8[$34 >> 0] | 0;
    if (!($26 << 24 >> 24)) {
     $$019$lcssa$sink = $34;
     break;
    } else $$01920 = $34;
   }
  }
 } while (0);
 if ((label | 0) == 3) $$019$lcssa$sink = ___strchrnul($0, $3 << 24 >> 24) | 0;
 STACKTOP = sp;
 return $$019$lcssa$sink - $0 | 0;
}

function __ZL18genBWImageOneThirdPhiiPiS0_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$052 = 0, $$053 = 0, $$054 = 0, $$055 = 0, $$056 = 0, $$1 = 0, $11 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = ($1 | 0) / 3 | 0;
 HEAP32[$3 >> 2] = $5;
 $6 = ($2 | 0) / 3 | 0;
 HEAP32[$4 >> 2] = $6;
 $8 = _malloc(Math_imul($6, $5) | 0) | 0;
 if (!$8) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 }
 $$0 = 0;
 $$053 = $8;
 while (1) {
  if (($$0 | 0) >= ($6 | 0)) break;
  $11 = $$0 * 3 | 0;
  $$052 = 0;
  $$054 = $0 + (Math_imul($11, $1) | 0) | 0;
  $$055 = $0 + (Math_imul($11 + 2 | 0, $1) | 0) | 0;
  $$056 = $0 + (Math_imul($11 + 1 | 0, $1) | 0) | 0;
  $$1 = $$053;
  while (1) {
   if (($$052 | 0) >= ($5 | 0)) break;
   HEAP8[$$1 >> 0] = ((HEAPU8[$$054 + 1 >> 0] | 0) + (HEAPU8[$$054 >> 0] | 0) + (HEAPU8[$$054 + 2 >> 0] | 0) + (HEAPU8[$$056 >> 0] | 0) + (HEAPU8[$$056 + 1 >> 0] | 0) + (HEAPU8[$$056 + 2 >> 0] | 0) + (HEAPU8[$$055 >> 0] | 0) + (HEAPU8[$$055 + 1 >> 0] | 0) + (HEAPU8[$$055 + 2 >> 0] | 0) | 0) / 9 | 0;
   $$052 = $$052 + 1 | 0;
   $$054 = $$054 + 3 | 0;
   $$055 = $$055 + 3 | 0;
   $$056 = $$056 + 3 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$053 = $$1;
 }
 STACKTOP = sp;
 return $8 | 0;
}

function _addNFTMarker($id, $datasetPathname) {
 $id = $id | 0;
 $datasetPathname = $datasetPathname | 0;
 var $0 = 0, $call7 = 0, $cond$i$i$i = 0, $id$addr = 0, $retval$1 = 0, $surfaceSetCount = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $id$addr = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  $surfaceSetCount = $call7 + 240 | 0;
  $0 = HEAP32[$surfaceSetCount >> 2] | 0;
  if ((HEAP8[$datasetPathname + 11 >> 0] | 0) < 0) $cond$i$i$i = HEAP32[$datasetPathname >> 2] | 0; else $cond$i$i$i = $datasetPathname;
  if (!(_loadNFTMarker($call7, $0, $cond$i$i$i) | 0)) {
   _arLog(0, 3, 43908, $vararg_buffer);
   $retval$1 = -1;
   break;
  } else {
   HEAP32[$surfaceSetCount >> 2] = (HEAP32[$surfaceSetCount >> 2] | 0) + 1;
   $retval$1 = $0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 2;
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEEC2EmmS5_($2, $15 >> 3 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 3, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $26 = $1;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  $32 = HEAP32[$24 >> 2] | 0;
  HEAP32[$32 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$32 + 4 >> 2] = $31;
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 8;
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3) + 1 | 0;
 $9 = __ZNKSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 2;
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEEC2EmmS5_($2, $15 >> 3 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 3, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $26 = $1;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  $32 = HEAP32[$24 >> 2] | 0;
  HEAP32[$32 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$32 + 4 >> 2] = $31;
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 8;
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function _get_vertex($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$0 = 0, $$071 = 0, $$072 = 0, $$073 = 0.0, $10 = 0, $12 = 0.0, $14 = 0, $16 = 0, $18 = 0.0, $22 = 0.0, $23 = 0, $34 = 0.0, $35 = 0.0, $36 = 0, $45 = 0, $8 = 0, label = 0;
 $8 = HEAP32[$1 + ($3 << 2) >> 2] | 0;
 $10 = HEAP32[$1 + ($2 << 2) >> 2] | 0;
 $12 = +($8 - $10 | 0);
 $14 = HEAP32[$0 + ($2 << 2) >> 2] | 0;
 $16 = HEAP32[$0 + ($3 << 2) >> 2] | 0;
 $18 = +($14 - $16 | 0);
 $22 = +((Math_imul($16, $10) | 0) - (Math_imul($14, $8) | 0) | 0);
 $23 = $2 + 1 | 0;
 $$0 = $23;
 $$071 = $23;
 $$073 = 0.0;
 while (1) {
  if (($$071 | 0) >= ($3 | 0)) break;
  $34 = $12 * +(HEAP32[$0 + ($$071 << 2) >> 2] | 0) + $18 * +(HEAP32[$1 + ($$071 << 2) >> 2] | 0) + $22;
  $35 = $34 * $34;
  $36 = $35 > $$073;
  $$0 = $36 ? $$071 : $$0;
  $$071 = $$071 + 1 | 0;
  $$073 = $36 ? $35 : $$073;
 }
 if ($$073 / ($12 * $12 + $18 * $18) > $4) if ((_get_vertex($0, $1, $2, $$0, $4, $5, $6) | 0) < 0) $$072 = -1; else {
  $45 = HEAP32[$6 >> 2] | 0;
  if (($45 | 0) > 5) $$072 = -1; else {
   HEAP32[$5 + ($45 << 2) >> 2] = $$0;
   HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1;
   if ((_get_vertex($0, $1, $$0, $3, $4, $5, $6) | 0) < 0) $$072 = -1; else label = 8;
  }
 } else label = 8;
 if ((label | 0) == 8) $$072 = 0;
 return $$072 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_118parse_block_invokeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$031 = 0, $$032 = 0, $$2 = 0, $$2$ph = 0, $$236 = 0, $$3 = 0, $17 = 0, $28 = 0;
 L1 : do if (($1 - $0 | 0) > 12) {
  $$031 = 0;
  $$032 = $0;
  while (1) {
   if ($$031 >>> 0 >= 13) break;
   if ((HEAP8[$$032 >> 0] | 0) != (HEAP8[51262 + $$031 >> 0] | 0)) {
    $$236 = $0;
    break L1;
   }
   $$031 = $$031 + 1 | 0;
   $$032 = $$032 + 1 | 0;
  }
  L8 : do if (($$032 | 0) == ($1 | 0)) $$3 = $1; else {
   if ((HEAP8[$$032 >> 0] | 0) == 95) {
    $17 = $$032 + 1 | 0;
    if (($17 | 0) == ($1 | 0)) {
     $$236 = $0;
     break L1;
    }
    if (((HEAP8[$17 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
     $$236 = $0;
     break L1;
    }
    $$2$ph = $$032 + 2 | 0;
   } else $$2$ph = $$032;
   $$2 = $$2$ph;
   while (1) {
    if (($$2 | 0) == ($1 | 0)) {
     $$3 = $1;
     break L8;
    }
    if (((HEAP8[$$2 >> 0] | 0) + -48 | 0) >>> 0 >= 10) {
     $$3 = $$2;
     break L8;
    }
    $$2 = $$2 + 1 | 0;
   }
  } while (0);
  $28 = HEAP32[$2 + 4 >> 2] | 0;
  if ((HEAP32[$2 >> 2] | 0) == ($28 | 0)) $$236 = $0; else {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($28 + -24 | 0, 0, 51276) | 0;
   $$236 = $$3;
  }
 } else $$236 = $0; while (0);
 return $$236 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE6rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEm($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm($0, $$0); else if ($$0 >>> 0 < $8 >>> 0) {
  $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
  if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
   $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
   $30 = $22 >>> 0 < 2 ? $22 : $27;
  } else $30 = __ZNSt3__212__next_primeEm($22) | 0;
  $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
  if ($$sroa$speculated >>> 0 < $8 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE8__rehashEm($0, $$sroa$speculated);
 }
 return;
}

function _jpeg_CreateDecompress($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$1 = 0, $$pre$phiZ2D = 0, $13 = 0, $20 = 0, $21 = 0, $22 = 0, $5 = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 if (($1 | 0) != 62) {
  $5 = HEAP32[$0 >> 2] | 0;
  HEAP32[$5 + 20 >> 2] = 12;
  HEAP32[$5 + 24 >> 2] = 62;
  HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 if (($2 | 0) == 464) $$pre$phiZ2D = $0; else {
  $13 = HEAP32[$0 >> 2] | 0;
  HEAP32[$13 + 20 >> 2] = 21;
  HEAP32[$13 + 24 >> 2] = 464;
  HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $2;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  $$pre$phiZ2D = $0;
 }
 $20 = HEAP32[$0 >> 2] | 0;
 $21 = $0 + 12 | 0;
 $22 = HEAP32[$21 >> 2] | 0;
 _memset($0 + 4 | 0, 0, 460) | 0;
 HEAP32[$0 >> 2] = $20;
 HEAP32[$21 >> 2] = $22;
 HEAP32[$0 + 16 >> 2] = 1;
 _jinit_memory_mgr($$pre$phiZ2D);
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 4) break;
  HEAP32[$0 + 164 + ($$0 << 2) >> 2] = 0;
  $$0 = $$0 + 1 | 0;
 }
 $$1 = 0;
 while (1) {
  if (($$1 | 0) == 4) break;
  HEAP32[$0 + 180 + ($$1 << 2) >> 2] = 0;
  HEAP32[$0 + 196 + ($$1 << 2) >> 2] = 0;
  $$1 = $$1 + 1 | 0;
 }
 HEAP32[$0 + 304 >> 2] = 0;
 _jinit_marker_reader($0);
 _jinit_input_controller($0);
 HEAP32[$0 + 20 >> 2] = 200;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS7_PvEEEERKT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$028 = 0, $$pn = 0, $$sroa$0$0 = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $4 = 0, $6 = 0, $8 = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if (!$4) $$sroa$0$0 = 0; else {
  $6 = $4 + -1 | 0;
  $8 = ($6 & $4 | 0) == 0;
  if ($8) $14 = $6 & $2; else if ($2 >>> 0 < $4 >>> 0) $14 = $2; else $14 = ($2 >>> 0) % ($4 >>> 0) | 0;
  $15 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($14 << 2) >> 2] | 0;
  if (!$15) $$sroa$0$0 = 0; else {
   $$pn = $15;
   while (1) {
    $$028 = HEAP32[$$pn >> 2] | 0;
    if (!$$028) {
     $$sroa$0$0 = 0;
     break L1;
    }
    $19 = HEAP32[$$028 + 4 >> 2] | 0;
    if (($19 | 0) == ($2 | 0)) {
     if ((HEAP32[$$028 + 8 >> 2] | 0) == ($2 | 0)) {
      $$sroa$0$0 = $$028;
      break L1;
     }
    } else {
     if ($8) $24 = $19 & $6; else if ($19 >>> 0 < $4 >>> 0) $24 = $19; else $24 = ($19 >>> 0) % ($4 >>> 0) | 0;
     if (($24 | 0) != ($14 | 0)) {
      $$sroa$0$0 = 0;
      break L1;
     }
    }
    $$pn = $$028;
   }
  }
 } while (0);
 return $$sroa$0$0 | 0;
}

function __ZNK6vision5Image3getIfEEPKT_m($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $16 = 0, $2 = 0, $20 = 0, $26 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 if ((HEAP32[$0 + 8 >> 2] | 0) >>> 0 > $1 >>> 0) {
  $26 = (HEAP32[$0 + 24 >> 2] | 0) + (Math_imul(HEAP32[$0 + 12 >> 2] | 0, $1) | 0) | 0;
  STACKTOP = sp;
  return $26 | 0;
 } else {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21584) | 0, 21621) | 0, 33528) | 0, 124) | 0, 33535) | 0, 21727) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 63]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 return 0;
}

function __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $26 = 0, $3 = 0, $31 = 0, $32 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 3) + 1 | 0;
 $9 = __ZNKSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 2;
  __ZNSt3__214__split_bufferINS_4pairIfmEERNS_9allocatorIS2_EEEC2EmmS5_($2, $15 >> 3 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 3, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $26 = $1;
  $31 = HEAP32[$26 + 4 >> 2] | 0;
  $32 = HEAP32[$24 >> 2] | 0;
  HEAP32[$32 >> 2] = HEAP32[$26 >> 2];
  HEAP32[$32 + 4 >> 2] = $31;
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 8;
  __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
  __ZNSt3__214__split_bufferINS_4pairIfmEERNS_9allocatorIS2_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZN6vision5Image3getIfEEPT_m($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $16 = 0, $2 = 0, $20 = 0, $26 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 if ((HEAP32[$0 + 8 >> 2] | 0) >>> 0 > $1 >>> 0) {
  $26 = (HEAP32[$0 + 24 >> 2] | 0) + (Math_imul(HEAP32[$0 + 12 >> 2] | 0, $1) | 0) | 0;
  STACKTOP = sp;
  return $26 | 0;
 } else {
  $11 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 21584) | 0, 21621) | 0, 33528) | 0, 119) | 0, 33535) | 0, 21727) | 0;
  __ZNKSt3__28ios_base6getlocEv($2, $11 + (HEAP32[(HEAP32[$11 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $16 = __ZNKSt3__26locale9use_facetERNS0_2idE($2, 57884) | 0;
  $20 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$16 >> 2] | 0) + 28 >> 2] & 63]($16, 10) | 0;
  __ZNSt3__26localeD2Ev($2);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($11, $20) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  _abort();
 }
 return 0;
}

function __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS7_RS8_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $7 = HEAP32[$5 >> 2] | 0;
  $8 = $7 + -12 | 0;
  $9 = $$0$i + -12 | 0;
  HEAP32[$8 >> 2] = 0;
  $10 = $7 + -8 | 0;
  HEAP32[$10 >> 2] = 0;
  $11 = $7 + -4 | 0;
  HEAP32[$11 >> 2] = 0;
  HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
  $13 = $$0$i + -8 | 0;
  HEAP32[$10 >> 2] = HEAP32[$13 >> 2];
  $15 = $$0$i + -4 | 0;
  HEAP32[$11 >> 2] = HEAP32[$15 >> 2];
  HEAP32[$15 >> 2] = 0;
  HEAP32[$13 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -12;
  $$0$i = $9;
 }
 $19 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $19;
 $21 = $1 + 8 | 0;
 $22 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$21 >> 2];
 HEAP32[$21 >> 2] = $22;
 $24 = $0 + 8 | 0;
 $25 = $1 + 12 | 0;
 $26 = HEAP32[$24 >> 2] | 0;
 HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
 HEAP32[$25 >> 2] = $26;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function __ZN6vision22SolveHomography4PointsIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_($0, $1, $2, $3, $4, $5, $6, $7, $8) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 $9 = sp;
 $10 = sp + 124 | 0;
 $11 = sp + 120 | 0;
 $12 = sp + 112 | 0;
 $13 = sp + 104 | 0;
 $14 = sp + 96 | 0;
 $15 = sp + 88 | 0;
 $16 = sp + 80 | 0;
 $17 = sp + 72 | 0;
 $18 = sp + 64 | 0;
 $19 = sp + 56 | 0;
 $20 = sp + 48 | 0;
 $21 = sp + 40 | 0;
 if (__ZN6vision18Condition4Points2dIfEEbPT_S2_S2_S2_RS1_S2_PKS1_S5_S5_S5_($14, $15, $16, $17, $10, $12, $1, $2, $3, $4) | 0) if (__ZN6vision18Condition4Points2dIfEEbPT_S2_S2_S2_RS1_S2_PKS1_S5_S5_S5_($18, $19, $20, $21, $11, $13, $5, $6, $7, $8) | 0) if (__ZN6vision34SolveHomography4PointsInhomogenousIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_($9, $14, $15, $16, $17, $18, $19, $20, $21) | 0) {
  __ZN6vision21DenormalizeHomographyIfEEvPT_PKS1_S1_S4_S1_S4_($0, $9, +HEAPF32[$10 >> 2], $12, +HEAPF32[$11 >> 2], $13);
  $$0 = 1;
 } else $$0 = 0; else $$0 = 0; else $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function _getTransMatMultiSquareRobust($id, $multiMarkerId) {
 $id = $id | 0;
 $multiMarkerId = $multiMarkerId | 0;
 var $2 = 0, $5 = 0, $7 = 0, $call7 = 0, $id$addr = 0, $retval$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = HEAP32[3413] | 0; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  $2 = HEAP32[$call7 + 280 >> 2] | 0;
  if (($multiMarkerId | 0) < 0 ? 1 : (HEAP32[$call7 + 284 >> 2] | 0) - $2 >> 3 >>> 0 <= $multiMarkerId >>> 0) {
   $retval$1 = HEAP32[3414] | 0;
   break;
  } else {
   $5 = HEAP32[$2 + ($multiMarkerId << 3) + 4 >> 2] | 0;
   $7 = HEAP32[$call7 + 216 >> 2] | 0;
   +_arGetTransMatMultiSquareRobust(HEAP32[$call7 + 228 >> 2] | 0, $7 + 48 | 0, HEAP32[$7 + 44 >> 2] | 0, $5);
   _matrixCopy($5 + 8 | 0, 51520);
   $retval$1 = 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function _skip_variable($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$041 = 0, $$043 = 0, $$1 = 0, $$142 = 0, $1 = 0, $11 = 0, $12 = 0, $15 = 0, $2 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, label = 0;
 $1 = $0 + 24 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $3 = $2 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) $$043 = 0; else {
  $$0 = HEAP32[$3 >> 2] | 0;
  label = 4;
 } else {
  $$0 = $4;
  label = 4;
 }
 do if ((label | 0) == 4) {
  $$041 = HEAP32[$2 >> 2] | 0;
  $11 = $$0 + -1 | 0;
  $12 = $$041 + 1 | 0;
  $15 = (HEAPU8[$$041 >> 0] | 0) << 8;
  if (!$11) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) {
    $$043 = 0;
    break;
   }
   $$1 = HEAP32[$3 >> 2] | 0;
   $$142 = HEAP32[$2 >> 2] | 0;
  } else {
   $$1 = $11;
   $$142 = $12;
  }
  $27 = $15 | (HEAPU8[$$142 >> 0] | 0);
  $28 = $27 + -2 | 0;
  $29 = HEAP32[$0 >> 2] | 0;
  HEAP32[$29 + 20 >> 2] = 91;
  HEAP32[$29 + 24 >> 2] = HEAP32[$0 + 416 >> 2];
  HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $28;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
  HEAP32[$2 >> 2] = $$142 + 1;
  HEAP32[$3 >> 2] = $$1 + -1;
  if ($27 >>> 0 > 2) {
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 16 >> 2] & 63]($0, $28);
   $$043 = 1;
  } else $$043 = 1;
 } while (0);
 return $$043 | 0;
}

function _getTransMatMultiSquare($id, $multiMarkerId) {
 $id = $id | 0;
 $multiMarkerId = $multiMarkerId | 0;
 var $2 = 0, $5 = 0, $7 = 0, $call7 = 0, $id$addr = 0, $retval$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = HEAP32[3413] | 0; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  $2 = HEAP32[$call7 + 280 >> 2] | 0;
  if (($multiMarkerId | 0) < 0 ? 1 : (HEAP32[$call7 + 284 >> 2] | 0) - $2 >> 3 >>> 0 <= $multiMarkerId >>> 0) {
   $retval$1 = HEAP32[3414] | 0;
   break;
  } else {
   $5 = HEAP32[$2 + ($multiMarkerId << 3) + 4 >> 2] | 0;
   $7 = HEAP32[$call7 + 216 >> 2] | 0;
   +_arGetTransMatMultiSquare(HEAP32[$call7 + 228 >> 2] | 0, $7 + 48 | 0, HEAP32[$7 + 44 >> 2] | 0, $5);
   _matrixCopy($5 + 8 | 0, 51520);
   $retval$1 = 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZNSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS1_RS3_EE($this, $__v) {
 $this = $this | 0;
 $__v = $__v | 0;
 var $$pre$phiZ2D = 0, $0 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $__begin_2 = 0, $__end_ = 0, $__end_6 = 0, $__value_$i$i$i = 0, $__value_$i$i$i6 = 0, $add$ptr$i = 0, $sub$ptr$sub$i7 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 $__end_ = $this + 4 | 0;
 $__begin_2 = $__v + 4 | 0;
 $sub$ptr$sub$i7 = (HEAP32[$__end_ >> 2] | 0) - $0 | 0;
 $add$ptr$i = (HEAP32[$__begin_2 >> 2] | 0) + (0 - ($sub$ptr$sub$i7 >> 3) << 3) | 0;
 HEAP32[$__begin_2 >> 2] = $add$ptr$i;
 if (($sub$ptr$sub$i7 | 0) > 0) {
  _memcpy($add$ptr$i | 0, $0 | 0, $sub$ptr$sub$i7 | 0) | 0;
  $$pre$phiZ2D = $__begin_2;
  $5 = HEAP32[$__begin_2 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $__begin_2;
  $5 = $add$ptr$i;
 }
 $4 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = $5;
 HEAP32[$$pre$phiZ2D >> 2] = $4;
 $__end_6 = $__v + 8 | 0;
 $6 = HEAP32[$__end_ >> 2] | 0;
 HEAP32[$__end_ >> 2] = HEAP32[$__end_6 >> 2];
 HEAP32[$__end_6 >> 2] = $6;
 $__value_$i$i$i6 = $this + 8 | 0;
 $__value_$i$i$i = $__v + 12 | 0;
 $8 = HEAP32[$__value_$i$i$i6 >> 2] | 0;
 HEAP32[$__value_$i$i$i6 >> 2] = HEAP32[$__value_$i$i$i >> 2];
 HEAP32[$__value_$i$i$i >> 2] = $8;
 HEAP32[$__v >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS6_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $19 = 0, $2 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $7 = HEAP32[$5 >> 2] | 0;
  $8 = $7 + -12 | 0;
  $9 = $$0$i + -12 | 0;
  HEAP32[$8 >> 2] = 0;
  $10 = $7 + -8 | 0;
  HEAP32[$10 >> 2] = 0;
  $11 = $7 + -4 | 0;
  HEAP32[$11 >> 2] = 0;
  HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
  $13 = $$0$i + -8 | 0;
  HEAP32[$10 >> 2] = HEAP32[$13 >> 2];
  $15 = $$0$i + -4 | 0;
  HEAP32[$11 >> 2] = HEAP32[$15 >> 2];
  HEAP32[$15 >> 2] = 0;
  HEAP32[$13 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -12;
  $$0$i = $9;
 }
 $19 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $19;
 $21 = $1 + 8 | 0;
 $22 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$21 >> 2];
 HEAP32[$21 >> 2] = $22;
 $24 = $0 + 8 | 0;
 $25 = $1 + 12 | 0;
 $26 = HEAP32[$24 >> 2] | 0;
 HEAP32[$24 >> 2] = HEAP32[$25 >> 2];
 HEAP32[$25 >> 2] = $26;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function __ZNSt3__227__num_get_unsigned_integralIyEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $4 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $21 = 0;
  $22 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $21 = 0;
   $22 = 0;
   break;
  }
  $8 = ___errno_location() | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  $10 = ___errno_location() | 0;
  HEAP32[$10 >> 2] = 0;
  $12 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $13 = getTempRet0() | 0;
  $14 = ___errno_location() | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  if (!$15) {
   $17 = ___errno_location() | 0;
   HEAP32[$17 >> 2] = $9;
  }
  if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if (($15 | 0) == 34) {
   $23 = -1;
   $24 = -1;
   label = 8;
  } else {
   $25 = $12;
   $26 = $13;
  } else {
   $23 = 0;
   $24 = 0;
   label = 8;
  }
  if ((label | 0) == 8) {
   HEAP32[$2 >> 2] = 4;
   $25 = $23;
   $26 = $24;
  }
  $21 = $26;
  $22 = $25;
 } while (0);
 setTempRet0($21 | 0);
 STACKTOP = sp;
 return $22 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE4findIjEENS_15__hash_iteratorIPNS_11__hash_nodeIS2_PvEEEERKT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$028 = 0, $$pn = 0, $$sroa$0$0 = 0, $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $4 = 0, $6 = 0, $8 = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if (!$4) $$sroa$0$0 = 0; else {
  $6 = $4 + -1 | 0;
  $8 = ($6 & $4 | 0) == 0;
  if ($8) $14 = $6 & $2; else if ($2 >>> 0 < $4 >>> 0) $14 = $2; else $14 = ($2 >>> 0) % ($4 >>> 0) | 0;
  $15 = HEAP32[(HEAP32[$0 >> 2] | 0) + ($14 << 2) >> 2] | 0;
  if (!$15) $$sroa$0$0 = 0; else {
   $$pn = $15;
   while (1) {
    $$028 = HEAP32[$$pn >> 2] | 0;
    if (!$$028) {
     $$sroa$0$0 = 0;
     break L1;
    }
    $19 = HEAP32[$$028 + 4 >> 2] | 0;
    if (($19 | 0) == ($2 | 0)) {
     if ((HEAP32[$$028 + 8 >> 2] | 0) == ($2 | 0)) {
      $$sroa$0$0 = $$028;
      break L1;
     }
    } else {
     if ($8) $24 = $19 & $6; else if ($19 >>> 0 < $4 >>> 0) $24 = $19; else $24 = ($19 >>> 0) % ($4 >>> 0) | 0;
     if (($24 | 0) != ($14 | 0)) {
      $$sroa$0$0 = 0;
      break L1;
     }
    }
    $$pn = $$028;
   }
  }
 } while (0);
 return $$sroa$0$0 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $21 = 0, $22 = 0, $31 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($2, $0);
 do if (HEAP8[$2 >> 0] | 0) {
  $10 = HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  $11 = $10;
  if ($10 | 0) {
   $13 = $11 + 24 | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   if (($14 | 0) == (HEAP32[$11 + 28 >> 2] | 0)) {
    $21 = HEAP32[(HEAP32[$10 >> 2] | 0) + 52 >> 2] | 0;
    $22 = __ZNSt3__211char_traitsIcE11to_int_typeEc($1) | 0;
    $$0$i$i = FUNCTION_TABLE_iii[$21 & 63]($11, $22) | 0;
   } else {
    HEAP32[$13 >> 2] = $14 + 1;
    HEAP8[$14 >> 0] = $1;
    $$0$i$i = __ZNSt3__211char_traitsIcE11to_int_typeEc($1) | 0;
   }
   if (!(__ZNSt3__211char_traitsIcE11eq_int_typeEii($$0$i$i, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0)) break;
  }
  $31 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
  __ZNSt3__28ios_base5clearEj($31, HEAP32[$31 + 16 >> 2] | 1);
 } while (0);
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($2);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN6vision5Timer4stopEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $14 = 0, $18 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 if (!(+HEAPF64[$0 >> 3] >= 0.0)) {
  $9 = __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEElsEi(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(__ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc(57180, 33380) | 0, 33419) | 0, 33528) | 0, 67) | 0, 33535) | 0, 33538) | 0;
  __ZNKSt3__28ios_base6getlocEv($1, $9 + (HEAP32[(HEAP32[$9 >> 2] | 0) + -12 >> 2] | 0) | 0);
  $14 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 57884) | 0;
  $18 = FUNCTION_TABLE_iii[HEAP32[(HEAP32[$14 >> 2] | 0) + 28 >> 2] & 63]($14, 10) | 0;
  __ZNSt3__26localeD2Ev($1);
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE3putEc($9, $18) | 0;
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($9) | 0;
  _abort();
 } else {
  _gettimeofday($1 | 0, 0) | 0;
  HEAPF64[$0 + 8 >> 3] = +(HEAP32[$1 + 4 >> 2] | 0) * 1.0e-06 + +(HEAP32[$1 >> 2] | 0);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((HEAP32[$3 >> 2] | 0) - $6 >> 2 >>> 0 < $1 >>> 0) {
  $13 = ($6 - (HEAP32[$0 >> 2] | 0) >> 2) + $1 | 0;
  $14 = __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $19 = (HEAP32[$3 >> 2] | 0) - $18 | 0;
   $23 = $19 >> 1;
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_($2, $19 >> 2 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, (HEAP32[$5 >> 2] | 0) - $18 >> 2, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE($0, $2);
   __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $23 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((HEAP32[$3 >> 2] | 0) - $6 >> 2 >>> 0 < $1 >>> 0) {
  $13 = ($6 - (HEAP32[$0 >> 2] | 0) >> 2) + $1 | 0;
  $14 = __ZNKSt3__26vectorIfNS_9allocatorIfEEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $19 = (HEAP32[$3 >> 2] | 0) - $18 | 0;
   $23 = $19 >> 1;
   __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEEC2EmmS3_($2, $19 >> 2 >>> 0 < $14 >>> 1 >>> 0 ? ($23 >>> 0 < $13 >>> 0 ? $13 : $23) : $14, (HEAP32[$5 >> 2] | 0) - $18 >> 2, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorIfNS_9allocatorIfEEE26__swap_out_circular_bufferERNS_14__split_bufferIfRS2_EE($0, $2);
   __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIfNS_9allocatorIfEEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE6rehashEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$sroa$speculated = 0, $22 = 0, $27 = 0, $30 = 0, $8 = 0;
 if (($1 | 0) == 1) $$0 = 2; else if (!($1 + -1 & $1)) $$0 = $1; else $$0 = __ZNSt3__212__next_primeEm($1) | 0;
 $8 = HEAP32[$0 + 4 >> 2] | 0;
 if ($$0 >>> 0 > $8 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEm($0, $$0); else if ($$0 >>> 0 < $8 >>> 0) {
  $22 = ~~+Math_ceil(+(+((HEAP32[$0 + 12 >> 2] | 0) >>> 0) / +HEAPF32[$0 + 16 >> 2])) >>> 0;
  if ($8 >>> 0 > 2 & ($8 + -1 & $8 | 0) == 0) {
   $27 = 1 << 32 - (Math_clz32($22 + -1 | 0) | 0);
   $30 = $22 >>> 0 < 2 ? $22 : $27;
  } else $30 = __ZNSt3__212__next_primeEm($22) | 0;
  $$sroa$speculated = $$0 >>> 0 < $30 >>> 0 ? $30 : $$0;
  if ($$sroa$speculated >>> 0 < $8 >>> 0) __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE8__rehashEm($0, $$sroa$speculated);
 }
 return;
}

function _jpeg_finish_decompress($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $11 = 0, $18 = 0, $2 = 0, $23 = 0, $24 = 0, label = 0;
 $1 = $0 + 20 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (($2 + -205 | 0) >>> 0 < 2) if (!(HEAP32[$0 + 64 >> 2] | 0)) {
  if ((HEAP32[$0 + 140 >> 2] | 0) >>> 0 < (HEAP32[$0 + 116 >> 2] | 0) >>> 0) {
   $11 = HEAP32[$0 >> 2] | 0;
   HEAP32[$11 + 20 >> 2] = 67;
   FUNCTION_TABLE_vi[HEAP32[$11 >> 2] & 255]($0);
  }
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 420 >> 2] | 0) + 4 >> 2] & 255]($0);
  HEAP32[$1 >> 2] = 210;
 } else label = 6; else label = 6;
 L7 : do if ((label | 0) == 6) switch ($2 | 0) {
 case 210:
  {
   break L7;
   break;
  }
 case 207:
  {
   HEAP32[$1 >> 2] = 210;
   break L7;
   break;
  }
 default:
  {
   $18 = HEAP32[$0 >> 2] | 0;
   HEAP32[$18 + 20 >> 2] = 20;
   HEAP32[$18 + 24 >> 2] = $2;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   break L7;
  }
 } while (0);
 $23 = $0 + 436 | 0;
 while (1) {
  $24 = HEAP32[$23 >> 2] | 0;
  if (HEAP32[$24 + 20 >> 2] | 0) {
   label = 12;
   break;
  }
  if (!(FUNCTION_TABLE_ii[HEAP32[$24 >> 2] & 127]($0) | 0)) {
   $$0 = 0;
   break;
  }
 }
 if ((label | 0) == 12) {
  FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 24 >> 2] | 0) + 24 >> 2] & 255]($0);
  _jpeg_abort($0);
  $$0 = 1;
 }
 return $$0 | 0;
}

function _do_barray_io($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0 = 0, $$055 = 0, $$56 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $22 = 0, $24 = 0, $26 = 0, $28 = 0, $31 = 0, $5 = 0, $6 = 0, $9 = 0;
 $5 = HEAP32[$1 + 8 >> 2] << 7;
 $6 = $1 + 24 | 0;
 $9 = $1 + 20 | 0;
 $10 = $1 + 16 | 0;
 $11 = $1 + 28 | 0;
 $12 = $1 + 4 | 0;
 $13 = ($2 | 0) == 0;
 $14 = $1 + 48 | 0;
 $15 = $1 + 52 | 0;
 $$0 = 0;
 $$055 = Math_imul(HEAP32[$6 >> 2] | 0, $5) | 0;
 while (1) {
  $16 = HEAP32[$10 >> 2] | 0;
  if (($16 | 0) <= ($$0 | 0)) break;
  $18 = HEAP32[$9 >> 2] | 0;
  $19 = $16 - $$0 | 0;
  $$ = ($18 | 0) < ($19 | 0) ? $18 : $19;
  $22 = (HEAP32[$6 >> 2] | 0) + $$0 | 0;
  $24 = (HEAP32[$11 >> 2] | 0) - $22 | 0;
  $26 = ($$ | 0) < ($24 | 0) ? $$ : $24;
  $28 = (HEAP32[$12 >> 2] | 0) - $22 | 0;
  $$56 = ($26 | 0) < ($28 | 0) ? $26 : $28;
  if (($$56 | 0) < 1) break;
  $31 = Math_imul($$56, $5) | 0;
  if ($13) FUNCTION_TABLE_viiiii[HEAP32[$14 >> 2] & 31]($0, $14, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0 << 2) >> 2] | 0, $$055, $31); else FUNCTION_TABLE_viiiii[HEAP32[$15 >> 2] & 31]($0, $14, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0 << 2) >> 2] | 0, $$055, $31);
  $$0 = (HEAP32[$9 >> 2] | 0) + $$0 | 0;
  $$055 = $31 + $$055 | 0;
 }
 return;
}

function _sift($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$lcssa = 0, $$02934 = 0, $$03133 = 0, $$035 = 0, $$1 = 0, $$130 = 0, $$132 = 0, $13 = 0, $14 = 0, $21 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 240 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(240);
 $5 = sp;
 HEAP32[$5 >> 2] = $0;
 L1 : do if (($3 | 0) > 1) {
  $7 = 0 - $1 | 0;
  $$02934 = $0;
  $$03133 = $3;
  $$035 = 1;
  $14 = $0;
  while (1) {
   $8 = $$02934 + $7 | 0;
   $9 = $$03133 + -2 | 0;
   $13 = $8 + (0 - (HEAP32[$4 + ($9 << 2) >> 2] | 0)) | 0;
   if ((FUNCTION_TABLE_iii[$2 & 63]($14, $13) | 0) > -1) if ((FUNCTION_TABLE_iii[$2 & 63]($14, $8) | 0) > -1) {
    $$0$lcssa = $$035;
    break L1;
   }
   $21 = $5 + ($$035 << 2) | 0;
   if ((FUNCTION_TABLE_iii[$2 & 63]($13, $8) | 0) > -1) {
    HEAP32[$21 >> 2] = $13;
    $$130 = $13;
    $$132 = $$03133 + -1 | 0;
   } else {
    HEAP32[$21 >> 2] = $8;
    $$130 = $8;
    $$132 = $9;
   }
   $$1 = $$035 + 1 | 0;
   if (($$132 | 0) <= 1) {
    $$0$lcssa = $$1;
    break L1;
   }
   $$02934 = $$130;
   $$03133 = $$132;
   $$035 = $$1;
   $14 = HEAP32[$5 >> 2] | 0;
  }
 } else $$0$lcssa = 1; while (0);
 _cycle($1, $5, $$0$lcssa);
 STACKTOP = sp;
 return;
}

function _do_sarray_io($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$ = 0, $$0 = 0, $$055 = 0, $$56 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $21 = 0, $23 = 0, $25 = 0, $27 = 0, $30 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0;
 $4 = HEAP32[$1 + 8 >> 2] | 0;
 $5 = $1 + 24 | 0;
 $8 = $1 + 20 | 0;
 $9 = $1 + 16 | 0;
 $10 = $1 + 28 | 0;
 $11 = $1 + 4 | 0;
 $12 = ($2 | 0) == 0;
 $13 = $1 + 48 | 0;
 $14 = $1 + 52 | 0;
 $$0 = 0;
 $$055 = Math_imul(HEAP32[$5 >> 2] | 0, $4) | 0;
 while (1) {
  $15 = HEAP32[$9 >> 2] | 0;
  if (($15 | 0) <= ($$0 | 0)) break;
  $17 = HEAP32[$8 >> 2] | 0;
  $18 = $15 - $$0 | 0;
  $$ = ($17 | 0) < ($18 | 0) ? $17 : $18;
  $21 = (HEAP32[$5 >> 2] | 0) + $$0 | 0;
  $23 = (HEAP32[$10 >> 2] | 0) - $21 | 0;
  $25 = ($$ | 0) < ($23 | 0) ? $$ : $23;
  $27 = (HEAP32[$11 >> 2] | 0) - $21 | 0;
  $$56 = ($25 | 0) < ($27 | 0) ? $25 : $27;
  if (($$56 | 0) < 1) break;
  $30 = Math_imul($$56, $4) | 0;
  if ($12) FUNCTION_TABLE_viiiii[HEAP32[$13 >> 2] & 31]($0, $13, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0 << 2) >> 2] | 0, $$055, $30); else FUNCTION_TABLE_viiiii[HEAP32[$14 >> 2] & 31]($0, $13, HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0 << 2) >> 2] | 0, $$055, $30);
  $$0 = (HEAP32[$8 >> 2] | 0) + $$0 | 0;
  $$055 = $30 + $$055 | 0;
 }
 return;
}

function ___stdio_read($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$cast = 0, $11 = 0, $18 = 0, $24 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $vararg_buffer = sp + 16 | 0;
 $3 = sp;
 HEAP32[$3 >> 2] = $1;
 $4 = $3 + 4 | 0;
 $5 = $0 + 48 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 HEAP32[$4 >> 2] = $2 - (($6 | 0) != 0 & 1);
 $11 = $0 + 44 | 0;
 HEAP32[$3 + 8 >> 2] = HEAP32[$11 >> 2];
 HEAP32[$3 + 12 >> 2] = $6;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = $3;
 HEAP32[$vararg_buffer + 8 >> 2] = 2;
 $18 = ___syscall_ret(___syscall145(145, $vararg_buffer | 0) | 0) | 0;
 if (($18 | 0) < 1) {
  HEAP32[$0 >> 2] = HEAP32[$0 >> 2] | $18 & 48 ^ 16;
  $$0 = $18;
 } else {
  $24 = HEAP32[$4 >> 2] | 0;
  if ($18 >>> 0 > $24 >>> 0) {
   $27 = HEAP32[$11 >> 2] | 0;
   $28 = $0 + 4 | 0;
   HEAP32[$28 >> 2] = $27;
   $$cast = $27;
   HEAP32[$0 + 8 >> 2] = $$cast + ($18 - $24);
   if (!(HEAP32[$5 >> 2] | 0)) $$0 = $2; else {
    HEAP32[$28 >> 2] = $$cast + 1;
    HEAP8[$1 + ($2 + -1) >> 0] = HEAP8[$$cast >> 0] | 0;
    $$0 = $2;
   }
  } else $$0 = $18;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _arSetPixelFormat($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$016 = 0, $10 = 0, $11 = 0, $3 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 L1 : do if (!$0) $$016 = -1; else {
  $3 = $0 + 4 | 0;
  if ((HEAP32[$3 >> 2] | 0) == ($1 | 0)) $$016 = 0; else {
   if ($1 >>> 0 >= 15) {
    HEAP32[$vararg_buffer >> 2] = $1;
    _arLog(0, 3, 17721, $vararg_buffer);
    $$016 = -1;
    break;
   }
   HEAP32[$3 >> 2] = $1;
   $8 = _arUtilGetPixelSize($1) | 0;
   HEAP32[$0 + 8 >> 2] = $8;
   $10 = $0 + 24 | 0;
   $11 = HEAP32[$10 >> 2] | 0;
   if (!(28704 >>> ($1 & 32767) & 1)) switch ($11 | 0) {
   case 1:
    {
     HEAP32[$10 >> 2] = 4;
     $$016 = 0;
     break L1;
     break;
    }
   case 4:
    {
     HEAP32[$10 >> 2] = 3;
     $$016 = 0;
     break L1;
     break;
    }
   default:
    {
     $$016 = 0;
     break L1;
    }
   } else switch ($11 | 0) {
   case 0:
    {
     HEAP32[$10 >> 2] = 1;
     $$016 = 0;
     break L1;
     break;
    }
   case 3:
    {
     HEAP32[$10 >> 2] = 4;
     $$016 = 0;
     break L1;
     break;
    }
   default:
    {
     $$016 = 0;
     break L1;
    }
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$016 | 0;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $12 = 0, $16 = 0, $17 = 0, $2 = 0, $20 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if (((HEAP32[$3 >> 2] | 0) - $6 | 0) >>> 0 < $1 >>> 0) {
  $11 = $6 - (HEAP32[$0 >> 2] | 0) + $1 | 0;
  $12 = __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($0) | 0;
  if ($12 >>> 0 < $11 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $16 = HEAP32[$0 >> 2] | 0;
   $17 = (HEAP32[$3 >> 2] | 0) - $16 | 0;
   $20 = $17 << 1;
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EmmS3_($2, $17 >>> 0 < $12 >>> 1 >>> 0 ? ($20 >>> 0 < $11 >>> 0 ? $11 : $20) : $12, (HEAP32[$5 >> 2] | 0) - $16 | 0, $0 + 8 | 0);
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE($0, $2);
   __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function _fmt_u($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $12 = 0, $14 = 0, $30 = 0, $8 = 0, $9 = 0, $8$looptemp = 0, $9$looptemp = 0, $$012$looptemp = 0;
 if ($1 >>> 0 > 0 | ($1 | 0) == 0 & $0 >>> 0 > 4294967295) {
  $$0914 = $2;
  $8 = $0;
  $9 = $1;
  do {
   $8$looptemp = $8;
   $8 = ___udivdi3($8 | 0, $9 | 0, 10, 0) | 0;
   $9$looptemp = $9;
   $9 = getTempRet0() | 0;
   $12 = ___muldi3($8 | 0, $9 | 0, 10, 0) | 0;
   $14 = _i64Subtract($8$looptemp | 0, $9$looptemp | 0, $12 | 0, getTempRet0() | 0) | 0;
   getTempRet0() | 0;
   $$0914 = $$0914 + -1 | 0;
   HEAP8[$$0914 >> 0] = $14 & 255 | 48;
  } while ($9$looptemp >>> 0 > 9 | ($9$looptemp | 0) == 9 & $8$looptemp >>> 0 > 4294967295);
  $$010$lcssa$off0 = $8;
  $$09$lcssa = $$0914;
 } else {
  $$010$lcssa$off0 = $0;
  $$09$lcssa = $2;
 }
 if (!$$010$lcssa$off0) $$1$lcssa = $$09$lcssa; else {
  $$012 = $$010$lcssa$off0;
  $$111 = $$09$lcssa;
  while (1) {
   $$012$looptemp = $$012;
   $$012 = ($$012 >>> 0) / 10 | 0;
   $30 = $$111 + -1 | 0;
   HEAP8[$30 >> 0] = $$012$looptemp - ($$012 * 10 | 0) | 48;
   if ($$012$looptemp >>> 0 < 10) {
    $$1$lcssa = $30;
    break;
   } else $$111 = $30;
  }
 }
 return $$1$lcssa | 0;
}

function _arSetLabelingThreshMode($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$018 = 0, $13 = 0, $3 = 0, $6 = 0, $7 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 if (!$0) $$018 = -1; else {
  $3 = $0 + 7062388 | 0;
  if ((HEAP32[$3 >> 2] | 0) == ($1 | 0)) $$018 = 0; else {
   $6 = $0 + 7062408 | 0;
   $7 = HEAP32[$6 >> 2] | 0;
   if ($7 | 0) {
    _arImageProcFinal($7);
    HEAP32[$6 >> 2] = 0;
   }
   switch ($1 | 0) {
   case 3:
   case 2:
   case 1:
    {
     $13 = _arImageProcInit(HEAP32[$0 + 36 >> 2] | 0, HEAP32[$0 + 40 >> 2] | 0) | 0;
     HEAP32[$6 >> 2] = $13;
     $$0 = $1;
     break;
    }
   case 4:
    {
     HEAP32[$0 + 7062404 >> 2] = 1;
     HEAP32[$0 + 7062400 >> 2] = 1;
     $$0 = 4;
     break;
    }
   case 0:
    {
     $$0 = $1;
     break;
    }
   default:
    {
     _arLog(0, 3, 17552, $vararg_buffer);
     $$0 = 0;
    }
   }
   HEAP32[$3 >> 2] = $$0;
   if ((HEAP32[$0 >> 2] | 0) == 1) {
    HEAP32[$vararg_buffer1 >> 2] = HEAP32[16 + ($$0 << 2) >> 2];
    _arLog(0, 3, 17626, $vararg_buffer1);
    $$018 = 0;
   } else $$018 = 0;
  }
 }
 STACKTOP = sp;
 return $$018 | 0;
}

function __ZN6vision27OrthogonalizePivot8x9Basis5IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0.0, $11 = 0.0, $13 = 0.0, $15 = 0, $16 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = $0 + 180 | 0;
 $4 = $0 + 144 | 0;
 $5 = $1 + 180 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($3, $4, $5);
 $6 = $0 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($6, $4, $1 + 216 | 0);
 $8 = $0 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($8, $4, $1 + 252 | 0);
 $10 = +__ZN6vision11SumSquares9IfEET_PKS1_($3);
 HEAPF32[$2 >> 2] = $10;
 $11 = +__ZN6vision11SumSquares9IfEET_PKS1_($6);
 HEAPF32[$2 + 4 >> 2] = $11;
 $13 = +__ZN6vision11SumSquares9IfEET_PKS1_($8);
 HEAPF32[$2 + 8 >> 2] = $13;
 $15 = __ZN6vision9MaxIndex3IfEEiPKT_($2) | 0;
 $16 = $2 + ($15 << 2) | 0;
 if (+HEAPF32[$16 >> 2] == 0.0) $$0 = 0; else {
  $19 = $15 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_($3, $3 + ($19 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_($5, $5 + ($19 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($3, $3, 1.0 / +Math_sqrt(+(+HEAPF32[$16 >> 2])));
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _arGetTransMatRobust($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $6 = sp + 20 | 0;
 $7 = sp;
 $9 = _malloc($4 << 4) | 0;
 HEAP32[$6 >> 2] = $9;
 if (!$9) {
  _arLog(0, 3, 20454, sp + 8 | 0);
  _exit(1);
 }
 $12 = _malloc($4 * 24 | 0) | 0;
 $13 = $6 + 4 | 0;
 HEAP32[$13 >> 2] = $12;
 if (!$12) {
  _arLog(0, 3, 20454, sp + 16 | 0);
  _exit(1);
 }
 $$0 = 0;
 while (1) {
  if (($$0 | 0) >= ($4 | 0)) break;
  HEAPF64[$9 + ($$0 << 4) >> 3] = +HEAPF64[$2 + ($$0 << 4) >> 3];
  HEAPF64[$9 + ($$0 << 4) + 8 >> 3] = +HEAPF64[$2 + ($$0 << 4) + 8 >> 3];
  HEAPF64[$12 + ($$0 * 24 | 0) >> 3] = +HEAPF64[$3 + ($$0 * 24 | 0) >> 3];
  HEAPF64[$12 + ($$0 * 24 | 0) + 8 >> 3] = +HEAPF64[$3 + ($$0 * 24 | 0) + 8 >> 3];
  HEAPF64[$12 + ($$0 * 24 | 0) + 16 >> 3] = +HEAPF64[$3 + ($$0 * 24 | 0) + 16 >> 3];
  $$0 = $$0 + 1 | 0;
 }
 HEAP32[$6 + 8 >> 2] = $4;
 if ((_icpPointRobust(HEAP32[$0 >> 2] | 0, $6, $1, $5, $7) | 0) < 0) HEAPF64[$7 >> 3] = 1.0e8;
 _free(HEAP32[$6 >> 2] | 0);
 _free(HEAP32[$13 >> 2] | 0);
 STACKTOP = sp;
 return +(+HEAPF64[$7 >> 3]);
}

function _fill_inverse_cmap($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$054 = 0, $$056 = 0, $$057 = 0, $$1 = 0, $$2 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $4 = 0, $5 = 0, $9 = 0, $lftr$limit = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 384 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(384);
 $4 = sp + 128 | 0;
 $5 = sp;
 $9 = HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 24 >> 2] | 0;
 $14 = $1 >>> 2 << 5 | 4;
 $16 = $2 >>> 3 << 5 | 2;
 $18 = $3 >>> 2 << 5 | 4;
 _find_best_colors($0, $14, $16, $18, _find_nearby_colors($0, $14, $16, $18, $4) | 0, $4, $5);
 $20 = $1 & -4;
 $21 = $2 & -8;
 $22 = $3 & -4;
 $$054 = $5;
 $$057 = 0;
 while (1) {
  if (($$057 | 0) == 4) break;
  $24 = $9 + ($$057 + $20 << 2) | 0;
  $$056 = 0;
  $$1 = $$054;
  while (1) {
   if (($$056 | 0) == 8) break;
   $lftr$limit = $$1 + 4 | 0;
   $$0 = (HEAP32[$24 >> 2] | 0) + ($$056 + $21 << 6) + ($22 << 1) | 0;
   $$2 = $$1;
   while (1) {
    if (($$2 | 0) == ($lftr$limit | 0)) break;
    HEAP16[$$0 >> 1] = (HEAPU8[$$2 >> 0] | 0) + 1;
    $$0 = $$0 + 2 | 0;
    $$2 = $$2 + 1 | 0;
   }
   $$056 = $$056 + 1 | 0;
   $$1 = $lftr$limit;
  }
  $$054 = $$054 + 32 | 0;
  $$057 = $$057 + 1 | 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision24OrthogonalizeIdentity8x9IfEET_PS1_PKS1_i($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0.0, $44 = 0.0, $46 = 0.0, $6 = 0;
 __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($0, $1, -+HEAPF32[$1 + ($2 << 2) >> 2]);
 $6 = $0 + ($2 << 2) | 0;
 HEAPF32[$6 >> 2] = +HEAPF32[$6 >> 2] + 1.0;
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_($0, $1 + 36 | 0, -+HEAPF32[$1 + ($2 + 9 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_($0, $1 + 72 | 0, -+HEAPF32[$1 + ($2 + 18 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_($0, $1 + 108 | 0, -+HEAPF32[$1 + ($2 + 27 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_($0, $1 + 144 | 0, -+HEAPF32[$1 + ($2 + 36 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_($0, $1 + 180 | 0, -+HEAPF32[$1 + ($2 + 45 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_($0, $1 + 216 | 0, -+HEAPF32[$1 + ($2 + 54 << 2) >> 2]);
 __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_($0, $1 + 252 | 0, -+HEAPF32[$1 + ($2 + 63 << 2) >> 2]);
 $44 = +__ZN6vision11SumSquares9IfEET_PKS1_($0);
 $46 = +Math_sqrt(+$44);
 if ($44 == 0.0) $$0 = 0.0; else {
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($0, $0, 1.0 / $46);
  $$0 = $46;
 }
 return +$$0;
}

function _quantize_ord_dither($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$060 = 0, $$061 = 0, $$062 = 0, $$063 = 0, $$064 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $16 = 0, $23 = 0, $25 = 0, $5 = 0, $7 = 0, $9 = 0;
 $5 = HEAP32[$0 + 460 >> 2] | 0;
 $7 = HEAP32[$0 + 120 >> 2] | 0;
 $9 = HEAP32[$0 + 112 >> 2] | 0;
 $10 = $5 + 48 | 0;
 $11 = $5 + 24 | 0;
 $$061 = 0;
 while (1) {
  if (($$061 | 0) >= ($3 | 0)) break;
  $13 = $2 + ($$061 << 2) | 0;
  _jzero_far(HEAP32[$13 >> 2] | 0, $9);
  $15 = HEAP32[$10 >> 2] | 0;
  $16 = $1 + ($$061 << 2) | 0;
  $$062 = 0;
  while (1) {
   if (($$062 | 0) >= ($7 | 0)) break;
   $23 = HEAP32[(HEAP32[$11 >> 2] | 0) + ($$062 << 2) >> 2] | 0;
   $25 = HEAP32[$5 + 52 + ($$062 << 2) >> 2] | 0;
   $$0 = (HEAP32[$16 >> 2] | 0) + $$062 | 0;
   $$060 = $9;
   $$063 = HEAP32[$13 >> 2] | 0;
   $$064 = 0;
   while (1) {
    if (!$$060) break;
    HEAP8[$$063 >> 0] = (HEAPU8[$$063 >> 0] | 0) + (HEAPU8[$23 + ((HEAP32[$25 + ($15 << 6) + ($$064 << 2) >> 2] | 0) + (HEAPU8[$$0 >> 0] | 0)) >> 0] | 0);
    $$0 = $$0 + $7 | 0;
    $$060 = $$060 + -1 | 0;
    $$063 = $$063 + 1 | 0;
    $$064 = $$064 + 1 & 15;
   }
   $$062 = $$062 + 1 | 0;
  }
  HEAP32[$10 >> 2] = $15 + 1 & 15;
  $$061 = $$061 + 1 | 0;
 }
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9push_backEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$pn = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = sp + 1 | 0;
 HEAP8[$2 >> 0] = $1;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $$018 = HEAP32[$0 + 4 >> 2] | 0;
  $$019 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $$018 = $5 & 255;
  $$019 = 10;
 }
 if (($$018 | 0) == ($$019 | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm($0, $$019, 1, $$019, $$019, 0);
  if ((HEAP8[$4 >> 0] | 0) < 0) label = 8; else label = 7;
 } else if ($6) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$4 >> 0] = $$018 + 1;
  $$pn = $0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 + 4 >> 2] = $$018 + 1;
  $$pn = $19;
 }
 $$0 = $$pn + $$018 | 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0, $2);
 HEAP8[$3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + 1 | 0, $3);
 STACKTOP = sp;
 return;
}

function _arLabeling($0, $1, $2, $3, $4, $5, $6, $7, $8) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 var $$0 = 0, $10 = 0, $11 = 0;
 $10 = ($4 | 0) == 1;
 $11 = ($8 | 0) != 0;
 do if (!$3) if ($10) {
  if ($11) {
   $$0 = _arLabelingSubDBZ($0, $1, $2, $8, $7) | 0;
   break;
  }
  if (!$6) {
   $$0 = _arLabelingSubDBRC($0, $1, $2, $5, $7) | 0;
   break;
  } else {
   $$0 = _arLabelingSubDBIC($0, $1, $2, $5, $7) | 0;
   break;
  }
 } else {
  if ($11) {
   $$0 = _arLabelingSubDWZ($0, $1, $2, $8, $7) | 0;
   break;
  }
  if (!$6) {
   $$0 = _arLabelingSubDWRC($0, $1, $2, $5, $7) | 0;
   break;
  } else {
   $$0 = _arLabelingSubDWIC($0, $1, $2, $5, $7) | 0;
   break;
  }
 } else if ($10) {
  if ($11) {
   $$0 = _arLabelingSubEBZ($0, $1, $2, $8, $7) | 0;
   break;
  }
  if (!$6) {
   $$0 = _arLabelingSubEBRC($0, $1, $2, $5, $7) | 0;
   break;
  } else {
   $$0 = _arLabelingSubEBIC($0, $1, $2, $5, $7) | 0;
   break;
  }
 } else {
  if ($11) {
   $$0 = _arLabelingSubEWZ($0, $1, $2, $8, $7) | 0;
   break;
  }
  if (!$6) {
   $$0 = _arLabelingSubEWRC($0, $1, $2, $5, $7) | 0;
   break;
  } else {
   $$0 = _arLabelingSubEWIC($0, $1, $2, $5, $7) | 0;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 2) + 1 | 0;
 $9 = __ZNKSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 1;
  __ZNSt3__214__split_bufferIPKN6vision4NodeILi96EEERNS_9allocatorIS5_EEEC2EmmS8_($2, $15 >> 2 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 2, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  HEAP32[HEAP32[$24 >> 2] >> 2] = HEAP32[$1 >> 2];
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 4;
  __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS7_EE($0, $2);
  __ZNSt3__214__split_bufferIPKN6vision4NodeILi96EEERNS_9allocatorIS5_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE($this, $__p) {
 $this = $this | 0;
 $__p = $__p | 0;
 var $0 = 0, $2 = 0, $3 = 0, $agg$tmp = 0, $agg$tmp$byval_copy = 0, $agg$tmp$ensured = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $agg$tmp$byval_copy = sp + 16 | 0;
 $agg$tmp$ensured = sp + 4 | 0;
 $agg$tmp = sp;
 $0 = HEAP32[$__p >> 2] | 0;
 $2 = HEAP32[$0 >> 2] | 0;
 HEAP32[$agg$tmp >> 2] = $0;
 HEAP32[$agg$tmp$byval_copy >> 2] = HEAP32[$agg$tmp >> 2];
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE($agg$tmp$ensured, $this, $agg$tmp$byval_copy);
 $3 = HEAP32[$agg$tmp$ensured >> 2] | 0;
 HEAP32[$agg$tmp$ensured >> 2] = 0;
 if ($3 | 0) {
  if (HEAP8[$agg$tmp$ensured + 8 >> 0] | 0) __ZNSt3__24pairIKi12arControllerED2Ev($3 + 8 | 0);
  __ZdlPv($3);
 }
 STACKTOP = sp;
 return $2 | 0;
}

function _arCreateHandle($0) {
 $0 = $0 | 0;
 var $1 = 0, $16 = 0, $19 = 0, $27 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = _malloc(7062432) | 0;
 if (!$1) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 }
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4834148 >> 2] = 0;
 HEAP32[$1 + 7062408 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = -1;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 1;
 HEAP32[$1 + 16 >> 2] = 100;
 HEAP32[$1 + 20 >> 2] = 0;
 HEAP32[$1 + 24 >> 2] = 0;
 HEAP32[$1 + 28 >> 2] = 2;
 HEAPF64[$1 + 7062416 >> 3] = .5;
 HEAP32[$1 + 7062424 >> 2] = 3;
 HEAP32[$1 + 32 >> 2] = $0;
 $16 = HEAP32[$0 >> 2] | 0;
 HEAP32[$1 + 36 >> 2] = $16;
 $19 = HEAP32[$0 + 4 >> 2] | 0;
 HEAP32[$1 + 40 >> 2] = $19;
 HEAP32[$1 + 44 >> 2] = 0;
 HEAP32[$1 + 15408 >> 2] = 0;
 HEAP32[$1 + 4834152 >> 2] = 0;
 HEAP32[$1 + 4818296 >> 2] = 0;
 $27 = _malloc(Math_imul($16 << 1, $19) | 0) | 0;
 HEAP32[$1 + 4834144 >> 2] = $27;
 if (!$27) {
  _arLog(0, 3, 20454, sp + 8 | 0);
  _exit(1);
 } else {
  HEAP32[$1 + 7062384 >> 2] = 0;
  _arSetDebugMode($1, 0) | 0;
  HEAP32[$1 + 7062388 >> 2] = -1;
  _arSetLabelingThreshMode($1, 0) | 0;
  _arSetLabelingThreshModeAutoInterval($1, 7) | 0;
  STACKTOP = sp;
  return $1 | 0;
 }
 return 0;
}

function ___newlocale($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$03338 = 0, $$03439 = 0, $$036 = 0, $$13537 = 0, $$pre41 = 0, $10 = 0, $12 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp;
 L1 : do if (!(___loc_is_allocated($2) | 0)) {
  $12 = ($2 | 0) != 0;
  $$03338 = 0;
  $$13537 = 0;
  do {
   $$pre41 = 1 << $$13537 & $0;
   if ($12 & ($$pre41 | 0) == 0) $$0 = HEAP32[$2 + ($$13537 << 2) >> 2] | 0; else $$0 = ___get_locale($$13537, ($$pre41 | 0) == 0 ? 58334 : $1) | 0;
   $$03338 = $$03338 + (($$0 | 0) != 0 & 1) | 0;
   HEAP32[$3 + ($$13537 << 2) >> 2] = $$0;
   $$13537 = $$13537 + 1 | 0;
  } while (($$13537 | 0) != 6);
  switch ($$03338 & 2147483647 | 0) {
  case 0:
   {
    $$036 = 56256;
    break L1;
    break;
   }
  case 1:
   {
    if ((HEAP32[$3 >> 2] | 0) == 13760) {
     $$036 = 13788;
     break L1;
    }
    break;
   }
  default:
   {}
  }
  $$036 = $2;
 } else {
  $$03439 = 0;
  do {
   if (1 << $$03439 & $0 | 0) {
    $10 = ___get_locale($$03439, $1) | 0;
    HEAP32[$2 + ($$03439 << 2) >> 2] = $10;
   }
   $$03439 = $$03439 + 1 | 0;
  } while (($$03439 | 0) != 6);
  $$036 = $2;
 } while (0);
 STACKTOP = sp;
 return $$036 | 0;
}

function __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE21__push_back_slow_pathIRKS4_EEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 2) + 1 | 0;
 $9 = __ZNKSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 1;
  __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEEC2EmmS7_($2, $15 >> 2 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 2, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  HEAP32[HEAP32[$24 >> 2] >> 2] = HEAP32[$1 >> 2];
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 4;
  __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS4_RS6_EE($0, $2);
  __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function __ZNSt3__26vectorItNS_9allocatorItEEE8__appendEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 8 | 0;
 $5 = $0 + 4 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 do if ((HEAP32[$3 >> 2] | 0) - $6 >> 1 >>> 0 < $1 >>> 0) {
  $13 = ($6 - (HEAP32[$0 >> 2] | 0) >> 1) + $1 | 0;
  $14 = __ZNKSt3__26vectorItNS_9allocatorItEEE8max_sizeEv($0) | 0;
  if ($14 >>> 0 < $13 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
   $18 = HEAP32[$0 >> 2] | 0;
   $19 = (HEAP32[$3 >> 2] | 0) - $18 | 0;
   __ZNSt3__214__split_bufferItRNS_9allocatorItEEEC2EmmS3_($2, $19 >> 1 >>> 0 < $14 >>> 1 >>> 0 ? ($19 >>> 0 < $13 >>> 0 ? $13 : $19) : $14, (HEAP32[$5 >> 2] | 0) - $18 >> 1, $0 + 8 | 0);
   __ZNSt3__214__split_bufferItRNS_9allocatorItEEE18__construct_at_endEm($2, $1);
   __ZNSt3__26vectorItNS_9allocatorItEEE26__swap_out_circular_bufferERNS_14__split_bufferItRS2_EE($0, $2);
   __ZNSt3__214__split_bufferItRNS_9allocatorItEEED2Ev($2);
   break;
  }
 } else __ZNSt3__26vectorItNS_9allocatorItEEE18__construct_at_endEm($0, $1); while (0);
 STACKTOP = sp;
 return;
}

function _set_wraparound_pointers($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$057 = 0, $$058 = 0, $10 = 0, $11 = 0, $12 = 0, $19 = 0, $2 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $29 = 0, $32 = 0, $39 = 0, $4 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 + 424 >> 2] | 0;
 $4 = HEAP32[$0 + 316 >> 2] | 0;
 $8 = HEAP32[$0 + 36 >> 2] | 0;
 $9 = $2 + 56 | 0;
 $10 = $2 + 60 | 0;
 $11 = $4 + 1 | 0;
 $12 = $4 + 2 | 0;
 $$0 = 0;
 $$058 = HEAP32[$0 + 216 >> 2] | 0;
 while (1) {
  if (($$0 | 0) >= ($8 | 0)) break;
  $19 = (Math_imul(HEAP32[$$058 + 36 >> 2] | 0, HEAP32[$$058 + 12 >> 2] | 0) | 0) / ($4 | 0) | 0;
  $22 = HEAP32[(HEAP32[$9 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $25 = HEAP32[(HEAP32[$10 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $26 = Math_imul($19, $11) | 0;
  $27 = Math_imul($19, $12) | 0;
  $$057 = 0;
  while (1) {
   if (($$057 | 0) >= ($19 | 0)) break;
   $29 = $$057 + $26 | 0;
   $32 = $$057 - $19 | 0;
   HEAP32[$22 + ($32 << 2) >> 2] = HEAP32[$22 + ($29 << 2) >> 2];
   HEAP32[$25 + ($32 << 2) >> 2] = HEAP32[$25 + ($29 << 2) >> 2];
   $39 = $$057 + $27 | 0;
   HEAP32[$22 + ($39 << 2) >> 2] = HEAP32[$22 + ($$057 << 2) >> 2];
   HEAP32[$25 + ($39 << 2) >> 2] = HEAP32[$25 + ($$057 << 2) >> 2];
   $$057 = $$057 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$058 = $$058 + 84 | 0;
 }
 return;
}

function _arGetTransMat($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $6 = sp + 20 | 0;
 $7 = sp;
 $9 = _malloc($4 << 4) | 0;
 HEAP32[$6 >> 2] = $9;
 if (!$9) {
  _arLog(0, 3, 20454, sp + 8 | 0);
  _exit(1);
 }
 $12 = _malloc($4 * 24 | 0) | 0;
 $13 = $6 + 4 | 0;
 HEAP32[$13 >> 2] = $12;
 if (!$12) {
  _arLog(0, 3, 20454, sp + 16 | 0);
  _exit(1);
 }
 $$0 = 0;
 while (1) {
  if (($$0 | 0) >= ($4 | 0)) break;
  HEAPF64[$9 + ($$0 << 4) >> 3] = +HEAPF64[$2 + ($$0 << 4) >> 3];
  HEAPF64[$9 + ($$0 << 4) + 8 >> 3] = +HEAPF64[$2 + ($$0 << 4) + 8 >> 3];
  HEAPF64[$12 + ($$0 * 24 | 0) >> 3] = +HEAPF64[$3 + ($$0 * 24 | 0) >> 3];
  HEAPF64[$12 + ($$0 * 24 | 0) + 8 >> 3] = +HEAPF64[$3 + ($$0 * 24 | 0) + 8 >> 3];
  HEAPF64[$12 + ($$0 * 24 | 0) + 16 >> 3] = +HEAPF64[$3 + ($$0 * 24 | 0) + 16 >> 3];
  $$0 = $$0 + 1 | 0;
 }
 HEAP32[$6 + 8 >> 2] = $4;
 if ((_icpPoint(HEAP32[$0 >> 2] | 0, $6, $1, $5, $7) | 0) < 0) HEAPF64[$7 >> 3] = 1.0e8;
 _free(HEAP32[$6 >> 2] | 0);
 _free(HEAP32[$13 >> 2] | 0);
 STACKTOP = sp;
 return +(+HEAPF64[$7 >> 3]);
}

function _tmpfile() {
 var $$012 = 0, $$014 = 0, $0 = 0, $1 = 0, $2 = 0, $6 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $vararg_buffer6 = sp + 48 | 0;
 $vararg_buffer3 = sp + 40 | 0;
 $vararg_buffer = sp + 24 | 0;
 $0 = sp;
 HEAP32[$0 >> 2] = HEAP32[1620];
 HEAP32[$0 + 4 >> 2] = HEAP32[1621];
 HEAP32[$0 + 8 >> 2] = HEAP32[1622];
 HEAP32[$0 + 12 >> 2] = HEAP32[1623];
 HEAP32[$0 + 16 >> 2] = HEAP32[1624];
 $1 = $0 + 13 | 0;
 $2 = $0;
 $$014 = 0;
 while (1) {
  ___randname($1) | 0;
  HEAP32[$vararg_buffer >> 2] = $2;
  HEAP32[$vararg_buffer + 4 >> 2] = 32962;
  HEAP32[$vararg_buffer + 8 >> 2] = 384;
  $6 = ___syscall_ret(___syscall5(5, $vararg_buffer | 0) | 0) | 0;
  $$014 = $$014 + 1 | 0;
  if (($6 | 0) > -1) {
   label = 4;
   break;
  }
  if ($$014 >>> 0 >= 100) {
   $$012 = 0;
   break;
  }
 }
 if ((label | 0) == 4) {
  HEAP32[$vararg_buffer3 >> 2] = $2;
  ___syscall10(10, $vararg_buffer3 | 0) | 0;
  $8 = ___fdopen($6, 46165) | 0;
  if (!$8) {
   HEAP32[$vararg_buffer6 >> 2] = $6;
   ___syscall6(6, $vararg_buffer6 | 0) | 0;
   $$012 = 0;
  } else $$012 = $8;
 }
 STACKTOP = sp;
 return $$012 | 0;
}

function _start_pass_1_quant($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $15 = 0, $3 = 0, $35 = 0, $36 = 0, $42 = 0;
 $3 = HEAP32[$0 + 460 >> 2] | 0;
 HEAP32[$0 + 136 >> 2] = HEAP32[$3 + 16 >> 2];
 HEAP32[$0 + 132 >> 2] = HEAP32[$3 + 20 >> 2];
 L1 : do switch (HEAP32[$0 + 88 >> 2] | 0) {
 case 0:
  {
   $15 = $3 + 4 | 0;
   if ((HEAP32[$0 + 120 >> 2] | 0) == 3) {
    HEAP32[$15 >> 2] = 24;
    break L1;
   } else {
    HEAP32[$15 >> 2] = 25;
    break L1;
   }
   break;
  }
 case 1:
  {
   HEAP32[$3 + 4 >> 2] = (HEAP32[$0 + 120 >> 2] | 0) == 3 ? 27 : 26;
   HEAP32[$3 + 48 >> 2] = 0;
   if (!(HEAP32[$3 + 28 >> 2] | 0)) _create_colorindex($0);
   if (!(HEAP32[$3 + 52 >> 2] | 0)) _create_odither_tables($0);
   break;
  }
 case 2:
  {
   HEAP32[$3 + 4 >> 2] = 28;
   HEAP32[$3 + 84 >> 2] = 0;
   if (!(HEAP32[$3 + 68 >> 2] | 0)) _alloc_fs_workspace($0);
   $35 = (HEAP32[$0 + 112 >> 2] << 1) + 4 | 0;
   $36 = $0 + 120 | 0;
   $$0 = 0;
   while (1) {
    if (($$0 | 0) >= (HEAP32[$36 >> 2] | 0)) break L1;
    _jzero_far(HEAP32[$3 + 68 + ($$0 << 2) >> 2] | 0, $35);
    $$0 = $$0 + 1 | 0;
   }
   break;
  }
 default:
  {
   $42 = HEAP32[$0 >> 2] | 0;
   HEAP32[$42 + 20 >> 2] = 48;
   FUNCTION_TABLE_vi[HEAP32[$42 >> 2] & 255]($0);
  }
 } while (0);
 return;
}

function _icpUpdateMat($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$028 = 0, $$1 = 0, $$129 = 0, $2 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $2 = sp + 192 | 0;
 $3 = sp + 96 | 0;
 $4 = sp;
 _icpGetQ_from_S($2, $1);
 _icpGetMat_from_Q($3, $2);
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 3) break;
  $5 = $0 + ($$0 << 5) | 0;
  $6 = $0 + ($$0 << 5) + 8 | 0;
  $7 = $0 + ($$0 << 5) + 16 | 0;
  $$028 = 0;
  while (1) {
   if (($$028 | 0) == 4) break;
   HEAPF64[$4 + ($$0 << 5) + ($$028 << 3) >> 3] = +HEAPF64[$5 >> 3] * +HEAPF64[$3 + ($$028 << 3) >> 3] + +HEAPF64[$6 >> 3] * +HEAPF64[$3 + 32 + ($$028 << 3) >> 3] + +HEAPF64[$7 >> 3] * +HEAPF64[$3 + 64 + ($$028 << 3) >> 3];
   $$028 = $$028 + 1 | 0;
  }
  $26 = $4 + ($$0 << 5) + 24 | 0;
  HEAPF64[$26 >> 3] = +HEAPF64[$0 + ($$0 << 5) + 24 >> 3] + +HEAPF64[$26 >> 3];
  $$0 = $$0 + 1 | 0;
 }
 $$1 = 0;
 while (1) {
  if (($$1 | 0) == 3) break;
  $$129 = 0;
  while (1) {
   if (($$129 | 0) == 4) break;
   HEAPF64[$0 + ($$1 << 5) + ($$129 << 3) >> 3] = +HEAPF64[$4 + ($$1 << 5) + ($$129 << 3) >> 3];
   $$129 = $$129 + 1 | 0;
  }
  $$1 = $$1 + 1 | 0;
 }
 STACKTOP = sp;
 return 0;
}

function _first_marker($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$042 = 0, $$044 = 0, $$1 = 0, $$143 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $24 = 0, $25 = 0, $28 = 0, $3 = 0, $4 = 0, label = 0;
 $2 = HEAP32[$0 + 24 >> 2] | 0;
 $3 = $2 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 if (!$4) if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) $$044 = 0; else {
  $$0 = HEAP32[$3 >> 2] | 0;
  label = 4;
 } else {
  $$0 = $4;
  label = 4;
 }
 do if ((label | 0) == 4) {
  $$042 = HEAP32[$2 >> 2] | 0;
  $11 = $$0 + -1 | 0;
  $12 = $$042 + 1 | 0;
  $13 = HEAP8[$$042 >> 0] | 0;
  $14 = $13 & 255;
  if (!$11) {
   if (!(FUNCTION_TABLE_ii[HEAP32[$2 + 12 >> 2] & 127]($0) | 0)) {
    $$044 = 0;
    break;
   }
   $$1 = HEAP32[$3 >> 2] | 0;
   $$143 = HEAP32[$2 >> 2] | 0;
  } else {
   $$1 = $11;
   $$143 = $12;
  }
  $24 = HEAP8[$$143 >> 0] | 0;
  $25 = $24 & 255;
  if ($13 << 24 >> 24 != -1 | $24 << 24 >> 24 != -40) {
   $28 = HEAP32[$0 >> 2] | 0;
   HEAP32[$28 + 20 >> 2] = 53;
   HEAP32[$28 + 24 >> 2] = $14;
   HEAP32[(HEAP32[$0 >> 2] | 0) + 28 >> 2] = $25;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
  }
  HEAP32[$0 + 416 >> 2] = $25;
  HEAP32[$2 >> 2] = $$143 + 1;
  HEAP32[$3 >> 2] = $$1 + -1;
  $$044 = 1;
 } while (0);
 return $$044 | 0;
}

function _addMarker($id, $patt_name) {
 $id = $id | 0;
 $patt_name = $patt_name | 0;
 var $call7 = 0, $cond$i$i$i = 0, $id$addr = 0, $patt_id = 0, $retval$1 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $id$addr = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  if ((HEAP8[$patt_name + 11 >> 0] | 0) < 0) $cond$i$i$i = HEAP32[$patt_name >> 2] | 0; else $cond$i$i$i = $patt_name;
  $patt_id = $call7 + 292 | 0;
  if (!(__ZL10loadMarkerPKcPiP8ARHandlePP12ARPattHandle($cond$i$i$i, $patt_id, $call7 + 220 | 0) | 0)) {
   _arLog(0, 3, 44299, $vararg_buffer);
   $retval$1 = -1;
   break;
  } else {
   $retval$1 = HEAP32[$patt_id >> 2] | 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
 end = ptr + num | 0;
 value = value & 255;
 if ((num | 0) >= 67) {
  while (ptr & 3) {
   HEAP8[ptr >> 0] = value;
   ptr = ptr + 1 | 0;
  }
  aligned_end = end & -4 | 0;
  value4 = value | value << 8 | value << 16 | value << 24;
  block_aligned_end = aligned_end - 64 | 0;
  while ((ptr | 0) <= (block_aligned_end | 0)) {
   HEAP32[ptr >> 2] = value4;
   HEAP32[ptr + 4 >> 2] = value4;
   HEAP32[ptr + 8 >> 2] = value4;
   HEAP32[ptr + 12 >> 2] = value4;
   HEAP32[ptr + 16 >> 2] = value4;
   HEAP32[ptr + 20 >> 2] = value4;
   HEAP32[ptr + 24 >> 2] = value4;
   HEAP32[ptr + 28 >> 2] = value4;
   HEAP32[ptr + 32 >> 2] = value4;
   HEAP32[ptr + 36 >> 2] = value4;
   HEAP32[ptr + 40 >> 2] = value4;
   HEAP32[ptr + 44 >> 2] = value4;
   HEAP32[ptr + 48 >> 2] = value4;
   HEAP32[ptr + 52 >> 2] = value4;
   HEAP32[ptr + 56 >> 2] = value4;
   HEAP32[ptr + 60 >> 2] = value4;
   ptr = ptr + 64 | 0;
  }
  while ((ptr | 0) < (aligned_end | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (end | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return end - num | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9push_backEw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$pn = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = sp + 4 | 0;
 HEAP32[$2 >> 2] = $1;
 $4 = $0 + 8 | 0;
 $5 = $4 + 3 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) {
  $$018 = HEAP32[$0 + 4 >> 2] | 0;
  $$019 = (HEAP32[$4 >> 2] & 2147483647) + -1 | 0;
 } else {
  $$018 = $6 & 255;
  $$019 = 1;
 }
 if (($$018 | 0) == ($$019 | 0)) {
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm($0, $$019, 1, $$019, $$019, 0, 0);
  if ((HEAP8[$5 >> 0] | 0) < 0) label = 8; else label = 7;
 } else if ($7) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$5 >> 0] = $$018 + 1;
  $$pn = $0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 + 4 >> 2] = $$018 + 1;
  $$pn = $19;
 }
 $$0 = $$pn + ($$018 << 2) | 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$0, $2);
 HEAP32[$3 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$0 + 4 | 0, $3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE14__erase_uniqueIiEEmRKT_($this, $__k) {
 $this = $this | 0;
 $__k = $__k | 0;
 var $agg$tmp = 0, $agg$tmp$byval_copy = 0, $call = 0, $retval$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $agg$tmp$byval_copy = sp + 4 | 0;
 $agg$tmp = sp;
 $call = __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_($this, $__k) | 0;
 if (!$call) $retval$0 = 0; else {
  HEAP32[$agg$tmp >> 2] = $call;
  HEAP32[$agg$tmp$byval_copy >> 2] = HEAP32[$agg$tmp >> 2];
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE5eraseENS_21__hash_const_iteratorIPNS_11__hash_nodeIS3_PvEEEE($this, $agg$tmp$byval_copy) | 0;
  $retval$0 = 1;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function _icpGetMat_from_Q($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $16 = 0, $3 = 0.0, $4 = 0.0, $40 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $72 = 0.0;
 $3 = +HEAPF64[$1 + 24 >> 3];
 $4 = +Math_cos(+$3);
 $5 = 1.0 - $4;
 $6 = +Math_sin(+$3);
 $7 = +HEAPF64[$1 >> 3];
 HEAPF64[$0 >> 3] = $4 + $7 * $7 * $5;
 $12 = $1 + 8 | 0;
 $16 = $1 + 16 | 0;
 HEAPF64[$0 + 8 >> 3] = $5 * (+HEAPF64[$1 >> 3] * +HEAPF64[$12 >> 3]) - $6 * +HEAPF64[$16 >> 3];
 HEAPF64[$0 + 16 >> 3] = $5 * (+HEAPF64[$1 >> 3] * +HEAPF64[$16 >> 3]) + $6 * +HEAPF64[$12 >> 3];
 HEAPF64[$0 + 24 >> 3] = +HEAPF64[$1 + 32 >> 3];
 HEAPF64[$0 + 32 >> 3] = $5 * (+HEAPF64[$12 >> 3] * +HEAPF64[$1 >> 3]) + $6 * +HEAPF64[$16 >> 3];
 $40 = +HEAPF64[$12 >> 3];
 HEAPF64[$0 + 40 >> 3] = $4 + $5 * ($40 * $40);
 HEAPF64[$0 + 48 >> 3] = $5 * (+HEAPF64[$12 >> 3] * +HEAPF64[$16 >> 3]) - $6 * +HEAPF64[$1 >> 3];
 HEAPF64[$0 + 56 >> 3] = +HEAPF64[$1 + 40 >> 3];
 HEAPF64[$0 + 64 >> 3] = $5 * (+HEAPF64[$16 >> 3] * +HEAPF64[$1 >> 3]) - $6 * +HEAPF64[$12 >> 3];
 HEAPF64[$0 + 72 >> 3] = $5 * (+HEAPF64[$16 >> 3] * +HEAPF64[$12 >> 3]) + $6 * +HEAPF64[$1 >> 3];
 $72 = +HEAPF64[$16 >> 3];
 HEAPF64[$0 + 80 >> 3] = $4 + $5 * ($72 * $72);
 HEAPF64[$0 + 88 >> 3] = +HEAPF64[$1 + 48 >> 3];
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$pn = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = sp + 1 | 0;
 HEAP8[$2 >> 0] = $1;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $$018 = HEAP32[$0 + 4 >> 2] | 0;
  $$019 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $$018 = $5 & 255;
  $$019 = 10;
 }
 if (($$018 | 0) == ($$019 | 0)) {
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm($0, $$019, 1, $$019, $$019, 0, 0);
  if ((HEAP8[$4 >> 0] | 0) < 0) label = 8; else label = 7;
 } else if ($6) label = 8; else label = 7;
 if ((label | 0) == 7) {
  HEAP8[$4 >> 0] = $$018 + 1;
  $$pn = $0;
 } else if ((label | 0) == 8) {
  $19 = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 + 4 >> 2] = $$018 + 1;
  $$pn = $19;
 }
 $$0 = $$pn + $$018 | 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0, $2);
 HEAP8[$3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + 1 | 0, $3);
 STACKTOP = sp;
 return;
}

function _int_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$050 = 0, $$051 = 0, $$052 = 0, $$053 = 0, $$1 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $24 = 0, $26 = 0, $28 = 0, $5 = 0, $6 = 0, $8 = 0;
 $5 = HEAP32[$0 + 452 >> 2] | 0;
 $6 = HEAP32[$3 >> 2] | 0;
 $8 = HEAP32[$1 + 4 >> 2] | 0;
 $11 = HEAPU8[$5 + 140 + $8 >> 0] | 0;
 $13 = HEAP8[$5 + 150 + $8 >> 0] | 0;
 $14 = $13 & 255;
 $15 = $0 + 312 | 0;
 $16 = $0 + 112 | 0;
 $17 = ($13 & 255) > 1;
 $18 = $14 + -1 | 0;
 $$0 = 0;
 $$050 = 0;
 while (1) {
  if (($$0 | 0) >= (HEAP32[$15 >> 2] | 0)) break;
  $24 = HEAP32[$6 + ($$0 << 2) >> 2] | 0;
  $26 = $24 + (HEAP32[$16 >> 2] | 0) | 0;
  $$051 = HEAP32[$2 + ($$050 << 2) >> 2] | 0;
  $$052 = $24;
  while (1) {
   if ($$052 >>> 0 >= $26 >>> 0) break;
   $28 = HEAP8[$$051 >> 0] | 0;
   $$053 = $11;
   $$1 = $$052;
   while (1) {
    if (($$053 | 0) <= 0) break;
    HEAP8[$$1 >> 0] = $28;
    $$053 = $$053 + -1 | 0;
    $$1 = $$1 + 1 | 0;
   }
   $$051 = $$051 + 1 | 0;
   $$052 = $$052 + $11 | 0;
  }
  if ($17) _jcopy_sample_rows($6, $$0, $6, $$0 + 1 | 0, $18, HEAP32[$16 >> 2] | 0);
  $$0 = $$0 + $14 | 0;
  $$050 = $$050 + 1 | 0;
 }
 return;
}

function _getTransMatSquareCont($id, $markerIndex, $markerWidth) {
 $id = $id | 0;
 $markerIndex = $markerIndex | 0;
 $markerWidth = $markerWidth | 0;
 var $1 = 0, $call7 = 0, $id$addr = 0, $retval$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = HEAP32[3413] | 0; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  $1 = HEAP32[$call7 + 216 >> 2] | 0;
  if ((HEAP32[$1 + 44 >> 2] | 0) > ($markerIndex | 0)) {
   +_arGetTransMatSquareCont(HEAP32[$call7 + 228 >> 2] | 0, ($markerIndex | 0) < 0 ? 55208 : $1 + 48 + ($markerIndex << 8) | 0, 51520, +($markerWidth | 0), 51520);
   $retval$1 = 0;
   break;
  } else {
   $retval$1 = HEAP32[3415] | 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function _loadCamera($cparam_name) {
 $cparam_name = $cparam_name | 0;
 var $4 = 0, $__size_$i$i$i$i = 0, $cond$i$i$i = 0, $cond$i$i$i6 = 0, $param = 0, $retval$0 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 $vararg_buffer1 = sp + 192 | 0;
 $vararg_buffer = sp + 184 | 0;
 $param = sp;
 $__size_$i$i$i$i = $cparam_name + 11 | 0;
 if ((HEAP8[$__size_$i$i$i$i >> 0] | 0) < 0) $cond$i$i$i = HEAP32[$cparam_name >> 2] | 0; else $cond$i$i$i = $cparam_name;
 if ((_arParamLoad($cond$i$i$i, 1, $param, $vararg_buffer) | 0) < 0) {
  if ((HEAP8[$__size_$i$i$i$i >> 0] | 0) < 0) $cond$i$i$i6 = HEAP32[$cparam_name >> 2] | 0; else $cond$i$i$i6 = $cparam_name;
  HEAP32[$vararg_buffer1 >> 2] = $cond$i$i$i6;
  _arLog(0, 3, 43844, $vararg_buffer1);
  $retval$0 = -1;
 } else {
  $4 = HEAP32[14046] | 0;
  HEAP32[14046] = $4 + 1;
  HEAP32[$vararg_buffer >> 2] = $4;
  _memcpy(__ZNSt3__213unordered_mapIi7ARParamNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56164, $vararg_buffer) | 0, $param | 0, 184) | 0;
  $retval$0 = HEAP32[$vararg_buffer >> 2] | 0;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function _start_pass_dpost($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $19 = 0, $28 = 0, $3 = 0, $35 = 0, $39 = 0, $8 = 0;
 $3 = HEAP32[$0 + 432 >> 2] | 0;
 L1 : do switch ($1 | 0) {
 case 0:
  {
   if (!(HEAP32[$0 + 84 >> 2] | 0)) {
    HEAP32[$3 + 4 >> 2] = HEAP32[(HEAP32[$0 + 452 >> 2] | 0) + 4 >> 2];
    break L1;
   }
   HEAP32[$3 + 4 >> 2] = 4;
   $8 = $3 + 12 | 0;
   if (!(HEAP32[$8 >> 2] | 0)) {
    $19 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 28 >> 2] & 31]($0, HEAP32[$3 + 8 >> 2] | 0, 0, HEAP32[$3 + 16 >> 2] | 0, 1) | 0;
    HEAP32[$8 >> 2] = $19;
   }
   break;
  }
 case 3:
  {
   if (!(HEAP32[$3 + 8 >> 2] | 0)) {
    $28 = HEAP32[$0 >> 2] | 0;
    HEAP32[$28 + 20 >> 2] = 4;
    FUNCTION_TABLE_vi[HEAP32[$28 >> 2] & 255]($0);
   }
   HEAP32[$3 + 4 >> 2] = 5;
   break;
  }
 case 2:
  {
   if (!(HEAP32[$3 + 8 >> 2] | 0)) {
    $35 = HEAP32[$0 >> 2] | 0;
    HEAP32[$35 + 20 >> 2] = 4;
    FUNCTION_TABLE_vi[HEAP32[$35 >> 2] & 255]($0);
   }
   HEAP32[$3 + 4 >> 2] = 6;
   break;
  }
 default:
  {
   $39 = HEAP32[$0 >> 2] | 0;
   HEAP32[$39 + 20 >> 2] = 4;
   FUNCTION_TABLE_vi[HEAP32[$39 >> 2] & 255]($0);
  }
 } while (0);
 HEAP32[$3 + 24 >> 2] = 0;
 HEAP32[$3 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__225__num_get_signed_integralIxEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $23 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $26 = 0;
  $27 = 0;
 } else {
  $6 = ___errno_location() | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  $8 = ___errno_location() | 0;
  HEAP32[$8 >> 2] = 0;
  $10 = _strtoll_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $11 = getTempRet0() | 0;
  $12 = ___errno_location() | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if (!$13) {
   $15 = ___errno_location() | 0;
   HEAP32[$15 >> 2] = $7;
  }
  if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if (($13 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $23 = ($11 | 0) > 0 | ($11 | 0) == 0 & $10 >>> 0 > 0;
   $28 = $23 ? -1 : 0;
   $29 = $23 ? 2147483647 : -2147483648;
  } else {
   $28 = $10;
   $29 = $11;
  } else {
   HEAP32[$2 >> 2] = 4;
   $28 = 0;
   $29 = 0;
  }
  $26 = $29;
  $27 = $28;
 }
 setTempRet0($26 | 0);
 STACKTOP = sp;
 return $27 | 0;
}

function _vsnprintf($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$014 = 0, $$015 = 0, $11 = 0, $14 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $4 = 0, $5 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(160);
 $4 = sp + 144 | 0;
 $5 = sp;
 _memcpy($5 | 0, 11696, 144) | 0;
 if (($1 + -1 | 0) >>> 0 > 2147483646) if (!$1) {
  $$014 = $4;
  $$015 = 1;
  label = 4;
 } else {
  $9 = ___errno_location() | 0;
  HEAP32[$9 >> 2] = 75;
  $$0 = -1;
 } else {
  $$014 = $0;
  $$015 = $1;
  label = 4;
 }
 if ((label | 0) == 4) {
  $11 = -2 - $$014 | 0;
  $spec$select = $$015 >>> 0 > $11 >>> 0 ? $11 : $$015;
  HEAP32[$5 + 48 >> 2] = $spec$select;
  $14 = $5 + 20 | 0;
  HEAP32[$14 >> 2] = $$014;
  HEAP32[$5 + 44 >> 2] = $$014;
  $16 = $$014 + $spec$select | 0;
  $17 = $5 + 16 | 0;
  HEAP32[$17 >> 2] = $16;
  HEAP32[$5 + 28 >> 2] = $16;
  $19 = _vfprintf($5, $2, $3) | 0;
  if (!$spec$select) $$0 = $19; else {
   $21 = HEAP32[$14 >> 2] | 0;
   HEAP8[$21 + ((($21 | 0) == (HEAP32[$17 >> 2] | 0)) << 31 >> 31) >> 0] = 0;
   $$0 = $19;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _getTransMatSquare($id, $markerIndex, $markerWidth) {
 $id = $id | 0;
 $markerIndex = $markerIndex | 0;
 $markerWidth = $markerWidth | 0;
 var $1 = 0, $call7 = 0, $id$addr = 0, $retval$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = HEAP32[3413] | 0; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  $1 = HEAP32[$call7 + 216 >> 2] | 0;
  if ((HEAP32[$1 + 44 >> 2] | 0) > ($markerIndex | 0)) {
   +_arGetTransMatSquare(HEAP32[$call7 + 228 >> 2] | 0, ($markerIndex | 0) < 0 ? 55208 : $1 + 48 + ($markerIndex << 8) | 0, +($markerWidth | 0), 51520);
   $retval$1 = 0;
   break;
  } else {
   $retval$1 = HEAP32[3415] | 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function _icpGetDeltaS($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $13 = 0, $15 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $4 = sp + 24 | 0;
 $5 = sp + 12 | 0;
 $6 = sp;
 HEAP32[$4 + 4 >> 2] = 6;
 HEAP32[$4 + 8 >> 2] = 1;
 HEAP32[$4 >> 2] = $0;
 HEAP32[$5 + 4 >> 2] = $3;
 HEAP32[$5 + 8 >> 2] = 1;
 HEAP32[$5 >> 2] = $1;
 HEAP32[$6 + 4 >> 2] = $3;
 HEAP32[$6 + 8 >> 2] = 6;
 HEAP32[$6 >> 2] = $2;
 $13 = _arMatrixAllocTrans($6) | 0;
 do if (!$13) $$0 = -1; else {
  $15 = _arMatrixAllocMul($13, $6) | 0;
  if (!$15) {
   _arMatrixFree($13) | 0;
   $$0 = -1;
   break;
  }
  $17 = _arMatrixAllocMul($13, $5) | 0;
  if (!$17) {
   _arMatrixFree($13) | 0;
   _arMatrixFree($15) | 0;
   $$0 = -1;
   break;
  }
  if ((_arMatrixSelfInv($15) | 0) < 0) {
   _arMatrixFree($13) | 0;
   _arMatrixFree($15) | 0;
   _arMatrixFree($17) | 0;
   $$0 = -1;
   break;
  } else {
   _arMatrixMul($4, $15, $17) | 0;
   _arMatrixFree($13) | 0;
   _arMatrixFree($15) | 0;
   _arMatrixFree($17) | 0;
   $$0 = 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralItEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $4 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $$1 = 0;
   break;
  }
  $8 = ___errno_location() | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  $10 = ___errno_location() | 0;
  HEAP32[$10 >> 2] = 0;
  $12 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $13 = getTempRet0() | 0;
  $14 = ___errno_location() | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  if (!$15) {
   $17 = ___errno_location() | 0;
   HEAP32[$17 >> 2] = $9;
  }
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if ($13 >>> 0 > 0 | ($13 | 0) == 0 & $12 >>> 0 > 65535 | ($15 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $12 & 65535;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralImEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $4 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $$1 = 0;
   break;
  }
  $8 = ___errno_location() | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  $10 = ___errno_location() | 0;
  HEAP32[$10 >> 2] = 0;
  $12 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $13 = getTempRet0() | 0;
  $14 = ___errno_location() | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  if (!$15) {
   $17 = ___errno_location() | 0;
   HEAP32[$17 >> 2] = $9;
  }
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if ($13 >>> 0 > 0 | ($13 | 0) == 0 & $12 >>> 0 > 4294967295 | ($15 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $12;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNSt3__227__num_get_unsigned_integralIjEET_PKcS3_Rji($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$1 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $4 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 do if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0;
 } else {
  if ((HEAP8[$0 >> 0] | 0) == 45) {
   HEAP32[$2 >> 2] = 4;
   $$1 = 0;
   break;
  }
  $8 = ___errno_location() | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  $10 = ___errno_location() | 0;
  HEAP32[$10 >> 2] = 0;
  $12 = _strtoull_l($0, $4, $3, __ZNSt3__26__clocEv() | 0) | 0;
  $13 = getTempRet0() | 0;
  $14 = ___errno_location() | 0;
  $15 = HEAP32[$14 >> 2] | 0;
  if (!$15) {
   $17 = ___errno_location() | 0;
   HEAP32[$17 >> 2] = $9;
  }
  do if ((HEAP32[$4 >> 2] | 0) == ($1 | 0)) if ($13 >>> 0 > 0 | ($13 | 0) == 0 & $12 >>> 0 > 4294967295 | ($15 | 0) == 34) {
   HEAP32[$2 >> 2] = 4;
   $$0 = -1;
   break;
  } else {
   $$0 = $12;
   break;
  } else {
   HEAP32[$2 >> 2] = 4;
   $$0 = 0;
  } while (0);
  $$1 = $$0;
 } while (0);
 STACKTOP = sp;
 return $$1 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $12 = 0, $17 = 0, $18 = 0, $23 = 0, $25 = 0, $26 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 $8 = $0 + 8 | 0;
 $12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 127]($8) | 0;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 $17 = HEAP8[$12 + 8 + 3 >> 0] | 0;
 $18 = $17 << 24 >> 24 < 0;
 $23 = $18 ? HEAP32[$12 >> 2] | 0 : $12;
 $25 = $23 + (($18 ? HEAP32[$12 + 4 >> 2] | 0 : $17 & 255) << 2) | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $26 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $23, $25) | 0;
 STACKTOP = sp;
 return $26 | 0;
}

function _EX($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$039 = 0, $$040 = 0, $$041 = 0, $$043 = 0, $$1 = 0, $$142 = 0, $$2 = 0, $23 = 0.0, $25 = 0, $3 = 0, $5 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 L1 : do if (($3 | 0) < 1 | ($5 | 0) < 1) $$040 = -1; else if ((HEAP32[$1 + 4 >> 2] | 0) == ($5 | 0)) {
  $$039 = 0;
  while (1) {
   if (($$039 | 0) == ($5 | 0)) break;
   HEAPF64[(HEAP32[$1 >> 2] | 0) + ($$039 << 3) >> 3] = 0.0;
   $$039 = $$039 + 1 | 0;
  }
  $$041 = HEAP32[$0 >> 2] | 0;
  $$1 = 0;
  while (1) {
   if (($$1 | 0) == ($3 | 0)) break;
   $$0 = 0;
   $$043 = HEAP32[$1 >> 2] | 0;
   $$142 = $$041;
   while (1) {
    if (($$0 | 0) == ($5 | 0)) break;
    HEAPF64[$$043 >> 3] = +HEAPF64[$$142 >> 3] + +HEAPF64[$$043 >> 3];
    $$0 = $$0 + 1 | 0;
    $$043 = $$043 + 8 | 0;
    $$142 = $$142 + 8 | 0;
   }
   $$041 = $$041 + ($5 << 3) | 0;
   $$1 = $$1 + 1 | 0;
  }
  $23 = +($3 | 0);
  $$2 = 0;
  while (1) {
   if (($$2 | 0) == ($5 | 0)) {
    $$040 = 0;
    break L1;
   }
   $25 = (HEAP32[$1 >> 2] | 0) + ($$2 << 3) | 0;
   HEAPF64[$25 >> 3] = +HEAPF64[$25 >> 3] / $23;
   $$2 = $$2 + 1 | 0;
  }
 } else $$040 = -1; while (0);
 return $$040 | 0;
}

function _build_ycc_rgb_table_46($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$032 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $18 = 0, $2 = 0, $3 = 0, $30 = 0, $34 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 452 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $6 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$3 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 $7 = $2 + 16 | 0;
 HEAP32[$7 >> 2] = $6;
 $10 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$3 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 $11 = $2 + 20 | 0;
 HEAP32[$11 >> 2] = $10;
 $14 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$3 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 $15 = $2 + 24 | 0;
 HEAP32[$15 >> 2] = $14;
 $18 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$3 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 HEAP32[$2 + 28 >> 2] = $18;
 $$0 = -128;
 $$032 = 0;
 while (1) {
  if (($$032 | 0) == 256) break;
  HEAP32[(HEAP32[$7 >> 2] | 0) + ($$032 << 2) >> 2] = ($$0 * 91881 | 0) + 32768 >> 16;
  HEAP32[(HEAP32[$11 >> 2] | 0) + ($$032 << 2) >> 2] = ($$0 * 116130 | 0) + 32768 >> 16;
  $30 = Math_imul($$0, -46802) | 0;
  HEAP32[(HEAP32[$15 >> 2] | 0) + ($$032 << 2) >> 2] = $30;
  $34 = (Math_imul($$0, -22554) | 0) + 32768 | 0;
  HEAP32[$18 + ($$032 << 2) >> 2] = $34;
  $$0 = $$0 + 1 | 0;
  $$032 = $$032 + 1 | 0;
 }
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwl($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$be = 0, $$021 = 0, $$021$be = 0, $$sroa$speculated = 0, $12 = 0, $14 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0;
 $3 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 $4 = $0 + 24 | 0;
 $5 = $0 + 28 | 0;
 $$0 = $1;
 $$021 = 0;
 while (1) {
  if (($$021 | 0) >= ($2 | 0)) break;
  $7 = HEAP32[$4 >> 2] | 0;
  $8 = HEAP32[$5 >> 2] | 0;
  if ($7 >>> 0 < $8 >>> 0) {
   $22 = $8 - $7 >> 2;
   $23 = $2 - $$021 | 0;
   $$sroa$speculated = ($23 | 0) < ($22 | 0) ? $23 : $22;
   __ZNSt3__211char_traitsIwE4copyEPwPKwm($7, $$0, $$sroa$speculated) | 0;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + ($$sroa$speculated << 2);
   $$0$be = $$0 + ($$sroa$speculated << 2) | 0;
   $$021$be = $$sroa$speculated + $$021 | 0;
  } else {
   $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] | 0;
   $14 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$$0 >> 2] | 0) | 0;
   if ((FUNCTION_TABLE_iii[$12 & 63]($0, $14) | 0) == ($3 | 0)) break;
   $$0$be = $$0 + 4 | 0;
   $$021$be = $$021 + 1 | 0;
  }
  $$0 = $$0$be;
  $$021 = $$021$be;
 }
 return $$021 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $12 = 0, $16 = 0, $17 = 0, $22 = 0, $24 = 0, $25 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 $8 = $0 + 8 | 0;
 $12 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 127]($8) | 0;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 $16 = HEAP8[$12 + 11 >> 0] | 0;
 $17 = $16 << 24 >> 24 < 0;
 $22 = $17 ? HEAP32[$12 >> 2] | 0 : $12;
 $24 = $22 + ($17 ? HEAP32[$12 + 4 >> 2] | 0 : $16 & 255) | 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $25 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, $22, $24) | 0;
 STACKTOP = sp;
 return $25 | 0;
}

function _build_ycc_rgb_table($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$032 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $18 = 0, $2 = 0, $3 = 0, $30 = 0, $34 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 456 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $6 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$3 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 $7 = $2 + 8 | 0;
 HEAP32[$7 >> 2] = $6;
 $10 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$3 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 $11 = $2 + 12 | 0;
 HEAP32[$11 >> 2] = $10;
 $14 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$3 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 $15 = $2 + 16 | 0;
 HEAP32[$15 >> 2] = $14;
 $18 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$3 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 HEAP32[$2 + 20 >> 2] = $18;
 $$0 = -128;
 $$032 = 0;
 while (1) {
  if (($$032 | 0) == 256) break;
  HEAP32[(HEAP32[$7 >> 2] | 0) + ($$032 << 2) >> 2] = ($$0 * 91881 | 0) + 32768 >> 16;
  HEAP32[(HEAP32[$11 >> 2] | 0) + ($$032 << 2) >> 2] = ($$0 * 116130 | 0) + 32768 >> 16;
  $30 = Math_imul($$0, -46802) | 0;
  HEAP32[(HEAP32[$15 >> 2] | 0) + ($$032 << 2) >> 2] = $30;
  $34 = (Math_imul($$0, -22554) | 0) + 32768 | 0;
  HEAP32[$18 + ($$032 << 2) >> 2] = $34;
  $$0 = $$0 + 1 | 0;
  $$032 = $$032 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_discriminatorEPKcS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$029 = 0, $$1 = 0, $$pn = 0, $13 = 0, $3 = 0, $5 = 0, $7 = 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$1 = $0; else {
  $3 = HEAP8[$0 >> 0] | 0;
  if ($3 << 24 >> 24 != 95) {
   if ((($3 << 24 >> 24) + -48 | 0) >>> 0 >= 10) {
    $$1 = $0;
    break;
   }
   $$pn = $0;
   while (1) {
    $$0 = $$pn + 1 | 0;
    if (($$0 | 0) == ($1 | 0)) {
     $$1 = $1;
     break L1;
    }
    if (((HEAP8[$$0 >> 0] | 0) + -48 | 0) >>> 0 < 10) $$pn = $$0; else {
     $$1 = $$0;
     break L1;
    }
   }
  }
  $5 = $0 + 1 | 0;
  if (($5 | 0) == ($1 | 0)) $$1 = $0; else {
   $7 = HEAP8[$5 >> 0] | 0;
   if ((($7 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
    $$1 = $0 + 2 | 0;
    break;
   }
   if ($7 << 24 >> 24 == 95) {
    $$029 = $0 + 2 | 0;
    while (1) {
     if (($$029 | 0) == ($1 | 0)) {
      $$1 = $0;
      break L1;
     }
     $13 = HEAP8[$$029 >> 0] | 0;
     if ((($13 << 24 >> 24) + -48 | 0) >>> 0 >= 10) break;
     $$029 = $$029 + 1 | 0;
    }
    return ($13 << 24 >> 24 == 95 ? $$029 + 1 | 0 : $0) | 0;
   } else $$1 = $0;
  }
 } while (0);
 return $$1 | 0;
}

function _alloc_barray($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$0 = 0, $$048 = 0, $$049 = 0, $$1 = 0, $$151 = 0, $$151$ = 0, $15 = 0, $16 = 0, $18 = 0, $21 = 0, $22 = 0, $23 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $umax = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = $2 << 7;
 $7 = 999999984 / ($6 >>> 0) | 0;
 if ($6 >>> 0 > 999999984) {
  $9 = HEAP32[$0 >> 2] | 0;
  HEAP32[$9 + 20 >> 2] = 70;
  FUNCTION_TABLE_vi[HEAP32[$9 >> 2] & 255]($0);
 }
 $$ = ($7 | 0) < ($3 | 0) ? $7 : $3;
 HEAP32[$5 + 80 >> 2] = $$;
 $15 = _alloc_small($0, $1, $3 << 2) | 0;
 $16 = ~$3;
 $$049 = 0;
 $$151 = $$;
 while (1) {
  if ($$049 >>> 0 >= $3 >>> 0) break;
  $18 = $3 - $$049 | 0;
  $$151$ = $$151 >>> 0 < $18 >>> 0 ? $$151 : $18;
  $21 = _alloc_large($0, $1, Math_imul($6, $$151$) | 0) | 0;
  $22 = $$049 + $16 | 0;
  $23 = ~$$151;
  $umax = $22 >>> 0 > $23 >>> 0 ? $22 : $23;
  $$0 = $21;
  $$048 = $$151$;
  $$1 = $$049;
  while (1) {
   if (!$$048) break;
   HEAP32[$15 + ($$1 << 2) >> 2] = $$0;
   $$0 = $$0 + ($2 << 7) | 0;
   $$048 = $$048 + -1 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $$049 = $$049 + -1 - $umax | 0;
  $$151 = $$151$;
 }
 return $15 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$0$be = 0, $$021 = 0, $$021$be = 0, $$sroa$speculated = 0, $12 = 0, $14 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0;
 $3 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 $4 = $0 + 24 | 0;
 $5 = $0 + 28 | 0;
 $$0 = $1;
 $$021 = 0;
 while (1) {
  if (($$021 | 0) >= ($2 | 0)) break;
  $7 = HEAP32[$4 >> 2] | 0;
  $8 = HEAP32[$5 >> 2] | 0;
  if ($7 >>> 0 < $8 >>> 0) {
   $21 = $8 - $7 | 0;
   $22 = $2 - $$021 | 0;
   $$sroa$speculated = ($22 | 0) < ($21 | 0) ? $22 : $21;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm($7, $$0, $$sroa$speculated) | 0;
   HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + $$sroa$speculated;
   $$0$be = $$0 + $$sroa$speculated | 0;
   $$021$be = $$sroa$speculated + $$021 | 0;
  } else {
   $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] | 0;
   $14 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$$0 >> 0] | 0) | 0;
   if ((FUNCTION_TABLE_iii[$12 & 63]($0, $14) | 0) == ($3 | 0)) break;
   $$0$be = $$0 + 1 | 0;
   $$021$be = $$021 + 1 | 0;
  }
  $$0 = $$0$be;
  $$021 = $$021$be;
 }
 return $$021 | 0;
}

function _jpeg_consume_input($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$pre$phiZ2D = 0, $1 = 0, $13 = 0, $19 = 0, $2 = 0, $3 = 0, label = 0;
 $1 = $0 + 20 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 switch ($2 | 0) {
 case 200:
  {
   $3 = $0 + 436 | 0;
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$3 >> 2] | 0) + 4 >> 2] & 255]($0);
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 24 >> 2] | 0) + 8 >> 2] & 255]($0);
   HEAP32[$1 >> 2] = 201;
   $$pre$phiZ2D = $3;
   label = 4;
   break;
  }
 case 201:
  {
   $$pre$phiZ2D = $0 + 436 | 0;
   label = 4;
   break;
  }
 case 202:
  {
   $$0 = 1;
   break;
  }
 case 210:
 case 208:
 case 207:
 case 206:
 case 205:
 case 204:
 case 203:
  {
   $$0 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$0 + 436 >> 2] >> 2] & 127]($0) | 0;
   break;
  }
 default:
  {
   $19 = HEAP32[$0 >> 2] | 0;
   HEAP32[$19 + 20 >> 2] = 20;
   HEAP32[$19 + 24 >> 2] = $2;
   FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   $$0 = 0;
  }
 }
 if ((label | 0) == 4) {
  $13 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$$pre$phiZ2D >> 2] >> 2] & 127]($0) | 0;
  if (($13 | 0) == 1) {
   _default_decompress_parms($0);
   HEAP32[$1 >> 2] = 202;
   $$0 = 1;
  } else $$0 = $13;
 }
 return $$0 | 0;
}

function _jpeg_read_scanlines($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $22 = 0, $3 = 0, $31 = 0, $5 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $5 = HEAP32[$0 + 20 >> 2] | 0;
 if (($5 | 0) != 205) {
  $7 = HEAP32[$0 >> 2] | 0;
  HEAP32[$7 + 20 >> 2] = 20;
  HEAP32[$7 + 24 >> 2] = $5;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $12 = $0 + 140 | 0;
 $13 = HEAP32[$12 >> 2] | 0;
 $15 = HEAP32[$0 + 116 >> 2] | 0;
 if ($13 >>> 0 < $15 >>> 0) {
  $22 = HEAP32[$0 + 8 >> 2] | 0;
  if ($22 | 0) {
   HEAP32[$22 + 4 >> 2] = $13;
   HEAP32[$22 + 8 >> 2] = $15;
   FUNCTION_TABLE_vi[HEAP32[$22 >> 2] & 255]($0);
  }
  HEAP32[$3 >> 2] = 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 + 424 >> 2] | 0) + 4 >> 2] & 31]($0, $1, $3, $2);
  $31 = HEAP32[$3 >> 2] | 0;
  HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + $31;
  $$0 = $31;
 } else {
  $17 = HEAP32[$0 >> 2] | 0;
  HEAP32[$17 + 20 >> 2] = 123;
  FUNCTION_TABLE_vii[HEAP32[$17 + 4 >> 2] & 63]($0, -1);
  $$0 = 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function _wcrtomb($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $13 = 0, $57 = 0, $7 = 0;
 do if (!$0) $$0 = 1; else {
  if ($1 >>> 0 < 128) {
   HEAP8[$0 >> 0] = $1;
   $$0 = 1;
   break;
  }
  $7 = (___pthread_self_306() | 0) + 188 | 0;
  if (!(HEAP32[HEAP32[$7 >> 2] >> 2] | 0)) if (($1 & -128 | 0) == 57216) {
   HEAP8[$0 >> 0] = $1;
   $$0 = 1;
   break;
  } else {
   $13 = ___errno_location() | 0;
   HEAP32[$13 >> 2] = 84;
   $$0 = -1;
   break;
  }
  if ($1 >>> 0 < 2048) {
   HEAP8[$0 >> 0] = $1 >>> 6 | 192;
   HEAP8[$0 + 1 >> 0] = $1 & 63 | 128;
   $$0 = 2;
   break;
  }
  if ($1 >>> 0 < 55296 | ($1 & -8192 | 0) == 57344) {
   HEAP8[$0 >> 0] = $1 >>> 12 | 224;
   HEAP8[$0 + 1 >> 0] = $1 >>> 6 & 63 | 128;
   HEAP8[$0 + 2 >> 0] = $1 & 63 | 128;
   $$0 = 3;
   break;
  }
  if (($1 + -65536 | 0) >>> 0 < 1048576) {
   HEAP8[$0 >> 0] = $1 >>> 18 | 240;
   HEAP8[$0 + 1 >> 0] = $1 >>> 12 & 63 | 128;
   HEAP8[$0 + 2 >> 0] = $1 >>> 6 & 63 | 128;
   HEAP8[$0 + 3 >> 0] = $1 & 63 | 128;
   $$0 = 4;
   break;
  } else {
   $57 = ___errno_location() | 0;
   HEAP32[$57 >> 2] = 84;
   $$0 = -1;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIRKiEEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $14 = 0, $15 = 0, $19 = 0, $2 = 0, $24 = 0, $25 = 0, $3 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $8 = ((HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 2) + 1 | 0;
 $9 = __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($0) | 0;
 if ($9 >>> 0 < $8 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $14 = HEAP32[$0 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] | 0) - $14 | 0;
  $19 = $15 >> 1;
  __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_($2, $15 >> 2 >>> 0 < $9 >>> 1 >>> 0 ? ($19 >>> 0 < $8 >>> 0 ? $8 : $19) : $9, (HEAP32[$3 >> 2] | 0) - $14 >> 2, $0 + 8 | 0);
  $24 = $2 + 8 | 0;
  $25 = HEAP32[$24 >> 2] | 0;
  HEAP32[$25 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$24 >> 2] = $25 + 4;
  __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE($0, $2);
  __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function _fopen($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0, $15 = 0, $6 = 0, $7 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer8 = sp + 32 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 if (!(_strchr(46122, HEAP8[$1 >> 0] | 0) | 0)) {
  $6 = ___errno_location() | 0;
  HEAP32[$6 >> 2] = 22;
  $$0 = 0;
 } else {
  $7 = ___fmodeflags($1) | 0;
  HEAP32[$vararg_buffer >> 2] = $0;
  HEAP32[$vararg_buffer + 4 >> 2] = $7 | 32768;
  HEAP32[$vararg_buffer + 8 >> 2] = 438;
  $11 = ___syscall_ret(___syscall5(5, $vararg_buffer | 0) | 0) | 0;
  if (($11 | 0) < 0) $$0 = 0; else {
   if ($7 & 524288 | 0) {
    HEAP32[$vararg_buffer3 >> 2] = $11;
    HEAP32[$vararg_buffer3 + 4 >> 2] = 2;
    HEAP32[$vararg_buffer3 + 8 >> 2] = 1;
    ___syscall221(221, $vararg_buffer3 | 0) | 0;
   }
   $15 = ___fdopen($11, $1) | 0;
   if (!$15) {
    HEAP32[$vararg_buffer8 >> 2] = $11;
    ___syscall6(6, $vararg_buffer8 | 0) | 0;
    $$0 = 0;
   } else $$0 = $15;
  }
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESC_SC_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$021 = 0, $$1 = 0, $12 = 0, $13 = 0, $18 = 0, $3 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = $1;
 $4 = sp;
 $6 = $2 - $3 | 0;
 if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($6 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $6;
  $$021 = $0;
 } else {
  $12 = $6 + 16 & -16;
  $13 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm($12) | 0;
  HEAP32[$0 >> 2] = $13;
  HEAP32[$0 + 8 >> 2] = $12 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $6;
  $$021 = $13;
 }
 $18 = $2 - $3 | 0;
 $$0 = $1;
 $$1 = $$021;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$1, $$0);
  $$0 = $$0 + 1 | 0;
  $$1 = $$1 + 1 | 0;
 }
 HEAP8[$4 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$021 + $18 | 0, $4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $15 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $14 = HEAP32[$0 + 4 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $14 = $5 & 255;
  $15 = 10;
 }
 if (($15 - $14 | 0) >>> 0 < $2 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc($0, $15, $14 + $2 - $15 | 0, $14, $14, 0, $2, $1); else if ($2 | 0) {
  if ($6) $20 = HEAP32[$0 >> 2] | 0; else $20 = $0;
  __ZNSt3__211char_traitsIcE4copyEPcPKcm($20 + $14 | 0, $1, $2) | 0;
  $21 = $14 + $2 | 0;
  if ((HEAP8[$4 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $21; else HEAP8[$4 >> 0] = $21;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($20 + $21 | 0, $3);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE9__grow_byEmmmmmm($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$sroa$speculated = 0, $15 = 0, $16 = 0, $21 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $9 = 0;
 if ((1073741807 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 $9 = $0 + 8 | 0;
 if ((HEAP8[$9 + 3 >> 0] | 0) < 0) $27 = HEAP32[$0 >> 2] | 0; else $27 = $0;
 if ($1 >>> 0 < 536870887) {
  $15 = $2 + $1 | 0;
  $16 = $1 << 1;
  $$sroa$speculated = $15 >>> 0 < $16 >>> 0 ? $16 : $15;
  $21 = $$sroa$speculated >>> 0 < 2 ? 2 : $$sroa$speculated + 4 & -4;
  if ($21 >>> 0 > 1073741823) _abort(); else $24 = $21;
 } else $24 = 1073741807;
 $25 = __Znwm($24 << 2) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm($25, $27, $4) | 0;
 $29 = $3 - $5 - $4 | 0;
 if ($29 | 0) __ZNSt3__211char_traitsIwE4copyEPwPKwm($25 + ($4 << 2) + ($6 << 2) | 0, $27 + ($4 << 2) + ($5 << 2) | 0, $29) | 0;
 if (($1 | 0) != 1) __ZdlPv($27);
 HEAP32[$0 >> 2] = $25;
 HEAP32[$9 >> 2] = $24 | -2147483648;
 return;
}

function __ZNSt3__214__num_put_base14__format_floatEPcPKcj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$022 = 0, $$023$off0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$sink = 0, $10 = 0, $11 = 0, $14 = 0, $25 = 0, $9 = 0;
 if (!($2 & 2048)) $$0 = $0; else {
  HEAP8[$0 >> 0] = 43;
  $$0 = $0 + 1 | 0;
 }
 if (!($2 & 1024)) $$1 = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$1 = $$0 + 1 | 0;
 }
 $9 = $2 & 260;
 $10 = $2 & 16384;
 $11 = ($9 | 0) == 260;
 if ($11) {
  $$023$off0 = 0;
  $$2 = $$1;
 } else {
  HEAP8[$$1 >> 0] = 46;
  HEAP8[$$1 + 1 >> 0] = 42;
  $$023$off0 = 1;
  $$2 = $$1 + 2 | 0;
 }
 $$022 = $1;
 $$3 = $$2;
 while (1) {
  $14 = HEAP8[$$022 >> 0] | 0;
  if (!($14 << 24 >> 24)) break;
  HEAP8[$$3 >> 0] = $14;
  $$022 = $$022 + 1 | 0;
  $$3 = $$3 + 1 | 0;
 }
 L14 : do switch ($9 & 511) {
 case 4:
  {
   $$sink = $10 >>> 9 & 255 ^ 102;
   break;
  }
 case 256:
  {
   $$sink = $10 >>> 9 & 255 ^ 101;
   break;
  }
 default:
  {
   $25 = $10 >>> 9 & 255;
   if ($11) {
    $$sink = $25 ^ 97;
    break L14;
   } else {
    $$sink = $25 ^ 103;
    break L14;
   }
  }
 } while (0);
 HEAP8[$$3 >> 0] = $$sink;
 return $$023$off0 | 0;
}

function _fflush($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $12 = 0, $25 = 0, $29 = 0, $7 = 0, $phitmp = 0;
 do if (!$0) {
  if (!(HEAP32[3456] | 0)) $29 = 0; else $29 = _fflush(HEAP32[3456] | 0) | 0;
  $12 = ___ofl_lock() | 0;
  $$02325 = HEAP32[$12 >> 2] | 0;
  if (!$$02325) $$024$lcssa = $29; else {
   $$02327 = $$02325;
   $$02426 = $29;
   while (1) {
    if ((HEAP32[$$02327 + 76 >> 2] | 0) > -1) $25 = ___lockfile($$02327) | 0; else $25 = 0;
    if ((HEAP32[$$02327 + 20 >> 2] | 0) >>> 0 > (HEAP32[$$02327 + 28 >> 2] | 0) >>> 0) $$1 = ___fflush_unlocked($$02327) | 0 | $$02426; else $$1 = $$02426;
    if ($25 | 0) ___unlockfile($$02327);
    $$02327 = HEAP32[$$02327 + 56 >> 2] | 0;
    if (!$$02327) {
     $$024$lcssa = $$1;
     break;
    } else $$02426 = $$1;
   }
  }
  ___ofl_unlock();
  $$0 = $$024$lcssa;
 } else {
  if ((HEAP32[$0 + 76 >> 2] | 0) <= -1) {
   $$0 = ___fflush_unlocked($0) | 0;
   break;
  }
  $phitmp = (___lockfile($0) | 0) == 0;
  $7 = ___fflush_unlocked($0) | 0;
  if ($phitmp) $$0 = $7; else {
   ___unlockfile($0);
   $$0 = $7;
  }
 } while (0);
 return $$0 | 0;
}

function _alloc_funny_pointers($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$042 = 0, $11 = 0, $12 = 0, $13 = 0, $15 = 0, $18 = 0, $2 = 0, $20 = 0, $25 = 0, $27 = 0, $3 = 0, $30 = 0, $33 = 0, $4 = 0, $5 = 0, $8 = 0;
 $2 = HEAP32[$0 + 424 >> 2] | 0;
 $3 = $0 + 316 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $0 + 4 | 0;
 $8 = $0 + 36 | 0;
 $11 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$5 >> 2] >> 2] & 63]($0, 1, HEAP32[$8 >> 2] << 3) | 0;
 $12 = $2 + 56 | 0;
 HEAP32[$12 >> 2] = $11;
 $13 = HEAP32[$8 >> 2] | 0;
 $15 = $2 + 60 | 0;
 HEAP32[$15 >> 2] = $11 + ($13 << 2);
 $18 = $4 + 4 | 0;
 $$0 = 0;
 $$042 = HEAP32[$0 + 216 >> 2] | 0;
 $20 = $13;
 while (1) {
  if (($$0 | 0) >= ($20 | 0)) break;
  $25 = Math_imul(HEAP32[$$042 + 36 >> 2] | 0, HEAP32[$$042 + 12 >> 2] | 0) | 0;
  $27 = ($25 | 0) / (HEAP32[$3 >> 2] | 0) | 0;
  $30 = Math_imul($27, $18) | 0;
  $33 = (FUNCTION_TABLE_iiii[HEAP32[HEAP32[$5 >> 2] >> 2] & 63]($0, 1, $30 << 3) | 0) + ($27 << 2) | 0;
  HEAP32[(HEAP32[$12 >> 2] | 0) + ($$0 << 2) >> 2] = $33;
  HEAP32[(HEAP32[$15 >> 2] | 0) + ($$0 << 2) >> 2] = $33 + ($30 << 2);
  $$0 = $$0 + 1 | 0;
  $$042 = $$042 + 84 | 0;
  $20 = HEAP32[$8 >> 2] | 0;
 }
 return;
}

function _examine_app14($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $34 = 0, $42 = 0, $44 = 0, $46 = 0, $56 = 0, label = 0;
 if ($2 >>> 0 > 11) if ((HEAP8[$1 >> 0] | 0) == 65) if ((HEAP8[$1 + 1 >> 0] | 0) == 100) if ((HEAP8[$1 + 2 >> 0] | 0) == 111) if ((HEAP8[$1 + 3 >> 0] | 0) == 98) if ((HEAP8[$1 + 4 >> 0] | 0) == 101) {
  $34 = HEAPU8[$1 + 7 >> 0] << 8 | HEAPU8[$1 + 8 >> 0];
  $42 = HEAPU8[$1 + 9 >> 0] << 8 | HEAPU8[$1 + 10 >> 0];
  $44 = HEAP8[$1 + 11 >> 0] | 0;
  $46 = HEAP32[$0 >> 2] | 0;
  HEAP32[$46 + 24 >> 2] = HEAPU8[$1 + 5 >> 0] << 8 | HEAPU8[$1 + 6 >> 0];
  HEAP32[$46 + 28 >> 2] = $34;
  HEAP32[$46 + 32 >> 2] = $42;
  HEAP32[$46 + 36 >> 2] = $44 & 255;
  HEAP32[$46 + 20 >> 2] = 76;
  FUNCTION_TABLE_vii[HEAP32[$46 + 4 >> 2] & 63]($0, 1);
  HEAP32[$0 + 292 >> 2] = 1;
  HEAP8[$0 + 296 >> 0] = $44;
 } else label = 8; else label = 8; else label = 8; else label = 8; else label = 8; else label = 8;
 if ((label | 0) == 8) {
  $56 = HEAP32[$0 >> 2] | 0;
  HEAP32[$56 + 20 >> 2] = 78;
  HEAP32[$56 + 24 >> 2] = $3 + $2;
  FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
 }
 return;
}

function _detectNFTMarker($id) {
 $id = $id | 0;
 var $call7 = 0, $id$addr = 0, $kpmHandle = 0, $kpmResult = 0, $kpmResultNum = 0, $retval$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp + 4 | 0;
 $kpmResult = sp + 8 | 0;
 $kpmResultNum = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  HEAP32[$kpmResult >> 2] = 0;
  HEAP32[$kpmResultNum >> 2] = -1;
  $kpmHandle = $call7 + 232 | 0;
  _kpmMatching(HEAP32[$kpmHandle >> 2] | 0, HEAP32[$call7 + 196 >> 2] | 0) | 0;
  _kpmGetResult(HEAP32[$kpmHandle >> 2] | 0, $kpmResult, $kpmResultNum) | 0;
  $retval$0 = HEAP32[$kpmResultNum >> 2] | 0;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function _detectMarker($id) {
 $id = $id | 0;
 var $buff = 0, $call7 = 0, $id$addr = 0, $retval$0 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $id$addr = sp + 40 | 0;
 $buff = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0 = HEAP32[3413] | 0; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  dest = $buff;
  stop = dest + 40 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  HEAP32[$buff >> 2] = HEAP32[$call7 + 196 >> 2];
  HEAP32[$buff + 16 >> 2] = 1;
  HEAP32[$buff + 12 >> 2] = HEAP32[$call7 + 204 >> 2];
  $retval$0 = _arDetectMarker(HEAP32[$call7 + 216 >> 2] | 0, $buff) | 0;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $15 = 0, $16 = 0, $20 = 0, $24 = 0, $25 = 0, $3 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if ($1 | 0) {
  $5 = $0 + 11 | 0;
  $6 = HEAP8[$5 >> 0] | 0;
  if ($6 << 24 >> 24 < 0) {
   $15 = HEAP32[$0 + 4 >> 2] | 0;
   $16 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
  } else {
   $15 = $6 & 255;
   $16 = 10;
  }
  if (($16 - $15 | 0) >>> 0 < $1 >>> 0) {
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm($0, $16, $15 + $1 - $16 | 0, $15, $15, 0, 0);
   $20 = HEAP8[$5 >> 0] | 0;
  } else $20 = $6;
  if ($20 << 24 >> 24 < 0) $24 = HEAP32[$0 >> 2] | 0; else $24 = $0;
  __ZNSt3__211char_traitsIcE6assignEPcmc($24 + $15 | 0, $1, $2) | 0;
  $25 = $15 + $1 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $25; else HEAP8[$5 >> 0] = $25;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($24 + $25 | 0, $3);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE21__push_back_slow_pathIRKhEEvOT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $17 = 0, $2 = 0, $21 = 0, $3 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $3 = $0 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) + 1 | 0;
 $8 = __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($0) | 0;
 if ($8 >>> 0 < $7 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $13 = HEAP32[$0 >> 2] | 0;
  $14 = (HEAP32[$0 + 8 >> 2] | 0) - $13 | 0;
  $17 = $14 << 1;
  __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EmmS3_($2, $14 >>> 0 < $8 >>> 1 >>> 0 ? ($17 >>> 0 < $7 >>> 0 ? $7 : $17) : $8, (HEAP32[$3 >> 2] | 0) - $13 | 0, $0 + 8 | 0);
  $21 = $2 + 8 | 0;
  HEAP8[HEAP32[$21 >> 2] >> 0] = HEAP8[$1 >> 0] | 0;
  HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 1;
  __ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE($0, $2);
  __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev($2);
  STACKTOP = sp;
  return;
 }
}

function _setMarkerInfoDir($id, $markerIndex, $dir) {
 $id = $id | 0;
 $markerIndex = $markerIndex | 0;
 $dir = $dir | 0;
 var $1 = 0, $arhandle = 0, $id$addr = 0, $retval$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 do if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = HEAP32[3413] | 0; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $1 = HEAP32[$arhandle >> 2] | 0;
  if ((HEAP32[$1 + 44 >> 2] | 0) > ($markerIndex | 0)) {
   HEAP32[(($markerIndex | 0) < 0 ? 55208 : $1 + 48 + ($markerIndex << 8) | 0) + 16 >> 2] = $dir;
   $retval$1 = 0;
   break;
  } else {
   $retval$1 = HEAP32[3415] | 0;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$1 | 0;
}

function _alloc_sarray($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$ = 0, $$0 = 0, $$048 = 0, $$049 = 0, $$1 = 0, $$151 = 0, $$151$ = 0, $14 = 0, $15 = 0, $17 = 0, $20 = 0, $21 = 0, $22 = 0, $5 = 0, $6 = 0, $8 = 0, $umax = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = 999999984 / ($2 >>> 0) | 0;
 if ($2 >>> 0 > 999999984) {
  $8 = HEAP32[$0 >> 2] | 0;
  HEAP32[$8 + 20 >> 2] = 70;
  FUNCTION_TABLE_vi[HEAP32[$8 >> 2] & 255]($0);
 }
 $$ = ($6 | 0) < ($3 | 0) ? $6 : $3;
 HEAP32[$5 + 80 >> 2] = $$;
 $14 = _alloc_small($0, $1, $3 << 2) | 0;
 $15 = ~$3;
 $$049 = 0;
 $$151 = $$;
 while (1) {
  if ($$049 >>> 0 >= $3 >>> 0) break;
  $17 = $3 - $$049 | 0;
  $$151$ = $$151 >>> 0 < $17 >>> 0 ? $$151 : $17;
  $20 = _alloc_large($0, $1, Math_imul($$151$, $2) | 0) | 0;
  $21 = $$049 + $15 | 0;
  $22 = ~$$151;
  $umax = $21 >>> 0 > $22 >>> 0 ? $21 : $22;
  $$0 = $20;
  $$048 = $$151$;
  $$1 = $$049;
  while (1) {
   if (!$$048) break;
   HEAP32[$14 + ($$1 << 2) >> 2] = $$0;
   $$0 = $$0 + $2 | 0;
   $$048 = $$048 + -1 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $$049 = $$049 + -1 - $umax | 0;
  $$151 = $$151$;
 }
 return $14 | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $5 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $8 = (HEAP32[$5 >> 2] | 0) + -20 | 0;
  $9 = $$0$i + -20 | 0;
  HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
  HEAP32[$8 + 4 >> 2] = HEAP32[$9 + 4 >> 2];
  HEAP32[$8 + 8 >> 2] = HEAP32[$9 + 8 >> 2];
  HEAP32[$8 + 12 >> 2] = HEAP32[$9 + 12 >> 2];
  HEAP32[$8 + 16 >> 2] = HEAP32[$9 + 16 >> 2];
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -20;
  $$0$i = $9;
 }
 $12 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $12;
 $14 = $1 + 8 | 0;
 $15 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$14 >> 2];
 HEAP32[$14 >> 2] = $15;
 $17 = $0 + 8 | 0;
 $18 = $1 + 12 | 0;
 $19 = HEAP32[$17 >> 2] | 0;
 HEAP32[$17 >> 2] = HEAP32[$18 >> 2];
 HEAP32[$18 >> 2] = $19;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6appendEPKwm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $15 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $4 = $0 + 8 | 0;
 $5 = $4 + 3 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) {
  $14 = HEAP32[$0 + 4 >> 2] | 0;
  $15 = (HEAP32[$4 >> 2] & 2147483647) + -1 | 0;
 } else {
  $14 = $6 & 255;
  $15 = 1;
 }
 if (($15 - $14 | 0) >>> 0 < $2 >>> 0) __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw($0, $15, $14 + $2 - $15 | 0, $14, $14, 0, $2, $1); else if ($2 | 0) {
  if ($7) $20 = HEAP32[$0 >> 2] | 0; else $20 = $0;
  __ZNSt3__211char_traitsIwE4copyEPwPKwm($20 + ($14 << 2) | 0, $1, $2) | 0;
  $21 = $14 + $2 | 0;
  if ((HEAP8[$5 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $21; else HEAP8[$5 >> 0] = $21;
  HEAP32[$3 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw($20 + ($21 << 2) | 0, $3);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE9__grow_byEmmmmmm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$sroa$speculated = 0, $13 = 0, $14 = 0, $19 = 0, $20 = 0, $22 = 0, $23 = 0;
 if ((-17 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $22 = HEAP32[$0 >> 2] | 0; else $22 = $0;
 if ($1 >>> 0 < 2147483623) {
  $13 = $2 + $1 | 0;
  $14 = $1 << 1;
  $$sroa$speculated = $13 >>> 0 < $14 >>> 0 ? $14 : $13;
  $19 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $19 = -17;
 $20 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm($19) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($20, $22, $4) | 0;
 $23 = $3 - $4 | 0;
 if ($23 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($20 + $4 + $5 | 0, $22 + $4 | 0, $23) | 0;
 if (($1 | 0) != 10) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm($22);
 HEAP32[$0 >> 2] = $20;
 HEAP32[$0 + 8 >> 2] = $19 | -2147483648;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $13 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) $10 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $10 = 10;
 do if ($10 >>> 0 < $2 >>> 0) {
  if ($6) $23 = HEAP32[$0 + 4 >> 2] | 0; else $23 = $5 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE21__grow_by_and_replaceEmmmmmmPKc($0, $10, $2 - $10 | 0, $23, 0, $23, $2, $1);
 } else {
  if ($6) $13 = HEAP32[$0 >> 2] | 0; else $13 = $0;
  __ZNSt3__211char_traitsIcE4moveEPcPKcm($13, $1, $2) | 0;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($13 + $2 | 0, $3);
  if ((HEAP8[$4 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $2;
   break;
  } else {
   HEAP8[$4 >> 0] = $2;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEEC2Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $7 = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 $4 = $0 + 64 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$4 + 12 >> 2] = 0;
 HEAP32[$4 + 16 >> 2] = 0;
 HEAP32[$4 + 20 >> 2] = 0;
 HEAP32[$0 + 88 >> 2] = 1065353216;
 __ZN6vision18BinomialPyramid32fC2Ev($0 + 92 | 0);
 $7 = $0 + 160 | 0;
 __ZN6vision25DoGScaleInvariantDetectorC2Ev($7);
 __ZN6vision14FREAKExtractorC2Ev($0 + 316 | 0);
 __ZN6vision20BinaryFeatureMatcherILi96EEC2Ev($0 + 636 | 0);
 __ZN6vision21HoughSimilarityVotingC2Ev($0 + 652 | 0);
 __ZN6vision16RobustHomographyIfEC2Efiii($0 + 788 | 0, .009999999776482582, 1024, 1064, 50);
 __ZN6vision25DoGScaleInvariantDetector21setLaplacianThresholdEf($7, 3.0);
 __ZN6vision25DoGScaleInvariantDetector16setEdgeThresholdEf($7, 4.0);
 __ZN6vision25DoGScaleInvariantDetector22setMaxNumFeaturePointsEm($7, 500);
 HEAPF32[$0 + 4 >> 2] = 3.0;
 HEAP32[$0 >> 2] = 8;
 HEAP8[$0 + 8 >> 0] = 1;
 return;
}

function __ZL14genBWImageHalfPhiiPiS0_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$041 = 0, $$042 = 0, $$043 = 0, $$044 = 0, $$1 = 0, $11 = 0, $5 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = ($1 | 0) / 2 | 0;
 HEAP32[$3 >> 2] = $5;
 $6 = ($2 | 0) / 2 | 0;
 HEAP32[$4 >> 2] = $6;
 $8 = _malloc(Math_imul($6, $5) | 0) | 0;
 if (!$8) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 }
 $$0 = 0;
 $$042 = $8;
 while (1) {
  if (($$0 | 0) >= ($6 | 0)) break;
  $11 = $$0 << 1;
  $$041 = 0;
  $$043 = $0 + (Math_imul($11, $1) | 0) | 0;
  $$044 = $0 + (Math_imul($11 | 1, $1) | 0) | 0;
  $$1 = $$042;
  while (1) {
   if (($$041 | 0) >= ($5 | 0)) break;
   HEAP8[$$1 >> 0] = ((HEAPU8[$$043 + 1 >> 0] | 0) + (HEAPU8[$$043 >> 0] | 0) + (HEAPU8[$$044 >> 0] | 0) + (HEAPU8[$$044 + 1 >> 0] | 0) | 0) >>> 2;
   $$041 = $$041 + 1 | 0;
   $$043 = $$043 + 2 | 0;
   $$044 = $$044 + 2 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$042 = $$1;
 }
 STACKTOP = sp;
 return $8 | 0;
}

function __ZN6vision5Image11shallowCopyERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phi$iZ2D = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $30 = 0, $32 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 HEAP32[$0 + 12 >> 2] = HEAP32[$1 + 12 >> 2];
 HEAP32[$0 + 16 >> 2] = HEAP32[$1 + 16 >> 2];
 HEAP32[$0 + 20 >> 2] = HEAP32[$1 + 20 >> 2];
 $20 = $0 + 24 | 0;
 $21 = HEAP32[$1 + 24 >> 2] | 0;
 HEAP32[$2 >> 2] = $21;
 $22 = $2 + 4 | 0;
 $24 = HEAP32[$1 + 28 >> 2] | 0;
 HEAP32[$22 >> 2] = $24;
 if (!$24) {
  $$pre$phi$iZ2D = $22;
  $32 = 0;
 } else {
  $26 = $24 + 4 | 0;
  HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 1;
  $$pre$phi$iZ2D = $22;
  $32 = HEAP32[$22 >> 2] | 0;
 }
 HEAP32[$2 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 $30 = $0 + 28 | 0;
 HEAP32[$$pre$phi$iZ2D >> 2] = HEAP32[$30 >> 2];
 HEAP32[$30 >> 2] = $32;
 __ZNSt3__210shared_ptrIhED2Ev($2);
 STACKTOP = sp;
 return;
}

function _icpGetJ_U_S($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$024 = 0, $$025 = 0, $$026 = 0, $15 = 0.0, $16 = 0.0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(224);
 $4 = sp + 48 | 0;
 $5 = sp;
 $6 = sp + 192 | 0;
 _icpGetJ_Xc_S($4, $6, $2, $3);
 L1 : do if ((_icpGetJ_U_Xc($5, $1, $6) | 0) < 0) {
  _arLog(0, 3, 18473, sp + 216 | 0);
  $$026 = -1;
 } else {
  $$024 = 0;
  while (1) {
   if (($$024 | 0) == 2) {
    $$026 = 0;
    break L1;
   }
   $$025 = 0;
   while (1) {
    if (($$025 | 0) == 6) break;
    $9 = $0 + ($$024 * 48 | 0) + ($$025 << 3) | 0;
    HEAPF64[$9 >> 3] = 0.0;
    $$0 = 0;
    $16 = 0.0;
    while (1) {
     if (($$0 | 0) == 3) break;
     $15 = $16 + +HEAPF64[$5 + ($$024 * 24 | 0) + ($$0 << 3) >> 3] * +HEAPF64[$4 + ($$0 * 48 | 0) + ($$025 << 3) >> 3];
     HEAPF64[$9 >> 3] = $15;
     $$0 = $$0 + 1 | 0;
     $16 = $15;
    }
    $$025 = $$025 + 1 | 0;
   }
   $$024 = $$024 + 1 | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$026 | 0;
}

function _set_bottom_pointers($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$043 = 0, $$045 = 0, $15 = 0, $17 = 0, $2 = 0, $20 = 0, $23 = 0, $30 = 0, $31 = 0, $32 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0;
 $2 = HEAP32[$0 + 424 >> 2] | 0;
 $6 = HEAP32[$0 + 36 >> 2] | 0;
 $7 = $0 + 316 | 0;
 $8 = $2 + 72 | 0;
 $9 = $2 + 64 | 0;
 $$0 = 0;
 $$043 = HEAP32[$0 + 216 >> 2] | 0;
 while (1) {
  if (($$0 | 0) >= ($6 | 0)) break;
  $15 = Math_imul(HEAP32[$$043 + 36 >> 2] | 0, HEAP32[$$043 + 12 >> 2] | 0) | 0;
  $17 = ($15 | 0) / (HEAP32[$7 >> 2] | 0) | 0;
  $20 = ((HEAP32[$$043 + 44 >> 2] | 0) >>> 0) % ($15 >>> 0) | 0;
  $spec$select = ($20 | 0) == 0 ? $15 : $20;
  $23 = $spec$select + -1 | 0;
  if (!$$0) HEAP32[$8 >> 2] = (($23 | 0) / ($17 | 0) | 0) + 1;
  $30 = HEAP32[(HEAP32[$2 + 56 + (HEAP32[$9 >> 2] << 2) >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $31 = $17 << 1;
  $32 = $30 + ($23 << 2) | 0;
  $$045 = 0;
  while (1) {
   if (($$045 | 0) >= ($31 | 0)) break;
   HEAP32[$30 + ($$045 + $spec$select << 2) >> 2] = HEAP32[$32 >> 2];
   $$045 = $$045 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$043 = $$043 + 84 | 0;
 }
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $13 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $4 = $0 + 8 | 0;
 $5 = $4 + 3 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $7 = $6 << 24 >> 24 < 0;
 if ($7) $10 = (HEAP32[$4 >> 2] & 2147483647) + -1 | 0; else $10 = 1;
 do if ($10 >>> 0 < $2 >>> 0) {
  if ($7) $23 = HEAP32[$0 + 4 >> 2] | 0; else $23 = $6 & 255;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE21__grow_by_and_replaceEmmmmmmPKw($0, $10, $2 - $10 | 0, $23, 0, $23, $2, $1);
 } else {
  if ($7) $13 = HEAP32[$0 >> 2] | 0; else $13 = $0;
  __ZNSt3__211char_traitsIwE4moveEPwPKwm($13, $1, $2) | 0;
  HEAP32[$3 >> 2] = 0;
  __ZNSt3__211char_traitsIwE6assignERwRKw($13 + ($2 << 2) | 0, $3);
  if ((HEAP8[$5 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $2;
   break;
  } else {
   HEAP8[$5 >> 0] = $2;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_12DbC2ILm4096EEERNS0_5arenaIXT_EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EEC2ERNS0_5arenaILm4096EEE($2, $1);
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = HEAP32[$2 >> 2];
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE($2, $1);
 __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEC2EmRKS6_RKS7_($0 + 16 | 0, $2);
 __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE($2, $1);
 __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEEC2EmRKS8_RKS9_($0 + 32 | 0, $2);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$1 = 0, $$1$ph = 0, $14 = 0, $17 = 0, $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $7 = $2 - $1 >> 2;
 if ($7 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 do if ($7 >>> 0 < 2) {
  HEAP8[$0 + 8 + 3 >> 0] = $7;
  $$1$ph = $0;
 } else {
  $14 = $7 + 4 & -4;
  if ($14 >>> 0 > 1073741823) _abort(); else {
   $17 = __Znwm($14 << 2) | 0;
   HEAP32[$0 >> 2] = $17;
   HEAP32[$0 + 8 >> 2] = $14 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $7;
   $$1$ph = $17;
   break;
  }
 } while (0);
 $$0 = $1;
 $$1 = $$1$ph;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  __ZNSt3__211char_traitsIwE6assignERwRKw($$1, $$0);
  $$0 = $$0 + 4 | 0;
  $$1 = $$1 + 4 | 0;
 }
 HEAP32[$3 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$1, $3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$1 = 0, $$1$ph = 0, $14 = 0, $17 = 0, $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $7 = $2 - $1 >> 2;
 if ($7 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 do if ($7 >>> 0 < 2) {
  HEAP8[$0 + 8 + 3 >> 0] = $7;
  $$1$ph = $0;
 } else {
  $14 = $7 + 4 & -4;
  if ($14 >>> 0 > 1073741823) _abort(); else {
   $17 = __Znwm($14 << 2) | 0;
   HEAP32[$0 >> 2] = $17;
   HEAP32[$0 + 8 >> 2] = $14 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $7;
   $$1$ph = $17;
   break;
  }
 } while (0);
 $$0 = $1;
 $$1 = $$1$ph;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  __ZNSt3__211char_traitsIwE6assignERwRKw($$1, $$0);
  $$0 = $$0 + 4 | 0;
  $$1 = $$1 + 4 | 0;
 }
 HEAP32[$3 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$1, $3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $15 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) {
  $14 = HEAP32[$0 + 4 >> 2] | 0;
  $15 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0;
 } else {
  $14 = $5 & 255;
  $15 = 10;
 }
 if (($15 - $14 | 0) >>> 0 < $2 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc($0, $15, $14 + $2 - $15 | 0, $14, $14, 0, $2, $1); else if ($2 | 0) {
  if ($6) $20 = HEAP32[$0 >> 2] | 0; else $20 = $0;
  __ZNSt3__211char_traitsIcE4copyEPcPKcm($20 + $14 | 0, $1, $2) | 0;
  $21 = $14 + $2 | 0;
  if ((HEAP8[$4 >> 0] | 0) < 0) HEAP32[$0 + 4 >> 2] = $21; else HEAP8[$4 >> 0] = $21;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($20 + $21 | 0, $3);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function _jinit_d_post_controller($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $14 = 0, $16 = 0, $18 = 0, $2 = 0, $23 = 0, $26 = 0, $28 = 0, $35 = 0, $36 = 0, $5 = 0, $7 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 $5 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$2 >> 2] >> 2] & 63]($0, 1, 28) | 0;
 HEAP32[$0 + 432 >> 2] = $5;
 HEAP32[$5 >> 2] = 44;
 $7 = $5 + 8 | 0;
 HEAP32[$7 >> 2] = 0;
 $8 = $5 + 12 | 0;
 HEAP32[$8 >> 2] = 0;
 do if (HEAP32[$0 + 84 >> 2] | 0) {
  $13 = HEAP32[$0 + 312 >> 2] | 0;
  $14 = $5 + 16 | 0;
  HEAP32[$14 >> 2] = $13;
  $16 = HEAP32[$2 >> 2] | 0;
  if (!$1) {
   $35 = Math_imul(HEAP32[$0 + 120 >> 2] | 0, HEAP32[$0 + 112 >> 2] | 0) | 0;
   $36 = FUNCTION_TABLE_iiiii[HEAP32[$16 + 8 >> 2] & 15]($0, 1, $35, $13) | 0;
   HEAP32[$8 >> 2] = $36;
   break;
  } else {
   $18 = HEAP32[$16 + 16 >> 2] | 0;
   $23 = Math_imul(HEAP32[$0 + 120 >> 2] | 0, HEAP32[$0 + 112 >> 2] | 0) | 0;
   $26 = _jround_up(HEAP32[$0 + 116 >> 2] | 0, $13) | 0;
   $28 = FUNCTION_TABLE_iiiiiii[$18 & 63]($0, 1, 0, $23, $26, HEAP32[$14 >> 2] | 0) | 0;
   HEAP32[$7 >> 2] = $28;
   break;
  }
 } while (0);
 return;
}

function __ZN6vision21OrientationAssignment5allocEmmiiiffif($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = +$6;
 $7 = +$7;
 $8 = $8 | 0;
 $9 = +$9;
 var $$0 = 0, $$024 = 0, $10 = 0, $17 = 0, $21 = 0, $22 = 0, $23 = 0;
 HEAP32[$0 >> 2] = $3;
 $10 = $0 + 4 | 0;
 HEAP32[$10 >> 2] = $4;
 HEAP32[$0 + 8 >> 2] = $5;
 HEAPF32[$0 + 12 >> 2] = $6;
 HEAPF32[$0 + 16 >> 2] = $7;
 HEAP32[$0 + 20 >> 2] = $8;
 HEAPF32[$0 + 24 >> 2] = $9;
 __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm($0 + 28 | 0, $5);
 $17 = $0 + 40 | 0;
 __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE6resizeEm($17, Math_imul(HEAP32[$10 >> 2] | 0, HEAP32[$0 >> 2] | 0) | 0);
 $$024 = 0;
 while (1) {
  if (($$024 | 0) == ($3 | 0)) break;
  $21 = Math_imul($$024, $4) | 0;
  $22 = $1 >>> $$024;
  $23 = $2 >>> $$024;
  $$0 = 0;
  while (1) {
   if (($$0 | 0) == ($4 | 0)) break;
   __ZN6vision5Image5allocENS_9ImageTypeEmmim((HEAP32[$17 >> 2] | 0) + ($$0 + $21 << 5) | 0, 2, $22, $23, -1, 2);
   $$0 = $$0 + 1 | 0;
  }
  $$024 = $$024 + 1 | 0;
 }
 return;
}

function _getMultiMarkerNum($id, $multiMarker_id) {
 $id = $id | 0;
 $multiMarker_id = $multiMarker_id | 0;
 var $1 = 0, $call7 = 0, $id$addr = 0, $retval$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  if (($multiMarker_id | 0) < 0) $retval$1 = -1; else {
   $1 = HEAP32[$call7 + 280 >> 2] | 0;
   if ((HEAP32[$call7 + 284 >> 2] | 0) - $1 >> 3 >>> 0 > $multiMarker_id >>> 0) $retval$1 = HEAP32[(HEAP32[$1 + ($multiMarker_id << 3) + 4 >> 2] | 0) + 4 >> 2] | 0; else $retval$1 = -1;
  }
 }
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZN6vision5ImageC2EPhNS_9ImageTypeEmmim($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $$sink = 0, $13 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 8 | 0;
 $$byval_copy = sp + 4 | 0;
 $8 = sp;
 HEAP32[$0 >> 2] = $2;
 HEAP32[$0 + 4 >> 2] = $3;
 HEAP32[$0 + 8 >> 2] = $4;
 HEAP32[$0 + 16 >> 2] = $6;
 $13 = Math_imul($5, $4) | 0;
 HEAP32[$0 + 20 >> 2] = $13;
 HEAP32[$8 >> 2] = 0;
 HEAP8[$$byval_copy >> 0] = HEAP8[sp + 12 >> 0] | 0;
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$8 >> 2];
 __ZNSt3__210shared_ptrIhEC2Ih16NullArrayDeleterIhEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS6_PhEE5valueENS1_5__natEE4typeE($0 + 24 | 0, $1, $$byval_copy, $$byval_copy1);
 if (($5 | 0) < 0) $$sink = Math_imul(Math_imul($6, $3) | 0, __ZN6vision5Image19calculate_unit_sizeENS_9ImageTypeE($2) | 0) | 0; else $$sink = $5;
 HEAP32[$0 + 12 >> 2] = $$sink;
 STACKTOP = sp;
 return;
}

function __ZN6vision27OrthogonalizePivot8x9Basis6IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $11 = 0, $12 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0.0, $9 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = $0 + 216 | 0;
 $4 = $0 + 180 | 0;
 $5 = $1 + 216 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($3, $4, $5);
 $6 = $0 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($6, $4, $1 + 252 | 0);
 $8 = +__ZN6vision11SumSquares9IfEET_PKS1_($3);
 HEAPF32[$2 >> 2] = $8;
 $9 = +__ZN6vision11SumSquares9IfEET_PKS1_($6);
 HEAPF32[$2 + 4 >> 2] = $9;
 $11 = __ZN6vision9MaxIndex2IfEEiPKT_($2) | 0;
 $12 = $2 + ($11 << 2) | 0;
 if (+HEAPF32[$12 >> 2] == 0.0) $$0 = 0; else {
  $15 = $11 * 9 | 0;
  __ZN6vision5Swap9IfEEvPT_S2_($3, $3 + ($15 << 2) | 0);
  __ZN6vision5Swap9IfEEvPT_S2_($5, $5 + ($15 << 2) | 0);
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($3, $3, 1.0 / +Math_sqrt(+(+HEAPF32[$12 >> 2])));
  $$0 = 1;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZN6vision11ScopedTimerD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $13 = 0.0, $14 = 0, $2 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $vararg_buffer = sp;
 $1 = sp + 24 | 0;
 __ZN6vision5Timer4stopEv($0);
 $2 = __ZN6vision6Logger11getInstanceEv() | 0;
 __ZN6vision15get_pretty_timeEv($1);
 $7 = (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1;
 $8 = $0 + 16 | 0;
 if ((HEAP8[$8 + 11 >> 0] | 0) < 0) $14 = HEAP32[$8 >> 2] | 0; else $14 = $8;
 $13 = +__ZNK6vision5Timer24duration_in_millisecondsEv($0);
 HEAP32[$vararg_buffer >> 2] = 33657;
 HEAP32[$vararg_buffer + 4 >> 2] = $7;
 HEAP32[$vararg_buffer + 8 >> 2] = 33665;
 HEAP32[$vararg_buffer + 12 >> 2] = $14;
 HEAPF64[$vararg_buffer + 16 >> 3] = $13;
 __ZN6vision6Logger5writeENS_19LoggerPriorityLevelEPKcz($2, 8, 33630, $vararg_buffer);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($8);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EEPi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $13 = 0, $15 = 0, $16 = 0, $22 = 0, $24 = 0, $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0;
 $3 = $1 + 4 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = HEAP32[$0 >> 2] | 0;
 $6 = $2;
 $8 = $6 - $5 | 0;
 $11 = $4 + (0 - ($8 >> 2) << 2) | 0;
 HEAP32[$3 >> 2] = $11;
 if (($8 | 0) > 0) _memcpy($11 | 0, $5 | 0, $8 | 0) | 0;
 $13 = $0 + 4 | 0;
 $15 = $1 + 8 | 0;
 $16 = (HEAP32[$13 >> 2] | 0) - $6 | 0;
 if (($16 | 0) > 0) {
  _memcpy(HEAP32[$15 >> 2] | 0, $2 | 0, $16 | 0) | 0;
  HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + ($16 >>> 2 << 2);
 }
 $22 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$3 >> 2] = $22;
 $24 = HEAP32[$13 >> 2] | 0;
 HEAP32[$13 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$15 >> 2] = $24;
 $26 = $0 + 8 | 0;
 $27 = $1 + 12 | 0;
 $28 = HEAP32[$26 >> 2] | 0;
 HEAP32[$26 >> 2] = HEAP32[$27 >> 2];
 HEAP32[$27 >> 2] = $28;
 HEAP32[$1 >> 2] = HEAP32[$3 >> 2];
 return $4 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $13 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) $10 = (HEAP32[$0 + 8 >> 2] & 2147483647) + -1 | 0; else $10 = 10;
 do if ($10 >>> 0 < $2 >>> 0) {
  if ($6) $23 = HEAP32[$0 + 4 >> 2] | 0; else $23 = $5 & 255;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE21__grow_by_and_replaceEmmmmmmPKc($0, $10, $2 - $10 | 0, $23, 0, $23, $2, $1);
 } else {
  if ($6) $13 = HEAP32[$0 >> 2] | 0; else $13 = $0;
  __ZNSt3__211char_traitsIcE4moveEPcPKcm($13, $1, $2) | 0;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($13 + $2 | 0, $3);
  if ((HEAP8[$4 >> 0] | 0) < 0) {
   HEAP32[$0 + 4 >> 2] = $2;
   break;
  } else {
   HEAP8[$4 >> 0] = $2;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $0 | 0;
}

function _kpmChangePageNoOfRefDataSet($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$028 = 0, $$029 = 0, $10 = 0, $12 = 0, $13 = 0, $19 = 0, $20 = 0, $5 = 0, $6 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 L1 : do if (!$0) {
  _arLog(0, 3, 20229, sp);
  $$029 = -1;
 } else {
  $5 = HEAP32[$0 + 4 >> 2] | 0;
  $6 = ($1 | 0) == -1;
  $$028 = 0;
  while (1) {
   if (($$028 | 0) >= ($5 | 0)) break;
   $12 = (HEAP32[$0 >> 2] | 0) + ($$028 * 132 | 0) + 124 | 0;
   $13 = HEAP32[$12 >> 2] | 0;
   if (($13 | 0) == ($1 | 0) | $6 & ($13 | 0) > -1) HEAP32[$12 >> 2] = $2;
   $$028 = $$028 + 1 | 0;
  }
  $9 = HEAP32[$0 + 12 >> 2] | 0;
  $10 = $0 + 8 | 0;
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= ($9 | 0)) {
    $$029 = 0;
    break L1;
   }
   $19 = (HEAP32[$10 >> 2] | 0) + ($$0 * 12 | 0) + 8 | 0;
   $20 = HEAP32[$19 >> 2] | 0;
   if (($20 | 0) == ($1 | 0) | $6 & ($20 | 0) > -1) HEAP32[$19 >> 2] = $2;
   $$0 = $$0 + 1 | 0;
  }
 } while (0);
 STACKTOP = sp;
 return $$029 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$021 = 0, $$1 = 0, $12 = 0, $13 = 0, $18 = 0, $3 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = $1;
 $4 = sp;
 $6 = $2 - $3 | 0;
 if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($6 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $6;
  $$021 = $0;
 } else {
  $12 = $6 + 16 & -16;
  $13 = __Znwm($12) | 0;
  HEAP32[$0 >> 2] = $13;
  HEAP32[$0 + 8 >> 2] = $12 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $6;
  $$021 = $13;
 }
 $18 = $2 - $3 | 0;
 $$0 = $1;
 $$1 = $$021;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$1, $$0);
  $$0 = $$0 + 1 | 0;
  $$1 = $$1 + 1 | 0;
 }
 HEAP8[$4 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$021 + $18 | 0, $4);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$021 = 0, $$1 = 0, $12 = 0, $13 = 0, $18 = 0, $3 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = $1;
 $4 = sp;
 $6 = $2 - $3 | 0;
 if ($6 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($6 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $6;
  $$021 = $0;
 } else {
  $12 = $6 + 16 & -16;
  $13 = __Znwm($12) | 0;
  HEAP32[$0 >> 2] = $13;
  HEAP32[$0 + 8 >> 2] = $12 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $6;
  $$021 = $13;
 }
 $18 = $2 - $3 | 0;
 $$0 = $1;
 $$1 = $$021;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  __ZNSt3__211char_traitsIcE6assignERcRKc($$1, $$0);
  $$0 = $$0 + 1 | 0;
  $$1 = $$1 + 1 | 0;
 }
 HEAP8[$4 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$021 + $18 | 0, $4);
 STACKTOP = sp;
 return;
}

function __ZN6vision16Quadratic3PointsIfEEbRT_S2_S2_PKS1_S4_S4_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $17 = 0.0, $21 = 0, $22 = 0.0, $25 = 0, $29 = 0.0, $36 = 0.0, $6 = 0.0, $7 = 0.0, $9 = 0.0, $storemerge = 0.0;
 $6 = +HEAPF32[$5 >> 2];
 $7 = +HEAPF32[$4 >> 2];
 $9 = +HEAPF32[$3 >> 2];
 $10 = $6 - $9;
 $11 = ($6 - $7) * $10;
 $12 = $9 - $7;
 $13 = $12 * $10;
 if ($12 == 0.0 | ($11 == 0.0 | $13 == 0.0)) {
  HEAPF32[$0 >> 2] = 0.0;
  HEAPF32[$1 >> 2] = 0.0;
  $$0 = 0;
  $storemerge = 0.0;
 } else {
  $17 = $9 * $9;
  $21 = $4 + 4 | 0;
  $22 = +HEAPF32[$21 >> 2];
  $25 = $3 + 4 | 0;
  $29 = (+HEAPF32[$5 + 4 >> 2] - $22) / $11 - (+HEAPF32[$25 >> 2] - $22) / $13;
  HEAPF32[$0 >> 2] = $29;
  $36 = (+HEAPF32[$25 >> 2] - +HEAPF32[$21 >> 2] + ($7 * $7 - $17) * $29) / $12;
  HEAPF32[$1 >> 2] = $36;
  $$0 = 1;
  $storemerge = +HEAPF32[$25 >> 2] - $17 * +HEAPF32[$0 >> 2] - $36 * +HEAPF32[$3 >> 2];
 }
 HEAPF32[$2 >> 2] = $storemerge;
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_unscoped_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$026$off0 = 0, $$027 = 0, $$1 = 0, $12 = 0, $17 = 0, $18 = 0, $21 = 0;
 if (($1 - $0 | 0) > 1) {
  if ((HEAP8[$0 >> 0] | 0) == 83) if ((HEAP8[$0 + 1 >> 0] | 0) == 116) {
   $12 = $0 + 2 | 0;
   if (($12 | 0) == ($1 | 0)) {
    $$026$off0 = 0;
    $$027 = $1;
   } else {
    $$026$off0 = 0;
    $$027 = (HEAP8[$12 >> 0] | 0) == 76 ? $0 + 3 | 0 : $12;
   }
  } else {
   $$026$off0 = 1;
   $$027 = $0;
  } else {
   $$026$off0 = 1;
   $$027 = $0;
  }
  $17 = __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($$027, $1, $2) | 0;
  $18 = ($17 | 0) == ($$027 | 0);
  if ($$026$off0 | $18) $$1 = $18 ? $0 : $17; else {
   $21 = HEAP32[$2 + 4 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($21 | 0)) $$1 = $0; else {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($21 + -24 | 0, 0, 49925) | 0;
    $$1 = $17;
   }
  }
 } else $$1 = $0;
 return $$1 | 0;
}

function __ZL15loadMultiMarkerPKcP8ARHandlePP12ARPattHandlePP18ARMultiMarkerInfoT($patt_name, $arHandle, $pattHandle_p, $arMultiConfig) {
 $patt_name = $patt_name | 0;
 $arHandle = $arHandle | 0;
 $pattHandle_p = $pattHandle_p | 0;
 $arMultiConfig = $arMultiConfig | 0;
 var $call = 0, $retval$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $call = _arMultiReadConfigFile($patt_name, HEAP32[$pattHandle_p >> 2] | 0) | 0;
 HEAP32[$arMultiConfig >> 2] = $call;
 L1 : do if (!$call) {
  _arLog(0, 3, 44272, sp);
  _arPattDeleteHandle(HEAP32[$pattHandle_p >> 2] | 0) | 0;
  $retval$0 = 0;
 } else switch (HEAP32[$call + 108 >> 2] | 0) {
 case 0:
  {
   _arSetPatternDetectionMode($arHandle, 0) | 0;
   $retval$0 = 1;
   break L1;
   break;
  }
 case 1:
  {
   _arSetPatternDetectionMode($arHandle, 2) | 0;
   $retval$0 = 1;
   break L1;
   break;
  }
 default:
  {
   _arSetPatternDetectionMode($arHandle, 3) | 0;
   $retval$0 = 1;
   break L1;
  }
 } while (0);
 STACKTOP = sp;
 return $retval$0 | 0;
}

function _setDebugMode($id, $enable) {
 $id = $id | 0;
 $enable = $enable | 0;
 var $arhandle = 0, $id$addr = 0, $retval$0 = 0, $tobool = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $id$addr = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0 = 0; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $tobool = ($enable | 0) != 0;
  _arSetDebugMode(HEAP32[$arhandle >> 2] | 0, $tobool & 1) | 0;
  HEAP32[$vararg_buffer >> 2] = $tobool ? 40782 : 40786;
  _arLog(0, 1, 40791, $vararg_buffer);
  $retval$0 = $enable;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function __ZN6vision18BinomialPyramid32f5allocEmmi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$022 = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $19 = 0, $4 = 0, $5 = 0;
 __ZN6vision25GaussianScaleSpacePyramid9configureEii($0, $3, 3);
 $4 = $0 + 4 | 0;
 $5 = $0 + 20 | 0;
 __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE6resizeEm($4, Math_imul(HEAP32[$5 >> 2] | 0, $3) | 0);
 $$022 = 0;
 while (1) {
  if (($$022 | 0) >= ($3 | 0)) break;
  $13 = $1 >>> $$022;
  $14 = $2 >>> $$022;
  $$0 = 0;
  while (1) {
   $15 = HEAP32[$5 >> 2] | 0;
   if ($$0 >>> 0 >= $15 >>> 0) break;
   $19 = (Math_imul($15, $$022) | 0) + $$0 | 0;
   __ZN6vision5Image5allocENS_9ImageTypeEmmim((HEAP32[$4 >> 2] | 0) + ($19 << 5) | 0, 2, $13, $14, -1, 1);
   $$0 = $$0 + 1 | 0;
  }
  $$022 = $$022 + 1 | 0;
 }
 $10 = Math_imul($2, $1) | 0;
 __ZNSt3__26vectorItNS_9allocatorItEEE6resizeEm($0 + 32 | 0, $10);
 __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm($0 + 44 | 0, $10);
 __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm($0 + 56 | 0, $10);
 return;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $10 = 0, $15 = 0, $16 = 0, $2 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $5 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $9 = $$0$i + -8 | 0;
  $10 = $9;
  $15 = HEAP32[$10 + 4 >> 2] | 0;
  $16 = (HEAP32[$5 >> 2] | 0) + -8 | 0;
  HEAP32[$16 >> 2] = HEAP32[$10 >> 2];
  HEAP32[$16 + 4 >> 2] = $15;
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -8;
  $$0$i = $9;
 }
 $22 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $22;
 $24 = $1 + 8 | 0;
 $25 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$24 >> 2];
 HEAP32[$24 >> 2] = $25;
 $27 = $0 + 8 | 0;
 $28 = $1 + 12 | 0;
 $29 = HEAP32[$27 >> 2] | 0;
 HEAP32[$27 >> 2] = HEAP32[$28 >> 2];
 HEAP32[$28 >> 2] = $29;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_117parse_call_offsetEPKcS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$3 = 0, $12 = 0, $13 = 0, $18 = 0, $19 = 0, $5 = 0, $6 = 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$3 = $0; else {
  switch (HEAP8[$0 >> 0] | 0) {
  case 104:
   {
    $5 = $0 + 1 | 0;
    $6 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($5, $1) | 0;
    if (($6 | 0) == ($5 | 0) | ($6 | 0) == ($1 | 0)) {
     $$3 = $0;
     break L1;
    }
    return ((HEAP8[$6 >> 0] | 0) == 95 ? $6 + 1 | 0 : $0) | 0;
   }
  case 118:
   break;
  default:
   {
    $$3 = $0;
    break L1;
   }
  }
  $12 = $0 + 1 | 0;
  $13 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($12, $1) | 0;
  if (($13 | 0) == ($12 | 0) | ($13 | 0) == ($1 | 0)) $$3 = $0; else if ((HEAP8[$13 >> 0] | 0) == 95) {
   $18 = $13 + 1 | 0;
   $19 = __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($18, $1) | 0;
   if (($19 | 0) == ($18 | 0) | ($19 | 0) == ($1 | 0)) $$3 = $0; else $$3 = (HEAP8[$19 >> 0] | 0) == 95 ? $19 + 1 | 0 : $0;
  } else $$3 = $0;
 } while (0);
 return $$3 | 0;
}

function _arUtilMatInvf($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$030 = 0, $$1 = 0, $$131 = 0, $12 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0;
 $2 = _arMatrixAlloc(4, 4) | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 3) break;
  $3 = $$0 << 2;
  $$030 = 0;
  while (1) {
   if (($$030 | 0) == 4) break;
   HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$030 + $3 << 3) >> 3] = +HEAPF32[$0 + ($$0 << 4) + ($$030 << 2) >> 2];
   $$030 = $$030 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
 }
 $12 = HEAP32[$2 >> 2] | 0;
 $13 = $12 + 96 | 0;
 HEAP32[$13 >> 2] = 0;
 HEAP32[$13 + 4 >> 2] = 0;
 HEAP32[$13 + 8 >> 2] = 0;
 HEAP32[$13 + 12 >> 2] = 0;
 HEAP32[$13 + 16 >> 2] = 0;
 HEAP32[$13 + 20 >> 2] = 0;
 HEAPF64[$12 + 120 >> 3] = 1.0;
 _arMatrixSelfInv($2) | 0;
 $$1 = 0;
 while (1) {
  if (($$1 | 0) == 3) break;
  $15 = $$1 << 2;
  $$131 = 0;
  while (1) {
   if (($$131 | 0) == 4) break;
   HEAPF32[$1 + ($$1 << 4) + ($$131 << 2) >> 2] = +HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$131 + $15 << 3) >> 3];
   $$131 = $$131 + 1 | 0;
  }
  $$1 = $$1 + 1 | 0;
 }
 _arMatrixFree($2) | 0;
 return 0;
}

function _arUtilMatInv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$030 = 0, $$1 = 0, $$131 = 0, $11 = 0, $12 = 0, $14 = 0, $2 = 0, $3 = 0;
 $2 = _arMatrixAlloc(4, 4) | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 3) break;
  $3 = $$0 << 2;
  $$030 = 0;
  while (1) {
   if (($$030 | 0) == 4) break;
   HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$030 + $3 << 3) >> 3] = +HEAPF64[$0 + ($$0 << 5) + ($$030 << 3) >> 3];
   $$030 = $$030 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
 }
 $11 = HEAP32[$2 >> 2] | 0;
 $12 = $11 + 96 | 0;
 HEAP32[$12 >> 2] = 0;
 HEAP32[$12 + 4 >> 2] = 0;
 HEAP32[$12 + 8 >> 2] = 0;
 HEAP32[$12 + 12 >> 2] = 0;
 HEAP32[$12 + 16 >> 2] = 0;
 HEAP32[$12 + 20 >> 2] = 0;
 HEAPF64[$11 + 120 >> 3] = 1.0;
 _arMatrixSelfInv($2) | 0;
 $$1 = 0;
 while (1) {
  if (($$1 | 0) == 3) break;
  $14 = $$1 << 2;
  $$131 = 0;
  while (1) {
   if (($$131 | 0) == 4) break;
   HEAPF64[$1 + ($$1 << 5) + ($$131 << 3) >> 3] = +HEAPF64[(HEAP32[$2 >> 2] | 0) + ($$131 + $14 << 3) >> 3];
   $$131 = $$131 + 1 | 0;
  }
  $$1 = $$1 + 1 | 0;
 }
 _arMatrixFree($2) | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwl($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$pn = 0, $12 = 0, $13 = 0, $15 = 0, $22 = 0, $24 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 __ZNSt3__211char_traitsIwE3eofEv() | 0;
 $3 = $0 + 12 | 0;
 $4 = $0 + 16 | 0;
 $$0 = $1;
 $$023 = 0;
 while (1) {
  if (($$023 | 0) >= ($2 | 0)) break;
  $6 = HEAP32[$3 >> 2] | 0;
  $7 = HEAP32[$4 >> 2] | 0;
  if ($6 >>> 0 < $7 >>> 0) {
   $12 = $7 - $6 >> 2;
   $13 = $2 - $$023 | 0;
   $15 = ($13 | 0) < ($12 | 0) ? $13 : $12;
   __ZNSt3__211char_traitsIwE4copyEPwPKwm($$0, $6, $15) | 0;
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + ($15 << 2);
   $$1 = $$0 + ($15 << 2) | 0;
   $$pn = $15;
  } else {
   $22 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 127]($0) | 0;
   if (($22 | 0) == -1) break;
   $24 = __ZNSt3__211char_traitsIwE12to_char_typeEj($22) | 0;
   HEAP32[$$0 >> 2] = $24;
   $$1 = $$0 + 4 | 0;
   $$pn = 1;
  }
  $$0 = $$1;
  $$023 = $$pn + $$023 | 0;
 }
 return $$023 | 0;
}

function __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $17 = 0, $23 = 0, $29 = 0, $3 = 0.0, $35 = 0, $41 = 0, $47 = 0, $53 = 0;
 $3 = +__ZN6vision11DotProduct9IfEET_PKS1_S3_($2, $1);
 HEAPF32[$0 >> 2] = +HEAPF32[$0 >> 2] - $3 * +HEAPF32[$1 >> 2];
 $11 = $0 + 4 | 0;
 HEAPF32[$11 >> 2] = +HEAPF32[$11 >> 2] - $3 * +HEAPF32[$1 + 4 >> 2];
 $17 = $0 + 8 | 0;
 HEAPF32[$17 >> 2] = +HEAPF32[$17 >> 2] - $3 * +HEAPF32[$1 + 8 >> 2];
 $23 = $0 + 12 | 0;
 HEAPF32[$23 >> 2] = +HEAPF32[$23 >> 2] - $3 * +HEAPF32[$1 + 12 >> 2];
 $29 = $0 + 16 | 0;
 HEAPF32[$29 >> 2] = +HEAPF32[$29 >> 2] - $3 * +HEAPF32[$1 + 16 >> 2];
 $35 = $0 + 20 | 0;
 HEAPF32[$35 >> 2] = +HEAPF32[$35 >> 2] - $3 * +HEAPF32[$1 + 20 >> 2];
 $41 = $0 + 24 | 0;
 HEAPF32[$41 >> 2] = +HEAPF32[$41 >> 2] - $3 * +HEAPF32[$1 + 24 >> 2];
 $47 = $0 + 28 | 0;
 HEAPF32[$47 >> 2] = +HEAPF32[$47 >> 2] - $3 * +HEAPF32[$1 + 28 >> 2];
 $53 = $0 + 32 | 0;
 HEAPF32[$53 >> 2] = +HEAPF32[$53 >> 2] - $3 * +HEAPF32[$1 + 32 >> 2];
 return;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $10 = (HEAP32[$5 >> 2] | 0) + ((($7 | 0) / -36 | 0) * 36 | 0) | 0;
 HEAP32[$5 >> 2] = $10;
 if (($7 | 0) > 0) {
  _memcpy($10 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $14 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $14 = $10;
 }
 $13 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $14;
 HEAP32[$$pre$phiZ2D >> 2] = $13;
 $15 = $1 + 8 | 0;
 $16 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$15 >> 2] = $16;
 $18 = $0 + 8 | 0;
 $19 = $1 + 12 | 0;
 $20 = HEAP32[$18 >> 2] | 0;
 HEAP32[$18 >> 2] = HEAP32[$19 >> 2];
 HEAP32[$19 >> 2] = $20;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function _getPattRatio($id) {
 $id = $id | 0;
 var $0 = 0, $arhandle = 0, $cmp = 0, $id$addr = 0, $pattRatio = 0, $retval$0 = 0.0, $retval$1 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp + 8 | 0;
 $pattRatio = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = -1.0; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $0 = HEAP32[$arhandle >> 2] | 0;
  if (!$0) $retval$0 = -1.0; else {
   $cmp = (_arGetPattRatio($0, $pattRatio) | 0) == 0;
   $retval$0 = $cmp ? +HEAPF64[$pattRatio >> 3] : -1.0;
  }
  $retval$1 = $retval$0;
 }
 STACKTOP = sp;
 return +$retval$1;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_($agg$result, $this, $__hash, $__f, $__rest, $__rest1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__hash = $__hash | 0;
 $__f = $__f | 0;
 $__rest = $__rest | 0;
 $__rest1 = $__rest1 | 0;
 var $call$i$i$i = 0, $second$i$i$i$i$i = 0;
 $call$i$i$i = __Znwm(448) | 0;
 HEAP32[$agg$result >> 2] = $call$i$i$i;
 HEAP32[$agg$result + 4 >> 2] = $this + 8;
 HEAP32[$call$i$i$i + 8 >> 2] = HEAP32[HEAP32[$__rest >> 2] >> 2];
 $second$i$i$i$i$i = $call$i$i$i + 16 | 0;
 _memset($second$i$i$i$i$i | 0, 0, 432) | 0;
 __ZN12arControllerC2Ev($second$i$i$i$i$i);
 HEAP8[$agg$result + 8 >> 0] = 1;
 HEAP32[$call$i$i$i + 4 >> 2] = $__hash;
 HEAP32[$call$i$i$i >> 2] = 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$023 = 0, $$1 = 0, $$pn = 0, $11 = 0, $12 = 0, $14 = 0, $21 = 0, $23 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 __ZNSt3__211char_traitsIcE3eofEv() | 0;
 $3 = $0 + 12 | 0;
 $4 = $0 + 16 | 0;
 $$0 = $1;
 $$023 = 0;
 while (1) {
  if (($$023 | 0) >= ($2 | 0)) break;
  $6 = HEAP32[$3 >> 2] | 0;
  $7 = HEAP32[$4 >> 2] | 0;
  if ($6 >>> 0 < $7 >>> 0) {
   $11 = $7 - $6 | 0;
   $12 = $2 - $$023 | 0;
   $14 = ($12 | 0) < ($11 | 0) ? $12 : $11;
   __ZNSt3__211char_traitsIcE4copyEPcPKcm($$0, $6, $14) | 0;
   HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + $14;
   $$1 = $$0 + $14 | 0;
   $$pn = $14;
  } else {
   $21 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 40 >> 2] & 127]($0) | 0;
   if (($21 | 0) == -1) break;
   $23 = __ZNSt3__211char_traitsIcE12to_char_typeEi($21) | 0;
   HEAP8[$$0 >> 0] = $23;
   $$1 = $$0 + 1 | 0;
   $$pn = 1;
  }
  $$0 = $$1;
  $$023 = $$pn + $$023 | 0;
 }
 return $$023 | 0;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$2 = 0, $3 = 0, $6 = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(64);
 $3 = sp;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, $1, 0) | 0) $$2 = 1; else if (!$1) $$2 = 0; else {
  $6 = ___dynamic_cast($1, 13232, 13216, 0) | 0;
  if (!$6) $$2 = 0; else {
   dest = $3 + 4 | 0;
   stop = dest + 52 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$3 >> 2] = $6;
   HEAP32[$3 + 8 >> 2] = $0;
   HEAP32[$3 + 12 >> 2] = -1;
   HEAP32[$3 + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 28 >> 2] & 31]($6, $3, HEAP32[$2 >> 2] | 0, 1);
   if ((HEAP32[$3 + 24 >> 2] | 0) == 1) {
    HEAP32[$2 >> 2] = HEAP32[$3 + 16 >> 2];
    $$0 = 1;
   } else $$0 = 0;
   $$2 = $$0;
  }
 }
 STACKTOP = sp;
 return $$2 | 0;
}

function _setPattRatio($id, $ratio) {
 $id = $id | 0;
 $ratio = +$ratio;
 var $0 = 0, $call7 = 0, $conv = 0.0, $id$addr = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $id$addr = sp + 8 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0) {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  if (!($ratio <= 0.0 | $ratio >= 1.0)) {
   $conv = $ratio;
   $0 = HEAP32[$call7 + 216 >> 2] | 0;
   if ($0 | 0) if (!(_arSetPattRatio($0, $conv) | 0)) {
    HEAPF64[$vararg_buffer >> 3] = $conv;
    _arLog(0, 1, 40648, $vararg_buffer);
   }
  }
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__grow_byEmmmmmm($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $$sroa$speculated = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $23 = 0, $25 = 0;
 if ((-17 - $1 | 0) >>> 0 < $2 >>> 0) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) $23 = HEAP32[$0 >> 2] | 0; else $23 = $0;
 if ($1 >>> 0 < 2147483623) {
  $14 = $2 + $1 | 0;
  $15 = $1 << 1;
  $$sroa$speculated = $14 >>> 0 < $15 >>> 0 ? $15 : $14;
  $20 = $$sroa$speculated >>> 0 < 11 ? 11 : $$sroa$speculated + 16 & -16;
 } else $20 = -17;
 $21 = __Znwm($20) | 0;
 if ($4 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($21, $23, $4) | 0;
 $25 = $3 - $5 - $4 | 0;
 if ($25 | 0) __ZNSt3__211char_traitsIcE4copyEPcPKcm($21 + $4 + $6 | 0, $23 + $4 + $5 | 0, $25) | 0;
 if (($1 | 0) != 10) __ZdlPv($23);
 HEAP32[$0 >> 2] = $21;
 HEAP32[$0 + 8 >> 2] = $20 | -2147483648;
 return;
}

function ___fseeko_unlocked($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $12 = 0, $14 = 0, $16 = 0, $26 = 0, $27 = 0, $9 = 0, label = 0;
 if (($3 | 0) == 1) {
  $9 = (HEAP32[$0 + 8 >> 2] | 0) - (HEAP32[$0 + 4 >> 2] | 0) | 0;
  $12 = _i64Subtract($1 | 0, $2 | 0, $9 | 0, (($9 | 0) < 0) << 31 >> 31 | 0) | 0;
  $26 = $12;
  $27 = getTempRet0() | 0;
 } else {
  $26 = $1;
  $27 = $2;
 }
 $14 = $0 + 20 | 0;
 $16 = $0 + 28 | 0;
 if ((HEAP32[$14 >> 2] | 0) >>> 0 > (HEAP32[$16 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
  if (!(HEAP32[$14 >> 2] | 0)) $$0 = -1; else label = 5;
 } else label = 5;
 if ((label | 0) == 5) {
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$16 >> 2] = 0;
  HEAP32[$14 >> 2] = 0;
  FUNCTION_TABLE_iiiii[HEAP32[$0 + 40 >> 2] & 15]($0, $26, $27, $3) | 0;
  if ((getTempRet0() | 0) < 0) $$0 = -1; else {
   HEAP32[$0 + 8 >> 2] = 0;
   HEAP32[$0 + 4 >> 2] = 0;
   HEAP32[$0 >> 2] = HEAP32[$0 >> 2] & -17;
   $$0 = 0;
  }
 }
 return $$0 | 0;
}

function _fputc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $13 = 0, $14 = 0, $20 = 0, $21 = 0, $26 = 0, $27 = 0, $33 = 0, $7 = 0, $8 = 0, label = 0;
 if ((HEAP32[$1 + 76 >> 2] | 0) < 0) label = 3; else if (!(___lockfile($1) | 0)) label = 3; else {
  $20 = $0 & 255;
  $21 = $0 & 255;
  if (($21 | 0) == (HEAP8[$1 + 75 >> 0] | 0)) label = 10; else {
   $26 = $1 + 20 | 0;
   $27 = HEAP32[$26 >> 2] | 0;
   if ($27 >>> 0 < (HEAP32[$1 + 16 >> 2] | 0) >>> 0) {
    HEAP32[$26 >> 2] = $27 + 1;
    HEAP8[$27 >> 0] = $20;
    $33 = $21;
   } else label = 10;
  }
  if ((label | 0) == 10) $33 = ___overflow($1, $0) | 0;
  ___unlockfile($1);
  $$0 = $33;
 }
 do if ((label | 0) == 3) {
  $7 = $0 & 255;
  $8 = $0 & 255;
  if (($8 | 0) != (HEAP8[$1 + 75 >> 0] | 0)) {
   $13 = $1 + 20 | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   if ($14 >>> 0 < (HEAP32[$1 + 16 >> 2] | 0) >>> 0) {
    HEAP32[$13 >> 2] = $14 + 1;
    HEAP8[$14 >> 0] = $7;
    $$0 = $8;
    break;
   }
  }
  $$0 = ___overflow($1, $0) | 0;
 } while (0);
 return $$0 | 0;
}

function _pass2_no_dither($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$047 = 0, $$048 = 0, $$049 = 0, $19 = 0, $23 = 0, $27 = 0, $30 = 0, $31 = 0, $34 = 0, $7 = 0, $9 = 0;
 $7 = HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 24 >> 2] | 0;
 $9 = HEAP32[$0 + 112 >> 2] | 0;
 $$048 = 0;
 while (1) {
  if (($$048 | 0) >= ($3 | 0)) break;
  $$0 = HEAP32[$1 + ($$048 << 2) >> 2] | 0;
  $$047 = $9;
  $$049 = HEAP32[$2 + ($$048 << 2) >> 2] | 0;
  while (1) {
   if (!$$047) break;
   $19 = (HEAPU8[$$0 >> 0] | 0) >>> 3;
   $23 = (HEAPU8[$$0 + 1 >> 0] | 0) >>> 2;
   $27 = (HEAPU8[$$0 + 2 >> 0] | 0) >>> 3;
   $30 = (HEAP32[$7 + ($19 << 2) >> 2] | 0) + ($23 << 6) + ($27 << 1) | 0;
   $31 = HEAP16[$30 >> 1] | 0;
   if (!($31 << 16 >> 16)) {
    _fill_inverse_cmap($0, $19, $23, $27);
    $34 = HEAP16[$30 >> 1] | 0;
   } else $34 = $31;
   HEAP8[$$049 >> 0] = ($34 & 65535) + 255;
   $$0 = $$0 + 3 | 0;
   $$047 = $$047 + -1 | 0;
   $$049 = $$049 + 1 | 0;
  }
  $$048 = $$048 + 1 | 0;
 }
 return;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $10 = (HEAP32[$5 >> 2] | 0) + ((($7 | 0) / -12 | 0) * 12 | 0) | 0;
 HEAP32[$5 >> 2] = $10;
 if (($7 | 0) > 0) {
  _memcpy($10 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $14 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $14 = $10;
 }
 $13 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $14;
 HEAP32[$$pre$phiZ2D >> 2] = $13;
 $15 = $1 + 8 | 0;
 $16 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$15 >> 2] = $16;
 $18 = $0 + 8 | 0;
 $19 = $1 + 12 | 0;
 $20 = HEAP32[$18 >> 2] | 0;
 HEAP32[$18 >> 2] = HEAP32[$19 >> 2];
 HEAP32[$19 >> 2] = $20;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $11 = (HEAP32[$5 >> 2] | 0) + (0 - ($7 >> 2) << 2) | 0;
 HEAP32[$5 >> 2] = $11;
 if (($7 | 0) > 0) {
  _memcpy($11 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $15 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $15 = $11;
 }
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$$pre$phiZ2D >> 2] = $14;
 $16 = $1 + 8 | 0;
 $17 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$16 >> 2] = $17;
 $19 = $0 + 8 | 0;
 $20 = $1 + 12 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZN6vision6Logger5writeENS_19LoggerPriorityLevelEPKcz($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp;
 $4 = sp + 28 | 0;
 $5 = sp + 16 | 0;
 HEAP32[$3 >> 2] = $varargs;
 HEAP32[$5 >> 2] = 0;
 HEAP32[$5 + 4 >> 2] = 0;
 HEAP32[$5 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($5, $2, __ZNSt3__211char_traitsIcE6lengthEPKc($2) | 0);
 __ZN6vision6detail23create_formatted_stringERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPi($4, $5, $3);
 __ZN6vision6Logger5writeENS_19LoggerPriorityLevelERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, $4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($4);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($5);
 STACKTOP = sp;
 return;
}

function __ZN6vision29SolveNullVector8x9DestructiveIfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $2 = sp;
 if (__ZN6vision27OrthogonalizePivot8x9Basis0IfEEbPT_S2_($2, $1) | 0) if (__ZN6vision27OrthogonalizePivot8x9Basis1IfEEbPT_S2_($2, $1) | 0) if (__ZN6vision27OrthogonalizePivot8x9Basis2IfEEbPT_S2_($2, $1) | 0) if (__ZN6vision27OrthogonalizePivot8x9Basis3IfEEbPT_S2_($2, $1) | 0) if (__ZN6vision27OrthogonalizePivot8x9Basis4IfEEbPT_S2_($2, $1) | 0) if (__ZN6vision27OrthogonalizePivot8x9Basis5IfEEbPT_S2_($2, $1) | 0) if (__ZN6vision27OrthogonalizePivot8x9Basis6IfEEbPT_S2_($2, $1) | 0) if (__ZN6vision27OrthogonalizePivot8x9Basis7IfEEbPT_S2_($2, $1) | 0) $$0 = __ZN6vision24OrthogonalizeIdentity8x9IfEEbPT_PKS1_($0, $2) | 0; else $$0 = 0; else $$0 = 0; else $$0 = 0; else $$0 = 0; else $$0 = 0; else $$0 = 0; else $$0 = 0; else $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS5_RS7_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $11 = (HEAP32[$5 >> 2] | 0) + (0 - ($7 >> 2) << 2) | 0;
 HEAP32[$5 >> 2] = $11;
 if (($7 | 0) > 0) {
  _memcpy($11 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $15 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $15 = $11;
 }
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$$pre$phiZ2D >> 2] = $14;
 $16 = $1 + 8 | 0;
 $17 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$16 >> 2] = $17;
 $19 = $0 + 8 | 0;
 $20 = $1 + 12 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS4_RS6_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $11 = (HEAP32[$5 >> 2] | 0) + (0 - ($7 >> 2) << 2) | 0;
 HEAP32[$5 >> 2] = $11;
 if (($7 | 0) > 0) {
  _memcpy($11 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $15 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $15 = $11;
 }
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$$pre$phiZ2D >> 2] = $14;
 $16 = $1 + 8 | 0;
 $17 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$16 >> 2] = $17;
 $19 = $0 + 8 | 0;
 $20 = $1 + 12 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZNSt3__215__num_get_floatIeEET_PKcS3_Rj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0.0, $$0$ph = 0.0, $$1 = 0.0, $10 = 0, $11 = 0, $13 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0.0;
 } else {
  $5 = ___errno_location() | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  $7 = ___errno_location() | 0;
  HEAP32[$7 >> 2] = 0;
  $9 = +_strtold_l($0, $3, __ZNSt3__26__clocEv() | 0);
  $10 = ___errno_location() | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if (!$11) {
   $13 = ___errno_location() | 0;
   HEAP32[$13 >> 2] = $6;
  }
  if ((HEAP32[$3 >> 2] | 0) == ($1 | 0)) if (($11 | 0) == 34) {
   $$0$ph = $9;
   label = 6;
  } else $$0 = $9; else {
   $$0$ph = 0.0;
   label = 6;
  }
  if ((label | 0) == 6) {
   HEAP32[$2 >> 2] = 4;
   $$0 = $$0$ph;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;
 return +$$1;
}

function __ZN6vision20SmallestTriangleAreaIfEET_PKS1_S3_S3_S3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0.0, $11 = 0.0, $13 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $4 = sp + 32 | 0;
 $5 = sp + 24 | 0;
 $6 = sp + 16 | 0;
 $7 = sp + 8 | 0;
 $8 = sp;
 __ZN6vision10SubVector2IfEEvPT_PKS1_S4_($4, $1, $0);
 __ZN6vision10SubVector2IfEEvPT_PKS1_S4_($5, $2, $0);
 __ZN6vision10SubVector2IfEEvPT_PKS1_S4_($6, $3, $0);
 __ZN6vision10SubVector2IfEEvPT_PKS1_S4_($7, $1, $2);
 __ZN6vision10SubVector2IfEEvPT_PKS1_S4_($8, $3, $2);
 $9 = +__ZN6vision14AreaOfTriangleIfEET_PKS1_S3_($4, $5);
 $10 = +__ZN6vision14AreaOfTriangleIfEET_PKS1_S3_($5, $6);
 $11 = +__ZN6vision14AreaOfTriangleIfEET_PKS1_S3_($4, $6);
 $13 = +__ZN6vision4min4IfEET_S1_S1_S1_S1_($9, $10, $11, +__ZN6vision14AreaOfTriangleIfEET_PKS1_S3_($7, $8));
 STACKTOP = sp;
 return +$13;
}

function __ZNSt3__215__num_get_floatIfEET_PKcS3_Rj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0.0, $$0$ph = 0.0, $$1 = 0.0, $10 = 0, $11 = 0, $13 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0.0;
 } else {
  $5 = ___errno_location() | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  $7 = ___errno_location() | 0;
  HEAP32[$7 >> 2] = 0;
  $9 = +_strtof_l($0, $3, __ZNSt3__26__clocEv() | 0);
  $10 = ___errno_location() | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if (!$11) {
   $13 = ___errno_location() | 0;
   HEAP32[$13 >> 2] = $6;
  }
  if ((HEAP32[$3 >> 2] | 0) == ($1 | 0)) if (($11 | 0) == 34) {
   $$0$ph = $9;
   label = 6;
  } else $$0 = $9; else {
   $$0$ph = 0.0;
   label = 6;
  }
  if ((label | 0) == 6) {
   HEAP32[$2 >> 2] = 4;
   $$0 = $$0$ph;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;
 return +$$1;
}

function __ZNSt3__215__num_get_floatIdEET_PKcS3_Rj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0.0, $$0$ph = 0.0, $$1 = 0.0, $10 = 0, $11 = 0, $13 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if (($0 | 0) == ($1 | 0)) {
  HEAP32[$2 >> 2] = 4;
  $$1 = 0.0;
 } else {
  $5 = ___errno_location() | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  $7 = ___errno_location() | 0;
  HEAP32[$7 >> 2] = 0;
  $9 = +_strtod_l($0, $3, __ZNSt3__26__clocEv() | 0);
  $10 = ___errno_location() | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if (!$11) {
   $13 = ___errno_location() | 0;
   HEAP32[$13 >> 2] = $6;
  }
  if ((HEAP32[$3 >> 2] | 0) == ($1 | 0)) if (($11 | 0) == 34) {
   $$0$ph = $9;
   label = 6;
  } else $$0 = $9; else {
   $$0$ph = 0.0;
   label = 6;
  }
  if ((label | 0) == 6) {
   HEAP32[$2 >> 2] = 4;
   $$0 = $$0$ph;
  }
  $$1 = $$0;
 }
 STACKTOP = sp;
 return +$$1;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $11 = 0, $21 = 0, $22 = 0, $27 = 0, $30 = 0;
 HEAP8[$1 + 53 >> 0] = 1;
 do if ((HEAP32[$1 + 4 >> 2] | 0) == ($3 | 0)) {
  HEAP8[$1 + 52 >> 0] = 1;
  $10 = $1 + 16 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  if (!$11) {
   HEAP32[$10 >> 2] = $2;
   HEAP32[$1 + 24 >> 2] = $4;
   HEAP32[$1 + 36 >> 2] = 1;
   if (!(($4 | 0) == 1 ? (HEAP32[$1 + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  if (($11 | 0) != ($2 | 0)) {
   $30 = $1 + 36 | 0;
   HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + 1;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  $21 = $1 + 24 | 0;
  $22 = HEAP32[$21 >> 2] | 0;
  if (($22 | 0) == 2) {
   HEAP32[$21 >> 2] = $4;
   $27 = $4;
  } else $27 = $22;
  if (($27 | 0) == 1 ? (HEAP32[$1 + 48 >> 2] | 0) == 1 : 0) HEAP8[$1 + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $11 = (HEAP32[$5 >> 2] | 0) + (0 - ($7 >> 3) << 3) | 0;
 HEAP32[$5 >> 2] = $11;
 if (($7 | 0) > 0) {
  _memcpy($11 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $15 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $15 = $11;
 }
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$$pre$phiZ2D >> 2] = $14;
 $16 = $1 + 8 | 0;
 $17 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$16 >> 2] = $17;
 $19 = $0 + 8 | 0;
 $20 = $1 + 12 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZNSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $11 = (HEAP32[$5 >> 2] | 0) + (0 - ($7 >> 3) << 3) | 0;
 HEAP32[$5 >> 2] = $11;
 if (($7 | 0) > 0) {
  _memcpy($11 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $15 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $15 = $11;
 }
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$$pre$phiZ2D >> 2] = $14;
 $16 = $1 + 8 | 0;
 $17 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$16 >> 2] = $17;
 $19 = $0 + 8 | 0;
 $20 = $1 + 12 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $11 = (HEAP32[$5 >> 2] | 0) + (0 - ($7 >> 3) << 3) | 0;
 HEAP32[$5 >> 2] = $11;
 if (($7 | 0) > 0) {
  _memcpy($11 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $15 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $15 = $11;
 }
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$$pre$phiZ2D >> 2] = $14;
 $16 = $1 + 8 | 0;
 $17 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$16 >> 2] = $17;
 $19 = $0 + 8 | 0;
 $20 = $1 + 12 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $13 = 0, $20 = 0, $21 = 0, $5 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 HEAP32[$4 >> 2] = $2;
 $8 = ___uselocale(HEAP32[$0 + 8 >> 2] | 0) | 0;
 $9 = _wcrtomb($5, 0, $1) | 0;
 if ($8 | 0) ___uselocale($8) | 0;
 L4 : do if (($9 + 1 | 0) >>> 0 < 2) $$019 = 2; else {
  $13 = $9 + -1 | 0;
  if ($13 >>> 0 > ($3 - (HEAP32[$4 >> 2] | 0) | 0) >>> 0) $$019 = 1; else {
   $$0 = $5;
   $$018 = $13;
   while (1) {
    if (!$$018) {
     $$019 = 0;
     break L4;
    }
    $20 = HEAP8[$$0 >> 0] | 0;
    $21 = HEAP32[$4 >> 2] | 0;
    HEAP32[$4 >> 2] = $21 + 1;
    HEAP8[$21 >> 0] = $20;
    $$0 = $$0 + 1 | 0;
    $$018 = $$018 + -1 | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return $$019 | 0;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $5 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $9 = $$0$i + -24 | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_((HEAP32[$5 >> 2] | 0) + -24 | 0, $9);
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -24;
  $$0$i = $9;
 }
 $12 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $12;
 $14 = $1 + 8 | 0;
 $15 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$14 >> 2];
 HEAP32[$14 >> 2] = $15;
 $17 = $0 + 8 | 0;
 $18 = $1 + 12 | 0;
 $19 = HEAP32[$17 >> 2] | 0;
 HEAP32[$17 >> 2] = HEAP32[$18 >> 2];
 HEAP32[$18 >> 2] = $19;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function _atoi($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$010$lcssa = 0, $$01015 = 0, $$011 = 0, $$1 = 0, $$112 = 0, $$214 = 0, $$pre$phiZ2D = 0, $14 = 0, $5 = 0, $7 = 0, label = 0;
 $$011 = $0;
 while (1) {
  $5 = $$011 + 1 | 0;
  if (!(_isspace(HEAP8[$$011 >> 0] | 0) | 0)) break; else $$011 = $5;
 }
 $7 = HEAP8[$$011 >> 0] | 0;
 switch ($7 | 0) {
 case 45:
  {
   $$0 = 1;
   label = 5;
   break;
  }
 case 43:
  {
   $$0 = 0;
   label = 5;
   break;
  }
 default:
  {
   $$1 = 0;
   $$112 = $$011;
   $$pre$phiZ2D = $7;
  }
 }
 if ((label | 0) == 5) {
  $$1 = $$0;
  $$112 = $5;
  $$pre$phiZ2D = HEAP8[$5 >> 0] | 0;
 }
 if (!(_isdigit($$pre$phiZ2D) | 0)) $$010$lcssa = 0; else {
  $$01015 = 0;
  $$214 = $$112;
  while (1) {
   $14 = ($$01015 * 10 | 0) + 48 - (HEAP8[$$214 >> 0] | 0) | 0;
   $$214 = $$214 + 1 | 0;
   if (!(_isdigit(HEAP8[$$214 >> 0] | 0) | 0)) {
    $$010$lcssa = $14;
    break;
   } else $$01015 = $14;
  }
 }
 return (($$1 | 0) == 0 ? 0 - $$010$lcssa | 0 : $$010$lcssa) | 0;
}

function __ZNK6vision21HoughSimilarityVoting12mapVoteToBinERfS1_S1_S1_ffff($0, $1, $2, $3, $4, $5, $6, $7, $8) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = +$5;
 $6 = +$6;
 $7 = +$7;
 $8 = +$8;
 var $11 = 0.0, $13 = 0.0, $19 = 0.0, $22 = 0.0, $24 = 0.0, $30 = 0.0, $41 = 0.0, $43 = 0.0, $49 = 0.0;
 $11 = +(HEAP32[$0 + 52 >> 2] | 0);
 $13 = +HEAPF32[$0 + 20 >> 2];
 $19 = +__ZN6vision12SafeDivisionIfEET_S1_S1_($5 - $13, +HEAPF32[$0 + 24 >> 2] - $13) * $11;
 HEAPF32[$1 >> 2] = $19;
 $22 = +(HEAP32[$0 + 56 >> 2] | 0);
 $24 = +HEAPF32[$0 + 28 >> 2];
 $30 = +__ZN6vision12SafeDivisionIfEET_S1_S1_($6 - $24, +HEAPF32[$0 + 32 >> 2] - $24) * $22;
 HEAPF32[$2 >> 2] = $30;
 HEAPF32[$3 >> 2] = ($7 + 3.141592653589793) * .15915494309189535 * +(HEAP32[$0 + 60 >> 2] | 0);
 $41 = +(HEAP32[$0 + 64 >> 2] | 0);
 $43 = +HEAPF32[$0 + 36 >> 2];
 $49 = +__ZN6vision12SafeDivisionIfEET_S1_S1_($8 - $43, +HEAPF32[$0 + 40 >> 2] - $43) * $41;
 HEAPF32[$4 >> 2] = $49;
 return;
}

function __ZNSt3__26vectorItNS_9allocatorItEEE26__swap_out_circular_bufferERNS_14__split_bufferItRS2_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $11 = (HEAP32[$5 >> 2] | 0) + (0 - ($7 >> 1) << 1) | 0;
 HEAP32[$5 >> 2] = $11;
 if (($7 | 0) > 0) {
  _memcpy($11 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $15 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $15 = $11;
 }
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$$pre$phiZ2D >> 2] = $14;
 $16 = $1 + 8 | 0;
 $17 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$16 >> 2] = $17;
 $19 = $0 + 8 | 0;
 $20 = $1 + 12 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $11 = (HEAP32[$5 >> 2] | 0) + (0 - ($7 >> 2) << 2) | 0;
 HEAP32[$5 >> 2] = $11;
 if (($7 | 0) > 0) {
  _memcpy($11 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $15 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $15 = $11;
 }
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$$pre$phiZ2D >> 2] = $14;
 $16 = $1 + 8 | 0;
 $17 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$16 >> 2] = $17;
 $19 = $0 + 8 | 0;
 $20 = $1 + 12 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEE26__swap_out_circular_bufferERNS_14__split_bufferIfRS2_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $11 = (HEAP32[$5 >> 2] | 0) + (0 - ($7 >> 2) << 2) | 0;
 HEAP32[$5 >> 2] = $11;
 if (($7 | 0) > 0) {
  _memcpy($11 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $15 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $15 = $11;
 }
 $14 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $15;
 HEAP32[$$pre$phiZ2D >> 2] = $14;
 $16 = $1 + 8 | 0;
 $17 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$16 >> 2];
 HEAP32[$16 >> 2] = $17;
 $19 = $0 + 8 | 0;
 $20 = $1 + 12 | 0;
 $21 = HEAP32[$19 >> 2] | 0;
 HEAP32[$19 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $21;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZN6vision23AccumulateScaledVector9IfEEvPT_PKS1_S1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 var $10 = 0, $16 = 0, $22 = 0, $28 = 0, $34 = 0, $40 = 0, $46 = 0, $52 = 0;
 HEAPF32[$0 >> 2] = +HEAPF32[$0 >> 2] + +HEAPF32[$1 >> 2] * $2;
 $10 = $0 + 4 | 0;
 HEAPF32[$10 >> 2] = +HEAPF32[$10 >> 2] + +HEAPF32[$1 + 4 >> 2] * $2;
 $16 = $0 + 8 | 0;
 HEAPF32[$16 >> 2] = +HEAPF32[$16 >> 2] + +HEAPF32[$1 + 8 >> 2] * $2;
 $22 = $0 + 12 | 0;
 HEAPF32[$22 >> 2] = +HEAPF32[$22 >> 2] + +HEAPF32[$1 + 12 >> 2] * $2;
 $28 = $0 + 16 | 0;
 HEAPF32[$28 >> 2] = +HEAPF32[$28 >> 2] + +HEAPF32[$1 + 16 >> 2] * $2;
 $34 = $0 + 20 | 0;
 HEAPF32[$34 >> 2] = +HEAPF32[$34 >> 2] + +HEAPF32[$1 + 20 >> 2] * $2;
 $40 = $0 + 24 | 0;
 HEAPF32[$40 >> 2] = +HEAPF32[$40 >> 2] + +HEAPF32[$1 + 24 >> 2] * $2;
 $46 = $0 + 28 | 0;
 HEAPF32[$46 >> 2] = +HEAPF32[$46 >> 2] + +HEAPF32[$1 + 28 >> 2] * $2;
 $52 = $0 + 32 | 0;
 HEAPF32[$52 >> 2] = +HEAPF32[$52 >> 2] + +HEAPF32[$1 + 32 >> 2] * $2;
 return;
}

function __ZN10emscripten8internal7InvokerIiJiNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiiS8_EiPNS0_11BindingTypeIS8_EUt_E($fn, $args, $args1) {
 $fn = $fn | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $agg$tmp = 0, $call = 0, $call3 = 0, $call4 = 0, $ref$tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $ref$tmp = sp + 12 | 0;
 $agg$tmp = sp;
 $call = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args) | 0;
 __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12fromWireTypeEPNS9_Ut_E($agg$tmp, $args1);
 $call3 = FUNCTION_TABLE_iii[$fn & 63]($call, $agg$tmp) | 0;
 HEAP32[$ref$tmp >> 2] = $call3;
 $call4 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi($ref$tmp) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$tmp);
 STACKTOP = sp;
 return $call4 | 0;
}

function __ZN12arControllerC2Ev($this) {
 $this = $this | 0;
 var $__begin_$i$i = 0, $surfaceSetCount = 0, $videoLuma = 0;
 HEAP32[$this + 192 >> 2] = 0;
 HEAP32[$this + 196 >> 2] = 0;
 $videoLuma = $this + 204 | 0;
 $surfaceSetCount = $this + 240 | 0;
 HEAP32[$videoLuma >> 2] = 0;
 HEAP32[$videoLuma + 4 >> 2] = 0;
 HEAP32[$videoLuma + 8 >> 2] = 0;
 HEAP32[$videoLuma + 12 >> 2] = 0;
 HEAP32[$videoLuma + 16 >> 2] = 0;
 HEAP32[$videoLuma + 20 >> 2] = 0;
 HEAP32[$surfaceSetCount >> 2] = 0;
 HEAP32[$surfaceSetCount + 4 >> 2] = 0;
 HEAP32[$surfaceSetCount + 8 >> 2] = 0;
 HEAP32[$surfaceSetCount + 12 >> 2] = 0;
 HEAP32[$surfaceSetCount + 16 >> 2] = 0;
 HEAP32[$this + 260 >> 2] = 1065353216;
 HEAPF64[$this + 264 >> 3] = .0001;
 HEAPF64[$this + 272 >> 3] = 1.0e3;
 $__begin_$i$i = $this + 280 | 0;
 HEAP32[$__begin_$i$i >> 2] = 0;
 HEAP32[$__begin_$i$i + 4 >> 2] = 0;
 HEAP32[$__begin_$i$i + 8 >> 2] = 0;
 HEAP32[$__begin_$i$i + 12 >> 2] = 0;
 HEAP32[$this + 424 >> 2] = 2;
 return;
}

function _setThreshold($id, $threshold) {
 $id = $id | 0;
 $threshold = $threshold | 0;
 var $call7 = 0, $id$addr = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $id$addr = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0) {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  if ($threshold >>> 0 <= 255) if (!(_arSetLabelingThresh(HEAP32[$call7 + 216 >> 2] | 0, $threshold) | 0)) {
   HEAP32[$vararg_buffer >> 2] = $threshold;
   _arLog(0, 1, 40714, $vararg_buffer);
  }
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE26__swap_out_circular_bufferERNS_14__split_bufferIhRS2_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$pre$phiZ2D = 0, $10 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $2 | 0;
 $10 = (HEAP32[$5 >> 2] | 0) + (0 - $7) | 0;
 HEAP32[$5 >> 2] = $10;
 if (($7 | 0) > 0) {
  _memcpy($10 | 0, $2 | 0, $7 | 0) | 0;
  $$pre$phiZ2D = $5;
  $14 = HEAP32[$5 >> 2] | 0;
 } else {
  $$pre$phiZ2D = $5;
  $14 = $10;
 }
 $13 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $14;
 HEAP32[$$pre$phiZ2D >> 2] = $13;
 $15 = $1 + 8 | 0;
 $16 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$15 >> 2];
 HEAP32[$15 >> 2] = $16;
 $18 = $0 + 8 | 0;
 $19 = $1 + 12 | 0;
 $20 = HEAP32[$18 >> 2] | 0;
 HEAP32[$18 >> 2] = HEAP32[$19 >> 2];
 HEAP32[$19 >> 2] = $20;
 HEAP32[$1 >> 2] = HEAP32[$$pre$phiZ2D >> 2];
 return;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $13 = 0, $19 = 0;
 do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $4) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi(0, $1, $2, $3); else if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 >> 2] | 0, $4) | 0) {
  if ((HEAP32[$1 + 16 >> 2] | 0) != ($2 | 0)) {
   $13 = $1 + 20 | 0;
   if ((HEAP32[$13 >> 2] | 0) != ($2 | 0)) {
    HEAP32[$1 + 32 >> 2] = $3;
    HEAP32[$13 >> 2] = $2;
    $19 = $1 + 40 | 0;
    HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 1;
    if ((HEAP32[$1 + 36 >> 2] | 0) == 1) if ((HEAP32[$1 + 24 >> 2] | 0) == 2) HEAP8[$1 + 54 >> 0] = 1;
    HEAP32[$1 + 44 >> 2] = 4;
    break;
   }
  }
  if (($3 | 0) == 1) HEAP32[$1 + 32 >> 2] = 1;
 } while (0);
 return;
}

function _getThresholdMode($id) {
 $id = $id | 0;
 var $arhandle = 0, $cmp = 0, $id$addr = 0, $retval$1 = 0, $thresholdMode = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 $thresholdMode = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = -1; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $cmp = (_arGetLabelingThreshMode(HEAP32[$arhandle >> 2] | 0, $thresholdMode) | 0) == 0;
  $retval$1 = $cmp ? HEAP32[$thresholdMode >> 2] | 0 : -1;
 }
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZNSt3__211__stdoutbufIwE4syncEv($0) {
 $0 = $0 | 0;
 var $$2 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp + 8 | 0;
 $2 = sp;
 $3 = $0 + 36 | 0;
 $4 = $0 + 40 | 0;
 $5 = $1 + 8 | 0;
 $6 = $1;
 $7 = $0 + 32 | 0;
 L1 : while (1) {
  $8 = HEAP32[$3 >> 2] | 0;
  $13 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 31]($8, HEAP32[$4 >> 2] | 0, $1, $5, $2) | 0;
  $15 = (HEAP32[$2 >> 2] | 0) - $6 | 0;
  if ((_fwrite($1, 1, $15, HEAP32[$7 >> 2] | 0) | 0) != ($15 | 0)) {
   $$2 = -1;
   break;
  }
  switch ($13 | 0) {
  case 1:
   break;
  case 2:
   {
    $$2 = -1;
    break L1;
    break;
   }
  default:
   {
    label = 4;
    break L1;
   }
  }
 }
 if ((label | 0) == 4) $$2 = ((_fflush(HEAP32[$7 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNSt3__211__stdoutbufIcE4syncEv($0) {
 $0 = $0 | 0;
 var $$2 = 0, $1 = 0, $13 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp + 8 | 0;
 $2 = sp;
 $3 = $0 + 36 | 0;
 $4 = $0 + 40 | 0;
 $5 = $1 + 8 | 0;
 $6 = $1;
 $7 = $0 + 32 | 0;
 L1 : while (1) {
  $8 = HEAP32[$3 >> 2] | 0;
  $13 = FUNCTION_TABLE_iiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 31]($8, HEAP32[$4 >> 2] | 0, $1, $5, $2) | 0;
  $15 = (HEAP32[$2 >> 2] | 0) - $6 | 0;
  if ((_fwrite($1, 1, $15, HEAP32[$7 >> 2] | 0) | 0) != ($15 | 0)) {
   $$2 = -1;
   break;
  }
  switch ($13 | 0) {
  case 1:
   break;
  case 2:
   {
    $$2 = -1;
    break L1;
    break;
   }
  default:
   {
    label = 4;
    break L1;
   }
  }
 }
 if ((label | 0) == 4) $$2 = ((_fflush(HEAP32[$7 >> 2] | 0) | 0) != 0) << 31 >> 31;
 STACKTOP = sp;
 return $$2 | 0;
}

function _getImageProcMode($id) {
 $id = $id | 0;
 var $arhandle = 0, $cmp = 0, $id$addr = 0, $imageProcMode = 0, $retval$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 $imageProcMode = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = -1; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $cmp = (_arGetImageProcMode(HEAP32[$arhandle >> 2] | 0, $imageProcMode) | 0) == 0;
  $retval$1 = $cmp ? HEAP32[$imageProcMode >> 2] | 0 : -1;
 }
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZN6vision21HoughSimilarityVoting4initEffffiiii($0, $1, $2, $3, $4, $5, $6, $7, $8) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = +$3;
 $4 = +$4;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 var $19 = 0, $21 = 0;
 HEAPF32[$0 + 20 >> 2] = $1;
 HEAPF32[$0 + 24 >> 2] = $2;
 HEAPF32[$0 + 28 >> 2] = $3;
 HEAPF32[$0 + 32 >> 2] = $4;
 HEAPF32[$0 + 36 >> 2] = -1.0;
 HEAPF32[$0 + 40 >> 2] = 1.0;
 HEAP32[$0 + 52 >> 2] = $5;
 HEAP32[$0 + 56 >> 2] = $6;
 HEAP32[$0 + 60 >> 2] = $7;
 HEAP32[$0 + 64 >> 2] = $8;
 $19 = Math_imul($6, $5) | 0;
 HEAP32[$0 + 84 >> 2] = $19;
 $21 = Math_imul($19, $7) | 0;
 HEAP32[$0 + 88 >> 2] = $21;
 HEAPF32[$0 + 44 >> 2] = 10.0;
 HEAPF32[$0 + 48 >> 2] = .4342944622039795;
 HEAP8[$0 + 16 >> 0] = ($6 | $5 | 0) == 0 & 1;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE5clearEv($0 + 92 | 0);
 return;
}

function _strlen($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$015$lcssa = 0, $$01518 = 0, $$1$lcssa = 0, $$pn = 0, $$pn29 = 0, $1 = 0, $10 = 0, $19 = 0, $22 = 0, $6 = 0, label = 0;
 $1 = $0;
 L1 : do if (!($1 & 3)) {
  $$015$lcssa = $0;
  label = 5;
 } else {
  $$01518 = $0;
  $22 = $1;
  while (1) {
   if (!(HEAP8[$$01518 >> 0] | 0)) {
    $$pn = $22;
    break L1;
   }
   $6 = $$01518 + 1 | 0;
   $22 = $6;
   if (!($22 & 3)) {
    $$015$lcssa = $6;
    label = 5;
    break;
   } else $$01518 = $6;
  }
 } while (0);
 if ((label | 0) == 5) {
  $$0 = $$015$lcssa;
  while (1) {
   $10 = HEAP32[$$0 >> 2] | 0;
   if (!(($10 & -2139062144 ^ -2139062144) & $10 + -16843009)) $$0 = $$0 + 4 | 0; else break;
  }
  if (!(($10 & 255) << 24 >> 24)) $$1$lcssa = $$0; else {
   $$pn29 = $$0;
   while (1) {
    $19 = $$pn29 + 1 | 0;
    if (!(HEAP8[$19 >> 0] | 0)) {
     $$1$lcssa = $19;
     break;
    } else $$pn29 = $19;
   }
  }
  $$pn = $$1$lcssa;
 }
 return $$pn - $1 | 0;
}

function _getLabelingMode($id) {
 $id = $id | 0;
 var $arhandle = 0, $cmp = 0, $id$addr = 0, $labelingMode = 0, $retval$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 $labelingMode = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = -1; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $cmp = (_arGetLabelingMode(HEAP32[$arhandle >> 2] | 0, $labelingMode) | 0) == 0;
  $retval$1 = $cmp ? HEAP32[$labelingMode >> 2] | 0 : -1;
 }
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZN6vision40Homography4PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_S3_S3_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $$0 = 0, $14 = 0, $19 = 0, $24 = 0, $9 = 0;
 $9 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($0, $1, $2) > 0.0;
 if ($9 ^ +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($4, $5, $6) > 0.0) $$0 = 0; else {
  $14 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($1, $2, $3) > 0.0;
  if ($14 ^ +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($5, $6, $7) > 0.0) $$0 = 0; else {
   $19 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($2, $3, $0) > 0.0;
   if ($19 ^ +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($6, $7, $4) > 0.0) $$0 = 0; else {
    $24 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($3, $0, $1) > 0.0;
    $$0 = $24 ^ +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($7, $4, $5) > 0.0 ^ 1;
   }
  }
 }
 return $$0 | 0;
}

function _setPatternDetectionMode($id, $mode) {
 $id = $id | 0;
 $mode = $mode | 0;
 var $arhandle = 0, $id$addr = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $id$addr = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0) {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  if (!(_arSetPatternDetectionMode(HEAP32[$arhandle >> 2] | 0, $mode) | 0)) {
   HEAP32[$vararg_buffer >> 2] = $mode;
   _arLog(0, 1, 40679, $vararg_buffer);
  }
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $17 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 4 >> 2] & 127]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $17 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 288 | 0, $5, $4, 0) | 0) - $11 | 0;
 if (($17 | 0) < 288) HEAP32[$1 >> 2] = (($17 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $11 = 0, $17 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $11 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 4 >> 2] & 127]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $17 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $11, $11 + 288 | 0, $5, $4, 0) | 0) - $11 | 0;
 if (($17 | 0) < 288) HEAP32[$1 >> 2] = (($17 | 0) / 12 | 0 | 0) % 12 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__210__time_put8__do_putEPwRS1_PK2tmcc($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $11 = 0, $16 = 0, $18 = 0, $19 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(128);
 $6 = sp;
 $7 = sp + 116 | 0;
 $8 = sp + 104 | 0;
 $9 = sp + 112 | 0;
 HEAP32[$7 >> 2] = $6 + 100;
 __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0, $6, $7, $3, $4, $5);
 $11 = $8;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$9 >> 2] = $6;
 $16 = __ZNSt3__212_GLOBAL__N_17countofIwEEmPKT_S4_($1, HEAP32[$2 >> 2] | 0) | 0;
 $18 = ___uselocale(HEAP32[$0 >> 2] | 0) | 0;
 $19 = _mbsrtowcs($1, $9, $16, $8) | 0;
 if ($18 | 0) ___uselocale($18) | 0;
 if (($19 | 0) == -1) __ZNSt3__221__throw_runtime_errorEPKc(0); else {
  HEAP32[$2 >> 2] = $1 + ($19 << 2);
  STACKTOP = sp;
  return;
 }
}

function _getThreshold($id) {
 $id = $id | 0;
 var $arhandle = 0, $cmp = 0, $id$addr = 0, $retval$1 = 0, $threshold = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 $threshold = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = -1; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $cmp = (_arGetLabelingThresh(HEAP32[$arhandle >> 2] | 0, $threshold) | 0) == 0;
  $retval$1 = $cmp ? HEAP32[$threshold >> 2] | 0 : -1;
 }
 STACKTOP = sp;
 return $retval$1 | 0;
}

function _setThresholdMode($id, $mode) {
 $id = $id | 0;
 $mode = $mode | 0;
 var $arhandle = 0, $id$addr = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $id$addr = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0) {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  if (!(_arSetLabelingThreshMode(HEAP32[$arhandle >> 2] | 0, $mode) | 0)) {
   HEAP32[$vararg_buffer >> 2] = $mode;
   _arLog(0, 1, 40740, $vararg_buffer);
  }
 }
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $13 = 0, $9 = 0;
 L1 : do if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $1, $2, $3); else {
  $9 = HEAP32[$0 + 12 >> 2] | 0;
  $10 = $0 + 16 + ($9 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0 + 16 | 0, $1, $2, $3);
  if (($9 | 0) > 1) {
   $13 = $1 + 54 | 0;
   $$0 = $0 + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($$0, $1, $2, $3);
    if (HEAP8[$13 >> 0] | 0) break L1;
    $$0 = $$0 + 8 | 0;
   } while ($$0 >>> 0 < $10 >>> 0);
  }
 } while (0);
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $16 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $10 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$7 >> 2] >> 2] & 127]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $16 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEPKNS_12basic_stringIwS3_NS_9allocatorIwEEEENS_5ctypeIwEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $10, $10 + 168 | 0, $5, $4, 0) | 0) - $10 | 0;
 if (($16 | 0) < 168) HEAP32[$1 >> 2] = (($16 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $10 = 0, $16 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 $7 = $0 + 8 | 0;
 $10 = FUNCTION_TABLE_ii[HEAP32[HEAP32[$7 >> 2] >> 2] & 127]($7) | 0;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $16 = (__ZNSt3__214__scan_keywordINS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEPKNS_12basic_stringIcS3_NS_9allocatorIcEEEENS_5ctypeIcEEEET0_RT_SE_SD_SD_RKT1_Rjb($2, $$byval_copy, $10, $10 + 168 | 0, $5, $4, 0) | 0) - $10 | 0;
 if (($16 | 0) < 168) HEAP32[$1 >> 2] = (($16 | 0) / 12 | 0 | 0) % 7 | 0;
 STACKTOP = sp;
 return;
}

function _getPatternDetectionMode($id) {
 $id = $id | 0;
 var $arhandle = 0, $cmp = 0, $id$addr = 0, $mode = 0, $retval$1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 $mode = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$1 = -1; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $cmp = (_arGetPatternDetectionMode(HEAP32[$arhandle >> 2] | 0, $mode) | 0) == 0;
  $retval$1 = $cmp ? HEAP32[$mode >> 2] | 0 : -1;
 }
 STACKTOP = sp;
 return $retval$1 | 0;
}

function __ZNSt3__29__num_getIwE19__stage2_float_prepERNS_8ios_baseEPwRwS5_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $14 = 0, $18 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 __ZNKSt3__28ios_base6getlocEv($5, $1);
 $6 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57916) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 48 >> 2] & 15]($6, 10736, 10768, $2) | 0;
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57924) | 0;
 $14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
 HEAP32[$3 >> 2] = $14;
 $18 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
 HEAP32[$4 >> 2] = $18;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 63]($0, $10);
 __ZNSt3__26localeD2Ev($5);
 STACKTOP = sp;
 return;
}

function _setImageProcMode($id, $mode) {
 $id = $id | 0;
 $mode = $mode | 0;
 var $arhandle = 0, $id$addr = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $id$addr = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0) {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  if (!(_arSetImageProcMode(HEAP32[$arhandle >> 2] | 0, $mode) | 0)) {
   HEAP32[$vararg_buffer >> 2] = $mode;
   _arLog(0, 1, 40589, $vararg_buffer);
  }
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__29__num_getIcE19__stage2_float_prepERNS_8ios_baseEPcRcS5_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $14 = 0, $18 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp;
 __ZNKSt3__28ios_base6getlocEv($5, $1);
 $6 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57884) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$6 >> 2] | 0) + 32 >> 2] & 15]($6, 10736, 10768, $2) | 0;
 $10 = __ZNKSt3__26locale9use_facetERNS0_2idE($5, 57900) | 0;
 $14 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 12 >> 2] & 127]($10) | 0;
 HEAP8[$3 >> 0] = $14;
 $18 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$10 >> 2] | 0) + 16 >> 2] & 127]($10) | 0;
 HEAP8[$4 >> 0] = $18;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 63]($0, $10);
 __ZNSt3__26localeD2Ev($5);
 STACKTOP = sp;
 return;
}

function _setLabelingMode($id, $mode) {
 $id = $id | 0;
 $mode = $mode | 0;
 var $arhandle = 0, $id$addr = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $id$addr = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0) {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  if (!(_arSetLabelingMode(HEAP32[$arhandle >> 2] | 0, $mode) | 0)) {
   HEAP32[$vararg_buffer >> 2] = $mode;
   _arLog(0, 1, 40618, $vararg_buffer);
  }
 }
 STACKTOP = sp;
 return;
}

function _cycle($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$02527 = 0, $$026 = 0, $10 = 0, $11 = 0, $18 = 0, $3 = 0, $5 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $3 = sp;
 L1 : do if (($2 | 0) >= 2) {
  $5 = $1 + ($2 << 2) | 0;
  HEAP32[$5 >> 2] = $3;
  if ($0 | 0) {
   $$02527 = $0;
   $10 = $3;
   while (1) {
    $8 = $$02527 >>> 0 < 256 ? $$02527 : 256;
    _memcpy($10 | 0, HEAP32[$1 >> 2] | 0, $8 | 0) | 0;
    $$026 = 0;
    do {
     $11 = $1 + ($$026 << 2) | 0;
     $$026 = $$026 + 1 | 0;
     _memcpy(HEAP32[$11 >> 2] | 0, HEAP32[$1 + ($$026 << 2) >> 2] | 0, $8 | 0) | 0;
     HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + $8;
    } while (($$026 | 0) != ($2 | 0));
    $18 = $$02527 - $8 | 0;
    if (!$18) break L1;
    $$02527 = $18;
    $10 = HEAP32[$5 >> 2] | 0;
   }
  }
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $5 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 $3 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $$0$i = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $9 = $$0$i + -32 | 0;
  __ZN6vision5ImageC2ERKS0_((HEAP32[$5 >> 2] | 0) + -32 | 0, $9);
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + -32;
  $$0$i = $9;
 }
 $12 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $12;
 $14 = $1 + 8 | 0;
 $15 = HEAP32[$3 >> 2] | 0;
 HEAP32[$3 >> 2] = HEAP32[$14 >> 2];
 HEAP32[$14 >> 2] = $15;
 $17 = $0 + 8 | 0;
 $18 = $1 + 12 | 0;
 $19 = HEAP32[$17 >> 2] | 0;
 HEAP32[$17 >> 2] = HEAP32[$18 >> 2];
 HEAP32[$18 >> 2] = $19;
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2];
 return;
}

function ___overflow($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $3 = $1 & 255;
 HEAP8[$2 >> 0] = $3;
 $4 = $0 + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (!$5) if (!(___towrite($0) | 0)) {
  $12 = HEAP32[$4 >> 2] | 0;
  label = 4;
 } else $$0 = -1; else {
  $12 = $5;
  label = 4;
 }
 do if ((label | 0) == 4) {
  $9 = $0 + 20 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  if ($10 >>> 0 < $12 >>> 0) {
   $13 = $1 & 255;
   if (($13 | 0) != (HEAP8[$0 + 75 >> 0] | 0)) {
    HEAP32[$9 >> 2] = $10 + 1;
    HEAP8[$10 >> 0] = $3;
    $$0 = $13;
    break;
   }
  }
  if ((FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, $2, 1) | 0) == 1) $$0 = HEAPU8[$2 >> 0] | 0; else $$0 = -1;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSK_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINSD_ISS_EEEEEEmOT_DpOT0_($agg$result, $this, $__hash, $__f, $__rest, $__rest1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__hash = $__hash | 0;
 $__f = $__f | 0;
 $__rest = $__rest | 0;
 $__rest1 = $__rest1 | 0;
 var $call$i$i$i = 0;
 $call$i$i$i = __Znwm(16) | 0;
 HEAP32[$agg$result >> 2] = $call$i$i$i;
 HEAP32[$agg$result + 4 >> 2] = $this + 8;
 HEAP32[$call$i$i$i + 8 >> 2] = HEAP32[HEAP32[$__rest >> 2] >> 2];
 HEAP32[$call$i$i$i + 12 >> 2] = 0;
 HEAP8[$agg$result + 8 >> 0] = 1;
 HEAP32[$call$i$i$i + 4 >> 2] = $__hash;
 HEAP32[$call$i$i$i >> 2] = 0;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIi7ARParamEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSJ_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS3_PvEENS_22__hash_node_destructorINSC_ISR_EEEEEEmOT_DpOT0_($agg$result, $this, $__hash, $__f, $__rest, $__rest1) {
 $agg$result = $agg$result | 0;
 $this = $this | 0;
 $__hash = $__hash | 0;
 $__f = $__f | 0;
 $__rest = $__rest | 0;
 $__rest1 = $__rest1 | 0;
 var $call$i$i$i = 0;
 $call$i$i$i = __Znwm(200) | 0;
 HEAP32[$agg$result >> 2] = $call$i$i$i;
 HEAP32[$agg$result + 4 >> 2] = $this + 8;
 HEAP32[$call$i$i$i + 8 >> 2] = HEAP32[HEAP32[$__rest >> 2] >> 2];
 _memset($call$i$i$i + 16 | 0, 0, 184) | 0;
 HEAP8[$agg$result + 8 >> 0] = 1;
 HEAP32[$call$i$i$i + 4 >> 2] = $__hash;
 HEAP32[$call$i$i$i >> 2] = 0;
 return;
}

function __ZNSt3__219__double_or_nothingIwEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pr = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $25 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $3 = $0 + 4 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) != 143;
 $7 = HEAP32[$0 >> 2] | 0;
 $8 = $7;
 $9 = (HEAP32[$2 >> 2] | 0) - $8 | 0;
 $11 = $9 << 1;
 $13 = $9 >>> 0 < 2147483647 ? (($11 | 0) == 0 ? 4 : $11) : -1;
 $16 = (HEAP32[$1 >> 2] | 0) - $8 >> 2;
 $17 = _realloc($5 ? $7 : 0, $13) | 0;
 if (!$17) __ZSt17__throw_bad_allocv();
 if ($5) {
  HEAP32[$0 >> 2] = $17;
  $25 = $17;
 } else {
  $$pr = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $17;
  if (!$$pr) $25 = $17; else {
   FUNCTION_TABLE_vi[HEAP32[$3 >> 2] & 255]($$pr);
   $25 = HEAP32[$0 >> 2] | 0;
  }
 }
 HEAP32[$3 >> 2] = 144;
 HEAP32[$1 >> 2] = $25 + ($16 << 2);
 HEAP32[$2 >> 2] = (HEAP32[$0 >> 2] | 0) + ($13 >>> 2 << 2);
 return;
}

function __ZNSt3__219__double_or_nothingIjEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pr = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $25 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $3 = $0 + 4 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) != 143;
 $7 = HEAP32[$0 >> 2] | 0;
 $8 = $7;
 $9 = (HEAP32[$2 >> 2] | 0) - $8 | 0;
 $11 = $9 << 1;
 $13 = $9 >>> 0 < 2147483647 ? (($11 | 0) == 0 ? 4 : $11) : -1;
 $16 = (HEAP32[$1 >> 2] | 0) - $8 >> 2;
 $17 = _realloc($5 ? $7 : 0, $13) | 0;
 if (!$17) __ZSt17__throw_bad_allocv();
 if ($5) {
  HEAP32[$0 >> 2] = $17;
  $25 = $17;
 } else {
  $$pr = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $17;
  if (!$$pr) $25 = $17; else {
   FUNCTION_TABLE_vi[HEAP32[$3 >> 2] & 255]($$pr);
   $25 = HEAP32[$0 >> 2] | 0;
  }
 }
 HEAP32[$3 >> 2] = 144;
 HEAP32[$1 >> 2] = $25 + ($16 << 2);
 HEAP32[$2 >> 2] = (HEAP32[$0 >> 2] | 0) + ($13 >>> 2 << 2);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE5eraseEmm($0) {
 $0 = $0 | 0;
 var $$sroa$speculated = 0, $1 = 0, $11 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 $2 = $0 + 11 | 0;
 $3 = HEAP8[$2 >> 0] | 0;
 if ($3 << 24 >> 24 < 0) {
  $14 = HEAP32[$0 >> 2] | 0;
  $9 = HEAP32[$0 + 4 >> 2] | 0;
 } else {
  $14 = $0;
  $9 = $3 & 255;
 }
 $$sroa$speculated = ($9 | 0) != 0 & 1;
 $11 = $9 - $$sroa$speculated | 0;
 if (!$11) $15 = $3; else {
  __ZNSt3__211char_traitsIcE4moveEPcPKcm($14, $14 + $$sroa$speculated | 0, $11) | 0;
  $15 = HEAP8[$2 >> 0] | 0;
 }
 if ($15 << 24 >> 24 < 0) HEAP32[$0 + 4 >> 2] = $11; else HEAP8[$2 >> 0] = $11;
 HEAP8[$1 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($14 + $11 | 0, $1);
 STACKTOP = sp;
 return;
}

function _getMatrixCodeType($id) {
 $id = $id | 0;
 var $arhandle = 0, $id$addr = 0, $matrixType = 0, $retval$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 $matrixType = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0 = -1; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  _arGetMatrixCodeType(HEAP32[$arhandle >> 2] | 0, $matrixType) | 0;
  $retval$0 = HEAP32[$matrixType >> 2] | 0;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function __ZN6vision14CompareFREAK84EPhPKf($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$018 = 0, $$019 = 0, $$1 = 0, $2 = 0, $3 = 0, $indvars$iv = 0, $indvars$iv$next23 = 0, $indvars$iv20 = 0, $indvars$iv22 = 0;
 __ZN6vision10ZeroVectorIhEEvPT_m($0, 84);
 $$018 = 0;
 $$019 = 0;
 $indvars$iv = 36;
 $indvars$iv20 = 35;
 $indvars$iv22 = 36;
 while (1) {
  if (($$018 | 0) == 37) break;
  $2 = $$018 + 1 | 0;
  $3 = $1 + ($$018 << 2) | 0;
  $$0 = $2;
  $$1 = $$019;
  while (1) {
   if (($$1 | 0) == ($indvars$iv22 | 0)) break;
   __ZN6vision17bitstring_set_bitEPhih($0, $$1, +HEAPF32[$3 >> 2] < +HEAPF32[$1 + ($$0 << 2) >> 2] & 1);
   $$0 = $$0 + 1 | 0;
   $$1 = $$1 + 1 | 0;
  }
  $indvars$iv$next23 = $indvars$iv22 + $indvars$iv20 | 0;
  $$018 = $2;
  $$019 = $$019 + $indvars$iv | 0;
  $indvars$iv = $indvars$iv + -1 | 0;
  $indvars$iv20 = $indvars$iv20 + -1 | 0;
  $indvars$iv22 = $indvars$iv$next23;
 }
 return;
}

function _color_quantize($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$041 = 0, $$042 = 0, $$043 = 0, $$044 = 0, $$045 = 0, $$1 = 0, $11 = 0, $7 = 0, $9 = 0;
 $7 = HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 24 >> 2] | 0;
 $9 = HEAP32[$0 + 112 >> 2] | 0;
 $11 = HEAP32[$0 + 120 >> 2] | 0;
 $$043 = 0;
 while (1) {
  if (($$043 | 0) >= ($3 | 0)) break;
  $$042 = $9;
  $$044 = HEAP32[$2 + ($$043 << 2) >> 2] | 0;
  $$045 = HEAP32[$1 + ($$043 << 2) >> 2] | 0;
  while (1) {
   if (!$$042) break;
   $$0 = 0;
   $$041 = 0;
   $$1 = $$045;
   while (1) {
    if (($$041 | 0) >= ($11 | 0)) break;
    $$0 = $$0 + (HEAPU8[(HEAP32[$7 + ($$041 << 2) >> 2] | 0) + (HEAPU8[$$1 >> 0] | 0) >> 0] | 0) | 0;
    $$041 = $$041 + 1 | 0;
    $$1 = $$1 + 1 | 0;
   }
   HEAP8[$$044 >> 0] = $$0;
   $$042 = $$042 + -1 | 0;
   $$044 = $$044 + 1 | 0;
   $$045 = $$1;
  }
  $$043 = $$043 + 1 | 0;
 }
 return;
}

function __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EERKSB_PKS8_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $11 = 0, $12 = 0, $5 = 0, $6 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $5 = $1 + 11 | 0;
 $6 = HEAP8[$5 >> 0] | 0;
 $11 = $6 << 24 >> 24 < 0 ? HEAP32[$1 + 4 >> 2] | 0 : $6 & 255;
 $12 = __ZNSt3__211char_traitsIcE6lengthEPKc($2) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcmm($0, (HEAP8[$5 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, $11, $11 + $12 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($0, $2, $12) | 0;
 return;
}

function __ZNSt3__2plIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEENS_12basic_stringIT_T0_T1_EEPKS8_RKSB_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$i$i = 0, $12 = 0, $5 = 0, $6 = 0, $7 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $5 = __ZNSt3__211char_traitsIcE6lengthEPKc($1) | 0;
 $6 = $2 + 11 | 0;
 $7 = HEAP8[$6 >> 0] | 0;
 $12 = $7 << 24 >> 24 < 0 ? HEAP32[$2 + 4 >> 2] | 0 : $7 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcmm($0, $1, $5, $12 + $5 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($0, (HEAP8[$6 >> 0] | 0) < 0 ? HEAP32[$2 >> 2] | 0 : $2, $12) | 0;
 return;
}

function _latch_quant_tables($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$pre30 = 0, $1 = 0, $11 = 0, $15 = 0, $2 = 0, $22 = 0, $6 = 0, $7 = 0, label = 0;
 $1 = $0 + 328 | 0;
 $2 = $0 + 4 | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) >= (HEAP32[$1 >> 2] | 0)) break;
  $6 = HEAP32[$0 + 332 + ($$0 << 2) >> 2] | 0;
  $7 = $6 + 76 | 0;
  if (!(HEAP32[$7 >> 2] | 0)) {
   $11 = HEAP32[$6 + 16 >> 2] | 0;
   $$pre30 = $0 + 164 + ($11 << 2) | 0;
   if ($11 >>> 0 > 3) label = 6; else if (!(HEAP32[$$pre30 >> 2] | 0)) label = 6;
   if ((label | 0) == 6) {
    label = 0;
    $15 = HEAP32[$0 >> 2] | 0;
    HEAP32[$15 + 20 >> 2] = 52;
    HEAP32[$15 + 24 >> 2] = $11;
    FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
   }
   $22 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$2 >> 2] >> 2] & 63]($0, 1, 132) | 0;
   _memcpy($22 | 0, HEAP32[$$pre30 >> 2] | 0, 132) | 0;
   HEAP32[$7 >> 2] = $22;
  }
  $$0 = $$0 + 1 | 0;
 }
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6resizeEmc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 $4 = $0 + 11 | 0;
 $5 = HEAP8[$4 >> 0] | 0;
 $6 = $5 << 24 >> 24 < 0;
 if ($6) $10 = HEAP32[$0 + 4 >> 2] | 0; else $10 = $5 & 255;
 do if ($10 >>> 0 < $1 >>> 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEmc($0, $1 - $10 | 0, $2) | 0; else if ($6) {
  $14 = (HEAP32[$0 >> 2] | 0) + $1 | 0;
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($14, $3);
  HEAP32[$0 + 4 >> 2] = $1;
  break;
 } else {
  HEAP8[$3 >> 0] = 0;
  __ZNSt3__211char_traitsIcE6assignERcRKc($0 + $1 | 0, $3);
  HEAP8[$4 >> 0] = $1;
  break;
 } while (0);
 STACKTOP = sp;
 return;
}

function __ZN6vision25DoGScaleInvariantDetectorC2Ev($0) {
 $0 = $0 | 0;
 var $11 = 0, $14 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 10;
 HEAP32[$0 + 12 >> 2] = 10;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = 0;
 HEAP8[$0 + 28 >> 0] = 1;
 __ZN6vision10DoGPyramidC2Ev($0 + 32 | 0);
 HEAPF32[$0 + 52 >> 2] = 0.0;
 HEAPF32[$0 + 56 >> 2] = 10.0;
 $11 = $0 + 60 | 0;
 HEAP32[$11 >> 2] = 0;
 HEAP32[$11 + 4 >> 2] = 0;
 HEAP32[$11 + 8 >> 2] = 0;
 HEAP32[$11 + 12 >> 2] = 0;
 HEAP32[$11 + 16 >> 2] = 0;
 HEAP32[$11 + 20 >> 2] = 0;
 HEAPF32[$0 + 88 >> 2] = 9.0;
 __ZN6vision21OrientationAssignmentC2Ev($0 + 92 | 0);
 $14 = $0 + 144 | 0;
 HEAP32[$14 >> 2] = 0;
 HEAP32[$0 + 148 >> 2] = 0;
 HEAP32[$0 + 152 >> 2] = 0;
 __ZN6vision25DoGScaleInvariantDetector22setMaxNumFeaturePointsEm($0, 5e3);
 __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm($14, 36);
 return;
}

function __ZL19kpmCreateHandleCoreP9ARParamLTiii($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $13 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = _calloc(1, 4156) | 0;
 if (!$4) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 } else {
  $6 = __Znwm(4) | 0;
  __ZN6vision20VisualDatabaseFacadeC2Ev($6);
  HEAP32[$4 >> 2] = $6;
  HEAP32[$4 + 4 >> 2] = $0;
  HEAP32[$4 + 8 >> 2] = $3;
  HEAP32[$4 + 12 >> 2] = $1;
  HEAP32[$4 + 16 >> 2] = $2;
  HEAP32[$4 + 20 >> 2] = 1;
  HEAP32[$4 + 24 >> 2] = -1;
  $13 = $4 + 28 | 0;
  HEAP32[$13 >> 2] = 0;
  HEAP32[$13 + 4 >> 2] = 0;
  HEAP32[$13 + 8 >> 2] = 0;
  HEAP32[$13 + 12 >> 2] = 0;
  HEAP32[$13 + 16 >> 2] = 0;
  HEAP32[$13 + 20 >> 2] = 0;
  HEAP32[$13 + 24 >> 2] = 0;
  HEAP32[$13 + 28 >> 2] = 0;
  STACKTOP = sp;
  return $4 | 0;
 }
 return 0;
}

function __ZNSt3__214__split_bufferI12multi_markerRNS_9allocatorIS1_EEEC2EmmS4_($this, $__cap, $__start, $__a) {
 $this = $this | 0;
 $__cap = $__cap | 0;
 $__start = $__start | 0;
 $__a = $__a | 0;
 var $__value_$i1$i = 0, $add$ptr = 0, $cond = 0, $exception$i$i$i = 0;
 $__value_$i1$i = $this + 12 | 0;
 HEAP32[$__value_$i1$i >> 2] = 0;
 HEAP32[$this + 16 >> 2] = $__a;
 do if (!$__cap) $cond = 0; else if ($__cap >>> 0 > 536870911) {
  $exception$i$i$i = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($exception$i$i$i, 40521);
  HEAP32[$exception$i$i$i >> 2] = 17440;
  ___cxa_throw($exception$i$i$i | 0, 13288, 107);
 } else {
  $cond = __Znwm($__cap << 3) | 0;
  break;
 } while (0);
 HEAP32[$this >> 2] = $cond;
 $add$ptr = $cond + ($__start << 3) | 0;
 HEAP32[$this + 8 >> 2] = $add$ptr;
 HEAP32[$this + 4 >> 2] = $add$ptr;
 HEAP32[$__value_$i1$i >> 2] = $cond + ($__cap << 3);
 return;
}

function _arPattDeleteHandle($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$024 = 0, $$025 = 0, $12 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 if (!$0) $$025 = -1; else {
  $2 = $0 + 4 | 0;
  $3 = $0 + 8 | 0;
  $4 = $0 + 12 | 0;
  $5 = $0 + 20 | 0;
  $$024 = 0;
  while (1) {
   if (($$024 | 0) >= (HEAP32[$2 >> 2] | 0)) break;
   if (HEAP32[(HEAP32[$3 >> 2] | 0) + ($$024 << 2) >> 2] | 0) _arPattFree($0, $$024) | 0;
   $12 = $$024 << 2;
   $$0 = 0;
   while (1) {
    if (($$0 | 0) == 4) break;
    $14 = $$0 + $12 | 0;
    _free(HEAP32[(HEAP32[$4 >> 2] | 0) + ($14 << 2) >> 2] | 0);
    _free(HEAP32[(HEAP32[$5 >> 2] | 0) + ($14 << 2) >> 2] | 0);
    $$0 = $$0 + 1 | 0;
   }
   $$024 = $$024 + 1 | 0;
  }
  _free(HEAP32[$4 >> 2] | 0);
  _free(HEAP32[$5 >> 2] | 0);
  _free(HEAP32[$3 >> 2] | 0);
  _free(HEAP32[$0 + 16 >> 2] | 0);
  _free(HEAP32[$0 + 24 >> 2] | 0);
  _free($0);
  $$025 = 0;
 }
 return $$025 | 0;
}

function __ZNSt3__219__double_or_nothingIcEEvRNS_10unique_ptrIT_PFvPvEEERPS2_S9_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pr = 0, $11 = 0, $13 = 0, $15 = 0, $16 = 0, $23 = 0, $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0;
 $3 = $0 + 4 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) != 143;
 $7 = HEAP32[$0 >> 2] | 0;
 $8 = $7;
 $9 = (HEAP32[$2 >> 2] | 0) - $8 | 0;
 $11 = $9 << 1;
 $13 = $9 >>> 0 < 2147483647 ? (($11 | 0) == 0 ? 1 : $11) : -1;
 $15 = (HEAP32[$1 >> 2] | 0) - $8 | 0;
 $16 = _realloc($5 ? $7 : 0, $13) | 0;
 if (!$16) __ZSt17__throw_bad_allocv();
 if ($5) {
  HEAP32[$0 >> 2] = $16;
  $23 = $16;
 } else {
  $$pr = HEAP32[$0 >> 2] | 0;
  HEAP32[$0 >> 2] = $16;
  if (!$$pr) $23 = $16; else {
   FUNCTION_TABLE_vi[HEAP32[$3 >> 2] & 255]($$pr);
   $23 = HEAP32[$0 >> 2] | 0;
  }
 }
 HEAP32[$3 >> 2] = 144;
 HEAP32[$1 >> 2] = $23 + $15;
 HEAP32[$2 >> 2] = (HEAP32[$0 >> 2] | 0) + $13;
 return;
}

function _read_restart_marker($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $11 = 0, $13 = 0, $2 = 0, $26 = 0, $6 = 0, $9 = 0, label = 0;
 $1 = $0 + 416 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (!$2) if (!(_next_marker($0) | 0)) $$0 = 0; else {
  $11 = HEAP32[$1 >> 2] | 0;
  label = 4;
 } else {
  $11 = $2;
  label = 4;
 }
 do if ((label | 0) == 4) {
  $6 = $0 + 440 | 0;
  $9 = HEAP32[(HEAP32[$6 >> 2] | 0) + 20 >> 2] | 0;
  if (($11 | 0) == ($9 + 208 | 0)) {
   $13 = HEAP32[$0 >> 2] | 0;
   HEAP32[$13 + 20 >> 2] = 98;
   HEAP32[$13 + 24 >> 2] = $9;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 3);
   HEAP32[$1 >> 2] = 0;
  } else if (!(FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 + 24 >> 2] | 0) + 20 >> 2] & 63]($0, $9) | 0)) {
   $$0 = 0;
   break;
  }
  $26 = (HEAP32[$6 >> 2] | 0) + 20 | 0;
  HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 1 & 7;
  $$0 = 1;
 } while (0);
 return $$0 | 0;
}

function _get_soi($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $5 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$1 + 20 >> 2] = 102;
 FUNCTION_TABLE_vii[HEAP32[$1 + 4 >> 2] & 63]($0, 1);
 $5 = $0 + 440 | 0;
 if (HEAP32[(HEAP32[$5 >> 2] | 0) + 12 >> 2] | 0) {
  $10 = HEAP32[$0 >> 2] | 0;
  HEAP32[$10 + 20 >> 2] = 61;
  FUNCTION_TABLE_vi[HEAP32[$10 >> 2] & 255]($0);
 }
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 16) break;
  HEAP8[$0 + 228 + $$0 >> 0] = 0;
  HEAP8[$0 + 244 + $$0 >> 0] = 1;
  HEAP8[$0 + 260 + $$0 >> 0] = 5;
  $$0 = $$0 + 1 | 0;
 }
 HEAP32[$0 + 276 >> 2] = 0;
 HEAP32[$0 + 40 >> 2] = 0;
 HEAP32[$0 + 300 >> 2] = 0;
 HEAP32[$0 + 280 >> 2] = 0;
 HEAP8[$0 + 284 >> 0] = 1;
 HEAP8[$0 + 285 >> 0] = 1;
 HEAP8[$0 + 286 >> 0] = 0;
 HEAP16[$0 + 288 >> 1] = 1;
 HEAP16[$0 + 290 >> 1] = 1;
 HEAP32[$0 + 292 >> 2] = 0;
 HEAP8[$0 + 296 >> 0] = 0;
 HEAP32[(HEAP32[$5 >> 2] | 0) + 12 >> 2] = 1;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcmm($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 if ($3 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($3 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $2;
  $$0 = $0;
 } else {
  $10 = $3 + 16 & -16;
  $11 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm($10) | 0;
  HEAP32[$0 >> 2] = $11;
  HEAP32[$0 + 8 >> 2] = $10 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $2;
  $$0 = $11;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcm($$0, $1, $2) | 0;
 HEAP8[$4 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + $2 | 0, $4);
 STACKTOP = sp;
 return;
}

function _init_error_limit($0) {
 $0 = $0 | 0;
 var $$039 = 0, $$1 = 0, $$140 = 0, $$2 = 0, $10 = 0, $18 = 0, $2 = 0, $22 = 0, $7 = 0;
 $2 = HEAP32[$0 + 460 >> 2] | 0;
 $7 = (FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, 2044) | 0) + 1020 | 0;
 HEAP32[$2 + 40 >> 2] = $7;
 $$039 = 0;
 while (1) {
  if (($$039 | 0) == 16) break;
  HEAP32[$7 + ($$039 << 2) >> 2] = $$039;
  $10 = 0 - $$039 | 0;
  HEAP32[$7 + ($10 << 2) >> 2] = $10;
  $$039 = $$039 + 1 | 0;
 }
 $$1 = 16;
 $$140 = 16;
 while (1) {
  if ($$140 >>> 0 >= 48) break;
  HEAP32[$7 + ($$140 << 2) >> 2] = $$1;
  HEAP32[$7 + (0 - $$140 << 2) >> 2] = 0 - $$1;
  $18 = $$140 + 1 | 0;
  $$1 = ($18 & 1 ^ 1) + $$1 | 0;
  $$140 = $18;
 }
 $22 = 0 - $$1 | 0;
 $$2 = $$140;
 while (1) {
  if ($$2 >>> 0 >= 256) break;
  HEAP32[$7 + ($$2 << 2) >> 2] = $$1;
  HEAP32[$7 + (0 - $$2 << 2) >> 2] = $22;
  $$2 = $$2 + 1 | 0;
 }
 return;
}

function _arImageProcLumaHistAndCDFAndPercentile($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 $3 = $3 | 0;
 var $$0 = 0, $$024 = 0, $$025 = 0, $15 = 0, $16 = 0, $18 = 0, $21 = 0, $23 = 0, $6 = 0;
 if ($2 < 0.0 | $2 > 1.0) $$025 = -1; else {
  $6 = _arImageProcLumaHistAndCDF($0, $1) | 0;
  if (($6 | 0) < 0) $$025 = $6; else {
   $15 = ~~(+(Math_imul(HEAP32[$0 + 8 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0) | 0) * $2) >>> 0;
   $$024 = 0;
   while (1) {
    $16 = $$024 & 255;
    $18 = HEAP32[$0 + 1036 + ($16 << 2) >> 2] | 0;
    if ($18 >>> 0 < $15 >>> 0) $$024 = $$024 + 1 << 24 >> 24; else break;
   }
   $$0 = $$024;
   $21 = $18;
   while (1) {
    $23 = $$0 + 1 << 24 >> 24;
    if (($21 | 0) != ($15 | 0)) break;
    $$0 = $23;
    $21 = HEAP32[$0 + 1036 + (($23 & 255) << 2) >> 2] | 0;
   }
   HEAP8[$3 >> 0] = (($$0 & 255) + $16 | 0) >>> 1;
   $$025 = 0;
  }
 }
 return $$025 | 0;
}

function _getDebugMode($id) {
 $id = $id | 0;
 var $arhandle = 0, $enable = 0, $id$addr = 0, $retval$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 $enable = sp + 4 | 0;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0 = 0; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  _arGetDebugMode(HEAP32[$arhandle >> 2] | 0, $enable) | 0;
  $retval$0 = HEAP32[$enable >> 2] | 0;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $10 = 0, $13 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if ($2 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 do if ($2 >>> 0 < 2) {
  HEAP8[$0 + 8 + 3 >> 0] = $2;
  $$0 = $0;
 } else {
  $10 = $2 + 4 & -4;
  if ($10 >>> 0 > 1073741823) _abort(); else {
   $13 = __Znwm($10 << 2) | 0;
   HEAP32[$0 >> 2] = $13;
   HEAP32[$0 + 8 >> 2] = $10 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $2;
   $$0 = $13;
   break;
  }
 } while (0);
 __ZNSt3__211char_traitsIwE4copyEPwPKwm($$0, $1, $2) | 0;
 HEAP32[$3 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$0 + ($2 << 2) | 0, $3);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_122parse_unqualified_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1 = 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$1 = $0; else switch (HEAP8[$0 >> 0] | 0) {
 case 68:
 case 67:
  {
   $$1 = __ZN10__cxxabiv112_GLOBAL__N_120parse_ctor_dtor_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   break L1;
   break;
  }
 case 85:
  {
   $$1 = __ZN10__cxxabiv112_GLOBAL__N_123parse_unnamed_type_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   break L1;
   break;
  }
 case 57:
 case 56:
 case 55:
 case 54:
 case 53:
 case 52:
 case 51:
 case 50:
 case 49:
  {
   $$1 = __ZN10__cxxabiv112_GLOBAL__N_117parse_source_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
   break L1;
   break;
  }
 default:
  return __ZN10__cxxabiv112_GLOBAL__N_119parse_operator_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
 } while (0);
 return $$1 | 0;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $10 = 0, $13 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if ($1 >>> 0 > 1073741807) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 do if ($1 >>> 0 < 2) {
  HEAP8[$0 + 8 + 3 >> 0] = $1;
  $$0 = $0;
 } else {
  $10 = $1 + 4 & -4;
  if ($10 >>> 0 > 1073741823) _abort(); else {
   $13 = __Znwm($10 << 2) | 0;
   HEAP32[$0 >> 2] = $13;
   HEAP32[$0 + 8 >> 2] = $10 | -2147483648;
   HEAP32[$0 + 4 >> 2] = $1;
   $$0 = $13;
   break;
  }
 } while (0);
 __ZNSt3__211char_traitsIwE6assignEPwmw($$0, $1, $2) | 0;
 HEAP32[$3 >> 2] = 0;
 __ZNSt3__211char_traitsIwE6assignERwRKw($$0 + ($1 << 2) | 0, $3);
 STACKTOP = sp;
 return;
}

function __ZN6vision14ExtractFREAK84EPhPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff($0, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 $9 = +$9;
 $10 = +$10;
 $11 = +$11;
 $12 = +$12;
 $13 = +$13;
 $14 = +$14;
 $15 = +$15;
 $16 = +$16;
 var $$0 = 0, $17 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 160 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(160);
 $17 = sp;
 if (__ZN6vision20SamplePyramidFREAK84EPfPKNS_25GaussianScaleSpacePyramidERKNS_12FeaturePointEPKfS8_S8_S8_S8_S8_ffffffff($17, $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16) | 0) {
  __ZN6vision14CompareFREAK84EPhPKf($0, $17);
  $$0 = 1;
 } else $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function ___strerror_l($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$012$lcssa = 0, $$01214 = 0, $$016 = 0, $$113 = 0, $$115 = 0, $$115$ph = 0, $6 = 0, label = 0, $$113$looptemp = 0;
 $$016 = 0;
 while (1) {
  if ((HEAPU8[4496 + $$016 >> 0] | 0) == ($0 | 0)) {
   label = 4;
   break;
  }
  $6 = $$016 + 1 | 0;
  if (($6 | 0) == 87) {
   $$115$ph = 87;
   label = 5;
   break;
  } else $$016 = $6;
 }
 if ((label | 0) == 4) if (!$$016) $$012$lcssa = 4592; else {
  $$115$ph = $$016;
  label = 5;
 }
 if ((label | 0) == 5) {
  $$01214 = 4592;
  $$115 = $$115$ph;
  while (1) {
   $$113 = $$01214;
   do {
    $$113$looptemp = $$113;
    $$113 = $$113 + 1 | 0;
   } while ((HEAP8[$$113$looptemp >> 0] | 0) != 0);
   $$115 = $$115 + -1 | 0;
   if (!$$115) {
    $$012$lcssa = $$113;
    break;
   } else $$01214 = $$113;
  }
 }
 return ___lctrans($$012$lcssa, HEAP32[$1 + 20 >> 2] | 0) | 0;
}

function _jinit_phuff_decoder($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$026 = 0, $$027 = 0, $$1 = 0, $$128 = 0, $1 = 0, $11 = 0, $14 = 0, $4 = 0, $6 = 0;
 $1 = $0 + 4 | 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 64) | 0;
 HEAP32[$0 + 444 >> 2] = $4;
 HEAP32[$4 >> 2] = 129;
 $6 = $4 + 44 | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 4) break;
  HEAP32[$6 + ($$0 << 2) >> 2] = 0;
  $$0 = $$0 + 1 | 0;
 }
 $11 = $0 + 36 | 0;
 $14 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, HEAP32[$11 >> 2] << 8) | 0;
 HEAP32[$0 + 160 >> 2] = $14;
 $$026 = 0;
 $$027 = $14;
 while (1) {
  if (($$026 | 0) >= (HEAP32[$11 >> 2] | 0)) break;
  $$1 = 0;
  $$128 = $$027;
  while (1) {
   if (($$1 | 0) == 64) break;
   HEAP32[$$128 >> 2] = -1;
   $$1 = $$1 + 1 | 0;
   $$128 = $$128 + 4 | 0;
  }
  $$026 = $$026 + 1 | 0;
  $$027 = $$027 + 256 | 0;
 }
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $10 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if ($2 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($2 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $2;
  $$0 = $0;
 } else {
  $9 = $2 + 16 & -16;
  $10 = __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm($9) | 0;
  HEAP32[$0 >> 2] = $10;
  HEAP32[$0 + 8 >> 2] = $9 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $2;
  $$0 = $10;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcm($$0, $1, $2) | 0;
 HEAP8[$3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + $2 | 0, $3);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKwSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, 10960, 10992) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE3getES4_S4_RNS_8ios_baseERjP2tmPKcSC_($0, $$byval_copy, $$byval_copy1, $3, $4, $5, 47495, 47503) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function _byteswap($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$020 = 0, $$1 = 0, $1 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(192);
 $1 = sp;
 _byteSwapInt($0, $1);
 _byteSwapInt($0 + 4 | 0, $1 + 4 | 0);
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 3) break;
  $$020 = 0;
  while (1) {
   if (($$020 | 0) == 4) break;
   _byteSwapDouble($0 + 8 + ($$0 << 5) + ($$020 << 3) | 0, $1 + 8 + ($$0 << 5) + ($$020 << 3) | 0);
   $$020 = $$020 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
 }
 $8 = $0 + 176 | 0;
 $$1 = 0;
 while (1) {
  $9 = HEAP32[$8 >> 2] | 0;
  if (($$1 | 0) >= (HEAP32[1712 + ($9 + -1 << 3) >> 2] | 0)) break;
  _byteSwapDouble($0 + 104 + ($$1 << 3) | 0, $1 + 104 + ($$1 << 3) | 0);
  $$1 = $$1 + 1 | 0;
 }
 HEAP32[$1 + 176 >> 2] = $9;
 _memcpy($0 | 0, $1 | 0, 184) | 0;
 STACKTOP = sp;
 return;
}

function __ZN6vision14FREAKExtractor7extractERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS6_9allocatorIS8_EEEE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 __ZN6vision18BinaryFeatureStore21setNumBytesPerFeatureEi($1, 96);
 __ZN6vision18BinaryFeatureStore6resizeEm($1, ((HEAP32[$3 + 4 >> 2] | 0) - (HEAP32[$3 >> 2] | 0) | 0) / 20 | 0);
 __ZN6vision14ExtractFREAK84ERNS_18BinaryFeatureStoreEPKNS_25GaussianScaleSpacePyramidERKNSt3__26vectorINS_12FeaturePointENS5_9allocatorIS7_EEEEPKfSE_SE_SE_SE_SE_ffffffff($1, $2, $3, $0, $0 + 48 | 0, $0 + 96 | 0, $0 + 144 | 0, $0 + 192 | 0, $0 + 240 | 0, +HEAPF32[$0 + 288 >> 2], +HEAPF32[$0 + 292 >> 2], +HEAPF32[$0 + 296 >> 2], +HEAPF32[$0 + 300 >> 2], +HEAPF32[$0 + 304 >> 2], +HEAPF32[$0 + 308 >> 2], +HEAPF32[$0 + 312 >> 2], +HEAPF32[$0 + 316 >> 2]);
 return;
}

function _post_process_1pass($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $11 = 0, $13 = 0, $19 = 0, $7 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $7 = sp;
 $9 = HEAP32[$0 + 432 >> 2] | 0;
 $11 = $6 - (HEAP32[$5 >> 2] | 0) | 0;
 $13 = HEAP32[$9 + 16 >> 2] | 0;
 HEAP32[$7 >> 2] = 0;
 $19 = $9 + 12 | 0;
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$0 + 452 >> 2] | 0) + 4 >> 2] & 7]($0, $1, $2, $3, HEAP32[$19 >> 2] | 0, $7, $11 >>> 0 > $13 >>> 0 ? $13 : $11);
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 4 >> 2] & 31]($0, HEAP32[$19 >> 2] | 0, $4 + (HEAP32[$5 >> 2] << 2) | 0, HEAP32[$7 >> 2] | 0);
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + (HEAP32[$7 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57916) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 16 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57916) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 24 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57884) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__get_monthnameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 16 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57884) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__get_weekdaynameERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 24 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIfEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIeEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE23__do_get_floating_pointIdEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function _setupAR2($id) {
 $id = $id | 0;
 var $call7 = 0, $call8 = 0, $id$addr = 0, $retval$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  $call8 = _createKpmHandle(HEAP32[$call7 + 192 >> 2] | 0) | 0;
  HEAP32[$call7 + 232 >> 2] = $call8;
  $retval$0 = 0;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIjEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function _null_convert_30($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$030 = 0, $$031 = 0, $$032 = 0, $$033 = 0, $$034 = 0, $$035 = 0, $6 = 0, $8 = 0, $9 = 0;
 $6 = HEAP32[$0 + 36 >> 2] | 0;
 $8 = HEAP32[$0 + 112 >> 2] | 0;
 $$030 = $2;
 $$031 = $3;
 $$035 = $4;
 while (1) {
  $9 = $$035 + -1 | 0;
  if (($$035 | 0) <= 0) break;
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= ($6 | 0)) break;
   $$032 = $8;
   $$033 = (HEAP32[$$031 >> 2] | 0) + $$0 | 0;
   $$034 = HEAP32[(HEAP32[$1 + ($$0 << 2) >> 2] | 0) + ($$030 << 2) >> 2] | 0;
   while (1) {
    if (!$$032) break;
    HEAP8[$$033 >> 0] = HEAP8[$$034 >> 0] | 0;
    $$032 = $$032 + -1 | 0;
    $$033 = $$033 + $6 | 0;
    $$034 = $$034 + 1 | 0;
   }
   $$0 = $$0 + 1 | 0;
  }
  $$030 = $$030 + 1 | 0;
  $$031 = $$031 + 4 | 0;
  $$035 = $9;
 }
 return;
}

function _color_quantize3($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$043 = 0, $$044 = 0, $$045 = 0, $10 = 0, $12 = 0, $14 = 0, $7 = 0, $8 = 0;
 $7 = HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 24 >> 2] | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 $10 = HEAP32[$7 + 4 >> 2] | 0;
 $12 = HEAP32[$7 + 8 >> 2] | 0;
 $14 = HEAP32[$0 + 112 >> 2] | 0;
 $$044 = 0;
 while (1) {
  if (($$044 | 0) >= ($3 | 0)) break;
  $$0 = HEAP32[$1 + ($$044 << 2) >> 2] | 0;
  $$043 = $14;
  $$045 = HEAP32[$2 + ($$044 << 2) >> 2] | 0;
  while (1) {
   if (!$$043) break;
   HEAP8[$$045 >> 0] = (HEAPU8[$10 + (HEAPU8[$$0 + 1 >> 0] | 0) >> 0] | 0) + (HEAPU8[$8 + (HEAPU8[$$0 >> 0] | 0) >> 0] | 0) + (HEAPU8[$12 + (HEAPU8[$$0 + 2 >> 0] | 0) >> 0] | 0);
   $$0 = $$0 + 3 | 0;
   $$043 = $$043 + -1 | 0;
   $$045 = $$045 + 1 | 0;
  }
  $$044 = $$044 + 1 | 0;
 }
 return;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedItEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedImEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $5 = HEAP32[$0 >> 2] | 0;
 if ((((HEAP32[$0 + 8 >> 2] | 0) - $5 | 0) / 36 | 0) >>> 0 < $1 >>> 0) {
  __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEEC2EmmS6_($2, $1, ((HEAP32[$0 + 4 >> 2] | 0) - $5 | 0) / 36 | 0, $0 + 8 | 0);
  __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS3_RS5_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEED2Ev($2);
 }
 STACKTOP = sp;
 return;
}
function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE17__do_get_unsignedIyEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57916) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0, $5 + 20 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 __ZNKSt3__28ios_base6getlocEv($$byval_copy, $3);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($$byval_copy, 57884) | 0;
 __ZNSt3__26localeD2Ev($$byval_copy);
 HEAP32[$6 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0, $5 + 20 | 0, $1, $$byval_copy, $4, $7);
 STACKTOP = sp;
 return HEAP32[$1 >> 2] | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIxEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $$byval_copy1 = 0, $10 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy1 = sp + 12 | 0;
 $$byval_copy = sp + 8 | 0;
 $6 = sp + 4 | 0;
 $7 = sp;
 HEAP32[$6 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 HEAP32[$$byval_copy1 >> 2] = HEAP32[$7 >> 2];
 $10 = __ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE15__do_get_signedIlEES4_S4_S4_RNS_8ios_baseERjRT_($0, $$byval_copy, $$byval_copy1, $3, $4, $5) | 0;
 STACKTOP = sp;
 return $10 | 0;
}

function _frexp($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 var $$0 = 0.0, $$016 = 0.0, $2 = 0, $3 = 0, $4 = 0, $9 = 0.0, $storemerge = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 $4 = _bitshift64Lshr($2 | 0, $3 | 0, 52) | 0;
 getTempRet0() | 0;
 switch ($4 & 2047) {
 case 0:
  {
   if ($0 != 0.0) {
    $9 = +_frexp($0 * 18446744073709551616.0, $1);
    $$016 = $9;
    $storemerge = (HEAP32[$1 >> 2] | 0) + -64 | 0;
   } else {
    $$016 = $0;
    $storemerge = 0;
   }
   HEAP32[$1 >> 2] = $storemerge;
   $$0 = $$016;
   break;
  }
 case 2047:
  {
   $$0 = $0;
   break;
  }
 default:
  {
   HEAP32[$1 >> 2] = ($4 & 2047) + -1022;
   HEAP32[tempDoublePtr >> 2] = $2;
   HEAP32[tempDoublePtr + 4 >> 2] = $3 & -2146435073 | 1071644672;
   $$0 = +HEAPF64[tempDoublePtr >> 3];
  }
 }
 return +$$0;
}

function _ungetc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $$pr = 0, $14 = 0, $16 = 0, $19 = 0, $7 = 0, $8 = 0, label = 0;
 do if (($0 | 0) == -1) $$1 = -1; else {
  if ((HEAP32[$1 + 76 >> 2] | 0) > -1) $16 = ___lockfile($1) | 0; else $16 = 0;
  $7 = $1 + 4 | 0;
  $8 = HEAP32[$7 >> 2] | 0;
  if (!$8) {
   ___toread($1) | 0;
   $$pr = HEAP32[$7 >> 2] | 0;
   if ($$pr | 0) {
    $14 = $$pr;
    label = 6;
   }
  } else {
   $14 = $8;
   label = 6;
  }
  if ((label | 0) == 6) if ($14 >>> 0 > ((HEAP32[$1 + 44 >> 2] | 0) + -8 | 0) >>> 0) {
   $19 = $14 + -1 | 0;
   HEAP32[$7 >> 2] = $19;
   HEAP8[$19 >> 0] = $0;
   HEAP32[$1 >> 2] = HEAP32[$1 >> 2] & -17;
   if (!$16) {
    $$1 = $0;
    break;
   }
   ___unlockfile($1);
   $$1 = $0;
   break;
  }
  if (!$16) $$1 = -1; else {
   ___unlockfile($1);
   $$1 = -1;
  }
 } while (0);
 return $$1 | 0;
}

function _scalbn($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 var $$0 = 0.0, $$020 = 0, $10 = 0.0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $3 = 0.0, $5 = 0, $7 = 0;
 if (($1 | 0) > 1023) {
  $3 = $0 * 8988465674311579538646525.0e283;
  $5 = ($1 | 0) > 2046;
  $7 = $1 + -2046 | 0;
  $$0 = $5 ? $3 * 8988465674311579538646525.0e283 : $3;
  $$020 = $5 ? (($7 | 0) < 1023 ? $7 : 1023) : $1 + -1023 | 0;
 } else if (($1 | 0) < -1022) {
  $10 = $0 * 2.2250738585072014e-308;
  $12 = ($1 | 0) < -2044;
  $14 = $1 + 2044 | 0;
  $$0 = $12 ? $10 * 2.2250738585072014e-308 : $10;
  $$020 = $12 ? (($14 | 0) > -1022 ? $14 : -1022) : $1 + 1022 | 0;
 } else {
  $$0 = $0;
  $$020 = $1;
 }
 $17 = _bitshift64Shl($$020 + 1023 | 0, 0, 52) | 0;
 $18 = getTempRet0() | 0;
 HEAP32[tempDoublePtr >> 2] = $17;
 HEAP32[tempDoublePtr + 4 >> 2] = $18;
 return +($$0 * +HEAPF64[tempDoublePtr >> 3]);
}

function __ZN6vision27AddHomographyPointContraintIfEEvPT_PKS1_S4_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $29 = 0, $5 = 0;
 HEAPF32[$0 >> 2] = -+HEAPF32[$1 >> 2];
 $5 = $1 + 4 | 0;
 HEAPF32[$0 + 4 >> 2] = -+HEAPF32[$5 >> 2];
 HEAPF32[$0 + 8 >> 2] = -1.0;
 __ZN6vision11ZeroVector3IfEEvPT_($0 + 12 | 0);
 HEAPF32[$0 + 24 >> 2] = +HEAPF32[$2 >> 2] * +HEAPF32[$1 >> 2];
 HEAPF32[$0 + 28 >> 2] = +HEAPF32[$2 >> 2] * +HEAPF32[$5 >> 2];
 HEAP32[$0 + 32 >> 2] = HEAP32[$2 >> 2];
 __ZN6vision11ZeroVector3IfEEvPT_($0 + 36 | 0);
 HEAPF32[$0 + 48 >> 2] = -+HEAPF32[$1 >> 2];
 HEAPF32[$0 + 52 >> 2] = -+HEAPF32[$5 >> 2];
 HEAPF32[$0 + 56 >> 2] = -1.0;
 $29 = $2 + 4 | 0;
 HEAPF32[$0 + 60 >> 2] = +HEAPF32[$29 >> 2] * +HEAPF32[$1 >> 2];
 HEAPF32[$0 + 64 >> 2] = +HEAPF32[$29 >> 2] * +HEAPF32[$5 >> 2];
 HEAP32[$0 + 68 >> 2] = HEAP32[$29 >> 2];
 return;
}

function __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$pre$phiZ2D = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $3 = 0, $6 = 0, $9 = 0;
 $3 = $1 + 4 | 0;
 HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
 $6 = $0 + 8 | 0;
 $9 = HEAP32[$6 >> 2] | 0;
 if ((HEAP32[$0 + 12 >> 2] | 0) - $9 >> 2 >>> 0 > $2 >>> 0) {
  $$pre$phiZ2D = $6;
  $16 = $9;
 } else {
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE6resizeEm($6, $2 + 1 | 0);
  $$pre$phiZ2D = $6;
  $16 = HEAP32[$6 >> 2] | 0;
 }
 $17 = HEAP32[$16 + ($2 << 2) >> 2] | 0;
 if ($17 | 0) {
  $19 = $17 + 4 | 0;
  $20 = HEAP32[$19 >> 2] | 0;
  HEAP32[$19 >> 2] = $20 + -1;
  if (!$20) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$17 >> 2] | 0) + 8 >> 2] & 255]($17);
 }
 HEAP32[(HEAP32[$$pre$phiZ2D >> 2] | 0) + ($2 << 2) >> 2] = $1;
 return;
}

function __ZN10emscripten8internal7InvokerIiJiiiEE6invokeEPFiiiiEiii($fn, $args, $args1, $args3) {
 $fn = $fn | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 $args3 = $args3 | 0;
 var $call = 0, $call5 = 0, $call6 = 0, $call7 = 0, $call8 = 0, $ref$tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $ref$tmp = sp;
 $call = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args) | 0;
 $call5 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args1) | 0;
 $call6 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args3) | 0;
 $call7 = FUNCTION_TABLE_iiii[$fn & 63]($call, $call5, $call6) | 0;
 HEAP32[$ref$tmp >> 2] = $call7;
 $call8 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi($ref$tmp) | 0;
 STACKTOP = sp;
 return $call8 | 0;
}

function __ZN10emscripten8internal7InvokerIiJNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiS8_EPNS0_11BindingTypeIS8_EUt_E($fn, $args) {
 $fn = $fn | 0;
 $args = $args | 0;
 var $agg$tmp = 0, $call = 0, $call1 = 0, $ref$tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $ref$tmp = sp + 12 | 0;
 $agg$tmp = sp;
 __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12fromWireTypeEPNS9_Ut_E($agg$tmp, $args);
 $call = FUNCTION_TABLE_ii[$fn & 127]($agg$tmp) | 0;
 HEAP32[$ref$tmp >> 2] = $call;
 $call1 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi($ref$tmp) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($agg$tmp);
 STACKTOP = sp;
 return $call1 | 0;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $16 = 0, $25 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 if (HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0) {
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($1, $0);
  if (HEAP8[$1 >> 0] | 0) {
   $16 = HEAP32[$0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
   if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$16 >> 2] | 0) + 24 >> 2] & 127]($16) | 0) == -1) {
    $25 = $0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0;
    __ZNSt3__28ios_base5clearEj($25, HEAP32[$25 + 16 >> 2] | 1);
   }
  }
  __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($1);
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) {
  if (($8 | 0) < 69) $$0 = $8 + 2e3 | 0; else $$0 = ($8 | 0) < 100 ? $8 + 1900 | 0 : $8;
  HEAP32[$1 >> 2] = $$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_yearERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) {
  if (($8 | 0) < 69) $$0 = $8 + 2e3 | 0; else $$0 = ($8 | 0) < 100 ? $8 + 1900 | 0 : $8;
  HEAP32[$1 >> 2] = $$0 + -1900;
 }
 STACKTOP = sp;
 return;
}

function ___stdio_seek($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $17 = 0, $21 = 0, $22 = 0, $4 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $vararg_buffer = sp + 8 | 0;
 $4 = sp;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = $2;
 HEAP32[$vararg_buffer + 8 >> 2] = $1;
 HEAP32[$vararg_buffer + 12 >> 2] = $4;
 HEAP32[$vararg_buffer + 16 >> 2] = $3;
 if ((___syscall_ret(___syscall140(140, $vararg_buffer | 0) | 0) | 0) < 0) {
  $17 = $4;
  HEAP32[$17 >> 2] = -1;
  HEAP32[$17 + 4 >> 2] = -1;
  $21 = -1;
  $22 = -1;
 } else {
  $11 = $4;
  $21 = HEAP32[$11 + 4 >> 2] | 0;
  $22 = HEAP32[$11 >> 2] | 0;
 }
 setTempRet0($21 | 0);
 STACKTOP = sp;
 return $22 | 0;
}

function _getMarkerNum($id) {
 $id = $id | 0;
 var $arhandle = 0, $id$addr = 0, $retval$0$in = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0$in = 13652; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $retval$0$in = (HEAP32[$arhandle >> 2] | 0) + 44 | 0;
 }
 STACKTOP = sp;
 return HEAP32[$retval$0$in >> 2] | 0;
}

function ___ftello_unlocked($0) {
 $0 = $0 | 0;
 var $11 = 0, $12 = 0, $13 = 0, $19 = 0, $22 = 0, $23 = 0, $28 = 0, $31 = 0, $33 = 0, $34 = 0;
 if (!(HEAP32[$0 >> 2] & 128)) $11 = 1; else $11 = (HEAP32[$0 + 20 >> 2] | 0) >>> 0 > (HEAP32[$0 + 28 >> 2] | 0) >>> 0 ? 2 : 1;
 $12 = FUNCTION_TABLE_iiiii[HEAP32[$0 + 40 >> 2] & 15]($0, 0, 0, $11) | 0;
 $13 = getTempRet0() | 0;
 if (($13 | 0) < 0) {
  $33 = $13;
  $34 = $12;
 } else {
  $19 = (HEAP32[$0 + 8 >> 2] | 0) - (HEAP32[$0 + 4 >> 2] | 0) | 0;
  $22 = _i64Subtract($12 | 0, $13 | 0, $19 | 0, (($19 | 0) < 0) << 31 >> 31 | 0) | 0;
  $23 = getTempRet0() | 0;
  $28 = (HEAP32[$0 + 20 >> 2] | 0) - (HEAP32[$0 + 28 >> 2] | 0) | 0;
  $31 = _i64Add($22 | 0, $23 | 0, $28 | 0, (($28 | 0) < 0) << 31 >> 31 | 0) | 0;
  $33 = getTempRet0() | 0;
  $34 = $31;
 }
 setTempRet0($33 | 0);
 return $34 | 0;
}

function _setProjectionNearPlane($id, $projectionNearPlane) {
 $id = $id | 0;
 $projectionNearPlane = +$projectionNearPlane;
 var $id$addr = 0, $nearPlane = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0) {
  $nearPlane = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 264 | 0;
  HEAPF64[$nearPlane >> 3] = $projectionNearPlane;
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__213__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEENS5_IS9_Lm4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $3 = 0, $6 = 0, $8 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i + -16 | 0;
   __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev($6);
   $$0$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  $8 = HEAP32[$0 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE10deallocateEPS8_m($0 + 12 | 0, $8, (HEAP32[$0 + 8 >> 2] | 0) - $8 >> 4);
 }
 return;
}

function _arMatrixTrans($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$024 = 0, $$025 = 0, $$026 = 0, $$027 = 0, $$1 = 0, $3 = 0, $8 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if (($3 | 0) == (HEAP32[$1 + 8 >> 2] | 0)) {
  $8 = HEAP32[$0 + 8 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$1 + 4 >> 2] | 0)) {
   $$0 = HEAP32[$0 >> 2] | 0;
   $$026 = 0;
   while (1) {
    if (($$026 | 0) >= ($3 | 0)) {
     $$027 = 0;
     break L1;
    }
    $$024 = (HEAP32[$1 >> 2] | 0) + ($$026 << 3) | 0;
    $$025 = 0;
    $$1 = $$0;
    while (1) {
     if (($$025 | 0) >= ($8 | 0)) break;
     HEAPF64[$$1 >> 3] = +HEAPF64[$$024 >> 3];
     $$024 = $$024 + ($3 << 3) | 0;
     $$025 = $$025 + 1 | 0;
     $$1 = $$1 + 8 | 0;
    }
    $$0 = $$1;
    $$026 = $$026 + 1 | 0;
   }
  } else $$027 = -1;
 } else $$027 = -1; while (0);
 return $$027 | 0;
}

function _getProcessingImage($id) {
 $id = $id | 0;
 var $arhandle = 0, $id$addr = 0, $retval$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0 = 0; else {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  $retval$0 = HEAP32[(HEAP32[$arhandle >> 2] | 0) + 4834148 >> 2] | 0;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function _getMultiMarkerCount($id) {
 $id = $id | 0;
 var $call7 = 0, $id$addr = 0, $retval$0 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0 = -1; else {
  $call7 = __ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0;
  $retval$0 = (HEAP32[$call7 + 284 >> 2] | 0) - (HEAP32[$call7 + 280 >> 2] | 0) >> 3;
 }
 STACKTOP = sp;
 return $retval$0 | 0;
}

function __ZN10emscripten8functionIiJiNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_($name, $fn) {
 $name = $name | 0;
 $fn = $fn | 0;
 var $args = 0, $call = 0, $call1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $args = sp;
 $call = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getCountEv($args) | 0;
 $call1 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv($args) | 0;
 __embind_register_function($name | 0, $call | 0, $call1 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiiiEEEPKcv() | 0, 34, $fn | 0);
 STACKTOP = sp;
 return;
}

function _setProjectionFarPlane($id, $projectionFarPlane) {
 $id = $id | 0;
 $projectionFarPlane = +$projectionFarPlane;
 var $farPlane = 0, $id$addr = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0) {
  $farPlane = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 272 | 0;
  HEAPF64[$farPlane >> 3] = $projectionFarPlane;
 }
 STACKTOP = sp;
 return;
}

function _jinit_1pass_quantizer($0) {
 $0 = $0 | 0;
 var $13 = 0, $21 = 0, $4 = 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, 88) | 0;
 HEAP32[$0 + 460 >> 2] = $4;
 HEAP32[$4 >> 2] = 42;
 HEAP32[$4 + 8 >> 2] = 122;
 HEAP32[$4 + 12 >> 2] = 123;
 HEAP32[$4 + 68 >> 2] = 0;
 HEAP32[$4 + 52 >> 2] = 0;
 if ((HEAP32[$0 + 120 >> 2] | 0) > 4) {
  $13 = HEAP32[$0 >> 2] | 0;
  HEAP32[$13 + 20 >> 2] = 55;
  HEAP32[$13 + 24 >> 2] = 4;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 if ((HEAP32[$0 + 96 >> 2] | 0) > 256) {
  $21 = HEAP32[$0 >> 2] | 0;
  HEAP32[$21 + 20 >> 2] = 57;
  HEAP32[$21 + 24 >> 2] = 256;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 _create_colormap($0);
 _create_colorindex($0);
 if ((HEAP32[$0 + 88 >> 2] | 0) == 2) _alloc_fs_workspace($0);
 return;
}

function ___fflush_unlocked($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $17 = 0, $3 = 0, label = 0;
 $1 = $0 + 20 | 0;
 $3 = $0 + 28 | 0;
 if ((HEAP32[$1 >> 2] | 0) >>> 0 > (HEAP32[$3 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
  if (!(HEAP32[$1 >> 2] | 0)) $$0 = -1; else label = 3;
 } else label = 3;
 if ((label | 0) == 3) {
  $10 = $0 + 4 | 0;
  $11 = HEAP32[$10 >> 2] | 0;
  $12 = $0 + 8 | 0;
  $13 = HEAP32[$12 >> 2] | 0;
  if ($11 >>> 0 < $13 >>> 0) {
   $17 = $11 - $13 | 0;
   FUNCTION_TABLE_iiiii[HEAP32[$0 + 40 >> 2] & 15]($0, $17, (($17 | 0) < 0) << 31 >> 31, 1) | 0;
   getTempRet0() | 0;
  }
  HEAP32[$0 + 16 >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$1 >> 2] = 0;
  HEAP32[$12 >> 2] = 0;
  HEAP32[$10 >> 2] = 0;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZN10emscripten8functionIiJNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEJEEEvPKcPFT_DpT0_EDpT1_($name, $fn) {
 $name = $name | 0;
 $fn = $fn | 0;
 var $args = 0, $call = 0, $call1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $args = sp;
 $call = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getCountEv($args) | 0;
 $call1 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv($args) | 0;
 __embind_register_function($name | 0, $call | 0, $call1 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv() | 0, 40, $fn | 0);
 STACKTOP = sp;
 return;
}

function _create_odither_tables($0) {
 $0 = $0 | 0;
 var $$028 = 0, $$029 = 0, $$1 = 0, $14 = 0, $2 = 0, $3 = 0, $7 = 0, label = 0;
 $2 = HEAP32[$0 + 460 >> 2] | 0;
 $3 = $0 + 120 | 0;
 $$029 = 0;
 while (1) {
  if (($$029 | 0) >= (HEAP32[$3 >> 2] | 0)) break;
  $7 = HEAP32[$2 + 32 + ($$029 << 2) >> 2] | 0;
  $$028 = 0;
  while (1) {
   if ($$028 >>> 0 >= $$029 >>> 0) {
    label = 8;
    break;
   }
   if (($7 | 0) == (HEAP32[$2 + 32 + ($$028 << 2) >> 2] | 0)) {
    label = 7;
    break;
   }
   $$028 = $$028 + 1 | 0;
  }
  if ((label | 0) == 7) {
   label = 0;
   $14 = HEAP32[$2 + 52 + ($$028 << 2) >> 2] | 0;
   if (!$14) label = 8; else $$1 = $14;
  }
  if ((label | 0) == 8) {
   label = 0;
   $$1 = _make_odither_array($0, $7) | 0;
  }
  HEAP32[$2 + 52 + ($$029 << 2) >> 2] = $$1;
  $$029 = $$029 + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_119parse_cv_qualifiersEPKcS2_Rj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $15 = 0, $4 = 0, $6 = 0, $7 = 0, $9 = 0;
 HEAP32[$2 >> 2] = 0;
 if (($0 | 0) == ($1 | 0)) $$2 = $0; else {
  $4 = HEAP8[$0 >> 0] | 0;
  if ($4 << 24 >> 24 == 114) {
   HEAP32[$2 >> 2] = 4;
   $6 = $0 + 1 | 0;
   $$0 = $6;
   $10 = 4;
   $7 = HEAP8[$6 >> 0] | 0;
  } else {
   $$0 = $0;
   $10 = 0;
   $7 = $4;
  }
  if ($7 << 24 >> 24 == 86) {
   $9 = $10 | 2;
   HEAP32[$2 >> 2] = $9;
   $11 = $$0 + 1 | 0;
   $$1 = $11;
   $12 = HEAP8[$11 >> 0] | 0;
   $15 = $9;
  } else {
   $$1 = $$0;
   $12 = $7;
   $15 = $10;
  }
  if ($12 << 24 >> 24 == 75) {
   HEAP32[$2 >> 2] = $15 | 1;
   $$2 = $$1 + 1 | 0;
  } else $$2 = $$1;
 }
 return $$2 | 0;
}

function _strtox($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $18 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $8 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 $3 = sp;
 _memset($3 | 0, 0, 144) | 0;
 $4 = $3 + 4 | 0;
 HEAP32[$4 >> 2] = $0;
 $5 = $3 + 8 | 0;
 HEAP32[$5 >> 2] = -1;
 HEAP32[$3 + 44 >> 2] = $0;
 HEAP32[$3 + 76 >> 2] = -1;
 ___shlim($3, 0, 0);
 $8 = +___floatscan($3, $2, 1);
 $10 = $3 + 120 | 0;
 $18 = (HEAP32[$4 >> 2] | 0) - (HEAP32[$5 >> 2] | 0) | 0;
 $21 = _i64Add(HEAP32[$10 >> 2] | 0, HEAP32[$10 + 4 >> 2] | 0, $18 | 0, (($18 | 0) < 0) << 31 >> 31 | 0) | 0;
 $22 = getTempRet0() | 0;
 if ($1 | 0) HEAP32[$1 >> 2] = ($21 | 0) == 0 & ($22 | 0) == 0 ? $0 : $0 + $21 | 0;
 STACKTOP = sp;
 return +$8;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 12 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_12_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 12 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE5clearEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $4 = 0, $7 = 0;
 $1 = $0 + 12 | 0;
 if (HEAP32[$1 >> 2] | 0) {
  $4 = $0 + 8 | 0;
  __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS2_PvEEEE($0, HEAP32[$4 >> 2] | 0);
  HEAP32[$4 >> 2] = 0;
  $7 = HEAP32[$0 + 4 >> 2] | 0;
  $$0 = 0;
  while (1) {
   if (($$0 | 0) == ($7 | 0)) break;
   HEAP32[(HEAP32[$0 >> 2] | 0) + ($$0 << 2) >> 2] = 0;
   $$0 = $$0 + 1 | 0;
  }
  HEAP32[$1 >> 2] = 0;
 }
 return;
}

function _fill_input_buffer($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$pre$phi22Z2D = 0, $12 = 0, $15 = 0, $2 = 0, $3 = 0, $7 = 0, $9 = 0;
 $2 = HEAP32[$0 + 24 >> 2] | 0;
 $3 = $2 + 32 | 0;
 $7 = _fread(HEAP32[$3 >> 2] | 0, 1, 4096, HEAP32[$2 + 28 >> 2] | 0) | 0;
 $9 = $2 + 36 | 0;
 if (!$7) {
  if (!(HEAP32[$9 >> 2] | 0)) $$pre$phi22Z2D = $0; else {
   $12 = HEAP32[$0 >> 2] | 0;
   HEAP32[$12 + 20 >> 2] = 42;
   FUNCTION_TABLE_vi[HEAP32[$12 >> 2] & 255]($0);
   $$pre$phi22Z2D = $0;
  }
  $15 = HEAP32[$0 >> 2] | 0;
  HEAP32[$15 + 20 >> 2] = 120;
  FUNCTION_TABLE_vii[HEAP32[$15 + 4 >> 2] & 63]($$pre$phi22Z2D, -1);
  HEAP8[HEAP32[$3 >> 2] >> 0] = -1;
  HEAP8[(HEAP32[$3 >> 2] | 0) + 1 >> 0] = -39;
  $$0 = 2;
 } else $$0 = $7;
 HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$2 + 4 >> 2] = $$0;
 HEAP32[$9 >> 2] = 0;
 return 1;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 31 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 3) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 366 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE9__get_dayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 + -1 | 0) >>> 0 < 31 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE18__get_day_year_numERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 3) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 366 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function _process_data_simple_main_37($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$pre$phiZ2D = 0, $13 = 0, $17 = 0, $22 = 0, $5 = 0, $6 = 0, label = 0;
 $5 = HEAP32[$0 + 424 >> 2] | 0;
 $6 = $5 + 48 | 0;
 if (!(HEAP32[$6 >> 2] | 0)) {
  $13 = $5 + 8 | 0;
  if (FUNCTION_TABLE_iii[HEAP32[(HEAP32[$0 + 428 >> 2] | 0) + 12 >> 2] & 63]($0, $13) | 0) {
   HEAP32[$6 >> 2] = 1;
   $$pre$phiZ2D = $13;
   label = 5;
  }
 } else {
  $$pre$phiZ2D = $5 + 8 | 0;
  label = 5;
 }
 if ((label | 0) == 5) {
  $17 = HEAP32[$0 + 316 >> 2] | 0;
  $22 = $5 + 52 | 0;
  FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$0 + 432 >> 2] | 0) + 4 >> 2] & 7]($0, $$pre$phiZ2D, $22, $17, $1, $2, $3);
  if ((HEAP32[$22 >> 2] | 0) >>> 0 >= $17 >>> 0) {
   HEAP32[$6 >> 2] = 0;
   HEAP32[$22 >> 2] = 0;
  }
 }
 return;
}

function _h2v2_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$033 = 0, $$034 = 0, $$035 = 0, $12 = 0, $14 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $0 + 312 | 0;
 $6 = $0 + 112 | 0;
 $$0 = 0;
 $$033 = 0;
 while (1) {
  if (($$0 | 0) >= (HEAP32[$5 >> 2] | 0)) break;
  $12 = HEAP32[$4 + ($$0 << 2) >> 2] | 0;
  $14 = $12 + (HEAP32[$6 >> 2] | 0) | 0;
  $$034 = HEAP32[$2 + ($$033 << 2) >> 2] | 0;
  $$035 = $12;
  while (1) {
   if ($$035 >>> 0 >= $14 >>> 0) break;
   $17 = HEAP8[$$034 >> 0] | 0;
   HEAP8[$$035 >> 0] = $17;
   HEAP8[$$035 + 1 >> 0] = $17;
   $$034 = $$034 + 1 | 0;
   $$035 = $$035 + 2 | 0;
  }
  _jcopy_sample_rows($4, $$0, $4, $$0 | 1, 1, HEAP32[$6 >> 2] | 0);
  $$0 = $$0 + 2 | 0;
  $$033 = $$033 + 1 | 0;
 }
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 13 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8 + -1; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_monthERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 13 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8 + -1; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS9_PvEENS_22__hash_node_destructorINS6_ISW_EEEEEEmOT_DpOT0_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $7 = 0;
 $7 = __Znwm(24) | 0;
 HEAP32[$0 >> 2] = $7;
 HEAP32[$0 + 4 >> 2] = $1 + 8;
 HEAP32[$7 + 8 >> 2] = HEAP32[HEAP32[$4 >> 2] >> 2];
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$7 + 16 >> 2] = 0;
 HEAP32[$7 + 20 >> 2] = 0;
 HEAP8[$0 + 8 >> 0] = 1;
 HEAP32[$7 + 4 >> 2] = $2;
 HEAP32[$7 >> 2] = 0;
 return;
}

function __ZN6vision19downsample_bilinearEPfPKfmm($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$030 = 0, $$031 = 0, $$032 = 0, $$033 = 0, $$1 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0;
 $4 = $2 >>> 1;
 $5 = $3 >>> 1;
 $6 = $2 << 1;
 $$030 = 0;
 $$033 = $0;
 while (1) {
  if (($$030 | 0) == ($5 | 0)) break;
  $8 = $1 + ((Math_imul($6, $$030) | 0) << 2) | 0;
  $$0 = 0;
  $$031 = $8 + ($2 << 2) | 0;
  $$032 = $8;
  $$1 = $$033;
  while (1) {
   if (($$0 | 0) == ($4 | 0)) break;
   HEAPF32[$$1 >> 2] = (+HEAPF32[$$032 >> 2] + +HEAPF32[$$032 + 4 >> 2] + +HEAPF32[$$031 >> 2] + +HEAPF32[$$031 + 4 >> 2]) * .25;
   $$0 = $$0 + 1 | 0;
   $$031 = $$031 + 8 | 0;
   $$032 = $$032 + 8 | 0;
   $$1 = $$1 + 4 | 0;
  }
  $$030 = $$030 + 1 | 0;
  $$033 = $$033 + ($4 << 2) | 0;
 }
 return;
}

function _icpGetQ_from_S($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$sink = 0.0, $$sink1 = 0.0, $11 = 0.0, $14 = 0.0, $2 = 0.0, $4 = 0, $5 = 0.0, $8 = 0, $9 = 0.0;
 $2 = +HEAPF64[$1 >> 3];
 $4 = $1 + 8 | 0;
 $5 = +HEAPF64[$4 >> 3];
 $8 = $1 + 16 | 0;
 $9 = +HEAPF64[$8 >> 3];
 $11 = $2 * $2 + $5 * $5 + $9 * $9;
 if ($11 == 0.0) {
  HEAPF64[$0 >> 3] = 1.0;
  HEAPF64[$0 + 8 >> 3] = 0.0;
  $$sink = 0.0;
  $$sink1 = 0.0;
 } else {
  $14 = +Math_sqrt(+$11);
  HEAPF64[$0 >> 3] = $2 / $14;
  HEAPF64[$0 + 8 >> 3] = +HEAPF64[$4 >> 3] / $14;
  $$sink = $14;
  $$sink1 = +HEAPF64[$8 >> 3] / $14;
 }
 HEAPF64[$0 + 16 >> 3] = $$sink1;
 HEAPF64[$0 + 24 >> 3] = $$sink;
 HEAPF64[$0 + 32 >> 3] = +HEAPF64[$1 + 24 >> 3];
 HEAPF64[$0 + 40 >> 3] = +HEAPF64[$1 + 32 >> 3];
 HEAPF64[$0 + 48 >> 3] = +HEAPF64[$1 + 40 >> 3];
 return;
}

function _getProjectionNearPlane($id) {
 $id = $id | 0;
 var $id$addr = 0, $nearPlane = 0, $retval$0 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0 = -1.0; else {
  $nearPlane = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 264 | 0;
  $retval$0 = +HEAPF64[$nearPlane >> 3];
 }
 STACKTOP = sp;
 return +$retval$0;
}

function _fclose($0) {
 $0 = $0 | 0;
 var $$pre = 0, $10 = 0, $15 = 0, $21 = 0, $25 = 0, $27 = 0, $29 = 0, $7 = 0, $8 = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) $29 = ___lockfile($0) | 0; else $29 = 0;
 ___unlist_locked_file($0);
 $7 = (HEAP32[$0 >> 2] & 1 | 0) != 0;
 if (!$7) {
  $8 = ___ofl_lock() | 0;
  $10 = HEAP32[$0 + 52 >> 2] | 0;
  $$pre = $0 + 56 | 0;
  if ($10 | 0) HEAP32[$10 + 56 >> 2] = HEAP32[$$pre >> 2];
  $15 = HEAP32[$$pre >> 2] | 0;
  if ($15 | 0) HEAP32[$15 + 52 >> 2] = $10;
  if ((HEAP32[$8 >> 2] | 0) == ($0 | 0)) HEAP32[$8 >> 2] = $15;
  ___ofl_unlock();
 }
 $21 = _fflush($0) | 0;
 $25 = FUNCTION_TABLE_ii[HEAP32[$0 + 12 >> 2] & 127]($0) | 0 | $21;
 $27 = HEAP32[$0 + 96 >> 2] | 0;
 if ($27 | 0) _free($27);
 if ($7) {
  if ($29 | 0) ___unlockfile($0);
 } else _free($0);
 return $25 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 1) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 7 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 61 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 60 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13__get_weekdayERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 1) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 7 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_secondERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 61 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE12__get_minuteERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 60 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function _getProjectionFarPlane($id) {
 $id = $id | 0;
 var $farPlane = 0, $id$addr = 0, $retval$0 = 0.0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (!(__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0)) $retval$0 = -1.0; else {
  $farPlane = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 272 | 0;
  $retval$0 = +HEAPF64[$farPlane >> 3];
 }
 STACKTOP = sp;
 return +$retval$0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 24 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE10__get_hourERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 2) | 0;
 $9 = HEAP32[$4 >> 2] | 0;
 if (($8 | 0) < 24 & ($9 & 4 | 0) == 0) HEAP32[$1 >> 2] = $8; else HEAP32[$4 >> 2] = $9 | 4;
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -16 | 0;
  HEAP32[$3 >> 2] = $6;
  __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev($6);
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE10deallocateEPS8_m(HEAP32[$0 + 16 >> 2] | 0, $7, (HEAP32[$0 + 12 >> 2] | 0) - $7 >> 4);
 return;
}

function _kpmFopen($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $11 = 0, $5 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 do if (!$0) $$0 = 0; else {
  if (!$1) {
   $$0 = _fopen($0, $2) | 0;
   break;
  }
  $5 = _strlen($0) | 0;
  $9 = _malloc($5 + 2 + (_strlen($1) | 0) | 0) | 0;
  if (!$9) {
   _arLog(0, 3, 20454, $vararg_buffer);
   _exit(1);
  } else {
   HEAP32[$vararg_buffer1 >> 2] = $0;
   HEAP32[$vararg_buffer1 + 4 >> 2] = $1;
   _sprintf($9, 20471, $vararg_buffer1) | 0;
   $11 = _fopen($9, $2) | 0;
   _free($9);
   $$0 = $11;
   break;
  }
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $12 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = ($3 - $4 | 0) / 12 | 0;
 $8 = $4;
 $9 = $3;
 if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8__appendEm($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) {
  $12 = $8 + ($1 * 12 | 0) | 0;
  $$0$i$i = $9;
  while (1) {
   if (($$0$i$i | 0) == ($12 | 0)) break;
   $14 = $$0$i$i + -12 | 0;
   __ZNSt3__213__vector_baseINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev($14);
   $$0$i$i = $14;
  }
  HEAP32[$2 >> 2] = $12;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_112parse_numberEPKcS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$pn = 0, $$017 = 0, $$2 = 0, $7 = 0, $spec$select = 0;
 L1 : do if (($0 | 0) == ($1 | 0)) $$2 = $0; else {
  $spec$select = (HEAP8[$0 >> 0] | 0) == 110 ? $0 + 1 | 0 : $0;
  if (($spec$select | 0) == ($1 | 0)) $$2 = $0; else {
   $7 = HEAP8[$spec$select >> 0] | 0;
   if ($7 << 24 >> 24 == 48) {
    $$2 = $spec$select + 1 | 0;
    break;
   }
   if (($7 + -49 & 255) < 9) {
    $$0$pn = $spec$select;
    while (1) {
     $$017 = $$0$pn + 1 | 0;
     if (($$017 | 0) == ($1 | 0)) {
      $$2 = $1;
      break L1;
     }
     if (((HEAP8[$$017 >> 0] | 0) + -48 | 0) >>> 0 < 10) $$0$pn = $$017; else {
      $$2 = $$017;
      break;
     }
    }
   } else $$2 = $0;
  }
 } while (0);
 return $$2 | 0;
}

function _alloc_large($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $11 = 0, $16 = 0, $17 = 0, $19 = 0, $22 = 0, $4 = 0, $6 = 0;
 $4 = HEAP32[$0 + 4 >> 2] | 0;
 if ($2 >>> 0 > 999999984) _out_of_memory($0, 3);
 $6 = $2 & 7;
 $$0 = (($6 | 0) == 0 ? 0 : 8 - $6 | 0) + $2 | 0;
 if ($1 >>> 0 > 1) {
  $11 = HEAP32[$0 >> 2] | 0;
  HEAP32[$11 + 20 >> 2] = 14;
  HEAP32[$11 + 24 >> 2] = $1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $16 = $$0 + 16 | 0;
 $17 = _jpeg_get_large($0, $16) | 0;
 if (!$17) _out_of_memory($0, 4);
 $19 = $4 + 76 | 0;
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + $16;
 $22 = $4 + 60 + ($1 << 2) | 0;
 HEAP32[$17 >> 2] = HEAP32[$22 >> 2];
 HEAP32[$17 + 4 >> 2] = $$0;
 HEAP32[$17 + 8 >> 2] = 0;
 HEAP32[$22 >> 2] = $17;
 return $17 + 16 | 0;
}

function _setMatrixCodeType($id, $type) {
 $id = $id | 0;
 $type = $type | 0;
 var $arhandle = 0, $id$addr = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $id$addr = sp;
 HEAP32[$id$addr >> 2] = $id;
 if (__ZNSt3__212__hash_tableINS_17__hash_value_typeIi12arControllerEENS_22__unordered_map_hasherIiS3_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS3_NS_8equal_toIiEELb1EEENS_9allocatorIS3_EEE4findIiEENS_15__hash_iteratorIPNS_11__hash_nodeIS3_PvEEEERKT_(56144, $id$addr) | 0) {
  $arhandle = (__ZNSt3__213unordered_mapIi12arControllerNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS1_EEEEEixERS8_(56144, $id$addr) | 0) + 216 | 0;
  _arSetMatrixCodeType(HEAP32[$arhandle >> 2] | 0, $type) | 0;
 }
 STACKTOP = sp;
 return;
}

function _prepare_range_limit_table($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, dest = 0, src = 0, stop = 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, 1408) | 0;
 $5 = $4 + 256 | 0;
 $6 = $0 + 324 | 0;
 HEAP32[$6 >> 2] = $5;
 _memset($4 | 0, 0, 256) | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 256) break;
  HEAP8[$5 + $$0 >> 0] = $$0;
  $$0 = $$0 + 1 | 0;
 }
 $10 = $4 + 384 | 0;
 $$1 = 128;
 while (1) {
  if (($$1 | 0) == 512) break;
  HEAP8[$10 + $$1 >> 0] = -1;
  $$1 = $$1 + 1 | 0;
 }
 _memset($4 + 896 | 0, 0, 384) | 0;
 dest = $4 + 1280 | 0;
 src = HEAP32[$6 >> 2] | 0;
 stop = dest + 128 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $10 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if ($2 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($2 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $2;
  $$0 = $0;
 } else {
  $9 = $2 + 16 & -16;
  $10 = __Znwm($9) | 0;
  HEAP32[$0 >> 2] = $10;
  HEAP32[$0 + 8 >> 2] = $9 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $2;
  $$0 = $10;
 }
 __ZNSt3__211char_traitsIcE4copyEPcPKcm($$0, $1, $2) | 0;
 HEAP8[$3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + $2 | 0, $3);
 STACKTOP = sp;
 return;
}

function __ZN6vision5Image19calculate_unit_sizeENS_9ImageTypeE($0) {
 $0 = $0 | 0;
 var $$08 = 0, $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 switch ($0 | 0) {
 case 1:
  {
   $$08 = $0;
   break;
  }
 case 2:
  {
   $$08 = 4;
   break;
  }
 default:
  {
   $2 = ___cxa_allocate_exception(16) | 0;
   HEAP32[$1 >> 2] = 0;
   HEAP32[$1 + 4 >> 2] = 0;
   HEAP32[$1 + 8 >> 2] = 0;
   __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($1, 33266, __ZNSt3__211char_traitsIcE6lengthEPKc(33266) | 0);
   __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($2, $1);
   ___cxa_throw($2 | 0, 11016, 5);
  }
 }
 STACKTOP = sp;
 return $$08 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $10 = 0, $3 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if ($1 >>> 0 > 4294967279) __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0);
 if ($1 >>> 0 < 11) {
  HEAP8[$0 + 11 >> 0] = $1;
  $$0 = $0;
 } else {
  $9 = $1 + 16 & -16;
  $10 = __Znwm($9) | 0;
  HEAP32[$0 >> 2] = $10;
  HEAP32[$0 + 8 >> 2] = $9 | -2147483648;
  HEAP32[$0 + 4 >> 2] = $1;
  $$0 = $10;
 }
 __ZNSt3__211char_traitsIcE6assignEPcmc($$0, $1, $2) | 0;
 HEAP8[$3 >> 0] = 0;
 __ZNSt3__211char_traitsIcE6assignERcRKc($$0 + $1 | 0, $3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $7 = 0;
 $7 = __Znwm(24) | 0;
 HEAP32[$0 >> 2] = $7;
 HEAP32[$0 + 4 >> 2] = $1 + 8;
 HEAP32[$7 + 8 >> 2] = HEAP32[HEAP32[$4 >> 2] >> 2];
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$7 + 16 >> 2] = 0;
 HEAP32[$7 + 20 >> 2] = 0;
 HEAP8[$0 + 8 >> 0] = 1;
 HEAP32[$7 + 4 >> 2] = $2;
 HEAP32[$7 >> 2] = 0;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_121parse_destructor_nameINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$019 = 0, $$1 = 0, $10 = 0, $4 = 0;
 if (($0 | 0) == ($1 | 0)) $$1 = $0; else {
  $4 = __ZN10__cxxabiv112_GLOBAL__N_121parse_unresolved_typeINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
  if (($4 | 0) == ($0 | 0)) $$019 = __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0; else $$019 = $4;
  if (($$019 | 0) == ($0 | 0)) $$1 = $0; else {
   $10 = HEAP32[$2 + 4 >> 2] | 0;
   if ((HEAP32[$2 >> 2] | 0) == ($10 | 0)) $$1 = $0; else {
    __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($10 + -24 | 0, 0, 49701) | 0;
    $$1 = $$019;
   }
  }
 }
 return $$1 | 0;
}

function _prescan_quantize($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$030 = 0, $$031 = 0, $27 = 0, $28 = 0, $29 = 0, $7 = 0, $9 = 0;
 $7 = HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 24 >> 2] | 0;
 $9 = HEAP32[$0 + 112 >> 2] | 0;
 $$031 = 0;
 while (1) {
  if (($$031 | 0) >= ($3 | 0)) break;
  $$0 = HEAP32[$1 + ($$031 << 2) >> 2] | 0;
  $$030 = $9;
  while (1) {
   if (!$$030) break;
   $27 = (HEAP32[$7 + ((HEAPU8[$$0 >> 0] | 0) >>> 3 << 2) >> 2] | 0) + ((HEAPU8[$$0 + 1 >> 0] | 0) >>> 2 << 6) + ((HEAPU8[$$0 + 2 >> 0] | 0) >>> 3 << 1) | 0;
   $28 = HEAP16[$27 >> 1] | 0;
   $29 = $28 + 1 << 16 >> 16;
   HEAP16[$27 >> 1] = $29 << 16 >> 16 == 0 ? $28 : $29;
   $$0 = $$0 + 3 | 0;
   $$030 = $$030 + -1 | 0;
  }
  $$031 = $$031 + 1 | 0;
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKiEEENSN_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS7_PvEENS_22__hash_node_destructorINSG_ISV_EEEEEEmOT_DpOT0_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $7 = 0;
 $7 = __Znwm(20) | 0;
 HEAP32[$0 >> 2] = $7;
 HEAP32[$0 + 4 >> 2] = $1 + 8;
 HEAP32[$7 + 8 >> 2] = HEAP32[HEAP32[$4 >> 2] >> 2];
 HEAP32[$7 + 12 >> 2] = 0;
 HEAP32[$7 + 16 >> 2] = 0;
 HEAP8[$0 + 8 >> 0] = 1;
 HEAP32[$7 + 4 >> 2] = $2;
 HEAP32[$7 >> 2] = 0;
 return;
}

function __ZN6vision26SmoothOrientationHistogramIfEEvPT_PKS1_mS4_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0.0, $$033 = 0, $21 = 0.0, $28 = 0, $4 = 0.0, $5 = 0, $6 = 0, $8 = 0, $9 = 0;
 $4 = +HEAPF32[$1 >> 2];
 $5 = $2 + -1 | 0;
 $6 = $1 + ($5 << 2) | 0;
 $8 = $3 + 4 | 0;
 $9 = $3 + 8 | 0;
 $$0 = +HEAPF32[$6 >> 2];
 $$033 = 0;
 while (1) {
  if (($$033 | 0) == ($5 | 0)) break;
  $21 = +HEAPF32[$1 + ($$033 << 2) >> 2];
  $28 = $$033 + 1 | 0;
  HEAPF32[$0 + ($$033 << 2) >> 2] = $$0 * +HEAPF32[$3 >> 2] + $21 * +HEAPF32[$8 >> 2] + +HEAPF32[$9 >> 2] * +HEAPF32[$1 + ($28 << 2) >> 2];
  $$0 = $21;
  $$033 = $28;
 }
 HEAPF32[$0 + ($5 << 2) >> 2] = $$0 * +HEAPF32[$3 >> 2] + +HEAPF32[$8 >> 2] * +HEAPF32[$6 >> 2] + $4 * +HEAPF32[$9 >> 2];
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $18 = 0, $2 = 0, $24 = 0, $30 = 0, $34 = 0, $6 = 0;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 $6 = $2 + (HEAP32[(HEAP32[$2 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (HEAP32[$6 + 24 >> 2] | 0) if (!(HEAP32[$6 + 16 >> 2] | 0)) if (HEAP32[$6 + 4 >> 2] & 8192 | 0) if (!(__ZSt18uncaught_exceptionv() | 0)) {
  $18 = HEAP32[$1 >> 2] | 0;
  $24 = HEAP32[$18 + (HEAP32[(HEAP32[$18 >> 2] | 0) + -12 >> 2] | 0) + 24 >> 2] | 0;
  if ((FUNCTION_TABLE_ii[HEAP32[(HEAP32[$24 >> 2] | 0) + 24 >> 2] & 127]($24) | 0) == -1) {
   $30 = HEAP32[$1 >> 2] | 0;
   $34 = $30 + (HEAP32[(HEAP32[$30 >> 2] | 0) + -12 >> 2] | 0) | 0;
   __ZNSt3__28ios_base5clearEj($34, HEAP32[$34 + 16 >> 2] | 1);
  }
 }
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_m($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$029 = 0, $$030 = 0, $$034 = 0, $$sink = 0, $12 = 0, $13 = 0, $5 = 0, $6 = 0;
 $5 = $3;
 $6 = $0 + 8 | 0;
 $$029 = 0;
 $$030 = 0;
 $$034 = $2;
 L1 : while (1) {
  if (($$034 | 0) == ($3 | 0) | $$029 >>> 0 >= $4 >>> 0) break;
  $12 = ___uselocale(HEAP32[$6 >> 2] | 0) | 0;
  $13 = _mbrlen($$034, $5 - $$034 | 0, $1) | 0;
  if ($12 | 0) ___uselocale($12) | 0;
  switch ($13 | 0) {
  case -2:
  case -1:
   {
    break L1;
    break;
   }
  case 0:
   {
    $$sink = 1;
    break;
   }
  default:
   $$sink = $13;
  }
  $$029 = $$029 + 1 | 0;
  $$030 = $$sink + $$030 | 0;
  $$034 = $$034 + $$sink | 0;
 }
 return $$030 | 0;
}

function __ZNSt3__214__num_put_base18__identify_paddingEPcS1_RKNS_8ios_baseE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $6 = 0, label = 0;
 L1 : do switch ((HEAP32[$2 + 4 >> 2] & 176) << 24 >> 24) {
 case 16:
  {
   $6 = HEAP8[$0 >> 0] | 0;
   switch ($6 << 24 >> 24) {
   case 43:
   case 45:
    {
     $$0 = $0 + 1 | 0;
     break L1;
     break;
    }
   default:
    {}
   }
   if (($1 - $0 | 0) > 1 & $6 << 24 >> 24 == 48) {
    switch (HEAP8[$0 + 1 >> 0] | 0) {
    case 88:
    case 120:
     break;
    default:
     {
      label = 7;
      break L1;
     }
    }
    $$0 = $0 + 2 | 0;
   } else label = 7;
   break;
  }
 case 32:
  {
   $$0 = $1;
   break;
  }
 default:
  label = 7;
 } while (0);
 if ((label | 0) == 7) $$0 = $0;
 return $$0 | 0;
}

function _arUtilReplaceExt($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$023 = 0, $$024 = 0, $$1 = 0, $$2 = 0, $6 = 0, $9 = 0, label = 0;
 $$0 = 0;
 $$023 = 0;
 L1 : while (1) {
  switch (HEAP8[$0 + $$023 >> 0] | 0) {
  case 0:
   {
    break L1;
    break;
   }
  case 46:
   {
    $$1 = $$023;
    break;
   }
  default:
   $$1 = $$0;
  }
  $$0 = $$1;
  $$023 = $$023 + 1 | 0;
 }
 $6 = $0 + $$023 | 0;
 $9 = (_strlen($2) | 0) + 2 | 0;
 if (!$$0) if (($9 + $$023 | 0) > ($1 | 0)) $$024 = -1; else {
  HEAP8[$6 >> 0] = 46;
  $$2 = $$023;
  label = 9;
 } else if (($9 + $$0 | 0) > ($1 | 0)) $$024 = -1; else {
  $$2 = $$0;
  label = 9;
 }
 if ((label | 0) == 9) {
  HEAP8[$0 + ($$2 + 1) >> 0] = 0;
  _strcat($0, $2) | 0;
  $$024 = 0;
 }
 return $$024 | 0;
}

function __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEED2Ev($0) {
 $0 = $0 | 0;
 __ZN6vision16RobustHomographyIfED2Ev($0 + 788 | 0);
 __ZN6vision21HoughSimilarityVotingD2Ev($0 + 652 | 0);
 __ZN6vision20BinaryFeatureMatcherILi96EED2Ev($0 + 636 | 0);
 __ZN6vision14FREAKExtractorD2Ev($0 + 316 | 0);
 __ZN6vision25DoGScaleInvariantDetectorD2Ev($0 + 160 | 0);
 __ZN6vision18BinomialPyramid32fD2Ev($0 + 92 | 0);
 __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEED2Ev($0 + 72 | 0);
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($0 + 64 | 0);
 __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev($0 + 12 | 0);
 return;
}

function _kpmDeleteRefDataSet($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$013 = 0, $10 = 0, $2 = 0, $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!$0) {
  _arLog(0, 3, 20019, sp);
  $$013 = -1;
 } else {
  $2 = HEAP32[$0 >> 2] | 0;
  if (!$2) $$013 = 0; else {
   $4 = HEAP32[$2 >> 2] | 0;
   if ($4 | 0) _free($4);
   $$0 = 0;
   while (1) {
    $6 = HEAP32[$0 >> 2] | 0;
    $10 = $6 + 8 | 0;
    if (($$0 | 0) >= (HEAP32[$6 + 12 >> 2] | 0)) break;
    _free(HEAP32[(HEAP32[$10 >> 2] | 0) + ($$0 * 12 | 0) >> 2] | 0);
    $$0 = $$0 + 1 | 0;
   }
   _free(HEAP32[$10 >> 2] | 0);
   _free(HEAP32[$0 >> 2] | 0);
   HEAP32[$0 >> 2] = 0;
   $$013 = 0;
  }
 }
 STACKTOP = sp;
 return $$013 | 0;
}

function __ZN6vision14FREAKExtractorC2Ev($0) {
 $0 = $0 | 0;
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m($0, 1760, 12);
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m($0 + 48 | 0, 1808, 12);
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m($0 + 96 | 0, 1856, 12);
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m($0 + 144 | 0, 1904, 12);
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m($0 + 192 | 0, 1952, 12);
 __ZN6vision10CopyVectorIfEEvPT_PKS1_m($0 + 240 | 0, 2e3, 12);
 HEAPF32[$0 + 288 >> 2] = .10000000149011612;
 HEAPF32[$0 + 292 >> 2] = .17499999701976776;
 HEAPF32[$0 + 296 >> 2] = .25;
 HEAPF32[$0 + 300 >> 2] = .32499998807907104;
 HEAPF32[$0 + 304 >> 2] = .4000000059604645;
 HEAPF32[$0 + 308 >> 2] = .4749999940395355;
 HEAPF32[$0 + 312 >> 2] = .550000011920929;
 HEAPF32[$0 + 316 >> 2] = 7.0;
 return;
}

function __ZN6vision18BinomialPyramid32f18apply_filter_twiceERNS_5ImageERKS1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $3 = sp;
 $5 = HEAP32[$0 + 56 >> 2] | 0;
 $6 = __ZNK6vision5Image4typeEv($2) | 0;
 $7 = __ZNK6vision5Image5widthEv($2) | 0;
 $8 = __ZNK6vision5Image6heightEv($2) | 0;
 __ZN6vision5ImageC2EPhNS_9ImageTypeEmmim($3, $5, $6, $7, $8, __ZNK6vision5Image4stepEv($2) | 0, 1);
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_($0, $3, $2);
 __ZN6vision18BinomialPyramid32f12apply_filterERNS_5ImageERKS1_($0, $1, $3);
 __ZN6vision5ImageD2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__26locale5__impD2Ev($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $11 = 0, $13 = 0, $14 = 0, $2 = 0, $4 = 0;
 HEAP32[$0 >> 2] = 16836;
 $1 = $0 + 8 | 0;
 $2 = $0 + 12 | 0;
 $$0 = 0;
 while (1) {
  $4 = HEAP32[$1 >> 2] | 0;
  if ($$0 >>> 0 >= (HEAP32[$2 >> 2] | 0) - $4 >> 2 >>> 0) break;
  $11 = HEAP32[$4 + ($$0 << 2) >> 2] | 0;
  if ($11 | 0) {
   $13 = $11 + 4 | 0;
   $14 = HEAP32[$13 >> 2] | 0;
   HEAP32[$13 >> 2] = $14 + -1;
   if (!$14) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$11 >> 2] | 0) + 8 >> 2] & 255]($11);
  }
  $$0 = $$0 + 1 | 0;
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 144 | 0);
 __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEED2Ev($1);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function _cat($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0;
 do if (!$0) {
  $3 = ___errno_location() | 0;
  HEAP32[$3 >> 2] = 22;
  $$0 = 0;
 } else {
  $4 = _fopen($0, 20063) | 0;
  if (!$4) $$0 = 0; else {
   _fseek($4, 0, 2) | 0;
   $6 = _ftell($4) | 0;
   _fseek($4, 0, 0) | 0;
   $7 = $6 + 1 | 0;
   $8 = _malloc($7) | 0;
   if (!$8) {
    _fclose($4) | 0;
    $10 = ___errno_location() | 0;
    HEAP32[$10 >> 2] = 12;
    $$0 = 0;
    break;
   }
   if (!(_fread($8, $6, 1, $4) | 0)) {
    _free($8);
    _fclose($4) | 0;
    $$0 = 0;
    break;
   }
   HEAP8[$8 + $6 >> 0] = 0;
   _fclose($4) | 0;
   if (!$1) $$0 = $8; else {
    HEAP32[$1 >> 2] = $7;
    $$0 = $8;
   }
  }
 } while (0);
 return $$0 | 0;
}

function _gray_rgb_convert($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$020 = 0, $$021 = 0, $$022 = 0, $$023 = 0, $11 = 0, $14 = 0, $6 = 0, $7 = 0;
 $6 = HEAP32[$0 + 112 >> 2] | 0;
 $$0 = $2;
 $$022 = $3;
 $$023 = $4;
 while (1) {
  $7 = $$023 + -1 | 0;
  if (($$023 | 0) <= 0) break;
  $11 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($$0 << 2) >> 2] | 0;
  $$020 = 0;
  $$021 = HEAP32[$$022 >> 2] | 0;
  while (1) {
   if (($$020 | 0) == ($6 | 0)) break;
   $14 = HEAP8[$11 + $$020 >> 0] | 0;
   HEAP8[$$021 + 2 >> 0] = $14;
   HEAP8[$$021 + 1 >> 0] = $14;
   HEAP8[$$021 >> 0] = $14;
   $$020 = $$020 + 1 | 0;
   $$021 = $$021 + 3 | 0;
  }
  $$0 = $$0 + 1 | 0;
  $$022 = $$022 + 4 | 0;
  $$023 = $7;
 }
 return;
}

function _arMatrixDup($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$021 = 0, $$022 = 0, $13 = 0, $16 = 0, $3 = 0, $8 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 L1 : do if (($3 | 0) == (HEAP32[$1 + 4 >> 2] | 0)) {
  $8 = HEAP32[$0 + 8 >> 2] | 0;
  if (($8 | 0) == (HEAP32[$1 + 8 >> 2] | 0)) {
   $$021 = 0;
   while (1) {
    if (($$021 | 0) >= ($3 | 0)) {
     $$022 = 0;
     break L1;
    }
    $13 = Math_imul($$021, $8) | 0;
    $$0 = 0;
    while (1) {
     if (($$0 | 0) >= ($8 | 0)) break;
     $16 = $$0 + $13 | 0;
     HEAPF64[(HEAP32[$0 >> 2] | 0) + ($16 << 3) >> 3] = +HEAPF64[(HEAP32[$1 >> 2] | 0) + ($16 << 3) >> 3];
     $$0 = $$0 + 1 | 0;
    }
    $$021 = $$021 + 1 | 0;
   }
  } else $$022 = -1;
 } else $$022 = -1; while (0);
 return $$022 | 0;
}

function _use_merged_upsample($0) {
 $0 = $0 | 0;
 var $20 = 0, $40 = 0;
 if (!(HEAP32[$0 + 76 >> 2] | 0)) if (!(HEAP32[$0 + 300 >> 2] | 0)) if ((HEAP32[$0 + 40 >> 2] | 0) == 3) if ((HEAP32[$0 + 36 >> 2] | 0) == 3) if ((HEAP32[$0 + 44 >> 2] | 0) == 2) if ((HEAP32[$0 + 120 >> 2] | 0) == 3) {
  $20 = HEAP32[$0 + 216 >> 2] | 0;
  if ((HEAP32[$20 + 8 >> 2] | 0) == 2) if ((HEAP32[$20 + 92 >> 2] | 0) == 1) if ((HEAP32[$20 + 176 >> 2] | 0) == 1) if ((HEAP32[$20 + 12 >> 2] | 0) <= 2) if ((HEAP32[$20 + 96 >> 2] | 0) == 1) if ((HEAP32[$20 + 180 >> 2] | 0) == 1) {
   $40 = HEAP32[$20 + 36 >> 2] | 0;
   if (($40 | 0) == (HEAP32[$0 + 316 >> 2] | 0)) if ((HEAP32[$20 + 120 >> 2] | 0) == ($40 | 0)) return (HEAP32[$20 + 204 >> 2] | 0) == ($40 | 0) | 0;
  }
 }
 return 0;
}

function __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $3 = 0, $6 = 0, $8 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i + -16 | 0;
   __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($6);
   $$0$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  $8 = HEAP32[$0 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE10deallocateEPS6_m($0 + 12 | 0, $8, (HEAP32[$0 + 8 >> 2] | 0) - $8 >> 4);
 }
 return;
}

function _process_restart_49($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$018 = 0, $15 = 0, $2 = 0, $3 = 0, $7 = 0, $8 = 0;
 $2 = HEAP32[$0 + 444 >> 2] | 0;
 $3 = $2 + 16 | 0;
 $7 = HEAP32[$0 + 440 >> 2] | 0;
 $8 = $7 + 24 | 0;
 HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + ((HEAP32[$3 >> 2] | 0) / 8 | 0);
 HEAP32[$3 >> 2] = 0;
 if (!(FUNCTION_TABLE_ii[HEAP32[$7 + 8 >> 2] & 127]($0) | 0)) $$018 = 0; else {
  $15 = $0 + 328 | 0;
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= (HEAP32[$15 >> 2] | 0)) break;
   HEAP32[$2 + 24 + ($$0 << 2) >> 2] = 0;
   $$0 = $$0 + 1 | 0;
  }
  HEAP32[$2 + 20 >> 2] = 0;
  HEAP32[$2 + 40 >> 2] = HEAP32[$0 + 276 >> 2];
  if (!(HEAP32[$0 + 416 >> 2] | 0)) {
   HEAP32[$2 + 8 >> 2] = 0;
   $$018 = 1;
  } else $$018 = 1;
 }
 return $$018 | 0;
}

function __ZNKSt3__210__time_put8__do_putEPcRS1_PK2tmcc($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $12 = 0, $15 = 0, $6 = 0, $7 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $6 = sp;
 HEAP8[$6 >> 0] = 37;
 $7 = $6 + 1 | 0;
 HEAP8[$7 >> 0] = $4;
 $8 = $6 + 2 | 0;
 HEAP8[$8 >> 0] = $5;
 HEAP8[$6 + 3 >> 0] = 0;
 if ($5 << 24 >> 24) {
  HEAP8[$7 >> 0] = $5;
  HEAP8[$8 >> 0] = $4;
 }
 $12 = __ZNSt3__212_GLOBAL__N_17countofIcEEmPKT_S4_($1, HEAP32[$2 >> 2] | 0) | 0;
 $15 = $1 + (_strftime_l($1 | 0, $12 | 0, $6 | 0, $3 | 0, HEAP32[$0 >> 2] | 0) | 0) | 0;
 HEAP32[$2 >> 2] = $15;
 STACKTOP = sp;
 return;
}

function __ZNSt3__26locale2id5__getEv($0) {
 $0 = $0 | 0;
 var $$byval_copy = 0, $1 = 0, $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $$byval_copy = sp + 32 | 0;
 $1 = sp + 24 | 0;
 $2 = sp;
 $3 = sp + 16 | 0;
 HEAP32[$3 >> 2] = 141;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$$byval_copy >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy + 4 >> 2] = HEAP32[$3 + 4 >> 2];
 __ZNSt3__212_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_($2, $$byval_copy, $0);
 if ((HEAP32[$0 >> 2] | 0) != -1) {
  HEAP32[$$byval_copy >> 2] = $2;
  HEAP32[$1 >> 2] = $$byval_copy;
  __ZNSt3__211__call_onceERVmPvPFvS2_E($0, $1, 142);
 }
 STACKTOP = sp;
 return (HEAP32[$0 + 4 >> 2] | 0) + -1 | 0;
}

function __ZN6vision14Determinant3x3IfEET_PKS1_($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0, $13 = 0, $16 = 0.0, $21 = 0.0, $3 = 0, $5 = 0, $7 = 0, $9 = 0.0;
 $1 = $0 + 16 | 0;
 $3 = $0 + 20 | 0;
 $5 = $0 + 28 | 0;
 $7 = $0 + 32 | 0;
 $9 = +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$1 >> 2], +HEAPF32[$3 >> 2], +HEAPF32[$5 >> 2], +HEAPF32[$7 >> 2]);
 $10 = $0 + 12 | 0;
 $13 = $0 + 24 | 0;
 $16 = +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$10 >> 2], +HEAPF32[$3 >> 2], +HEAPF32[$13 >> 2], +HEAPF32[$7 >> 2]);
 $21 = +__ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_(+HEAPF32[$10 >> 2], +HEAPF32[$1 >> 2], +HEAPF32[$13 >> 2], +HEAPF32[$5 >> 2]);
 return +($9 * +HEAPF32[$0 >> 2] - $16 * +HEAPF32[$0 + 4 >> 2] + $21 * +HEAPF32[$0 + 8 >> 2]);
}

function _strtox_547($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $12 = 0, $13 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 $5 = sp;
 HEAP32[$5 >> 2] = 0;
 $6 = $5 + 4 | 0;
 HEAP32[$6 >> 2] = $0;
 HEAP32[$5 + 44 >> 2] = $0;
 $10 = $5 + 8 | 0;
 HEAP32[$10 >> 2] = ($0 | 0) < 0 ? -1 : $0 + 2147483647 | 0;
 HEAP32[$5 + 76 >> 2] = -1;
 ___shlim($5, 0, 0);
 $12 = ___intscan($5, $2, 1, $3, $4) | 0;
 $13 = getTempRet0() | 0;
 if ($1 | 0) HEAP32[$1 >> 2] = $0 + ((HEAP32[$6 >> 2] | 0) + (HEAP32[$5 + 120 >> 2] | 0) - (HEAP32[$10 >> 2] | 0));
 setTempRet0($13 | 0);
 STACKTOP = sp;
 return $12 | 0;
}

function __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $12 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = ($3 - $4 | 0) / 12 | 0;
 $8 = $4;
 $9 = $3;
 if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8__appendEm($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) {
  $12 = $8 + ($1 * 12 | 0) | 0;
  $$0$i$i = $9;
  while (1) {
   if (($$0$i$i | 0) == ($12 | 0)) break;
   $14 = $$0$i$i + -12 | 0;
   __ZNSt3__213__vector_baseINS_4pairIfmEENS_9allocatorIS2_EEED2Ev($14);
   $$0$i$i = $14;
  }
  HEAP32[$2 >> 2] = $12;
 }
 return;
}

function __ZNSt3__214__num_put_base12__format_intEPcPKcbj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$013 = 0, $$2 = 0, $$2$ph = 0, $$sink = 0, $10 = 0;
 if (!($3 & 2048)) $$0 = $0; else {
  HEAP8[$0 >> 0] = 43;
  $$0 = $0 + 1 | 0;
 }
 if (!($3 & 512)) $$2$ph = $$0; else {
  HEAP8[$$0 >> 0] = 35;
  $$2$ph = $$0 + 1 | 0;
 }
 $$013 = $1;
 $$2 = $$2$ph;
 while (1) {
  $10 = HEAP8[$$013 >> 0] | 0;
  if (!($10 << 24 >> 24)) break;
  HEAP8[$$2 >> 0] = $10;
  $$013 = $$013 + 1 | 0;
  $$2 = $$2 + 1 | 0;
 }
 switch ($3 & 74) {
 case 64:
  {
   $$sink = 111;
   break;
  }
 case 8:
  {
   $$sink = $3 >>> 9 & 32 ^ 120;
   break;
  }
 default:
  $$sink = $2 ? 100 : 117;
 }
 HEAP8[$$2 >> 0] = $$sink;
 return;
}

function __ZNSt3__211__stdoutbufIwE6xsputnEPKwl($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$010 = 0, $$011 = 0, $12 = 0, $14 = 0, $15 = 0;
 L1 : do if (!(HEAP8[$0 + 44 >> 0] | 0)) {
  $$0 = 0;
  $$011 = $1;
  while (1) {
   if (($$0 | 0) >= ($2 | 0)) {
    $$010 = $$0;
    break L1;
   }
   $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] | 0;
   $14 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$$011 >> 2] | 0) | 0;
   $15 = FUNCTION_TABLE_iii[$12 & 63]($0, $14) | 0;
   if (($15 | 0) == (__ZNSt3__211char_traitsIwE3eofEv() | 0)) {
    $$010 = $$0;
    break L1;
   }
   $$0 = $$0 + 1 | 0;
   $$011 = $$011 + 4 | 0;
  }
 } else $$010 = _fwrite($1, 4, $2, HEAP32[$0 + 32 >> 2] | 0) | 0; while (0);
 return $$010 | 0;
}

function __ZNSt3__211__stdoutbufIcE6xsputnEPKcl($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$010 = 0, $$011 = 0, $12 = 0, $14 = 0, $15 = 0;
 L1 : do if (!(HEAP8[$0 + 44 >> 0] | 0)) {
  $$0 = 0;
  $$011 = $1;
  while (1) {
   if (($$0 | 0) >= ($2 | 0)) {
    $$010 = $$0;
    break L1;
   }
   $12 = HEAP32[(HEAP32[$0 >> 2] | 0) + 52 >> 2] | 0;
   $14 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$$011 >> 0] | 0) | 0;
   $15 = FUNCTION_TABLE_iii[$12 & 63]($0, $14) | 0;
   if (($15 | 0) == (__ZNSt3__211char_traitsIcE3eofEv() | 0)) {
    $$010 = $$0;
    break L1;
   }
   $$0 = $$0 + 1 | 0;
   $$011 = $$011 + 1 | 0;
  }
 } else $$010 = _fwrite($1, 1, $2, HEAP32[$0 + 32 >> 2] | 0) | 0; while (0);
 return $$010 | 0;
}

function _arPattLoad($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $4 = 0, $6 = 0, $7 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer1 = sp + 8 | 0;
 $vararg_buffer = sp;
 $2 = _cat($1, 0) | 0;
 if (!$2) {
  HEAP32[$vararg_buffer >> 2] = $1;
  _arLog(0, 3, 18137, $vararg_buffer);
  $4 = ___errno_location() | 0;
  $6 = _strerror(HEAP32[$4 >> 2] | 0) | 0;
  HEAP32[$vararg_buffer1 >> 2] = 58334;
  HEAP32[$vararg_buffer1 + 4 >> 2] = $6;
  _arLog(0, 3, 19708, $vararg_buffer1);
  $$0 = -1;
 } else {
  $7 = _arPattLoadFromBuffer($0, $2) | 0;
  _free($2);
  $$0 = $7;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIwEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) HEAP32[$1 >> 2] = $8 + -1900;
 STACKTOP = sp;
 return;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11__get_year4ERiRS4_S4_RjRKNS_5ctypeIcEE($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$byval_copy = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $$byval_copy = sp + 4 | 0;
 $6 = sp;
 HEAP32[$6 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$$byval_copy >> 2] = HEAP32[$6 >> 2];
 $8 = __ZNSt3__220__get_up_to_n_digitsIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEiRT0_S5_RjRKNS_5ctypeIT_EEi($2, $$byval_copy, $4, $5, 4) | 0;
 if (!(HEAP32[$4 >> 2] & 4)) HEAP32[$1 >> 2] = $8 + -1900;
 STACKTOP = sp;
 return;
}

function _arUtilMatMul($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$023 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 3) break;
  $3 = $0 + ($$0 << 5) | 0;
  $4 = $0 + ($$0 << 5) + 8 | 0;
  $5 = $0 + ($$0 << 5) + 16 | 0;
  $$023 = 0;
  while (1) {
   if (($$023 | 0) == 4) break;
   HEAPF64[$2 + ($$0 << 5) + ($$023 << 3) >> 3] = +HEAPF64[$3 >> 3] * +HEAPF64[$1 + ($$023 << 3) >> 3] + +HEAPF64[$4 >> 3] * +HEAPF64[$1 + 32 + ($$023 << 3) >> 3] + +HEAPF64[$5 >> 3] * +HEAPF64[$1 + 64 + ($$023 << 3) >> 3];
   $$023 = $$023 + 1 | 0;
  }
  $24 = $2 + ($$0 << 5) + 24 | 0;
  HEAPF64[$24 >> 3] = +HEAPF64[$0 + ($$0 << 5) + 24 >> 3] + +HEAPF64[$24 >> 3];
  $$0 = $$0 + 1 | 0;
 }
 return 0;
}

function _jinit_merged_upsampler($0) {
 $0 = $0 | 0;
 var $$sink = 0, $1 = 0, $11 = 0, $16 = 0, $4 = 0;
 $1 = $0 + 4 | 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 48) | 0;
 HEAP32[$0 + 452 >> 2] = $4;
 HEAP32[$4 >> 2] = 125;
 HEAP32[$4 + 8 >> 2] = 0;
 $11 = Math_imul(HEAP32[$0 + 120 >> 2] | 0, HEAP32[$0 + 112 >> 2] | 0) | 0;
 HEAP32[$4 + 40 >> 2] = $11;
 $16 = $4 + 4 | 0;
 if ((HEAP32[$0 + 312 >> 2] | 0) == 2) {
  HEAP32[$16 >> 2] = 1;
  HEAP32[$4 + 12 >> 2] = 9;
  $$sink = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$1 >> 2] | 0) + 4 >> 2] & 63]($0, 1, $11) | 0;
 } else {
  HEAP32[$16 >> 2] = 2;
  HEAP32[$4 + 12 >> 2] = 10;
  $$sink = 0;
 }
 HEAP32[$4 + 32 >> 2] = $$sink;
 _build_ycc_rgb_table_46($0);
 return;
}

function __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEEC2IS3_EEPT_NS_9enable_ifIXsr14is_convertibleIS7_PS3_EE5valueENS4_5__natEE4typeE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 HEAP32[$0 >> 2] = $1;
 $3 = __Znwm(16) | 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 HEAP32[$3 >> 2] = 13548;
 HEAP32[$3 + 12 >> 2] = $1;
 HEAP32[$0 + 4 >> 2] = $3;
 HEAP32[$vararg_buffer >> 2] = $1;
 HEAP32[$vararg_buffer + 4 >> 2] = $1;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEE18__enable_weak_thisEz($0, $vararg_buffer);
 STACKTOP = sp;
 return;
}

function _arSetDebugMode($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $13 = 0, $6 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 do if (!$0) $$0 = -1; else if ((HEAP32[$0 >> 2] | 0) == ($1 | 0)) $$0 = 0; else {
  HEAP32[$0 >> 2] = $1;
  if (!$1) {
   $6 = $0 + 4834148 | 0;
   _free(HEAP32[$6 >> 2] | 0);
   HEAP32[$6 >> 2] = 0;
   $$0 = 0;
   break;
  }
  $13 = _malloc(Math_imul(HEAP32[$0 + 40 >> 2] | 0, HEAP32[$0 + 36 >> 2] | 0) | 0) | 0;
  HEAP32[$0 + 4834148 >> 2] = $13;
  if (!$13) {
   _arLog(0, 3, 20454, $vararg_buffer);
   _exit(1);
  } else $$0 = 0;
 } while (0);
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE7reserveEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $5 = HEAP32[$0 >> 2] | 0;
 if ((HEAP32[$0 + 8 >> 2] | 0) - $5 >> 2 >>> 0 < $1 >>> 0) {
  __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEEC2EmmS7_($2, $1, (HEAP32[$0 + 4 >> 2] | 0) - $5 >> 2, $0 + 8 | 0);
  __ZNSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS4_RS6_EE($0, $2);
  __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEED2Ev($2);
 }
 STACKTOP = sp;
 return;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPKhi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$cast = 0, $3 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 __ZNSt3__26vectorIiNS_9allocatorIiEEEC2Em($3, $2);
 $6 = HEAP32[$3 >> 2] | 0;
 $8 = (HEAP32[$3 + 4 >> 2] | 0) - $6 >> 2;
 $$cast = $6;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == ($8 | 0)) break;
  HEAP32[$$cast + ($$0 << 2) >> 2] = $$0;
  $$0 = $$0 + 1 | 0;
 }
 __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPKhiPKii($0, $1, $2, $$cast, $8);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN6vision19NormalizeHomographyIfEEvPT_($0) {
 $0 = $0 | 0;
 var $1 = 0, $12 = 0, $15 = 0, $18 = 0, $21 = 0, $24 = 0, $3 = 0.0, $6 = 0, $9 = 0;
 $1 = $0 + 32 | 0;
 $3 = 1.0 / +HEAPF32[$1 >> 2];
 HEAPF32[$0 >> 2] = +HEAPF32[$0 >> 2] * $3;
 $6 = $0 + 4 | 0;
 HEAPF32[$6 >> 2] = $3 * +HEAPF32[$6 >> 2];
 $9 = $0 + 8 | 0;
 HEAPF32[$9 >> 2] = $3 * +HEAPF32[$9 >> 2];
 $12 = $0 + 12 | 0;
 HEAPF32[$12 >> 2] = $3 * +HEAPF32[$12 >> 2];
 $15 = $0 + 16 | 0;
 HEAPF32[$15 >> 2] = $3 * +HEAPF32[$15 >> 2];
 $18 = $0 + 20 | 0;
 HEAPF32[$18 >> 2] = $3 * +HEAPF32[$18 >> 2];
 $21 = $0 + 24 | 0;
 HEAPF32[$21 >> 2] = $3 * +HEAPF32[$21 >> 2];
 $24 = $0 + 28 | 0;
 HEAPF32[$24 >> 2] = $3 * +HEAPF32[$24 >> 2];
 HEAPF32[$1 >> 2] = 1.0;
 return;
}

function _select_colors($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $12 = 0, $17 = 0, $6 = 0;
 $6 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, $1 << 5) | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 31;
 HEAP32[$6 + 8 >> 2] = 0;
 HEAP32[$6 + 12 >> 2] = 63;
 HEAP32[$6 + 16 >> 2] = 0;
 HEAP32[$6 + 20 >> 2] = 31;
 _update_box($0, $6);
 $12 = _median_cut($0, $6, $1) | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) >= ($12 | 0)) break;
  _compute_color($0, $6 + ($$0 << 5) | 0, $$0);
  $$0 = $$0 + 1 | 0;
 }
 HEAP32[$0 + 132 >> 2] = $12;
 $17 = HEAP32[$0 >> 2] | 0;
 HEAP32[$17 + 20 >> 2] = 96;
 HEAP32[$17 + 24 >> 2] = $12;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 63]($0, 1);
 return;
}

function _CENTER($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$025 = 0, $$026 = 0, $$027 = 0, $$028 = 0, $$1 = 0, $3 = 0, $5 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 $5 = HEAP32[$0 + 8 >> 2] | 0;
 L1 : do if ((HEAP32[$1 + 4 >> 2] | 0) == ($5 | 0)) {
  $$025 = 0;
  $$027 = HEAP32[$0 >> 2] | 0;
  while (1) {
   if (($$025 | 0) >= ($3 | 0)) {
    $$026 = 0;
    break L1;
   }
   $$0 = 0;
   $$028 = HEAP32[$1 >> 2] | 0;
   $$1 = $$027;
   while (1) {
    if (($$0 | 0) >= ($5 | 0)) break;
    HEAPF64[$$1 >> 3] = +HEAPF64[$$1 >> 3] - +HEAPF64[$$028 >> 3];
    $$0 = $$0 + 1 | 0;
    $$028 = $$028 + 8 | 0;
    $$1 = $$1 + 8 | 0;
   }
   $$025 = $$025 + 1 | 0;
   $$027 = $$1;
  }
 } else $$026 = -1; while (0);
 return $$026 | 0;
}

function __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -16 | 0;
  HEAP32[$3 >> 2] = $6;
  __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($6);
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE10deallocateEPS6_m(HEAP32[$0 + 16 >> 2] | 0, $7, (HEAP32[$0 + 12 >> 2] | 0) - $7 >> 4);
 return;
}

function __ZN6vision34SolveHomography4PointsInhomogenousIfEEbPT_PKS1_S4_S4_S4_S4_S4_S4_S4_($0, $1, $2, $3, $4, $5, $6, $7, $8) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 var $$0 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 288 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(288);
 $9 = sp;
 __ZN6vision40Homography4PointsInhomogeneousConstraintIfEEvPT_PKS1_S4_S4_S4_S4_S4_S4_S4_($9, $1, $2, $3, $4, $5, $6, $7, $8);
 if (__ZN6vision29SolveNullVector8x9DestructiveIfEEbPT_S2_($0, $9) | 0) $$0 = !(+Math_abs(+(+__ZN6vision14Determinant3x3IfEET_PKS1_($0))) < 1.0e-05); else $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function _process_restart($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$018 = 0, $15 = 0, $2 = 0, $3 = 0, $7 = 0, $8 = 0;
 $2 = HEAP32[$0 + 444 >> 2] | 0;
 $3 = $2 + 16 | 0;
 $7 = HEAP32[$0 + 440 >> 2] | 0;
 $8 = $7 + 24 | 0;
 HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + ((HEAP32[$3 >> 2] | 0) / 8 | 0);
 HEAP32[$3 >> 2] = 0;
 if (!(FUNCTION_TABLE_ii[HEAP32[$7 + 8 >> 2] & 127]($0) | 0)) $$018 = 0; else {
  $15 = $0 + 328 | 0;
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= (HEAP32[$15 >> 2] | 0)) break;
   HEAP32[$2 + 20 + ($$0 << 2) >> 2] = 0;
   $$0 = $$0 + 1 | 0;
  }
  HEAP32[$2 + 36 >> 2] = HEAP32[$0 + 276 >> 2];
  if (!(HEAP32[$0 + 416 >> 2] | 0)) {
   HEAP32[$2 + 8 >> 2] = 0;
   $$018 = 1;
  } else $$018 = 1;
 }
 return $$018 | 0;
}

function _jpeg_read_header($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$pre$phiZ2D = 0, $10 = 0, $12 = 0, $3 = 0, $5 = 0;
 $3 = HEAP32[$0 + 20 >> 2] | 0;
 if (($3 & -2 | 0) != 200) {
  $5 = HEAP32[$0 >> 2] | 0;
  HEAP32[$5 + 20 >> 2] = 20;
  HEAP32[$5 + 24 >> 2] = $3;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $10 = _jpeg_consume_input($0) | 0;
 switch ($10 | 0) {
 case 1:
  {
   $$0 = 1;
   break;
  }
 case 2:
  {
   if (!$1) $$pre$phiZ2D = $0; else {
    $12 = HEAP32[$0 >> 2] | 0;
    HEAP32[$12 + 20 >> 2] = 51;
    FUNCTION_TABLE_vi[HEAP32[$12 >> 2] & 255]($0);
    $$pre$phiZ2D = $0;
   }
   _jpeg_abort($$pre$phiZ2D);
   $$0 = 2;
   break;
  }
 default:
  $$0 = $10;
 }
 return $$0 | 0;
}

function __ZNSt3__210shared_ptrIhEC2Ih16NullArrayDeleterIhEEEPT_T0_NS_9enable_ifIXsr14is_convertibleIS6_PhEE5valueENS1_5__natEE4typeE($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 HEAP32[$0 >> 2] = $1;
 $4 = __Znwm(16) | 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$4 >> 2] = 13604;
 HEAP32[$4 + 12 >> 2] = $1;
 HEAP32[$0 + 4 >> 2] = $4;
 HEAP32[$vararg_buffer >> 2] = $1;
 HEAP32[$vararg_buffer + 4 >> 2] = $1;
 __ZNSt3__210shared_ptrIhE18__enable_weak_thisEz($0, $vararg_buffer);
 STACKTOP = sp;
 return;
}

function _icpGetU_from_X_by_MatX2U($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $21 = 0.0, $3 = 0.0, $36 = 0.0, $5 = 0.0, $7 = 0.0;
 $3 = +HEAPF64[$2 >> 3];
 $5 = +HEAPF64[$2 + 8 >> 3];
 $7 = +HEAPF64[$2 + 16 >> 3];
 $21 = +HEAPF64[$1 + 88 >> 3] + ($3 * +HEAPF64[$1 + 64 >> 3] + $5 * +HEAPF64[$1 + 72 >> 3] + $7 * +HEAPF64[$1 + 80 >> 3]);
 if ($21 == 0.0) $$0 = -1; else {
  $36 = +HEAPF64[$1 + 56 >> 3] + ($3 * +HEAPF64[$1 + 32 >> 3] + $5 * +HEAPF64[$1 + 40 >> 3] + $7 * +HEAPF64[$1 + 48 >> 3]);
  HEAPF64[$0 >> 3] = (+HEAPF64[$1 + 24 >> 3] + ($3 * +HEAPF64[$1 >> 3] + $5 * +HEAPF64[$1 + 8 >> 3] + $7 * +HEAPF64[$1 + 16 >> 3])) / $21;
  HEAPF64[$0 + 8 >> 3] = $36 / $21;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEEC2EmmSA_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 357913941) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 * 12 | 0) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 * 12 | 0) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 * 12 | 0);
 return;
}

function __ZL10loadMarkerPKcPiP8ARHandlePP12ARPattHandle($patt_name, $patt_id, $pattHandle_p) {
 $patt_name = $patt_name | 0;
 $patt_id = $patt_id | 0;
 $pattHandle_p = $pattHandle_p | 0;
 var $call = 0, $retval$0 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $call = _arPattLoad(HEAP32[$pattHandle_p >> 2] | 0, $patt_name) | 0;
 HEAP32[$patt_id >> 2] = $call;
 if (($call | 0) < 0) {
  HEAP32[$vararg_buffer >> 2] = $patt_name;
  _arLog(0, 3, 44343, $vararg_buffer);
  _arPattDeleteHandle(HEAP32[$pattHandle_p >> 2] | 0) | 0;
  $retval$0 = 0;
 } else $retval$0 = 1;
 STACKTOP = sp;
 return $retval$0 | 0;
}

function __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEEC2EmmS6_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 119304647) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 * 36 | 0) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 * 36 | 0) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 * 36 | 0);
 return;
}

function __ZNSt3__211__stdoutbufIwEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0);
 HEAP32[$0 >> 2] = 14436;
 HEAP32[$0 + 32 >> 2] = $1;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 58196) | 0;
 __ZNSt3__26localeD2Ev($3);
 HEAP32[$0 + 36 >> 2] = $7;
 HEAP32[$0 + 40 >> 2] = $2;
 $14 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 HEAP8[$0 + 44 >> 0] = $14;
 STACKTOP = sp;
 return;
}

function __ZNSt3__211__stdoutbufIcEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0);
 HEAP32[$0 >> 2] = 14500;
 HEAP32[$0 + 32 >> 2] = $1;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 $7 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 58188) | 0;
 __ZNSt3__26localeD2Ev($3);
 HEAP32[$0 + 36 >> 2] = $7;
 HEAP32[$0 + 40 >> 2] = $2;
 $14 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$7 >> 2] | 0) + 28 >> 2] & 127]($7) | 0) & 1;
 HEAP8[$0 + 44 >> 0] = $14;
 STACKTOP = sp;
 return;
}

function __ZN10emscripten8internal7InvokerIiJiiEE6invokeEPFiiiEii($fn, $args, $args1) {
 $fn = $fn | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $call = 0, $call3 = 0, $call4 = 0, $call5 = 0, $ref$tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $ref$tmp = sp;
 $call = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args) | 0;
 $call3 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args1) | 0;
 $call4 = FUNCTION_TABLE_iii[$fn & 63]($call, $call3) | 0;
 HEAP32[$ref$tmp >> 2] = $call4;
 $call5 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi($ref$tmp) | 0;
 STACKTOP = sp;
 return $call5 | 0;
}

function _getc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $15 = 0, $16 = 0, $24 = 0, $6 = 0, $7 = 0, label = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) < 0) label = 3; else if (!(___lockfile($0) | 0)) label = 3; else {
  $15 = $0 + 4 | 0;
  $16 = HEAP32[$15 >> 2] | 0;
  if ($16 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0) {
   HEAP32[$15 >> 2] = $16 + 1;
   $24 = HEAPU8[$16 >> 0] | 0;
  } else $24 = ___uflow($0) | 0;
  ___unlockfile($0);
  $$0 = $24;
 }
 do if ((label | 0) == 3) {
  $6 = $0 + 4 | 0;
  $7 = HEAP32[$6 >> 2] | 0;
  if ($7 >>> 0 < (HEAP32[$0 + 8 >> 2] | 0) >>> 0) {
   HEAP32[$6 >> 2] = $7 + 1;
   $$0 = HEAPU8[$7 >> 0] | 0;
   break;
  } else {
   $$0 = ___uflow($0) | 0;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE7reserveEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $2 = sp;
 $5 = HEAP32[$0 >> 2] | 0;
 if ((HEAP32[$0 + 8 >> 2] | 0) - $5 >> 3 >>> 0 < $1 >>> 0) {
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEEC2EmmS5_($2, $1, (HEAP32[$0 + 4 >> 2] | 0) - $5 >> 3, $0 + 8 | 0);
  __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE26__swap_out_circular_bufferERNS_14__split_bufferIS2_RS4_EE($0, $2);
  __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEED2Ev($2);
 }
 STACKTOP = sp;
 return;
}

function _pad_734($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0$lcssa = 0, $$011 = 0, $14 = 0, $5 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(256);
 $5 = sp;
 if (($2 | 0) > ($3 | 0) & ($4 & 73728 | 0) == 0) {
  $9 = $2 - $3 | 0;
  _memset($5 | 0, $1 << 24 >> 24 | 0, ($9 >>> 0 < 256 ? $9 : 256) | 0) | 0;
  if ($9 >>> 0 > 255) {
   $14 = $2 - $3 | 0;
   $$011 = $9;
   do {
    _out_728($0, $5, 256);
    $$011 = $$011 + -256 | 0;
   } while ($$011 >>> 0 > 255);
   $$0$lcssa = $14 & 255;
  } else $$0$lcssa = $9;
  _out_728($0, $5, $$0$lcssa);
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEEC2EmmS8_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 357913941) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 * 12 | 0) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 * 12 | 0) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 * 12 | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2EOS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$0$i$i3 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $4 = $0 + 12 | 0;
 $5 = $1 + 12 | 0;
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$4 + 4 >> 2] = HEAP32[$5 + 4 >> 2];
 HEAP32[$4 + 8 >> 2] = HEAP32[$5 + 8 >> 2];
 $$0$i$i3 = 0;
 while (1) {
  if (($$0$i$i3 | 0) == 3) break;
  HEAP32[$5 + ($$0$i$i3 << 2) >> 2] = 0;
  $$0$i$i3 = $$0$i$i3 + 1 | 0;
 }
 return;
}

function __ZNSt3__210__stdinbufIwEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0);
 HEAP32[$0 >> 2] = 14564;
 HEAP32[$0 + 32 >> 2] = $1;
 HEAP32[$0 + 40 >> 2] = $2;
 $7 = __ZNSt3__211char_traitsIwE3eofEv() | 0;
 HEAP32[$0 + 48 >> 2] = $7;
 HEAP8[$0 + 52 >> 0] = 0;
 $11 = HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] | 0;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 FUNCTION_TABLE_vii[$11 & 63]($0, $3);
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__210__stdinbufIcEC2EP8_IO_FILEP11__mbstate_t($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $3 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0);
 HEAP32[$0 >> 2] = 14628;
 HEAP32[$0 + 32 >> 2] = $1;
 HEAP32[$0 + 40 >> 2] = $2;
 $7 = __ZNSt3__211char_traitsIcE3eofEv() | 0;
 HEAP32[$0 + 48 >> 2] = $7;
 HEAP8[$0 + 52 >> 0] = 0;
 $11 = HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] | 0;
 __ZNSt3__26localeC2ERKS0_($3, $0 + 4 | 0);
 FUNCTION_TABLE_vii[$11 & 63]($0, $3);
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN6vision9MaxIndex9IfEEiPKT_($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0, $$6 = 0;
 $$0 = +HEAPF32[$0 + 4 >> 2] > +HEAPF32[$0 >> 2] & 1;
 $$1 = +HEAPF32[$0 + 8 >> 2] > +HEAPF32[$0 + ($$0 << 2) >> 2] ? 2 : $$0;
 $$2 = +HEAPF32[$0 + 12 >> 2] > +HEAPF32[$0 + ($$1 << 2) >> 2] ? 3 : $$1;
 $$3 = +HEAPF32[$0 + 16 >> 2] > +HEAPF32[$0 + ($$2 << 2) >> 2] ? 4 : $$2;
 $$4 = +HEAPF32[$0 + 20 >> 2] > +HEAPF32[$0 + ($$3 << 2) >> 2] ? 5 : $$3;
 $$5 = +HEAPF32[$0 + 24 >> 2] > +HEAPF32[$0 + ($$4 << 2) >> 2] ? 6 : $$4;
 $$6 = +HEAPF32[$0 + 28 >> 2] > +HEAPF32[$0 + ($$5 << 2) >> 2] ? 7 : $$5;
 return (+HEAPF32[$0 + 32 >> 2] > +HEAPF32[$0 + ($$6 << 2) >> 2] ? 8 : $$6) | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $12 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = ($3 - $4 | 0) / 20 | 0;
 $8 = $4;
 $9 = $3;
 if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8__appendEm($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) {
  $12 = $8 + ($1 * 20 | 0) | 0;
  $$0$i$i = $9;
  while (1) {
   if (($$0$i$i | 0) == ($12 | 0)) break;
   $14 = $$0$i$i + -20 | 0;
   __ZN6vision12FeaturePointD2Ev($14);
   $$0$i$i = $14;
  }
  HEAP32[$2 >> 2] = $12;
 }
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endIPS2_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES9_S9_m($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0$i = 0, $4 = 0, $6 = 0;
 $4 = $0 + 4 | 0;
 $$0$i = $1;
 while (1) {
  if (($$0$i | 0) == ($2 | 0)) break;
  $6 = HEAP32[$4 >> 2] | 0;
  HEAP32[$6 >> 2] = HEAP32[$$0$i >> 2];
  HEAP32[$6 + 4 >> 2] = HEAP32[$$0$i + 4 >> 2];
  HEAP32[$6 + 8 >> 2] = HEAP32[$$0$i + 8 >> 2];
  HEAP32[$6 + 12 >> 2] = HEAP32[$$0$i + 12 >> 2];
  HEAP32[$6 + 16 >> 2] = HEAP32[$$0$i + 16 >> 2];
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 20;
  $$0$i = $$0$i + 20 | 0;
 }
 return;
}

function __ZN6vision23DeterminantSymmetric3x3IfEET_PKS1_($0) {
 $0 = $0 | 0;
 var $1 = 0, $10 = 0.0, $12 = 0, $14 = 0.0, $15 = 0, $16 = 0.0, $18 = 0.0, $19 = 0.0, $2 = 0.0, $22 = 0.0, $3 = 0, $6 = 0.0;
 $1 = $0 + 32 | 0;
 $2 = +HEAPF32[$1 >> 2];
 $3 = $0 + 4 | 0;
 $6 = $2 * +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$3 >> 2]);
 $10 = +HEAPF32[$0 + 8 >> 2];
 $12 = $0 + 20 | 0;
 $14 = +HEAPF32[$3 >> 2] * 2.0 * $10 * +HEAPF32[$12 >> 2];
 $15 = $0 + 16 | 0;
 $16 = +HEAPF32[$15 >> 2];
 $18 = $16 * +__ZN6vision3sqrIfEET_S1_($10);
 $19 = +HEAPF32[$0 >> 2];
 $22 = $19 * +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$12 >> 2]);
 return +($14 - $6 - $18 - $22 + +HEAPF32[$0 >> 2] * +HEAPF32[$15 >> 2] * +HEAPF32[$1 >> 2]);
}

function _h2v1_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$025 = 0, $$026 = 0, $12 = 0, $14 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $0 + 312 | 0;
 $6 = $0 + 112 | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) >= (HEAP32[$5 >> 2] | 0)) break;
  $12 = HEAP32[$4 + ($$0 << 2) >> 2] | 0;
  $14 = $12 + (HEAP32[$6 >> 2] | 0) | 0;
  $$025 = HEAP32[$2 + ($$0 << 2) >> 2] | 0;
  $$026 = $12;
  while (1) {
   if ($$026 >>> 0 >= $14 >>> 0) break;
   $17 = HEAP8[$$025 >> 0] | 0;
   HEAP8[$$026 >> 0] = $17;
   HEAP8[$$026 + 1 >> 0] = $17;
   $$025 = $$025 + 1 | 0;
   $$026 = $$026 + 2 | 0;
  }
  $$0 = $$0 + 1 | 0;
 }
 return;
}

function __ZNSt3__214__split_bufferIN6vision17PriorityQueueItemILi96EEERNS_9allocatorIS3_EEEC2EmmS6_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 536870911) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 << 3) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 << 3) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 << 3);
 return;
}

function __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEEC2EmmS5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 214748364) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 * 20 | 0) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 * 20 | 0) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 * 20 | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ENSt3__212basic_stringIcNS2_11char_traitsIcEENS0_12malloc_allocIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $$0$i$i1 = 0, $4 = 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 $$0$i$i1 = 0;
 while (1) {
  if (($$0$i$i1 | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i1 << 2) >> 2] = 0;
  $$0$i$i1 = $$0$i$i1 + 1 | 0;
 }
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$011 = 0, $$012 = 0, $7 = 0, $8 = 0, label = 0;
 $$011 = $3;
 $$012 = $1;
 while (1) {
  if (($$011 | 0) == ($4 | 0)) {
   label = 7;
   break;
  }
  if (($$012 | 0) == ($2 | 0)) {
   $$0 = -1;
   break;
  }
  $7 = HEAP8[$$012 >> 0] | 0;
  $8 = HEAP8[$$011 >> 0] | 0;
  if ($7 << 24 >> 24 < $8 << 24 >> 24) {
   $$0 = -1;
   break;
  }
  if ($8 << 24 >> 24 < $7 << 24 >> 24) {
   $$0 = 1;
   break;
  }
  $$011 = $$011 + 1 | 0;
  $$012 = $$012 + 1 | 0;
 }
 if ((label | 0) == 7) $$0 = ($$012 | 0) != ($2 | 0) & 1;
 return $$0 | 0;
}

function _realloc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$1 = 0, $11 = 0, $14 = 0, $17 = 0, $22 = 0, $5 = 0;
 if (!$0) {
  $$1 = _malloc($1) | 0;
  return $$1 | 0;
 }
 if ($1 >>> 0 > 4294967231) {
  $5 = ___errno_location() | 0;
  HEAP32[$5 >> 2] = 12;
  $$1 = 0;
  return $$1 | 0;
 }
 $11 = _try_realloc_chunk($0 + -8 | 0, $1 >>> 0 < 11 ? 16 : $1 + 11 & -8) | 0;
 if ($11 | 0) {
  $$1 = $11 + 8 | 0;
  return $$1 | 0;
 }
 $14 = _malloc($1) | 0;
 if (!$14) {
  $$1 = 0;
  return $$1 | 0;
 }
 $17 = HEAP32[$0 + -4 >> 2] | 0;
 $22 = ($17 & -8) - (($17 & 3 | 0) == 0 ? 8 : 4) | 0;
 _memcpy($14 | 0, $0 | 0, ($22 >>> 0 < $1 >>> 0 ? $22 : $1) | 0) | 0;
 _free($0);
 $$1 = $14;
 return $$1 | 0;
}

function __ZNSt3__214__split_bufferIN6vision7Point3dIfEERNS_9allocatorIS3_EEEC2EmmS6_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 357913941) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 * 12 | 0) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 * 12 | 0) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 * 12 | 0);
 return;
}

function __ZNKSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7compareEmmPKcm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0;
 $4 = HEAP8[$0 + 11 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 if ($5) $11 = HEAP32[$0 + 4 >> 2] | 0; else $11 = $4 & 255;
 if (($2 | 0) == -1) __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0);
 if ($5) $13 = HEAP32[$0 >> 2] | 0; else $13 = $0;
 $12 = $11 >>> 0 > $2 >>> 0;
 $14 = __ZNSt3__211char_traitsIcE7compareEPKcS3_m($13, $1, $12 ? $2 : $11) | 0;
 if (!$14) return ($11 >>> 0 < $2 >>> 0 ? -1 : $12 & 1) | 0; else return $14 | 0;
 return 0;
}

function _start_pass_main_36($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $16 = 0, $3 = 0, $9 = 0;
 $3 = HEAP32[$0 + 424 >> 2] | 0;
 switch ($1 | 0) {
 case 0:
  {
   $9 = $3 + 4 | 0;
   if (!(HEAP32[(HEAP32[$0 + 452 >> 2] | 0) + 8 >> 2] | 0)) HEAP32[$9 >> 2] = 19; else {
    HEAP32[$9 >> 2] = 18;
    _make_funny_pointers($0);
    HEAP32[$3 + 64 >> 2] = 0;
    HEAP32[$3 + 68 >> 2] = 0;
    HEAP32[$3 + 76 >> 2] = 0;
   }
   HEAP32[$3 + 48 >> 2] = 0;
   HEAP32[$3 + 52 >> 2] = 0;
   break;
  }
 case 2:
  {
   HEAP32[$3 + 4 >> 2] = 20;
   break;
  }
 default:
  {
   $16 = HEAP32[$0 >> 2] | 0;
   HEAP32[$16 + 20 >> 2] = 4;
   FUNCTION_TABLE_vi[HEAP32[$16 >> 2] & 255]($0);
  }
 }
 return;
}

function _request_virt_sarray($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $14 = 0, $20 = 0, $7 = 0, $9 = 0;
 $7 = HEAP32[$0 + 4 >> 2] | 0;
 if (($1 | 0) != 1) {
  $9 = HEAP32[$0 >> 2] | 0;
  HEAP32[$9 + 20 >> 2] = 14;
  HEAP32[$9 + 24 >> 2] = $1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $14 = _alloc_small($0, $1, 128) | 0;
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = $4;
 HEAP32[$14 + 8 >> 2] = $3;
 HEAP32[$14 + 12 >> 2] = $5;
 HEAP32[$14 + 32 >> 2] = $2;
 HEAP32[$14 + 40 >> 2] = 0;
 $20 = $7 + 68 | 0;
 HEAP32[$14 + 44 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $14;
 return $14 | 0;
}

function _request_virt_barray($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $14 = 0, $20 = 0, $7 = 0, $9 = 0;
 $7 = HEAP32[$0 + 4 >> 2] | 0;
 if (($1 | 0) != 1) {
  $9 = HEAP32[$0 >> 2] | 0;
  HEAP32[$9 + 20 >> 2] = 14;
  HEAP32[$9 + 24 >> 2] = $1;
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 $14 = _alloc_small($0, $1, 128) | 0;
 HEAP32[$14 >> 2] = 0;
 HEAP32[$14 + 4 >> 2] = $4;
 HEAP32[$14 + 8 >> 2] = $3;
 HEAP32[$14 + 12 >> 2] = $5;
 HEAP32[$14 + 32 >> 2] = $2;
 HEAP32[$14 + 40 >> 2] = 0;
 $20 = $7 + 72 | 0;
 HEAP32[$14 + 44 >> 2] = HEAP32[$20 >> 2];
 HEAP32[$20 >> 2] = $14;
 return $14 | 0;
}

function __ZNK6vision21HoughSimilarityVoting23getMaximumNumberOfVotesERfRi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$sroa$09$0 = 0, $$sroa$09$0$in = 0, $10 = 0.0, $14 = 0.0, $15 = 0.0, $5 = 0, $6 = 0;
 HEAPF32[$1 >> 2] = 0.0;
 HEAP32[$2 >> 2] = -1;
 $$sroa$09$0$in = $0 + 100 | 0;
 $10 = 0.0;
 while (1) {
  $$sroa$09$0 = HEAP32[$$sroa$09$0$in >> 2] | 0;
  if (!$$sroa$09$0) break;
  $5 = $$sroa$09$0;
  $6 = $5 + 12 | 0;
  if ($10 < +((HEAP32[$6 >> 2] | 0) >>> 0)) {
   HEAP32[$2 >> 2] = HEAP32[$5 + 8 >> 2];
   $14 = +((HEAP32[$6 >> 2] | 0) >>> 0);
   HEAPF32[$1 >> 2] = $14;
   $15 = $14;
  } else $15 = $10;
  $$sroa$09$0$in = $$sroa$09$0;
  $10 = $15;
 }
 return;
}

function _jpeg_stdio_src($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $14 = 0, $2 = 0, $3 = 0, $5 = 0, $8 = 0;
 $2 = $0 + 24 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if (!$3) {
  $5 = $0 + 4 | 0;
  $8 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$5 >> 2] >> 2] & 63]($0, 0, 40) | 0;
  HEAP32[$2 >> 2] = $8;
  $11 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$5 >> 2] >> 2] & 63]($0, 0, 4096) | 0;
  HEAP32[$8 + 32 >> 2] = $11;
  $14 = HEAP32[$2 >> 2] | 0;
 } else $14 = $3;
 HEAP32[$14 + 8 >> 2] = 135;
 HEAP32[$14 + 12 >> 2] = 73;
 HEAP32[$14 + 16 >> 2] = 46;
 HEAP32[$14 + 20 >> 2] = 28;
 HEAP32[$14 + 24 >> 2] = 136;
 HEAP32[$14 + 28 >> 2] = $1;
 HEAP32[$14 + 4 >> 2] = 0;
 HEAP32[$14 >> 2] = 0;
 return;
}

function __ZN6vision32CauchyProjectiveReprojectionCostIfEET_PKS1_S3_S3_S1_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = +$3;
 var $18 = 0.0, $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp + 8 | 0;
 $5 = sp;
 $6 = $4 + 4 | 0;
 __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvRT_S2_PKS1_S1_S1_($4, $6, $0, +HEAPF32[$1 >> 2], +HEAPF32[$1 + 4 >> 2]);
 HEAPF32[$5 >> 2] = +HEAPF32[$4 >> 2] - +HEAPF32[$2 >> 2];
 HEAPF32[$5 + 4 >> 2] = +HEAPF32[$6 >> 2] - +HEAPF32[$2 + 4 >> 2];
 $18 = +__ZN6vision10CauchyCostIfEET_PKS1_S1_($5, $3);
 STACKTOP = sp;
 return +$18;
}

function ___toread($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $15 = 0, $23 = 0, $3 = 0, $7 = 0, $9 = 0;
 $1 = $0 + 74 | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 HEAP8[$1 >> 0] = $3 + 255 | $3;
 $7 = $0 + 20 | 0;
 $9 = $0 + 28 | 0;
 if ((HEAP32[$7 >> 2] | 0) >>> 0 > (HEAP32[$9 >> 2] | 0) >>> 0) FUNCTION_TABLE_iiii[HEAP32[$0 + 36 >> 2] & 63]($0, 0, 0) | 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$9 >> 2] = 0;
 HEAP32[$7 >> 2] = 0;
 $15 = HEAP32[$0 >> 2] | 0;
 if (!($15 & 4)) {
  $23 = (HEAP32[$0 + 44 >> 2] | 0) + (HEAP32[$0 + 48 >> 2] | 0) | 0;
  HEAP32[$0 + 8 >> 2] = $23;
  HEAP32[$0 + 4 >> 2] = $23;
  $$0 = $15 << 27 >> 31;
 } else {
  HEAP32[$0 >> 2] = $15 | 32;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZNSt3__210shared_ptrIhEC2IhEEPT_NS_9enable_ifIXsr14is_convertibleIS4_PhEE5valueENS1_5__natEE4typeE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 HEAP32[$0 >> 2] = $1;
 $3 = __Znwm(16) | 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 HEAP32[$3 >> 2] = 13576;
 HEAP32[$3 + 12 >> 2] = $1;
 HEAP32[$0 + 4 >> 2] = $3;
 HEAP32[$vararg_buffer >> 2] = $1;
 HEAP32[$vararg_buffer + 4 >> 2] = $1;
 __ZNSt3__210shared_ptrIhE18__enable_weak_thisEz($0, $vararg_buffer);
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__split_bufferIPKN6vision4NodeILi96EEERNS_9allocatorIS5_EEEC2EmmS8_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 1073741823) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 << 2) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 << 2) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 << 2);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pair9move_fullEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$i = 0, $2 = 0, $4 = 0, $5 = 0;
 $2 = $1 + 12 | 0;
 $4 = HEAP8[$2 + 11 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($1, $5 ? HEAP32[$2 >> 2] | 0 : $2, $5 ? HEAP32[$1 + 16 >> 2] | 0 : $4 & 255) | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
 HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 $$0$i$i$i = 0;
 while (1) {
  if (($$0$i$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i$i << 2) >> 2] = 0;
  $$0$i$i$i = $$0$i$i$i + 1 | 0;
 }
 return;
}

function __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEEC2EmmS7_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 1073741823) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 << 2) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 << 2) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 << 2);
 return;
}

function _make_odither_array($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$024 = 0, $12 = 0, $13 = 0, $20 = 0, $5 = 0, $7 = 0;
 $5 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, 1024) | 0;
 $7 = ($1 << 9) + -512 | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 16) break;
  $$024 = 0;
  while (1) {
   if (($$024 | 0) == 16) break;
   $12 = 255 - ((HEAPU8[3200 + ($$0 << 4) + $$024 >> 0] | 0) << 1) | 0;
   $13 = $12 * 255 | 0;
   if (($12 | 0) < 0) $20 = 0 - ((0 - $13 | 0) / ($7 | 0) | 0) | 0; else $20 = ($13 | 0) / ($7 | 0) | 0;
   HEAP32[$5 + ($$0 << 6) + ($$024 << 2) >> 2] = $20;
   $$024 = $$024 + 1 | 0;
  }
  $$0 = $$0 + 1 | 0;
 }
 return $5 | 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPKhiPKii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0, $5 = 0, $7 = 0, $8 = 0;
 $5 = __Znwm(128) | 0;
 __ZN6vision4NodeILi96EEC2Ei($5, __ZN6vision28BinaryHierarchicalClusteringILi96EE10nextNodeIdEv($0) | 0);
 $7 = $0 + 8 | 0;
 $8 = HEAP32[$7 >> 2] | 0;
 HEAP32[$7 >> 2] = $5;
 if (!$8) $10 = $5; else {
  __ZN6vision4NodeILi96EED2Ev($8);
  __ZdlPv($8);
  $10 = HEAP32[$7 >> 2] | 0;
 }
 __ZN6vision4NodeILi96EE4leafEb($10, 0);
 __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPNS_4NodeILi96EEEPKhiPKii($0, HEAP32[$7 >> 2] | 0, $1, $2, $3, $4);
 return;
}

function __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEEC2EmmS5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 536870911) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 << 3) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 << 3) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 << 3);
 return;
}

function __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEEC2EmmS5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 134217727) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 << 5) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 << 5) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 << 5);
 return;
}

function __ZNSt3__214__split_bufferINS_4pairIfmEERNS_9allocatorIS2_EEEC2EmmS5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 536870911) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 << 3) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 << 3) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 << 3);
 return;
}

function __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEEC2EmmS5_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 536870911) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 << 3) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 << 3) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 << 3);
 return;
}

function __ZN6vision8KeyframeILi96EE10buildIndexEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0;
 $1 = $0 + 36 | 0;
 __ZN6vision28BinaryHierarchicalClusteringILi96EE16setNumHypothesesEi($1, 128);
 __ZN6vision28BinaryHierarchicalClusteringILi96EE13setNumCentersEi($1, 8);
 __ZN6vision28BinaryHierarchicalClusteringILi96EE16setMaxNodesToPopEi($1, 8);
 __ZN6vision28BinaryHierarchicalClusteringILi96EE21setMinFeaturesPerNodeEi($1, 16);
 $2 = $0 + 8 | 0;
 $3 = __ZN6vision18BinaryFeatureStore8featuresEv($2) | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 __ZN6vision28BinaryHierarchicalClusteringILi96EE5buildEPKhi($1, $4, __ZNK6vision18BinaryFeatureStore4sizeEv($2) | 0);
 return;
}

function __ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$011 = 0, $$012 = 0, $7 = 0, $8 = 0, label = 0;
 $$011 = $3;
 $$012 = $1;
 while (1) {
  if (($$011 | 0) == ($4 | 0)) {
   label = 7;
   break;
  }
  if (($$012 | 0) == ($2 | 0)) {
   $$0 = -1;
   break;
  }
  $7 = HEAP32[$$012 >> 2] | 0;
  $8 = HEAP32[$$011 >> 2] | 0;
  if (($7 | 0) < ($8 | 0)) {
   $$0 = -1;
   break;
  }
  if (($8 | 0) < ($7 | 0)) {
   $$0 = 1;
   break;
  }
  $$011 = $$011 + 4 | 0;
  $$012 = $$012 + 4 | 0;
 }
 if ((label | 0) == 7) $$0 = ($$012 | 0) != ($2 | 0) & 1;
 return $$0 | 0;
}

function _arVecHousehold($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$020 = 0.0, $$1 = 0.0, $11 = 0.0, $13 = 0, $15 = 0, $2 = 0.0, $4 = 0, $5 = 0.0, $8 = 0.0;
 $2 = +Math_sqrt(+(+_arVecInnerproduct($0, $0)));
 L1 : do if ($2 != 0.0) {
  $4 = HEAP32[$0 >> 2] | 0;
  $5 = +HEAPF64[$4 >> 3];
  $$020 = $5 < 0.0 ? -$2 : $2;
  $8 = $5 + $$020;
  HEAPF64[$4 >> 3] = $8;
  $11 = 1.0 / +Math_sqrt(+($$020 * $8));
  $13 = HEAP32[$0 + 4 >> 2] | 0;
  $$0 = 0;
  while (1) {
   if (($$0 | 0) >= ($13 | 0)) {
    $$1 = $$020;
    break L1;
   }
   $15 = $4 + ($$0 << 3) | 0;
   HEAPF64[$15 >> 3] = $11 * +HEAPF64[$15 >> 3];
   $$0 = $$0 + 1 | 0;
  }
 } else $$1 = $2; while (0);
 return +-$$1;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEERNS5_IS9_Lm4096EEEEC2EmmSB_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $8 = 0, $9 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 if (!$1) $8 = 0; else $8 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE8allocateEm($3, $1) | 0;
 HEAP32[$0 >> 2] = $8;
 $9 = $8 + ($2 << 4) | 0;
 HEAP32[$0 + 8 >> 2] = $9;
 HEAP32[$0 + 4 >> 2] = $9;
 HEAP32[$4 >> 2] = $8 + ($1 << 4);
 return;
}

function _saveSetjmp(env, label, table, size) {
 env = env | 0;
 label = label | 0;
 table = table | 0;
 size = size | 0;
 var i = 0;
 setjmpId = setjmpId + 1 | 0;
 HEAP32[env >> 2] = setjmpId;
 while ((i | 0) < (size | 0)) {
  if (!(HEAP32[table + (i << 3) >> 2] | 0)) {
   HEAP32[table + (i << 3) >> 2] = setjmpId;
   HEAP32[table + ((i << 3) + 4) >> 2] = label;
   HEAP32[table + ((i << 3) + 8) >> 2] = 0;
   setTempRet0(size | 0);
   return table | 0;
  }
  i = i + 1 | 0;
 }
 size = size * 2 | 0;
 table = _realloc(table | 0, 8 * (size + 1 | 0) | 0) | 0;
 table = _saveSetjmp(env | 0, label | 0, table | 0, size | 0) | 0;
 setTempRet0(size | 0);
 return table | 0;
}

function _strtok($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$010 = 0, $10 = 0, $3 = 0, $6 = 0, label = 0;
 if (!$0) {
  $3 = HEAP32[14076] | 0;
  if (!$3) $$0 = 0; else {
   $$010 = $3;
   label = 3;
  }
 } else {
  $$010 = $0;
  label = 3;
 }
 do if ((label | 0) == 3) {
  $6 = $$010 + (_strspn($$010, $1) | 0) | 0;
  if (!(HEAP8[$6 >> 0] | 0)) {
   HEAP32[14076] = 0;
   $$0 = 0;
   break;
  }
  $10 = $6 + (_strcspn($6, $1) | 0) | 0;
  HEAP32[14076] = $10;
  if (!(HEAP8[$10 >> 0] | 0)) {
   HEAP32[14076] = 0;
   $$0 = $6;
   break;
  } else {
   HEAP32[14076] = $10 + 1;
   HEAP8[$10 >> 0] = 0;
   $$0 = $6;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEED2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS9_PvEEEE($0, HEAP32[$0 + 8 >> 2] | 0);
 $3 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = 0;
 if ($3 | 0) __ZdlPv($3);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEED2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS7_PvEEEE($0, HEAP32[$0 + 8 >> 2] | 0);
 $3 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = 0;
 if ($3 | 0) __ZdlPv($3);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L13utf16_to_utf8EPKtS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function _arParamObserv2IdealLTf($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $14 = 0, $17 = 0, $28 = 0, $9 = 0;
 $9 = (HEAP32[$0 + 16 >> 2] | 0) + ~~($1 + .5) | 0;
 $14 = (HEAP32[$0 + 20 >> 2] | 0) + ~~($2 + .5) | 0;
 if (($9 | 0) < 0) $$0 = -1; else {
  $17 = HEAP32[$0 + 8 >> 2] | 0;
  if (($14 | 0) < 0 | ($9 | 0) >= ($17 | 0)) $$0 = -1; else if (($14 | 0) < (HEAP32[$0 + 12 >> 2] | 0)) {
   $28 = (HEAP32[$0 + 4 >> 2] | 0) + ((Math_imul($17, $14) | 0) + $9 << 1 << 2) | 0;
   HEAP32[$3 >> 2] = HEAP32[$28 >> 2];
   HEAP32[$4 >> 2] = HEAP32[$28 + 4 >> 2];
   $$0 = 0;
  } else $$0 = -1;
 }
 return $$0 | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L13utf8_to_utf16EPKhS1_RS1_PtS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L12ucs4_to_utf8EPKjS1_RS1_PhS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $12 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0;
 $2 = $0 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = $3 - $4 >> 5;
 $8 = $4;
 $9 = $3;
 if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8__appendEm($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) {
  $12 = $8 + ($1 << 5) | 0;
  $$0$i$i = $9;
  while (1) {
   if (($$0$i$i | 0) == ($12 | 0)) break;
   $14 = $$0$i$i + -32 | 0;
   __ZN6vision5ImageD2Ev($14);
   $$0$i$i = $14;
  }
  HEAP32[$2 >> 2] = $12;
 }
 return;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 var $10 = 0, $8 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $8 = sp + 4 | 0;
 $9 = sp;
 HEAP32[$8 >> 2] = $2;
 HEAP32[$9 >> 2] = $5;
 $10 = __ZNSt3__2L12utf8_to_ucs4EPKhS1_RS1_PjS3_RS3_mNS_12codecvt_modeE($2, $3, $8, $5, $6, $9, 1114111, 0) | 0;
 HEAP32[$4 >> 2] = HEAP32[$8 >> 2];
 HEAP32[$7 >> 2] = HEAP32[$9 >> 2];
 STACKTOP = sp;
 return $10 | 0;
}

function _arParamIdeal2ObservLTf($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $14 = 0, $17 = 0, $27 = 0, $9 = 0;
 $9 = (HEAP32[$0 + 16 >> 2] | 0) + ~~($1 + .5) | 0;
 $14 = (HEAP32[$0 + 20 >> 2] | 0) + ~~($2 + .5) | 0;
 if (($9 | 0) < 0) $$0 = -1; else {
  $17 = HEAP32[$0 + 8 >> 2] | 0;
  if (($14 | 0) < 0 | ($9 | 0) >= ($17 | 0)) $$0 = -1; else if (($14 | 0) < (HEAP32[$0 + 12 >> 2] | 0)) {
   $27 = (HEAP32[$0 >> 2] | 0) + ((Math_imul($17, $14) | 0) + $9 << 1 << 2) | 0;
   HEAP32[$3 >> 2] = HEAP32[$27 >> 2];
   HEAP32[$4 >> 2] = HEAP32[$27 + 4 >> 2];
   $$0 = 0;
  } else $$0 = -1;
 }
 return $$0 | 0;
}

function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 1073741823) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 << 2) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 << 2) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 << 2);
 return;
}

function __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEEC2EmmS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if ($1 >>> 0 > 1073741823) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 << 2) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 << 2) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 << 2);
 return;
}

function _sbrk(increment) {
 increment = increment | 0;
 var oldDynamicTop = 0, newDynamicTop = 0, totalMemory = 0;
 totalMemory = _emscripten_get_heap_size() | 0;
 oldDynamicTop = HEAP32[DYNAMICTOP_PTR >> 2] | 0;
 newDynamicTop = oldDynamicTop + increment | 0;
 if ((increment | 0) > 0 & (newDynamicTop | 0) < (oldDynamicTop | 0) | (newDynamicTop | 0) < 0) {
  abortOnCannotGrowMemory(newDynamicTop | 0) | 0;
  ___setErrNo(12);
  return -1;
 }
 if ((newDynamicTop | 0) > (totalMemory | 0)) if (_emscripten_resize_heap(newDynamicTop | 0) | 0) {} else {
  ___setErrNo(12);
  return -1;
 }
 HEAP32[DYNAMICTOP_PTR >> 2] = newDynamicTop;
 return oldDynamicTop | 0;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0, $7 = 0;
 if ((__ZNKSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE8max_sizeEv($0) | 0) >>> 0 < $1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 if ($1 >>> 0 > 536870911) {
  $5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($5, 40521);
  HEAP32[$5 >> 2] = 17440;
  ___cxa_throw($5 | 0, 13288, 107);
 } else {
  $7 = __Znwm($1 << 3) | 0;
  HEAP32[$0 + 4 >> 2] = $7;
  HEAP32[$0 >> 2] = $7;
  HEAP32[$0 + 8 >> 2] = $7 + ($1 << 3);
  return;
 }
}

function __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $3 = 0, $6 = 0, $8 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i + -24 | 0;
   __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
   $$0$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  $8 = HEAP32[$0 >> 2] | 0;
  __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE10deallocateEPS2_m($0 + 12 | 0, $8, ((HEAP32[$0 + 8 >> 2] | 0) - $8 | 0) / 24 | 0);
 }
 return;
}

function _strncat($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$01013 = 0, $$01112 = 0, $$014 = 0, $10 = 0, $4 = 0, $6 = 0;
 $4 = $0 + (_strlen($0) | 0) | 0;
 L1 : do if (!$2) $$0$lcssa = $4; else {
  $$01013 = $2;
  $$01112 = $1;
  $$014 = $4;
  while (1) {
   $6 = HEAP8[$$01112 >> 0] | 0;
   if (!($6 << 24 >> 24)) {
    $$0$lcssa = $$014;
    break L1;
   }
   $$01013 = $$01013 + -1 | 0;
   $10 = $$014 + 1 | 0;
   HEAP8[$$014 >> 0] = $6;
   if (!$$01013) {
    $$0$lcssa = $10;
    break;
   } else {
    $$01112 = $$01112 + 1 | 0;
    $$014 = $10;
   }
  }
 } while (0);
 HEAP8[$$0$lcssa >> 0] = 0;
 return $0 | 0;
}

function __ZNSt3__214__split_bufferItRNS_9allocatorItEEEC2EmmS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $4 = 0, $8 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $11 = 0; else if (($1 | 0) < 0) {
  $8 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($8, 40521);
  HEAP32[$8 >> 2] = 17440;
  ___cxa_throw($8 | 0, 13288, 107);
 } else {
  $11 = __Znwm($1 << 1) | 0;
  break;
 } while (0);
 HEAP32[$0 >> 2] = $11;
 $12 = $11 + ($2 << 1) | 0;
 HEAP32[$0 + 8 >> 2] = $12;
 HEAP32[$0 + 4 >> 2] = $12;
 HEAP32[$4 >> 2] = $11 + ($1 << 1);
 return;
}

function _jinit_inverse_dct($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$020 = 0, $1 = 0, $14 = 0, $4 = 0, $8 = 0, $9 = 0;
 $1 = $0 + 4 | 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 84) | 0;
 HEAP32[$0 + 448 >> 2] = $4;
 HEAP32[$4 >> 2] = 128;
 $8 = $0 + 36 | 0;
 $9 = $4 + 44 | 0;
 $$0 = HEAP32[$0 + 216 >> 2] | 0;
 $$020 = 0;
 while (1) {
  if (($$020 | 0) >= (HEAP32[$8 >> 2] | 0)) break;
  $14 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$1 >> 2] >> 2] & 63]($0, 1, 256) | 0;
  HEAP32[$$0 + 80 >> 2] = $14;
  _memset($14 | 0, 0, 256) | 0;
  HEAP32[$9 + ($$020 << 2) >> 2] = -1;
  $$0 = $$0 + 84 | 0;
  $$020 = $$020 + 1 | 0;
 }
 return;
}

function __ZN10emscripten8functionIiJiiiEJEEEvPKcPFT_DpT0_EDpT1_($name, $fn) {
 $name = $name | 0;
 $fn = $fn | 0;
 var $args = 0, $call = 0, $call1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $args = sp;
 $call = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiiEE8getCountEv($args) | 0;
 $call1 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiiEE8getTypesEv($args) | 0;
 __embind_register_function($name | 0, $call | 0, $call1 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiiiiEEEPKcv() | 0, 9, $fn | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE21__construct_node_hashINS_4pairIjjEEJEEENS_10unique_ptrINS_11__hash_nodeIS2_PvEENS_22__hash_node_destructorINSB_ISK_EEEEEEmOT_DpOT0_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $5 = 0;
 $5 = __Znwm(16) | 0;
 HEAP32[$0 >> 2] = $5;
 HEAP32[$0 + 4 >> 2] = $1 + 8;
 HEAP32[$5 + 8 >> 2] = HEAP32[$3 >> 2];
 HEAP32[$5 + 12 >> 2] = HEAP32[$3 + 4 >> 2];
 HEAP8[$0 + 8 >> 0] = 1;
 HEAP32[$5 + 4 >> 2] = $2;
 HEAP32[$5 >> 2] = 0;
 return;
}

function __ZN10emscripten8functionIiJiiEJEEEvPKcPFT_DpT0_EDpT1_($name, $fn) {
 $name = $name | 0;
 $fn = $fn | 0;
 var $args = 0, $call = 0, $call1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $args = sp;
 $call = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiEE8getCountEv($args) | 0;
 $call1 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiEE8getTypesEv($args) | 0;
 __embind_register_function($name | 0, $call | 0, $call1 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiiiEEEPKcv() | 0, 35, $fn | 0);
 STACKTOP = sp;
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEEC2EmmS6_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $13 = 0, $14 = 0, $4 = 0, $7 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 do if (!$1) $13 = 0; else {
  $7 = $3 + 112 | 0;
  if ($1 >>> 0 < 29 & (HEAP8[$7 >> 0] | 0) == 0) {
   HEAP8[$7 >> 0] = 1;
   $13 = $3;
   break;
  } else {
   $13 = __Znwm($1 << 2) | 0;
   break;
  }
 } while (0);
 HEAP32[$0 >> 2] = $13;
 $14 = $13 + ($2 << 2) | 0;
 HEAP32[$0 + 8 >> 2] = $14;
 HEAP32[$0 + 4 >> 2] = $14;
 HEAP32[$4 >> 2] = $13 + ($1 << 2);
 return;
}

function __ZN10emscripten8functionIvJiiEJEEEvPKcPFT_DpT0_EDpT1_($name, $fn) {
 $name = $name | 0;
 $fn = $fn | 0;
 var $args = 0, $call = 0, $call1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $args = sp;
 $call = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviiEE8getCountEv($args) | 0;
 $call1 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviiEE8getTypesEv($args) | 0;
 __embind_register_function($name | 0, $call | 0, $call1 | 0, __ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv() | 0, 2, $fn | 0);
 STACKTOP = sp;
 return;
}

function __ZN10emscripten8functionIvJifEJEEEvPKcPFT_DpT0_EDpT1_($name, $fn) {
 $name = $name | 0;
 $fn = $fn | 0;
 var $args = 0, $call = 0, $call1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $args = sp;
 $call = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvifEE8getCountEv($args) | 0;
 $call1 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvifEE8getTypesEv($args) | 0;
 __embind_register_function($name | 0, $call | 0, $call1 | 0, __ZN10emscripten8internal19getGenericSignatureIJviifEEEPKcv() | 0, 2, $fn | 0);
 STACKTOP = sp;
 return;
}

function __ZN10emscripten8functionIvJidEJEEEvPKcPFT_DpT0_EDpT1_($name, $fn) {
 $name = $name | 0;
 $fn = $fn | 0;
 var $args = 0, $call = 0, $call1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $args = sp;
 $call = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvidEE8getCountEv($args) | 0;
 $call1 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvidEE8getTypesEv($args) | 0;
 __embind_register_function($name | 0, $call | 0, $call1 | 0, __ZN10emscripten8internal19getGenericSignatureIJviidEEEPKcv() | 0, 1, $fn | 0);
 STACKTOP = sp;
 return;
}

function __ZN6vision6detail23create_formatted_stringERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2048 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(2048);
 $3 = sp;
 _vsnprintf($3, 2048, (HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, $2) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($0, $3, __ZNSt3__211char_traitsIcE6lengthEPKc($3) | 0);
 STACKTOP = sp;
 return;
}

function __ZN6vision16Multiply_3x3_3x1IfEEvPT_PKS1_S4_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $8 = 0;
 $8 = $2 + 4 | 0;
 $14 = $2 + 8 | 0;
 HEAPF32[$0 >> 2] = +HEAPF32[$1 >> 2] * +HEAPF32[$2 >> 2] + +HEAPF32[$1 + 4 >> 2] * +HEAPF32[$8 >> 2] + +HEAPF32[$1 + 8 >> 2] * +HEAPF32[$14 >> 2];
 HEAPF32[$0 + 4 >> 2] = +HEAPF32[$1 + 12 >> 2] * +HEAPF32[$2 >> 2] + +HEAPF32[$1 + 16 >> 2] * +HEAPF32[$8 >> 2] + +HEAPF32[$1 + 20 >> 2] * +HEAPF32[$14 >> 2];
 HEAPF32[$0 + 8 >> 2] = +HEAPF32[$1 + 24 >> 2] * +HEAPF32[$2 >> 2] + +HEAPF32[$1 + 28 >> 2] * +HEAPF32[$8 >> 2] + +HEAPF32[$1 + 32 >> 2] * +HEAPF32[$14 >> 2];
 return;
}

function __ZN10emscripten8functionIvJiEJEEEvPKcPFT_DpT0_EDpT1_($name, $fn) {
 $name = $name | 0;
 $fn = $fn | 0;
 var $args = 0, $call = 0, $call1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $args = sp;
 $call = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviEE8getCountEv($args) | 0;
 $call1 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviEE8getTypesEv($args) | 0;
 __embind_register_function($name | 0, $call | 0, $call1 | 0, __ZN10emscripten8internal19getGenericSignatureIJviiEEEPKcv() | 0, 55, $fn | 0);
 STACKTOP = sp;
 return;
}

function __ZN10emscripten8functionIiJiEJEEEvPKcPFT_DpT0_EDpT1_($name, $fn) {
 $name = $name | 0;
 $fn = $fn | 0;
 var $args = 0, $call = 0, $call1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $args = sp;
 $call = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiEE8getCountEv($args) | 0;
 $call1 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiEE8getTypesEv($args) | 0;
 __embind_register_function($name | 0, $call | 0, $call1 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv() | 0, 39, $fn | 0);
 STACKTOP = sp;
 return;
}

function __ZN10emscripten8functionIdJiEJEEEvPKcPFT_DpT0_EDpT1_($name, $fn) {
 $name = $name | 0;
 $fn = $fn | 0;
 var $args = 0, $call = 0, $call1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $args = sp;
 $call = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJdiEE8getCountEv($args) | 0;
 $call1 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJdiEE8getTypesEv($args) | 0;
 __embind_register_function($name | 0, $call | 0, $call1 | 0, __ZN10emscripten8internal19getGenericSignatureIJdiiEEEPKcv() | 0, 1, $fn | 0);
 STACKTOP = sp;
 return;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $13 = 0, $4 = 0, $5 = 0;
 $4 = $1 + 16 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 do if (!$5) {
  HEAP32[$4 >> 2] = $2;
  HEAP32[$1 + 24 >> 2] = $3;
  HEAP32[$1 + 36 >> 2] = 1;
 } else {
  if (($5 | 0) != ($2 | 0)) {
   $13 = $1 + 36 | 0;
   HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 1;
   HEAP32[$1 + 24 >> 2] = 2;
   HEAP8[$1 + 54 >> 0] = 1;
   break;
  }
  $10 = $1 + 24 | 0;
  if ((HEAP32[$10 >> 2] | 0) == 2) HEAP32[$10 >> 2] = $3;
 } while (0);
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0, $7 = 0;
 if ((__ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv($0) | 0) >>> 0 < $1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 if ($1 >>> 0 > 214748364) {
  $5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($5, 40521);
  HEAP32[$5 >> 2] = 17440;
  ___cxa_throw($5 | 0, 13288, 107);
 } else {
  $7 = __Znwm($1 * 20 | 0) | 0;
  HEAP32[$0 + 4 >> 2] = $7;
  HEAP32[$0 >> 2] = $7;
  HEAP32[$0 + 8 >> 2] = $7 + ($1 * 20 | 0);
  return;
 }
}

function __ZN10emscripten8functionIiJEJEEEvPKcPFT_DpT0_EDpT1_($name, $fn) {
 $name = $name | 0;
 $fn = $fn | 0;
 var $args = 0, $call = 0, $call1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $args = sp;
 $call = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiEE8getCountEv($args) | 0;
 $call1 = __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiEE8getTypesEv($args) | 0;
 __embind_register_function($name | 0, $call | 0, $call1 | 0, __ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv() | 0, 89, $fn | 0);
 STACKTOP = sp;
 return;
}

function _kpmUtilResizeImage($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0;
 switch ($3 | 0) {
 case 1:
  {
   $$0 = __ZL14genBWImageFullPhiiPiS0_($0, $1, $2, $4, $5) | 0;
   break;
  }
 case 5:
  {
   $$0 = __ZL18genBWImageTwoThirdPhiiPiS0_($0, $1, $2, $4, $5) | 0;
   break;
  }
 case 2:
  {
   $$0 = __ZL14genBWImageHalfPhiiPiS0_($0, $1, $2, $4, $5) | 0;
   break;
  }
 case 4:
  {
   $$0 = __ZL18genBWImageOneThirdPhiiPiS0_($0, $1, $2, $4, $5) | 0;
   break;
  }
 default:
  $$0 = __ZL15genBWImageQuartPhiiPiS0_($0, $1, $2, $4, $5) | 0;
 }
 return $$0 | 0;
}

function _icpCreateHandle($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$022 = 0, $$023 = 0, $1 = 0;
 $1 = _malloc(136) | 0;
 if (!$1) $$023 = 0; else {
  $$0 = 0;
  while (1) {
   if (($$0 | 0) == 3) break;
   $$022 = 0;
   while (1) {
    if (($$022 | 0) == 4) break;
    HEAPF64[$1 + ($$0 << 5) + ($$022 << 3) >> 3] = +HEAPF64[$0 + ($$0 << 5) + ($$022 << 3) >> 3];
    $$022 = $$022 + 1 | 0;
   }
   $$0 = $$0 + 1 | 0;
  }
  HEAP32[$1 + 96 >> 2] = 10;
  HEAPF64[$1 + 104 >> 3] = .10000000149011612;
  HEAPF64[$1 + 112 >> 3] = .9900000095367432;
  HEAPF64[$1 + 120 >> 3] = 4.0;
  HEAPF64[$1 + 128 >> 3] = .5;
  $$023 = $1;
 }
 return $$023 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEED2Ev($this) {
 $this = $this | 0;
 var $1 = 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS4_PvEEEE($this, HEAP32[$this + 8 >> 2] | 0);
 $1 = HEAP32[$this >> 2] | 0;
 HEAP32[$this >> 2] = 0;
 if ($1 | 0) __ZdlPv($1);
 return;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0, $7 = 0;
 if ((__ZNKSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8max_sizeEv($0) | 0) >>> 0 < $1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 if ($1 >>> 0 > 357913941) {
  $5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($5, 40521);
  HEAP32[$5 >> 2] = 17440;
  ___cxa_throw($5 | 0, 13288, 107);
 } else {
  $7 = __Znwm($1 * 12 | 0) | 0;
  HEAP32[$0 + 4 >> 2] = $7;
  HEAP32[$0 >> 2] = $7;
  HEAP32[$0 + 8 >> 2] = $7 + ($1 * 12 | 0);
  return;
 }
}

function __ZNSt3__2L11init_wam_pmEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[55592] | 0)) if (___cxa_guard_acquire(55592) | 0) {
  $4 = 54448;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 54736);
 }
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54448, 15352) | 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw(54460, 15364) | 0;
 return;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EEC2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $4 = 0;
 HEAP32[$0 >> 2] = 1234;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $3 = $0 + 12 | 0;
 __ZN6vision14BinarykMedoidsILi96EEC2ERi($3, $0);
 $4 = $0 + 72 | 0;
 HEAP32[$0 + 100 >> 2] = 0;
 HEAP32[$0 + 104 >> 2] = 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$4 + 12 >> 2] = 0;
 HEAP32[$4 + 16 >> 2] = 0;
 HEAP32[$4 + 20 >> 2] = 0;
 HEAP32[$0 + 108 >> 2] = 16;
 __ZN6vision14BinarykMedoidsILi96EE4setkEi($3, 8);
 __ZN6vision14BinarykMedoidsILi96EE16setNumHypothesesEi($3, 1);
 return;
}

function __ZNSt3__2L10init_am_pmEv() {
 var $$0$i$i = 0, $4 = 0;
 if (!(HEAP8[55512] | 0)) if (___cxa_guard_acquire(55512) | 0) {
  $4 = 53696;
  do {
   HEAP32[$4 >> 2] = 0;
   HEAP32[$4 + 4 >> 2] = 0;
   HEAP32[$4 + 8 >> 2] = 0;
   $$0$i$i = 0;
   while (1) {
    if (($$0$i$i | 0) == 3) break;
    HEAP32[$4 + ($$0$i$i << 2) >> 2] = 0;
    $$0$i$i = $$0$i$i + 1 | 0;
   }
   $4 = $4 + 12 | 0;
  } while (($4 | 0) != 53984);
 }
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53696, 47234) | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc(53708, 47237) | 0;
 return;
}

function __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0, $7 = 0;
 if ((__ZNKSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE8max_sizeEv($0) | 0) >>> 0 < $1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 if ($1 >>> 0 > 536870911) {
  $5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($5, 40521);
  HEAP32[$5 >> 2] = 17440;
  ___cxa_throw($5 | 0, 13288, 107);
 } else {
  $7 = __Znwm($1 << 3) | 0;
  HEAP32[$0 + 4 >> 2] = $7;
  HEAP32[$0 >> 2] = $7;
  HEAP32[$0 + 8 >> 2] = $7 + ($1 << 3);
  return;
 }
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEED2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS6_PvEEEE($0, HEAP32[$0 + 8 >> 2] | 0);
 $3 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = 0;
 if ($3 | 0) __ZdlPv($3);
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEERNS5_IS7_Lm4096EEEEC2EmmS9_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $8 = 0, $9 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 if (!$1) $8 = 0; else $8 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE8allocateEm($3, $1) | 0;
 HEAP32[$0 >> 2] = $8;
 $9 = $8 + ($2 << 4) | 0;
 HEAP32[$0 + 8 >> 2] = $9;
 HEAP32[$0 + 4 >> 2] = $9;
 HEAP32[$4 >> 2] = $8 + ($1 << 4);
 return;
}

function __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -24 | 0;
  HEAP32[$3 >> 2] = $6;
  __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($6);
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE10deallocateEPS2_m(HEAP32[$0 + 16 >> 2] | 0, $7, ((HEAP32[$0 + 12 >> 2] | 0) - $7 | 0) / 24 | 0);
 return;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i$in = 0, $4 = 0;
 if ((__ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv($0) | 0) >>> 0 < $1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 $4 = $0 + 128 | 0;
 if ($1 >>> 0 < 29 & (HEAP8[$4 >> 0] | 0) == 0) {
  HEAP8[$4 >> 0] = 1;
  $$0$i$i$in = $0 + 16 | 0;
 } else $$0$i$i$in = __Znwm($1 << 2) | 0;
 HEAP32[$0 + 4 >> 2] = $$0$i$i$in;
 HEAP32[$0 >> 2] = $$0$i$i$in;
 HEAP32[$0 + 8 >> 2] = $$0$i$i$in + ($1 << 2);
 return;
}

function __ZN6vision9MaxIndex8IfEEiPKT_($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0, $$5 = 0;
 $$0 = +HEAPF32[$0 + 4 >> 2] > +HEAPF32[$0 >> 2] & 1;
 $$1 = +HEAPF32[$0 + 8 >> 2] > +HEAPF32[$0 + ($$0 << 2) >> 2] ? 2 : $$0;
 $$2 = +HEAPF32[$0 + 12 >> 2] > +HEAPF32[$0 + ($$1 << 2) >> 2] ? 3 : $$1;
 $$3 = +HEAPF32[$0 + 16 >> 2] > +HEAPF32[$0 + ($$2 << 2) >> 2] ? 4 : $$2;
 $$4 = +HEAPF32[$0 + 20 >> 2] > +HEAPF32[$0 + ($$3 << 2) >> 2] ? 5 : $$3;
 $$5 = +HEAPF32[$0 + 24 >> 2] > +HEAPF32[$0 + ($$4 << 2) >> 2] ? 6 : $$4;
 return (+HEAPF32[$0 + 28 >> 2] > +HEAPF32[$0 + ($$5 << 2) >> 2] ? 7 : $$5) | 0;
}

function _strcmp($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $2 = 0, $3 = 0, $8 = 0, $9 = 0;
 $2 = HEAP8[$0 >> 0] | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 if ($2 << 24 >> 24 == 0 ? 1 : $2 << 24 >> 24 != $3 << 24 >> 24) {
  $$lcssa = $3;
  $$lcssa8 = $2;
 } else {
  $$011 = $1;
  $$0710 = $0;
  do {
   $$0710 = $$0710 + 1 | 0;
   $$011 = $$011 + 1 | 0;
   $8 = HEAP8[$$0710 >> 0] | 0;
   $9 = HEAP8[$$011 >> 0] | 0;
  } while (!($8 << 24 >> 24 == 0 ? 1 : $8 << 24 >> 24 != $9 << 24 >> 24));
  $$lcssa = $9;
  $$lcssa8 = $8;
 }
 return ($$lcssa8 & 255) - ($$lcssa & 255) | 0;
}

function _jinit_marker_reader($0) {
 $0 = $0 | 0;
 var $$0 = 0, $10 = 0, $11 = 0, $4 = 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 0, 172) | 0;
 HEAP32[$0 + 440 >> 2] = $4;
 HEAP32[$4 >> 2] = 116;
 HEAP32[$4 + 4 >> 2] = 66;
 HEAP32[$4 + 8 >> 2] = 67;
 HEAP32[$4 + 28 >> 2] = 68;
 HEAP32[$4 + 96 >> 2] = 0;
 $10 = $4 + 32 | 0;
 $11 = $4 + 100 | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 16) break;
  HEAP32[$10 + ($$0 << 2) >> 2] = 68;
  HEAP32[$11 + ($$0 << 2) >> 2] = 0;
  $$0 = $$0 + 1 | 0;
 }
 HEAP32[$10 >> 2] = 69;
 HEAP32[$4 + 88 >> 2] = 69;
 _reset_marker_reader($0);
 return;
}

function __ZNSt3__29__num_getIwE17__stage2_int_prepERNS_8ios_baseERw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 __ZNKSt3__28ios_base6getlocEv($3, $1);
 $4 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57924) | 0;
 $8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$4 >> 2] | 0) + 16 >> 2] & 127]($4) | 0;
 HEAP32[$2 >> 2] = $8;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 63]($0, $4);
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZNSt3__29__num_getIcE17__stage2_int_prepERNS_8ios_baseERc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 __ZNKSt3__28ios_base6getlocEv($3, $1);
 $4 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57900) | 0;
 $8 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$4 >> 2] | 0) + 16 >> 2] & 127]($4) | 0;
 HEAP8[$2 >> 0] = $8;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 63]($0, $4);
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;
 return;
}

function __ZN6vision14SampleReceptorEPKNS_25GaussianScaleSpacePyramidEffii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $10 = 0.0, $5 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $5 = sp + 4 | 0;
 $6 = sp;
 $7 = __ZNK6vision25GaussianScaleSpacePyramid3getEmm($0, $3, $4) | 0;
 __ZN6vision25bilinear_downsample_pointERfS0_ffi($5, $6, $1, $2, $3);
 $10 = +__ZN6vision14SampleReceptorERKNS_5ImageEff($7, +HEAPF32[$5 >> 2], +HEAPF32[$6 >> 2]);
 STACKTOP = sp;
 return +$10;
}

function __ZNK6vision20VisualDatabaseFacade21getQueryFeaturePointsEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE13queryKeyframeEv($1, HEAP32[HEAP32[$0 >> 2] >> 2] | 0);
 $6 = __ZN6vision18BinaryFeatureStore6pointsEv(__ZN6vision8KeyframeILi96EE5storeEv(HEAP32[$1 >> 2] | 0) | 0) | 0;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($1);
 STACKTOP = sp;
 return $6 | 0;
}

function _ar2FreeImageSet($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$012 = 0, $2 = 0, $5 = 0, $8 = 0;
 if (!$0) $$012 = -1; else {
  $2 = HEAP32[$0 >> 2] | 0;
  if (!$2) $$012 = -1; else {
   $$0 = 0;
   $5 = $2;
   while (1) {
    $8 = HEAP32[$5 >> 2] | 0;
    if (($$0 | 0) >= (HEAP32[$5 + 4 >> 2] | 0)) break;
    _free(HEAP32[HEAP32[$8 + ($$0 << 2) >> 2] >> 2] | 0);
    _free(HEAP32[(HEAP32[HEAP32[$0 >> 2] >> 2] | 0) + ($$0 << 2) >> 2] | 0);
    $$0 = $$0 + 1 | 0;
    $5 = HEAP32[$0 >> 2] | 0;
   }
   _free($8);
   _free(HEAP32[$0 >> 2] | 0);
   HEAP32[$0 >> 2] = 0;
   $$012 = 0;
  }
 }
 return $$012 | 0;
}

function ___stdout_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $14 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $vararg_buffer = sp;
 HEAP32[$0 + 36 >> 2] = 2;
 if (!(HEAP32[$0 >> 2] & 64)) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$0 + 60 >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = 21523;
  HEAP32[$vararg_buffer + 8 >> 2] = sp + 16;
  if (___syscall54(54, $vararg_buffer | 0) | 0) HEAP8[$0 + 75 >> 0] = -1;
 }
 $14 = ___stdio_write($0, $1, $2) | 0;
 STACKTOP = sp;
 return $14 | 0;
}

function __ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $15 = 0, $2 = 0, $3 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 58196) | 0;
 $3 = $0 + 36 | 0;
 HEAP32[$3 >> 2] = $2;
 $7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 127]($2) | 0;
 $8 = $0 + 44 | 0;
 HEAP32[$8 >> 2] = $7;
 $9 = HEAP32[$3 >> 2] | 0;
 $15 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] & 127]($9) | 0) & 1;
 HEAP8[$0 + 53 >> 0] = $15;
 if ((HEAP32[$8 >> 2] | 0) > 8) __ZNSt3__221__throw_runtime_errorEPKc(46606); else return;
}

function __ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $15 = 0, $2 = 0, $3 = 0, $7 = 0, $8 = 0, $9 = 0;
 $2 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 58188) | 0;
 $3 = $0 + 36 | 0;
 HEAP32[$3 >> 2] = $2;
 $7 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$2 >> 2] | 0) + 24 >> 2] & 127]($2) | 0;
 $8 = $0 + 44 | 0;
 HEAP32[$8 >> 2] = $7;
 $9 = HEAP32[$3 >> 2] | 0;
 $15 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$9 >> 2] | 0) + 28 >> 2] & 127]($9) | 0) & 1;
 HEAP8[$0 + 53 >> 0] = $15;
 if ((HEAP32[$8 >> 2] | 0) > 8) __ZNSt3__221__throw_runtime_errorEPKc(46606); else return;
}

function __ZN6vision21HoughSimilarityVotingC2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $4 = 0, dest = 0, stop = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP8[$0 + 16 >> 0] = 1;
 $3 = $0 + 108 | 0;
 dest = $0 + 20 | 0;
 stop = dest + 88 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$3 >> 2] = 1065353216;
 $4 = $0 + 112 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$4 + 12 >> 2] = 0;
 HEAP32[$4 + 16 >> 2] = 0;
 HEAP32[$4 + 20 >> 2] = 0;
 return;
}

function __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvPT_PKS1_S4_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0.0, $15 = 0.0, $5 = 0.0, $9 = 0;
 $5 = +HEAPF32[$2 >> 2];
 $9 = $2 + 4 | 0;
 $10 = +HEAPF32[$9 >> 2];
 $15 = +HEAPF32[$1 + 32 >> 2] + (+HEAPF32[$1 + 24 >> 2] * $5 + +HEAPF32[$1 + 28 >> 2] * $10);
 HEAPF32[$0 >> 2] = (+HEAPF32[$1 + 8 >> 2] + ($5 * +HEAPF32[$1 >> 2] + $10 * +HEAPF32[$1 + 4 >> 2])) / $15;
 HEAPF32[$0 + 4 >> 2] = (+HEAPF32[$1 + 20 >> 2] + (+HEAPF32[$1 + 12 >> 2] * +HEAPF32[$2 >> 2] + +HEAPF32[$1 + 16 >> 2] * +HEAPF32[$9 >> 2])) / $15;
 return;
}

function __ZN6vision19QuadrilateralConvexIfEEbPKT_S3_S3_S3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $12 = 0, $16 = 0, $18 = 0, $5 = 0, $8 = 0;
 $5 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($0, $1, $2) > 0.0;
 $8 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($1, $2, $3) > 0.0;
 $12 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($2, $3, $0) > 0.0;
 $16 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($3, $0, $1) > 0.0;
 $18 = ($8 ? 1 : -1) + ($5 ? 1 : -1) + ($12 ? 1 : -1) + ($16 ? 1 : -1) | 0;
 return ((($18 | 0) > -1 ? $18 : 0 - $18 | 0) | 0) == 4 | 0;
}

function __ZN6vision18VisualDatabaseImplC2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 1065353216;
 $2 = __Znwm(840) | 0;
 __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEEC2Ev($2);
 $3 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $2;
 if ($3 | 0) {
  __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEED2Ev($3);
  __ZdlPv($3);
 }
 return;
}

function __ZN6vision16RobustHomographyIfE4findEPfPKfS4_iS4_i($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 var $7 = 0;
 $7 = $0 + 12 | 0;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm($7, $4);
 return __ZN6vision26PreemptiveRobustHomographyIfEEbPT_PKS1_S4_iS4_iRNSt3__26vectorIS1_NS5_9allocatorIS1_EEEERNS6_IiNS7_IiEEEERNS6_INS5_4pairIS1_iEENS7_ISF_EEEES1_iii($1, $2, $3, $4, $5, $6, $0, $7, $0 + 24 | 0, +HEAPF32[$0 + 36 >> 2], HEAP32[$0 + 40 >> 2] | 0, HEAP32[$0 + 44 >> 2] | 0, HEAP32[$0 + 48 >> 2] | 0) | 0;
}

function __ZN6vision25DoGScaleInvariantDetectorD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($0 + 144 | 0);
 __ZN6vision21OrientationAssignmentD2Ev($0 + 92 | 0);
 __ZNSt3__213__vector_baseIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEED2Ev($0 + 72 | 0);
 __ZNSt3__213__vector_baseIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEED2Ev($0 + 60 | 0);
 __ZN6vision10DoGPyramidD2Ev($0 + 32 | 0);
 __ZNSt3__213__vector_baseINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEED2Ev($0 + 16 | 0);
 return;
}

function ___fmodeflags($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$2 = 0, $$4 = 0, $2 = 0, $3 = 0, $6 = 0, $9 = 0, $spec$select = 0, $spec$select13 = 0;
 $2 = (_strchr($0, 43) | 0) == 0;
 $3 = HEAP8[$0 >> 0] | 0;
 $$0 = $2 ? $3 << 24 >> 24 != 114 & 1 : 2;
 $6 = (_strchr($0, 120) | 0) == 0;
 $spec$select = $6 ? $$0 : $$0 | 128;
 $9 = (_strchr($0, 101) | 0) == 0;
 $$2 = $9 ? $spec$select : $spec$select | 524288;
 $spec$select13 = $3 << 24 >> 24 == 114 ? $$2 : $$2 | 64;
 $$4 = $3 << 24 >> 24 == 119 ? $spec$select13 | 512 : $spec$select13;
 return ($3 << 24 >> 24 == 97 ? $$4 | 1024 : $$4) | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0, $7 = 0;
 if ((__ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($0) | 0) >>> 0 < $1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 if ($1 >>> 0 > 1073741823) {
  $5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($5, 40521);
  HEAP32[$5 >> 2] = 17440;
  ___cxa_throw($5 | 0, 13288, 107);
 } else {
  $7 = __Znwm($1 << 2) | 0;
  HEAP32[$0 + 4 >> 2] = $7;
  HEAP32[$0 >> 2] = $7;
  HEAP32[$0 + 8 >> 2] = $7 + ($1 << 2);
  return;
 }
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0, $7 = 0;
 if ((__ZNKSt3__26vectorIfNS_9allocatorIfEEE8max_sizeEv($0) | 0) >>> 0 < $1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0);
 if ($1 >>> 0 > 1073741823) {
  $5 = ___cxa_allocate_exception(8) | 0;
  __ZNSt11logic_errorC2EPKc($5, 40521);
  HEAP32[$5 >> 2] = 17440;
  ___cxa_throw($5 | 0, 13288, 107);
 } else {
  $7 = __Znwm($1 << 2) | 0;
  HEAP32[$0 + 4 >> 2] = $7;
  HEAP32[$0 >> 2] = $7;
  HEAP32[$0 + 8 >> 2] = $7 + ($1 << 2);
  return;
 }
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $10 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $5) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4); else {
  $10 = HEAP32[$0 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$10 >> 2] | 0) + 20 >> 2] & 7]($10, $1, $2, $3, $4, $5);
 }
 return;
}

function __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 HEAPF32[$0 >> 2] = +HEAPF32[$1 >> 2] * $2;
 HEAPF32[$0 + 4 >> 2] = +HEAPF32[$1 + 4 >> 2] * $2;
 HEAPF32[$0 + 8 >> 2] = +HEAPF32[$1 + 8 >> 2] * $2;
 HEAPF32[$0 + 12 >> 2] = +HEAPF32[$1 + 12 >> 2] * $2;
 HEAPF32[$0 + 16 >> 2] = +HEAPF32[$1 + 16 >> 2] * $2;
 HEAPF32[$0 + 20 >> 2] = +HEAPF32[$1 + 20 >> 2] * $2;
 HEAPF32[$0 + 24 >> 2] = +HEAPF32[$1 + 24 >> 2] * $2;
 HEAPF32[$0 + 28 >> 2] = +HEAPF32[$1 + 28 >> 2] * $2;
 HEAPF32[$0 + 32 >> 2] = +HEAPF32[$1 + 32 >> 2] * $2;
 return;
}

function __ZN10emscripten8internal7InvokerIiJiEE6invokeEPFiiEi($fn, $args) {
 $fn = $fn | 0;
 $args = $args | 0;
 var $call = 0, $call1 = 0, $call2 = 0, $ref$tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $ref$tmp = sp;
 $call = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args) | 0;
 $call1 = FUNCTION_TABLE_ii[$fn & 127]($call) | 0;
 HEAP32[$ref$tmp >> 2] = $call1;
 $call2 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi($ref$tmp) | 0;
 STACKTOP = sp;
 return $call2 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS2_PvEEEE($0, HEAP32[$0 + 8 >> 2] | 0);
 $3 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = 0;
 if ($3 | 0) __ZdlPv($3);
 return;
}

function __ZN6vision40Homography4PointsInhomogeneousConstraintIfEEvPT_PKS1_S4_S4_S4_S4_S4_S4_S4_($0, $1, $2, $3, $4, $5, $6, $7, $8) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 $8 = $8 | 0;
 __ZN6vision27AddHomographyPointContraintIfEEvPT_PKS1_S4_($0, $1, $5);
 __ZN6vision27AddHomographyPointContraintIfEEvPT_PKS1_S4_($0 + 72 | 0, $2, $6);
 __ZN6vision27AddHomographyPointContraintIfEEvPT_PKS1_S4_($0 + 144 | 0, $3, $7);
 __ZN6vision27AddHomographyPointContraintIfEEvPT_PKS1_S4_($0 + 216 | 0, $4, $8);
 return;
}

function ___shlim($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $11 = 0, $12 = 0, $14 = 0, $16 = 0, $4 = 0, $9 = 0;
 $4 = $0 + 112 | 0;
 HEAP32[$4 >> 2] = $1;
 HEAP32[$4 + 4 >> 2] = $2;
 $9 = HEAP32[$0 + 8 >> 2] | 0;
 $11 = HEAP32[$0 + 4 >> 2] | 0;
 $12 = $9 - $11 | 0;
 $14 = (($12 | 0) < 0) << 31 >> 31;
 $16 = $0 + 120 | 0;
 HEAP32[$16 >> 2] = $12;
 HEAP32[$16 + 4 >> 2] = $14;
 if ((($1 | 0) != 0 | ($2 | 0) != 0) & (($14 | 0) > ($2 | 0) | ($14 | 0) == ($2 | 0) & $12 >>> 0 > $1 >>> 0)) HEAP32[$0 + 104 >> 2] = $11 + $1; else HEAP32[$0 + 104 >> 2] = $9;
 return;
}

function __ZN6vision20VisualDatabaseFacade5queryEPhmm($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(32);
 $4 = sp;
 __ZN6vision5ImageC2EPhNS_9ImageTypeEmmim($4, $1, 1, $2, $3, $2, 1);
 $7 = __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE5queryERKNS_5ImageE(HEAP32[HEAP32[$0 >> 2] >> 2] | 0, $4) | 0;
 __ZN6vision5ImageD2Ev($4);
 STACKTOP = sp;
 return $7 | 0;
}

function __ZN10emscripten8internal7InvokerIdJiEE6invokeEPFdiEi($fn, $args) {
 $fn = $fn | 0;
 $args = $args | 0;
 var $call = 0, $call1 = 0.0, $call2 = 0.0, $ref$tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $ref$tmp = sp;
 $call = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args) | 0;
 $call1 = +FUNCTION_TABLE_di[$fn & 3]($call);
 HEAPF64[$ref$tmp >> 3] = $call1;
 $call2 = +__ZN10emscripten8internal11BindingTypeIdE10toWireTypeERKd($ref$tmp);
 STACKTOP = sp;
 return +$call2;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE12__move_rangeEPiS4_S4_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $16 = 0, $18 = 0, $4 = 0, $5 = 0, $8 = 0, $9 = 0;
 $4 = $0 + 4 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 $8 = $5 - $3 | 0;
 $9 = $8 >> 2;
 $$0 = $1 + ($9 << 2) | 0;
 $16 = $5;
 while (1) {
  if ($$0 >>> 0 >= $2 >>> 0) break;
  HEAP32[$16 >> 2] = HEAP32[$$0 >> 2];
  $18 = $16 + 4 | 0;
  HEAP32[$4 >> 2] = $18;
  $$0 = $$0 + 4 | 0;
  $16 = $18;
 }
 if ($8 | 0) _memmove($5 + (0 - $9 << 2) | 0, $1 | 0, $8 | 0) | 0;
 return;
}

function _wmemmove($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$01416 = 0, $$018 = 0, $$117 = 0, $$in = 0;
 if ($0 - $1 >> 2 >>> 0 < $2 >>> 0) {
  $$in = $2;
  do {
   $$in = $$in + -1 | 0;
   HEAP32[$0 + ($$in << 2) >> 2] = HEAP32[$1 + ($$in << 2) >> 2];
  } while (($$in | 0) != 0);
 } else if ($2 | 0) {
  $$01416 = $1;
  $$018 = $0;
  $$117 = $2;
  while (1) {
   $$117 = $$117 + -1 | 0;
   HEAP32[$$018 >> 2] = HEAP32[$$01416 >> 2];
   if (!$$117) break; else {
    $$01416 = $$01416 + 4 | 0;
    $$018 = $$018 + 4 | 0;
   }
  }
 }
 return $0 | 0;
}

function _deleteHandle($arc) {
 $arc = $arc | 0;
 var $0 = 0, $ar3DHandle = 0, $arhandle = 0, $paramLT = 0;
 $arhandle = $arc + 216 | 0;
 $0 = HEAP32[$arhandle >> 2] | 0;
 if ($0 | 0) {
  _arPattDetach($0) | 0;
  _arDeleteHandle(HEAP32[$arhandle >> 2] | 0) | 0;
  HEAP32[$arhandle >> 2] = 0;
 }
 $ar3DHandle = $arc + 228 | 0;
 if (HEAP32[$ar3DHandle >> 2] | 0) {
  _ar3DDeleteHandle($ar3DHandle) | 0;
  HEAP32[$ar3DHandle >> 2] = 0;
 }
 $paramLT = $arc + 192 | 0;
 if (HEAP32[$paramLT >> 2] | 0) {
  _arParamLTFree($paramLT) | 0;
  HEAP32[$paramLT >> 2] = 0;
 }
 return;
}

function _memcmp($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $14 = 0, $4 = 0, $5 = 0;
 L1 : do if (!$2) $14 = 0; else {
  $$01318 = $0;
  $$01417 = $2;
  $$019 = $1;
  while (1) {
   $4 = HEAP8[$$01318 >> 0] | 0;
   $5 = HEAP8[$$019 >> 0] | 0;
   if ($4 << 24 >> 24 != $5 << 24 >> 24) break;
   $$01417 = $$01417 + -1 | 0;
   if (!$$01417) {
    $14 = 0;
    break L1;
   } else {
    $$01318 = $$01318 + 1 | 0;
    $$019 = $$019 + 1 | 0;
   }
  }
  $14 = ($4 & 255) - ($5 & 255) | 0;
 } while (0);
 return $14 | 0;
}

function _fwrite($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $11 = 0, $12 = 0, $15 = 0, $4 = 0, $phitmp = 0, $spec$select = 0;
 $4 = Math_imul($2, $1) | 0;
 $spec$select = ($1 | 0) == 0 ? 0 : $2;
 if ((HEAP32[$3 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($3) | 0) == 0;
  $11 = ___fwritex($0, $4, $3) | 0;
  if ($phitmp) $12 = $11; else {
   ___unlockfile($3);
   $12 = $11;
  }
 } else $12 = ___fwritex($0, $4, $3) | 0;
 if (($12 | 0) == ($4 | 0)) $15 = $spec$select; else $15 = ($12 >>> 0) / ($1 >>> 0) | 0;
 return $15 | 0;
}

function __ZNSt3__214__split_bufferIN10__cxxabiv112_GLOBAL__N_111string_pairERNS2_11short_allocIS3_Lm4096EEEEC2EmmS6_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $8 = 0, $9 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 if (!$1) $8 = 0; else $8 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE8allocateEm($3, $1) | 0;
 HEAP32[$0 >> 2] = $8;
 $9 = $8 + ($2 * 24 | 0) | 0;
 HEAP32[$0 + 8 >> 2] = $9;
 HEAP32[$0 + 4 >> 2] = $9;
 HEAP32[$4 >> 2] = $8 + ($1 * 24 | 0);
 return;
}

function _find_biggest_color_pop($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$017 = 0, $$019 = 0, $$020 = 0, $$1 = 0, $$118 = 0, $4 = 0, $8 = 0;
 $$0 = 0;
 $$017 = 0;
 $$019 = 0;
 $$020 = $0;
 while (1) {
  if (($$019 | 0) >= ($1 | 0)) break;
  $4 = HEAP32[$$020 + 28 >> 2] | 0;
  if (($4 | 0) > ($$017 | 0)) {
   $8 = (HEAP32[$$020 + 24 >> 2] | 0) > 0;
   $$1 = $8 ? $$020 : $$0;
   $$118 = $8 ? $4 : $$017;
  } else {
   $$1 = $$0;
   $$118 = $$017;
  }
  $$0 = $$1;
  $$017 = $$118;
  $$019 = $$019 + 1 | 0;
  $$020 = $$020 + 32 | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_mmRKS6_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $4 = 0, $5 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $4 = HEAP8[$1 + 11 >> 0] | 0;
 $5 = $4 << 24 >> 24 < 0;
 $10 = $5 ? HEAP32[$1 + 4 >> 2] | 0 : $4 & 255;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $5 ? HEAP32[$1 >> 2] | 0 : $1, $10 >>> 0 < $2 >>> 0 ? $10 : $2);
 return;
}

function _store_int_669($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $7 = 0;
 L1 : do if ($0 | 0) switch ($1 | 0) {
 case -2:
  {
   HEAP8[$0 >> 0] = $2;
   break L1;
   break;
  }
 case -1:
  {
   HEAP16[$0 >> 1] = $2;
   break L1;
   break;
  }
 case 0:
  {
   HEAP32[$0 >> 2] = $2;
   break L1;
   break;
  }
 case 1:
  {
   HEAP32[$0 >> 2] = $2;
   break L1;
   break;
  }
 case 3:
  {
   $7 = $0;
   HEAP32[$7 >> 2] = $2;
   HEAP32[$7 + 4 >> 2] = $3;
   break L1;
   break;
  }
 default:
  break L1;
 } while (0);
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEED2Ev($0) {
 $0 = $0 | 0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -4 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 do if ($7 | 0) {
  $10 = HEAP32[$0 + 16 >> 2] | 0;
  if (($7 | 0) == ($10 | 0)) {
   HEAP8[$10 + 112 >> 0] = 0;
   break;
  } else {
   __ZdlPv($7);
   break;
  }
 } while (0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $$0$i$i1 = 0, $3 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 $3 = $0 + 12 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 $$0$i$i1 = 0;
 while (1) {
  if (($$0$i$i1 | 0) == 3) break;
  HEAP32[$3 + ($$0$i$i1 << 2) >> 2] = 0;
  $$0$i$i1 = $$0$i$i1 + 1 | 0;
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS9_PvEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $3 = 0;
 $$0 = $1;
 while (1) {
  if (!$$0) break;
  $3 = HEAP32[$$0 >> 2] | 0;
  __ZNSt3__24pairIKiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEED2Ev($$0 + 8 | 0);
  __ZdlPv($$0);
  $$0 = $3;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm18EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, 17);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm15EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, 14);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm14EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, 13);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm13EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, 12);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm12EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, 11);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm11EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, 10);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, HEAP32[$1 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0); else {
  HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm10EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, 9);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm9EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, 8);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm6EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, 5);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm5EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, 4);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm4EEERAT__Kc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, $1, 3);
 $2 = $0 + 12 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$2 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEC2EmRKS3_RKS5_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0;
 HEAP32[$0 >> 2] = 0;
 $3 = $0 + 4 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = HEAP32[$2 >> 2];
 __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8allocateEm($0);
 __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_(HEAP32[$3 >> 2] | 0, $1);
 HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 24;
 return;
}

function __ZN6vision4NodeILi96EED2Ev($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $11 = 0, $2 = 0, $4 = 0;
 $1 = $0 + 104 | 0;
 $2 = $0 + 108 | 0;
 $$0 = 0;
 while (1) {
  $4 = HEAP32[$1 >> 2] | 0;
  if ($$0 >>> 0 >= (HEAP32[$2 >> 2] | 0) - $4 >> 2 >>> 0) break;
  $11 = HEAP32[$4 + ($$0 << 2) >> 2] | 0;
  if ($11 | 0) {
   __ZN6vision4NodeILi96EED2Ev($11);
   __ZdlPv($11);
  }
  $$0 = $$0 + 1 | 0;
 }
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($0 + 116 | 0);
 __ZNSt3__213__vector_baseIPN6vision4NodeILi96EEENS_9allocatorIS4_EEED2Ev($1);
 return;
}

function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endINS_11__wrap_iterIPKiEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESB_SB_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0;
 $3 = HEAP32[$2 >> 2] | 0;
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($5 | 0) == ($3 | 0)) break;
  $7 = HEAP32[$4 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$5 >> 2];
  HEAP32[$4 >> 2] = $7 + 4;
  $10 = $5 + 4 | 0;
  HEAP32[$1 >> 2] = $10;
  $5 = $10;
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS7_PvEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $3 = 0;
 $$0 = $1;
 while (1) {
  if (!$$0) break;
  $3 = HEAP32[$$0 >> 2] | 0;
  __ZNSt3__24pairIKiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEED2Ev($$0 + 8 | 0);
  __ZdlPv($$0);
  $$0 = $3;
 }
 return;
}

function _emit_message($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $13 = 0, $2 = 0, $4 = 0, $5 = 0, label = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) < 0) {
  $4 = $2 + 108 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  if (!$5) label = 4; else if ((HEAP32[$2 + 104 >> 2] | 0) > 2) label = 4; else $13 = $5;
  if ((label | 0) == 4) {
   FUNCTION_TABLE_vi[HEAP32[$2 + 8 >> 2] & 255]($0);
   $13 = HEAP32[$4 >> 2] | 0;
  }
  HEAP32[$4 >> 2] = $13 + 1;
 } else if ((HEAP32[$2 + 104 >> 2] | 0) >= ($1 | 0)) FUNCTION_TABLE_vi[HEAP32[$2 + 8 >> 2] & 255]($0);
 return;
}

function _fmt_x($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$05$lcssa = 0, $$056 = 0, $14 = 0, $15 = 0, $8 = 0;
 if (($0 | 0) == 0 & ($1 | 0) == 0) $$05$lcssa = $2; else {
  $$056 = $2;
  $15 = $1;
  $8 = $0;
  while (1) {
   $14 = $$056 + -1 | 0;
   HEAP8[$14 >> 0] = HEAPU8[4448 + ($8 & 15) >> 0] | 0 | $3;
   $8 = _bitshift64Lshr($8 | 0, $15 | 0, 4) | 0;
   $15 = getTempRet0() | 0;
   if (($8 | 0) == 0 & ($15 | 0) == 0) {
    $$05$lcssa = $14;
    break;
   } else $$056 = $14;
  }
 }
 return $$05$lcssa | 0;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE4swapERS6_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$1 >> 2] = $2;
 $4 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $6 = HEAP32[$4 >> 2] | 0;
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $6;
 $8 = $0 + 8 | 0;
 $9 = $1 + 8 | 0;
 $10 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
 HEAP32[$9 >> 2] = $10;
 return;
}

function _arImageProcLumaHist($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$013 = 0, $12 = 0, $8 = 0;
 L1 : do if (($0 | 0) != 0 & ($1 | 0) != 0) {
  _memset($0 + 12 | 0, 0, 1024) | 0;
  $8 = $1 + (Math_imul(HEAP32[$0 + 8 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0) | 0) | 0;
  $$0 = $1;
  while (1) {
   if ($$0 >>> 0 >= $8 >>> 0) {
    $$013 = 0;
    break L1;
   }
   $12 = $0 + 12 + ((HEAPU8[$$0 >> 0] | 0) << 2) | 0;
   HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 1;
   $$0 = $$0 + 1 | 0;
  }
 } else $$013 = -1; while (0);
 return $$013 | 0;
}

function __ZNSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8allocateEm($0) {
 $0 = $0 | 0;
 var $4 = 0;
 if (!(__ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv($0) | 0)) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $4 = __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE8allocateEm($0 + 12 | 0, 1) | 0;
  HEAP32[$0 + 4 >> 2] = $4;
  HEAP32[$0 >> 2] = $4;
  HEAP32[$0 + 8 >> 2] = $4 + 24;
  return;
 }
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $14 = 0, $7 = 0, $8 = 0;
 $7 = HEAP32[$0 + 4 >> 2] | 0;
 $8 = $7 >> 8;
 if (!($7 & 1)) $$0 = $8; else $$0 = HEAP32[(HEAP32[$3 >> 2] | 0) + $8 >> 2] | 0;
 $14 = HEAP32[$0 >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$14 >> 2] | 0) + 20 >> 2] & 7]($14, $1, $2, $3 + $$0 | 0, ($7 & 2 | 0) == 0 ? 2 : $4, $5);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm22EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, 51022, 21);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm19EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, 51243, 18);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm16EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, 50416, 15);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN6vision15get_pretty_timeEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(272);
 $1 = sp + 256 | 0;
 $2 = sp;
 _time($1 | 0) | 0;
 _strftime($2 | 0, 256, 32719, _localtime($1 | 0) | 0) | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($0, $2, __ZNSt3__211char_traitsIcE6lengthEPKc($2) | 0);
 STACKTOP = sp;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm8EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, 50823, 7);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm7EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, 51236, 6);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ILm3EEERAT__Kc($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6__initEPKcm($0, 51047, 2);
 $1 = $0 + 12 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$1 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0;
 $y_sroa_0_0_extract_trunc = $b$0;
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
 $1$1 = getTempRet0() | 0;
 return (setTempRet0((Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0 | 0), $1$0 | 0 | 0) | 0;
}

function __ZNSt3__211__call_onceERVmPvPFvS2_E($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _pthread_mutex_lock(58236) | 0;
 while (1) {
  if ((HEAP32[$0 >> 2] | 0) != 1) break;
  _pthread_cond_wait(58264, 58236) | 0;
 }
 if (!(HEAP32[$0 >> 2] | 0)) {
  HEAP32[$0 >> 2] = 1;
  _pthread_mutex_unlock(58236) | 0;
  FUNCTION_TABLE_vi[$2 & 255]($1);
  _pthread_mutex_lock(58236) | 0;
  HEAP32[$0 >> 2] = -1;
  _pthread_mutex_unlock(58236) | 0;
  _pthread_cond_broadcast(58264) | 0;
 } else _pthread_mutex_unlock(58236) | 0;
 return;
}

function __ZN6vision9MaxIndex7IfEEiPKT_($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0, $$4 = 0;
 $$0 = +HEAPF32[$0 + 4 >> 2] > +HEAPF32[$0 >> 2] & 1;
 $$1 = +HEAPF32[$0 + 8 >> 2] > +HEAPF32[$0 + ($$0 << 2) >> 2] ? 2 : $$0;
 $$2 = +HEAPF32[$0 + 12 >> 2] > +HEAPF32[$0 + ($$1 << 2) >> 2] ? 3 : $$1;
 $$3 = +HEAPF32[$0 + 16 >> 2] > +HEAPF32[$0 + ($$2 << 2) >> 2] ? 4 : $$2;
 $$4 = +HEAPF32[$0 + 20 >> 2] > +HEAPF32[$0 + ($$3 << 2) >> 2] ? 5 : $$3;
 return (+HEAPF32[$0 + 24 >> 2] > +HEAPF32[$0 + ($$4 << 2) >> 2] ? 6 : $$4) | 0;
}

function ___string_read($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$027 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $spec$select = 0;
 $3 = $0 + 84 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 $5 = $2 + 256 | 0;
 $6 = _memchr($4, 0, $5) | 0;
 $$027 = ($6 | 0) == 0 ? $5 : $6 - $4 | 0;
 $spec$select = $$027 >>> 0 < $2 >>> 0 ? $$027 : $2;
 _memcpy($1 | 0, $4 | 0, $spec$select | 0) | 0;
 HEAP32[$0 + 4 >> 2] = $4 + $spec$select;
 $14 = $4 + $$027 | 0;
 HEAP32[$0 + 8 >> 2] = $14;
 HEAP32[$3 >> 2] = $14;
 return $spec$select | 0;
}

function _jpeg_open_backing_store($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $6 = 0, dest = 0, stop = 0;
 $3 = _tmpfile() | 0;
 HEAP32[$1 + 12 >> 2] = $3;
 if (!$3) {
  $6 = HEAP32[$0 >> 2] | 0;
  HEAP32[$6 + 20 >> 2] = 63;
  dest = $6 + 24 | 0;
  stop = dest + 80 | 0;
  do {
   HEAP8[dest >> 0] = 0;
   dest = dest + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 }
 HEAP32[$1 >> 2] = 4;
 HEAP32[$1 + 4 >> 2] = 5;
 HEAP32[$1 + 8 >> 2] = 41;
 return;
}

function __ZNKSt3__29__num_getIwE12__do_widen_pIwEEPKT_RNS_8ios_baseEPS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 __ZNKSt3__28ios_base6getlocEv($3, $1);
 $4 = __ZNKSt3__26locale9use_facetERNS0_2idE($3, 57916) | 0;
 FUNCTION_TABLE_iiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 48 >> 2] & 15]($4, 10736, 10762, $2) | 0;
 __ZNSt3__26localeD2Ev($3);
 STACKTOP = sp;
 return $2 | 0;
}

function __ZNSt3__213__vector_baseINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEENS4_IS8_EEED2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $3 = 0, $6 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i + -12 | 0;
   __ZNSt3__213__vector_baseINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev($6);
   $$0$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  __ZdlPv(HEAP32[$0 >> 2] | 0);
 }
 return;
}

function __ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$lcssa = 0, $7 = 0;
 $$0 = $2;
 while (1) {
  if (($$0 | 0) == ($3 | 0)) {
   $$0$lcssa = $3;
   break;
  }
  if ((HEAP32[$$0 >> 2] | 0) >>> 0 >= 128) {
   $$0$lcssa = $$0;
   break;
  }
  $7 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
  if (!((HEAP16[$7 + (HEAP32[$$0 >> 2] << 1) >> 1] & $1) << 16 >> 16)) {
   $$0$lcssa = $$0;
   break;
  }
  $$0 = $$0 + 4 | 0;
 }
 return $$0$lcssa | 0;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE10deallocateEv($0) {
 $0 = $0 | 0;
 var $$0$i$i$i = 0, $1 = 0, $3 = 0, $6 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i$i + -20 | 0;
   __ZN6vision12FeaturePointD2Ev($6);
   $$0$i$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  __ZdlPv(HEAP32[$0 >> 2] | 0);
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
 }
 return;
}

function __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0, dest = 0, stop = 0;
 $2 = $0 + 8 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  dest = $3;
  stop = dest + 36 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  $3 = (HEAP32[$2 >> 2] | 0) + 36 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZN6vision11DotProduct9IfEET_PKS1_S3_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return +(+HEAPF32[$0 >> 2] * +HEAPF32[$1 >> 2] + +HEAPF32[$0 + 4 >> 2] * +HEAPF32[$1 + 4 >> 2] + +HEAPF32[$0 + 8 >> 2] * +HEAPF32[$1 + 8 >> 2] + +HEAPF32[$0 + 12 >> 2] * +HEAPF32[$1 + 12 >> 2] + +HEAPF32[$0 + 16 >> 2] * +HEAPF32[$1 + 16 >> 2] + +HEAPF32[$0 + 20 >> 2] * +HEAPF32[$1 + 20 >> 2] + +HEAPF32[$0 + 24 >> 2] * +HEAPF32[$1 + 24 >> 2] + +HEAPF32[$0 + 28 >> 2] * +HEAPF32[$1 + 28 >> 2] + +HEAPF32[$0 + 32 >> 2] * +HEAPF32[$1 + 32 >> 2]);
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $8 = 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $1, $2, $3); else {
  $8 = HEAP32[$0 + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 31]($8, $1, $2, $3);
 }
 return;
}

function _vasprintf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
 $4 = _vsnprintf(0, 0, $1, $3) | 0;
 if (($4 | 0) < 0) $$0 = -1; else {
  $6 = $4 + 1 | 0;
  $7 = _malloc($6) | 0;
  HEAP32[$0 >> 2] = $7;
  if (!$7) $$0 = -1; else $$0 = _vsnprintf($7, $6, $1, $2) | 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $13 = 0, $6 = 0, $7 = 0;
 $6 = HEAP32[$0 + 4 >> 2] | 0;
 $7 = $6 >> 8;
 if (!($6 & 1)) $$0 = $7; else $$0 = HEAP32[(HEAP32[$2 >> 2] | 0) + $7 >> 2] | 0;
 $13 = HEAP32[$0 >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$13 >> 2] | 0) + 24 >> 2] & 31]($13, $1, $2 + $$0 | 0, ($6 & 2 | 0) == 0 ? 2 : $3, $4);
 return;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0, dest = 0, stop = 0;
 $2 = $0 + 4 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  dest = $3;
  stop = dest + 36 | 0;
  do {
   HEAP32[dest >> 2] = 0;
   dest = dest + 4 | 0;
  } while ((dest | 0) < (stop | 0));
  $3 = (HEAP32[$2 >> 2] | 0) + 36 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function ___randname($0) {
 $0 = $0 | 0;
 var $$01112 = 0, $$013 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 ___clock_gettime(0, $1 | 0) | 0;
 $$01112 = 0;
 $$013 = (HEAP32[$1 + 4 >> 2] | 0) * 65537 ^ ($1 >>> 4) + $0;
 while (1) {
  HEAP8[$0 + $$01112 >> 0] = ($$013 & 15) + 65 | $$013 << 1 & 32;
  $$01112 = $$01112 + 1 | 0;
  if (($$01112 | 0) == 6) break; else $$013 = $$013 >>> 5;
 }
 STACKTOP = sp;
 return $0 | 0;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS6_PvEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $3 = 0;
 $$0 = $1;
 while (1) {
  if (!$$0) break;
  $3 = HEAP32[$$0 >> 2] | 0;
  __ZNSt3__24pairIKiNS_6vectorIiNS_9allocatorIiEEEEED2Ev($$0 + 8 | 0);
  __ZdlPv($$0);
  $$0 = $3;
 }
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS4_PvEEEE($this, $__np) {
 $this = $this | 0;
 $__np = $__np | 0;
 var $0 = 0, $__np$addr$0 = 0;
 $__np$addr$0 = $__np;
 while (1) {
  if (!$__np$addr$0) break;
  $0 = HEAP32[$__np$addr$0 >> 2] | 0;
  __ZdlPv($__np$addr$0);
  $__np$addr$0 = $0;
 }
 return;
}

function __ZL14genBWImageFullPhiiPiS0_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 HEAP32[$3 >> 2] = $1;
 HEAP32[$4 >> 2] = $2;
 $5 = Math_imul($2, $1) | 0;
 $6 = _malloc($5) | 0;
 if (!$6) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 } else {
  _memcpy($6 | 0, $0 | 0, $5 | 0) | 0;
  STACKTOP = sp;
  return $6 | 0;
 }
 return 0;
}

function __ZNSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE4swapERS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$1 >> 2] = $2;
 $4 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $6 = HEAP32[$4 >> 2] | 0;
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $6;
 $8 = $0 + 8 | 0;
 $9 = $1 + 8 | 0;
 $10 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
 HEAP32[$9 >> 2] = $10;
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endINS_11__wrap_iterIPKiEEEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $5 = 0, $6 = 0, $7 = 0, $9 = 0;
 $5 = HEAP32[$2 >> 2] | 0;
 $6 = $0 + 4 | 0;
 $7 = HEAP32[$1 >> 2] | 0;
 while (1) {
  if (($7 | 0) == ($5 | 0)) break;
  $9 = HEAP32[$6 >> 2] | 0;
  HEAP32[$9 >> 2] = HEAP32[$7 >> 2];
  HEAP32[$6 >> 2] = $9 + 4;
  $7 = $7 + 4 | 0;
 }
 return;
}

function _arUtilGetDirectoryNameFromPath($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $14 = 0, $7 = 0;
 do if (($0 | 0) != 0 & ($1 | 0) != 0 & ($2 | 0) != 0) {
  $7 = _strrchr($1, 47) | 0;
  if (!$7) {
   HEAP8[$0 >> 0] = 0;
   $$0 = $0;
   break;
  }
  $14 = $7 + (($3 | 0) != 0 & 1) - $1 | 0;
  if (($14 + 1 | 0) >>> 0 > $2 >>> 0) $$0 = 0; else {
   _strncpy($0, $1, $14) | 0;
   HEAP8[$0 + $14 >> 0] = 0;
   $$0 = $0;
  }
 } else $$0 = 0; while (0);
 return $$0 | 0;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $10 = 0, $3 = 0, $4 = 0, $7 = 0, $9 = 0;
 $1 = $0 + 8 | 0;
 $3 = ___uselocale(HEAP32[$1 >> 2] | 0) | 0;
 $4 = _mbtowc(0, 0, 4) | 0;
 if ($3 | 0) ___uselocale($3) | 0;
 if (!$4) {
  $7 = HEAP32[$1 >> 2] | 0;
  if (!$7) $$0 = 1; else {
   $9 = ___uselocale($7) | 0;
   $10 = ___ctype_get_mb_cur_max() | 0;
   if ($9 | 0) ___uselocale($9) | 0;
   return ($10 | 0) == 1 | 0;
  }
 } else $$0 = -1;
 return $$0 | 0;
}

function _write_backing_store($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $15 = 0, $5 = 0, $9 = 0;
 $5 = $1 + 12 | 0;
 if (_fseek(HEAP32[$5 >> 2] | 0, $3, 0) | 0) {
  $9 = HEAP32[$0 >> 2] | 0;
  HEAP32[$9 + 20 >> 2] = 65;
  FUNCTION_TABLE_vi[HEAP32[$9 >> 2] & 255]($0);
 }
 if ((_fwrite($2, 1, $4, HEAP32[$5 >> 2] | 0) | 0) != ($4 | 0)) {
  $15 = HEAP32[$0 >> 2] | 0;
  HEAP32[$15 + 20 >> 2] = 66;
  FUNCTION_TABLE_vi[HEAP32[$15 >> 2] & 255]($0);
 }
 return;
}

function __ZN6vision6Logger5writeENS_19LoggerPriorityLevelERKNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $11 = 0, $3 = 0, $5 = 0;
 $3 = $0 + 4 | 0;
 $$0 = 0;
 while (1) {
  $5 = HEAP32[$0 >> 2] | 0;
  if ($$0 >>> 0 >= (HEAP32[$3 >> 2] | 0) - $5 >> 3 >>> 0) break;
  $11 = HEAP32[$5 + ($$0 << 3) >> 2] | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$11 >> 2] | 0) + 8 >> 2] & 3]($11, $1, $2);
  $$0 = $$0 + 1 | 0;
 }
 return;
}

function _read_backing_store($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $15 = 0, $5 = 0, $9 = 0;
 $5 = $1 + 12 | 0;
 if (_fseek(HEAP32[$5 >> 2] | 0, $3, 0) | 0) {
  $9 = HEAP32[$0 >> 2] | 0;
  HEAP32[$9 + 20 >> 2] = 65;
  FUNCTION_TABLE_vi[HEAP32[$9 >> 2] & 255]($0);
 }
 if ((_fread($2, 1, $4, HEAP32[$5 >> 2] | 0) | 0) != ($4 | 0)) {
  $15 = HEAP32[$0 >> 2] | 0;
  HEAP32[$15 + 20 >> 2] = 64;
  FUNCTION_TABLE_vi[HEAP32[$15 >> 2] & 255]($0);
 }
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -12 | 0;
  HEAP32[$3 >> 2] = $6;
  __ZNSt3__213__vector_baseINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev($6);
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $12 = 0, $5 = 0, $6 = 0;
 $5 = HEAP32[$0 + 4 >> 2] | 0;
 $6 = $5 >> 8;
 if (!($5 & 1)) $$0 = $6; else $$0 = HEAP32[(HEAP32[$2 >> 2] | 0) + $6 >> 2] | 0;
 $12 = HEAP32[$0 >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$12 >> 2] | 0) + 28 >> 2] & 31]($12, $1, $2 + $$0 | 0, ($5 & 2 | 0) == 0 ? 2 : $3);
 return;
}

function __ZNSt3__213__lower_boundIRNS_6__lessIjmEEPKjmEET0_S6_S6_RKT1_T_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$014 = 0, $10 = 0, $11 = 0, $13 = 0, $8 = 0;
 $8 = HEAP32[$2 >> 2] | 0;
 $$0 = $0;
 $$014 = $1 - $0 >> 2;
 while (1) {
  if (!$$014) break;
  $10 = ($$014 | 0) / 2 | 0;
  $11 = $$0 + ($10 << 2) | 0;
  $13 = (HEAP32[$11 >> 2] | 0) >>> 0 < $8 >>> 0;
  $$0 = $13 ? $11 + 4 | 0 : $$0;
  $$014 = $13 ? $$014 + -1 - $10 | 0 : $10;
 }
 return $$0 | 0;
}

function __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, $6 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = ((HEAP32[$2 >> 2] | 0) - $4 | 0) / 36 | 0;
 $8 = $4;
 if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8__appendEm($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) HEAP32[$2 >> 2] = $8 + ($1 * 36 | 0);
 return;
}

function __ZNSt3__214__split_bufferI12multi_markerRNS_9allocatorIS1_EEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $1 = 0, $2 = 0, $__end_$i$i$i = 0, $incdec$ptr$i$i$i = 0;
 $0 = HEAP32[$this + 4 >> 2] | 0;
 $__end_$i$i$i = $this + 8 | 0;
 $1 = HEAP32[$__end_$i$i$i >> 2] | 0;
 while (1) {
  if (($1 | 0) == ($0 | 0)) break;
  $incdec$ptr$i$i$i = $1 + -8 | 0;
  HEAP32[$__end_$i$i$i >> 2] = $incdec$ptr$i$i$i;
  $1 = $incdec$ptr$i$i$i;
 }
 $2 = HEAP32[$this >> 2] | 0;
 if ($2 | 0) __ZdlPv($2);
 return;
}

function __ZN6vision35MultiplyPointHomographyInhomogenousIfEEvRT_S2_PKS1_S1_S1_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = +$3;
 $4 = +$4;
 var $14 = 0.0;
 $14 = +HEAPF32[$2 + 32 >> 2] + (+HEAPF32[$2 + 24 >> 2] * $3 + +HEAPF32[$2 + 28 >> 2] * $4);
 HEAPF32[$0 >> 2] = (+HEAPF32[$2 + 8 >> 2] + (+HEAPF32[$2 >> 2] * $3 + +HEAPF32[$2 + 4 >> 2] * $4)) / $14;
 HEAPF32[$1 >> 2] = (+HEAPF32[$2 + 20 >> 2] + (+HEAPF32[$2 + 12 >> 2] * $3 + +HEAPF32[$2 + 16 >> 2] * $4)) / $14;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_12DbD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseINS_6vectorINS1_IN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEEENS5_IS9_Lm4096EEEED2Ev($0 + 32 | 0);
 __ZNSt3__213__vector_baseINS_6vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS3_11short_allocIS4_Lm4096EEEEENS5_IS7_Lm4096EEEED2Ev($0 + 16 | 0);
 __ZNSt3__213__vector_baseIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEED2Ev($0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($0, HEAP32[$1 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0); else {
  HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
  HEAP32[$0 + 4 >> 2] = HEAP32[$1 + 4 >> 2];
  HEAP32[$0 + 8 >> 2] = HEAP32[$1 + 8 >> 2];
 }
 return;
}

function __ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$0$lcssa = 0, $7 = 0;
 $$0 = $2;
 while (1) {
  if (($$0 | 0) == ($3 | 0)) {
   $$0$lcssa = $3;
   break;
  }
  if ((HEAP32[$$0 >> 2] | 0) >>> 0 < 128) {
   $7 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
   if ((HEAP16[$7 + (HEAP32[$$0 >> 2] << 1) >> 1] & $1) << 16 >> 16) {
    $$0$lcssa = $$0;
    break;
   }
  }
  $$0 = $$0 + 4 | 0;
 }
 return $$0$lcssa | 0;
}

function ___towrite($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $14 = 0, $3 = 0, $7 = 0;
 $1 = $0 + 74 | 0;
 $3 = HEAP8[$1 >> 0] | 0;
 HEAP8[$1 >> 0] = $3 + 255 | $3;
 $7 = HEAP32[$0 >> 2] | 0;
 if (!($7 & 8)) {
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$0 + 4 >> 2] = 0;
  $14 = HEAP32[$0 + 44 >> 2] | 0;
  HEAP32[$0 + 28 >> 2] = $14;
  HEAP32[$0 + 20 >> 2] = $14;
  HEAP32[$0 + 16 >> 2] = $14 + (HEAP32[$0 + 48 >> 2] | 0);
  $$0 = 0;
 } else {
  HEAP32[$0 >> 2] = $7 | 32;
  $$0 = -1;
 }
 return $$0 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE4swapERS3_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $10 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 HEAP32[$1 >> 2] = $2;
 $4 = $0 + 4 | 0;
 $5 = $1 + 4 | 0;
 $6 = HEAP32[$4 >> 2] | 0;
 HEAP32[$4 >> 2] = HEAP32[$5 >> 2];
 HEAP32[$5 >> 2] = $6;
 $8 = $0 + 8 | 0;
 $9 = $1 + 8 | 0;
 $10 = HEAP32[$8 >> 2] | 0;
 HEAP32[$8 >> 2] = HEAP32[$9 >> 2];
 HEAP32[$9 >> 2] = $10;
 return;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EED2Ev($0) {
 $0 = $0 | 0;
 var $4 = 0, $5 = 0;
 __ZNSt3__214priority_queueIN6vision17PriorityQueueItemILi96EEENS_6vectorIS3_NS_9allocatorIS3_EEEENS_4lessIS3_EEED2Ev($0 + 84 | 0);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($0 + 72 | 0);
 __ZN6vision14BinarykMedoidsILi96EED2Ev($0 + 12 | 0);
 $4 = $0 + 8 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 HEAP32[$4 >> 2] = 0;
 if ($5 | 0) {
  __ZN6vision4NodeILi96EED2Ev($5);
  __ZdlPv($5);
 }
 return;
}

function _fmt_o($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0$lcssa = 0, $$06 = 0, $10 = 0, $11 = 0, $7 = 0;
 if (($0 | 0) == 0 & ($1 | 0) == 0) $$0$lcssa = $2; else {
  $$06 = $2;
  $11 = $1;
  $7 = $0;
  while (1) {
   $10 = $$06 + -1 | 0;
   HEAP8[$10 >> 0] = $7 & 7 | 48;
   $7 = _bitshift64Lshr($7 | 0, $11 | 0, 3) | 0;
   $11 = getTempRet0() | 0;
   if (($7 | 0) == 0 & ($11 | 0) == 0) {
    $$0$lcssa = $10;
    break;
   } else $$06 = $10;
  }
 }
 return $$0$lcssa | 0;
}

function __ZNSt3__219__libcpp_snprintf_lEPcmP15__locale_structPKcz($0, $1, $2, $3, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $varargs = $varargs | 0;
 var $4 = 0, $5 = 0, $6 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $4 = sp;
 HEAP32[$4 >> 2] = $varargs;
 $5 = ___uselocale($2) | 0;
 $6 = _vsnprintf($0, $1, $3, $4) | 0;
 if ($5 | 0) ___uselocale($5) | 0;
 STACKTOP = sp;
 return $6 | 0;
}

function __ZN6vision29SolveSymmetricLinearSystem3x3IfEEbPT_PKS1_S4_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(48);
 $3 = sp;
 if (__ZN6vision25MatrixInverseSymmetric3x3IfEEbPT_PKS1_S1_($3, $1, 1.1920928955078125e-07) | 0) {
  __ZN6vision16Multiply_3x3_3x1IfEEvPT_PKS1_S4_($0, $3, $2);
  $$0 = 1;
 } else $$0 = 0;
 STACKTOP = sp;
 return $$0 | 0;
}

function _get_buff($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $6 = 0, $7 = 0;
 L1 : while (1) {
  if (!(_fgets($0, 256, $1) | 0)) break;
  $$0 = _strlen($0) | 0;
  L4 : while (1) {
   if (!$$0) break;
   $6 = $$0 + -1 | 0;
   $7 = $0 + $6 | 0;
   switch (HEAP8[$7 >> 0] | 0) {
   case 13:
   case 10:
    break;
   default:
    break L4;
   }
   HEAP8[$7 >> 0] = 0;
   $$0 = $6;
  }
  switch (HEAP8[$0 >> 0] | 0) {
  case 0:
  case 35:
   break;
  default:
   break L1;
  }
 }
 return;
}

function __ZNSt3__213__vector_baseINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEED2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $3 = 0, $6 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i + -12 | 0;
   __ZNSt3__213__vector_baseINS_4pairIfmEENS_9allocatorIS2_EEED2Ev($6);
   $$0$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  __ZdlPv(HEAP32[$0 >> 2] | 0);
 }
 return;
}

function __ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$08 = 0, $13 = 0, $7 = 0;
 $$0 = $3;
 $$08 = $1;
 while (1) {
  if (($$08 | 0) == ($2 | 0)) break;
  if ((HEAP32[$$08 >> 2] | 0) >>> 0 < 128) {
   $7 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
   $13 = HEAPU16[$7 + (HEAP32[$$08 >> 2] << 1) >> 1] | 0;
  } else $13 = 0;
  HEAP16[$$0 >> 1] = $13;
  $$0 = $$0 + 2 | 0;
  $$08 = $$08 + 4 | 0;
 }
 return $2 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_120parse_pack_expansionINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$1 = 0, $12 = 0, $13 = 0;
 if (($1 - $0 | 0) > 2) if ((HEAP8[$0 >> 0] | 0) == 115) if ((HEAP8[$0 + 1 >> 0] | 0) == 112) {
  $12 = $0 + 2 | 0;
  $13 = __ZN10__cxxabiv112_GLOBAL__N_116parse_expressionINS0_2DbEEEPKcS4_S4_RT_($12, $1, $2) | 0;
  $$1 = ($13 | 0) == ($12 | 0) ? $0 : $13;
 } else $$1 = $0; else $$1 = $0; else $$1 = $0;
 return $$1 | 0;
}

function __ZNK6vision20VisualDatabaseFacade18get3DFeaturePointsEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 HEAP32[$2 >> 2] = $1;
 $5 = __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEEixERSD_((HEAP32[$0 >> 2] | 0) + 4 | 0, $2) | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZN6vision18BinaryFeatureStore6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 $5 = Math_imul(HEAP32[$0 >> 2] | 0, $1) | 0;
 HEAP8[$2 >> 0] = 0;
 __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEmRKh($0 + 4 | 0, $5, $2);
 __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE6resizeEm($0 + 16 | 0, $1);
 STACKTOP = sp;
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $4 = 0, $8 = 0, $9 = 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0;
 if (($4 | 0) == (__ZNSt3__211char_traitsIwE3eofEv() | 0)) $$0 = __ZNSt3__211char_traitsIwE3eofEv() | 0; else {
  $8 = $0 + 12 | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  HEAP32[$8 >> 2] = $9 + 4;
  $$0 = __ZNSt3__211char_traitsIwE11to_int_typeEw(HEAP32[$9 >> 2] | 0) | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv($0) {
 $0 = $0 | 0;
 var $$0 = 0, $4 = 0, $8 = 0, $9 = 0;
 $4 = FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 36 >> 2] & 127]($0) | 0;
 if (($4 | 0) == (__ZNSt3__211char_traitsIcE3eofEv() | 0)) $$0 = __ZNSt3__211char_traitsIcE3eofEv() | 0; else {
  $8 = $0 + 12 | 0;
  $9 = HEAP32[$8 >> 2] | 0;
  HEAP32[$8 >> 2] = $9 + 1;
  $$0 = __ZNSt3__211char_traitsIcE11to_int_typeEc(HEAP8[$9 >> 0] | 0) | 0;
 }
 return $$0 | 0;
}

function _arg_n_668($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $2 = 0, $9 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 HEAP32[$2 >> 2] = HEAP32[$0 >> 2];
 $$0 = $1;
 while (1) {
  $9 = (HEAP32[$2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
  $10 = HEAP32[$9 >> 2] | 0;
  HEAP32[$2 >> 2] = $9 + 4;
  if ($$0 >>> 0 > 1) $$0 = $$0 + -1 | 0; else break;
 }
 STACKTOP = sp;
 return $10 | 0;
}

function __ZNSt3__28ios_base4initEPv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, dest = 0, stop = 0;
 HEAP32[$0 + 24 >> 2] = $1;
 HEAP32[$0 + 16 >> 2] = ($1 | 0) == 0 & 1;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 4098;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 6;
 $11 = $0 + 28 | 0;
 dest = $0 + 32 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZNSt3__26localeC2Ev($11);
 return;
}

function __ZN6vision10SimilarityIfEEvPT_S1_S1_S1_S1_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = +$3;
 $4 = +$4;
 var $6 = 0.0, $8 = 0.0;
 $6 = +Math_cos(+$3) * $4;
 $8 = +Math_sin(+$3) * $4;
 HEAPF32[$0 >> 2] = $6;
 HEAPF32[$0 + 4 >> 2] = -$8;
 HEAPF32[$0 + 8 >> 2] = $1;
 HEAPF32[$0 + 12 >> 2] = $8;
 HEAPF32[$0 + 16 >> 2] = $6;
 HEAPF32[$0 + 20 >> 2] = $2;
 HEAPF32[$0 + 24 >> 2] = 0.0;
 HEAPF32[$0 + 28 >> 2] = 0.0;
 HEAPF32[$0 + 32 >> 2] = 1.0;
 return;
}

function __ZNSt3__219__libcpp_asprintf_lEPPcP15__locale_structPKcz($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 HEAP32[$3 >> 2] = $varargs;
 $4 = ___uselocale($1) | 0;
 $5 = _vasprintf($0, $2, $3) | 0;
 if ($4 | 0) ___uselocale($4) | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function _arImageProcLumaHistAndCDF($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$017 = 0, $2 = 0, $indvars$iv = 0;
 $2 = _arImageProcLumaHist($0, $1) | 0;
 if (($2 | 0) < 0) $$0 = $2; else {
  $$017 = 0;
  $indvars$iv = 0;
  do {
   $$017 = (HEAP32[$0 + 12 + ($indvars$iv << 2) >> 2] | 0) + $$017 | 0;
   HEAP32[$0 + 1036 + ($indvars$iv << 2) >> 2] = $$017;
   $indvars$iv = $indvars$iv + 1 | 0;
  } while (($indvars$iv | 0) != 256);
  $$0 = 0;
 }
 return $$0 | 0;
}

function _ar2FreeFeatureSet($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$09 = 0, $1 = 0, $4 = 0, $7 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) $$09 = -1; else {
  $$0 = 0;
  $4 = $1;
  while (1) {
   $7 = HEAP32[$4 >> 2] | 0;
   if (($$0 | 0) >= (HEAP32[$4 + 4 >> 2] | 0)) break;
   _free(HEAP32[$7 + ($$0 * 20 | 0) >> 2] | 0);
   $$0 = $$0 + 1 | 0;
   $4 = HEAP32[$0 >> 2] | 0;
  }
  _free($7);
  _free(HEAP32[$0 >> 2] | 0);
  HEAP32[$0 >> 2] = 0;
  $$09 = 0;
 }
 return $$09 | 0;
}

function _jpeg_abort($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $12 = 0;
 $1 = $0 + 4 | 0;
 do if (HEAP32[$1 >> 2] | 0) {
  $$0 = 1;
  while (1) {
   if (!$$0) break;
   FUNCTION_TABLE_vii[HEAP32[(HEAP32[$1 >> 2] | 0) + 36 >> 2] & 63]($0, $$0);
   $$0 = $$0 + -1 | 0;
  }
  $12 = $0 + 20 | 0;
  if (!(HEAP32[$0 + 16 >> 2] | 0)) {
   HEAP32[$12 >> 2] = 100;
   break;
  } else {
   HEAP32[$12 >> 2] = 200;
   HEAP32[$0 + 304 >> 2] = 0;
   break;
  }
 } while (0);
 return;
}

function __ZNSt3__217__libcpp_sscanf_lEPKcP15__locale_structS1_z($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, $4 = 0, $5 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 HEAP32[$3 >> 2] = $varargs;
 $4 = ___uselocale($1) | 0;
 $5 = _vsscanf($0, $2, $3) | 0;
 if ($4 | 0) ___uselocale($4) | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZNSt3__213__vector_baseIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $3 = 0, $6 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i + -8 | 0;
   __ZN6vision17PriorityQueueItemILi96EED2Ev($6);
   $$0$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  __ZdlPv(HEAP32[$0 >> 2] | 0);
 }
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -12 | 0;
  HEAP32[$3 >> 2] = $6;
  __ZNSt3__213__vector_baseINS_4pairIfmEENS_9allocatorIS2_EEED2Ev($6);
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function ___ftello($0) {
 $0 = $0 | 0;
 var $10 = 0, $4 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($0) | 0) == 0;
  $7 = ___ftello_unlocked($0) | 0;
  $8 = getTempRet0() | 0;
  if ($phitmp) {
   $10 = $7;
   $9 = $8;
  } else {
   ___unlockfile($0);
   $10 = $7;
   $9 = $8;
  }
 } else {
  $4 = ___ftello_unlocked($0) | 0;
  $10 = $4;
  $9 = getTempRet0() | 0;
 }
 setTempRet0($9 | 0);
 return $10 | 0;
}

function _getint_729($0) {
 $0 = $0 | 0;
 var $$0$lcssa = 0, $$04 = 0, $11 = 0, $12 = 0, $7 = 0;
 if (!(_isdigit(HEAP8[HEAP32[$0 >> 2] >> 0] | 0) | 0)) $$0$lcssa = 0; else {
  $$04 = 0;
  while (1) {
   $7 = HEAP32[$0 >> 2] | 0;
   $11 = ($$04 * 10 | 0) + -48 + (HEAP8[$7 >> 0] | 0) | 0;
   $12 = $7 + 1 | 0;
   HEAP32[$0 >> 2] = $12;
   if (!(_isdigit(HEAP8[$12 >> 0] | 0) | 0)) {
    $$0$lcssa = $11;
    break;
   } else $$04 = $11;
  }
 }
 return $$0$lcssa | 0;
}

function __ZNKSt3__25ctypeIcE10do_toupperEPcPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $12 = 0, $4 = 0, $6 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP8[$$0 >> 0] | 0;
  if ($4 << 24 >> 24 > -1) {
   $6 = __ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0;
   $12 = HEAP32[$6 + (HEAP8[$$0 >> 0] << 2) >> 2] & 255;
  } else $12 = $4;
  HEAP8[$$0 >> 0] = $12;
  $$0 = $$0 + 1 | 0;
 }
 return $2 | 0;
}

function __ZNKSt3__25ctypeIcE10do_tolowerEPcPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $12 = 0, $4 = 0, $6 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP8[$$0 >> 0] | 0;
  if ($4 << 24 >> 24 > -1) {
   $6 = __ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0;
   $12 = HEAP32[$6 + (HEAP8[$$0 >> 0] << 2) >> 2] & 255;
  } else $12 = $4;
  HEAP8[$$0 >> 0] = $12;
  $$0 = $$0 + 1 | 0;
 }
 return $2 | 0;
}

function __ZN10emscripten8internal11BindingTypeINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE12fromWireTypeEPNS9_Ut_E($agg$result, $v) {
 $agg$result = $agg$result | 0;
 $v = $v | 0;
 var $0 = 0;
 $0 = HEAP32[$v >> 2] | 0;
 HEAP32[$agg$result >> 2] = 0;
 HEAP32[$agg$result + 4 >> 2] = 0;
 HEAP32[$agg$result + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($agg$result, $v + 4 | 0, $0);
 return;
}

function _start_output_pass($0) {
 $0 = $0 | 0;
 var $2 = 0, $decompress_smooth_data$sink = 0, label = 0;
 $2 = HEAP32[$0 + 428 >> 2] | 0;
 if (HEAP32[$2 + 16 >> 2] | 0) {
  if (!(HEAP32[$0 + 80 >> 2] | 0)) label = 4; else if (!(_smoothing_ok($0) | 0)) label = 4; else $decompress_smooth_data$sink = 23;
  if ((label | 0) == 4) $decompress_smooth_data$sink = 21;
  HEAP32[$2 + 12 >> 2] = $decompress_smooth_data$sink;
 }
 HEAP32[$0 + 156 >> 2] = 0;
 return;
}

function _ar2ReadJpegImage2($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $7 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = _malloc(20) | 0;
 if (!$1) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 }
 $7 = _jpgread($0, $1 + 8 | 0, $1 + 12 | 0, $1 + 4 | 0, $1 + 16 | 0) | 0;
 HEAP32[$1 >> 2] = $7;
 if (!$7) {
  _free($1);
  $$0 = 0;
 } else $$0 = $1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE18__construct_at_endIPS3_EENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_m($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $7 = 0;
 $4 = $0 + 4 | 0;
 $7 = $2 - $1 | 0;
 if (($7 | 0) > 0) {
  _memcpy(HEAP32[$4 >> 2] | 0, $1 | 0, $7 | 0) | 0;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + ((($7 >>> 0) / 12 | 0) * 12 | 0);
 }
 return;
}

function __ZNKSt3__25ctypeIwE10do_toupperEPwPKw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $10 = 0, $4 = 0, $6 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP32[$$0 >> 2] | 0;
  if ($4 >>> 0 < 128) {
   $6 = __ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0;
   $10 = HEAP32[$6 + (HEAP32[$$0 >> 2] << 2) >> 2] | 0;
  } else $10 = $4;
  HEAP32[$$0 >> 2] = $10;
  $$0 = $$0 + 4 | 0;
 }
 return $2 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEPwPKw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $10 = 0, $4 = 0, $6 = 0;
 $$0 = $1;
 while (1) {
  if (($$0 | 0) == ($2 | 0)) break;
  $4 = HEAP32[$$0 >> 2] | 0;
  if ($4 >>> 0 < 128) {
   $6 = __ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0;
   $10 = HEAP32[$6 + (HEAP32[$$0 >> 2] << 2) >> 2] | 0;
  } else $10 = $4;
  HEAP32[$$0 >> 2] = $10;
  $$0 = $$0 + 4 | 0;
 }
 return $2 | 0;
}

function __ZN6vision9MaxIndex6IfEEiPKT_($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0, $$3 = 0;
 $$0 = +HEAPF32[$0 + 4 >> 2] > +HEAPF32[$0 >> 2] & 1;
 $$1 = +HEAPF32[$0 + 8 >> 2] > +HEAPF32[$0 + ($$0 << 2) >> 2] ? 2 : $$0;
 $$2 = +HEAPF32[$0 + 12 >> 2] > +HEAPF32[$0 + ($$1 << 2) >> 2] ? 3 : $$1;
 $$3 = +HEAPF32[$0 + 16 >> 2] > +HEAPF32[$0 + ($$2 << 2) >> 2] ? 4 : $$2;
 return (+HEAPF32[$0 + 20 >> 2] > +HEAPF32[$0 + ($$3 << 2) >> 2] ? 5 : $$3) | 0;
}

function _alloc_fs_workspace($0) {
 $0 = $0 | 0;
 var $$0 = 0, $14 = 0, $2 = 0, $6 = 0, $7 = 0, $8 = 0;
 $2 = HEAP32[$0 + 460 >> 2] | 0;
 $6 = (HEAP32[$0 + 112 >> 2] << 1) + 4 | 0;
 $7 = $0 + 120 | 0;
 $8 = $0 + 4 | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) >= (HEAP32[$7 >> 2] | 0)) break;
  $14 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 4 >> 2] & 63]($0, 1, $6) | 0;
  HEAP32[$2 + 68 + ($$0 << 2) >> 2] = $14;
  $$0 = $$0 + 1 | 0;
 }
 return;
}

function __ZN10emscripten8internal7InvokerIiJEE6invokeEPFivE($fn) {
 $fn = $fn | 0;
 var $call = 0, $call1 = 0, $ref$tmp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $ref$tmp = sp;
 $call = FUNCTION_TABLE_i[$fn & 1]() | 0;
 HEAP32[$ref$tmp >> 2] = $call;
 $call1 = __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi($ref$tmp) | 0;
 STACKTOP = sp;
 return $call1 | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, $6 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = (HEAP32[$2 >> 2] | 0) - $4 >> 2;
 $8 = $4;
 if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8__appendEm($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) HEAP32[$2 >> 2] = $8 + ($1 << 2);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEaSERKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $5 = 0;
 if (($0 | 0) != ($1 | 0)) {
  $4 = HEAP8[$1 + 11 >> 0] | 0;
  $5 = $4 << 24 >> 24 < 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcm($0, $5 ? HEAP32[$1 >> 2] | 0 : $1, $5 ? HEAP32[$1 + 4 >> 2] | 0 : $4 & 255);
 }
 return;
}

function _output_message($0) {
 $0 = $0 | 0;
 var $1 = 0, $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(208);
 $vararg_buffer = sp + 200 | 0;
 $1 = sp;
 FUNCTION_TABLE_vii[HEAP32[(HEAP32[$0 >> 2] | 0) + 12 >> 2] & 63]($0, $1);
 $5 = HEAP32[3454] | 0;
 HEAP32[$vararg_buffer >> 2] = $1;
 _fprintf($5, 38281, $vararg_buffer) | 0;
 STACKTOP = sp;
 return;
}

function __ZNSt3__213__vector_baseIN6vision12FeaturePointENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $3 = 0, $6 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i + -20 | 0;
   __ZN6vision12FeaturePointD2Ev($6);
   $$0$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  __ZdlPv(HEAP32[$0 >> 2] | 0);
 }
 return;
}

function _start_iMCU_row_28($0) {
 $0 = $0 | 0;
 var $$sink = 0, $13 = 0, $2 = 0;
 $2 = HEAP32[$0 + 428 >> 2] | 0;
 if ((HEAP32[$0 + 328 >> 2] | 0) > 1) $$sink = 1; else {
  $13 = HEAP32[$0 + 332 >> 2] | 0;
  $$sink = HEAP32[((HEAP32[$0 + 148 >> 2] | 0) >>> 0 < ((HEAP32[$0 + 320 >> 2] | 0) + -1 | 0) >>> 0 ? $13 + 12 | 0 : $13 + 72 | 0) >> 2] | 0;
 }
 HEAP32[$2 + 28 >> 2] = $$sink;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP32[$2 + 24 >> 2] = 0;
 return;
}

function __ZNSt3__28numpunctIwEC2Em($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $6 = 0;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 16948;
 HEAP32[$0 + 8 >> 2] = 46;
 HEAP32[$0 + 12 >> 2] = 44;
 $6 = $0 + 16 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZN6vision12ArrayShuffleIiEEvPT_iiRi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $7 = 0, $8 = 0, $9 = 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) >= ($2 | 0)) break;
  $7 = $0 + ($$0 << 2) | 0;
  $8 = $0 + (((__ZN6vision10FastRandomERi($3) | 0) % ($1 | 0) | 0) << 2) | 0;
  $9 = HEAP32[$7 >> 2] | 0;
  HEAP32[$7 >> 2] = HEAP32[$8 >> 2];
  HEAP32[$8 >> 2] = $9;
  $$0 = $$0 + 1 | 0;
 }
 return;
}

function __ZNSt3__214__split_bufferIN6vision17PriorityQueueItemILi96EEERNS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -8 | 0;
  HEAP32[$3 >> 2] = $6;
  __ZN6vision17PriorityQueueItemILi96EED2Ev($6);
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function _jinit_huff_decoder($0) {
 $0 = $0 | 0;
 var $$0 = 0, $4 = 0, $7 = 0, $8 = 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, 232) | 0;
 HEAP32[$0 + 444 >> 2] = $4;
 HEAP32[$4 >> 2] = 130;
 HEAP32[$4 + 4 >> 2] = 20;
 $7 = $4 + 56 | 0;
 $8 = $4 + 40 | 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 4) break;
  HEAP32[$7 + ($$0 << 2) >> 2] = 0;
  HEAP32[$8 + ($$0 << 2) >> 2] = 0;
  $$0 = $$0 + 1 | 0;
 }
 return;
}

function _arVecInnerproduct($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$013 = 0.0, $15 = 0.0, $3 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 if (($3 | 0) != (HEAP32[$1 + 4 >> 2] | 0)) _exit(0);
 $$0 = 0;
 $$013 = 0.0;
 while (1) {
  if (($$0 | 0) >= ($3 | 0)) break;
  $15 = $$013 + +HEAPF64[(HEAP32[$0 >> 2] | 0) + ($$0 << 3) >> 3] * +HEAPF64[(HEAP32[$1 >> 2] | 0) + ($$0 << 3) >> 3];
  $$0 = $$0 + 1 | 0;
  $$013 = $15;
 }
 return +$$013;
}

function __ZNSt3__28numpunctIcEC2Em($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0, $6 = 0;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 16908;
 HEAP8[$0 + 8 >> 0] = 46;
 HEAP8[$0 + 9 >> 0] = 44;
 $6 = $0 + 12 | 0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 HEAP32[$6 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$6 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$09 = 0, $10 = 0, $8 = 0;
 $8 = ($2 - $1 | 0) >>> 2;
 $$0 = $4;
 $$09 = $1;
 while (1) {
  if (($$09 | 0) == ($2 | 0)) break;
  $10 = HEAP32[$$09 >> 2] | 0;
  HEAP8[$$0 >> 0] = $10 >>> 0 < 128 ? $10 & 255 : $3;
  $$0 = $$0 + 1 | 0;
  $$09 = $$09 + 4 | 0;
 }
 return $1 + ($8 << 2) | 0;
}

function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535;
 $2 = $b & 65535;
 $3 = Math_imul($2, $1) | 0;
 $6 = $a >>> 16;
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
 $11 = $b >>> 16;
 $12 = Math_imul($11, $1) | 0;
 return (setTempRet0(($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0), $8 + $12 << 16 | $3 & 65535 | 0) | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEEC2Em($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP8[$0 + 128 >> 0] = 0;
 if ($1 | 0) {
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8allocateEm($0, $1);
  __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($0, $1);
 }
 return;
}

function _jcopy_sample_rows($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $$0 = 0, $$019 = 0, $$020 = 0;
 $$0 = $4;
 $$019 = $0 + ($1 << 2) | 0;
 $$020 = $2 + ($3 << 2) | 0;
 while (1) {
  if (($$0 | 0) <= 0) break;
  _memcpy(HEAP32[$$020 >> 2] | 0, HEAP32[$$019 >> 2] | 0, $5 | 0) | 0;
  $$0 = $$0 + -1 | 0;
  $$019 = $$019 + 4 | 0;
  $$020 = $$020 + 4 | 0;
 }
 return;
}

function __ZN6vision35MultiplyPointSimilarityInhomogenousIfEEvPT_PKS1_S4_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $8 = 0;
 $8 = $2 + 4 | 0;
 HEAPF32[$0 >> 2] = +HEAPF32[$1 + 8 >> 2] + (+HEAPF32[$1 >> 2] * +HEAPF32[$2 >> 2] + +HEAPF32[$1 + 4 >> 2] * +HEAPF32[$8 >> 2]);
 HEAPF32[$0 + 4 >> 2] = +HEAPF32[$1 + 20 >> 2] + (+HEAPF32[$1 + 12 >> 2] * +HEAPF32[$2 >> 2] + +HEAPF32[$1 + 16 >> 2] * +HEAPF32[$8 >> 2]);
 return;
}

function ___cxa_can_catch($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 HEAP32[$3 >> 2] = HEAP32[$2 >> 2];
 $8 = FUNCTION_TABLE_iiii[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 63]($0, $1, $3) | 0;
 if ($8) HEAP32[$2 >> 2] = HEAP32[$3 >> 2];
 STACKTOP = sp;
 return $8 & 1 | 0;
}

function __ZN6vision18VisualDatabaseImplD2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEED2Ev($0 + 4 | 0);
 $2 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = 0;
 if ($2 | 0) {
  __ZN6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEED2Ev($2);
  __ZdlPv($2);
 }
 return;
}

function _shl($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $3 = 0, $5 = 0, $7 = 0;
 $3 = $0 + 4 | 0;
 if ($1 >>> 0 > 31) {
  $5 = HEAP32[$0 >> 2] | 0;
  HEAP32[$3 >> 2] = $5;
  HEAP32[$0 >> 2] = 0;
  $$0 = $1 + -32 | 0;
  $10 = 0;
  $7 = $5;
 } else {
  $$0 = $1;
  $10 = HEAP32[$0 >> 2] | 0;
  $7 = HEAP32[$3 >> 2] | 0;
 }
 HEAP32[$3 >> 2] = $10 >>> (32 - $$0 | 0) | $7 << $$0;
 HEAP32[$0 >> 2] = $10 << $$0;
 return;
}

function _memmove(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((src | 0) < (dest | 0) & (dest | 0) < (src + num | 0)) {
  ret = dest;
  src = src + num | 0;
  dest = dest + num | 0;
  while ((num | 0) > 0) {
   dest = dest - 1 | 0;
   src = src - 1 | 0;
   num = num - 1 | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  }
  dest = ret;
 } else _memcpy(dest, src, num) | 0;
 return dest | 0;
}

function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endEmRKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$promoted = 0, $3 = 0, $5 = 0;
 $3 = $0 + 8 | 0;
 $$promoted = HEAP32[$3 >> 2] | 0;
 $$0 = $1;
 $5 = $$promoted;
 while (1) {
  HEAP32[$5 >> 2] = HEAP32[$2 >> 2];
  $$0 = $$0 + -1 | 0;
  if (!$$0) break; else $5 = $5 + 4 | 0;
 }
 HEAP32[$3 >> 2] = $$promoted + ($1 << 2);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0, $6 = 0;
 if (__ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE17pointer_in_bufferEPc($0, $1) | 0) {
  $5 = $1 + (__ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8align_upEm($2) | 0) | 0;
  $6 = $0 + 4096 | 0;
  if (($5 | 0) == (HEAP32[$6 >> 2] | 0)) HEAP32[$6 >> 2] = $1;
 } else _free($1);
 return;
}

function _vsscanf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $8 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(144);
 $3 = sp;
 _memset($3 | 0, 0, 144) | 0;
 HEAP32[$3 + 32 >> 2] = 36;
 HEAP32[$3 + 44 >> 2] = $0;
 HEAP32[$3 + 76 >> 2] = -1;
 HEAP32[$3 + 84 >> 2] = $0;
 $8 = _vfscanf($3, $1, $2) | 0;
 STACKTOP = sp;
 return $8 | 0;
}

function __ZNSt3__213__vector_baseIN6vision5ImageENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $$0$i$i = 0, $1 = 0, $3 = 0, $6 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $3 = $0 + 4 | 0;
  $$0$i$i = HEAP32[$3 >> 2] | 0;
  while (1) {
   if (($$0$i$i | 0) == ($1 | 0)) break;
   $6 = $$0$i$i + -32 | 0;
   __ZN6vision5ImageD2Ev($6);
   $$0$i$i = $6;
  }
  HEAP32[$3 >> 2] = $1;
  __ZdlPv(HEAP32[$0 >> 2] | 0);
 }
 return;
}

function _shr($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $10 = 0, $3 = 0, $5 = 0, $7 = 0;
 $3 = $0 + 4 | 0;
 if ($1 >>> 0 > 31) {
  $5 = HEAP32[$3 >> 2] | 0;
  HEAP32[$0 >> 2] = $5;
  HEAP32[$3 >> 2] = 0;
  $$0 = $1 + -32 | 0;
  $10 = 0;
  $7 = $5;
 } else {
  $$0 = $1;
  $10 = HEAP32[$3 >> 2] | 0;
  $7 = HEAP32[$0 >> 2] | 0;
 }
 HEAP32[$0 >> 2] = $10 << 32 - $$0 | $7 >>> $$0;
 HEAP32[$3 >> 2] = $10 >>> $$0;
 return;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEEC2Em($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if ($1 | 0) {
  __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE8allocateEm($0, $1);
  __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE18__construct_at_endEm($0, $1);
 }
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE6sentryC2ERS3_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $11 = 0, $6 = 0;
 HEAP8[$0 >> 0] = 0;
 HEAP32[$0 + 4 >> 2] = $1;
 $6 = $1 + (HEAP32[(HEAP32[$1 >> 2] | 0) + -12 >> 2] | 0) | 0;
 if (!(HEAP32[$6 + 16 >> 2] | 0)) {
  $11 = HEAP32[$6 + 72 >> 2] | 0;
  if ($11 | 0) __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEE5flushEv($11) | 0;
  HEAP8[$0 >> 0] = 1;
 }
 return;
}

function __ZN6vision16ComputeEdgeScoreERfPKf($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $15 = 0.0, $2 = 0, $6 = 0.0, $9 = 0.0;
 $2 = $1 + 16 | 0;
 $6 = +HEAPF32[$1 >> 2] * +HEAPF32[$2 >> 2];
 $9 = $6 - +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$1 + 4 >> 2]);
 if ($9 == 0.0) $$0 = 0; else {
  $15 = +__ZN6vision3sqrIfEET_S1_(+HEAPF32[$1 >> 2] + +HEAPF32[$2 >> 2]) / $9;
  HEAPF32[$0 >> 2] = $15;
  $$0 = 1;
 }
 return $$0 | 0;
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, $5) | 0) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $1, $2, $3, $4);
 return;
}

function __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEE17__deallocate_nodeEPNS_16__hash_node_baseIPNS_11__hash_nodeIS2_PvEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $3 = 0;
 $$0 = $1;
 while (1) {
  if (!$$0) break;
  $3 = HEAP32[$$0 >> 2] | 0;
  __ZdlPv($$0);
  $$0 = $3;
 }
 return;
}

function _jpeg_std_error($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 137;
 HEAP32[$0 + 4 >> 2] = 47;
 HEAP32[$0 + 8 >> 2] = 138;
 HEAP32[$0 + 12 >> 2] = 48;
 HEAP32[$0 + 16 >> 2] = 139;
 HEAP32[$0 + 104 >> 2] = 0;
 HEAP32[$0 + 108 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 112 >> 2] = 2048;
 HEAP32[$0 + 116 >> 2] = 123;
 HEAP32[$0 + 120 >> 2] = 0;
 HEAP32[$0 + 124 >> 2] = 0;
 HEAP32[$0 + 128 >> 2] = 0;
 return $0 | 0;
}

function __ZN6vision22SampleReceptorBilinearERKNS_5ImageEff($0, $1, $2) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 var $6 = 0.0;
 $6 = +__ZN6vision10ClipScalarIfEET_S1_S1_S1_($1, 0.0, +(((__ZNK6vision5Image5widthEv($0) | 0) + -2 | 0) >>> 0));
 return +(+__ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($0, $6, +__ZN6vision10ClipScalarIfEET_S1_S1_S1_($2, 0.0, +(((__ZNK6vision5Image6heightEv($0) | 0) + -2 | 0) >>> 0))));
}

function __ZN6vision27OrthogonalizePivot8x9Basis7IfEEbPT_S2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $5 = 0.0;
 $2 = $0 + 252 | 0;
 __ZN6vision21AccumulateProjection9IfEEvPT_PKS1_S4_($2, $0 + 216 | 0, $1 + 252 | 0);
 $5 = +__ZN6vision11SumSquares9IfEET_PKS1_($2);
 if ($5 == 0.0) $$0 = 0; else {
  __ZN6vision12ScaleVector9IfEEvPT_PKS1_S1_($2, $2, 1.0 / +Math_sqrt(+$5));
  $$0 = 1;
 }
 return $$0 | 0;
}

function __ZNSt3__214__split_bufferIN6vision25DoGScaleInvariantDetector12FeaturePointERNS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -36 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -20 | 0;
  HEAP32[$3 >> 2] = $6;
  __ZN6vision12FeaturePointD2Ev($6);
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function _find_biggest_volume($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $$016 = 0, $$018 = 0, $$019 = 0, $4 = 0, $5 = 0;
 $$0 = 0;
 $$016 = 0;
 $$018 = 0;
 $$019 = $0;
 while (1) {
  if (($$018 | 0) >= ($1 | 0)) break;
  $4 = HEAP32[$$019 + 24 >> 2] | 0;
  $5 = ($4 | 0) > ($$016 | 0);
  $$0 = $5 ? $$019 : $$0;
  $$016 = $5 ? $4 : $$016;
  $$018 = $$018 + 1 | 0;
  $$019 = $$019 + 32 | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEmRKi($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $5 = 0, $7 = 0, $9 = 0;
 $3 = $0 + 4 | 0;
 $5 = HEAP32[$0 >> 2] | 0;
 $7 = (HEAP32[$3 >> 2] | 0) - $5 >> 2;
 $9 = $5;
 if ($7 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEmRKi($0, $1 - $7 | 0, $2); else if ($7 >>> 0 > $1 >>> 0) HEAP32[$3 >> 2] = $9 + ($1 << 2);
 return;
}

function __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, $6 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = (HEAP32[$2 >> 2] | 0) - $4 >> 3;
 $8 = $4;
 if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8__appendEm($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) HEAP32[$2 >> 2] = $8 + ($1 << 3);
 return;
}

function __ZNSt3__28ios_base16__call_callbacksENS0_5eventE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $4 = 0, $5 = 0, $7 = 0;
 $4 = $0 + 32 | 0;
 $5 = $0 + 36 | 0;
 $$0 = HEAP32[$0 + 40 >> 2] | 0;
 while (1) {
  if (!$$0) break;
  $7 = $$0 + -1 | 0;
  FUNCTION_TABLE_viii[HEAP32[(HEAP32[$4 >> 2] | 0) + ($7 << 2) >> 2] & 3]($1, $0, HEAP32[(HEAP32[$5 >> 2] | 0) + ($7 << 2) >> 2] | 0);
  $$0 = $7;
 }
 return;
}

function _skip_input_data($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $3 = 0, $5 = 0, $6 = 0;
 $3 = HEAP32[$0 + 24 >> 2] | 0;
 if (($1 | 0) > 0) {
  $5 = $3 + 4 | 0;
  $$0 = $1;
  while (1) {
   $6 = HEAP32[$5 >> 2] | 0;
   if (($$0 | 0) <= ($6 | 0)) break;
   _fill_input_buffer($0) | 0;
   $$0 = $$0 - $6 | 0;
  }
  HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + $$0;
  HEAP32[$5 >> 2] = $6 - $$0;
 }
 return;
}

function _ar3DCreateHandle2($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = _malloc(4) | 0;
 if (!$1) {
  _arLog(0, 3, 20454, sp);
  _exit(1);
 }
 $3 = _icpCreateHandle($0) | 0;
 HEAP32[$1 >> 2] = $3;
 if (!$3) {
  _free($1);
  $$0 = 0;
 } else $$0 = $1;
 STACKTOP = sp;
 return $$0 | 0;
}

function __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEEC2EmmS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $8 = 0, $9 = 0;
 $4 = $0 + 12 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = $3;
 if (!$1) $8 = 0; else $8 = __Znwm($1) | 0;
 HEAP32[$0 >> 2] = $8;
 $9 = $8 + $2 | 0;
 HEAP32[$0 + 8 >> 2] = $9;
 HEAP32[$0 + 4 >> 2] = $9;
 HEAP32[$4 >> 2] = $8 + $1;
 return;
}

function _copysign($0, $1) {
 $0 = +$0;
 $1 = +$1;
 var $2 = 0, $3 = 0, $8 = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $2 = HEAP32[tempDoublePtr >> 2] | 0;
 $3 = HEAP32[tempDoublePtr + 4 >> 2] | 0;
 HEAPF64[tempDoublePtr >> 3] = $1;
 $8 = HEAP32[tempDoublePtr + 4 >> 2] & -2147483648 | $3 & 2147483647;
 HEAP32[tempDoublePtr >> 2] = $2;
 HEAP32[tempDoublePtr + 4 >> 2] = $8;
 return +(+HEAPF64[tempDoublePtr >> 3]);
}

function _arLog($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 if (($2 | 0) != 0 & (HEAP32[3368] | 0) <= ($1 | 0)) if (HEAP8[$2 >> 0] | 0) {
  HEAP32[$3 >> 2] = $varargs;
  _arLogv(0, $1, $2, $3);
 }
 STACKTOP = sp;
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEmRKh($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0, $5 = 0, $6 = 0, $8 = 0;
 $3 = $0 + 4 | 0;
 $5 = HEAP32[$0 >> 2] | 0;
 $6 = (HEAP32[$3 >> 2] | 0) - $5 | 0;
 $8 = $5;
 if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEmRKh($0, $1 - $6 | 0, $2); else if ($6 >>> 0 > $1 >>> 0) HEAP32[$3 >> 2] = $8 + $1;
 return;
}

function __ZN6vision16RobustHomographyIfE4initEfiii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm($0, $2 * 9 | 0);
 __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE6resizeEm($0 + 24 | 0, $2);
 HEAPF32[$0 + 36 >> 2] = $1;
 HEAP32[$0 + 40 >> 2] = $2;
 HEAP32[$0 + 44 >> 2] = $3;
 HEAP32[$0 + 48 >> 2] = $4;
 return;
}

function ___stdio_close($0) {
 $0 = $0 | 0;
 var $3 = 0, $5 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 $3 = _dummy_465(HEAP32[$0 + 60 >> 2] | 0) | 0;
 HEAP32[$vararg_buffer >> 2] = $3;
 $5 = ___syscall_ret(___syscall6(6, $vararg_buffer | 0) | 0) | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function ___unlist_locked_file($0) {
 $0 = $0 | 0;
 var $$pre = 0, $$sink = 0, $10 = 0, $5 = 0;
 if (HEAP32[$0 + 68 >> 2] | 0) {
  $5 = HEAP32[$0 + 132 >> 2] | 0;
  $$pre = $0 + 128 | 0;
  if ($5 | 0) HEAP32[$5 + 128 >> 2] = HEAP32[$$pre >> 2];
  $10 = HEAP32[$$pre >> 2] | 0;
  if (!$10) $$sink = (___pthread_self_604() | 0) + 232 | 0; else $$sink = $10 + 132 | 0;
  HEAP32[$$sink >> 2] = $5;
 }
 return;
}

function __ZNSt3__218__libcpp_refstringC2EPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, $7 = 0;
 $2 = _strlen($1) | 0;
 $4 = __Znwm($2 + 13 | 0) | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$4 + 4 >> 2] = $2;
 HEAP32[$4 + 8 >> 2] = 0;
 $7 = __ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE($4) | 0;
 _memcpy($7 | 0, $1 | 0, $2 + 1 | 0) | 0;
 HEAP32[$0 >> 2] = $7;
 return;
}

function __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 while (1) {
  $4 = HEAP32[$3 >> 2] | 0;
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -32 | 0;
  HEAP32[$3 >> 2] = $6;
  __ZN6vision5ImageD2Ev($6);
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function ___munmap($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer >> 2] = $0;
 HEAP32[$vararg_buffer + 4 >> 2] = $1;
 $4 = ___syscall_ret(___syscall91(91, $vararg_buffer | 0) | 0) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endIPhEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $7 = 0;
 $4 = $0 + 4 | 0;
 $7 = $2 - $1 | 0;
 if (($7 | 0) > 0) {
  _memcpy(HEAP32[$4 >> 2] | 0, $1 | 0, $7 | 0) | 0;
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + $7;
 }
 return;
}

function __ZNSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 4 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  __ZN6vision17PriorityQueueItemILi96EEC2Ev($3);
  $3 = (HEAP32[$2 >> 2] | 0) + 8 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $5 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $5 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 58196) | 0;
 HEAP32[$0 + 36 >> 2] = $5;
 $12 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 127]($5) | 0) & 1;
 HEAP8[$0 + 44 >> 0] = $12;
 return;
}

function __ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $12 = 0, $5 = 0;
 FUNCTION_TABLE_ii[HEAP32[(HEAP32[$0 >> 2] | 0) + 24 >> 2] & 127]($0) | 0;
 $5 = __ZNKSt3__26locale9use_facetERNS0_2idE($1, 58188) | 0;
 HEAP32[$0 + 36 >> 2] = $5;
 $12 = (FUNCTION_TABLE_ii[HEAP32[(HEAP32[$5 >> 2] | 0) + 28 >> 2] & 127]($5) | 0) & 1;
 HEAP8[$0 + 44 >> 0] = $12;
 return;
}

function __ZN6vision4NodeILi96EEC2EiPKh($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $4 = 0;
 HEAP32[$0 >> 2] = $1;
 HEAP8[$0 + 100 >> 0] = 1;
 $4 = $0 + 104 | 0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 HEAP32[$4 + 8 >> 2] = 0;
 HEAP32[$4 + 12 >> 2] = 0;
 HEAP32[$4 + 16 >> 2] = 0;
 HEAP32[$4 + 20 >> 2] = 0;
 __ZN6vision10CopyVectorIhEEvPT_PKS1_m($0 + 4 | 0, $2, 96);
 return;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS4_EEEENS_4hashIiEENS_8equal_toIiEENS5_INS_4pairIKiS7_EEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEEENS_22__unordered_map_hasherIiS9_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS9_NS_8equal_toIiEELb1EEENS6_IS9_EEED2Ev($0);
 return;
}

function __ZNSt3__213unordered_mapIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEENS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS5_EEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEEENS_22__unordered_map_hasherIiS7_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS7_NS_8equal_toIiEELb1EEENS_9allocatorIS7_EEED2Ev($0);
 return;
}

function _calloc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $3 = 0, $8 = 0;
 if (!$0) $$0 = 0; else {
  $3 = Math_imul($1, $0) | 0;
  if (($1 | $0) >>> 0 > 65535) $$0 = (($3 >>> 0) / ($0 >>> 0) | 0 | 0) == ($1 | 0) ? $3 : -1; else $$0 = $3;
 }
 $8 = _malloc($$0) | 0;
 if (!$8) return $8 | 0;
 if (!(HEAP32[$8 + -4 >> 2] & 3)) return $8 | 0;
 _memset($8 | 0, 0, $$0 | 0) | 0;
 return $8 | 0;
}

function ___fseeko($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $9 = 0, $phitmp = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($0) | 0) == 0;
  $9 = ___fseeko_unlocked($0, $1, $2, $3) | 0;
  if ($phitmp) $10 = $9; else {
   ___unlockfile($0);
   $10 = $9;
  }
 } else $10 = ___fseeko_unlocked($0, $1, $2, $3) | 0;
 return $10 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $4 = 0, $5 = 0;
 $2 = __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8align_upEm($1) | 0;
 $4 = $0 + 4096 | 0;
 $5 = HEAP32[$4 >> 2] | 0;
 if (($0 + 4096 - $5 | 0) >>> 0 < $2 >>> 0) $$0 = _malloc($2) | 0; else {
  HEAP32[$4 >> 2] = $5 + $2;
  $$0 = $5;
 }
 return $$0 | 0;
}

function _merged_1v_upsample($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$0 + 452 >> 2] | 0) + 12 >> 2] & 31]($0, $1, HEAP32[$2 >> 2] | 0, $4 + (HEAP32[$5 >> 2] << 2) | 0);
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1;
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1;
 return;
}

function __ZNKSt3__212_GLOBAL__N_111__fake_bindclEv($0) {
 $0 = $0 | 0;
 var $$unpack = 0, $$unpack2 = 0, $10 = 0, $3 = 0;
 $$unpack = HEAP32[$0 + 4 >> 2] | 0;
 $$unpack2 = HEAP32[$0 + 8 >> 2] | 0;
 $3 = (HEAP32[$0 >> 2] | 0) + ($$unpack2 >> 1) | 0;
 if (!($$unpack2 & 1)) $10 = $$unpack; else $10 = HEAP32[(HEAP32[$3 >> 2] | 0) + $$unpack >> 2] | 0;
 FUNCTION_TABLE_vi[$10 & 255]($3);
 return;
}

function __ZNSt3__214__split_bufferIPKN6vision4NodeILi96EEERNS_9allocatorIS5_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -4 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEEC2Em($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if ($1 | 0) {
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8allocateEm($0, $1);
  __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endEm($0, $1);
 }
 return;
}

function __ZNSt3__214__split_bufferIPN6vision4NodeILi96EEERNS_9allocatorIS4_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -4 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 if ($2 | 0) {
  $4 = $2 + 4 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $5 + -1;
  if (!$5) {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 8 >> 2] & 255]($2);
   __ZNSt3__219__shared_weak_count14__release_weakEv($2);
  }
 }
 return;
}

function _arMatrixAlloc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $6 = 0;
 $2 = _malloc(12) | 0;
 do if (!$2) $$0 = 0; else {
  $6 = _malloc(Math_imul($0 << 3, $1) | 0) | 0;
  HEAP32[$2 >> 2] = $6;
  if (!$6) {
   _free($2);
   $$0 = 0;
   break;
  } else {
   HEAP32[$2 + 4 >> 2] = $0;
   HEAP32[$2 + 8 >> 2] = $1;
   $$0 = $2;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__214__split_bufferIN6vision7Point3dIfEERNS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -12 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function __ZNSt3__26vectorItNS_9allocatorItEEE6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, $6 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = (HEAP32[$2 >> 2] | 0) - $4 >> 1;
 $8 = $4;
 if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorItNS_9allocatorItEEE8__appendEm($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) HEAP32[$2 >> 2] = $8 + ($1 << 1);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, $6 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = (HEAP32[$2 >> 2] | 0) - $4 >> 2;
 $8 = $4;
 if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIiNS_9allocatorIiEEE8__appendEm($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) HEAP32[$2 >> 2] = $8 + ($1 << 2);
 return;
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEE6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, $6 = 0, $8 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $6 = (HEAP32[$2 >> 2] | 0) - $4 >> 2;
 $8 = $4;
 if ($6 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIfNS_9allocatorIfEEE8__appendEm($0, $1 - $6 | 0); else if ($6 >>> 0 > $1 >>> 0) HEAP32[$2 >> 2] = $8 + ($1 << 2);
 return;
}

function __ZNSt3__214__split_bufferIN6vision12FeaturePointERNS_9allocatorIS2_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 8 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  __ZN6vision12FeaturePointC2Ev($3);
  $3 = (HEAP32[$2 >> 2] | 0) + 20 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $$0 = 0, $$09 = 0, $6 = 0;
 $$0 = $4;
 $$09 = $1;
 while (1) {
  if (($$09 | 0) == ($2 | 0)) break;
  $6 = HEAP8[$$09 >> 0] | 0;
  HEAP8[$$0 >> 0] = $6 << 24 >> 24 > -1 ? $6 : $3;
  $$0 = $$0 + 1 | 0;
  $$09 = $$09 + 1 | 0;
 }
 return $2 | 0;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0;
 if ((__ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($0) | 0) >>> 0 < $1 >>> 0) __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0); else {
  $4 = __Znwm($1) | 0;
  HEAP32[$0 + 4 >> 2] = $4;
  HEAP32[$0 >> 2] = $4;
  HEAP32[$0 + 8 >> 2] = $4 + $1;
  return;
 }
}

function __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE18__construct_at_endEmRKh($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $3 = 0, $5 = 0;
 $3 = $0 + 8 | 0;
 $$0 = $1;
 $5 = HEAP32[$3 >> 2] | 0;
 do {
  HEAP8[$5 >> 0] = HEAP8[$2 >> 0] | 0;
  $5 = (HEAP32[$3 >> 2] | 0) + 1 | 0;
  HEAP32[$3 >> 2] = $5;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZN6vision22bilinear_interpolationIfEET_RKNS_5ImageEff($0, $1, $2) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 var $3 = 0, $4 = 0, $5 = 0;
 $3 = __ZNK6vision5Image3getEv($0) | 0;
 $4 = __ZNK6vision5Image5widthEv($0) | 0;
 $5 = __ZNK6vision5Image6heightEv($0) | 0;
 return +(+__ZN6vision22bilinear_interpolationIfEET_PKS1_mmmff($3, $4, $5, __ZNK6vision5Image4stepEv($0) | 0, $1, $2));
}

function __ZN10emscripten8internal7InvokerIvJiiEE6invokeEPFviiEii($fn, $args, $args1) {
 $fn = $fn | 0;
 $args = $args | 0;
 $args1 = $args1 | 0;
 var $call = 0, $call3 = 0;
 $call = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args) | 0;
 $call3 = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args1) | 0;
 FUNCTION_TABLE_vii[$fn & 63]($call, $call3);
 return;
}

function __ZNSt3__214__split_bufferIN6vision7match_tERNS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -8 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function __ZN6vision11ScopedTimerC2EPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 __ZN6vision5TimerC2Ev($0);
 $2 = $0 + 16 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($2, $1, __ZNSt3__211char_traitsIcE6lengthEPKc($1) | 0);
 __ZN6vision5Timer5startEv($0);
 return;
}

function __ZSt9terminatev() {
 var $0 = 0, $2 = 0, $5 = 0;
 $0 = ___cxa_get_globals_fast() | 0;
 if ($0 | 0) {
  $2 = HEAP32[$0 >> 2] | 0;
  if ($2 | 0) {
   $5 = $2 + 48 | 0;
   if ((HEAP32[$5 >> 2] & -256 | 0) == 1126902528 ? (HEAP32[$5 + 4 >> 2] | 0) == 1129074247 : 0) __ZSt11__terminatePFvvE(HEAP32[$2 + 12 >> 2] | 0);
  }
 }
 __ZSt11__terminatePFvvE(__ZSt13get_terminatev() | 0);
}

function __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE13queryKeyframeEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $6 = 0, $8 = 0;
 HEAP32[$0 >> 2] = HEAP32[$1 + 64 >> 2];
 $6 = HEAP32[$1 + 68 >> 2] | 0;
 HEAP32[$0 + 4 >> 2] = $6;
 if ($6 | 0) {
  $8 = $6 + 4 | 0;
  HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 1;
 }
 return;
}

function __ZN6vision16SequentialVectorIiEEvPT_iS1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $4 = 0, $5 = 0;
 L1 : do if (($1 | 0) >= 1) {
  HEAP32[$0 >> 2] = $2;
  $$0 = 1;
  $5 = $2;
  while (1) {
   if (($$0 | 0) == ($1 | 0)) break L1;
   $4 = $5 + 1 | 0;
   HEAP32[$0 + ($$0 << 2) >> 2] = $4;
   $$0 = $$0 + 1 | 0;
   $5 = $4;
  }
 } while (0);
 return;
}

function _arUtilRemoveExt($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$011 = 0, $$1 = 0;
 $$0 = -1;
 $$011 = 0;
 L1 : while (1) {
  switch (HEAP8[$0 + $$011 >> 0] | 0) {
  case 0:
   {
    break L1;
    break;
   }
  case 46:
   {
    $$1 = $$011;
    break;
   }
  default:
   $$1 = $$0;
  }
  $$0 = $$1;
  $$011 = $$011 + 1 | 0;
 }
 if (($$0 | 0) != -1) HEAP8[$0 + $$0 >> 0] = 0;
 return 0;
}

function __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEEC2Em($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if ($1 | 0) {
  __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE8allocateEm($0, $1);
  __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE18__construct_at_endEm($0, $1);
 }
 return;
}

function __ZNSt3__218__libcpp_refstringD2Ev($0) {
 $0 = $0 | 0;
 var $3 = 0, $4 = 0, $5 = 0;
 if (__ZNKSt3__218__libcpp_refstring15__uses_refcountEv($0) | 0) {
  $3 = __ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_986(HEAP32[$0 >> 2] | 0) | 0;
  $4 = $3 + 8 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $5 + -1;
  if (($5 + -1 | 0) < 0) __ZdlPv($3);
 }
 return;
}

function __ZNSt3__214__split_bufferINS_4pairIfmEERNS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -8 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -8 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 if (__ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, HEAP32[$1 + 8 >> 2] | 0, 0) | 0) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $1, $2, $3);
 return;
}

function __ZN10emscripten8internal7InvokerIvJifEE6invokeEPFvifEif($fn, $args, $args1) {
 $fn = $fn | 0;
 $args = $args | 0;
 $args1 = +$args1;
 var $call = 0, $call3 = 0.0;
 $call = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args) | 0;
 $call3 = +__ZN10emscripten8internal11BindingTypeIfE12fromWireTypeEf($args1);
 FUNCTION_TABLE_vid[$fn & 3]($call, $call3);
 return;
}

function __ZN10emscripten8internal7InvokerIvJidEE6invokeEPFvidEid($fn, $args, $args1) {
 $fn = $fn | 0;
 $args = $args | 0;
 $args1 = +$args1;
 var $call = 0, $call3 = 0.0;
 $call = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args) | 0;
 $call3 = +__ZN10emscripten8internal11BindingTypeIdE12fromWireTypeEd($args1);
 FUNCTION_TABLE_vid[$fn & 3]($call, $call3);
 return;
}

function _arUtilGetPixelSize($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 switch ($0 | 0) {
 case 1:
 case 0:
  {
   $$0 = 3;
   break;
  }
 case 6:
 case 4:
 case 3:
 case 2:
  {
   $$0 = 4;
   break;
  }
 case 14:
 case 13:
 case 12:
 case 5:
  {
   $$0 = 1;
   break;
  }
 case 11:
 case 10:
 case 9:
 case 8:
 case 7:
  {
   $$0 = 2;
   break;
  }
 default:
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE6resizeEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $4 = 0, $5 = 0, $7 = 0;
 $2 = $0 + 4 | 0;
 $4 = HEAP32[$0 >> 2] | 0;
 $5 = (HEAP32[$2 >> 2] | 0) - $4 | 0;
 $7 = $4;
 if ($5 >>> 0 < $1 >>> 0) __ZNSt3__26vectorIhNS_9allocatorIhEEE8__appendEm($0, $1 - $5 | 0); else if ($5 >>> 0 > $1 >>> 0) HEAP32[$2 >> 2] = $7 + $1;
 return;
}

function __ZNSt3__214__split_bufferIPNS_6locale5facetERNS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 8 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  HEAP32[$3 >> 2] = 0;
  $3 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZNSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 4 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  __ZN6vision12FeaturePointC2Ev($3);
  $3 = (HEAP32[$2 >> 2] | 0) + 20 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function ___uflow($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 if (!(___toread($0) | 0)) if ((FUNCTION_TABLE_iiii[HEAP32[$0 + 32 >> 2] & 63]($0, $1, 1) | 0) == 1) $$0 = HEAPU8[$1 >> 0] | 0; else $$0 = -1; else $$0 = -1;
 STACKTOP = sp;
 return $$0 | 0;
}

function _sn_write($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0, $6 = 0, $7 = 0, $spec$select = 0;
 $5 = $0 + 20 | 0;
 $6 = HEAP32[$5 >> 2] | 0;
 $7 = (HEAP32[$0 + 16 >> 2] | 0) - $6 | 0;
 $spec$select = $7 >>> 0 > $2 >>> 0 ? $2 : $7;
 _memcpy($6 | 0, $1 | 0, $spec$select | 0) | 0;
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + $spec$select;
 return $2 | 0;
}

function ___memrchr($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$in = 0, $4 = 0;
 L1 : do if (!$2) $$0 = 0; else {
  $4 = $1 & 255;
  $$in = $2;
  while (1) {
   $$in = $$in + -1 | 0;
   if ((HEAP8[$0 + $$in >> 0] | 0) == $4 << 24 >> 24) break;
   if (!$$in) {
    $$0 = 0;
    break L1;
   }
  }
  $$0 = $0 + $$in | 0;
 } while (0);
 return $$0 | 0;
}

function _reset_input_controller($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 + 436 >> 2] | 0;
 HEAP32[$2 >> 2] = 70;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 HEAP32[$2 + 24 >> 2] = 1;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 255]($0);
 FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 + 440 >> 2] >> 2] & 255]($0);
 HEAP32[$0 + 160 >> 2] = 0;
 return;
}

function __Znwm($0) {
 $0 = $0 | 0;
 var $$lcssa = 0, $2 = 0, $4 = 0, $spec$store$select = 0;
 $spec$store$select = ($0 | 0) == 0 ? 1 : $0;
 while (1) {
  $2 = _malloc($spec$store$select) | 0;
  if ($2 | 0) {
   $$lcssa = $2;
   break;
  }
  $4 = __ZSt15get_new_handlerv() | 0;
  if (!$4) {
   $$lcssa = 0;
   break;
  }
  FUNCTION_TABLE_v[$4 & 3]();
 }
 return $$lcssa | 0;
}

function __ZNSt3__214__split_bufferIN6vision5ImageERNS_9allocatorIS2_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 8 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  __ZN6vision5ImageC2Ev($3);
  $3 = (HEAP32[$2 >> 2] | 0) + 32 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function _jinit_input_controller($0) {
 $0 = $0 | 0;
 var $4 = 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 0, 28) | 0;
 HEAP32[$0 + 436 >> 2] = $4;
 HEAP32[$4 >> 2] = 70;
 HEAP32[$4 + 4 >> 2] = 117;
 HEAP32[$4 + 8 >> 2] = 118;
 HEAP32[$4 + 12 >> 2] = 119;
 HEAP32[$4 + 16 >> 2] = 0;
 HEAP32[$4 + 20 >> 2] = 0;
 HEAP32[$4 + 24 >> 2] = 1;
 return;
}

function __ZNSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 4 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  __ZN6vision7Point2dIfEC2Ev($3);
  $3 = (HEAP32[$2 >> 2] | 0) + 8 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZNSt3__219__shared_weak_count14__release_weakEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $7 = 0;
 $1 = $0 + 8 | 0;
 if (!(HEAP32[$1 >> 2] | 0)) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 255]($0); else {
  $7 = HEAP32[$1 >> 2] | 0;
  HEAP32[$1 >> 2] = $7 + -1;
  if (!$7) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 16 >> 2] & 255]($0);
 }
 return;
}

function __ZN6vision9MaxIndex5IfEEiPKT_($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0, $$2 = 0;
 $$0 = +HEAPF32[$0 + 4 >> 2] > +HEAPF32[$0 >> 2] & 1;
 $$1 = +HEAPF32[$0 + 8 >> 2] > +HEAPF32[$0 + ($$0 << 2) >> 2] ? 2 : $$0;
 $$2 = +HEAPF32[$0 + 12 >> 2] > +HEAPF32[$0 + ($$1 << 2) >> 2] ? 3 : $$1;
 return (+HEAPF32[$0 + 16 >> 2] > +HEAPF32[$0 + ($$2 << 2) >> 2] ? 4 : $$2) | 0;
}

function __ZNSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 4 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  HEAP32[$3 >> 2] = 0;
  $3 = (HEAP32[$2 >> 2] | 0) + 4 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZN6vision4NodeILi96EEC2Ei($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 HEAP32[$0 >> 2] = $1;
 HEAP8[$0 + 100 >> 0] = 1;
 $3 = $0 + 104 | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 0;
 HEAP32[$3 + 8 >> 2] = 0;
 HEAP32[$3 + 12 >> 2] = 0;
 HEAP32[$3 + 16 >> 2] = 0;
 HEAP32[$3 + 20 >> 2] = 0;
 __ZN6vision10ZeroVectorIhEEvPT_m($0 + 4 | 0, 96);
 return;
}

function _ferror($0) {
 $0 = $0 | 0;
 var $$lobit = 0, $$lobit9 = 0, $phitmp = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($0) | 0) == 0;
  $$lobit = (HEAP32[$0 >> 2] | 0) >>> 5 & 1;
  if ($phitmp) $$lobit9 = $$lobit; else {
   ___unlockfile($0);
   $$lobit9 = $$lobit;
  }
 } else $$lobit9 = (HEAP32[$0 >> 2] | 0) >>> 5 & 1;
 return $$lobit9 | 0;
}

function _matrixCopy($src, $dst) {
 $src = $src | 0;
 $dst = $dst | 0;
 var $i$0 = 0, $j$0 = 0;
 $i$0 = 0;
 while (1) {
  if (($i$0 | 0) == 3) break;
  $j$0 = 0;
  while (1) {
   if (($j$0 | 0) == 4) break;
   HEAPF64[$dst + ($i$0 << 5) + ($j$0 << 3) >> 3] = +HEAPF64[$src + ($i$0 << 5) + ($j$0 << 3) >> 3];
   $j$0 = $j$0 + 1 | 0;
  }
  $i$0 = $i$0 + 1 | 0;
 }
 return;
}

function __ZNSt3__214__split_bufferItRNS_9allocatorItEEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -2 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -4 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -4 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 $7 = HEAP32[$0 >> 2] | 0;
 if ($7 | 0) __ZdlPv($7);
 return;
}

function __ZNSt3__210shared_ptrIhED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 if ($2 | 0) {
  $4 = $2 + 4 | 0;
  $5 = HEAP32[$4 >> 2] | 0;
  HEAP32[$4 >> 2] = $5 + -1;
  if (!$5) {
   FUNCTION_TABLE_vi[HEAP32[(HEAP32[$2 >> 2] | 0) + 8 >> 2] & 255]($2);
   __ZNSt3__219__shared_weak_count14__release_weakEv($2);
  }
 }
 return;
}

function __ZNKSt3__27collateIwE7do_hashEPKwS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$020 = 0, $6 = 0, $7 = 0;
 $$0 = 0;
 $$020 = $1;
 while (1) {
  if (($$020 | 0) == ($2 | 0)) break;
  $6 = (HEAP32[$$020 >> 2] | 0) + ($$0 << 4) | 0;
  $7 = $6 & -268435456;
  $$0 = ($7 >>> 24 | $7) ^ $6;
  $$020 = $$020 + 4 | 0;
 }
 return $$0 | 0;
}

function __ZNKSt3__27collateIwE12do_transformEPKwS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initIPKwEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0, $2, $3);
 return;
}

function __ZNKSt3__27collateIcE12do_transformEPKcS3_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initIPKcEENS_9enable_ifIXsr21__is_forward_iteratorIT_EE5valueEvE4typeESA_SA_($0, $2, $3);
 return;
}

function __ZNKSt3__27collateIcE7do_hashEPKcS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$020 = 0, $7 = 0, $8 = 0;
 $$0 = 0;
 $$020 = $1;
 while (1) {
  if (($$020 | 0) == ($2 | 0)) break;
  $7 = ($$0 << 4) + (HEAP8[$$020 >> 0] | 0) | 0;
  $8 = $7 & -268435456;
  $$0 = ($8 >>> 24 | $8) ^ $7;
  $$020 = $$020 + 1 | 0;
 }
 return $$0 | 0;
}

function __ZNSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 4 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  __ZN6vision5ImageC2Ev($3);
  $3 = (HEAP32[$2 >> 2] | 0) + 32 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZNK10__cxxabiv112_GLOBAL__N_111string_pair4sizeEv($0) {
 $0 = $0 | 0;
 var $15 = 0, $16 = 0, $2 = 0, $9 = 0;
 $2 = HEAP8[$0 + 11 >> 0] | 0;
 if ($2 << 24 >> 24 < 0) $15 = HEAP32[$0 + 4 >> 2] | 0; else $15 = $2 & 255;
 $9 = HEAP8[$0 + 12 + 11 >> 0] | 0;
 if ($9 << 24 >> 24 < 0) $16 = HEAP32[$0 + 16 >> 2] | 0; else $16 = $9 & 255;
 return $16 + $15 | 0;
}

function __ZN6vision40Homography3PointsGeometricallyConsistentIfEEbPKT_S3_S3_S3_S3_S3_($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $7 = 0;
 $7 = +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($0, $1, $2) > 0.0;
 return $7 ^ +__ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($3, $4, $5) > 0.0 ^ 1 | 0;
}

function __ZNSt3__25ctypeIcEC2EPKtbm($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $10 = 0, $7 = 0;
 HEAP32[$0 + 4 >> 2] = $3 + -1;
 HEAP32[$0 >> 2] = 16856;
 $7 = $0 + 8 | 0;
 HEAP32[$7 >> 2] = $1;
 HEAP8[$0 + 12 >> 0] = $2 & 1;
 if (!$1) {
  $10 = __ZNSt3__25ctypeIcE13classic_tableEv() | 0;
  HEAP32[$7 >> 2] = $10;
 }
 return;
}

function __ZN6vision25bilinear_downsample_pointERfS0_S0_fffi($0, $1, $2, $3, $4, $5, $6) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = +$3;
 $4 = +$4;
 $5 = +$5;
 $6 = $6 | 0;
 var $11 = 0.0, $9 = 0.0;
 $9 = 1.0 / +(1 << $6 | 0);
 $11 = $9 * .5 + -.5;
 HEAPF32[$0 >> 2] = $9 * $3 + $11;
 HEAPF32[$1 >> 2] = $9 * $4 + $11;
 HEAPF32[$2 >> 2] = $9 * $5;
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $11 = 0, $6 = 0;
 $6 = $0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 $11 = $0 + 8 | 0;
 HEAP32[$11 >> 2] = -1;
 HEAP32[$11 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 var $11 = 0, $6 = 0;
 $6 = $0;
 HEAP32[$6 >> 2] = 0;
 HEAP32[$6 + 4 >> 2] = 0;
 $11 = $0 + 8 | 0;
 HEAP32[$11 >> 2] = -1;
 HEAP32[$11 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__213unordered_mapIiP14AR2SurfaceSetTNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS2_EEEEED2Ev($this) {
 $this = $this | 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiP14AR2SurfaceSetTEENS_22__unordered_map_hasherIiS4_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS4_NS_8equal_toIiEELb1EEENS_9allocatorIS4_EEED2Ev($this);
 return;
}

function __ZNKSt3__220__time_get_c_storageIwE3__xEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55560] | 0)) if (___cxa_guard_acquire(55560) | 0) {
  HEAP32[14509] = 0;
  HEAP32[14510] = 0;
  HEAP32[14511] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58036, 15184, __ZNSt3__211char_traitsIwE6lengthEPKw(15184) | 0);
 }
 return 58036;
}

function __ZNKSt3__220__time_get_c_storageIwE3__rEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55568] | 0)) if (___cxa_guard_acquire(55568) | 0) {
  HEAP32[14512] = 0;
  HEAP32[14513] = 0;
  HEAP32[14514] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58048, 15220, __ZNSt3__211char_traitsIwE6lengthEPKw(15220) | 0);
 }
 return 58048;
}

function __ZNKSt3__220__time_get_c_storageIwE3__cEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55576] | 0)) if (___cxa_guard_acquire(55576) | 0) {
  HEAP32[14515] = 0;
  HEAP32[14516] = 0;
  HEAP32[14517] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58060, 15268, __ZNSt3__211char_traitsIwE6lengthEPKw(15268) | 0);
 }
 return 58060;
}

function __ZNKSt3__220__time_get_c_storageIwE3__XEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55552] | 0)) if (___cxa_guard_acquire(55552) | 0) {
  HEAP32[14506] = 0;
  HEAP32[14507] = 0;
  HEAP32[14508] = 0;
  __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm(58024, 15148, __ZNSt3__211char_traitsIwE6lengthEPKw(15148) | 0);
 }
 return 58024;
}

function __ZNKSt3__220__time_get_c_storageIcE3__xEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55480] | 0)) if (___cxa_guard_acquire(55480) | 0) {
  HEAP32[14492] = 0;
  HEAP32[14493] = 0;
  HEAP32[14494] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(57968, 47192, __ZNSt3__211char_traitsIcE6lengthEPKc(47192) | 0);
 }
 return 57968;
}

function __ZNKSt3__220__time_get_c_storageIcE3__rEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55488] | 0)) if (___cxa_guard_acquire(55488) | 0) {
  HEAP32[14495] = 0;
  HEAP32[14496] = 0;
  HEAP32[14497] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(57980, 47201, __ZNSt3__211char_traitsIcE6lengthEPKc(47201) | 0);
 }
 return 57980;
}

function __ZNKSt3__220__time_get_c_storageIcE3__cEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55496] | 0)) if (___cxa_guard_acquire(55496) | 0) {
  HEAP32[14498] = 0;
  HEAP32[14499] = 0;
  HEAP32[14500] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(57992, 47213, __ZNSt3__211char_traitsIcE6lengthEPKc(47213) | 0);
 }
 return 57992;
}

function __ZNKSt3__220__time_get_c_storageIcE3__XEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55472] | 0)) if (___cxa_guard_acquire(55472) | 0) {
  HEAP32[14489] = 0;
  HEAP32[14490] = 0;
  HEAP32[14491] = 0;
  __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm(57956, 47183, __ZNSt3__211char_traitsIcE6lengthEPKc(47183) | 0);
 }
 return 57956;
}

function __ZN6vision16RobustHomographyIfEC2Efiii($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var dest = 0, stop = 0;
 dest = $0;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN6vision16RobustHomographyIfE4initEfiii($0, $1, $2, $3, $4);
 return;
}

function _wmemcpy($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$058 = 0, $$067 = 0, $$09 = 0;
 if ($2 | 0) {
  $$058 = $2;
  $$067 = $1;
  $$09 = $0;
  while (1) {
   $$058 = $$058 + -1 | 0;
   HEAP32[$$09 >> 2] = HEAP32[$$067 >> 2];
   if (!$$058) break; else {
    $$067 = $$067 + 4 | 0;
    $$09 = $$09 + 4 | 0;
   }
  }
 }
 return $0 | 0;
}

function _snprintf($0, $1, $2, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $varargs = $varargs | 0;
 var $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $3 = sp;
 HEAP32[$3 >> 2] = $varargs;
 $4 = _vsnprintf($0, $1, $2, $3) | 0;
 STACKTOP = sp;
 return $4 | 0;
}

function __ZNSt3__213unordered_mapIiNS_6vectorIiNS_9allocatorIiEEEENS_4hashIiEENS_8equal_toIiEENS2_INS_4pairIKiS4_EEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIiNS_6vectorIiNS_9allocatorIiEEEEEENS_22__unordered_map_hasherIiS6_NS_4hashIiEELb1EEENS_21__unordered_map_equalIiS6_NS_8equal_toIiEELb1EEENS3_IS6_EEED2Ev($0);
 return;
}

function _rewind($0) {
 $0 = $0 | 0;
 var $phitmp = 0;
 if ((HEAP32[$0 + 76 >> 2] | 0) > -1) {
  $phitmp = (___lockfile($0) | 0) == 0;
  ___fseeko_unlocked($0, 0, 0, 0) | 0;
  HEAP32[$0 >> 2] = HEAP32[$0 >> 2] & -33;
  if (!$phitmp) ___unlockfile($0);
 } else {
  ___fseeko_unlocked($0, 0, 0, 0) | 0;
  HEAP32[$0 >> 2] = HEAP32[$0 >> 2] & -33;
 }
 return;
}

function __ZN6vision25GaussianScaleSpacePyramid9configureEii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $10 = 0.0, $exp2 = 0.0;
 HEAP32[$0 + 16 >> 2] = $1;
 HEAP32[$0 + 20 >> 2] = $2;
 $exp2 = +_llvm_exp2_f32(+(1.0 / +($2 + -1 | 0)));
 HEAPF32[$0 + 24 >> 2] = $exp2;
 $10 = 1.0 / +Math_log(+$exp2);
 HEAPF32[$0 + 28 >> 2] = $10;
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS1_INS_4pairIfmEENS_9allocatorIS3_EEEENS4_IS6_EEEERNS4_IS8_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 8 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 * 12 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 * 12 | 0);
 return;
}

function _jpeg_idct_1x1($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $17 = 0;
 $17 = (HEAP32[$0 + 324 >> 2] | 0) + 128 + (((Math_imul(HEAP32[HEAP32[$1 + 80 >> 2] >> 2] | 0, HEAP16[$2 >> 1] | 0) | 0) + 4 | 0) >>> 3 & 1023) | 0;
 HEAP8[(HEAP32[$3 >> 2] | 0) + $4 >> 0] = HEAP8[$17 >> 0] | 0;
 return;
}

function __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 8 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  HEAP8[$3 >> 0] = 0;
  $3 = (HEAP32[$2 >> 2] | 0) + 1 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZN10emscripten8constantIiEEvPKcRKT_($name, $v) {
 $name = $name | 0;
 $v = $v | 0;
 var $call = 0;
 $call = __ZN10emscripten8internal6TypeIDIRKiE3getEv() | 0;
 __embind_register_constant($name | 0, $call | 0, +(+__ZN10emscripten8internal14asGenericValueIiEEdT_(__ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi($v) | 0)));
 return;
}

function _arDeleteHandle($0) {
 $0 = $0 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 if (!$0) $$0 = -1; else {
  $2 = $0 + 7062408 | 0;
  $3 = HEAP32[$2 >> 2] | 0;
  if ($3 | 0) {
   _arImageProcFinal($3);
   HEAP32[$2 >> 2] = 0;
  }
  _free(HEAP32[$0 + 4834144 >> 2] | 0);
  _free(HEAP32[$0 + 4834148 >> 2] | 0);
  _free($0);
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6insertEmPKcm($0, $1, $2, __ZNSt3__211char_traitsIcE6lengthEPKc($2) | 0) | 0;
}

function __ZN10emscripten8constantIdEEvPKcRKT_($name, $v) {
 $name = $name | 0;
 $v = $v | 0;
 var $call = 0;
 $call = __ZN10emscripten8internal6TypeIDIRKdE3getEv() | 0;
 __embind_register_constant($name | 0, $call | 0, +(+__ZN10emscripten8internal14asGenericValueIdEEdT_(+__ZN10emscripten8internal11BindingTypeIdE10toWireTypeERKd($v))));
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairC2ERKS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($0, $1);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEEC2ERKS7_($0 + 12 | 0, $1 + 12 | 0);
 return;
}

function _start_input_pass_33($0) {
 $0 = $0 | 0;
 var $4 = 0;
 _per_scan_setup_34($0);
 _latch_quant_tables($0);
 FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 + 444 >> 2] >> 2] & 255]($0);
 $4 = $0 + 428 | 0;
 FUNCTION_TABLE_vi[HEAP32[HEAP32[$4 >> 2] >> 2] & 255]($0);
 HEAP32[HEAP32[$0 + 436 >> 2] >> 2] = HEAP32[(HEAP32[$4 >> 2] | 0) + 4 >> 2];
 return;
}

function __ZN6vision18BinomialPyramid32fD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 13484;
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($0 + 56 | 0);
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($0 + 44 | 0);
 __ZNSt3__213__vector_baseItNS_9allocatorItEEED2Ev($0 + 32 | 0);
 __ZN6vision25GaussianScaleSpacePyramidD2Ev($0);
 return;
}

function _abort_message($0, $varargs) {
 $0 = $0 | 0;
 $varargs = $varargs | 0;
 var $1 = 0, $2 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 HEAP32[$1 >> 2] = $varargs;
 $2 = HEAP32[3454] | 0;
 _vfprintf($2, $0, $1) | 0;
 _fputc(10, $2) | 0;
 _abort();
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = $0 + 4 | 0;
 $$0 = $1;
 $3 = HEAP32[$2 >> 2] | 0;
 do {
  HEAP8[$3 >> 0] = 0;
  $3 = (HEAP32[$2 >> 2] | 0) + 1 | 0;
  HEAP32[$2 >> 2] = $3;
  $$0 = $$0 + -1 | 0;
 } while (($$0 | 0) != 0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEEC2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 HEAP32[$0 >> 2] = 14180;
 __ZNSt3__26localeC2Ev($0 + 4 | 0);
 $2 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEEC2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 HEAP32[$0 >> 2] = 14116;
 __ZNSt3__26localeC2Ev($0 + 4 | 0);
 $2 = $0 + 8 | 0;
 HEAP32[$2 >> 2] = 0;
 HEAP32[$2 + 4 >> 2] = 0;
 HEAP32[$2 + 8 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 20 >> 2] = 0;
 return;
}

function ___cxa_get_globals_fast() {
 var $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!(_pthread_once(58312, 2) | 0)) {
  $3 = _pthread_getspecific(HEAP32[14579] | 0) | 0;
  STACKTOP = sp;
  return $3 | 0;
 } else _abort_message(49179, sp);
 return 0;
}

function __ZNSt3__214__split_bufferIhRNS_9allocatorIhEEED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0;
 $2 = HEAP32[$0 + 4 >> 2] | 0;
 $3 = $0 + 8 | 0;
 $4 = HEAP32[$3 >> 2] | 0;
 while (1) {
  if (($4 | 0) == ($2 | 0)) break;
  $6 = $4 + -1 | 0;
  HEAP32[$3 >> 2] = $6;
  $4 = $6;
 }
 __ZdlPv(HEAP32[$0 >> 2] | 0);
 return;
}

function __ZNSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 4 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 * 12 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 * 12 | 0);
 return;
}

function __ZNSt3__214__split_bufferINS_6vectorINS_4pairIfmEENS_9allocatorIS3_EEEERNS4_IS6_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 8 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 * 12 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 * 12 | 0);
 return;
}

function __ZN6vision5ImageC2ERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = 0;
 __ZN6vision5Image11shallowCopyERKS0_($0, $1);
 return;
}

function _a_ctz_l_556($0) {
 $0 = $0 | 0;
 var $$068 = 0, $$07 = 0, $$09 = 0, $4 = 0;
 if (!$0) $$07 = 32; else if (!($0 & 1)) {
  $$068 = $0;
  $$09 = 0;
  while (1) {
   $4 = $$09 + 1 | 0;
   if (!($$068 & 2)) {
    $$068 = $$068 >>> 1;
    $$09 = $4;
   } else {
    $$07 = $4;
    break;
   }
  }
 } else $$07 = 0;
 return $$07 | 0;
}

function __ZN6vision14BinarykMedoidsILi96EED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($0 + 48 | 0);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($0 + 36 | 0);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($0 + 24 | 0);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($0 + 12 | 0);
 return;
}

function _sprintf($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 $3 = _vsprintf($0, $1, $2) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function _fprintf($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 $3 = _vfprintf($0, $1, $2) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function __ZN6vision5Timer5startEv($0) {
 $0 = $0 | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $1 = sp;
 _gettimeofday($1 | 0, 0) | 0;
 HEAPF64[$0 >> 3] = +(HEAP32[$1 + 4 >> 2] | 0) * 1.0e-06 + +(HEAP32[$1 >> 2] | 0);
 STACKTOP = sp;
 return;
}

function _sscanf($0, $1, $varargs) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $varargs = $varargs | 0;
 var $2 = 0, $3 = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 $2 = sp;
 HEAP32[$2 >> 2] = $varargs;
 $3 = _vsscanf($0, $1, $2) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function __ZNSt3__213__vector_baseIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  if (($1 | 0) == ($0 + 16 | 0)) {
   HEAP8[$0 + 128 >> 0] = 0;
   break;
  } else {
   __ZdlPv($1);
   break;
  }
 } while (0);
 return;
}

function _arParamLTFree($0) {
 $0 = $0 | 0;
 var $$0 = 0, $2 = 0;
 if (!$0) $$0 = -1; else {
  $2 = HEAP32[$0 >> 2] | 0;
  if (!$2) $$0 = -1; else {
   _free(HEAP32[$2 + 184 >> 2] | 0);
   _free(HEAP32[(HEAP32[$0 >> 2] | 0) + 188 >> 2] | 0);
   _free(HEAP32[$0 >> 2] | 0);
   HEAP32[$0 >> 2] = 0;
   $$0 = 0;
  }
 }
 return $$0 | 0;
}

function __ZNSt3__212_GLOBAL__N_111__fake_bindC2EMNS_6locale2idEFvvEPS3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$unpack = 0, $$unpack5 = 0;
 $$unpack = HEAP32[$1 >> 2] | 0;
 $$unpack5 = HEAP32[$1 + 4 >> 2] | 0;
 HEAP32[$0 >> 2] = $2;
 HEAP32[$0 + 4 >> 2] = $$unpack;
 HEAP32[$0 + 8 >> 2] = $$unpack5;
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 var $2 = 0, $4 = 0, $5 = 0, $7 = 0;
 $2 = HEAP32[$0 + 8 >> 2] | 0;
 if (!$2) $7 = 1; else {
  $4 = ___uselocale($2) | 0;
  $5 = ___ctype_get_mb_cur_max() | 0;
  if (!$4) $7 = $5; else {
   ___uselocale($4) | 0;
   $7 = $5;
  }
 }
 return $7 | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_below_dstEPNS_19__dynamic_cast_infoEPKvi($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $7 = 0;
 if ((HEAP32[$1 + 4 >> 2] | 0) == ($2 | 0)) {
  $7 = $1 + 28 | 0;
  if ((HEAP32[$7 >> 2] | 0) != 1) HEAP32[$7 >> 2] = $3;
 }
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 _free($0);
 if (!(_pthread_setspecific(HEAP32[14579] | 0, 0) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(49278, sp);
}

function __ZNKSt3__210moneypunctIwLb1EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0$i$i = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 $$0$i$i = 0;
 while (1) {
  if (($$0$i$i | 0) == 3) break;
  HEAP32[$0 + ($$0$i$i << 2) >> 2] = 0;
  $$0$i$i = $$0$i$i + 1 | 0;
 }
 return;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv($this) {
 $this = $this | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv() | 0;
}

function __ZNSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEEC2EmRKS8_RKS9_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = HEAP32[$1 >> 2];
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $0 + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0, $9 = 0;
 $4 = $0;
 HEAP32[$4 >> 2] = 0;
 HEAP32[$4 + 4 >> 2] = 0;
 $9 = $0 + 8 | 0;
 HEAP32[$9 >> 2] = -1;
 HEAP32[$9 + 4 >> 2] = -1;
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6appendEPKcm($0, $1, __ZNSt3__211char_traitsIcE6lengthEPKc($1) | 0) | 0;
}

function __ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$07 = 0;
 $$0 = $3;
 $$07 = $1;
 while (1) {
  if (($$07 | 0) == ($2 | 0)) break;
  HEAP8[$$0 >> 0] = HEAP8[$$07 >> 0] | 0;
  $$0 = $$0 + 1 | 0;
  $$07 = $$07 + 1 | 0;
 }
 return $2 | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getTypesEv($this) {
 $this = $this | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv() | 0;
}

function _arVecAlloc($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $4 = 0;
 $1 = _malloc(8) | 0;
 do if (!$1) $$0 = 0; else {
  $4 = _malloc($0 << 3) | 0;
  HEAP32[$1 >> 2] = $4;
  if (!$4) {
   _free($1);
   $$0 = 0;
   break;
  } else {
   HEAP32[$1 + 4 >> 2] = $0;
   $$0 = $1;
   break;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 4 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 * 12 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 * 12 | 0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE6assignEPKcm($0, $1, __ZNSt3__211char_traitsIcE6lengthEPKc($1) | 0);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEEC2Em($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if ($1 | 0) {
  __ZNSt3__26vectorIiNS_9allocatorIiEEE8allocateEm($0, $1);
  __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endEm($0, $1);
 }
 return;
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEEC2Em($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 if ($1 | 0) {
  __ZNSt3__26vectorIfNS_9allocatorIfEEE8allocateEm($0, $1);
  __ZNSt3__26vectorIfNS_9allocatorIfEEE18__construct_at_endEm($0, $1);
 }
 return;
}

function __ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $$0 = 0, $$07 = 0;
 $$0 = $3;
 $$07 = $1;
 while (1) {
  if (($$07 | 0) == ($2 | 0)) break;
  HEAP32[$$0 >> 2] = HEAP8[$$07 >> 0];
  $$0 = $$0 + 4 | 0;
  $$07 = $$07 + 1 | 0;
 }
 return $2 | 0;
}

function __ZNSt3__28ios_baseD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 14100;
 __ZNSt3__28ios_base16__call_callbacksENS0_5eventE($0, 0);
 __ZNSt3__26localeD2Ev($0 + 28 | 0);
 _free(HEAP32[$0 + 32 >> 2] | 0);
 _free(HEAP32[$0 + 36 >> 2] | 0);
 _free(HEAP32[$0 + 48 >> 2] | 0);
 _free(HEAP32[$0 + 60 >> 2] | 0);
 return;
}

function __ZN6vision25GaussianScaleSpacePyramidC2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 HEAP32[$0 >> 2] = 13500;
 $1 = $0 + 4 | 0;
 HEAP32[$1 >> 2] = 0;
 HEAP32[$1 + 4 >> 2] = 0;
 HEAP32[$1 + 8 >> 2] = 0;
 HEAP32[$1 + 12 >> 2] = 0;
 HEAP32[$1 + 16 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 HEAP32[$1 + 24 >> 2] = 0;
 return;
}

function __ZN6vision10numOctavesEiii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0, $$010 = 0, $$09 = 0;
 $$0 = 0;
 $$010 = $1;
 $$09 = $0;
 while (1) {
  if (($$010 | 0) < ($2 | 0) | ($$09 | 0) < ($2 | 0)) break;
  $$0 = $$0 + 1 | 0;
  $$010 = $$010 >> 1;
  $$09 = $$09 >> 1;
 }
 return $$0 | 0;
}

function _testSetjmp(id, table, size) {
 id = id | 0;
 table = table | 0;
 size = size | 0;
 var i = 0, curr = 0;
 while ((i | 0) < (size | 0)) {
  curr = HEAP32[table + (i << 3) >> 2] | 0;
  if (!curr) break;
  if ((curr | 0) == (id | 0)) return HEAP32[table + ((i << 3) + 4) >> 2] | 0;
  i = i + 1 | 0;
 }
 return 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE10deallocateEPS8_m($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm(HEAP32[$0 >> 2] | 0, $1, $2 << 4);
 return;
}

function __ZNSt3__213unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__212__hash_tableINS_17__hash_value_typeIjjEENS_22__unordered_map_hasherIjS2_NS_4hashIjEELb1EEENS_21__unordered_map_equalIjS2_NS_8equal_toIjEELb1EEENS_9allocatorIS2_EEED2Ev($0);
 return;
}

function __ZN6vision21HoughSimilarityVotingD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($0 + 124 | 0);
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($0 + 112 | 0);
 __ZNSt3__213unordered_mapIjjNS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjjEEEEED2Ev($0 + 92 | 0);
 return;
}

function dynCall_iiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 a8 = a8 | 0;
 return FUNCTION_TABLE_iiiiiiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0, a8 | 0) | 0;
}

function __ZN6vision13LinePointSideIfEET_PKS1_S3_S3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $4 = 0.0, $9 = 0.0;
 $4 = +HEAPF32[$0 >> 2];
 $9 = +HEAPF32[$0 + 4 >> 2];
 return +((+HEAPF32[$1 >> 2] - $4) * (+HEAPF32[$2 + 4 >> 2] - $9) - (+HEAPF32[$1 + 4 >> 2] - $9) * (+HEAPF32[$2 >> 2] - $4));
}

function __ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $8 = 0;
 $8 = _catopen((HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $8 = 0;
 $8 = _catopen((HEAP8[$1 + 11 >> 0] | 0) < 0 ? HEAP32[$1 >> 2] | 0 : $1, 1) | 0;
 return $8 >>> (($8 | 0) != (-1 | 0) & 1) | 0;
}

function __ZNSt3__214__split_bufferINS_4pairIfiEERNS_9allocatorIS2_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 8 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 << 3 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 << 3);
 return;
}

function __ZNKSt3__28numpunctIwE12do_falsenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm($0, 16980, __ZNSt3__211char_traitsIwE6lengthEPKw(16980) | 0);
 return;
}

function __ZNKSt3__28numpunctIcE12do_falsenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($0, 50831, __ZNSt3__211char_traitsIcE6lengthEPKc(50831) | 0);
 return;
}

function _get_buff_380($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0;
 L1 : while (1) {
  $2 = _fgets($0, 256, $1) | 0;
  if (!$2) {
   $$0 = 0;
   break;
  }
  switch (HEAP8[$0 >> 0] | 0) {
  case 35:
  case 10:
   break;
  default:
   {
    $$0 = $2;
    break L1;
   }
  }
 }
 return $$0 | 0;
}

function _get_buff_345($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0;
 L1 : while (1) {
  $2 = _fgets($0, 256, $1) | 0;
  if (!$2) {
   $$0 = 0;
   break;
  }
  switch (HEAP8[$0 >> 0] | 0) {
  case 35:
  case 10:
   break;
  default:
   {
    $$0 = $2;
    break L1;
   }
  }
 }
 return $$0 | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKc($0) {
 $0 = $0 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEE7replaceEmmPKcm($0, __ZNSt3__211char_traitsIcE6lengthEPKc(51050) | 0);
 return;
}

function __ZNKSt3__28numpunctIwE11do_truenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEPKwm($0, 17004, __ZNSt3__211char_traitsIwE6lengthEPKw(17004) | 0);
 return;
}

function __ZNKSt3__28numpunctIcE11do_truenameEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm($0, 50837, __ZNSt3__211char_traitsIcE6lengthEPKc(50837) | 0);
 return;
}

function __ZN6vision20VisualDatabaseFacadeC2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 HEAP32[$0 >> 2] = 0;
 $1 = __Znwm(24) | 0;
 __ZN6vision18VisualDatabaseImplC2Ev($1);
 $2 = HEAP32[$0 >> 2] | 0;
 HEAP32[$0 >> 2] = $1;
 if ($2 | 0) {
  __ZN6vision18VisualDatabaseImplD2Ev($2);
  __ZdlPv($2);
 }
 return;
}

function __ZNSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE10deallocateEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $4 = $0 + 4 | 0;
  HEAP32[$4 >> 2] = $1;
  __ZdlPv($1);
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
 }
 return;
}

function __ZN6vision23bilinear_upsample_pointERfS0_ffi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 $3 = +$3;
 $4 = $4 | 0;
 var $10 = 0.0, $8 = 0.0;
 $8 = +_ldexp(1.0, $4 + -1 | 0) + -.5;
 $10 = +(1 << $4 | 0);
 HEAPF32[$0 >> 2] = $10 * $2 + $8;
 HEAPF32[$1 >> 2] = $10 * $3 + $8;
 return;
}

function __ZN6vision18BinomialPyramid32fC2Ev($0) {
 $0 = $0 | 0;
 var dest = 0, stop = 0;
 __ZN6vision25GaussianScaleSpacePyramidC2Ev($0);
 HEAP32[$0 >> 2] = 13484;
 dest = $0 + 32 | 0;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function __ZNSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 4 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 << 3 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 << 3);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111string_pairD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0 + 12 | 0);
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0);
 return;
}

function _arMatrixAllocMul($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $6 = 0;
 $6 = _arMatrixAlloc(HEAP32[$0 + 4 >> 2] | 0, HEAP32[$1 + 8 >> 2] | 0) | 0;
 if (!$6) $$0 = 0; else if ((_arMatrixMul($6, $0, $1) | 0) < 0) {
  _arMatrixFree($6) | 0;
  $$0 = 0;
 } else $$0 = $6;
 return $$0 | 0;
}

function __ZNSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEC2EmRKS6_RKS7_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = HEAP32[$1 >> 2];
 return;
}

function __ZN6vision11CopyVector9IfEEvPT_PKS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var dest = 0, src = 0, stop = 0;
 dest = $0;
 src = $1;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = HEAP32[src >> 2];
  dest = dest + 4 | 0;
  src = src + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function _reset_marker_reader($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 + 440 >> 2] | 0;
 HEAP32[$0 + 216 >> 2] = 0;
 HEAP32[$0 + 144 >> 2] = 0;
 HEAP32[$0 + 416 >> 2] = 0;
 HEAP32[$2 + 12 >> 2] = 0;
 HEAP32[$2 + 16 >> 2] = 0;
 HEAP32[$2 + 24 >> 2] = 0;
 HEAP32[$2 + 164 >> 2] = 0;
 return;
}

function __ZN6vision13Similarity2x2IfEEvPT_S1_S1_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 var $4 = 0.0, $6 = 0.0;
 $4 = +Math_cos(+$1) * $2;
 $6 = +Math_sin(+$1) * $2;
 HEAPF32[$0 >> 2] = $4;
 HEAPF32[$0 + 4 >> 2] = -$6;
 HEAPF32[$0 + 8 >> 2] = $6;
 HEAPF32[$0 + 12 >> 2] = $4;
 return;
}

function __ZNSt3__214__split_bufferItRNS_9allocatorItEEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 8 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 << 1 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 << 1);
 return;
}

function __ZNSt3__214__split_bufferIiRNS_9allocatorIiEEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 8 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 << 2 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 << 2);
 return;
}

function __ZNSt3__214__split_bufferIfRNS_9allocatorIfEEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 8 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 << 2 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 << 2);
 return;
}

function __ZNSt3__214__num_get_base10__get_baseERNS_8ios_baseE($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 switch (HEAP32[$0 + 4 >> 2] & 74) {
 case 64:
  {
   $$0 = 8;
   break;
  }
 case 8:
  {
   $$0 = 16;
   break;
  }
 case 0:
  {
   $$0 = 0;
   break;
  }
 default:
  $$0 = 10;
 }
 return $$0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE10deallocateEPS6_m($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm(HEAP32[$0 >> 2] | 0, $1, $2 << 4);
 return;
}

function __ZN6vision25bilinear_downsample_pointERfS0_ffi($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = +$2;
 $3 = +$3;
 $4 = $4 | 0;
 var $7 = 0.0, $9 = 0.0;
 $7 = 1.0 / +(1 << $4 | 0);
 $9 = $7 * .5 + -.5;
 HEAPF32[$0 >> 2] = $7 * $2 + $9;
 HEAPF32[$1 >> 2] = $7 * $3 + $9;
 return;
}

function __ZN6vision17HammingDistance32Ejj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $5 = 0, $9 = 0;
 $2 = $1 ^ $0;
 $5 = $2 - ($2 >>> 1 & 1431655765) | 0;
 $9 = ($5 >>> 2 & 858993459) + ($5 & 858993459) | 0;
 return (Math_imul(($9 >>> 4) + $9 & 252645135, 16843009) | 0) >>> 24 | 0;
}

function __ZN6vision9MaxIndex4IfEEiPKT_($0) {
 $0 = $0 | 0;
 var $$0 = 0, $$1 = 0;
 $$0 = +HEAPF32[$0 + 4 >> 2] > +HEAPF32[$0 >> 2] & 1;
 $$1 = +HEAPF32[$0 + 8 >> 2] > +HEAPF32[$0 + ($$0 << 2) >> 2] ? 2 : $$0;
 return (+HEAPF32[$0 + 12 >> 2] > +HEAPF32[$0 + ($$1 << 2) >> 2] ? 3 : $$1) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110construct_Ev() {
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 if (!(_pthread_key_create(58316, 145) | 0)) {
  STACKTOP = sp;
  return;
 } else _abort_message(49228, sp);
}

function __ZN6vision12FeaturePointC2Effffb($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = +$3;
 $4 = +$4;
 $5 = $5 | 0;
 HEAPF32[$0 >> 2] = $1;
 HEAPF32[$0 + 4 >> 2] = $2;
 HEAPF32[$0 + 8 >> 2] = $3;
 HEAPF32[$0 + 12 >> 2] = $4;
 HEAP8[$0 + 16 >> 0] = $5 & 1;
 return;
}

function _jinit_master_decompress($0) {
 $0 = $0 | 0;
 var $4 = 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 1, 28) | 0;
 HEAP32[$0 + 420 >> 2] = $4;
 HEAP32[$4 >> 2] = 120;
 HEAP32[$4 + 4 >> 2] = 121;
 HEAP32[$4 + 8 >> 2] = 0;
 _master_selection($0);
 return;
}

function _ftell($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0, $2 = 0, $8 = 0;
 $1 = ___ftello($0) | 0;
 $2 = getTempRet0() | 0;
 if (($2 | 0) > 0 | ($2 | 0) == 0 & $1 >>> 0 > 2147483647) {
  $8 = ___errno_location() | 0;
  HEAP32[$8 >> 2] = 75;
  $$0 = -1;
 } else $$0 = $1;
 return $$0 | 0;
}

function __ZNKSt3__25ctypeIwE5do_isEtw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0, $9 = 0;
 if ($2 >>> 0 < 128) {
  $5 = (__ZNSt3__25ctypeIcE13classic_tableEv() | 0) + ($2 << 1) | 0;
  $9 = (HEAP16[$5 >> 1] & $1) << 16 >> 16 != 0;
 } else $9 = 0;
 return $9 | 0;
}

function _finish_output_pass($0) {
 $0 = $0 | 0;
 var $10 = 0, $2 = 0;
 $2 = HEAP32[$0 + 420 >> 2] | 0;
 if (HEAP32[$0 + 84 >> 2] | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 8 >> 2] & 255]($0);
 $10 = $2 + 12 | 0;
 HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1;
 return;
}

function __ZNSt3__26vectorItNS_9allocatorItEEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 4 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 << 1 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 << 1);
 return;
}

function __ZNSt3__26vectorIiNS_9allocatorIiEEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 4 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 << 2 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 << 2);
 return;
}

function __ZNSt3__26vectorIhNS_9allocatorIhEEE10deallocateEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  $4 = $0 + 4 | 0;
  HEAP32[$4 >> 2] = $1;
  __ZdlPv($1);
  HEAP32[$0 + 8 >> 2] = 0;
  HEAP32[$4 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
 }
 return;
}

function __ZNSt3__26vectorIfNS_9allocatorIfEEE18__construct_at_endEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$promoted = 0, $2 = 0;
 $2 = $0 + 4 | 0;
 $$promoted = HEAP32[$2 >> 2] | 0;
 _memset($$promoted | 0, 0, $1 << 2 | 0) | 0;
 HEAP32[$2 >> 2] = $$promoted + ($1 << 2);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm(HEAP32[$0 >> 2] | 0, $1 << 4) | 0;
}

function dynCall_iiiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 return FUNCTION_TABLE_iiiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0) | 0;
}

function _self_destruct($0) {
 $0 = $0 | 0;
 var $$0 = 0, $3 = 0;
 $$0 = 1;
 while (1) {
  if (($$0 | 0) <= -1) break;
  _free_pool($0, $$0);
  $$0 = $$0 + -1 | 0;
 }
 $3 = $0 + 4 | 0;
 _jpeg_free_small($0, HEAP32[$3 >> 2] | 0, 84);
 HEAP32[$3 >> 2] = 0;
 _jpeg_mem_term($0);
 return;
}

function __ZNSt3__27codecvtIwc11__mbstate_tED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 HEAP32[$0 >> 2] = 16788;
 $1 = $0 + 8 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if (($2 | 0) != (__ZNSt3__26__clocEv() | 0)) _freelocale(HEAP32[$1 >> 2] | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZN6vision21OrientationAssignmentC2Ev($0) {
 $0 = $0 | 0;
 var dest = 0, stop = 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 dest = $0 + 12 | 0;
 stop = dest + 40 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function __ZNKSt3__25ctypeIcE10do_tolowerEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0, $8 = 0;
 if ($1 << 24 >> 24 > -1) {
  $5 = (__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + ($1 << 24 >> 24 << 2) | 0;
  $8 = HEAP32[$5 >> 2] & 255;
 } else $8 = $1;
 return $8 | 0;
}

function __ZN12arControllerD2Ev($this) {
 $this = $this | 0;
 __ZNSt3__213__vector_baseI12multi_markerNS_9allocatorIS1_EEED2Ev($this + 280 | 0);
 __ZNSt3__213unordered_mapIiP14AR2SurfaceSetTNS_4hashIiEENS_8equal_toIiEENS_9allocatorINS_4pairIKiS2_EEEEED2Ev($this + 244 | 0);
 return;
}

function _arMatrixAllocTrans($0) {
 $0 = $0 | 0;
 var $$0 = 0, $5 = 0;
 $5 = _arMatrixAlloc(HEAP32[$0 + 8 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0) | 0;
 if (!$5) $$0 = 0; else if ((_arMatrixTrans($5, $0) | 0) < 0) {
  _arMatrixFree($5) | 0;
  $$0 = 0;
 } else $$0 = $5;
 return $$0 | 0;
}

function _wmemset($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$056 = 0, $$07 = 0;
 if ($2 | 0) {
  $$056 = $2;
  $$07 = $0;
  while (1) {
   $$056 = $$056 + -1 | 0;
   HEAP32[$$07 >> 2] = $1;
   if (!$$056) break; else $$07 = $$07 + 4 | 0;
  }
 }
 return $0 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 + 12 >> 2] | 0;
 if ($2 | 0) {
  __ZN6vision8KeyframeILi96EED2Ev($2);
  __ZdlPv($2);
 }
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$7 >> 2] = $5;
 return 3;
}

function __ZNSt3__2lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__224__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m($0, $1, __ZNSt3__211char_traitsIcE6lengthEPKc($1) | 0) | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_($0, $1, $2, $3, $4, $5, $6, $7) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 $5 = $5 | 0;
 $6 = $6 | 0;
 $7 = $7 | 0;
 HEAP32[$4 >> 2] = $2;
 HEAP32[$7 >> 2] = $5;
 return 3;
}

function __ZNKSt3__25ctypeIcE10do_toupperEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0, $8 = 0;
 if ($1 << 24 >> 24 > -1) {
  $5 = (__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + (($1 & 255) << 2) | 0;
  $8 = HEAP32[$5 >> 2] & 255;
 } else $8 = $1;
 return $8 | 0;
}

function _arPattFree($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $4 = 0;
 $4 = (HEAP32[$0 + 8 >> 2] | 0) + ($1 << 2) | 0;
 if (!(HEAP32[$4 >> 2] | 0)) $$0 = -1; else {
  HEAP32[$4 >> 2] = 0;
  HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + -1;
  $$0 = 1;
 }
 return $$0 | 0;
}

function _arMatrixAllocDup($0) {
 $0 = $0 | 0;
 var $$0 = 0, $5 = 0;
 $5 = _arMatrixAlloc(HEAP32[$0 + 4 >> 2] | 0, HEAP32[$0 + 8 >> 2] | 0) | 0;
 if (!$5) $$0 = 0; else if ((_arMatrixDup($5, $0) | 0) < 0) {
  _arMatrixFree($5) | 0;
  $$0 = 0;
 } else $$0 = $5;
 return $$0 | 0;
}

function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  setTempRet0(high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits | 0);
  return low << bits;
 }
 setTempRet0(low << bits - 32 | 0);
 return 0;
}

function __ZN6vision14BinarykMedoidsILi96EEC2ERi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var dest = 0, stop = 0;
 HEAP32[$0 >> 2] = $1;
 dest = $0 + 4 | 0;
 stop = dest + 56 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 return;
}

function __ZN6vision16RobustHomographyIfED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseINS_4pairIfiEENS_9allocatorIS2_EEED2Ev($0 + 24 | 0);
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($0 + 12 | 0);
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($0);
 return;
}

function dynCall_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 a7 = a7 | 0;
 FUNCTION_TABLE_viiiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0, a7 | 0);
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  setTempRet0(high >>> bits | 0);
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 setTempRet0(0);
 return high >>> bits - 32 | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw($0, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__initEmw($0, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc($0, 1, 45);
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc($0, 1, 45);
 return;
}

function __ZN6vision5ImageC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = 0;
 HEAP32[$0 + 28 >> 2] = 0;
 return;
}

function __ZNSt3__26localeD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $3 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 $2 = $1 + 4 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 HEAP32[$2 >> 2] = $3 + -1;
 if (!$3) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$1 >> 2] | 0) + 8 >> 2] & 255]($1);
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6assignEPKwm($0, $1, __ZNSt3__211char_traitsIwE6lengthEPKw($1) | 0) | 0;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKcm($0, $1, __ZNSt3__211char_traitsIcE6lengthEPKc($1) | 0) | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[13971] = 0;
 HEAP32[13970] = 17032;
 __ZNSt3__220__time_get_c_storageIwEC2Ev(55888);
 HEAP32[13970] = 15072;
 HEAP32[13972] = 15120;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[13967] = 0;
 HEAP32[13966] = 17032;
 __ZNSt3__220__time_get_c_storageIcEC2Ev(55872);
 HEAP32[13966] = 14988;
 HEAP32[13968] = 15036;
 return;
}

function __ZN6vision25DoGScaleInvariantDetector22setMaxNumFeaturePointsEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 84 >> 2] = $1;
 __ZNSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE7reserveEm($0 + 60 | 0, $1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE10deallocateEPS2_m($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE10deallocateEPcm(HEAP32[$0 >> 2] | 0, $1, $2 * 24 | 0);
 return;
}

function __ZNKSt3__25ctypeIwE10do_toupperEw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $6 = 0;
 if ($1 >>> 0 < 128) {
  $4 = (__ZNSt3__25ctypeIcE21__classic_upper_tableEv() | 0) + ($1 << 2) | 0;
  $6 = HEAP32[$4 >> 2] | 0;
 } else $6 = $1;
 return $6 | 0;
}

function __ZNKSt3__25ctypeIwE10do_tolowerEw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0, $6 = 0;
 if ($1 >>> 0 < 128) {
  $4 = (__ZNSt3__25ctypeIcE21__classic_lower_tableEv() | 0) + ($1 << 2) | 0;
  $6 = HEAP32[$4 >> 2] | 0;
 } else $6 = $1;
 return $6 | 0;
}

function __ZN6vision9ExceptionC2ERKNSt3__212basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 13516;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0 + 4 | 0, $1);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm(HEAP32[$0 >> 2] | 0, $1 << 4) | 0;
}

function _pthread_key_create($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $3 = 0;
 if (!$0) {
  $$0 = 22;
  return $$0 | 0;
 }
 $3 = _malloc(8) | 0;
 HEAP32[$3 >> 2] = 0;
 HEAP32[$3 + 4 >> 2] = 38177486;
 HEAP32[$0 >> 2] = $3;
 $$0 = 0;
 return $$0 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 var $0 = 0;
 HEAP32[13979] = 0;
 HEAP32[13978] = 17032;
 $0 = __ZNSt3__26__clocEv() | 0;
 HEAP32[13980] = $0;
 HEAP32[13978] = 16268;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 var $0 = 0;
 HEAP32[13975] = 0;
 HEAP32[13974] = 17032;
 $0 = __ZNSt3__26__clocEv() | 0;
 HEAP32[13976] = $0;
 HEAP32[13974] = 16244;
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_m($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 return __ZNSt3__2L20utf8_to_utf16_lengthEPKhS1_mmNS_12codecvt_modeE($2, $3, $4, 1114111, 0) | 0;
}

function dynCall_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 return FUNCTION_TABLE_iiiiiii[index & 63](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0) | 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_m($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 return __ZNSt3__2L19utf8_to_ucs4_lengthEPKhS1_mmNS_12codecvt_modeE($2, $3, $4, 1114111, 0) | 0;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58164) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58156) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58148) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58140) | 0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEEN10__cxxabiv112_GLOBAL__N_112malloc_allocIcEEED2Ev($0) {
 $0 = $0 | 0;
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm(HEAP32[$0 >> 2] | 0);
 return;
}

function _pntz($0) {
 $0 = $0 | 0;
 var $3 = 0, $7 = 0;
 $3 = _a_ctz_l_556((HEAP32[$0 >> 2] | 0) + -1 | 0) | 0;
 if (!$3) {
  $7 = _a_ctz_l_556(HEAP32[$0 + 4 >> 2] | 0) | 0;
  return (($7 | 0) == 0 ? 0 : $7 + 32 | 0) | 0;
 } else return $3 | 0;
 return 0;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58100) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58092) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58084) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58016) | 0);
 return;
}

function __ZN6vision18BinaryFeatureStoreC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 HEAP32[$0 + 24 >> 2] = 0;
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(57948) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(57940) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(57932) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(57908) | 0);
 return;
}

function __ZN6vision22bilinear_interpolationIfEET_PKS1_mmmff($0, $1, $2, $3, $4, $5) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = +$4;
 $5 = +$5;
 return +(+__ZN6vision22bilinear_interpolationIffEET0_PKT_mmmff($0, $1, $2, $3, $4, $5));
}

function __ZN10emscripten8internal7InvokerIvJiEE6invokeEPFviEi($fn, $args) {
 $fn = $fn | 0;
 $args = $args | 0;
 var $call = 0;
 $call = __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($args) | 0;
 FUNCTION_TABLE_vi[$fn & 255]($call);
 return;
}

function __ZNSt3__211char_traitsIwE7not_eofEj($0) {
 $0 = $0 | 0;
 var $5 = 0;
 if (__ZNSt3__211char_traitsIwE11eq_int_typeEjj($0, __ZNSt3__211char_traitsIwE3eofEv() | 0) | 0) $5 = ~(__ZNSt3__211char_traitsIwE3eofEv() | 0); else $5 = $0;
 return $5 | 0;
}

function __ZNSt3__211char_traitsIcE7not_eofEi($0) {
 $0 = $0 | 0;
 var $5 = 0;
 if (__ZNSt3__211char_traitsIcE11eq_int_typeEii($0, __ZNSt3__211char_traitsIcE3eofEv() | 0) | 0) $5 = ~(__ZNSt3__211char_traitsIcE3eofEv() | 0); else $5 = $0;
 return $5 | 0;
}

function dynCall_iiiiiid(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = +a6;
 return FUNCTION_TABLE_iiiiiid[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, +a6) | 0;
}

function dynCall_iidiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 return FUNCTION_TABLE_iidiiii[index & 1](a1 | 0, +a2, a3 | 0, a4 | 0, a5 | 0, a6 | 0) | 0;
}

function ___ofl_add($0) {
 $0 = $0 | 0;
 var $1 = 0, $4 = 0;
 $1 = ___ofl_lock() | 0;
 HEAP32[$0 + 56 >> 2] = HEAP32[$1 >> 2];
 $4 = HEAP32[$1 >> 2] | 0;
 if ($4 | 0) HEAP32[$4 + 52 >> 2] = $0;
 HEAP32[$1 >> 2] = $0;
 ___ofl_unlock();
 return $0 | 0;
}

function __ZNKSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ((HEAP32[$1 + 4 >> 2] | 0) == 28651 ? $0 + 12 | 0 : 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_132parse_unresolved_qualifier_levelINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_115parse_simple_idINS0_2DbEEEPKcS4_S4_RT_($0, $1, $2) | 0;
}

function __ZNSt3__214priority_queueIN6vision17PriorityQueueItemILi96EEENS_6vectorIS3_NS_9allocatorIS3_EEEENS_4lessIS3_EEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEED2Ev($0);
 return;
}

function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}

function __ZNSt3__26localeC2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0, $3 = 0;
 $1 = __ZNSt3__26locale8__globalEv() | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$0 >> 2] = $2;
 $3 = $2 + 4 | 0;
 HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
 return;
}

function ___uselocale($0) {
 $0 = $0 | 0;
 var $2 = 0, $3 = 0;
 $2 = (___pthread_self_523() | 0) + 188 | 0;
 $3 = HEAP32[$2 >> 2] | 0;
 if ($0 | 0) HEAP32[$2 >> 2] = ($0 | 0) == (-1 | 0) ? 56232 : $0;
 return (($3 | 0) == 56232 ? -1 : $3) | 0;
}

function __ZN6vision10SubVector2IfEEvPT_PKS1_S4_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 HEAPF32[$0 >> 2] = +HEAPF32[$1 >> 2] - +HEAPF32[$2 >> 2];
 HEAPF32[$0 + 4 >> 2] = +HEAPF32[$1 + 4 >> 2] - +HEAPF32[$2 + 4 >> 2];
 return;
}

function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() | 0;
}

function _arPattAttach($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $3 = 0;
 if (!$0) $$0 = -1; else {
  $3 = $0 + 7062384 | 0;
  if (!(HEAP32[$3 >> 2] | 0)) {
   HEAP32[$3 >> 2] = $1;
   $$0 = 0;
  } else $$0 = -1;
 }
 return $$0 | 0;
}

function __ZN6vision22QuadraticCriticalPointIfEEbRT_S1_S1_S1_($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = +$3;
 var $$0 = 0;
 if ($1 == 0.0) $$0 = 0; else {
  HEAPF32[$0 >> 2] = -$2 / ($1 * 2.0);
  $$0 = 1;
 }
 return $$0 | 0;
}

function __ZN6vision20VisualDatabaseFacade9matchedIdEv($0) {
 $0 = $0 | 0;
 return __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE9matchedIdEv(HEAP32[HEAP32[$0 >> 2] >> 2] | 0) | 0;
}

function __ZNSt3__213__vector_baseIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function __ZNK6vision20VisualDatabaseFacade7inliersEv($0) {
 $0 = $0 | 0;
 return __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE7inliersEv(HEAP32[HEAP32[$0 >> 2] >> 2] | 0) | 0;
}

function __ZN6vision10FastMedianIfiEENSt3__24pairIT_T0_EEPS5_i($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 __ZN6vision11PartialSortIfiEENSt3__24pairIT_T0_EEPS5_ii($0, $1, $2, ($2 & 1) + -1 + (($2 | 0) / 2 | 0) | 0);
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_m($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 var $7 = 0;
 $7 = $3 - $2 | 0;
 return ($7 >>> 0 < $4 >>> 0 ? $7 : $4) | 0;
}

function __ZN6vision11CopyVector2IfEEvPT_PKS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $7 = 0, $8 = 0;
 $2 = $1;
 $7 = HEAP32[$2 + 4 >> 2] | 0;
 $8 = $0;
 HEAP32[$8 >> 2] = HEAP32[$2 >> 2];
 HEAP32[$8 + 4 >> 2] = $7;
 return;
}

function __ZN6vision8KeyframeILi96EEC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 __ZN6vision18BinaryFeatureStoreC2Ev($0 + 8 | 0);
 __ZN6vision28BinaryHierarchicalClusteringILi96EEC2Ev($0 + 36 | 0);
 return;
}

function _kpmGetResult($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0;
 if (!$0) $$0 = -1; else {
  HEAP32[$1 >> 2] = HEAP32[$0 + 52 >> 2];
  HEAP32[$2 >> 2] = HEAP32[$0 + 56 >> 2];
  $$0 = 0;
 }
 return $$0 | 0;
}

function _ar3DDeleteHandle($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) $$0 = -1; else {
  _icpDeleteHandle($1) | 0;
  _free(HEAP32[$0 >> 2] | 0);
  HEAP32[$0 >> 2] = 0;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZSt11__terminatePFvvE($0) {
 $0 = $0 | 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(16);
 FUNCTION_TABLE_v[$0 & 3]();
 _abort_message(49331, sp);
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EE8allocateEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8allocateEm(HEAP32[$0 >> 2] | 0, $1 * 24 | 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS3_INS0_11string_pairENS1_IS4_Lm4096EEEEENS1_IS6_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 return;
}

function _jpeg_destroy($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 if ($2 | 0) FUNCTION_TABLE_vi[HEAP32[$2 + 40 >> 2] & 255]($0);
 HEAP32[$1 >> 2] = 0;
 HEAP32[$0 + 20 >> 2] = 0;
 return;
}

function dynCall_iiiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return FUNCTION_TABLE_iiiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE8__monthsEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55600] | 0)) if (___cxa_guard_acquire(55600) | 0) {
  __ZNSt3__2L12init_wmonthsEv();
  HEAP32[14519] = 54736;
 }
 return HEAP32[14519] | 0;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 if ((STACKTOP | 0) >= (STACK_MAX | 0)) abortStackOverflow(size | 0);
 return ret | 0;
}

function _pthread_setspecific($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0, $2 = 0;
 $2 = $0;
 if ((HEAP32[$2 + 4 >> 2] | 0) != 38177486) {
  $$0 = 22;
  return $$0 | 0;
 }
 HEAP32[$2 >> 2] = $1;
 $$0 = 0;
 return $$0 | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE8__monthsEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55520] | 0)) if (___cxa_guard_acquire(55520) | 0) {
  __ZNSt3__2L11init_monthsEv();
  HEAP32[14502] = 53984;
 }
 return HEAP32[14502] | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE7__weeksEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55616] | 0)) if (___cxa_guard_acquire(55616) | 0) {
  __ZNSt3__2L11init_wweeksEv();
  HEAP32[14520] = 55024;
 }
 return HEAP32[14520] | 0;
}

function __ZNKSt3__220__time_get_c_storageIwE7__am_pmEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55584] | 0)) if (___cxa_guard_acquire(55584) | 0) {
  __ZNSt3__2L11init_wam_pmEv();
  HEAP32[14518] = 54448;
 }
 return HEAP32[14518] | 0;
}

function _out_of_memory($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 HEAP32[$2 + 20 >> 2] = 54;
 HEAP32[$2 + 24 >> 2] = $1;
 FUNCTION_TABLE_vi[HEAP32[HEAP32[$0 >> 2] >> 2] & 255]($0);
 return;
}

function __ZNSt3__27codecvtIwc11__mbstate_tEC2Em($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $5 = 0;
 HEAP32[$0 + 4 >> 2] = $1 + -1;
 HEAP32[$0 >> 2] = 16788;
 $5 = __ZNSt3__26__clocEv() | 0;
 HEAP32[$0 + 8 >> 2] = $5;
 return;
}

function __ZNKSt3__220__time_get_c_storageIcE7__weeksEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55536] | 0)) if (___cxa_guard_acquire(55536) | 0) {
  __ZNSt3__2L10init_weeksEv();
  HEAP32[14503] = 54272;
 }
 return HEAP32[14503] | 0;
}

function __ZNKSt3__220__time_get_c_storageIcE7__am_pmEv($0) {
 $0 = $0 | 0;
 if (!(HEAP8[55504] | 0)) if (___cxa_guard_acquire(55504) | 0) {
  __ZNSt3__2L10init_am_pmEv();
  HEAP32[14501] = 53696;
 }
 return HEAP32[14501] | 0;
}

function __ZN6vision18BinaryFeatureStoreD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseIN6vision12FeaturePointENS_9allocatorIS2_EEED2Ev($0 + 16 | 0);
 __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev($0 + 4 | 0);
 return;
}

function _pop_arg_long_double($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $7 = 0, $8 = 0.0;
 $7 = (HEAP32[$1 >> 2] | 0) + (8 - 1) & ~(8 - 1);
 $8 = +HEAPF64[$7 >> 3];
 HEAP32[$1 >> 2] = $7 + 8;
 HEAPF64[$0 >> 3] = $8;
 return;
}

function __ZNSt3__211char_traitsIcE6assignEPcmc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if ($1 | 0) _memset($0 | 0, (__ZNSt3__211char_traitsIcE11to_int_typeEc($2) | 0) & 255 | 0, $1 | 0) | 0;
 return $0 | 0;
}

function _arPattDetach($0) {
 $0 = $0 | 0;
 var $$0 = 0, $2 = 0;
 if (!$0) $$0 = -1; else {
  $2 = $0 + 7062384 | 0;
  if (!(HEAP32[$2 >> 2] | 0)) $$0 = -1; else {
   HEAP32[$2 >> 2] = 0;
   $$0 = 0;
  }
 }
 return $$0 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = $0 + 12 | 0;
 __ZNK16NullArrayDeleterIhEclEPh($1, HEAP32[$1 >> 2] | 0);
 return;
}

function __ZN6vision17bitstring_set_bitEPhih($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $7 = 0;
 $7 = $0 + (($1 | 0) / 8 | 0) | 0;
 HEAP8[$7 >> 0] = ($2 & 255) << ($1 & 7) | (HEAPU8[$7 >> 0] | 0);
 return;
}

function dynCall_iiiiid(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = +a5;
 return FUNCTION_TABLE_iiiiid[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, +a5) | 0;
}

function _arSetLabelingThreshModeAutoInterval($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$0) $$0 = -1; else {
  HEAP32[$0 + 7062392 >> 2] = $1;
  HEAP32[$0 + 7062396 >> 2] = 0;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNKSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE13__get_deleterERKSt9type_info($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ((HEAP32[$1 + 4 >> 2] | 0) == 33163 ? $0 + 12 | 0 : 0) | 0;
}

function __ZN6vision21OrientationAssignmentD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseIN6vision5ImageENS_9allocatorIS2_EEED2Ev($0 + 40 | 0);
 __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($0 + 28 | 0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2IS4_EERKNS1_IT_Lm4096EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDsc11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58204) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIDic11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58212) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIwc11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58196) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7codecvtIcc11__mbstate_tEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58188) | 0);
 return;
}

function __ZNSt3__25ctypeIcED2Ev($0) {
 $0 = $0 | 0;
 var $2 = 0;
 HEAP32[$0 >> 2] = 16856;
 $2 = HEAP32[$0 + 8 >> 2] | 0;
 if ($2 | 0) if (HEAP8[$0 + 12 >> 0] | 0) __ZdaPv($2);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNKSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE13__get_deleterERKSt9type_info($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ((HEAP32[$1 + 4 >> 2] | 0) == 33285 ? $0 + 12 | 0 : 0) | 0;
}

function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}

function _finish_pass1($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 + 460 >> 2] | 0;
 HEAP32[$0 + 136 >> 2] = HEAP32[$2 + 16 >> 2];
 _select_colors($0, HEAP32[$2 + 20 >> 2] | 0);
 HEAP32[$2 + 28 >> 2] = 1;
 return;
}

function _byteSwapDouble($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 8) break;
  HEAP8[$1 + $$0 >> 0] = HEAP8[$0 + (7 - $$0) >> 0] | 0;
  $$0 = $$0 + 1 | 0;
 }
 return;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED2Ev($0, 14420);
 __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($0, 14372);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED2Ev($0, 14324);
 __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev($0 + 8 | 0);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, 14276);
 __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($0 + 8 | 0);
 return;
}

function __ZNSt3__213__vector_baseI12multi_markerNS_9allocatorIS1_EEED2Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = HEAP32[$this >> 2] | 0;
 if ($0 | 0) {
  HEAP32[$this + 4 >> 2] = $0;
  __ZdlPv($0);
 }
 return;
}

function _process_data_crank_post($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 FUNCTION_TABLE_viiiiiii[HEAP32[(HEAP32[$0 + 432 >> 2] | 0) + 4 >> 2] & 7]($0, 0, 0, 0, $1, $2, $3);
 return;
}

function __ZNKSt3__26locale9use_facetERNS0_2idE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 >> 2] | 0;
 return __ZNKSt3__26locale5__imp9use_facetEl($2, __ZNSt3__26locale2id5__getEv($1) | 0) | 0;
}

function __ZN6vision10DoGPyramid3getEmm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $6 = 0;
 $6 = (Math_imul(HEAP32[$0 + 16 >> 2] | 0, $1) | 0) + $2 | 0;
 return (HEAP32[$0 >> 2] | 0) + ($6 << 5) | 0;
}

function _arGetLabelingThreshMode($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (($0 | 0) != 0 & ($1 | 0) != 0) {
  HEAP32[$1 >> 2] = HEAP32[$0 + 7062388 >> 2];
  $$0 = 0;
 } else $$0 = -1;
 return $$0 | 0;
}

function __ZNSt3__26localeC2ERKS0_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0, $3 = 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$0 >> 2] = $2;
 $3 = $2 + 4 | 0;
 HEAP32[$3 >> 2] = (HEAP32[$3 >> 2] | 0) + 1;
 return;
}

function _grayscale_convert_29($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 _jcopy_sample_rows(HEAP32[$1 >> 2] | 0, $2, $3, 0, $4, HEAP32[$0 + 112 >> 2] | 0);
 return;
}

function _byteSwapInt($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 $$0 = 0;
 while (1) {
  if (($$0 | 0) == 4) break;
  HEAP8[$1 + $$0 >> 0] = HEAP8[$0 + (3 - $$0) >> 0] | 0;
  $$0 = $$0 + 1 | 0;
 }
 return;
}

function ___lctrans_impl($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$1) $$0 = 0; else $$0 = ___mo_lookup(HEAP32[$1 >> 2] | 0, HEAP32[$1 + 4 >> 2] | 0, $0) | 0;
 return (($$0 | 0) == 0 ? $0 : $$0) | 0;
}

function _arImageProcInit($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = _malloc(2064) | 0;
 if ($2 | 0) {
  HEAP32[$2 >> 2] = 0;
  HEAP32[$2 + 4 >> 2] = $0;
  HEAP32[$2 + 8 >> 2] = $1;
 }
 return $2 | 0;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb1EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58132) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIwLb0EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58124) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb1EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58116) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_10moneypunctIcLb0EEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58108) | 0);
 return;
}

function __ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, $1, 0) | 0;
}

function _arGetMatrixCodeType($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (($0 | 0) != 0 & ($1 | 0) != 0) {
  HEAP32[$1 >> 2] = HEAP32[$0 + 7062424 >> 2];
  $$0 = 0;
 } else $$0 = -1;
 return $$0 | 0;
}

function __ZNSt3__213__vector_baseIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function __ZNSt3__213__vector_baseIPN6vision4NodeILi96EEENS_9allocatorIS4_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($0 + (HEAP32[(HEAP32[$0 >> 2] | 0) + -12 >> 2] | 0) | 0);
 return;
}

function __ZNSt3__26locale8__globalEv() {
 if (!(HEAP8[56112] | 0)) if (___cxa_guard_acquire(56112) | 0) {
  __ZNSt3__26locale5__imp11make_globalEv() | 0;
  HEAP32[14558] = 58228;
 }
 return HEAP32[14558] | 0;
}

function __ZNSt3__26locale7classicEv() {
 if (!(HEAP8[55944] | 0)) if (___cxa_guard_acquire(55944) | 0) {
  __ZNSt3__26locale5__imp12make_classicEv() | 0;
  HEAP32[14556] = 58220;
 }
 return HEAP32[14556] | 0;
}

function __ZNSt3__26__clocEv() {
 var $4 = 0;
 if (!(HEAP8[55464] | 0)) if (___cxa_guard_acquire(55464) | 0) {
  $4 = ___newlocale(2147483647, 46757, 0) | 0;
  HEAP32[14473] = $4;
 }
 return HEAP32[14473] | 0;
}

function __ZNSt3__213__vector_baseIN6vision7Point3dIfEENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function __ZNSt3__213__vector_baseIN6vision7Point2dIfEENS_9allocatorIS3_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewItEEvPKc($name) {
 $name = $name | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv() | 0, 3, $name | 0);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIsEEvPKc($name) {
 $name = $name | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv() | 0, 2, $name | 0);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIjEEvPKc($name) {
 $name = $name | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv() | 0, 5, $name | 0);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIiEEvPKc($name) {
 $name = $name | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv() | 0, 4, $name | 0);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIhEEvPKc($name) {
 $name = $name | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv() | 0, 1, $name | 0);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIaEEvPKc($name) {
 $name = $name | 0;
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv() | 0, 0, $name | 0);
 return;
}

function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0;
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;
 return (setTempRet0(h | 0), a - c >>> 0 | 0) | 0;
}

function _arSetPattRatio($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 var $$0 = 0;
 if (!$0) $$0 = -1; else if ($1 <= 0.0 | $1 >= 1.0) $$0 = -1; else {
  HEAPF64[$0 + 7062416 >> 3] = $1;
  $$0 = 0;
 }
 return $$0 | 0;
}

function ___strdup($0) {
 $0 = $0 | 0;
 var $$0 = 0, $2 = 0, $3 = 0;
 $2 = (_strlen($0) | 0) + 1 | 0;
 $3 = _malloc($2) | 0;
 if (!$3) $$0 = 0; else $$0 = _memcpy($3 | 0, $0 | 0, $2 | 0) | 0;
 return $$0 | 0;
}

function __ZNSt3__28numpunctIwED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 16948;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 16 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__28numpunctIcED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 16908;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 12 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNKSt3__29__num_getIwE10__do_widenERNS_8ios_baseEPw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return __ZNKSt3__29__num_getIwE12__do_widen_pIwEEPKT_RNS_8ios_baseEPS3_($0, $1, $2) | 0;
}

function _arGetLabelingThresh($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (($0 | 0) != 0 & ($1 | 0) != 0) {
  HEAP32[$1 >> 2] = HEAP32[$0 + 16 >> 2];
  $$0 = 0;
 } else $$0 = -1;
 return $$0 | 0;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(57924) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8numpunctIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(57900) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58180) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_8messagesIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(58172) | 0);
 return;
}

function __ZN6vision9MaxIndex3IfEEiPKT_($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 $$0 = +HEAPF32[$0 + 4 >> 2] > +HEAPF32[$0 >> 2] & 1;
 return (+HEAPF32[$0 + 8 >> 2] > +HEAPF32[$0 + ($$0 << 2) >> 2] ? 2 : $$0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINSt3__26vectorINS0_11string_pairENS1_IS4_Lm4096EEEEELm4096EEC2ERNS0_5arenaILm4096EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 return;
}

function __ZNSt3__26locale5__imp7installINS_7collateIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(57876) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_7collateIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(57868) | 0);
 return;
}

function __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function _arGetLabelingMode($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (($0 | 0) != 0 & ($1 | 0) != 0) {
  HEAP32[$1 >> 2] = HEAP32[$0 + 12 >> 2];
  $$0 = 0;
 } else $$0 = -1;
 return $$0 | 0;
}

function __ZN6vision14AreaOfTriangleIfEET_PKS1_S3_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return +(+Math_abs(+(+HEAPF32[$0 >> 2] * +HEAPF32[$1 + 4 >> 2] - +HEAPF32[$0 + 4 >> 2] * +HEAPF32[$1 >> 2])) * .5);
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIwEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(57916) | 0);
 return;
}

function __ZNSt3__26locale5__imp7installINS_5ctypeIcEEEEvPT_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26locale5__imp7installEPNS0_5facetEl($0, $1, __ZNSt3__26locale2id5__getEv(57884) | 0);
 return;
}

function ___syscall_ret($0) {
 $0 = $0 | 0;
 var $$0 = 0, $3 = 0;
 if ($0 >>> 0 > 4294963200) {
  $3 = ___errno_location() | 0;
  HEAP32[$3 >> 2] = 0 - $0;
  $$0 = -1;
 } else $$0 = $0;
 return $$0 | 0;
}

function __ZNSt3__213__vector_baseINS_4pairIfmEENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function __ZNSt3__213__vector_baseINS_4pairIfiEENS_9allocatorIS2_EEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 15](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__211char_traitsIwE4moveEPwPKwm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 if (!$2) $5 = $0; else {
  _wmemmove($0, $1, $2) | 0;
  $5 = $0;
 }
 return $5 | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiiEE8getTypesEv($this) {
 $this = $this | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiiiEEEE3getEv() | 0;
}

function __ZNSt3__211char_traitsIwE6assignEPwmw($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 if (!$1) $5 = $0; else {
  _wmemset($0, $2, $1) | 0;
  $5 = $0;
 }
 return $5 | 0;
}

function __ZNSt3__211char_traitsIwE4copyEPwPKwm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $5 = 0;
 if (!$2) $5 = $0; else {
  _wmemcpy($0, $1, $2) | 0;
  $5 = $0;
 }
 return $5 | 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE10nextNodeIdEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $2 = 0;
 $1 = $0 + 4 | 0;
 $2 = HEAP32[$1 >> 2] | 0;
 HEAP32[$1 >> 2] = $2 + 1;
 return $2 | 0;
}

function _arSetPatternDetectionMode($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (($0 | 0) != 0 & $1 >>> 0 < 5) {
  HEAP32[$0 + 24 >> 2] = $1;
  $$0 = 0;
 } else $$0 = -1;
 return $$0 | 0;
}

function __ZNKSt3__29__num_getIcE10__do_widenERNS_8ios_baseEPc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return __ZNKSt3__29__num_getIcE12__do_widen_pERNS_8ios_baseEPc($0, $1, $2) | 0;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = 2;
 HEAP8[$0 + 1 >> 0] = 3;
 HEAP8[$0 + 2 >> 0] = 0;
 HEAP8[$0 + 3 >> 0] = 4;
 return;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviiEE8getTypesEv($this) {
 $this = $this | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJviiEEEE3getEv() | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvifEE8getTypesEv($this) {
 $this = $this | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvifEEEE3getEv() | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvidEE8getTypesEv($this) {
 $this = $this | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvidEEEE3getEv() | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiEE8getTypesEv($this) {
 $this = $this | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiiEEEE3getEv() | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EEC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAPF32[$0 + 12 >> 2] = .699999988079071;
 return;
}

function _start_pass_upsample($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 + 452 >> 2] | 0;
 HEAP32[$2 + 92 >> 2] = HEAP32[$0 + 312 >> 2];
 HEAP32[$2 + 96 >> 2] = HEAP32[$0 + 116 >> 2];
 return;
}

function __ZNSt3__24pairIKiNS_6vectorIN6vision7Point3dIfEENS_9allocatorIS5_EEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseIN6vision7Point3dIfEENS_9allocatorIS3_EEED2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv($0) {
 $0 = $0 | 0;
 __ZNKSt3__212_GLOBAL__N_111__fake_bindclEv(HEAP32[HEAP32[$0 >> 2] >> 2] | 0);
 return;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 HEAP32[$4 >> 2] = $2;
 return 3;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 HEAP32[$4 >> 2] = $2;
 return 3;
}

function __ZNKSt3__26vectorINS0_INS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEEENS4_IS8_Lm4096EEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 268435455;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE16setNumHypothesesEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN6vision14BinarykMedoidsILi96EE16setNumHypothesesEi($0 + 12 | 0, $1);
 return;
}

function _arGetDebugMode($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (($0 | 0) != 0 & ($1 | 0) != 0) {
  HEAP32[$1 >> 2] = HEAP32[$0 >> 2];
  $$0 = 0;
 } else $$0 = -1;
 return $$0 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214__shared_countD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_($0, $1, $2, $3, $4) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 $4 = $4 | 0;
 HEAP32[$4 >> 2] = $2;
 return 3;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviEE8getTypesEv($this) {
 $this = $this | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJviEEEE3getEv() | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiEE8getTypesEv($this) {
 $this = $this | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiEEEE3getEv() | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJdiEE8getTypesEv($this) {
 $this = $this | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJdiEEEE3getEv() | 0;
}

function __ZN6vision4min4IfEET_S1_S1_S1_S1_($0, $1, $2, $3) {
 $0 = +$0;
 $1 = +$1;
 $2 = +$2;
 $3 = +$3;
 return +(+__ZN6vision4min2IfEET_S1_S1_(+__ZN6vision4min3IfEET_S1_S1_S1_($0, $1, $2), $3));
}

function ___DOUBLE_BITS_737($0) {
 $0 = +$0;
 var $1 = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $1 = HEAP32[tempDoublePtr >> 2] | 0;
 setTempRet0(HEAP32[tempDoublePtr + 4 >> 2] | 0);
 return $1 | 0;
}

function ___DOUBLE_BITS_102($0) {
 $0 = +$0;
 var $1 = 0;
 HEAPF64[tempDoublePtr >> 3] = $0;
 $1 = HEAP32[tempDoublePtr >> 2] | 0;
 setTempRet0(HEAP32[tempDoublePtr + 4 >> 2] | 0);
 return $1 | 0;
}

function _arSetLabelingThresh($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (($0 | 0) == 0 | $1 >>> 0 > 255) $$0 = -1; else {
  HEAP32[$0 + 16 >> 2] = $1;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiEE8getTypesEv($this) {
 $this = $this | 0;
 return __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiEEEE3getEv() | 0;
}

function b13(p0, p1, p2, p3, p4, p5, p6, p7) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 p7 = p7 | 0;
 nullFunc_iiiiiiiii(13);
 return 0;
}

function __ZN6vision12FeaturePointC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP8[$0 + 16 >> 0] = 1;
 return;
}

function __ZNSt3__211char_traitsIcE7compareEPKcS3_m($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $$0 = 0;
 if (!$2) $$0 = 0; else $$0 = _memcmp($0, $1, $2) | 0;
 return $$0 | 0;
}

function __ZN6vision10DoGPyramidC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 HEAP32[$0 + 12 >> 2] = 0;
 HEAP32[$0 + 16 >> 2] = 0;
 return;
}

function _arSetImageProcMode($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (($0 | 0) != 0 & $1 >>> 0 < 2) {
  HEAP32[$0 + 20 >> 2] = $1;
  $$0 = 0;
 } else $$0 = -1;
 return $$0 | 0;
}

function __ZNK6vision18BinaryFeatureStore7featureEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 $3 = Math_imul(HEAP32[$0 >> 2] | 0, $1) | 0;
 return (HEAP32[$0 + 4 >> 2] | 0) + $3 | 0;
}

function _jpeg_alloc_quant_table($0) {
 $0 = $0 | 0;
 var $4 = 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 0, 132) | 0;
 HEAP32[$4 + 128 >> 2] = 0;
 return $4 | 0;
}

function _arSetLabelingMode($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (($0 | 0) != 0 & $1 >>> 0 < 2) {
  HEAP32[$0 + 12 >> 2] = $1;
  $$0 = 0;
 } else $$0 = -1;
 return $$0 | 0;
}

function __ZN6vision7Point3dIfEC2Efff($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 $3 = +$3;
 HEAPF32[$0 >> 2] = $1;
 HEAPF32[$0 + 4 >> 2] = $2;
 HEAPF32[$0 + 8 >> 2] = $3;
 return;
}

function __ZN6vision18BinaryFeatureStore7featureEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 $3 = Math_imul(HEAP32[$0 >> 2] | 0, $1) | 0;
 return (HEAP32[$0 + 4 >> 2] | 0) + $3 | 0;
}

function __ZN6vision10ClipScalarIfEET_S1_S1_S1_($0, $1, $2) {
 $0 = +$0;
 $1 = +$1;
 $2 = +$2;
 var $$0 = 0.0;
 if ($0 < $1) $$0 = $1; else if ($0 > $2) $$0 = $2; else $$0 = $0;
 return +$$0;
}

function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 31](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}

function _jpeg_alloc_huff_table($0) {
 $0 = $0 | 0;
 var $4 = 0;
 $4 = FUNCTION_TABLE_iiii[HEAP32[HEAP32[$0 + 4 >> 2] >> 2] & 63]($0, 0, 280) | 0;
 HEAP32[$4 + 276 >> 2] = 0;
 return $4 | 0;
}

function __ZN6vision21HoughSimilarityVoting26setObjectCenterInReferenceEff($0, $1, $2) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 HEAPF32[$0 + 8 >> 2] = $1;
 HEAPF32[$0 + 12 >> 2] = $2;
 return;
}

function __ZN6vision14BinarykMedoidsILi96EE4setkEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 4 >> 2] = $1;
 __ZNSt3__26vectorIiNS_9allocatorIiEEE6resizeEm($0 + 12 | 0, $1);
 return;
}

function _strtoull_l($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0;
 $4 = _strtoull($0, $1, $2) | 0;
 setTempRet0(getTempRet0() | 0);
 return $4 | 0;
}

function __ZNK6vision9Exception4whatEv($0) {
 $0 = $0 | 0;
 var $1 = 0, $6 = 0;
 $1 = $0 + 4 | 0;
 if ((HEAP8[$1 + 11 >> 0] | 0) < 0) $6 = HEAP32[$1 >> 2] | 0; else $6 = $1;
 return $6 | 0;
}

function _icpDeleteHandle($0) {
 $0 = $0 | 0;
 var $$0 = 0, $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (!$1) $$0 = -1; else {
  _free($1);
  HEAP32[$0 >> 2] = 0;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNSt3__213__vector_baseItNS_9allocatorItEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function __ZNSt3__213__vector_baseIhNS_9allocatorIhEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function __ZNSt3__213__vector_baseIfNS_9allocatorIfEEED2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if ($1 | 0) {
  HEAP32[$0 + 4 >> 2] = $1;
  __ZdlPv($1);
 }
 return;
}

function _strtoll_l($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 var $4 = 0;
 $4 = _strtoll($0, $1, $2) | 0;
 setTempRet0(getTempRet0() | 0);
 return $4 | 0;
}

function _arGetPatternDetectionMode($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$0) $$0 = -1; else {
  HEAP32[$1 >> 2] = HEAP32[$0 + 24 >> 2];
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210__time_putD2Ev($0 + 8 | 0);
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getCountEv($this) {
 $this = $this | 0;
 return 3;
}

function __ZN6vision8KeyframeILi96EED2Ev($0) {
 $0 = $0 | 0;
 __ZN6vision28BinaryHierarchicalClusteringILi96EED2Ev($0 + 36 | 0);
 __ZN6vision18BinaryFeatureStoreD2Ev($0 + 8 | 0);
 return;
}

function _strtoll($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0;
 $3 = _strtox_547($0, $1, $2, 0, -2147483648) | 0;
 setTempRet0(getTempRet0() | 0);
 return $3 | 0;
}

function _pthread_getspecific($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 if ((HEAP32[$0 + 4 >> 2] | 0) != 38177486) {
  $$0 = 0;
  return $$0 | 0;
 }
 $$0 = HEAP32[$0 >> 2] | 0;
 return $$0 | 0;
}

function __ZNKSt3__28numpunctIwE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1 + 16 | 0);
 return;
}

function __ZNKSt3__28numpunctIcE11do_groupingEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2ERKS5_($0, $1 + 12 | 0);
 return;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiNSt3__212basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEEE8getCountEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZN6vision25GaussianScaleSpacePyramidD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 13500;
 __ZNSt3__213__vector_baseIN6vision5ImageENS_9allocatorIS2_EEED2Ev($0 + 4 | 0);
 return;
}

function _start_pass_merged_upsample($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = HEAP32[$0 + 452 >> 2] | 0;
 HEAP32[$2 + 36 >> 2] = 0;
 HEAP32[$2 + 44 >> 2] = HEAP32[$0 + 116 >> 2];
 return;
}

function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0;
 return (setTempRet0(b + d + (l >>> 0 < a >>> 0 | 0) >>> 0 | 0), l | 0) | 0;
}

function _arGetPattRatio($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$0) $$0 = -1; else {
  HEAPF64[$1 >> 3] = +HEAPF64[$0 + 7062416 >> 3];
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNSt3__210__time_putD2Ev($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 if (($1 | 0) != (__ZNSt3__26__clocEv() | 0)) _freelocale(HEAP32[$0 >> 2] | 0);
 return;
}

function __ZN6vision21HoughSimilarityVoting21setRefImageDimensionsEii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 HEAP32[$0 >> 2] = $1;
 HEAP32[$0 + 4 >> 2] = $2;
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE17pointer_in_bufferEPc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ($0 + 4096 | 0) >>> 0 >= $1 >>> 0 & $0 >>> 0 <= $1 >>> 0 | 0;
}

function __ZN6vision17PriorityQueueItemILi96EEC2EPKNS_4NodeILi96EEEj($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 HEAP32[$0 >> 2] = $1;
 HEAP32[$0 + 4 >> 2] = $2;
 return;
}

function __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE9matchedIdEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 24 >> 2] | 0;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE13setNumCentersEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZN6vision14BinarykMedoidsILi96EE4setkEi($0 + 12 | 0, $1);
 return;
}

function _pthread_once($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 if ((HEAP32[$0 >> 2] | 0) == 324508639) return 0;
 FUNCTION_TABLE_v[$1 & 3]();
 HEAP32[$0 >> 2] = 324508639;
 return 0;
}

function __ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _arGetImageProcMode($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$0) $$0 = -1; else {
  HEAP32[$1 >> 2] = HEAP32[$0 + 20 >> 2];
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZN6vision10FastRandomERi($0) {
 $0 = $0 | 0;
 var $3 = 0;
 $3 = ((HEAP32[$0 >> 2] | 0) * 214013 | 0) + 2531011 | 0;
 HEAP32[$0 >> 2] = $3;
 return $3 >>> 16 & 32767 | 0;
}

function __ZN12_GLOBAL__N_120register_memory_viewImEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv() | 0, 5, 45529);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIlEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv() | 0, 4, 45599);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIfEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv() | 0, 6, 45467);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIeEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv() | 0, 7, 45336);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIdEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv() | 0, 7, 45404);
 return;
}

function __ZN12_GLOBAL__N_120register_memory_viewIcEEvPKc() {
 __embind_register_memory_view(__ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv() | 0, 0, 45846);
 return;
}

function _strtoull($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 var $3 = 0;
 $3 = _strtox_547($0, $1, $2, -1, -1) | 0;
 setTempRet0(getTempRet0() | 0);
 return $3 | 0;
}

function __ZN6vision10FastMedianIfEET_PS1_i($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return +(+__ZN6vision11PartialSortIfEET_PS1_ii($0, $1, ($1 & 1) + -1 + (($1 | 0) / 2 | 0) | 0));
}

function __ZN6vision10CauchyCostIfEET_PKS1_S1_($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 return +(+__ZN6vision10CauchyCostIfEET_S1_S1_S1_(+HEAPF32[$0 >> 2], +HEAPF32[$0 + 4 >> 2], $1));
}

function __ZN12_GLOBAL__N_116register_integerIlEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIlE3getEv() | 0, 51095, 4, -2147483648, 2147483647);
 return;
}

function __ZN12_GLOBAL__N_116register_integerIiEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIiE3getEv() | 0, 51078, 4, -2147483648, 2147483647);
 return;
}

function __ZN6vision14SampleReceptorERKNS_5ImageEff($0, $1, $2) {
 $0 = $0 | 0;
 $1 = +$1;
 $2 = +$2;
 return +(+__ZN6vision22SampleReceptorBilinearERKNS_5ImageEff($0, $1, $2));
}

function b12(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 nullFunc_iiiiiiii(12);
 return 0;
}

function _new_color_map_1_quant($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$1 + 20 >> 2] = 46;
 FUNCTION_TABLE_vi[HEAP32[$1 >> 2] & 255]($0);
 return;
}

function __ZNSt3__212basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEED2Ev($0) {
 $0 = $0 | 0;
 if ((HEAP8[$0 + 8 + 3 >> 0] | 0) < 0) __ZdlPv(HEAP32[$0 >> 2] | 0);
 return;
}

function __ZNKSt3__26vectorINS0_IN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEEENS4_IS6_Lm4096EEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 268435455;
}

function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 63](a1 | 0, a2 | 0, a3 | 0) | 0;
}

function _arSetMatrixCodeType($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$0) $$0 = -1; else {
  HEAP32[$0 + 7062424 >> 2] = $1;
  $$0 = 0;
 }
 return $$0 | 0;
}

function _arGetTransMatMultiSquareRobust($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return +(+_arGetTransMatMultiSquare2($0, $1, $2, $3, 1));
}

function __ZN10__cxxabiv112_GLOBAL__N_111short_allocINS0_11string_pairELm4096EEC2ERNS0_5arenaILm4096EEE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 return;
}

function __ZNSt3__24pairIKiNS_10shared_ptrIN6vision8KeyframeILi96EEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEED2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0) {
 $0 = $0 | 0;
 if ((HEAP8[$0 + 11 >> 0] | 0) < 0) __ZdlPv(HEAP32[$0 >> 2] | 0);
 return;
}

function __ZNK6vision17PriorityQueueItemILi96EEltERKS1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return (HEAP32[$0 + 4 >> 2] | 0) >>> 0 > (HEAP32[$1 + 4 >> 2] | 0) >>> 0 | 0;
}

function __ZN6vision9ExceptionD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 13516;
 __ZNSt3__212basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 4 | 0);
 return;
}

function __ZN6vision4min3IfEET_S1_S1_S1_($0, $1, $2) {
 $0 = +$0;
 $1 = +$1;
 $2 = +$2;
 return +(+__ZN6vision4min2IfEET_S1_S1_(+__ZN6vision4min2IfEET_S1_S1_($0, $1), $2));
}

function _icpSetInlierProbability($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 var $$0 = 0;
 if (!$0) $$0 = -1; else {
  HEAPF64[$0 + 128 >> 3] = $1;
  $$0 = 0;
 }
 return $$0 | 0;
}

function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 return ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbEC2ERb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 HEAP8[$0 + 4 >> 0] = HEAP8[$1 >> 0] | 0;
 return;
}

function _strchr($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = ___strchrnul($0, $1) | 0;
 return ((HEAP8[$2 >> 0] | 0) == ($1 & 255) << 24 >> 24 ? $2 : 0) | 0;
}

function _jpeg_mem_available($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return (HEAP32[(HEAP32[$0 + 4 >> 2] | 0) + 44 >> 2] | 0) - $3 | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 __ZdlPv(HEAP32[$0 + 12 >> 2] | 0);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[13965] = 0;
 HEAP32[13964] = 16600;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[13963] = 0;
 HEAP32[13962] = 16572;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[13961] = 0;
 HEAP32[13960] = 16544;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_9money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[13959] = 0;
 HEAP32[13958] = 16516;
 return;
}

function __ZNSt3__211char_traitsIcE4moveEPcPKcm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if ($2 | 0) _memmove($0 | 0, $1 | 0, $2 | 0) | 0;
 return $0 | 0;
}

function _arImageProcLumaHistAndCDFAndMedian($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return _arImageProcLumaHistAndCDFAndPercentile($0, $1, .5, $2) | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214__shared_countD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__211char_traitsIcE4copyEPcPKcm($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if ($2 | 0) _memcpy($0 | 0, $1 | 0, $2 | 0) | 0;
 return $0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjEC2ERj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 HEAP32[$0 + 4 >> 2] = HEAP32[$1 >> 2];
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[13949] = 0;
 HEAP32[13948] = 14936;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[13947] = 0;
 HEAP32[13946] = 14884;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEEEjEERT_T0_() {
 HEAP32[13945] = 0;
 HEAP32[13944] = 14820;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEEEjEERT_T0_() {
 HEAP32[13943] = 0;
 HEAP32[13942] = 14756;
 return;
}

function __ZN12_GLOBAL__N_116register_integerIsEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIsE3getEv() | 0, 50873, 2, -32768, 32767);
 return;
}

function _arGetTransMatMultiSquare($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return +(+_arGetTransMatMultiSquare2($0, $1, $2, $3, 0));
}

function __ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__214__shared_countD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNK6vision14VisualDatabaseINS_14FREAKExtractorENS_18BinaryFeatureStoreENS_20BinaryFeatureMatcherILi96EEEE7inliersEv($0) {
 $0 = $0 | 0;
 return $0 + 12 | 0;
}

function __ZNSt3__28ios_base33__set_badbit_and_consider_rethrowEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = $0 + 16 | 0;
 HEAP32[$1 >> 2] = HEAP32[$1 >> 2] | 1;
 return;
}

function __ZN6vision8fastexp6IfEET_S1_($0) {
 $0 = +$0;
 return +((((((($0 + 6.0) * $0 + 30.0) * $0 + 120.0) * $0 + 360.0) * $0 + 720.0) * $0 + 720.0) * .0013888888);
}

function b23(p0, p1, p2, p3, p4, p5, p6) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 p6 = p6 | 0;
 nullFunc_viiiiiii(23);
}

function ___cxa_guard_acquire($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 if ((HEAP8[$0 >> 0] | 0) == 1) $$0 = 0; else {
  HEAP8[$0 >> 0] = 1;
  $$0 = 1;
 }
 return $$0 | 0;
}

function __ZN12_GLOBAL__N_116register_integerIcEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIcE3getEv() | 0, 50842, 1, -128, 127);
 return;
}

function __ZN12_GLOBAL__N_116register_integerIaEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIaE3getEv() | 0, 50847, 1, -128, 127);
 return;
}

function _icpGetXw2XcCleanup_221($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 _free($0);
 _free($1);
 _free($2);
 _free($3);
 return;
}

function __ZNSt3__26locale5facet16__on_zero_sharedEv($0) {
 $0 = $0 | 0;
 if ($0 | 0) FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 4 >> 2] & 255]($0);
 return;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN12_GLOBAL__N_116register_integerItEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDItE3getEv() | 0, 50879, 2, 0, 65535);
 return;
}

function _arMatrixSelfInv($0) {
 $0 = $0 | 0;
 var $3 = 0;
 $3 = HEAP32[$0 + 4 >> 2] | 0;
 return ((_minv(HEAP32[$0 >> 2] | 0, $3, $3) | 0) == 0) << 31 >> 31 | 0;
}

function __ZNSt3__214__ptr_in_rangeIwEEbPKT_S3_S3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return $1 >>> 0 <= $0 >>> 0 & $0 >>> 0 < $2 >>> 0 | 0;
}

function __ZNSt3__214__ptr_in_rangeIcEEbPKT_S3_S3_($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return $1 >>> 0 <= $0 >>> 0 & $0 >>> 0 < $2 >>> 0 | 0;
}

function __ZNSt11logic_errorC2EPKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = 17420;
 __ZNSt3__218__libcpp_refstringC2EPKc($0 + 4 | 0, $1);
 return;
}

function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 3](a1 | 0, a2 | 0, a3 | 0);
}

function ___cxa_is_pointer_type($0) {
 $0 = $0 | 0;
 var $3 = 0;
 if (!$0) $3 = 0; else $3 = (___dynamic_cast($0, 13232, 13320, 0) | 0) != 0 & 1;
 return $3 | 0;
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__26locale2id6__initEv($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[14474] | 0;
 HEAP32[14474] = $1 + 1;
 HEAP32[$0 + 4 >> 2] = $1 + 1;
 return;
}

function __ZN12_GLOBAL__N_116register_integerIhEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIhE3getEv() | 0, 50859, 1, 0, 255);
 return;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv() {
 return 13740;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN12_GLOBAL__N_116register_integerImEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDImE3getEv() | 0, 51100, 4, 0, -1);
 return;
}

function __ZN12_GLOBAL__N_116register_integerIjEEvPKc() {
 __embind_register_integer(__ZN10emscripten8internal6TypeIDIjE3getEv() | 0, 51082, 4, 0, -1);
 return;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiNSt3__212basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEEE3getEv() {
 return 13720;
}

function _wcslen($0) {
 $0 = $0 | 0;
 var $$0 = 0;
 $$0 = $0;
 while (1) if (!(HEAP32[$$0 >> 2] | 0)) break; else $$0 = $$0 + 4 | 0;
 return $$0 - $0 >> 2 | 0;
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE21setMinFeaturesPerNodeEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 108 >> 2] = $1;
 return;
}

function _fputs($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $2 = 0;
 $2 = _strlen($0) | 0;
 return ((_fwrite($0, 1, $2, $1) | 0) != ($2 | 0)) << 31 >> 31 | 0;
}

function _compE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $4 = 0.0;
 $4 = +HEAPF64[$0 >> 3] - +HEAPF64[$1 >> 3];
 return ($4 < 0.0 ? -1 : $4 > 0.0 & 1) | 0;
}

function ___ctype_get_mb_cur_max() {
 var $1 = 0;
 $1 = (___pthread_self_826() | 0) + 188 | 0;
 return ((HEAP32[HEAP32[$1 >> 2] >> 2] | 0) == 0 ? 1 : 4) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function b11(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 nullFunc_iiiiiii(11);
 return 0;
}

function __ZNSt3__24pairIKiNS_6vectorIiNS_9allocatorIiEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseIiNS_9allocatorIiEEED2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function __ZN6vision20BinaryFeatureMatcherILi96EED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseIN6vision7match_tENS_9allocatorIS2_EEED2Ev($0);
 return;
}

function dynCall_viid(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = +a3;
 FUNCTION_TABLE_viid[index & 3](a1 | 0, a2 | 0, +a3);
}

function ___cxx_global_var_init_1() {
 HEAP32[14041] = 0;
 HEAP32[14042] = 0;
 HEAP32[14043] = 0;
 HEAP32[14044] = 0;
 HEAP32[14045] = 1065353216;
 return;
}

function __ZN6vision6Logger11getInstanceEv() {
 if (!(HEAP8[55200] | 0)) if (___cxa_guard_acquire(55200) | 0) __ZN6vision6LoggerC2Ev(56124);
 return 56124;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewItEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIsEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewImEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIlEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIjEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIiEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIhEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIfEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIeEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIdEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIcEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDINS_11memory_viewIaEEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv() | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 14180;
 __ZNSt3__26localeD2Ev($0 + 4 | 0);
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 14116;
 __ZNSt3__26localeD2Ev($0 + 4 | 0);
 return;
}

function __ZN6vision10CopyVectorIiEEvPT_PKS1_m($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _memcpy($0 | 0, $1 | 0, $2 << 2 | 0) | 0;
 return;
}

function __ZN6vision10CopyVectorIfEEvPT_PKS1_m($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _memcpy($0 | 0, $1 | 0, $2 << 2 | 0) | 0;
 return;
}

function b10(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = +p5;
 nullFunc_iiiiiid(10);
 return 0;
}

function ___cxx_global_var_init() {
 HEAP32[14036] = 0;
 HEAP32[14037] = 0;
 HEAP32[14038] = 0;
 HEAP32[14039] = 0;
 HEAP32[14040] = 1065353216;
 return;
}

function __ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE21__on_zero_shared_weakEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZN6vision28BinaryHierarchicalClusteringILi96EE16setMaxNodesToPopEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 104 >> 2] = $1;
 return;
}

function __ZNSt3__26locale5__imp12make_classicEv() {
 __ZNSt3__212_GLOBAL__N_14makeINS_6locale5__impEjEERT_T0_();
 HEAP32[14555] = 55952;
 return 58220;
}

function __ZNK6vision18BinaryFeatureStore4sizeEv($0) {
 $0 = $0 | 0;
 return ((HEAP32[$0 + 20 >> 2] | 0) - (HEAP32[$0 + 16 >> 2] | 0) | 0) / 20 | 0 | 0;
}

function establishStackSpace(stackBase, stackMax) {
 stackBase = stackBase | 0;
 stackMax = stackMax | 0;
 STACKTOP = stackBase;
 STACK_MAX = stackMax;
}

function b4(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = +p1;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 nullFunc_iidiiii(4);
 return 0;
}

function _kpmCreateHandle($0) {
 $0 = $0 | 0;
 return __ZL19kpmCreateHandleCoreP9ARParamLTiii($0, HEAP32[$0 >> 2] | 0, HEAP32[$0 + 4 >> 2] | 0, 1) | 0;
}

function __ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE21__on_zero_shared_weakEv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function __ZN6vision10CauchyCostIfEET_S1_S1_S1_($0, $1, $2) {
 $0 = +$0;
 $1 = +$1;
 $2 = +$2;
 return +(+Math_log(+(($0 * $0 + $1 * $1) * $2 + 1.0)));
}

function __ZNKSt3__26vectorIN10__cxxabiv112_GLOBAL__N_111string_pairENS2_11short_allocIS3_Lm4096EEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 178956970;
}

function __ZN6vision15HammingDistanceILi96EEEjPKhS2_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return __ZN6vision18HammingDistance768EPKjS1_($0, $1) | 0;
}

function _reset_error_mgr($0) {
 $0 = $0 | 0;
 var $1 = 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$1 + 108 >> 2] = 0;
 HEAP32[$1 + 20 >> 2] = 0;
 return;
}

function __ZN6vision10CopyVectorIhEEvPT_PKS1_m($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _memcpy($0 | 0, $1 | 0, $2 | 0) | 0;
 return;
}

function __ZN12_GLOBAL__N_114register_floatIfEEvPKc() {
 __embind_register_float(__ZN10emscripten8internal6TypeIDIfE3getEv() | 0, 51124, 4);
 return;
}

function __ZN12_GLOBAL__N_114register_floatIdEEvPKc() {
 __embind_register_float(__ZN10emscripten8internal6TypeIDIdE3getEv() | 0, 51236, 8);
 return;
}

function _strerror($0) {
 $0 = $0 | 0;
 var $2 = 0;
 $2 = (___pthread_self_197() | 0) + 188 | 0;
 return ___strerror_l($0, HEAP32[$2 >> 2] | 0) | 0;
}

function __ZNKSt3__26vectorIN6vision25DoGScaleInvariantDetector12FeaturePointENS_9allocatorIS3_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 119304647;
}

function __ZN6vision7match_tC2Eii($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 HEAP32[$0 >> 2] = $1;
 HEAP32[$0 + 4 >> 2] = $2;
 return;
}

function __ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNKSt3__26locale5__imp9use_facetEl($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return HEAP32[(HEAP32[$0 + 8 >> 2] | 0) + ($1 << 2) >> 2] | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid4sizeEv($0) {
 $0 = $0 | 0;
 return (HEAP32[$0 + 8 >> 2] | 0) - (HEAP32[$0 + 4 >> 2] | 0) >> 5 | 0;
}

function __ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 63](a1 | 0, a2 | 0) | 0;
}

function b22(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 nullFunc_viiiiii(22);
}

function _dot($0, $1, $2, $3, $4, $5) {
 $0 = +$0;
 $1 = +$1;
 $2 = +$2;
 $3 = +$3;
 $4 = +$4;
 $5 = +$5;
 return +($0 * $3 + $1 * $4 + $2 * $5);
}

function __ZNSt3__28ios_base5clearEj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 16 >> 2] = (HEAP32[$0 + 24 >> 2] | 0) == 0 | $1;
 return;
}

function __ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__210shared_ptrIN6vision8KeyframeILi96EEEE18__enable_weak_thisEz($0, $varargs) {
 $0 = $0 | 0;
 $varargs = $varargs | 0;
 return;
}

function __ZNKSt3__26vectorINS0_INS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEEENS3_IS7_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 357913941;
}

function __ZN6vision25DoGScaleInvariantDetector21setLaplacianThresholdEf($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 HEAPF32[$0 + 52 >> 2] = $1;
 return;
}

function __ZNKSt3__25ctypeIwE9do_narrowEwc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ($1 >>> 0 < 128 ? $1 & 255 : $2) | 0;
}

function __ZNK6vision10DoGPyramid14scaleFromIndexEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ($1 | 0) % (HEAP32[$0 + 16 >> 2] | 0) | 0 | 0;
}

function __ZN6vision11ZeroVector3IfEEvPT_($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 return;
}

function __ZNSt3__211__stdoutbufIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__211__stdoutbufIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__25ctypeIcE9do_narrowEcc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ($1 << 24 >> 24 > -1 ? $1 : $2) | 0;
}

function __ZNK6vision18BinaryFeatureStore5pointEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return (HEAP32[$0 + 16 >> 2] | 0) + ($1 * 20 | 0) | 0;
}

function __ZN6vision25GaussianScaleSpacePyramidD0Ev($0) {
 $0 = $0 | 0;
 __ZN6vision25GaussianScaleSpacePyramidD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN6vision11Cofactor2x2IfEET_S1_S1_S1_S1_($0, $1, $2, $3) {
 $0 = +$0;
 $1 = +$1;
 $2 = +$2;
 $3 = +$3;
 return +($0 * $3 - $1 * $2);
}

function __ZN10__cxxabiv18is_equalEPKSt9type_infoS2_b($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ($0 | 0) == ($1 | 0) | 0;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwl($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return $0 | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return $0 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIwc11__mbstate_tEEjEERT_T0_() {
 __ZNSt3__27codecvtIwc11__mbstate_tEC2Em(55680, 1);
 return;
}

function __ZNSt3__210__stdinbufIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210__stdinbufIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNK6vision5Timer24duration_in_millisecondsEv($0) {
 $0 = $0 | 0;
 return +(+__ZNK6vision5Timer19duration_in_secondsEv($0) * 1.0e3);
}

function __ZN6vision18BinaryFeatureStore5pointEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return (HEAP32[$0 + 16 >> 2] | 0) + ($1 * 20 | 0) | 0;
}

function __ZN10__cxxabiv123__fundamental_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIbED2Ev($0) {
 $0 = $0 | 0;
 HEAP8[HEAP32[$0 >> 2] >> 0] = HEAP8[$0 + 4 >> 0] | 0;
 return;
}

function dynCall_dii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return +FUNCTION_TABLE_dii[index & 1](a1 | 0, a2 | 0);
}

function _error_exit($0) {
 $0 = $0 | 0;
 FUNCTION_TABLE_vi[HEAP32[(HEAP32[$0 >> 2] | 0) + 8 >> 2] & 255]($0);
 _jpeg_destroy($0);
 _exit(1);
}

function _wctomb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $$0 = 0;
 if (!$0) $$0 = 0; else $$0 = _wcrtomb($0, $1, 0) | 0;
 return $$0 | 0;
}

function _swapc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 $3 = _llvm_bswap_i32($0 | 0) | 0;
 return (($1 | 0) == 0 ? $0 : $3) | 0;
}

function _out_728($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 if (!(HEAP32[$0 >> 2] & 32)) ___fwritex($1, $2, $0) | 0;
 return;
}

function __ZN6vision25DoGScaleInvariantDetector16setEdgeThresholdEf($0, $1) {
 $0 = $0 | 0;
 $1 = +$1;
 HEAPF32[$0 + 56 >> 2] = $1;
 return;
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN10__cxxabiv112_GLOBAL__N_110save_valueIjED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[HEAP32[$0 >> 2] >> 2] = HEAP32[$0 + 4 >> 2];
 return;
}

function _setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if (!__THREW__) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__211char_traitsIwE3eofEv() | 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__211char_traitsIcE3eofEv() | 0;
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}

function __GLOBAL__sub_I_ARToolKitJS_cpp() {
 ___cxx_global_var_init();
 ___cxx_global_var_init_1();
 ___cxx_global_var_init_37();
 return;
}

function _jround_up($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 var $3 = 0;
 $3 = $0 + -1 + $1 | 0;
 return $3 - (($3 | 0) % ($1 | 0) | 0) | 0;
}

function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIwNS2_11char_traitsIwEENS2_9allocatorIwEEEEE3getEv() {
 return 11216;
}

function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIhNS2_11char_traitsIhEENS2_9allocatorIhEEEEE3getEv() {
 return 11240;
}

function __ZN10emscripten8internal11LightTypeIDINSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE3getEv() {
 return 11080;
}

function _largest_input_value($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ((($0 << 1 | 1) * 255 | 0) + $1 | 0) / ($1 << 1 | 0) | 0 | 0;
}

function __ZNSt3__27codecvtIwc11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__27codecvtIwc11__mbstate_tED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN6vision14BinarykMedoidsILi96EE16setNumHypothesesEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 8 >> 2] = $1;
 return;
}

function __ZN6vision10DoGPyramidD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__213__vector_baseIN6vision5ImageENS_9allocatorIS2_EEED2Ev($0);
 return;
}

function __ZNSt3__26locale5__imp11make_globalEv() {
 __ZNSt3__26localeC2ERKS0_(58228, __ZNSt3__26locale7classicEv() | 0);
 return 58228;
}

function __ZNSt11logic_errorD2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 17420;
 __ZNSt3__218__libcpp_refstringD2Ev($0 + 4 | 0);
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev($0) {
 $0 = $0 | 0;
 __ZN10__cxxabiv116__shim_type_infoD2Ev($0);
 __ZdlPv($0);
 return;
}

function b9(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 nullFunc_iiiiii(9);
 return 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDsc11__mbstate_tEEjEERT_T0_() {
 HEAP32[13925] = 0;
 HEAP32[13924] = 17168;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIDic11__mbstate_tEEjEERT_T0_() {
 HEAP32[13927] = 0;
 HEAP32[13926] = 17216;
 return;
}

function __ZNKSt3__29__num_getIcE12__do_widen_pERNS_8ios_baseEPc($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return 10736;
}

function __ZN6vision18BinaryFeatureStore21setNumBytesPerFeatureEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 return;
}

function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 63](a1 | 0, a2 | 0);
}

function _fseek($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ___fseeko($0, $1, (($1 | 0) < 0) << 31 >> 31, $2) | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7codecvtIcc11__mbstate_tEEjEERT_T0_() {
 HEAP32[13919] = 0;
 HEAP32[13918] = 17120;
 return;
}

function __ZN6vision6LoggerC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 HEAP32[$0 + 8 >> 2] = 0;
 return;
}

function _mbrlen($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return _mbrtowc(0, $0, $1, ($2 | 0) == 0 ? 56300 : $2) | 0;
}

function _jcopy_block_row($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _memcpy($1 | 0, $0 | 0, $2 << 7 | 0) | 0;
 return;
}

function _fullsize_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 HEAP32[$3 >> 2] = $2;
 return;
}

function __ZNSt3__25ctypeIcE21__classic_upper_tableEv() {
 var $0 = 0;
 $0 = ___ctype_toupper_loc() | 0;
 return HEAP32[$0 >> 2] | 0;
}

function __ZNSt3__25ctypeIcE21__classic_lower_tableEv() {
 var $0 = 0;
 $0 = ___ctype_tolower_loc() | 0;
 return HEAP32[$0 >> 2] | 0;
}

function __ZNSt3__211char_traitsIcE6assignERcRKc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 >> 0] = HEAP8[$1 >> 0] | 0;
 return;
}

function __ZNKSt3__26vectorIN6vision17PriorityQueueItemILi96EEENS_9allocatorIS3_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 536870911;
}

function b8(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = +p4;
 nullFunc_iiiiid(8);
 return 0;
}

function __ZNSt3__211char_traitsIwE6assignERwRKw($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = HEAP32[$1 >> 2];
 return;
}

function __ZN10emscripten8internal6TypeIDINS_3valEE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv() | 0;
}

function _output_value($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ((($1 | 0) / 2 | 0) + ($0 * 255 | 0) | 0) / ($1 | 0) | 0 | 0;
}

function __ZNKSt3__28ios_base6getlocEv($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 __ZNSt3__26localeC2ERKS0_($0, $1 + 28 | 0);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIcEEDnbjEERT_T0_T1_T2_() {
 __ZNSt3__25ctypeIcEC2EPKtbm(55648, 0, 0, 1);
 return;
}

function __ZNKSt3__26vectorIPNS_6locale5facetENS_15__sso_allocatorIS3_Lm28EEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 1073741823;
}

function __ZN6vision18BinomialPyramid32fD0Ev($0) {
 $0 = $0 | 0;
 __ZN6vision18BinomialPyramid32fD2Ev($0);
 __ZdlPv($0);
 return;
}

function _noop_upsample($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 HEAP32[$3 >> 2] = 0;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb1EEEjEERT_T0_() {
 HEAP32[13957] = 0;
 HEAP32[13956] = 16460;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIwLb0EEEjEERT_T0_() {
 HEAP32[13955] = 0;
 HEAP32[13954] = 16404;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb1EEEjEERT_T0_() {
 HEAP32[13953] = 0;
 HEAP32[13952] = 16348;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_10moneypunctIcLb0EEEjEERT_T0_() {
 HEAP32[13951] = 0;
 HEAP32[13950] = 16292;
 return;
}

function __ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv($0) {
 $0 = $0 | 0;
 return 2;
}

function __ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv($0) {
 $0 = $0 | 0;
 return 2;
}

function __ZNKSt3__26vectorINS0_INS_4pairIfmEENS_9allocatorIS2_EEEENS3_IS5_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 357913941;
}

function __ZNK6vision10DoGPyramid4sizeEv($0) {
 $0 = $0 | 0;
 return (HEAP32[$0 + 4 >> 2] | 0) - (HEAP32[$0 >> 2] | 0) >> 5 | 0;
}

function dynCall_vid(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = +a2;
 FUNCTION_TABLE_vid[index & 3](a1 | 0, +a2);
}

function _llvm_bswap_i32(x) {
 x = x | 0;
 return (x & 255) << 24 | (x >> 8 & 255) << 16 | (x >> 16 & 255) << 8 | x >>> 24 | 0;
}

function __ZN6vision17PriorityQueueItemILi96EEC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 0;
 HEAP32[$0 + 4 >> 2] = 0;
 return;
}

function b21(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 nullFunc_viiiii(21);
}
function _vfprintf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ___vfprintf_internal($0, $1, $2, 1, 56) | 0;
}

function _mbsinit($0) {
 $0 = $0 | 0;
 var $4 = 0;
 if (!$0) $4 = 1; else $4 = (HEAP32[$0 >> 2] | 0) == 0 & 1;
 return $4 | 0;
}

function _ar2UtilReplaceExt($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return _arUtilReplaceExt($0, $1, $2) | 0;
}

function __ZNSt3__27codecvtIDsc11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27codecvtIDic11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__217__widen_from_utf8ILm32EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZN6vision10ZeroVectorIfEEvPT_m($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _memset($0 | 0, 0, $1 << 2 | 0) | 0;
 return;
}

function __ZNSt3__27codecvtIcc11__mbstate_tED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__216__narrow_to_utf8ILm32EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiiEE8getCountEv($this) {
 $this = $this | 0;
 return 4;
}

function __ZN6vision11Cofactor2x2IfEET_S1_S1_S1_($0, $1, $2) {
 $0 = +$0;
 $1 = +$1;
 $2 = +$2;
 return +($0 * $2 - $1 * $1);
}

function __ZNSt3__24pairIKi12arControllerED2Ev($this) {
 $this = $this | 0;
 __ZN12arControllerD2Ev($this + 8 | 0);
 return;
}

function __ZNSt3__210__stdinbufIwE9underflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb($0, 0) | 0;
}

function __ZNSt3__210__stdinbufIcE9underflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb($0, 0) | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid18numScalesPerOctaveEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 20 >> 2] | 0;
}

function __ZNK6vision10DoGPyramid3getEm($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return (HEAP32[$0 >> 2] | 0) + ($1 << 5) | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviiEE8getCountEv($this) {
 $this = $this | 0;
 return 3;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvifEE8getCountEv($this) {
 $this = $this | 0;
 return 3;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJvidEE8getCountEv($this) {
 $this = $this | 0;
 return 3;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiiEE8getCountEv($this) {
 $this = $this | 0;
 return 3;
}

function __ZN6vision11SumSquares9IfEET_PKS1_($0) {
 $0 = $0 | 0;
 return +(+__ZN6vision11DotProduct9IfEET_PKS1_S3_($0, $0));
}

function __ZNSt3__215__refstring_imp12_GLOBAL__N_113data_from_repEPNS1_9_Rep_baseE($0) {
 $0 = $0 | 0;
 return $0 + 12 | 0;
}

function __ZNSt3__211char_traitsIwE11eq_int_typeEjj($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ($0 | 0) == ($1 | 0) | 0;
}

function __ZNSt3__211char_traitsIcE11eq_int_typeEii($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ($0 | 0) == ($1 | 0) | 0;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJviEE8getCountEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiiEE8getCountEv($this) {
 $this = $this | 0;
 return 2;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJdiEE8getCountEv($this) {
 $this = $this | 0;
 return 2;
}

function _vsprintf($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return _vsnprintf($0, 2147483647, $1, $2) | 0;
}

function __ZNKSt3__26vectorIPKN6vision4NodeILi96EEENS_9allocatorIS5_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 1073741823;
}

function __ZNK10emscripten8internal12WithPoliciesIJEE11ArgTypeListIJiEE8getCountEv($this) {
 $this = $this | 0;
 return 1;
}

function __ZN6vision8KeyframeILi96EE9setHeightEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 + 4 >> 2] = $1;
 return;
}

function ___loc_is_allocated($0) {
 $0 = $0 | 0;
 return ($0 | 0) != 13788 & (($0 | 0) != 0 & ($0 | 0) != 56256) & 1 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIwEEjEERT_T0_() {
 HEAP32[13985] = 0;
 HEAP32[13984] = 16660;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8messagesIcEEjEERT_T0_() {
 HEAP32[13983] = 0;
 HEAP32[13982] = 16628;
 return;
}

function __ZNSt3__210shared_ptrIhE18__enable_weak_thisEz($0, $varargs) {
 $0 = $0 | 0;
 $varargs = $varargs | 0;
 return;
}

function __ZNKSt3__26vectorIPN6vision4NodeILi96EEENS_9allocatorIS4_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 1073741823;
}

function __ZNKSt3__26vectorIN6vision12FeaturePointENS_9allocatorIS2_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 214748364;
}

function __ZNKSt3__26vectorI12multi_markerNS_9allocatorIS1_EEE8max_sizeEv($this) {
 $this = $this | 0;
 return 536870911;
}

function __ZNKSt11logic_error4whatEv($0) {
 $0 = $0 | 0;
 return __ZNKSt3__218__libcpp_refstring5c_strEv($0 + 4 | 0) | 0;
}

function __ZN6vision10ZeroVectorIhEEvPT_m($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _memset($0 | 0, 0, $1 | 0) | 0;
 return;
}

function __ZN10emscripten8internal6TypeIDIRKiE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIRKiE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIRKdE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIRKdE3getEv() | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7collateIwEEjEERT_T0_() {
 HEAP32[13911] = 0;
 HEAP32[13910] = 14724;
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_7collateIcEEjEERT_T0_() {
 HEAP32[13909] = 0;
 HEAP32[13908] = 14692;
 return;
}

function __ZNSt3__210__stdinbufIwE5uflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIwE9__getcharEb($0, 1) | 0;
}

function __ZNSt3__210__stdinbufIcE5uflowEv($0) {
 $0 = $0 | 0;
 return __ZNSt3__210__stdinbufIcE9__getcharEb($0, 1) | 0;
}

function __ZN6vision4min2IiEET_S1_S1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return (($0 | 0) < ($1 | 0) ? $0 : $1) | 0;
}

function __ZN6vision4max2IiEET_S1_S1_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return (($0 | 0) > ($1 | 0) ? $0 : $1) | 0;
}

function __ZNSt3__25ctypeIcE13classic_tableEv() {
 var $0 = 0;
 $0 = ___ctype_b_loc() | 0;
 return HEAP32[$0 >> 2] | 0;
}

function __ZNSt3__210moneypunctIwLb1EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIwLb0EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIcLb1EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIcLb0EED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 127](a1 | 0) | 0;
}

function _strncpy($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 ___stpncpy($0, $1, $2) | 0;
 return $0 | 0;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_6locale5__impEjEERT_T0_() {
 __ZNSt3__26locale5__impC2Em(55952, 1);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_5ctypeIwEEjEERT_T0_() {
 HEAP32[13917] = 0;
 HEAP32[13916] = 17052;
 return;
}

function __ZNKSt3__26vectorIN6vision7Point3dIfEENS_9allocatorIS3_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 357913941;
}

function __ZNKSt3__26vectorIN6vision7Point2dIfEENS_9allocatorIS3_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 536870911;
}

function __ZN6vision7Point2dIfEC2Ev($0) {
 $0 = $0 | 0;
 HEAPF32[$0 >> 2] = 0.0;
 HEAPF32[$0 + 4 >> 2] = 0.0;
 return;
}

function __ZN6vision4NodeILi96EE4leafEb($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP8[$0 + 100 >> 0] = $1 & 1;
 return;
}

function __ZN6vision12SafeDivisionIfEET_S1_S1_($0, $1) {
 $0 = +$0;
 $1 = +$1;
 return +($0 / ($1 == 0.0 ? 1.0 : $1));
}

function _do_read_589($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return ___string_read($0, $1, $2) | 0;
}

function ___cxx_global_var_init_374() {
 __ZN53EmscriptenBindingInitializer_native_and_builtin_typesC2Ev(0);
 return;
}

function __ZNSt3__212_GLOBAL__N_17countofIwEEmPKT_S4_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $1 - $0 >> 2 | 0;
}

function __ZN6vision8KeyframeILi96EE8setWidthEi($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 HEAP32[$0 >> 2] = $1;
 return;
}

function __ZN10emscripten8internal6TypeIDIvE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIvE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDItE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDItE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIsE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIsE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDImE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDImE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIlE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIlE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIjE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIjE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIiE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIiE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIhE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIhE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIfE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIfE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIdE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIdE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIcE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIcE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIbE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIbE3getEv() | 0;
}

function __ZN10emscripten8internal6TypeIDIaE3getEv() {
 return __ZN10emscripten8internal11LightTypeIDIaE3getEv() | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EEC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 + 4096 >> 2] = $0;
 return;
}

function b7(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 nullFunc_iiiii(7);
 return 0;
}

function _strcat($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _strcpy($0 + (_strlen($0) | 0) | 0, $1) | 0;
 return $0 | 0;
}

function _norm($0, $1, $2) {
 $0 = +$0;
 $1 = +$1;
 $2 = +$2;
 return +(+Math_sqrt(+($0 * $0 + $1 * $1 + $2 * $2)));
}

function _close_backing_store($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _fclose(HEAP32[$1 + 12 >> 2] | 0) | 0;
 return;
}

function _arImageProcFinal($0) {
 $0 = $0 | 0;
 if ($0 | 0) {
  _free(HEAP32[$0 >> 2] | 0);
  _free($0);
 }
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIwEEjEERT_T0_() {
 __ZNSt3__28numpunctIwEC2Em(55736, 1);
 return;
}

function __ZNSt3__212_GLOBAL__N_14makeINS_8numpunctIcEEjEERT_T0_() {
 __ZNSt3__28numpunctIcEC2Em(55712, 1);
 return;
}

function __ZNK6vision25GaussianScaleSpacePyramid10numOctavesEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 16 >> 2] | 0;
}

function __ZN10emscripten8internal11BindingTypeIdE10toWireTypeERKd($v) {
 $v = $v | 0;
 return +(+HEAPF64[$v >> 3]);
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EED2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 + 4096 >> 2] = 0;
 return;
}

function _isxdigit($0) {
 $0 = $0 | 0;
 return ((($0 | 32) + -97 | 0) >>> 0 < 6 | (_isdigit($0) | 0) != 0) & 1 | 0;
}

function __ZSt15get_new_handlerv() {
 var $0 = 0;
 $0 = HEAP32[14580] | 0;
 HEAP32[14580] = $0 + 0;
 return $0 | 0;
}

function __ZNSt3__29basic_iosIwNS_11char_traitsIwEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0);
 return;
}

function __ZNSt3__29basic_iosIcNS_11char_traitsIcEEED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0);
 return;
}

function __ZNSt3__215__refstring_imp12_GLOBAL__N_113rep_from_dataEPKc_986($0) {
 $0 = $0 | 0;
 return $0 + -12 | 0;
}

function __ZNKSt3__26vectorIN6vision7match_tENS_9allocatorIS2_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 536870911;
}

function __ZNK6vision28BinaryHierarchicalClusteringILi96EE12reverseIndexEv($0) {
 $0 = $0 | 0;
 return $0 + 72 | 0;
}

function __ZN6vision5TimerC2Ev($0) {
 $0 = $0 | 0;
 HEAPF64[$0 >> 3] = -1.0;
 HEAPF64[$0 + 8 >> 3] = -1.0;
 return;
}

function __ZN10emscripten8internal11BindingTypeIiE10toWireTypeERKi($v) {
 $v = $v | 0;
 return HEAP32[$v >> 2] | 0;
}

function _strrchr($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ___memrchr($0, $1, (_strlen($0) | 0) + 1 | 0) | 0;
}

function _arMatrixFree($0) {
 $0 = $0 | 0;
 if ($0 | 0) {
  _free(HEAP32[$0 >> 2] | 0);
  _free($0);
 }
 return 0;
}

function __ZNK6vision21HoughSimilarityVoting24getSubBinLocationIndicesEv($0) {
 $0 = $0 | 0;
 return $0 + 124 | 0;
}

function __ZN6vision9MaxIndex2IfEEiPKT_($0) {
 $0 = $0 | 0;
 return +HEAPF32[$0 + 4 >> 2] > +HEAPF32[$0 >> 2] | 0;
}

function dynCall_di(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return +FUNCTION_TABLE_di[index & 3](a1 | 0);
}

function __ZNSt3__26locale5facetD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__26locale5__impD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5__impD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__26vectorIN6vision5ImageENS_9allocatorIS2_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 134217727;
}

function __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE10deallocateEPcm($0) {
 $0 = $0 | 0;
 _free($0);
 return;
}

function _new_color_map_2_quant($0) {
 $0 = $0 | 0;
 HEAP32[(HEAP32[$0 + 460 >> 2] | 0) + 28 >> 2] = 1;
 return;
}

function __ZNSt3__28messagesIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28messagesIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__212_GLOBAL__N_17countofIcEEmPKT_S4_($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $1 - $0 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_15arenaILm4096EE8align_upEm($0) {
 $0 = $0 | 0;
 return $0 + 15 & -16 | 0;
}

function __ZN10__cxxabiv112_GLOBAL__N_112malloc_allocIcE8allocateEm($0) {
 $0 = $0 | 0;
 return _malloc($0) | 0;
}

function __ZSt13get_terminatev() {
 var $0 = 0;
 $0 = HEAP32[4332] | 0;
 HEAP32[4332] = $0 + 0;
 return $0 | 0;
}

function __ZNSt3__28numpunctIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28numpunctIwED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__28numpunctIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28numpunctIcED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__26vectorINS_4pairIfmEENS_9allocatorIS2_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 536870911;
}

function __ZNKSt3__26vectorINS_4pairIfiEENS_9allocatorIS2_EEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 536870911;
}

function __ZNK6vision25DoGScaleInvariantDetector6heightEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 4 >> 2] | 0;
}

function ___cxx_global_var_init_37() {
 __ZN46EmscriptenBindingInitializer_constant_bindingsC2Ev(0);
 return;
}

function __ZNSt3__27collateIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__27collateIwED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__27collateIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__27collateIcED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__25ctypeIwED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZN6vision9ExceptionD0Ev($0) {
 $0 = $0 | 0;
 __ZN6vision9ExceptionD2Ev($0);
 __ZdlPv($0);
 return;
}

function _start_input_pass($0) {
 $0 = $0 | 0;
 HEAP32[$0 + 148 >> 2] = 0;
 _start_iMCU_row_28($0);
 return;
}

function _jdiv_round_up($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ($0 + -1 + $1 | 0) / ($1 | 0) | 0 | 0;
}

function __ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED2Ev($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNK6vision21HoughSimilarityVoting18getSubBinLocationsEv($0) {
 $0 = $0 | 0;
 return $0 + 112 | 0;
}

function __ZNK6vision10DoGPyramid17numScalePerOctaveEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 16 >> 2] | 0;
}

function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 255](a1 | 0);
}

function b20(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 nullFunc_viiii(20);
}

function _createKpmHandle($cparamLT) {
 $cparamLT = $cparamLT | 0;
 return _kpmCreateHandle($cparamLT) | 0;
}

function _catgets($0, $1, $2, $3) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 $3 = $3 | 0;
 return $3 | 0;
}

function __ZNK6vision17PriorityQueueItemILi96EE4distEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 4 >> 2] | 0;
}

function ___clang_call_terminate($0) {
 $0 = $0 | 0;
 ___cxa_begin_catch($0 | 0) | 0;
 __ZSt9terminatev();
}

function __ZNSt12length_errorD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt11logic_errorD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__28numpunctIwE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 12 >> 2] | 0;
}

function __ZNKSt3__25ctypeIwE8do_widenEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $1 << 24 >> 24 | 0;
}

function _strtold_l($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return +(+_strtold($0, $1));
}

function __ZNSt3__28ios_baseD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__28ios_baseD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__25ctypeIcED0Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__25ctypeIcED2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNSt3__210moneypunctIwLb1EED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__210moneypunctIwLb0EED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__210moneypunctIcLb1EED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__210moneypunctIcLb0EED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt11logic_errorD0Ev($0) {
 $0 = $0 | 0;
 __ZNSt11logic_errorD2Ev($0);
 __ZdlPv($0);
 return;
}

function __ZNKSt3__28numpunctIwE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 8 >> 2] | 0;
}

function __ZNK6vision4NodeILi96EE4leafEv($0) {
 $0 = $0 | 0;
 return (HEAP8[$0 + 100 >> 0] | 0) != 0 | 0;
}

function __ZNK6vision25DoGScaleInvariantDetector5widthEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 >> 2] | 0;
}

function __ZNKSt3__28numpunctIcE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return HEAP8[$0 + 9 >> 0] | 0;
}

function __ZNKSt3__28numpunctIcE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return HEAP8[$0 + 8 >> 0] | 0;
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_out_of_rangeEv($0) {
 $0 = $0 | 0;
 _abort();
}

function __ZNKSt3__221__basic_string_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0 | 0;
 _abort();
}

function __ZN6vision5ImageD2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__210shared_ptrIhED2Ev($0 + 24 | 0);
 return;
}

function _strtof_l($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return +(+_strtof($0, $1));
}

function _strtod_l($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 return +(+_strtod($0, $1));
}

function __ZNSt3__220__time_get_c_storageIwEC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 17300;
 return;
}

function __ZNSt3__220__time_get_c_storageIcEC2Ev($0) {
 $0 = $0 | 0;
 HEAP32[$0 >> 2] = 17264;
 return;
}

function __ZNKSt3__220__vector_base_commonILb1EE20__throw_length_errorEv($0) {
 $0 = $0 | 0;
 _abort();
}

function __ZNK6vision17PriorityQueueItemILi96EE4nodeEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 >> 2] | 0;
}

function _jpeg_free_small($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _free($1);
 return;
}

function _jpeg_free_large($0, $1, $2) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 $2 = $2 | 0;
 _free($1);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZN10emscripten8internal11BindingTypeIiE12fromWireTypeEi($v) {
 $v = $v | 0;
 return $v | 0;
}

function _llvm_cttz_i32(x) {
 x = x | 0;
 return (x ? 31 - (Math_clz32(x ^ x - 1) | 0) | 0 : 32) | 0;
}

function _init_source($0) {
 $0 = $0 | 0;
 HEAP32[(HEAP32[$0 + 24 >> 2] | 0) + 36 >> 2] = 1;
 return;
}

function __ZNK6vision14BinarykMedoidsILi96EE1kEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 4 >> 2] | 0;
}

function __ZNK6vision25DoGScaleInvariantDetector8featuresEv($0) {
 $0 = $0 | 0;
 return $0 + 60 | 0;
}

function _jzero_far($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _memset($0 | 0, 0, $1 | 0) | 0;
 return;
}

function _icpGetXw2XcCleanup($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 _free($0);
 _free($1);
 return;
}

function _arMultiFreeConfig($0) {
 $0 = $0 | 0;
 _free(HEAP32[$0 >> 2] | 0);
 _free($0);
 return 0;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNK6vision8KeyframeILi96EE6heightEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 4 >> 2] | 0;
}

function __ZNK6vision14BinarykMedoidsILi96EE10assignmentEv($0) {
 $0 = $0 | 0;
 return $0 + 24 | 0;
}

function __ZN6vision4min2IfEET_S1_S1_($0, $1) {
 $0 = +$0;
 $1 = +$1;
 return +($0 < $1 ? $0 : $1);
}

function __ZN6vision4max2IfEET_S1_S1_($0, $1) {
 $0 = +$0;
 $1 = +$1;
 return +($0 > $1 ? $0 : $1);
}

function __ZN10emscripten8internal14asGenericValueIiEEdT_($t) {
 $t = $t | 0;
 return +(+($t | 0));
}

function _finish_input_pass($0) {
 $0 = $0 | 0;
 HEAP32[HEAP32[$0 + 436 >> 2] >> 2] = 70;
 return;
}

function __ZNSt3__28messagesIwED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__28messagesIcED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNKSt3__26vectorItNS_9allocatorItEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNKSt3__26vectorIiNS_9allocatorIiEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 1073741823;
}

function __ZNKSt3__26vectorIhNS_9allocatorIhEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 2147483647;
}

function __ZNKSt3__26vectorIfNS_9allocatorIfEEE8max_sizeEv($0) {
 $0 = $0 | 0;
 return 1073741823;
}

function __ZN6vision4log2IfEET_S1_($0) {
 $0 = +$0;
 return +(+Math_log(+$0) / .6931471824645996);
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJviiEEEE3getEv() {
 return 13676;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvifEEEE3getEv() {
 return 13664;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJvidEEEE3getEv() {
 return 13696;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiiiEEEE3getEv() {
 return 3456;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiiEEEE3getEv() {
 return 13728;
}

function b6(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 nullFunc_iiii(6);
 return 0;
}

function _isspace($0) {
 $0 = $0 | 0;
 return (($0 | 0) == 32 | ($0 + -9 | 0) >>> 0 < 5) & 1 | 0;
}

function __ZNSt3__27collateIwED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__27collateIcED2Ev($0) {
 $0 = $0 | 0;
 __ZNSt3__26locale5facetD2Ev($0);
 return;
}

function __ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__218__libcpp_refstring5c_strEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 >> 2] | 0;
}

function __ZNK6vision25GaussianScaleSpacePyramid6imagesEv($0) {
 $0 = $0 | 0;
 return $0 + 4 | 0;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJviEEEE3getEv() {
 return 13712;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiiEEEE3getEv() {
 return 13752;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJdiEEEE3getEv() {
 return 13688;
}

function __ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv($0) {
 $0 = $0 | 0;
 return 1;
}

function __ZNK6vision20BinaryFeatureMatcherILi96EE7matchesEv($0) {
 $0 = $0 | 0;
 return $0 | 0;
}

function __ZN6vision25GaussianScaleSpacePyramid6imagesEv($0) {
 $0 = $0 | 0;
 return $0 + 4 | 0;
}

function __ZN10emscripten8internal14ArgArrayGetterINS0_8TypeListIJiEEEE3getEv() {
 return 13708;
}

function __ZN10emscripten8internal11BindingTypeIfE12fromWireTypeEf($v) {
 $v = +$v;
 return +$v;
}

function __ZN10emscripten8internal11BindingTypeIdE12fromWireTypeEd($v) {
 $v = +$v;
 return +$v;
}

function ___getTypeName($ti) {
 $ti = $ti | 0;
 return ___strdup(HEAP32[$ti + 4 >> 2] | 0) | 0;
}

function _strcpy($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 ___stpcpy($0, $1) | 0;
 return $0 | 0;
}

function _freelocale($0) {
 $0 = $0 | 0;
 if (___loc_is_allocated($0) | 0) _free($0);
 return;
}

function ___lctrans($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return ___lctrans_impl($0, $1) | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 return 4;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 return 4;
}

function __ZNKSt3__25ctypeIcE8do_widenEc($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return $1 | 0;
}

function __ZNK6vision8KeyframeILi96EE5widthEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 >> 2] | 0;
}

function __ZNK6vision5Image3getIfEEPKT_v($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 24 >> 2] | 0;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewItEEE3getEv() {
 return 11168;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIsEEE3getEv() {
 return 11176;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewImEEE3getEv() {
 return 11136;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIlEEE3getEv() {
 return 11144;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIjEEE3getEv() {
 return 11152;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIiEEE3getEv() {
 return 11160;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIhEEE3getEv() {
 return 11184;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIfEEE3getEv() {
 return 11128;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIeEEE3getEv() {
 return 11112;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIdEEE3getEv() {
 return 11120;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIcEEE3getEv() {
 return 11200;
}

function __ZN10emscripten8internal11LightTypeIDINS_11memory_viewIaEEE3getEv() {
 return 11192;
}

function __ZNSt3__211char_traitsIcE12to_char_typeEi($0) {
 $0 = $0 | 0;
 return $0 & 255 | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv($0) {
 $0 = $0 | 0;
 return 1;
}

function __ZSt18uncaught_exceptionv() {
 return (__ZSt19uncaught_exceptionsv() | 0) > 0 | 0;
}

function __ZNSt3__211char_traitsIcE11to_int_typeEc($0) {
 $0 = $0 | 0;
 return $0 & 255 | 0;
}

function __ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv($0) {
 $0 = $0 | 0;
 return 127;
}

function __ZNK6vision5Image8channelsEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 16 >> 2] | 0;
}

function __ZN6vision5Image3getIfEEPT_v($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 24 >> 2] | 0;
}

function _roundf(d) {
 d = +d;
 return d >= 0.0 ? +Math_floor(d + .5) : +Math_ceil(d - .5);
}

function _arVecFree($0) {
 $0 = $0 | 0;
 _free(HEAP32[$0 >> 2] | 0);
 _free($0);
 return 0;
}

function __ZSt19uncaught_exceptionsv() {
 return (___cxa_uncaught_exception() | 0) & 1 | 0;
}

function __ZNSt3__211char_traitsIwE6lengthEPKw($0) {
 $0 = $0 | 0;
 return _wcslen($0) | 0;
}

function __ZNSt3__211char_traitsIcE6lengthEPKc($0) {
 $0 = $0 | 0;
 return _strlen($0) | 0;
}

function __ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv($0) {
 $0 = $0 | 0;
 return 1;
}

function __ZNK6vision4NodeILi96EE12reverseIndexEv($0) {
 $0 = $0 | 0;
 return $0 + 116 | 0;
}

function __ZNK6vision18BinaryFeatureStore6pointsEv($0) {
 $0 = $0 | 0;
 return $0 + 16 | 0;
}

function __ZN6vision18BinaryFeatureStore8featuresEv($0) {
 $0 = $0 | 0;
 return $0 + 4 | 0;
}

function dynCall_i(index) {
 index = index | 0;
 return FUNCTION_TABLE_i[index & 1]() | 0;
}

function _my_error_exit($0) {
 $0 = $0 | 0;
 _longjmp((HEAP32[$0 >> 2] | 0) + 132 | 0, 1);
}

function _ar3DCreateHandle($0) {
 $0 = $0 | 0;
 return _ar3DCreateHandle2($0 + 8 | 0) | 0;
}

function __ZNKSt3__28messagesIwE8do_closeEl($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNKSt3__28messagesIcE8do_closeEl($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZNKSt3__218__libcpp_refstring15__uses_refcountEv($0) {
 $0 = $0 | 0;
 return 1;
}

function __ZN6vision4NodeILi96EE12reverseIndexEv($0) {
 $0 = $0 | 0;
 return $0 + 116 | 0;
}

function __ZN6vision18BinaryFeatureStore6pointsEv($0) {
 $0 = $0 | 0;
 return $0 + 16 | 0;
}

function __ZNK6vision5Image6heightEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 8 >> 2] | 0;
}

function b19(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 nullFunc_viii(19);
}

function __ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZNK6vision5Image5widthEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 4 >> 2] | 0;
}

function __ZNK6vision5Image4stepEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 12 >> 2] | 0;
}

function __ZN6vision5roundIfEET_S1_($0) {
 $0 = +$0;
 return +(+Math_floor(+($0 + .5)));
}

function __ZN10emscripten8internal19getGenericSignatureIJiiiiiEEEPKcv() {
 return 44389;
}

function _strtold($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return +(+_strtox($0, $1, 2));
}

function _jpeg_get_small($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return _malloc($1) | 0;
}

function _jpeg_get_large($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return _malloc($1) | 0;
}

function __ZNSt3__211char_traitsIwE12to_char_typeEj($0) {
 $0 = $0 | 0;
 return $0 | 0;
}

function __ZNK6vision5Image3getEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 24 >> 2] | 0;
}

function __ZNK16NullArrayDeleterIhEclEPh($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return;
}

function __ZN10emscripten8internal19getGenericSignatureIJviiiEEEPKcv() {
 return 40735;
}

function __ZN10emscripten8internal19getGenericSignatureIJviifEEEPKcv() {
 return 40643;
}

function __ZN10emscripten8internal19getGenericSignatureIJviidEEEPKcv() {
 return 40770;
}

function __ZN10emscripten8internal19getGenericSignatureIJiiiiEEEPKcv() {
 return 43903;
}

function __ZN10emscripten8internal14asGenericValueIdEEdT_($t) {
 $t = +$t;
 return +$t;
}

function _strtof($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return +(+_strtox($0, $1, 0));
}

function _strtod($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return +(+_strtox($0, $1, 1));
}

function _setLogLevel($level) {
 $level = $level | 0;
 HEAP32[3368] = $level;
 return;
}

function __ZNSt3__211char_traitsIwE11to_int_typeEw($0) {
 $0 = $0 | 0;
 return $0 | 0;
}

function __ZNK6vision8KeyframeILi96EE5indexEv($0) {
 $0 = $0 | 0;
 return $0 + 36 | 0;
}

function __ZN6vision5Image3getEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 + 24 >> 2] | 0;
}

function __ZN10emscripten8internal19getGenericSignatureIJviiEEEPKcv() {
 return 40778;
}

function __ZN10emscripten8internal19getGenericSignatureIJiiiEEEPKcv() {
 return 43739;
}

function __ZN10emscripten8internal19getGenericSignatureIJdiiEEEPKcv() {
 return 40766;
}

function b18(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = +p2;
 nullFunc_viid(18);
}

function _isxdigit_l($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return _isxdigit($0) | 0;
}

function __ZNK6vision8KeyframeILi96EE5storeEv($0) {
 $0 = $0 | 0;
 return $0 + 8 | 0;
}

function __ZN6vision4NodeILi96EE8childrenEv($0) {
 $0 = $0 | 0;
 return $0 + 104 | 0;
}

function __ZN10emscripten8internal19getGenericSignatureIJiiEEEPKcv() {
 return 40775;
}

function ___emscripten_environ_constructor() {
 ___buildEnvironment(56832);
 return;
}

function __ZN6vision8KeyframeILi96EE5storeEv($0) {
 $0 = $0 | 0;
 return $0 + 8 | 0;
}

function _isdigit_l($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return _isdigit($0) | 0;
}

function __ZNK6vision5Image4typeEv($0) {
 $0 = $0 | 0;
 return HEAP32[$0 >> 2] | 0;
}

function _jpeg_destroy_decompress($0) {
 $0 = $0 | 0;
 _jpeg_destroy($0);
 return;
}

function _copysignl($0, $1) {
 $0 = +$0;
 $1 = +$1;
 return +(+_copysign($0, $1));
}

function ___cxx_global_var_init_640() {
 __ZNSt3__28ios_base4InitC2Ev(0);
 return;
}

function __ZN10emscripten8internal11LightTypeIDINS_3valEE3getEv() {
 return 11208;
}

function _scalbnl($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 return +(+_scalbn($0, $1));
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($0) {
 $0 = $0 | 0;
 return;
}

function b1(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 nullFunc_dii(1);
 return 0.0;
}

function _ar2UtilRemoveExt($0) {
 $0 = $0 | 0;
 return _arUtilRemoveExt($0) | 0;
}

function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 3]();
}

function _ldexp($0, $1) {
 $0 = +$0;
 $1 = $1 | 0;
 return +(+_scalbn($0, $1));
}

function __ZN6vision17PriorityQueueItemILi96EED2Ev($0) {
 $0 = $0 | 0;
 return;
}

function b5(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 nullFunc_iii(5);
 return 0;
}

function __ZNK6vision10DoGPyramid6imagesEv($0) {
 $0 = $0 | 0;
 return $0 | 0;
}

function __ZNSt3__221__throw_runtime_errorEPKc($0) {
 $0 = $0 | 0;
 _abort();
}

function __ZN10emscripten8internal11LightTypeIDIRKiE3getEv() {
 return 13408;
}

function __ZN10emscripten8internal11LightTypeIDIRKdE3getEv() {
 return 13448;
}

function __GLOBAL__sub_I_bind_cpp() {
 ___cxx_global_var_init_374();
 return;
}

function _isupper($0) {
 $0 = $0 | 0;
 return ($0 + -65 | 0) >>> 0 < 26 | 0;
}

function _isdigit($0) {
 $0 = $0 | 0;
 return ($0 + -48 | 0) >>> 0 < 10 | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZN10emscripten8internal11LightTypeIDIvE3getEv() {
 return 13352;
}

function __ZN10emscripten8internal11LightTypeIDItE3getEv() {
 return 13400;
}

function __ZN10emscripten8internal11LightTypeIDIsE3getEv() {
 return 13392;
}

function __ZN10emscripten8internal11LightTypeIDImE3getEv() {
 return 13432;
}

function __ZN10emscripten8internal11LightTypeIDIlE3getEv() {
 return 13424;
}

function __ZN10emscripten8internal11LightTypeIDIjE3getEv() {
 return 13416;
}

function __ZN10emscripten8internal11LightTypeIDIiE3getEv() {
 return 13408;
}

function __ZN10emscripten8internal11LightTypeIDIhE3getEv() {
 return 13376;
}

function __ZN10emscripten8internal11LightTypeIDIfE3getEv() {
 return 13440;
}

function __ZN10emscripten8internal11LightTypeIDIdE3getEv() {
 return 13448;
}

function __ZN10emscripten8internal11LightTypeIDIcE3getEv() {
 return 13368;
}

function __ZN10emscripten8internal11LightTypeIDIbE3getEv() {
 return 13360;
}

function __ZN10emscripten8internal11LightTypeIDIaE3getEv() {
 return 13384;
}

function _fmodl($0, $1) {
 $0 = +$0;
 $1 = +$1;
 return +(+_fmod($0, $1));
}

function _arPattCreateHandle() {
 return _arPattCreateHandle2(16, 50) | 0;
}

function _catopen($0, $1) {
 $0 = $0 | 0;
 $1 = $1 | 0;
 return -1 | 0;
}

function __GLOBAL__I_000101() {
 ___cxx_global_var_init_640();
 return;
}

function __ZN6vision3sqrIfEET_S1_($0) {
 $0 = +$0;
 return +($0 * $0);
}

function b17(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 nullFunc_vii(17);
}

function __ZN6vision14FREAKExtractorD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZN6vision11ScopedTimercvbEv($0) {
 $0 = $0 | 0;
 return 1;
}

function __ZNSt3__214__shared_countD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZN6vision12FeaturePointD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function b16(p0, p1) {
 p0 = p0 | 0;
 p1 = +p1;
 nullFunc_vid(16);
}

function __ZNSt3__26locale5facetD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt3__212__do_nothingEPv($0) {
 $0 = $0 | 0;
 return;
}

function _lroundf($0) {
 $0 = +$0;
 return ~~+_roundf(+$0) | 0;
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function b0(p0) {
 p0 = p0 | 0;
 nullFunc_di(0);
 return 0.0;
}

function _pthread_mutex_unlock($0) {
 $0 = $0 | 0;
 return 0;
}

function ___pthread_self_826() {
 return _pthread_self() | 0;
}

function ___pthread_self_604() {
 return _pthread_self() | 0;
}

function ___pthread_self_523() {
 return _pthread_self() | 0;
}

function ___pthread_self_306() {
 return _pthread_self() | 0;
}

function ___pthread_self_303() {
 return _pthread_self() | 0;
}

function ___pthread_self_300() {
 return _pthread_self() | 0;
}

function ___pthread_self_293() {
 return _pthread_self() | 0;
}

function ___pthread_self_197() {
 return _pthread_self() | 0;
}

function _pthread_cond_broadcast(x) {
 x = x | 0;
 return 0;
}

function b3(p0) {
 p0 = p0 | 0;
 nullFunc_ii(3);
 return 0;
}

function _pthread_mutex_lock($0) {
 $0 = $0 | 0;
 return 0;
}

function _dummy_consume_data($0) {
 $0 = $0 | 0;
 return 0;
}

function __Znam($0) {
 $0 = $0 | 0;
 return __Znwm($0) | 0;
}

function __ZdaPv($0) {
 $0 = $0 | 0;
 __ZdlPv($0);
 return;
}

function _finish_pass_1_quant($0) {
 $0 = $0 | 0;
 return;
}

function ___cxa_guard_release($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt9type_infoD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZNSt9exceptionD2Ev($0) {
 $0 = $0 | 0;
 return;
}

function __ZdlPv($0) {
 $0 = $0 | 0;
 _free($0);
 return;
}

function __ZNSt3__211char_traitsIwE3eofEv() {
 return -1;
}

function __ZNSt3__211char_traitsIcE3eofEv() {
 return -1;
}

function _start_pass_dcolor($0) {
 $0 = $0 | 0;
 return;
}

function _jpeg_mem_init($0) {
 $0 = $0 | 0;
 return 1e6;
}

function ___ofl_lock() {
 ___lock(56284);
 return 56292;
}

function ___cxa_guard_abort($0) {
 $0 = $0 | 0;
 return;
}

function _dummy_465($0) {
 $0 = $0 | 0;
 return $0 | 0;
}

function ___ofl_unlock() {
 ___unlock(56284);
 return;
}

function _jpeg_mem_term($0) {
 $0 = $0 | 0;
 return;
}

function _getLogLevel() {
 return HEAP32[3368] | 0;
}

function _finish_pass2($0) {
 $0 = $0 | 0;
 return;
}

function ___unlockfile($0) {
 $0 = $0 | 0;
 return;
}

function ___lockfile($0) {
 $0 = $0 | 0;
 return 1;
}

function b15(p0) {
 p0 = p0 | 0;
 nullFunc_vi(15);
}

function _term_source($0) {
 $0 = $0 | 0;
 return;
}

function __GLOBAL__sub_I_iostream_cpp() {
 return;
}

function _catclose($0) {
 $0 = $0 | 0;
 return 0;
}

function __ZSt17__throw_bad_allocv() {
 _abort();
}

function ___ctype_toupper_loc() {
 return 14084;
}

function ___ctype_tolower_loc() {
 return 14088;
}

function ___errno_location() {
 return 56280;
}

function stackSave() {
 return STACKTOP | 0;
}

function b2() {
 nullFunc_i(2);
 return 0;
}

function __get_timezone() {
 return 56828;
}

function __get_daylight() {
 return 56824;
}

function ___ctype_b_loc() {
 return 14080;
}

function _pthread_self() {
 return 13828;
}

function __get_environ() {
 return 56832;
}

function __get_tzname() {
 return 56816;
}

function b14() {
 nullFunc_v(14);
}

function _dummy() {
 return;
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_di = [b0,_getProjectionNearPlane,_getProjectionFarPlane,_getPattRatio];
var FUNCTION_TABLE_dii = [b1,__ZN10emscripten8internal7InvokerIdJiEE6invokeEPFdiEi];
var FUNCTION_TABLE_i = [b2,_getLogLevel];
var FUNCTION_TABLE_ii = [b3,__ZNK6vision9Exception4whatEv,___stdio_close,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE4syncEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9showmanycEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9underflowEv,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5uflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE4syncEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9showmanycEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9underflowEv,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5uflowEv,__ZNSt3__211__stdoutbufIwE4syncEv,__ZNSt3__211__stdoutbufIcE4syncEv,__ZNSt3__210__stdinbufIwE9underflowEv,__ZNSt3__210__stdinbufIwE5uflowEv,__ZNSt3__210__stdinbufIcE9underflowEv,__ZNSt3__210__stdinbufIcE5uflowEv,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIcE7__weeksEv,__ZNKSt3__220__time_get_c_storageIcE8__monthsEv,__ZNKSt3__220__time_get_c_storageIcE7__am_pmEv,__ZNKSt3__220__time_get_c_storageIcE3__cEv,__ZNKSt3__220__time_get_c_storageIcE3__rEv,__ZNKSt3__220__time_get_c_storageIcE3__xEv,__ZNKSt3__220__time_get_c_storageIcE3__XEv,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE13do_date_orderEv,__ZNKSt3__220__time_get_c_storageIwE7__weeksEv,__ZNKSt3__220__time_get_c_storageIwE8__monthsEv,__ZNKSt3__220__time_get_c_storageIwE7__am_pmEv
,__ZNKSt3__220__time_get_c_storageIwE3__cEv,__ZNKSt3__220__time_get_c_storageIwE3__rEv,__ZNKSt3__220__time_get_c_storageIwE3__xEv,__ZNKSt3__220__time_get_c_storageIwE3__XEv,__ZNKSt3__210moneypunctIcLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb0EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIcLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIcLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIcLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIcLb1EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb0EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb0EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb0EE14do_frac_digitsEv,__ZNKSt3__210moneypunctIwLb1EE16do_decimal_pointEv,__ZNKSt3__210moneypunctIwLb1EE16do_thousands_sepEv,__ZNKSt3__210moneypunctIwLb1EE14do_frac_digitsEv,__ZNKSt3__27codecvtIDic11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIDic11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDic11__mbstate_tE13do_max_lengthEv,__ZNKSt3__27codecvtIwc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIwc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIwc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__28numpunctIcE16do_decimal_pointEv,__ZNKSt3__28numpunctIcE16do_thousands_sepEv,__ZNKSt3__28numpunctIwE16do_decimal_pointEv,__ZNKSt3__28numpunctIwE16do_thousands_sepEv,__ZNKSt3__27codecvtIcc11__mbstate_tE11do_encodingEv,__ZNKSt3__27codecvtIcc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIcc11__mbstate_tE13do_max_lengthEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE11do_encodingEv
,__ZNKSt3__27codecvtIDsc11__mbstate_tE16do_always_noconvEv,__ZNKSt3__27codecvtIDsc11__mbstate_tE13do_max_lengthEv,__ZNKSt11logic_error4whatEv,_jpeg_std_error,_jpeg_start_decompress,_malloc,_jpeg_finish_decompress,_read_markers,_read_restart_marker,_skip_variable,_get_interesting_appn,_consume_markers,_consume_data,_dummy_consume_data,_fill_input_buffer,_teardown,_setupAR2,_getMultiMarkerCount,_loadCamera,_detectMarker,_getMarkerNum,_detectNFTMarker,_getDebugMode,_getProcessingImage,_getThresholdMode,_getThreshold,_getPatternDetectionMode,_getMatrixCodeType,_getLabelingMode,_getImageProcMode
,__ZN10emscripten8internal7InvokerIiJEE6invokeEPFivE,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3
,b3,b3,b3,b3,b3,b3,b3,b3,b3];
var FUNCTION_TABLE_iidiiii = [b4,_fmt_fp];
var FUNCTION_TABLE_iii = [b5,__ZNKSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE13__get_deleterERKSt9type_info,__ZNKSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE13__get_deleterERKSt9type_info,__ZNKSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE13__get_deleterERKSt9type_info,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE9pbackfailEi,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE8overflowEi,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE9pbackfailEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE8overflowEj,__ZNSt3__211__stdoutbufIwE8overflowEj,__ZNSt3__211__stdoutbufIcE8overflowEi,__ZNSt3__210__stdinbufIwE9pbackfailEj,__ZNSt3__210__stdinbufIcE9pbackfailEi,__ZNKSt3__25ctypeIcE10do_toupperEc,__ZNKSt3__25ctypeIcE10do_tolowerEc,__ZNKSt3__25ctypeIcE8do_widenEc,__ZNKSt3__25ctypeIwE10do_toupperEw,__ZNKSt3__25ctypeIwE10do_tolowerEw,__ZNKSt3__25ctypeIwE8do_widenEc,_compE,_jpeg_read_header,_decode_mcu,_decompress_data,_decompress_onepass,_decompress_smooth_data,_decode_mcu_AC_first,_decode_mcu_DC_first,_decode_mcu_AC_refine,_decode_mcu_DC_refine,_jpeg_resync_to_restart
,_addMarker,_addMultiMarker,_addNFTMarker,_getMultiMarkerNum,_setMarkerInfoVertex,_getTransMatMultiSquare,_getTransMatMultiSquareRobust,_getMarkerInfo,_getNFTMarkerInfo,_setDebugMode,__ZN10emscripten8internal7InvokerIiJiEE6invokeEPFiiEi,__ZN10emscripten8internal7InvokerIiJNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiS8_EPNS0_11BindingTypeIS8_EUt_E,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5,b5,b5];
var FUNCTION_TABLE_iiii = [b6,___stdio_read,___stdio_write,___stdout_write,_sn_write,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6setbufEPcl,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsgetnEPcl,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE6xsputnEPKcl,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6setbufEPwl,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsgetnEPwl,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE6xsputnEPKwl,__ZNSt3__211__stdoutbufIwE6xsputnEPKwl,__ZNSt3__211__stdoutbufIcE6xsputnEPKcl,__ZNKSt3__27collateIcE7do_hashEPKcS3_,__ZNKSt3__27collateIwE7do_hashEPKwS3_,__ZNKSt3__28messagesIcE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__28messagesIwE7do_openERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKNS_6localeE,__ZNKSt3__25ctypeIcE10do_toupperEPcPKc,__ZNKSt3__25ctypeIcE10do_tolowerEPcPKc,__ZNKSt3__25ctypeIcE9do_narrowEcc,__ZNKSt3__25ctypeIwE5do_isEtw,__ZNKSt3__25ctypeIwE10do_toupperEPwPKw,__ZNKSt3__25ctypeIwE10do_tolowerEPwPKw,__ZNKSt3__25ctypeIwE9do_narrowEwc,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,__ZNK10__cxxabiv123__fundamental_type_info9can_catchEPKNS_16__shim_type_infoERPv,_jpeg_read_scanlines,_alloc_small,_alloc_large
,_setup,_setMarkerInfoDir,_getTransMatSquare,_getTransMatSquareCont,_getMultiEachMarkerInfo,__ZN10emscripten8internal7InvokerIiJiNSt3__212basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE6invokeEPFiiS8_EiPNS0_11BindingTypeIS8_EUt_E,__ZN10emscripten8internal7InvokerIiJiiEE6invokeEPFiiiEii,_do_read_589,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6,b6
,b6,b6,b6,b6,b6];
var FUNCTION_TABLE_iiiii = [b7,___stdio_seek,__ZNKSt3__25ctypeIcE8do_widenEPKcS3_Pc,__ZNKSt3__25ctypeIwE5do_isEPKwS3_Pt,__ZNKSt3__25ctypeIwE10do_scan_isEtPKwS3_,__ZNKSt3__25ctypeIwE11do_scan_notEtPKwS3_,__ZNKSt3__25ctypeIwE8do_widenEPKcS3_Pw,_alloc_sarray,_alloc_barray,__ZN10emscripten8internal7InvokerIiJiiiEE6invokeEPFiiiiEiii,b7,b7,b7,b7,b7,b7];
var FUNCTION_TABLE_iiiiid = [b8,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcd,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEce,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwd,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwe,b8,b8,b8];
var FUNCTION_TABLE_iiiiii = [b9,__ZNKSt3__27collateIcE10do_compareEPKcS3_S3_S3_,__ZNKSt3__27collateIwE10do_compareEPKwS3_S3_S3_,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcb,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcl,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcm,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPKv,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwb,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwl,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwm,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPKv,__ZNKSt3__27codecvtIDic11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDic11__mbstate_tE9do_lengthERS1_PKcS5_m,__ZNKSt3__27codecvtIwc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIwc11__mbstate_tE9do_lengthERS1_PKcS5_m,__ZNKSt3__25ctypeIcE9do_narrowEPKcS3_cPc,__ZNKSt3__25ctypeIwE9do_narrowEPKwS3_cPc,__ZNKSt3__27codecvtIcc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIcc11__mbstate_tE9do_lengthERS1_PKcS5_m,__ZNKSt3__27codecvtIDsc11__mbstate_tE10do_unshiftERS1_PcS4_RS4_,__ZNKSt3__27codecvtIDsc11__mbstate_tE9do_lengthERS1_PKcS5_m,_access_virt_sarray,_access_virt_barray,b9,b9,b9,b9,b9,b9
,b9,b9,b9];
var FUNCTION_TABLE_iiiiiid = [b10,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEce,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwe,b10];
var FUNCTION_TABLE_iiiiiii = [b11,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRb,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRl,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRx,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRt,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjS8_,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRm,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRy,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRf,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRd,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRe,__ZNKSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjRPv,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcx,__ZNKSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcy,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwx,__ZNKSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwy,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm
,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_timeES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_dateES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE14do_get_weekdayES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE16do_get_monthnameES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE11do_get_yearES4_S4_RNS_8ios_baseERjP2tm,__ZNKSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_bRNS_8ios_baseEcRKNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_bRNS_8ios_baseEwRKNS_12basic_stringIwS3_NS_9allocatorIwEEEE,_request_virt_sarray,_request_virt_barray,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11,b11
,b11,b11,b11,b11,b11];
var FUNCTION_TABLE_iiiiiiii = [b12,__ZNKSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_putES4_RNS_8ios_baseEcPK2tmcc,__ZNKSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_putES4_RNS_8ios_baseEwPK2tmcc,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIcS3_NS_9allocatorIcEEEE,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRe,__ZNKSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_bRNS_8ios_baseERjRNS_12basic_stringIwS3_NS_9allocatorIwEEEE,b12];
var FUNCTION_TABLE_iiiiiiiii = [b13,__ZNKSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEE6do_getES4_S4_RNS_8ios_baseERjP2tmcc,__ZNKSt3__27codecvtIDic11__mbstate_tE6do_outERS1_PKDiS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDic11__mbstate_tE5do_inERS1_PKcS5_RS5_PDiS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE6do_outERS1_PKwS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIwc11__mbstate_tE5do_inERS1_PKcS5_RS5_PwS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE6do_outERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIcc11__mbstate_tE5do_inERS1_PKcS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE6do_outERS1_PKDsS5_RS5_PcS7_RS7_,__ZNKSt3__27codecvtIDsc11__mbstate_tE5do_inERS1_PKcS5_RS5_PDsS7_RS7_,b13,b13,b13,b13,b13];
var FUNCTION_TABLE_v = [b14,__ZL25default_terminate_handlerv,__ZN10__cxxabiv112_GLOBAL__N_110construct_Ev,b14];
var FUNCTION_TABLE_vi = [b15,__ZN6vision18BinomialPyramid32fD2Ev,__ZN6vision18BinomialPyramid32fD0Ev,__ZN6vision25GaussianScaleSpacePyramidD2Ev,__ZN6vision25GaussianScaleSpacePyramidD0Ev,__ZN6vision9ExceptionD2Ev,__ZN6vision9ExceptionD0Ev,__ZNSt3__214__shared_countD2Ev,__ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEED0Ev,__ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIPN6vision8KeyframeILi96EEENS_14default_deleteIS3_EENS_9allocatorIS3_EEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEED0Ev,__ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIPhNS_14default_deleteIhEENS_9allocatorIhEEE21__on_zero_shared_weakEv,__ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEED0Ev,__ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE16__on_zero_sharedEv,__ZNSt3__220__shared_ptr_pointerIPh16NullArrayDeleterIhENS_9allocatorIhEEE21__on_zero_shared_weakEv,__ZNSt3__28ios_baseD2Ev,__ZNSt3__28ios_baseD0Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED2Ev,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEED0Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED2Ev,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev
,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_istreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZNSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIcNS_11char_traitsIcEEED0Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZNSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED1Ev,__ZTv0_n12_NSt3__213basic_ostreamIwNS_11char_traitsIwEEED0Ev,__ZNSt3__211__stdoutbufIwED0Ev,__ZNSt3__211__stdoutbufIcED0Ev,__ZNSt3__210__stdinbufIwED0Ev,__ZNSt3__210__stdinbufIcED0Ev,__ZNSt3__27collateIcED2Ev,__ZNSt3__27collateIcED0Ev,__ZNSt3__26locale5facet16__on_zero_sharedEv,__ZNSt3__27collateIwED2Ev,__ZNSt3__27collateIwED0Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__27num_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__27num_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev
,__ZNSt3__28time_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__28time_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__28time_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__210moneypunctIcLb0EED2Ev,__ZNSt3__210moneypunctIcLb0EED0Ev,__ZNSt3__210moneypunctIcLb1EED2Ev,__ZNSt3__210moneypunctIcLb1EED0Ev,__ZNSt3__210moneypunctIwLb0EED2Ev,__ZNSt3__210moneypunctIwLb0EED0Ev,__ZNSt3__210moneypunctIwLb1EED2Ev,__ZNSt3__210moneypunctIwLb1EED0Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_getIcNS_19istreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_getIwNS_19istreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED2Ev,__ZNSt3__29money_putIcNS_19ostreambuf_iteratorIcNS_11char_traitsIcEEEEED0Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED2Ev,__ZNSt3__29money_putIwNS_19ostreambuf_iteratorIwNS_11char_traitsIwEEEEED0Ev,__ZNSt3__28messagesIcED2Ev,__ZNSt3__28messagesIcED0Ev,__ZNSt3__28messagesIwED2Ev,__ZNSt3__28messagesIwED0Ev,__ZNSt3__26locale5facetD2Ev,__ZNSt3__216__narrow_to_utf8ILm32EED0Ev,__ZNSt3__217__widen_from_utf8ILm32EED0Ev,__ZNSt3__27codecvtIwc11__mbstate_tED2Ev,__ZNSt3__27codecvtIwc11__mbstate_tED0Ev
,__ZNSt3__26locale5__impD2Ev,__ZNSt3__26locale5__impD0Ev,__ZNSt3__25ctypeIcED2Ev,__ZNSt3__25ctypeIcED0Ev,__ZNSt3__28numpunctIcED2Ev,__ZNSt3__28numpunctIcED0Ev,__ZNSt3__28numpunctIwED2Ev,__ZNSt3__28numpunctIwED0Ev,__ZNSt3__26locale5facetD0Ev,__ZNSt3__25ctypeIwED0Ev,__ZNSt3__27codecvtIcc11__mbstate_tED0Ev,__ZNSt3__27codecvtIDsc11__mbstate_tED0Ev,__ZNSt3__27codecvtIDic11__mbstate_tED0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZNSt11logic_errorD2Ev,__ZNSt11logic_errorD0Ev,__ZNSt12length_errorD0Ev,__ZN10__cxxabiv123__fundamental_type_infoD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,_my_error_exit,_jpeg_destroy_decompress,_realize_virt_arrays,_self_destruct,_reset_marker_reader,_reset_input_controller,_start_input_pass_33
,_finish_input_pass,_prepare_for_output_pass,_finish_output_pass,_finish_pass_1_quant,_new_color_map_1_quant,_new_color_map_2_quant,_start_pass_merged_upsample,_start_pass_dcolor,_start_pass_upsample,_start_pass,_start_pass_phuff_decoder,_start_pass_huff_decoder,_start_input_pass,_start_output_pass,_finish_pass1,_finish_pass2,_init_source,_term_source,_error_exit,_output_message,_reset_error_mgr,_setLogLevel,__ZNSt3__26locale2id6__initEv,__ZNSt3__217__call_once_proxyINS_5tupleIJONS_12_GLOBAL__N_111__fake_bindEEEEEEvPv,__ZNSt3__212__do_nothingEPv,_free,__ZN10__cxxabiv112_GLOBAL__N_19destruct_EPv,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15
,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15,b15];
var FUNCTION_TABLE_vid = [b16,_setProjectionNearPlane,_setProjectionFarPlane,_setPattRatio];
var FUNCTION_TABLE_vii = [b17,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE5imbueERKNS_6localeE,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIwE5imbueERKNS_6localeE,__ZNSt3__211__stdoutbufIcE5imbueERKNS_6localeE,__ZNSt3__210__stdinbufIwE5imbueERKNS_6localeE,__ZNSt3__210__stdinbufIcE5imbueERKNS_6localeE,__ZNKSt3__210moneypunctIcLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIcLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIcLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIcLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIcLb1EE16do_negative_signEv,__ZNKSt3__210moneypunctIcLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIcLb1EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb0EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb0EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb0EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb0EE16do_negative_signEv,__ZNKSt3__210moneypunctIwLb0EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb0EE13do_neg_formatEv,__ZNKSt3__210moneypunctIwLb1EE11do_groupingEv,__ZNKSt3__210moneypunctIwLb1EE14do_curr_symbolEv,__ZNKSt3__210moneypunctIwLb1EE16do_positive_signEv,__ZNKSt3__210moneypunctIwLb1EE16do_negative_signEv
,__ZNKSt3__210moneypunctIwLb1EE13do_pos_formatEv,__ZNKSt3__210moneypunctIwLb1EE13do_neg_formatEv,__ZNKSt3__28messagesIcE8do_closeEl,__ZNKSt3__28messagesIwE8do_closeEl,__ZNKSt3__28numpunctIcE11do_groupingEv,__ZNKSt3__28numpunctIcE11do_truenameEv,__ZNKSt3__28numpunctIcE12do_falsenameEv,__ZNKSt3__28numpunctIwE11do_groupingEv,__ZNKSt3__28numpunctIwE11do_truenameEv,__ZNKSt3__28numpunctIwE12do_falsenameEv,_jpeg_stdio_src,_free_pool,_close_backing_store,_start_pass_1_quant,_start_pass_2_quant,_start_pass_dpost,_start_pass_main_36,_skip_input_data,_emit_message,_format_message,_setThresholdMode,_setThreshold,_setPatternDetectionMode,_setMatrixCodeType,_setLabelingMode,_setImageProcMode,__ZN10emscripten8internal7InvokerIvJiEE6invokeEPFviEi,_pop_arg_long_double,b17,b17
,b17,b17,b17,b17,b17];
var FUNCTION_TABLE_viid = [b18,__ZN10emscripten8internal7InvokerIvJidEE6invokeEPFvidEid,__ZN10emscripten8internal7InvokerIvJifEE6invokeEPFvifEif,b18];
var FUNCTION_TABLE_viii = [b19,_jpeg_CreateDecompress,__ZN10emscripten8internal7InvokerIvJiiEE6invokeEPFviiEii,b19];
var FUNCTION_TABLE_viiii = [b20,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekposENS_4fposI11__mbstate_tEEj,__ZNKSt3__27collateIcE12do_transformEPKcS3_,__ZNKSt3__27collateIwE12do_transformEPKwS3_,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,_arLog,_h2v2_merged_upsample,_h2v1_merged_upsample,_noop_upsample,_fullsize_upsample,_h2v1_fancy_upsample,_h2v1_upsample,_h2v2_fancy_upsample,_h2v2_upsample,_int_upsample,_process_data_context_main,_process_data_simple_main_37,_process_data_crank_post,_prescan_quantize,_pass2_no_dither,_pass2_fs_dither,_color_quantize3,_color_quantize,_quantize_ord_dither,_quantize3_ord_dither,_quantize_fs_dither
,b20,b20,b20];
var FUNCTION_TABLE_viiiii = [b21,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,_read_backing_store,_write_backing_store,_grayscale_convert_29,_ycc_rgb_convert,_gray_rgb_convert,_null_convert_30,_ycck_cmyk_convert,_jpeg_idct_1x1,_jpeg_idct_2x2,_jpeg_idct_4x4,_jpeg_idct_islow,_jpeg_idct_ifast,_jpeg_idct_float,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21,b21
,b21,b21,b21];
var FUNCTION_TABLE_viiiiii = [b22,__ZNSt3__215basic_streambufIcNS_11char_traitsIcEEE7seekoffExNS_8ios_base7seekdirEj,__ZNSt3__215basic_streambufIwNS_11char_traitsIwEEE7seekoffExNS_8ios_base7seekdirEj,__ZNKSt3__28messagesIcE6do_getEliiRKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE,__ZNKSt3__28messagesIwE6do_getEliiRKNS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEE,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib];
var FUNCTION_TABLE_viiiiiii = [b23,_merged_2v_upsample,_merged_1v_upsample,_sep_upsample,_post_process_1pass,_post_process_prepass,_post_process_2pass,b23];

  return { __GLOBAL__I_000101: __GLOBAL__I_000101, __GLOBAL__sub_I_ARToolKitJS_cpp: __GLOBAL__sub_I_ARToolKitJS_cpp, __GLOBAL__sub_I_bind_cpp: __GLOBAL__sub_I_bind_cpp, __GLOBAL__sub_I_iostream_cpp: __GLOBAL__sub_I_iostream_cpp, __ZSt18uncaught_exceptionv: __ZSt18uncaught_exceptionv, ___cxa_can_catch: ___cxa_can_catch, ___cxa_demangle: ___cxa_demangle, ___cxa_is_pointer_type: ___cxa_is_pointer_type, ___emscripten_environ_constructor: ___emscripten_environ_constructor, ___errno_location: ___errno_location, ___getTypeName: ___getTypeName, ___muldi3: ___muldi3, ___udivdi3: ___udivdi3, __get_daylight: __get_daylight, __get_environ: __get_environ, __get_timezone: __get_timezone, __get_tzname: __get_tzname, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _emscripten_replace_memory: _emscripten_replace_memory, _fflush: _fflush, _free: _free, _i64Add: _i64Add, _i64Subtract: _i64Subtract, _llvm_bswap_i32: _llvm_bswap_i32, _malloc: _malloc, _memcpy: _memcpy, _memmove: _memmove, _memset: _memset, _pthread_cond_broadcast: _pthread_cond_broadcast, _realloc: _realloc, _roundf: _roundf, _saveSetjmp: _saveSetjmp, _sbrk: _sbrk, _setThrew: _setThrew, _testSetjmp: _testSetjmp, dynCall_di: dynCall_di, dynCall_dii: dynCall_dii, dynCall_i: dynCall_i, dynCall_ii: dynCall_ii, dynCall_iidiiii: dynCall_iidiiii, dynCall_iii: dynCall_iii, dynCall_iiii: dynCall_iiii, dynCall_iiiii: dynCall_iiiii, dynCall_iiiiid: dynCall_iiiiid, dynCall_iiiiii: dynCall_iiiiii, dynCall_iiiiiid: dynCall_iiiiiid, dynCall_iiiiiii: dynCall_iiiiiii, dynCall_iiiiiiii: dynCall_iiiiiiii, dynCall_iiiiiiiii: dynCall_iiiiiiiii, dynCall_v: dynCall_v, dynCall_vi: dynCall_vi, dynCall_vid: dynCall_vid, dynCall_vii: dynCall_vii, dynCall_viid: dynCall_viid, dynCall_viii: dynCall_viii, dynCall_viiii: dynCall_viiii, dynCall_viiiii: dynCall_viiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_viiiiiii: dynCall_viiiiiii, establishStackSpace: establishStackSpace, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
// EMSCRIPTEN_END_ASM
(asmGlobalArg, asmLibraryArg, buffer);

var real___GLOBAL__I_000101 = asm["__GLOBAL__I_000101"]; asm["__GLOBAL__I_000101"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___GLOBAL__I_000101.apply(null, arguments);
};

var real___GLOBAL__sub_I_ARToolKitJS_cpp = asm["__GLOBAL__sub_I_ARToolKitJS_cpp"]; asm["__GLOBAL__sub_I_ARToolKitJS_cpp"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___GLOBAL__sub_I_ARToolKitJS_cpp.apply(null, arguments);
};

var real___GLOBAL__sub_I_bind_cpp = asm["__GLOBAL__sub_I_bind_cpp"]; asm["__GLOBAL__sub_I_bind_cpp"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___GLOBAL__sub_I_bind_cpp.apply(null, arguments);
};

var real___GLOBAL__sub_I_iostream_cpp = asm["__GLOBAL__sub_I_iostream_cpp"]; asm["__GLOBAL__sub_I_iostream_cpp"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___GLOBAL__sub_I_iostream_cpp.apply(null, arguments);
};

var real___ZSt18uncaught_exceptionv = asm["__ZSt18uncaught_exceptionv"]; asm["__ZSt18uncaught_exceptionv"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___ZSt18uncaught_exceptionv.apply(null, arguments);
};

var real____cxa_can_catch = asm["___cxa_can_catch"]; asm["___cxa_can_catch"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____cxa_can_catch.apply(null, arguments);
};

var real____cxa_demangle = asm["___cxa_demangle"]; asm["___cxa_demangle"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____cxa_demangle.apply(null, arguments);
};

var real____cxa_is_pointer_type = asm["___cxa_is_pointer_type"]; asm["___cxa_is_pointer_type"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____cxa_is_pointer_type.apply(null, arguments);
};

var real____emscripten_environ_constructor = asm["___emscripten_environ_constructor"]; asm["___emscripten_environ_constructor"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____emscripten_environ_constructor.apply(null, arguments);
};

var real____errno_location = asm["___errno_location"]; asm["___errno_location"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____errno_location.apply(null, arguments);
};

var real____getTypeName = asm["___getTypeName"]; asm["___getTypeName"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____getTypeName.apply(null, arguments);
};

var real____muldi3 = asm["___muldi3"]; asm["___muldi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____muldi3.apply(null, arguments);
};

var real____udivdi3 = asm["___udivdi3"]; asm["___udivdi3"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real____udivdi3.apply(null, arguments);
};

var real___get_daylight = asm["__get_daylight"]; asm["__get_daylight"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___get_daylight.apply(null, arguments);
};

var real___get_environ = asm["__get_environ"]; asm["__get_environ"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___get_environ.apply(null, arguments);
};

var real___get_timezone = asm["__get_timezone"]; asm["__get_timezone"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___get_timezone.apply(null, arguments);
};

var real___get_tzname = asm["__get_tzname"]; asm["__get_tzname"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real___get_tzname.apply(null, arguments);
};

var real__bitshift64Lshr = asm["_bitshift64Lshr"]; asm["_bitshift64Lshr"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Lshr.apply(null, arguments);
};

var real__bitshift64Shl = asm["_bitshift64Shl"]; asm["_bitshift64Shl"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__bitshift64Shl.apply(null, arguments);
};

var real__fflush = asm["_fflush"]; asm["_fflush"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__fflush.apply(null, arguments);
};

var real__free = asm["_free"]; asm["_free"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__free.apply(null, arguments);
};

var real__i64Add = asm["_i64Add"]; asm["_i64Add"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__i64Add.apply(null, arguments);
};

var real__i64Subtract = asm["_i64Subtract"]; asm["_i64Subtract"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__i64Subtract.apply(null, arguments);
};

var real__llvm_bswap_i32 = asm["_llvm_bswap_i32"]; asm["_llvm_bswap_i32"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__llvm_bswap_i32.apply(null, arguments);
};

var real__malloc = asm["_malloc"]; asm["_malloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__malloc.apply(null, arguments);
};

var real__memmove = asm["_memmove"]; asm["_memmove"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__memmove.apply(null, arguments);
};

var real__pthread_cond_broadcast = asm["_pthread_cond_broadcast"]; asm["_pthread_cond_broadcast"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__pthread_cond_broadcast.apply(null, arguments);
};

var real__realloc = asm["_realloc"]; asm["_realloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__realloc.apply(null, arguments);
};

var real__roundf = asm["_roundf"]; asm["_roundf"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__roundf.apply(null, arguments);
};

var real__saveSetjmp = asm["_saveSetjmp"]; asm["_saveSetjmp"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__saveSetjmp.apply(null, arguments);
};

var real__sbrk = asm["_sbrk"]; asm["_sbrk"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__sbrk.apply(null, arguments);
};

var real__setThrew = asm["_setThrew"]; asm["_setThrew"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__setThrew.apply(null, arguments);
};

var real__testSetjmp = asm["_testSetjmp"]; asm["_testSetjmp"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real__testSetjmp.apply(null, arguments);
};

var real_establishStackSpace = asm["establishStackSpace"]; asm["establishStackSpace"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_establishStackSpace.apply(null, arguments);
};

var real_stackAlloc = asm["stackAlloc"]; asm["stackAlloc"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackAlloc.apply(null, arguments);
};

var real_stackRestore = asm["stackRestore"]; asm["stackRestore"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackRestore.apply(null, arguments);
};

var real_stackSave = asm["stackSave"]; asm["stackSave"] = function() {
  assert(runtimeInitialized, 'you need to wait for the runtime to be ready (e.g. wait for main() to be called)');
  assert(!runtimeExited, 'the runtime was exited (use NO_EXIT_RUNTIME to keep it alive after main() exits)');
  return real_stackSave.apply(null, arguments);
};
var __GLOBAL__I_000101 = Module["__GLOBAL__I_000101"] = asm["__GLOBAL__I_000101"];
var __GLOBAL__sub_I_ARToolKitJS_cpp = Module["__GLOBAL__sub_I_ARToolKitJS_cpp"] = asm["__GLOBAL__sub_I_ARToolKitJS_cpp"];
var __GLOBAL__sub_I_bind_cpp = Module["__GLOBAL__sub_I_bind_cpp"] = asm["__GLOBAL__sub_I_bind_cpp"];
var __GLOBAL__sub_I_iostream_cpp = Module["__GLOBAL__sub_I_iostream_cpp"] = asm["__GLOBAL__sub_I_iostream_cpp"];
var __ZSt18uncaught_exceptionv = Module["__ZSt18uncaught_exceptionv"] = asm["__ZSt18uncaught_exceptionv"];
var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
var ___cxa_demangle = Module["___cxa_demangle"] = asm["___cxa_demangle"];
var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
var ___emscripten_environ_constructor = Module["___emscripten_environ_constructor"] = asm["___emscripten_environ_constructor"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var ___getTypeName = Module["___getTypeName"] = asm["___getTypeName"];
var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
var __get_daylight = Module["__get_daylight"] = asm["__get_daylight"];
var __get_environ = Module["__get_environ"] = asm["__get_environ"];
var __get_timezone = Module["__get_timezone"] = asm["__get_timezone"];
var __get_tzname = Module["__get_tzname"] = asm["__get_tzname"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
var _emscripten_replace_memory = Module["_emscripten_replace_memory"] = asm["_emscripten_replace_memory"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var _free = Module["_free"] = asm["_free"];
var _i64Add = Module["_i64Add"] = asm["_i64Add"];
var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _memmove = Module["_memmove"] = asm["_memmove"];
var _memset = Module["_memset"] = asm["_memset"];
var _pthread_cond_broadcast = Module["_pthread_cond_broadcast"] = asm["_pthread_cond_broadcast"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _roundf = Module["_roundf"] = asm["_roundf"];
var _saveSetjmp = Module["_saveSetjmp"] = asm["_saveSetjmp"];
var _sbrk = Module["_sbrk"] = asm["_sbrk"];
var _setThrew = Module["_setThrew"] = asm["_setThrew"];
var _testSetjmp = Module["_testSetjmp"] = asm["_testSetjmp"];
var establishStackSpace = Module["establishStackSpace"] = asm["establishStackSpace"];
var stackAlloc = Module["stackAlloc"] = asm["stackAlloc"];
var stackRestore = Module["stackRestore"] = asm["stackRestore"];
var stackSave = Module["stackSave"] = asm["stackSave"];
var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
var dynCall_dii = Module["dynCall_dii"] = asm["dynCall_dii"];
var dynCall_i = Module["dynCall_i"] = asm["dynCall_i"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_iidiiii = Module["dynCall_iidiiii"] = asm["dynCall_iidiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iiiiid = Module["dynCall_iiiiid"] = asm["dynCall_iiiiid"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_iiiiiid = Module["dynCall_iiiiiid"] = asm["dynCall_iiiiiid"];
var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
var dynCall_iiiiiiii = Module["dynCall_iiiiiiii"] = asm["dynCall_iiiiiiii"];
var dynCall_iiiiiiiii = Module["dynCall_iiiiiiiii"] = asm["dynCall_iiiiiiiii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
;



// === Auto-generated postamble setup entry stuff ===

Module['asm'] = asm;

if (!Module["intArrayFromString"]) Module["intArrayFromString"] = function() { abort("'intArrayFromString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["intArrayToString"]) Module["intArrayToString"] = function() { abort("'intArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["ccall"]) Module["ccall"] = function() { abort("'ccall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["cwrap"]) Module["cwrap"] = function() { abort("'cwrap' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["setValue"]) Module["setValue"] = function() { abort("'setValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getValue"]) Module["getValue"] = function() { abort("'getValue' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["allocate"]) Module["allocate"] = function() { abort("'allocate' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getMemory"]) Module["getMemory"] = function() { abort("'getMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["AsciiToString"]) Module["AsciiToString"] = function() { abort("'AsciiToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToAscii"]) Module["stringToAscii"] = function() { abort("'stringToAscii' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF8ArrayToString"]) Module["UTF8ArrayToString"] = function() { abort("'UTF8ArrayToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF8ToString"]) Module["UTF8ToString"] = function() { abort("'UTF8ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF8Array"]) Module["stringToUTF8Array"] = function() { abort("'stringToUTF8Array' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF8"]) Module["stringToUTF8"] = function() { abort("'stringToUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["lengthBytesUTF8"]) Module["lengthBytesUTF8"] = function() { abort("'lengthBytesUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF16ToString"]) Module["UTF16ToString"] = function() { abort("'UTF16ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF16"]) Module["stringToUTF16"] = function() { abort("'stringToUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["lengthBytesUTF16"]) Module["lengthBytesUTF16"] = function() { abort("'lengthBytesUTF16' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["UTF32ToString"]) Module["UTF32ToString"] = function() { abort("'UTF32ToString' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stringToUTF32"]) Module["stringToUTF32"] = function() { abort("'stringToUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["lengthBytesUTF32"]) Module["lengthBytesUTF32"] = function() { abort("'lengthBytesUTF32' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["allocateUTF8"]) Module["allocateUTF8"] = function() { abort("'allocateUTF8' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackTrace"]) Module["stackTrace"] = function() { abort("'stackTrace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnPreRun"]) Module["addOnPreRun"] = function() { abort("'addOnPreRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnInit"]) Module["addOnInit"] = function() { abort("'addOnInit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnPreMain"]) Module["addOnPreMain"] = function() { abort("'addOnPreMain' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnExit"]) Module["addOnExit"] = function() { abort("'addOnExit' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addOnPostRun"]) Module["addOnPostRun"] = function() { abort("'addOnPostRun' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["writeStringToMemory"]) Module["writeStringToMemory"] = function() { abort("'writeStringToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["writeArrayToMemory"]) Module["writeArrayToMemory"] = function() { abort("'writeArrayToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["writeAsciiToMemory"]) Module["writeAsciiToMemory"] = function() { abort("'writeAsciiToMemory' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addRunDependency"]) Module["addRunDependency"] = function() { abort("'addRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["removeRunDependency"]) Module["removeRunDependency"] = function() { abort("'removeRunDependency' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["ENV"]) Module["ENV"] = function() { abort("'ENV' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["FS"]) Module["FS"] = function() { abort("'FS' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["FS_createFolder"]) Module["FS_createFolder"] = function() { abort("'FS_createFolder' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createPath"]) Module["FS_createPath"] = function() { abort("'FS_createPath' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createDataFile"]) Module["FS_createDataFile"] = function() { abort("'FS_createDataFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createPreloadedFile"]) Module["FS_createPreloadedFile"] = function() { abort("'FS_createPreloadedFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createLazyFile"]) Module["FS_createLazyFile"] = function() { abort("'FS_createLazyFile' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createLink"]) Module["FS_createLink"] = function() { abort("'FS_createLink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_createDevice"]) Module["FS_createDevice"] = function() { abort("'FS_createDevice' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["FS_unlink"]) Module["FS_unlink"] = function() { abort("'FS_unlink' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ). Alternatively, forcing filesystem support (-s FORCE_FILESYSTEM=1) can export this for you") };
if (!Module["GL"]) Module["GL"] = function() { abort("'GL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["dynamicAlloc"]) Module["dynamicAlloc"] = function() { abort("'dynamicAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["warnOnce"]) Module["warnOnce"] = function() { abort("'warnOnce' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["loadDynamicLibrary"]) Module["loadDynamicLibrary"] = function() { abort("'loadDynamicLibrary' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["loadWebAssemblyModule"]) Module["loadWebAssemblyModule"] = function() { abort("'loadWebAssemblyModule' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getLEB"]) Module["getLEB"] = function() { abort("'getLEB' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getFunctionTables"]) Module["getFunctionTables"] = function() { abort("'getFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["alignFunctionTables"]) Module["alignFunctionTables"] = function() { abort("'alignFunctionTables' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["registerFunctions"]) Module["registerFunctions"] = function() { abort("'registerFunctions' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["addFunction"]) Module["addFunction"] = function() { abort("'addFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["removeFunction"]) Module["removeFunction"] = function() { abort("'removeFunction' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getFuncWrapper"]) Module["getFuncWrapper"] = function() { abort("'getFuncWrapper' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["prettyPrint"]) Module["prettyPrint"] = function() { abort("'prettyPrint' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["makeBigInt"]) Module["makeBigInt"] = function() { abort("'makeBigInt' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["dynCall"]) Module["dynCall"] = function() { abort("'dynCall' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getCompilerSetting"]) Module["getCompilerSetting"] = function() { abort("'getCompilerSetting' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackSave"]) Module["stackSave"] = function() { abort("'stackSave' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackRestore"]) Module["stackRestore"] = function() { abort("'stackRestore' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["stackAlloc"]) Module["stackAlloc"] = function() { abort("'stackAlloc' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["establishStackSpace"]) Module["establishStackSpace"] = function() { abort("'establishStackSpace' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["print"]) Module["print"] = function() { abort("'print' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["printErr"]) Module["printErr"] = function() { abort("'printErr' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["getTempRet0"]) Module["getTempRet0"] = function() { abort("'getTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["setTempRet0"]) Module["setTempRet0"] = function() { abort("'setTempRet0' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["Pointer_stringify"]) Module["Pointer_stringify"] = function() { abort("'Pointer_stringify' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["intArrayFromBase64"]) Module["intArrayFromBase64"] = function() { abort("'intArrayFromBase64' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };
if (!Module["tryParseAsDataURI"]) Module["tryParseAsDataURI"] = function() { abort("'tryParseAsDataURI' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") };if (!Module["ALLOC_NORMAL"]) Object.defineProperty(Module, "ALLOC_NORMAL", { get: function() { abort("'ALLOC_NORMAL' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Module["ALLOC_STACK"]) Object.defineProperty(Module, "ALLOC_STACK", { get: function() { abort("'ALLOC_STACK' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Module["ALLOC_DYNAMIC"]) Object.defineProperty(Module, "ALLOC_DYNAMIC", { get: function() { abort("'ALLOC_DYNAMIC' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });
if (!Module["ALLOC_NONE"]) Object.defineProperty(Module, "ALLOC_NONE", { get: function() { abort("'ALLOC_NONE' was not exported. add it to EXTRA_EXPORTED_RUNTIME_METHODS (see the FAQ)") } });

if (memoryInitializer) {
  if (!isDataURI(memoryInitializer)) {
    memoryInitializer = locateFile(memoryInitializer);
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, GLOBAL_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      for (var i = 0; i < data.length; i++) {
        assert(HEAPU8[GLOBAL_BASE + i] === 0, "area for memory initializer should not have been touched before it's loaded");
      }
      HEAPU8.set(data, GLOBAL_BASE);
      // Delete the typed array that contains the large blob of the memory initializer request response so that
      // we won't keep unnecessary memory lying around. However, keep the XHR object itself alive so that e.g.
      // its .status field can still be accessed later.
      if (Module['memoryInitializerRequest']) delete Module['memoryInitializerRequest'].response;
      removeRunDependency('memory initializer');
    }
    var doBrowserLoad = function() {
      Module['readAsync'](memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
    var memoryInitializerBytes = tryParseAsDataURI(memoryInitializer);
    if (memoryInitializerBytes) {
      applyMemoryInitializer(memoryInitializerBytes.buffer);
    } else
    if (Module['memoryInitializerRequest']) {
      // a network request has already been created, just use that
      var useRequest = function() {
        var request = Module['memoryInitializerRequest'];
        var response = request.response;
        if (request.status !== 200 && request.status !== 0) {
          var data = tryParseAsDataURI(Module['memoryInitializerRequestURL']);
          if (data) {
            response = data.buffer;
          } else {
            // If you see this warning, the issue may be that you are using locateFile and defining it in JS. That
            // means that the HTML file doesn't know about it, and when it tries to create the mem init request early, does it to the wrong place.
            // Look in your browser's devtools network console to see what's going on.
            console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status + ', retrying ' + memoryInitializer);
            doBrowserLoad();
            return;
          }
        }
        applyMemoryInitializer(response);
      }
      if (Module['memoryInitializerRequest'].response) {
        setTimeout(useRequest, 0); // it's already here; but, apply it asynchronously
      } else {
        Module['memoryInitializerRequest'].addEventListener('load', useRequest); // wait for it
      }
    } else {
      // fetch it from the network ourselves
      doBrowserLoad();
    }
  }
}



/**
 * @constructor
 * @extends {Error}
 * @this {ExitStatus}
 */
function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}





/** @type {function(Array=)} */
function run(args) {
  args = args || Module['arguments'];

  if (runDependencies > 0) {
    return;
  }

  writeStackCookie();

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return;

    ensureInitRuntime();

    preMain();

    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
  checkStackCookie();
}
Module['run'] = run;

function checkUnflushedContent() {
  // Compiler settings do not allow exiting the runtime, so flushing
  // the streams is not possible. but in ASSERTIONS mode we check
  // if there was something to flush, and if so tell the user they
  // should request that the runtime be exitable.
  // Normally we would not even include flush() at all, but in ASSERTIONS
  // builds we do so just for this check, and here we see if there is any
  // content to flush, that is, we check if there would have been
  // something a non-ASSERTIONS build would have not seen.
  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0
  // mode (which has its own special function for this; otherwise, all
  // the code is inside libc)
  var print = out;
  var printErr = err;
  var has = false;
  out = err = function(x) {
    has = true;
  }
  try { // it doesn't matter if it fails
    var flush = Module['_fflush'];
    if (flush) flush(0);
    // also flush in the JS FS layer
    ['stdout', 'stderr'].forEach(function(name) {
      var info = FS.analyzePath('/dev/' + name);
      if (!info) return;
      var stream = info.object;
      var rdev = stream.rdev;
      var tty = TTY.ttys[rdev];
      if (tty && tty.output && tty.output.length) {
        has = true;
      }
    });
  } catch(e) {}
  out = print;
  err = printErr;
  if (has) {
    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the FAQ), or make sure to emit a newline when you printf etc.');
  }
}

function exit(status, implicit) {
  checkUnflushedContent();

  // if this is just main exit-ing implicitly, and the status is 0, then we
  // don't need to do anything here and can just leave. if the status is
  // non-zero, though, then we need to report it.
  // (we may have warned about this earlier, if a situation justifies doing so)
  if (implicit && Module['noExitRuntime'] && status === 0) {
    return;
  }

  if (Module['noExitRuntime']) {
    // if exit() was called, we may warn the user if the runtime isn't actually being shut down
    if (!implicit) {
      err('exit(' + status + ') called, but EXIT_RUNTIME is not set, so halting execution but not exiting the runtime or preventing further async execution (build with EXIT_RUNTIME=1, if you want a true shutdown)');
    }
  } else {

    ABORT = true;
    EXITSTATUS = status;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  Module['quit'](status, new ExitStatus(status));
}

var abortDecorators = [];

function abort(what) {
  if (Module['onAbort']) {
    Module['onAbort'](what);
  }

  if (what !== undefined) {
    out(what);
    err(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '';
  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = abort;

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}


  Module["noExitRuntime"] = true;

run();





// {{MODULE_ADDITIONS}}






